YES
We consider the system dgsHH.

  Alphabet:

    compose : [b -> c * a -> b * a] --> c 

  Rules:

    compose(F, G, X) => F (G X) 

We use rule removal, following [Kop12, Theorem 2.23].

This gives the following requirements (possibly using Theorems 2.25 and 2.26 in [Kop12]):

  compose(F, G, X) >? F (G X) 

We use a recursive path ordering as defined in [Kop12, Chapter 5].

We choose Lex = {} and Mul = {@_{o -> o}, compose}, and the following precedence: compose > @_{o -> o}

With these choices, we have:

  1] compose(F, G, X) > @_{o -> o}(F, @_{o -> o}(G, X))  because [2], by definition 
  2] compose*(F, G, X) >= @_{o -> o}(F, @_{o -> o}(G, X))  because compose > @_{o -> o}, [3] and [5], by (Copy) 
  3] compose*(F, G, X) >= F  because [4], by (Select) 
  4] F >= F  by (Meta) 
  5] compose*(F, G, X) >= @_{o -> o}(G, X)  because compose > @_{o -> o}, [6] and [8], by (Copy) 
  6] compose*(F, G, X) >= G  because [7], by (Select) 
  7] G >= G  by (Meta) 
  8] compose*(F, G, X) >= X  because [9], by (Select) 
  9] X >= X  by (Meta) 

We can thus remove the following rules:

  compose(F, G, X) => F (G X) 

All rules were succesfully removed.  Thus, termination of the original system has been reduced to termination of the beta-rule, which is well-known to hold.


+++ Citations +++

[Kop12]  C. Kop.  Higher Order Termination.  PhD Thesis, 2012.
