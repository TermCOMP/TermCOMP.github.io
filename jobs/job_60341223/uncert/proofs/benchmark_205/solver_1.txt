MAYBE
We consider the system ZXQoh.

  Alphabet:

    cons : [d * e] --> e 
    f : [a * a * a] --> a 
    false : [] --> c 
    filter : [d -> c * e] --> e 
    filter2 : [c * d -> c * d * e] --> e 
    g : [b * b * b] --> b 
    map : [d -> d * e] --> e 
    nil : [] --> e 
    one : [] --> a 
    true : [] --> c 
    two : [] --> a 
    zero : [] --> a 

  Rules:

    f(zero, one, X) => f(X, X, X) 
    f(X, Y, Z) => two 
    zero => two 
    one => two 
    g(X, X, Y) => Y 
    g(X, Y, Y) => X 
    map(F, nil) => nil 
    map(F, cons(X, Y)) => cons(F X, map(F, Y)) 
    filter(F, nil) => nil 
    filter(F, cons(X, Y)) => filter2(F X, F, X, Y) 
    filter2(true, F, X, Y) => cons(X, filter(F, Y)) 
    filter2(false, F, X, Y) => filter(F, Y) 

