YES
We consider the system X8rzR.

  Alphabet:

    O : [] --> A 
    afterNth : [A * A] --> A 
    and : [A * A] --> A 
    app : [A -> A * A] --> A 
    axxafterNth : [A * A] --> A 
    axxand : [A * A] --> A 
    axxfst : [A] --> A 
    axxhead : [A] --> A 
    axxisLNat : [A] --> A 
    axxisNatural : [A] --> A 
    axxisPLNat : [A] --> A 
    axxnatsFrom : [A] --> A 
    axxsel : [A * A] --> A 
    axxsnd : [A] --> A 
    axxsplitAt : [A * A] --> A 
    axxtail : [A] --> A 
    axxtake : [A * A] --> A 
    axxu101 : [A * A * A] --> A 
    axxu11 : [A * A * A] --> A 
    axxu21 : [A * A] --> A 
    axxu31 : [A * A] --> A 
    axxu41 : [A * A] --> A 
    axxu51 : [A * A * A] --> A 
    axxu61 : [A * A] --> A 
    axxu71 : [A * A] --> A 
    axxu81 : [A * A * A * A] --> A 
    axxu82 : [A * A] --> A 
    axxu91 : [A * A] --> A 
    cons : [A * A] --> A 
    fst : [A] --> A 
    head : [A] --> A 
    isLNat : [A] --> A 
    isNatural : [A] --> A 
    isPLNat : [A] --> A 
    map : [A -> A * A] --> A 
    mark : [A] --> A 
    natsFrom : [A] --> A 
    nil : [] --> A 
    pair : [A * A] --> A 
    s : [A] --> A 
    sel : [A * A] --> A 
    snd : [A] --> A 
    splitAt : [A * A] --> A 
    tail : [A] --> A 
    take : [A * A] --> A 
    tt : [] --> A 
    u101 : [A * A * A] --> A 
    u11 : [A * A * A] --> A 
    u21 : [A * A] --> A 
    u31 : [A * A] --> A 
    u41 : [A * A] --> A 
    u51 : [A * A * A] --> A 
    u61 : [A * A] --> A 
    u71 : [A * A] --> A 
    u81 : [A * A * A * A] --> A 
    u82 : [A * A] --> A 
    u91 : [A * A] --> A 

  Rules:

    axxu101(tt, X, Y) => axxfst(axxsplitAt(mark(X), mark(Y))) 
    axxu11(tt, X, Y) => axxsnd(axxsplitAt(mark(X), mark(Y))) 
    axxu21(tt, X) => mark(X) 
    axxu31(tt, X) => mark(X) 
    axxu41(tt, X) => cons(mark(X), natsFrom(s(X))) 
    axxu51(tt, X, Y) => axxhead(axxafterNth(mark(X), mark(Y))) 
    axxu61(tt, X) => mark(X) 
    axxu71(tt, X) => pair(nil, mark(X)) 
    axxu81(tt, X, Y, Z) => axxu82(axxsplitAt(mark(X), mark(Z)), Y) 
    axxu82(pair(X, Y), Z) => pair(cons(mark(Z), X), mark(Y)) 
    axxu91(tt, X) => mark(X) 
    axxafterNth(X, Y) => axxu11(axxand(axxisNatural(X), isLNat(Y)), X, Y) 
    axxand(tt, X) => mark(X) 
    axxfst(pair(X, Y)) => axxu21(axxand(axxisLNat(X), isLNat(Y)), X) 
    axxhead(cons(X, Y)) => axxu31(axxand(axxisNatural(X), isLNat(Y)), X) 
    axxisLNat(nil) => tt 
    axxisLNat(afterNth(X, Y)) => axxand(axxisNatural(X), isLNat(Y)) 
    axxisLNat(cons(X, Y)) => axxand(axxisNatural(X), isLNat(Y)) 
    axxisLNat(fst(X)) => axxisPLNat(X) 
    axxisLNat(natsFrom(X)) => axxisNatural(X) 
    axxisLNat(snd(X)) => axxisPLNat(X) 
    axxisLNat(tail(X)) => axxisLNat(X) 
    axxisLNat(take(X, Y)) => axxand(axxisNatural(X), isLNat(Y)) 
    axxisNatural(O) => tt 
    axxisNatural(head(X)) => axxisLNat(X) 
    axxisNatural(s(X)) => axxisNatural(X) 
    axxisNatural(sel(X, Y)) => axxand(axxisNatural(X), isLNat(Y)) 
    axxisPLNat(pair(X, Y)) => axxand(axxisLNat(X), isLNat(Y)) 
    axxisPLNat(splitAt(X, Y)) => axxand(axxisNatural(X), isLNat(Y)) 
    axxnatsFrom(X) => axxu41(axxisNatural(X), X) 
    axxsel(X, Y) => axxu51(axxand(axxisNatural(X), isLNat(Y)), X, Y) 
    axxsnd(pair(X, Y)) => axxu61(axxand(axxisLNat(X), isLNat(Y)), Y) 
    axxsplitAt(O, X) => axxu71(axxisLNat(X), X) 
    axxsplitAt(s(X), cons(Y, Z)) => axxu81(axxand(axxisNatural(X), and(isNatural(Y), isLNat(Z))), X, Y, Z) 
    axxtail(cons(X, Y)) => axxu91(axxand(axxisNatural(X), isLNat(Y)), Y) 
    axxtake(X, Y) => axxu101(axxand(axxisNatural(X), isLNat(Y)), X, Y) 
    mark(u101(X, Y, Z)) => axxu101(mark(X), Y, Z) 
    mark(fst(X)) => axxfst(mark(X)) 
    mark(splitAt(X, Y)) => axxsplitAt(mark(X), mark(Y)) 
    mark(u11(X, Y, Z)) => axxu11(mark(X), Y, Z) 
    mark(snd(X)) => axxsnd(mark(X)) 
    mark(u21(X, Y)) => axxu21(mark(X), Y) 
    mark(u31(X, Y)) => axxu31(mark(X), Y) 
    mark(u41(X, Y)) => axxu41(mark(X), Y) 
    mark(natsFrom(X)) => axxnatsFrom(mark(X)) 
    mark(u51(X, Y, Z)) => axxu51(mark(X), Y, Z) 
    mark(head(X)) => axxhead(mark(X)) 
    mark(afterNth(X, Y)) => axxafterNth(mark(X), mark(Y)) 
    mark(u61(X, Y)) => axxu61(mark(X), Y) 
    mark(u71(X, Y)) => axxu71(mark(X), Y) 
    mark(u81(X, Y, Z, U)) => axxu81(mark(X), Y, Z, U) 
    mark(u82(X, Y)) => axxu82(mark(X), Y) 
    mark(u91(X, Y)) => axxu91(mark(X), Y) 
    mark(and(X, Y)) => axxand(mark(X), Y) 
    mark(isNatural(X)) => axxisNatural(X) 
    mark(isLNat(X)) => axxisLNat(X) 
    mark(isPLNat(X)) => axxisPLNat(X) 
    mark(tail(X)) => axxtail(mark(X)) 
    mark(take(X, Y)) => axxtake(mark(X), mark(Y)) 
    mark(sel(X, Y)) => axxsel(mark(X), mark(Y)) 
    mark(tt) => tt 
    mark(cons(X, Y)) => cons(mark(X), Y) 
    mark(s(X)) => s(mark(X)) 
    mark(pair(X, Y)) => pair(mark(X), mark(Y)) 
    mark(nil) => nil 
    mark(O) => O 
    axxu101(X, Y, Z) => u101(X, Y, Z) 
    axxfst(X) => fst(X) 
    axxsplitAt(X, Y) => splitAt(X, Y) 
    axxu11(X, Y, Z) => u11(X, Y, Z) 
    axxsnd(X) => snd(X) 
    axxu21(X, Y) => u21(X, Y) 
    axxu31(X, Y) => u31(X, Y) 
    axxu41(X, Y) => u41(X, Y) 
    axxnatsFrom(X) => natsFrom(X) 
    axxu51(X, Y, Z) => u51(X, Y, Z) 
    axxhead(X) => head(X) 
    axxafterNth(X, Y) => afterNth(X, Y) 
    axxu61(X, Y) => u61(X, Y) 
    axxu71(X, Y) => u71(X, Y) 
    axxu81(X, Y, Z, U) => u81(X, Y, Z, U) 
    axxu82(X, Y) => u82(X, Y) 
    axxu91(X, Y) => u91(X, Y) 
    axxand(X, Y) => and(X, Y) 
    axxisNatural(X) => isNatural(X) 
    axxisLNat(X) => isLNat(X) 
    axxisPLNat(X) => isPLNat(X) 
    axxtail(X) => tail(X) 
    axxtake(X, Y) => take(X, Y) 
    axxsel(X, Y) => sel(X, Y) 
    map(F, nil) => nil 
    app(F, X) => F X 

Symbol app is an encoding for application that is only used in innocuous ways.  We can simplify the program (without losing non-termination) by removing it.  This gives:

  Alphabet:

    O : [] --> A 
    afterNth : [A * A] --> A 
    and : [A * A] --> A 
    axxafterNth : [A * A] --> A 
    axxand : [A * A] --> A 
    axxfst : [A] --> A 
    axxhead : [A] --> A 
    axxisLNat : [A] --> A 
    axxisNatural : [A] --> A 
    axxisPLNat : [A] --> A 
    axxnatsFrom : [A] --> A 
    axxsel : [A * A] --> A 
    axxsnd : [A] --> A 
    axxsplitAt : [A * A] --> A 
    axxtail : [A] --> A 
    axxtake : [A * A] --> A 
    axxu101 : [A * A * A] --> A 
    axxu11 : [A * A * A] --> A 
    axxu21 : [A * A] --> A 
    axxu31 : [A * A] --> A 
    axxu41 : [A * A] --> A 
    axxu51 : [A * A * A] --> A 
    axxu61 : [A * A] --> A 
    axxu71 : [A * A] --> A 
    axxu81 : [A * A * A * A] --> A 
    axxu82 : [A * A] --> A 
    axxu91 : [A * A] --> A 
    cons : [A * A] --> A 
    fst : [A] --> A 
    head : [A] --> A 
    isLNat : [A] --> A 
    isNatural : [A] --> A 
    isPLNat : [A] --> A 
    map : [A -> A * A] --> A 
    mark : [A] --> A 
    natsFrom : [A] --> A 
    nil : [] --> A 
    pair : [A * A] --> A 
    s : [A] --> A 
    sel : [A * A] --> A 
    snd : [A] --> A 
    splitAt : [A * A] --> A 
    tail : [A] --> A 
    take : [A * A] --> A 
    tt : [] --> A 
    u101 : [A * A * A] --> A 
    u11 : [A * A * A] --> A 
    u21 : [A * A] --> A 
    u31 : [A * A] --> A 
    u41 : [A * A] --> A 
    u51 : [A * A * A] --> A 
    u61 : [A * A] --> A 
    u71 : [A * A] --> A 
    u81 : [A * A * A * A] --> A 
    u82 : [A * A] --> A 
    u91 : [A * A] --> A 

  Rules:

    axxu101(tt, X, Y) => axxfst(axxsplitAt(mark(X), mark(Y))) 
    axxu11(tt, X, Y) => axxsnd(axxsplitAt(mark(X), mark(Y))) 
    axxu21(tt, X) => mark(X) 
    axxu31(tt, X) => mark(X) 
    axxu41(tt, X) => cons(mark(X), natsFrom(s(X))) 
    axxu51(tt, X, Y) => axxhead(axxafterNth(mark(X), mark(Y))) 
    axxu61(tt, X) => mark(X) 
    axxu71(tt, X) => pair(nil, mark(X)) 
    axxu81(tt, X, Y, Z) => axxu82(axxsplitAt(mark(X), mark(Z)), Y) 
    axxu82(pair(X, Y), Z) => pair(cons(mark(Z), X), mark(Y)) 
    axxu91(tt, X) => mark(X) 
    axxafterNth(X, Y) => axxu11(axxand(axxisNatural(X), isLNat(Y)), X, Y) 
    axxand(tt, X) => mark(X) 
    axxfst(pair(X, Y)) => axxu21(axxand(axxisLNat(X), isLNat(Y)), X) 
    axxhead(cons(X, Y)) => axxu31(axxand(axxisNatural(X), isLNat(Y)), X) 
    axxisLNat(nil) => tt 
    axxisLNat(afterNth(X, Y)) => axxand(axxisNatural(X), isLNat(Y)) 
    axxisLNat(cons(X, Y)) => axxand(axxisNatural(X), isLNat(Y)) 
    axxisLNat(fst(X)) => axxisPLNat(X) 
    axxisLNat(natsFrom(X)) => axxisNatural(X) 
    axxisLNat(snd(X)) => axxisPLNat(X) 
    axxisLNat(tail(X)) => axxisLNat(X) 
    axxisLNat(take(X, Y)) => axxand(axxisNatural(X), isLNat(Y)) 
    axxisNatural(O) => tt 
    axxisNatural(head(X)) => axxisLNat(X) 
    axxisNatural(s(X)) => axxisNatural(X) 
    axxisNatural(sel(X, Y)) => axxand(axxisNatural(X), isLNat(Y)) 
    axxisPLNat(pair(X, Y)) => axxand(axxisLNat(X), isLNat(Y)) 
    axxisPLNat(splitAt(X, Y)) => axxand(axxisNatural(X), isLNat(Y)) 
    axxnatsFrom(X) => axxu41(axxisNatural(X), X) 
    axxsel(X, Y) => axxu51(axxand(axxisNatural(X), isLNat(Y)), X, Y) 
    axxsnd(pair(X, Y)) => axxu61(axxand(axxisLNat(X), isLNat(Y)), Y) 
    axxsplitAt(O, X) => axxu71(axxisLNat(X), X) 
    axxsplitAt(s(X), cons(Y, Z)) => axxu81(axxand(axxisNatural(X), and(isNatural(Y), isLNat(Z))), X, Y, Z) 
    axxtail(cons(X, Y)) => axxu91(axxand(axxisNatural(X), isLNat(Y)), Y) 
    axxtake(X, Y) => axxu101(axxand(axxisNatural(X), isLNat(Y)), X, Y) 
    mark(u101(X, Y, Z)) => axxu101(mark(X), Y, Z) 
    mark(fst(X)) => axxfst(mark(X)) 
    mark(splitAt(X, Y)) => axxsplitAt(mark(X), mark(Y)) 
    mark(u11(X, Y, Z)) => axxu11(mark(X), Y, Z) 
    mark(snd(X)) => axxsnd(mark(X)) 
    mark(u21(X, Y)) => axxu21(mark(X), Y) 
    mark(u31(X, Y)) => axxu31(mark(X), Y) 
    mark(u41(X, Y)) => axxu41(mark(X), Y) 
    mark(natsFrom(X)) => axxnatsFrom(mark(X)) 
    mark(u51(X, Y, Z)) => axxu51(mark(X), Y, Z) 
    mark(head(X)) => axxhead(mark(X)) 
    mark(afterNth(X, Y)) => axxafterNth(mark(X), mark(Y)) 
    mark(u61(X, Y)) => axxu61(mark(X), Y) 
    mark(u71(X, Y)) => axxu71(mark(X), Y) 
    mark(u81(X, Y, Z, U)) => axxu81(mark(X), Y, Z, U) 
    mark(u82(X, Y)) => axxu82(mark(X), Y) 
    mark(u91(X, Y)) => axxu91(mark(X), Y) 
    mark(and(X, Y)) => axxand(mark(X), Y) 
    mark(isNatural(X)) => axxisNatural(X) 
    mark(isLNat(X)) => axxisLNat(X) 
    mark(isPLNat(X)) => axxisPLNat(X) 
    mark(tail(X)) => axxtail(mark(X)) 
    mark(take(X, Y)) => axxtake(mark(X), mark(Y)) 
    mark(sel(X, Y)) => axxsel(mark(X), mark(Y)) 
    mark(tt) => tt 
    mark(cons(X, Y)) => cons(mark(X), Y) 
    mark(s(X)) => s(mark(X)) 
    mark(pair(X, Y)) => pair(mark(X), mark(Y)) 
    mark(nil) => nil 
    mark(O) => O 
    axxu101(X, Y, Z) => u101(X, Y, Z) 
    axxfst(X) => fst(X) 
    axxsplitAt(X, Y) => splitAt(X, Y) 
    axxu11(X, Y, Z) => u11(X, Y, Z) 
    axxsnd(X) => snd(X) 
    axxu21(X, Y) => u21(X, Y) 
    axxu31(X, Y) => u31(X, Y) 
    axxu41(X, Y) => u41(X, Y) 
    axxnatsFrom(X) => natsFrom(X) 
    axxu51(X, Y, Z) => u51(X, Y, Z) 
    axxhead(X) => head(X) 
    axxafterNth(X, Y) => afterNth(X, Y) 
    axxu61(X, Y) => u61(X, Y) 
    axxu71(X, Y) => u71(X, Y) 
    axxu81(X, Y, Z, U) => u81(X, Y, Z, U) 
    axxu82(X, Y) => u82(X, Y) 
    axxu91(X, Y) => u91(X, Y) 
    axxand(X, Y) => and(X, Y) 
    axxisNatural(X) => isNatural(X) 
    axxisLNat(X) => isLNat(X) 
    axxisPLNat(X) => isPLNat(X) 
    axxtail(X) => tail(X) 
    axxtake(X, Y) => take(X, Y) 
    axxsel(X, Y) => sel(X, Y) 
    map(F, nil) => nil 

We observe that the rules contain a first-order subset:

  axxu101(tt, X, Y) => axxfst(axxsplitAt(mark(X), mark(Y))) 
  axxu11(tt, X, Y) => axxsnd(axxsplitAt(mark(X), mark(Y))) 
  axxu21(tt, X) => mark(X) 
  axxu31(tt, X) => mark(X) 
  axxu41(tt, X) => cons(mark(X), natsFrom(s(X))) 
  axxu51(tt, X, Y) => axxhead(axxafterNth(mark(X), mark(Y))) 
  axxu61(tt, X) => mark(X) 
  axxu71(tt, X) => pair(nil, mark(X)) 
  axxu81(tt, X, Y, Z) => axxu82(axxsplitAt(mark(X), mark(Z)), Y) 
  axxu82(pair(X, Y), Z) => pair(cons(mark(Z), X), mark(Y)) 
  axxu91(tt, X) => mark(X) 
  axxafterNth(X, Y) => axxu11(axxand(axxisNatural(X), isLNat(Y)), X, Y) 
  axxand(tt, X) => mark(X) 
  axxfst(pair(X, Y)) => axxu21(axxand(axxisLNat(X), isLNat(Y)), X) 
  axxhead(cons(X, Y)) => axxu31(axxand(axxisNatural(X), isLNat(Y)), X) 
  axxisLNat(nil) => tt 
  axxisLNat(afterNth(X, Y)) => axxand(axxisNatural(X), isLNat(Y)) 
  axxisLNat(cons(X, Y)) => axxand(axxisNatural(X), isLNat(Y)) 
  axxisLNat(fst(X)) => axxisPLNat(X) 
  axxisLNat(natsFrom(X)) => axxisNatural(X) 
  axxisLNat(snd(X)) => axxisPLNat(X) 
  axxisLNat(tail(X)) => axxisLNat(X) 
  axxisLNat(take(X, Y)) => axxand(axxisNatural(X), isLNat(Y)) 
  axxisNatural(O) => tt 
  axxisNatural(head(X)) => axxisLNat(X) 
  axxisNatural(s(X)) => axxisNatural(X) 
  axxisNatural(sel(X, Y)) => axxand(axxisNatural(X), isLNat(Y)) 
  axxisPLNat(pair(X, Y)) => axxand(axxisLNat(X), isLNat(Y)) 
  axxisPLNat(splitAt(X, Y)) => axxand(axxisNatural(X), isLNat(Y)) 
  axxnatsFrom(X) => axxu41(axxisNatural(X), X) 
  axxsel(X, Y) => axxu51(axxand(axxisNatural(X), isLNat(Y)), X, Y) 
  axxsnd(pair(X, Y)) => axxu61(axxand(axxisLNat(X), isLNat(Y)), Y) 
  axxsplitAt(O, X) => axxu71(axxisLNat(X), X) 
  axxsplitAt(s(X), cons(Y, Z)) => axxu81(axxand(axxisNatural(X), and(isNatural(Y), isLNat(Z))), X, Y, Z) 
  axxtail(cons(X, Y)) => axxu91(axxand(axxisNatural(X), isLNat(Y)), Y) 
  axxtake(X, Y) => axxu101(axxand(axxisNatural(X), isLNat(Y)), X, Y) 
  mark(u101(X, Y, Z)) => axxu101(mark(X), Y, Z) 
  mark(fst(X)) => axxfst(mark(X)) 
  mark(splitAt(X, Y)) => axxsplitAt(mark(X), mark(Y)) 
  mark(u11(X, Y, Z)) => axxu11(mark(X), Y, Z) 
  mark(snd(X)) => axxsnd(mark(X)) 
  mark(u21(X, Y)) => axxu21(mark(X), Y) 
  mark(u31(X, Y)) => axxu31(mark(X), Y) 
  mark(u41(X, Y)) => axxu41(mark(X), Y) 
  mark(natsFrom(X)) => axxnatsFrom(mark(X)) 
  mark(u51(X, Y, Z)) => axxu51(mark(X), Y, Z) 
  mark(head(X)) => axxhead(mark(X)) 
  mark(afterNth(X, Y)) => axxafterNth(mark(X), mark(Y)) 
  mark(u61(X, Y)) => axxu61(mark(X), Y) 
  mark(u71(X, Y)) => axxu71(mark(X), Y) 
  mark(u81(X, Y, Z, U)) => axxu81(mark(X), Y, Z, U) 
  mark(u82(X, Y)) => axxu82(mark(X), Y) 
  mark(u91(X, Y)) => axxu91(mark(X), Y) 
  mark(and(X, Y)) => axxand(mark(X), Y) 
  mark(isNatural(X)) => axxisNatural(X) 
  mark(isLNat(X)) => axxisLNat(X) 
  mark(isPLNat(X)) => axxisPLNat(X) 
  mark(tail(X)) => axxtail(mark(X)) 
  mark(take(X, Y)) => axxtake(mark(X), mark(Y)) 
  mark(sel(X, Y)) => axxsel(mark(X), mark(Y)) 
  mark(tt) => tt 
  mark(cons(X, Y)) => cons(mark(X), Y) 
  mark(s(X)) => s(mark(X)) 
  mark(pair(X, Y)) => pair(mark(X), mark(Y)) 
  mark(nil) => nil 
  mark(O) => O 
  axxu101(X, Y, Z) => u101(X, Y, Z) 
  axxfst(X) => fst(X) 
  axxsplitAt(X, Y) => splitAt(X, Y) 
  axxu11(X, Y, Z) => u11(X, Y, Z) 
  axxsnd(X) => snd(X) 
  axxu21(X, Y) => u21(X, Y) 
  axxu31(X, Y) => u31(X, Y) 
  axxu41(X, Y) => u41(X, Y) 
  axxnatsFrom(X) => natsFrom(X) 
  axxu51(X, Y, Z) => u51(X, Y, Z) 
  axxhead(X) => head(X) 
  axxafterNth(X, Y) => afterNth(X, Y) 
  axxu61(X, Y) => u61(X, Y) 
  axxu71(X, Y) => u71(X, Y) 
  axxu81(X, Y, Z, U) => u81(X, Y, Z, U) 
  axxu82(X, Y) => u82(X, Y) 
  axxu91(X, Y) => u91(X, Y) 
  axxand(X, Y) => and(X, Y) 
  axxisNatural(X) => isNatural(X) 
  axxisLNat(X) => isLNat(X) 
  axxisPLNat(X) => isPLNat(X) 
  axxtail(X) => tail(X) 
  axxtake(X, Y) => take(X, Y) 
  axxsel(X, Y) => sel(X, Y) 

Moreover, the system is finitely branching.  Thus, by [Kop12, Thm. 7.55], we may omit all first-order dependency pairs from the dependency pair problem (DP(R), R) if this first-order part is Ce-terminating when seen as a many-sorted first-order TRS.

According to the external first-order termination prover, this system is indeed Ce-terminating:

 || Input TRS:
 ||     1: axxu101(tt(),PeRCenTX,PeRCenTY) -> axxfst(axxsplitAt(mark(PeRCenTX),mark(PeRCenTY)))
 ||     2: axxu11(tt(),PeRCenTX,PeRCenTY) -> axxsnd(axxsplitAt(mark(PeRCenTX),mark(PeRCenTY)))
 ||     3: axxu21(tt(),PeRCenTX) -> mark(PeRCenTX)
 ||     4: axxu31(tt(),PeRCenTX) -> mark(PeRCenTX)
 ||     5: axxu41(tt(),PeRCenTX) -> cons(mark(PeRCenTX),natsFrom(s(PeRCenTX)))
 ||     6: axxu51(tt(),PeRCenTX,PeRCenTY) -> axxhead(axxafterNth(mark(PeRCenTX),mark(PeRCenTY)))
 ||     7: axxu61(tt(),PeRCenTX) -> mark(PeRCenTX)
 ||     8: axxu71(tt(),PeRCenTX) -> pair(nil(),mark(PeRCenTX))
 ||     9: axxu81(tt(),PeRCenTX,PeRCenTY,PeRCenTZ) -> axxu82(axxsplitAt(mark(PeRCenTX),mark(PeRCenTZ)),PeRCenTY)
 ||     10: axxu82(pair(PeRCenTX,PeRCenTY),PeRCenTZ) -> pair(cons(mark(PeRCenTZ),PeRCenTX),mark(PeRCenTY))
 ||     11: axxu91(tt(),PeRCenTX) -> mark(PeRCenTX)
 ||     12: axxafterNth(PeRCenTX,PeRCenTY) -> axxu11(axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY)),PeRCenTX,PeRCenTY)
 ||     13: axxand(tt(),PeRCenTX) -> mark(PeRCenTX)
 ||     14: axxfst(pair(PeRCenTX,PeRCenTY)) -> axxu21(axxand(axxisLNat(PeRCenTX),isLNat(PeRCenTY)),PeRCenTX)
 ||     15: axxhead(cons(PeRCenTX,PeRCenTY)) -> axxu31(axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY)),PeRCenTX)
 ||     16: axxisLNat(nil()) -> tt()
 ||     17: axxisLNat(afterNth(PeRCenTX,PeRCenTY)) -> axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY))
 ||     18: axxisLNat(cons(PeRCenTX,PeRCenTY)) -> axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY))
 ||     19: axxisLNat(fst(PeRCenTX)) -> axxisPLNat(PeRCenTX)
 ||     20: axxisLNat(natsFrom(PeRCenTX)) -> axxisNatural(PeRCenTX)
 ||     21: axxisLNat(snd(PeRCenTX)) -> axxisPLNat(PeRCenTX)
 ||     22: axxisLNat(tail(PeRCenTX)) -> axxisLNat(PeRCenTX)
 ||     23: axxisLNat(take(PeRCenTX,PeRCenTY)) -> axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY))
 ||     24: axxisNatural(O()) -> tt()
 ||     25: axxisNatural(head(PeRCenTX)) -> axxisLNat(PeRCenTX)
 ||     26: axxisNatural(s(PeRCenTX)) -> axxisNatural(PeRCenTX)
 ||     27: axxisNatural(sel(PeRCenTX,PeRCenTY)) -> axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY))
 ||     28: axxisPLNat(pair(PeRCenTX,PeRCenTY)) -> axxand(axxisLNat(PeRCenTX),isLNat(PeRCenTY))
 ||     29: axxisPLNat(splitAt(PeRCenTX,PeRCenTY)) -> axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY))
 ||     30: axxnatsFrom(PeRCenTX) -> axxu41(axxisNatural(PeRCenTX),PeRCenTX)
 ||     31: axxsel(PeRCenTX,PeRCenTY) -> axxu51(axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY)),PeRCenTX,PeRCenTY)
 ||     32: axxsnd(pair(PeRCenTX,PeRCenTY)) -> axxu61(axxand(axxisLNat(PeRCenTX),isLNat(PeRCenTY)),PeRCenTY)
 ||     33: axxsplitAt(O(),PeRCenTX) -> axxu71(axxisLNat(PeRCenTX),PeRCenTX)
 ||     34: axxsplitAt(s(PeRCenTX),cons(PeRCenTY,PeRCenTZ)) -> axxu81(axxand(axxisNatural(PeRCenTX),and(isNatural(PeRCenTY),isLNat(PeRCenTZ))),PeRCenTX,PeRCenTY,PeRCenTZ)
 ||     35: axxtail(cons(PeRCenTX,PeRCenTY)) -> axxu91(axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY)),PeRCenTY)
 ||     36: axxtake(PeRCenTX,PeRCenTY) -> axxu101(axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY)),PeRCenTX,PeRCenTY)
 ||     37: mark(u101(PeRCenTX,PeRCenTY,PeRCenTZ)) -> axxu101(mark(PeRCenTX),PeRCenTY,PeRCenTZ)
 ||     38: mark(fst(PeRCenTX)) -> axxfst(mark(PeRCenTX))
 ||     39: mark(splitAt(PeRCenTX,PeRCenTY)) -> axxsplitAt(mark(PeRCenTX),mark(PeRCenTY))
 ||     40: mark(u11(PeRCenTX,PeRCenTY,PeRCenTZ)) -> axxu11(mark(PeRCenTX),PeRCenTY,PeRCenTZ)
 ||     41: mark(snd(PeRCenTX)) -> axxsnd(mark(PeRCenTX))
 ||     42: mark(u21(PeRCenTX,PeRCenTY)) -> axxu21(mark(PeRCenTX),PeRCenTY)
 ||     43: mark(u31(PeRCenTX,PeRCenTY)) -> axxu31(mark(PeRCenTX),PeRCenTY)
 ||     44: mark(u41(PeRCenTX,PeRCenTY)) -> axxu41(mark(PeRCenTX),PeRCenTY)
 ||     45: mark(natsFrom(PeRCenTX)) -> axxnatsFrom(mark(PeRCenTX))
 ||     46: mark(u51(PeRCenTX,PeRCenTY,PeRCenTZ)) -> axxu51(mark(PeRCenTX),PeRCenTY,PeRCenTZ)
 ||     47: mark(head(PeRCenTX)) -> axxhead(mark(PeRCenTX))
 ||     48: mark(afterNth(PeRCenTX,PeRCenTY)) -> axxafterNth(mark(PeRCenTX),mark(PeRCenTY))
 ||     49: mark(u61(PeRCenTX,PeRCenTY)) -> axxu61(mark(PeRCenTX),PeRCenTY)
 ||     50: mark(u71(PeRCenTX,PeRCenTY)) -> axxu71(mark(PeRCenTX),PeRCenTY)
 ||     51: mark(u81(PeRCenTX,PeRCenTY,PeRCenTZ,PeRCenTU)) -> axxu81(mark(PeRCenTX),PeRCenTY,PeRCenTZ,PeRCenTU)
 ||     52: mark(u82(PeRCenTX,PeRCenTY)) -> axxu82(mark(PeRCenTX),PeRCenTY)
 ||     53: mark(u91(PeRCenTX,PeRCenTY)) -> axxu91(mark(PeRCenTX),PeRCenTY)
 ||     54: mark(and(PeRCenTX,PeRCenTY)) -> axxand(mark(PeRCenTX),PeRCenTY)
 ||     55: mark(isNatural(PeRCenTX)) -> axxisNatural(PeRCenTX)
 ||     56: mark(isLNat(PeRCenTX)) -> axxisLNat(PeRCenTX)
 ||     57: mark(isPLNat(PeRCenTX)) -> axxisPLNat(PeRCenTX)
 ||     58: mark(tail(PeRCenTX)) -> axxtail(mark(PeRCenTX))
 ||     59: mark(take(PeRCenTX,PeRCenTY)) -> axxtake(mark(PeRCenTX),mark(PeRCenTY))
 ||     60: mark(sel(PeRCenTX,PeRCenTY)) -> axxsel(mark(PeRCenTX),mark(PeRCenTY))
 ||     61: mark(tt()) -> tt()
 ||     62: mark(cons(PeRCenTX,PeRCenTY)) -> cons(mark(PeRCenTX),PeRCenTY)
 ||     63: mark(s(PeRCenTX)) -> s(mark(PeRCenTX))
 ||     64: mark(pair(PeRCenTX,PeRCenTY)) -> pair(mark(PeRCenTX),mark(PeRCenTY))
 ||     65: mark(nil()) -> nil()
 ||     66: mark(O()) -> O()
 ||     67: axxu101(PeRCenTX,PeRCenTY,PeRCenTZ) -> u101(PeRCenTX,PeRCenTY,PeRCenTZ)
 ||     68: axxfst(PeRCenTX) -> fst(PeRCenTX)
 ||     69: axxsplitAt(PeRCenTX,PeRCenTY) -> splitAt(PeRCenTX,PeRCenTY)
 ||     70: axxu11(PeRCenTX,PeRCenTY,PeRCenTZ) -> u11(PeRCenTX,PeRCenTY,PeRCenTZ)
 ||     71: axxsnd(PeRCenTX) -> snd(PeRCenTX)
 ||     72: axxu21(PeRCenTX,PeRCenTY) -> u21(PeRCenTX,PeRCenTY)
 ||     73: axxu31(PeRCenTX,PeRCenTY) -> u31(PeRCenTX,PeRCenTY)
 ||     74: axxu41(PeRCenTX,PeRCenTY) -> u41(PeRCenTX,PeRCenTY)
 ||     75: axxnatsFrom(PeRCenTX) -> natsFrom(PeRCenTX)
 ||     76: axxu51(PeRCenTX,PeRCenTY,PeRCenTZ) -> u51(PeRCenTX,PeRCenTY,PeRCenTZ)
 ||     77: axxhead(PeRCenTX) -> head(PeRCenTX)
 ||     78: axxafterNth(PeRCenTX,PeRCenTY) -> afterNth(PeRCenTX,PeRCenTY)
 ||     79: axxu61(PeRCenTX,PeRCenTY) -> u61(PeRCenTX,PeRCenTY)
 ||     80: axxu71(PeRCenTX,PeRCenTY) -> u71(PeRCenTX,PeRCenTY)
 ||     81: axxu81(PeRCenTX,PeRCenTY,PeRCenTZ,PeRCenTU) -> u81(PeRCenTX,PeRCenTY,PeRCenTZ,PeRCenTU)
 ||     82: axxu82(PeRCenTX,PeRCenTY) -> u82(PeRCenTX,PeRCenTY)
 ||     83: axxu91(PeRCenTX,PeRCenTY) -> u91(PeRCenTX,PeRCenTY)
 ||     84: axxand(PeRCenTX,PeRCenTY) -> and(PeRCenTX,PeRCenTY)
 ||     85: axxisNatural(PeRCenTX) -> isNatural(PeRCenTX)
 ||     86: axxisLNat(PeRCenTX) -> isLNat(PeRCenTX)
 ||     87: axxisPLNat(PeRCenTX) -> isPLNat(PeRCenTX)
 ||     88: axxtail(PeRCenTX) -> tail(PeRCenTX)
 ||     89: axxtake(PeRCenTX,PeRCenTY) -> take(PeRCenTX,PeRCenTY)
 ||     90: axxsel(PeRCenTX,PeRCenTY) -> sel(PeRCenTX,PeRCenTY)
 ||     91: TIlDePAIR(PeRCenTX,PeRCenTY) -> PeRCenTX
 ||     92: TIlDePAIR(PeRCenTX,PeRCenTY) -> PeRCenTY
 || Number of strict rules: 92
 || Direct POLO(bPol) ... failed.
 || Uncurrying ... failed.
 || Dependency Pairs:
 ||    #1: #axxu11(tt(),PeRCenTX,PeRCenTY) -> #axxsnd(axxsplitAt(mark(PeRCenTX),mark(PeRCenTY)))
 ||    #2: #axxu11(tt(),PeRCenTX,PeRCenTY) -> #axxsplitAt(mark(PeRCenTX),mark(PeRCenTY))
 ||    #3: #axxu11(tt(),PeRCenTX,PeRCenTY) -> #mark(PeRCenTX)
 ||    #4: #axxu11(tt(),PeRCenTX,PeRCenTY) -> #mark(PeRCenTY)
 ||    #5: #mark(u31(PeRCenTX,PeRCenTY)) -> #axxu31(mark(PeRCenTX),PeRCenTY)
 ||    #6: #mark(u31(PeRCenTX,PeRCenTY)) -> #mark(PeRCenTX)
 ||    #7: #axxisPLNat(splitAt(PeRCenTX,PeRCenTY)) -> #axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY))
 ||    #8: #axxisPLNat(splitAt(PeRCenTX,PeRCenTY)) -> #axxisNatural(PeRCenTX)
 ||    #9: #axxtail(cons(PeRCenTX,PeRCenTY)) -> #axxu91(axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY)),PeRCenTY)
 ||    #10: #axxtail(cons(PeRCenTX,PeRCenTY)) -> #axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY))
 ||    #11: #axxtail(cons(PeRCenTX,PeRCenTY)) -> #axxisNatural(PeRCenTX)
 ||    #12: #mark(u51(PeRCenTX,PeRCenTY,PeRCenTZ)) -> #axxu51(mark(PeRCenTX),PeRCenTY,PeRCenTZ)
 ||    #13: #mark(u51(PeRCenTX,PeRCenTY,PeRCenTZ)) -> #mark(PeRCenTX)
 ||    #14: #mark(u21(PeRCenTX,PeRCenTY)) -> #axxu21(mark(PeRCenTX),PeRCenTY)
 ||    #15: #mark(u21(PeRCenTX,PeRCenTY)) -> #mark(PeRCenTX)
 ||    #16: #mark(snd(PeRCenTX)) -> #axxsnd(mark(PeRCenTX))
 ||    #17: #mark(snd(PeRCenTX)) -> #mark(PeRCenTX)
 ||    #18: #mark(u101(PeRCenTX,PeRCenTY,PeRCenTZ)) -> #axxu101(mark(PeRCenTX),PeRCenTY,PeRCenTZ)
 ||    #19: #mark(u101(PeRCenTX,PeRCenTY,PeRCenTZ)) -> #mark(PeRCenTX)
 ||    #20: #mark(head(PeRCenTX)) -> #axxhead(mark(PeRCenTX))
 ||    #21: #mark(head(PeRCenTX)) -> #mark(PeRCenTX)
 ||    #22: #mark(u91(PeRCenTX,PeRCenTY)) -> #axxu91(mark(PeRCenTX),PeRCenTY)
 ||    #23: #mark(u91(PeRCenTX,PeRCenTY)) -> #mark(PeRCenTX)
 ||    #24: #mark(afterNth(PeRCenTX,PeRCenTY)) -> #axxafterNth(mark(PeRCenTX),mark(PeRCenTY))
 ||    #25: #mark(afterNth(PeRCenTX,PeRCenTY)) -> #mark(PeRCenTX)
 ||    #26: #mark(afterNth(PeRCenTX,PeRCenTY)) -> #mark(PeRCenTY)
 ||    #27: #mark(tail(PeRCenTX)) -> #axxtail(mark(PeRCenTX))
 ||    #28: #mark(tail(PeRCenTX)) -> #mark(PeRCenTX)
 ||    #29: #mark(fst(PeRCenTX)) -> #axxfst(mark(PeRCenTX))
 ||    #30: #mark(fst(PeRCenTX)) -> #mark(PeRCenTX)
 ||    #31: #axxu51(tt(),PeRCenTX,PeRCenTY) -> #axxhead(axxafterNth(mark(PeRCenTX),mark(PeRCenTY)))
 ||    #32: #axxu51(tt(),PeRCenTX,PeRCenTY) -> #axxafterNth(mark(PeRCenTX),mark(PeRCenTY))
 ||    #33: #axxu51(tt(),PeRCenTX,PeRCenTY) -> #mark(PeRCenTX)
 ||    #34: #axxu51(tt(),PeRCenTX,PeRCenTY) -> #mark(PeRCenTY)
 ||    #35: #mark(take(PeRCenTX,PeRCenTY)) -> #axxtake(mark(PeRCenTX),mark(PeRCenTY))
 ||    #36: #mark(take(PeRCenTX,PeRCenTY)) -> #mark(PeRCenTX)
 ||    #37: #mark(take(PeRCenTX,PeRCenTY)) -> #mark(PeRCenTY)
 ||    #38: #mark(isNatural(PeRCenTX)) -> #axxisNatural(PeRCenTX)
 ||    #39: #mark(u11(PeRCenTX,PeRCenTY,PeRCenTZ)) -> #axxu11(mark(PeRCenTX),PeRCenTY,PeRCenTZ)
 ||    #40: #mark(u11(PeRCenTX,PeRCenTY,PeRCenTZ)) -> #mark(PeRCenTX)
 ||    #41: #mark(u81(PeRCenTX,PeRCenTY,PeRCenTZ,PeRCenTU)) -> #axxu81(mark(PeRCenTX),PeRCenTY,PeRCenTZ,PeRCenTU)
 ||    #42: #mark(u81(PeRCenTX,PeRCenTY,PeRCenTZ,PeRCenTU)) -> #mark(PeRCenTX)
 ||    #43: #axxand(tt(),PeRCenTX) -> #mark(PeRCenTX)
 ||    #44: #axxu81(tt(),PeRCenTX,PeRCenTY,PeRCenTZ) -> #axxu82(axxsplitAt(mark(PeRCenTX),mark(PeRCenTZ)),PeRCenTY)
 ||    #45: #axxu81(tt(),PeRCenTX,PeRCenTY,PeRCenTZ) -> #axxsplitAt(mark(PeRCenTX),mark(PeRCenTZ))
 ||    #46: #axxu81(tt(),PeRCenTX,PeRCenTY,PeRCenTZ) -> #mark(PeRCenTX)
 ||    #47: #axxu81(tt(),PeRCenTX,PeRCenTY,PeRCenTZ) -> #mark(PeRCenTZ)
 ||    #48: #axxu91(tt(),PeRCenTX) -> #mark(PeRCenTX)
 ||    #49: #mark(isPLNat(PeRCenTX)) -> #axxisPLNat(PeRCenTX)
 ||    #50: #axxisLNat(take(PeRCenTX,PeRCenTY)) -> #axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY))
 ||    #51: #axxisLNat(take(PeRCenTX,PeRCenTY)) -> #axxisNatural(PeRCenTX)
 ||    #52: #mark(natsFrom(PeRCenTX)) -> #axxnatsFrom(mark(PeRCenTX))
 ||    #53: #mark(natsFrom(PeRCenTX)) -> #mark(PeRCenTX)
 ||    #54: #axxafterNth(PeRCenTX,PeRCenTY) -> #axxu11(axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY)),PeRCenTX,PeRCenTY)
 ||    #55: #axxafterNth(PeRCenTX,PeRCenTY) -> #axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY))
 ||    #56: #axxafterNth(PeRCenTX,PeRCenTY) -> #axxisNatural(PeRCenTX)
 ||    #57: #axxsel(PeRCenTX,PeRCenTY) -> #axxu51(axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY)),PeRCenTX,PeRCenTY)
 ||    #58: #axxsel(PeRCenTX,PeRCenTY) -> #axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY))
 ||    #59: #axxsel(PeRCenTX,PeRCenTY) -> #axxisNatural(PeRCenTX)
 ||    #60: #mark(isLNat(PeRCenTX)) -> #axxisLNat(PeRCenTX)
 ||    #61: #axxfst(pair(PeRCenTX,PeRCenTY)) -> #axxu21(axxand(axxisLNat(PeRCenTX),isLNat(PeRCenTY)),PeRCenTX)
 ||    #62: #axxfst(pair(PeRCenTX,PeRCenTY)) -> #axxand(axxisLNat(PeRCenTX),isLNat(PeRCenTY))
 ||    #63: #axxfst(pair(PeRCenTX,PeRCenTY)) -> #axxisLNat(PeRCenTX)
 ||    #64: #mark(cons(PeRCenTX,PeRCenTY)) -> #mark(PeRCenTX)
 ||    #65: #axxnatsFrom(PeRCenTX) -> #axxu41(axxisNatural(PeRCenTX),PeRCenTX)
 ||    #66: #axxnatsFrom(PeRCenTX) -> #axxisNatural(PeRCenTX)
 ||    #67: #mark(u82(PeRCenTX,PeRCenTY)) -> #axxu82(mark(PeRCenTX),PeRCenTY)
 ||    #68: #mark(u82(PeRCenTX,PeRCenTY)) -> #mark(PeRCenTX)
 ||    #69: #mark(u61(PeRCenTX,PeRCenTY)) -> #axxu61(mark(PeRCenTX),PeRCenTY)
 ||    #70: #mark(u61(PeRCenTX,PeRCenTY)) -> #mark(PeRCenTX)
 ||    #71: #axxisNatural(head(PeRCenTX)) -> #axxisLNat(PeRCenTX)
 ||    #72: #axxisLNat(natsFrom(PeRCenTX)) -> #axxisNatural(PeRCenTX)
 ||    #73: #axxu61(tt(),PeRCenTX) -> #mark(PeRCenTX)
 ||    #74: #mark(splitAt(PeRCenTX,PeRCenTY)) -> #axxsplitAt(mark(PeRCenTX),mark(PeRCenTY))
 ||    #75: #mark(splitAt(PeRCenTX,PeRCenTY)) -> #mark(PeRCenTX)
 ||    #76: #mark(splitAt(PeRCenTX,PeRCenTY)) -> #mark(PeRCenTY)
 ||    #77: #axxu82(pair(PeRCenTX,PeRCenTY),PeRCenTZ) -> #mark(PeRCenTZ)
 ||    #78: #axxu82(pair(PeRCenTX,PeRCenTY),PeRCenTZ) -> #mark(PeRCenTY)
 ||    #79: #mark(pair(PeRCenTX,PeRCenTY)) -> #mark(PeRCenTX)
 ||    #80: #mark(pair(PeRCenTX,PeRCenTY)) -> #mark(PeRCenTY)
 ||    #81: #axxsplitAt(O(),PeRCenTX) -> #axxu71(axxisLNat(PeRCenTX),PeRCenTX)
 ||    #82: #axxsplitAt(O(),PeRCenTX) -> #axxisLNat(PeRCenTX)
 ||    #83: #axxu41(tt(),PeRCenTX) -> #mark(PeRCenTX)
 ||    #84: #mark(u41(PeRCenTX,PeRCenTY)) -> #axxu41(mark(PeRCenTX),PeRCenTY)
 ||    #85: #mark(u41(PeRCenTX,PeRCenTY)) -> #mark(PeRCenTX)
 ||    #86: #axxisPLNat(pair(PeRCenTX,PeRCenTY)) -> #axxand(axxisLNat(PeRCenTX),isLNat(PeRCenTY))
 ||    #87: #axxisPLNat(pair(PeRCenTX,PeRCenTY)) -> #axxisLNat(PeRCenTX)
 ||    #88: #axxisLNat(tail(PeRCenTX)) -> #axxisLNat(PeRCenTX)
 ||    #89: #axxsplitAt(s(PeRCenTX),cons(PeRCenTY,PeRCenTZ)) -> #axxu81(axxand(axxisNatural(PeRCenTX),and(isNatural(PeRCenTY),isLNat(PeRCenTZ))),PeRCenTX,PeRCenTY,PeRCenTZ)
 ||    #90: #axxsplitAt(s(PeRCenTX),cons(PeRCenTY,PeRCenTZ)) -> #axxand(axxisNatural(PeRCenTX),and(isNatural(PeRCenTY),isLNat(PeRCenTZ)))
 ||    #91: #axxsplitAt(s(PeRCenTX),cons(PeRCenTY,PeRCenTZ)) -> #axxisNatural(PeRCenTX)
 ||    #92: #axxisNatural(sel(PeRCenTX,PeRCenTY)) -> #axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY))
 ||    #93: #axxisNatural(sel(PeRCenTX,PeRCenTY)) -> #axxisNatural(PeRCenTX)
 ||    #94: #mark(sel(PeRCenTX,PeRCenTY)) -> #axxsel(mark(PeRCenTX),mark(PeRCenTY))
 ||    #95: #mark(sel(PeRCenTX,PeRCenTY)) -> #mark(PeRCenTX)
 ||    #96: #mark(sel(PeRCenTX,PeRCenTY)) -> #mark(PeRCenTY)
 ||    #97: #axxisLNat(afterNth(PeRCenTX,PeRCenTY)) -> #axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY))
 ||    #98: #axxisLNat(afterNth(PeRCenTX,PeRCenTY)) -> #axxisNatural(PeRCenTX)
 ||    #99: #axxsnd(pair(PeRCenTX,PeRCenTY)) -> #axxu61(axxand(axxisLNat(PeRCenTX),isLNat(PeRCenTY)),PeRCenTY)
 ||    #100: #axxsnd(pair(PeRCenTX,PeRCenTY)) -> #axxand(axxisLNat(PeRCenTX),isLNat(PeRCenTY))
 ||    #101: #axxsnd(pair(PeRCenTX,PeRCenTY)) -> #axxisLNat(PeRCenTX)
 ||    #102: #axxisLNat(fst(PeRCenTX)) -> #axxisPLNat(PeRCenTX)
 ||    #103: #mark(s(PeRCenTX)) -> #mark(PeRCenTX)
 ||    #104: #axxisNatural(s(PeRCenTX)) -> #axxisNatural(PeRCenTX)
 ||    #105: #axxtake(PeRCenTX,PeRCenTY) -> #axxu101(axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY)),PeRCenTX,PeRCenTY)
 ||    #106: #axxtake(PeRCenTX,PeRCenTY) -> #axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY))
 ||    #107: #axxtake(PeRCenTX,PeRCenTY) -> #axxisNatural(PeRCenTX)
 ||    #108: #axxisLNat(snd(PeRCenTX)) -> #axxisPLNat(PeRCenTX)
 ||    #109: #axxu21(tt(),PeRCenTX) -> #mark(PeRCenTX)
 ||    #110: #axxu101(tt(),PeRCenTX,PeRCenTY) -> #axxfst(axxsplitAt(mark(PeRCenTX),mark(PeRCenTY)))
 ||    #111: #axxu101(tt(),PeRCenTX,PeRCenTY) -> #axxsplitAt(mark(PeRCenTX),mark(PeRCenTY))
 ||    #112: #axxu101(tt(),PeRCenTX,PeRCenTY) -> #mark(PeRCenTX)
 ||    #113: #axxu101(tt(),PeRCenTX,PeRCenTY) -> #mark(PeRCenTY)
 ||    #114: #mark(and(PeRCenTX,PeRCenTY)) -> #axxand(mark(PeRCenTX),PeRCenTY)
 ||    #115: #mark(and(PeRCenTX,PeRCenTY)) -> #mark(PeRCenTX)
 ||    #116: #axxu71(tt(),PeRCenTX) -> #mark(PeRCenTX)
 ||    #117: #axxhead(cons(PeRCenTX,PeRCenTY)) -> #axxu31(axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY)),PeRCenTX)
 ||    #118: #axxhead(cons(PeRCenTX,PeRCenTY)) -> #axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY))
 ||    #119: #axxhead(cons(PeRCenTX,PeRCenTY)) -> #axxisNatural(PeRCenTX)
 ||    #120: #axxu31(tt(),PeRCenTX) -> #mark(PeRCenTX)
 ||    #121: #mark(u71(PeRCenTX,PeRCenTY)) -> #axxu71(mark(PeRCenTX),PeRCenTY)
 ||    #122: #mark(u71(PeRCenTX,PeRCenTY)) -> #mark(PeRCenTX)
 ||    #123: #axxisLNat(cons(PeRCenTX,PeRCenTY)) -> #axxand(axxisNatural(PeRCenTX),isLNat(PeRCenTY))
 ||    #124: #axxisLNat(cons(PeRCenTX,PeRCenTY)) -> #axxisNatural(PeRCenTX)
 || Number of SCCs: 1, DPs: 124
 ||   SCC { #1..124 }
 || POLO(Sum)... POLO(max)... succeeded.
 ||       u81	w: max(x1, x2 + 5, x3 + 7, x4 + 10)
 ||       #axxu51	w: max(x2 + 26, x3 + 26)
 ||       TIlDePAIR	w: 0
 ||       s 	w: x1
 ||       axxisLNat	w: x1
 ||       u91	w: max(x1, x2)
 ||       #axxu82	w: max(x1, x2)
 ||       isPLNat	w: x1 + 1
 ||       axxsnd	w: x1 + 12
 ||       axxu11	w: max(x1 + 12, x2 + 23, x3 + 22)
 ||       #axxu101	w: max(x2 + 11, x3 + 13)
 ||       #axxisLNat	w: x1
 ||       take	w: max(x1 + 15, x2 + 14)
 ||       and	w: max(x1, x2)
 ||       axxsplitAt	w: max(x1 + 5, x2 + 10)
 ||       pair	w: max(x1 + 7, x2 + 8)
 ||       axxu91	w: max(x1, x2)
 ||       fst	w: x1 + 1
 ||       axxand	w: max(x1, x2)
 ||       natsFrom	w: x1
 ||       splitAt	w: max(x1 + 5, x2 + 10)
 ||       #axxu11	w: max(x1 + 7, x2 + 11, x3 + 11)
 ||       u61	w: max(x1 + 8, x2 + 7)
 ||       axxu31	w: max(x1 + 2, x2 + 3)
 ||       O 	w: 4
 ||       isNatural	w: x1
 ||       #axxsplitAt	w: max(x1 + 5, x2 + 10)
 ||       axxnatsFrom	w: x1
 ||       u41	w: max(x1, x2)
 ||       axxisNatural	w: x1
 ||       #axxu91	w: max(x1, x2)
 ||       tail	w: x1
 ||       u51	w: max(x1 + 29, x2 + 28, x3 + 27)
 ||       #axxafterNth	w: max(x1 + 12, x2 + 12)
 ||       #mark	w: x1
 ||       #axxtail	w: x1
 ||       axxu82	w: max(x1, x2 + 7)
 ||       #axxnatsFrom	w: x1
 ||       axxu81	w: max(x1, x2 + 5, x3 + 7, x4 + 10)
 ||       axxisPLNat	w: x1 + 1
 ||       #axxisPLNat	w: x1
 ||       u11	w: max(x1 + 12, x2 + 23, x3 + 22)
 ||       sel	w: max(x1 + 29, x2 + 30)
 ||       afterNth	w: max(x1 + 23, x2 + 22)
 ||       nil	w: 4
 ||       #axxsnd	w: x1
 ||       isLNat	w: x1
 ||       #TIlDePAIR	w: 0
 ||       #axxu21	w: max(x2 + 1)
 ||       axxu41	w: max(x1, x2)
 ||       axxafterNth	w: max(x1 + 23, x2 + 22)
 ||       mark	w: x1
 ||       axxu71	w: max(x1 + 7, x2 + 10)
 ||       u101	w: max(x1, x2 + 15, x3 + 14)
 ||       #axxu81	w: max(x2 + 5, x3, x4 + 10)
 ||       axxsel	w: max(x1 + 29, x2 + 30)
 ||       u21	w: max(x1, x2 + 2)
 ||       axxfst	w: x1 + 1
 ||       axxu61	w: max(x1 + 8, x2 + 7)
 ||       u82	w: max(x1, x2 + 7)
 ||       #axxu31	w: max(x2 + 1)
 ||       #axxand	w: max(x2)
 ||       #axxsel	w: max(x1 + 27, x2 + 27)
 ||       axxu51	w: max(x1 + 29, x2 + 28, x3 + 27)
 ||       head	w: x1 + 5
 ||       cons	w: max(x1, x2)
 ||       snd	w: x1 + 12
 ||       #axxu41	w: max(x2)
 ||       axxtail	w: x1
 ||       tt	w: 4
 ||       u71	w: max(x1 + 7, x2 + 10)
 ||       axxtake	w: max(x1 + 15, x2 + 14)
 ||       #axxu61	w: max(x2 + 2)
 ||       #axxfst	w: x1
 ||       axxu101	w: max(x1, x2 + 15, x3 + 14)
 ||       #axxu71	w: max(x2 + 8)
 ||       #axxisNatural	w: x1
 ||       u31	w: max(x1 + 2, x2 + 3)
 ||       axxu21	w: max(x1, x2 + 2)
 ||       #axxtake	w: max(x1 + 12, x2 + 13)
 ||       #axxhead	w: x1 + 2
 ||       axxhead	w: x1 + 5
 ||     USABLE RULES: { 1..90 }
 ||     Removed DPs: #1..8 #12..14 #16..18 #20 #21 #24..26 #29..37 #39 #40 #46 #47 #49..51 #54..59 #61..63 #69..71 #73 #75 #76 #78..82 #86 #87 #90..102 #106..113 #116..122
 || Number of SCCs: 2, DPs: 33
 ||   SCC { #104 }
 || POLO(Sum)... succeeded.
 ||       u81	w: x1 + 14
 ||       #axxu51	w: 2
 ||       TIlDePAIR	w: 0
 ||       s 	w: x1 + 1
 ||       axxisLNat	w: 2
 ||       u91	w: 11
 ||       #axxu82	w: 2
 ||       isPLNat	w: 3
 ||       axxsnd	w: 7
 ||       axxu11	w: x1 + x2 + x3 + 3
 ||       #axxu101	w: 2
 ||       #axxisLNat	w: 2
 ||       take	w: 11
 ||       and	w: x1 + 10
 ||       axxsplitAt	w: x2 + 1
 ||       pair	w: x2 + 5
 ||       axxu91	w: x2 + 11
 ||       fst	w: 3
 ||       axxand	w: 9
 ||       natsFrom	w: 12
 ||       splitAt	w: 6
 ||       #axxu11	w: 2
 ||       u61	w: 9
 ||       axxu31	w: x2 + 13
 ||       O 	w: 11
 ||       isNatural	w: x1 + 2
 ||       #axxsplitAt	w: 2
 ||       axxnatsFrom	w: 11
 ||       u41	w: x2 + 13
 ||       axxisNatural	w: 1
 ||       #axxu91	w: 2
 ||       tail	w: 1
 ||       u51	w: x1 + 12
 ||       #axxafterNth	w: 2
 ||       #mark	w: 2
 ||       #axxtail	w: 2
 ||       axxu82	w: x2 + 14
 ||       #axxnatsFrom	w: 2
 ||       axxu81	w: x2 + x3 + x4 + 13
 ||       axxisPLNat	w: x1 + 3
 ||       #axxisPLNat	w: 2
 ||       u11	w: 4
 ||       sel	w: x2 + 11
 ||       afterNth	w: x2 + 12
 ||       nil	w: 0
 ||       #axxsnd	w: 2
 ||       isLNat	w: 3
 ||       #TIlDePAIR	w: 0
 ||       #axxu21	w: 2
 ||       axxu41	w: 12
 ||       axxafterNth	w: 11
 ||       mark	w: 10
 ||       axxu71	w: x2 + 11
 ||       u101	w: x1 + x2 + 13
 ||       #axxu81	w: 2
 ||       axxsel	w: 10
 ||       u21	w: 0
 ||       axxfst	w: x1 + 2
 ||       axxu61	w: x2 + 8
 ||       u82	w: x1 + 15
 ||       #axxu31	w: 2
 ||       #axxand	w: 1
 ||       #axxsel	w: 2
 ||       axxu51	w: x2 + x3 + 11
 ||       head	w: 13
 ||       cons	w: 11
 ||       snd	w: 7
 ||       #axxu41	w: 2
 ||       axxtail	w: 10
 ||       tt	w: 3
 ||       u71	w: x1 + 12
 ||       axxtake	w: 11
 ||       #axxu61	w: 2
 ||       #axxfst	w: 2
 ||       axxu101	w: 12
 ||       #axxu71	w: 2
 ||       #axxisNatural	w: x1 + 2
 ||       u31	w: x1 + 14
 ||       axxu21	w: x1
 ||       #axxtake	w: 2
 ||       #axxhead	w: 1
 ||       axxhead	w: 12
 ||     USABLE RULES: { }
 ||     Removed DPs: #104
 || Number of SCCs: 1, DPs: 32
 ||   SCC { #9 #10 #15 #19 #22 #23 #27 #28 #41..45 #48 #52 #53 #60 #64 #65 #67 #68 #74 #77 #83..85 #88 #89 #103 #114 #115 #123 }
 || POLO(Sum)... POLO(max)... succeeded.
 ||       u81	w: max(x1, x2 + 5, x3 + 7, x4 + 10)
 ||       #axxu51	w: 0
 ||       TIlDePAIR	w: 0
 ||       s 	w: x1
 ||       axxisLNat	w: x1
 ||       u91	w: max(x1, x2)
 ||       #axxu82	w: max(x1 + 1, x2 + 11)
 ||       isPLNat	w: x1 + 1
 ||       axxsnd	w: x1 + 12
 ||       axxu11	w: max(x1 + 12, x2 + 23, x3 + 22)
 ||       #axxu101	w: 0
 ||       #axxisLNat	w: x1 + 10
 ||       take	w: max(x1 + 15, x2 + 14)
 ||       and	w: max(x1, x2)
 ||       axxsplitAt	w: max(x1 + 5, x2 + 10)
 ||       pair	w: max(x1 + 7, x2 + 8)
 ||       axxu91	w: max(x1, x2)
 ||       fst	w: x1 + 1
 ||       axxand	w: max(x1, x2)
 ||       natsFrom	w: x1
 ||       splitAt	w: max(x1 + 5, x2 + 10)
 ||       #axxu11	w: max(x1 + 7)
 ||       u61	w: max(x1 + 8, x2 + 7)
 ||       axxu31	w: max(x1 + 2, x2 + 3)
 ||       O 	w: 4
 ||       isNatural	w: x1
 ||       #axxsplitAt	w: max(x1 + 13, x2 + 12)
 ||       axxnatsFrom	w: x1
 ||       u41	w: max(x1, x2)
 ||       axxisNatural	w: x1
 ||       #axxu91	w: max(x1 + 1, x2 + 10)
 ||       tail	w: x1 + 2
 ||       u51	w: max(x1 + 29, x2 + 28, x3 + 27)
 ||       #axxafterNth	w: max(x1 + 12, x2 + 12)
 ||       #mark	w: x1 + 10
 ||       #axxtail	w: x1 + 11
 ||       axxu82	w: max(x1, x2 + 7)
 ||       #axxnatsFrom	w: x1 + 10
 ||       axxu81	w: max(x1, x2 + 5, x3 + 7, x4 + 10)
 ||       axxisPLNat	w: x1 + 1
 ||       #axxisPLNat	w: 0
 ||       u11	w: max(x1 + 12, x2 + 23, x3 + 22)
 ||       sel	w: max(x1 + 29, x2 + 30)
 ||       afterNth	w: max(x1 + 23, x2 + 22)
 ||       nil	w: 4
 ||       #axxsnd	w: x1
 ||       isLNat	w: x1
 ||       #TIlDePAIR	w: 0
 ||       #axxu21	w: 0
 ||       axxu41	w: max(x1, x2)
 ||       axxafterNth	w: max(x1 + 23, x2 + 22)
 ||       mark	w: x1
 ||       axxu71	w: max(x1 + 7, x2 + 10)
 ||       u101	w: max(x1, x2 + 15, x3 + 14)
 ||       #axxu81	w: max(x2 + 13, x3 + 12, x4 + 12)
 ||       axxsel	w: max(x1 + 29, x2 + 30)
 ||       u21	w: max(x1, x2 + 2)
 ||       axxfst	w: x1 + 1
 ||       axxu61	w: max(x1 + 8, x2 + 7)
 ||       u82	w: max(x1, x2 + 7)
 ||       #axxu31	w: 0
 ||       #axxand	w: max(x2 + 10)
 ||       #axxsel	w: max(x1 + 27, x2 + 27)
 ||       axxu51	w: max(x1 + 29, x2 + 28, x3 + 27)
 ||       head	w: x1 + 5
 ||       cons	w: max(x1, x2)
 ||       snd	w: x1 + 12
 ||       #axxu41	w: max(x1 + 7, x2 + 10)
 ||       axxtail	w: x1 + 2
 ||       tt	w: 4
 ||       u71	w: max(x1 + 7, x2 + 10)
 ||       axxtake	w: max(x1 + 15, x2 + 14)
 ||       #axxu61	w: 0
 ||       #axxfst	w: x1
 ||       axxu101	w: max(x1, x2 + 15, x3 + 14)
 ||       #axxu71	w: 0
 ||       #axxisNatural	w: 0
 ||       u31	w: max(x1 + 2, x2 + 3)
 ||       axxu21	w: max(x1, x2 + 2)
 ||       #axxtake	w: max(x1 + 12, x2 + 13)
 ||       #axxhead	w: x1 + 2
 ||       axxhead	w: x1 + 5
 ||     USABLE RULES: { 1..90 }
 ||     Removed DPs: #9 #10 #27 #28 #41 #44 #67 #74 #77 #88
 || Number of SCCs: 2, DPs: 22
 ||   SCC { #45 #89 }
 || POLO(Sum)... POLO(max)... QLPOS... POLO(mSum)... QWPOpS(mSum)... succeeded.
 ||       u81	s: []	p: 8	w: max(x3 + 25, x4 + 18)
 ||       #axxu51	s: []	p: 0	w: x3 + 1
 ||       TIlDePAIR	s: [2]	p: 0	w: x2
 ||       s 	s: [1]	p: 12	w: x1
 ||       axxisLNat	s: []	p: 12	w: 5
 ||       u91	s: [2]	p: 13	w: max(x2 + 2)
 ||       #axxu82	s: []	p: 0	w: x1 + 1
 ||       isPLNat	s: []	p: 12	w: 5
 ||       axxsnd	s: []	p: 0	w: x1
 ||       axxu11	s: [1]	p: 1	w: max(x1 + 16, x3 + 19)
 ||       #axxu101	s: []	p: 0	w: max(x1)
 ||       #axxisLNat	s: []	p: 0	w: 0
 ||       take	s: []	p: 9	w: x2 + 22
 ||       and	s: 2
 ||       axxsplitAt	s: []	p: 8	w: max(x2 + 18)
 ||       pair	s: []	p: 3	w: max(x1 + 9, x2 + 16)
 ||       axxu91	s: [2]	p: 13	w: max(x2 + 2)
 ||       fst	s: []	p: 4	w: x1 + 2
 ||       axxand	s: 2
 ||       natsFrom	s: []	p: 13	w: x1 + 9
 ||       splitAt	s: []	p: 8	w: max(x2 + 18)
 ||       #axxu11	s: [1,3,2]	p: 0	w: x1 + x2 + x3
 ||       u61	s: [2,1]	p: 9	w: max(x1 + 1, x2 + 2)
 ||       axxu31	s: []	p: 11	w: max(x1 + 2, x2 + 7)
 ||       O 	s: []	p: 14	w: 4
 ||       isNatural	s: []	p: 12	w: 5
 ||       #axxsplitAt	s: 1
 ||       axxnatsFrom	s: []	p: 13	w: x1 + 9
 ||       u41	s: []	p: 11	w: max(x2 + 9)
 ||       axxisNatural	s: []	p: 12	w: 5
 ||       #axxu91	s: [2,1]	p: 0	w: max(x1 + 1, x2 + 1)
 ||       tail	s: []	p: 13	w: x1 + 3
 ||       u51	s: [3]	p: 3	w: max(x1 + 24, x3 + 23)
 ||       #axxafterNth	s: []	p: 0	w: x1
 ||       #mark	s: []	p: 0	w: 1
 ||       #axxtail	s: []	p: 0	w: 1
 ||       axxu82	s: [2]	p: 7	w: max(x1, x2 + 22)
 ||       #axxnatsFrom	s: []	p: 0	w: 0
 ||       axxu81	s: []	p: 8	w: max(x3 + 25, x4 + 18)
 ||       axxisPLNat	s: []	p: 12	w: 5
 ||       #axxisPLNat	s: []	p: 0	w: 0
 ||       u11	s: [1]	p: 1	w: max(x1 + 16, x3 + 19)
 ||       sel	s: []	p: 4	w: x2 + 30
 ||       afterNth	s: [2]	p: 2	w: max(x2 + 22)
 ||       nil	s: []	p: 14	w: 1
 ||       #axxsnd	s: []	p: 0	w: 0
 ||       isLNat	s: []	p: 12	w: 5
 ||       #TIlDePAIR	s: []	p: 0	w: x1
 ||       #axxu21	s: []	p: 0	w: x1
 ||       axxu41	s: []	p: 11	w: max(x2 + 9)
 ||       axxafterNth	s: [2]	p: 2	w: max(x2 + 22)
 ||       mark	s: 1
 ||       axxu71	s: []	p: 4	w: max(x2 + 17)
 ||       u101	s: []	p: 8	w: max(x1 + 1, x3 + 21)
 ||       #axxu81	s: [2]	p: 9	w: max(x2)
 ||       axxsel	s: []	p: 4	w: x2 + 30
 ||       u21	s: []	p: 4	w: max(x1 + 12, x2 + 10)
 ||       axxfst	s: []	p: 4	w: x1 + 2
 ||       axxu61	s: [2,1]	p: 9	w: max(x1 + 1, x2 + 2)
 ||       u82	s: [2]	p: 7	w: max(x1, x2 + 22)
 ||       #axxu31	s: []	p: 0	w: 0
 ||       #axxand	s: []	p: 0	w: max(x2)
 ||       #axxsel	s: [1]	p: 0	w: x1
 ||       axxu51	s: [3]	p: 3	w: max(x1 + 24, x3 + 23)
 ||       head	s: []	p: 0	w: x1
 ||       cons	s: []	p: 6	w: max(x1 + 8, x2)
 ||       snd	s: []	p: 0	w: x1
 ||       #axxu41	s: [2,1]	p: 0	w: max(x1, x2)
 ||       axxtail	s: []	p: 13	w: x1 + 3
 ||       tt	s: []	p: 13	w: 3
 ||       u71	s: []	p: 4	w: max(x2 + 17)
 ||       axxtake	s: []	p: 9	w: x2 + 22
 ||       #axxu61	s: []	p: 0	w: x2
 ||       #axxfst	s: []	p: 0	w: 0
 ||       axxu101	s: []	p: 8	w: max(x1 + 1, x3 + 21)
 ||       #axxu71	s: []	p: 0	w: 0
 ||       #axxisNatural	s: []	p: 0	w: 0
 ||       u31	s: []	p: 11	w: max(x1 + 2, x2 + 7)
 ||       axxu21	s: []	p: 4	w: max(x1 + 12, x2 + 10)
 ||       #axxtake	s: [2,1]	p: 0	w: x1 + x2
 ||       #axxhead	s: []	p: 0	w: 1
 ||       axxhead	s: []	p: 0	w: x1
 ||     USABLE RULES: { 1..90 }
 ||     Removed DPs: #45 #89
 || Number of SCCs: 1, DPs: 20
 ||   SCC { #15 #19 #22 #23 #42 #43 #48 #52 #53 #60 #64 #65 #68 #83..85 #103 #114 #115 #123 }
 || POLO(Sum)... POLO(max)... succeeded.
 ||       u81	w: max(x1 + 2, x2 + 7, x3 + 3, x4 + 5)
 ||       #axxu51	w: 0
 ||       TIlDePAIR	w: 0
 ||       s 	w: x1
 ||       axxisLNat	w: x1 + 2
 ||       u91	w: max(x1 + 4, x2 + 2)
 ||       #axxu82	w: 0
 ||       isPLNat	w: x1 + 2
 ||       axxsnd	w: x1 + 1
 ||       axxu11	w: max(x1 + 8, x2 + 8, x3 + 8)
 ||       #axxu101	w: 0
 ||       #axxisLNat	w: x1 + 9
 ||       take	w: max(x1 + 11, x2 + 10)
 ||       and	w: max(x1 + 2, x2)
 ||       axxsplitAt	w: max(x1 + 7, x2 + 5)
 ||       pair	w: max(x1 + 2, x2 + 1)
 ||       axxu91	w: max(x1 + 4, x2 + 2)
 ||       fst	w: x1 + 3
 ||       axxand	w: max(x1 + 2, x2)
 ||       natsFrom	w: x1 + 4
 ||       splitAt	w: max(x1 + 7, x2 + 5)
 ||       #axxu11	w: 0
 ||       u61	w: max(x2 + 1)
 ||       axxu31	w: max(x2 + 1)
 ||       O 	w: 4
 ||       isNatural	w: x1 + 1
 ||       #axxsplitAt	w: 0
 ||       axxnatsFrom	w: x1 + 4
 ||       u41	w: max(x1 + 1, x2 + 4)
 ||       axxisNatural	w: x1 + 1
 ||       #axxu91	w: max(x1 + 10, x2 + 8)
 ||       tail	w: x1 + 7
 ||       u51	w: max(x1 + 14, x2 + 13, x3 + 13)
 ||       #axxafterNth	w: 0
 ||       #mark	w: x1 + 7
 ||       #axxtail	w: 11
 ||       axxu82	w: max(x1, x2 + 3)
 ||       #axxnatsFrom	w: x1 + 10
 ||       axxu81	w: max(x1 + 2, x2 + 7, x3 + 3, x4 + 5)
 ||       axxisPLNat	w: x1 + 2
 ||       #axxisPLNat	w: 0
 ||       u11	w: max(x1 + 8, x2 + 8, x3 + 8)
 ||       sel	w: max(x1 + 17, x2 + 18)
 ||       afterNth	w: max(x1 + 11, x2 + 12)
 ||       nil	w: 3
 ||       #axxsnd	w: 0
 ||       isLNat	w: x1 + 2
 ||       #TIlDePAIR	w: 0
 ||       #axxu21	w: 0
 ||       axxu41	w: max(x1 + 1, x2 + 4)
 ||       axxafterNth	w: max(x1 + 11, x2 + 12)
 ||       mark	w: x1
 ||       axxu71	w: max(x2 + 5)
 ||       u101	w: max(x1 + 1, x2 + 10, x3 + 10)
 ||       #axxu81	w: 0
 ||       axxsel	w: max(x1 + 17, x2 + 18)
 ||       u21	w: max(x1 + 1, x2 + 2)
 ||       axxfst	w: x1 + 3
 ||       axxu61	w: max(x2 + 1)
 ||       u82	w: max(x1, x2 + 3)
 ||       #axxu31	w: 0
 ||       #axxand	w: max(x1 + 1, x2 + 7)
 ||       #axxsel	w: 0
 ||       axxu51	w: max(x1 + 14, x2 + 13, x3 + 13)
 ||       head	w: x1 + 1
 ||       cons	w: max(x1 + 1, x2)
 ||       snd	w: x1 + 1
 ||       #axxu41	w: max(x1 + 1, x2 + 9)
 ||       axxtail	w: x1 + 7
 ||       tt	w: 5
 ||       u71	w: max(x2 + 5)
 ||       axxtake	w: max(x1 + 11, x2 + 10)
 ||       #axxu61	w: 0
 ||       #axxfst	w: 0
 ||       axxu101	w: max(x1 + 1, x2 + 10, x3 + 10)
 ||       #axxu71	w: 0
 ||       #axxisNatural	w: 0
 ||       u31	w: max(x2 + 1)
 ||       axxu21	w: max(x1 + 1, x2 + 2)
 ||       #axxtake	w: 0
 ||       #axxhead	w: 2
 ||       axxhead	w: x1 + 1
 ||     USABLE RULES: { 1..90 }
 ||     Removed DPs: #15 #19 #22 #23 #42 #48 #52 #53 #64 #65 #83..85 #115
 || Number of SCCs: 1, DPs: 6
 ||   SCC { #43 #60 #68 #103 #114 #123 }
 || POLO(Sum)... succeeded.
 ||       u81	w: 2
 ||       #axxu51	w: 2
 ||       TIlDePAIR	w: 0
 ||       s 	w: x1 + 1
 ||       axxisLNat	w: 2
 ||       u91	w: 1
 ||       #axxu82	w: 6
 ||       isPLNat	w: 4
 ||       axxsnd	w: x1 + 2
 ||       axxu11	w: x2 + x3 + 3
 ||       #axxu101	w: 2
 ||       #axxisLNat	w: 19
 ||       take	w: x2 + 3
 ||       and	w: x2 + 1
 ||       axxsplitAt	w: 2
 ||       pair	w: x2 + 5
 ||       axxu91	w: 1
 ||       fst	w: 6
 ||       axxand	w: x2
 ||       natsFrom	w: x1 + 3
 ||       splitAt	w: x1 + x2 + 3
 ||       #axxu11	w: 2
 ||       u61	w: 3
 ||       axxu31	w: x1
 ||       O 	w: 2
 ||       isNatural	w: x1 + 2
 ||       #axxsplitAt	w: 0
 ||       axxnatsFrom	w: 2
 ||       u41	w: 1
 ||       axxisNatural	w: 1
 ||       #axxu91	w: 11
 ||       tail	w: 0
 ||       u51	w: 3
 ||       #axxafterNth	w: 2
 ||       #mark	w: x1 + 10
 ||       #axxtail	w: 8
 ||       axxu82	w: x2 + 5
 ||       #axxnatsFrom	w: 10
 ||       axxu81	w: x1 + x2 + x3 + x4 + 1
 ||       axxisPLNat	w: x1 + 3
 ||       #axxisPLNat	w: 2
 ||       u11	w: x1 + 4
 ||       sel	w: 1
 ||       afterNth	w: 3
 ||       nil	w: 2
 ||       #axxsnd	w: 2
 ||       isLNat	w: 9
 ||       #TIlDePAIR	w: 0
 ||       #axxu21	w: 2
 ||       axxu41	w: 1
 ||       axxafterNth	w: 2
 ||       mark	w: 1
 ||       axxu71	w: 3
 ||       u101	w: x1 + 4
 ||       #axxu81	w: 1
 ||       axxsel	w: x1 + x2 + 2
 ||       u21	w: 1
 ||       axxfst	w: x1 + 5
 ||       axxu61	w: 2
 ||       u82	w: x1 + 6
 ||       #axxu31	w: 2
 ||       #axxand	w: x2 + 10
 ||       #axxsel	w: 2
 ||       axxu51	w: x2 + x3 + 2
 ||       head	w: 8
 ||       cons	w: x2 + 2
 ||       snd	w: 3
 ||       #axxu41	w: 9
 ||       axxtail	w: x1
 ||       tt	w: 3
 ||       u71	w: x1 + x2 + 4
 ||       axxtake	w: 2
 ||       #axxu61	w: 2
 ||       #axxfst	w: 2
 ||       axxu101	w: x2 + x3 + 3
 ||       #axxu71	w: 2
 ||       #axxisNatural	w: 2
 ||       u31	w: x2 + 1
 ||       axxu21	w: x1 + 1
 ||       #axxtake	w: 2
 ||       #axxhead	w: 1
 ||       axxhead	w: x1 + 7
 ||     USABLE RULES: { }
 ||     Removed DPs: #68 #103 #114
 || Number of SCCs: 1, DPs: 3
 ||   SCC { #43 #60 #123 }
 || POLO(Sum)... succeeded.
 ||       u81	w: 4
 ||       #axxu51	w: 2
 ||       TIlDePAIR	w: 0
 ||       s 	w: x1 + 1
 ||       axxisLNat	w: 2
 ||       u91	w: 0
 ||       #axxu82	w: 6
 ||       isPLNat	w: 4
 ||       axxsnd	w: x1 + 10
 ||       axxu11	w: x1 + x2 + x3 + 1
 ||       #axxu101	w: 2
 ||       #axxisLNat	w: x1 + 17
 ||       take	w: x2 + 3
 ||       and	w: x2 + 1
 ||       axxsplitAt	w: 2
 ||       pair	w: x2 + 5
 ||       axxu91	w: x1
 ||       fst	w: 6
 ||       axxand	w: x2
 ||       natsFrom	w: x1 + 3
 ||       splitAt	w: x1 + x2 + 3
 ||       #axxu11	w: 2
 ||       u61	w: 2
 ||       axxu31	w: x1
 ||       O 	w: 2
 ||       isNatural	w: x1 + 2
 ||       #axxsplitAt	w: 0
 ||       axxnatsFrom	w: 2
 ||       u41	w: 1
 ||       axxisNatural	w: 1
 ||       #axxu91	w: 11
 ||       tail	w: 0
 ||       u51	w: 3
 ||       #axxafterNth	w: 2
 ||       #mark	w: x1 + 9
 ||       #axxtail	w: 8
 ||       axxu82	w: x2 + 5
 ||       #axxnatsFrom	w: 10
 ||       axxu81	w: x2 + x3 + x4 + 3
 ||       axxisPLNat	w: x1 + 3
 ||       #axxisPLNat	w: 2
 ||       u11	w: x1 + 2
 ||       sel	w: 1
 ||       afterNth	w: 3
 ||       nil	w: 2
 ||       #axxsnd	w: 2
 ||       isLNat	w: x1 + 9
 ||       #TIlDePAIR	w: 0
 ||       #axxu21	w: 2
 ||       axxu41	w: 1
 ||       axxafterNth	w: 2
 ||       mark	w: 1
 ||       axxu71	w: 3
 ||       u101	w: x1 + 2
 ||       #axxu81	w: 1
 ||       axxsel	w: x1 + x2 + 2
 ||       u21	w: 1
 ||       axxfst	w: x1 + 5
 ||       axxu61	w: x1 + 1
 ||       u82	w: x1 + 6
 ||       #axxu31	w: 2
 ||       #axxand	w: x2 + 10
 ||       #axxsel	w: 2
 ||       axxu51	w: x2 + x3 + 2
 ||       head	w: 2
 ||       cons	w: x2 + 9
 ||       snd	w: 11
 ||       #axxu41	w: 9
 ||       axxtail	w: x1
 ||       tt	w: 3
 ||       u71	w: x1 + x2 + 4
 ||       axxtake	w: 2
 ||       #axxu61	w: 2
 ||       #axxfst	w: 2
 ||       axxu101	w: x1 + x2 + x3 + 1
 ||       #axxu71	w: 2
 ||       #axxisNatural	w: 2
 ||       u31	w: x2 + 1
 ||       axxu21	w: x1 + 1
 ||       #axxtake	w: 2
 ||       #axxhead	w: 1
 ||       axxhead	w: x1 + 1
 ||     USABLE RULES: { }
 ||     Removed DPs: #43 #60 #123
 || Number of SCCs: 0, DPs: 0
 || 
We use the dependency pair framework as described in [Kop12, Ch. 6/7], with static dependency pairs (see [KusIsoSakBla09] and the adaptation for AFSMs and accessible arguments in [FuhKop19]).

We thus obtain the following dependency pair problem (P_0, R_0, computable, formative):

  Dependency Pairs P_0:


  Rules R_0:

    axxu101(tt, X, Y) => axxfst(axxsplitAt(mark(X), mark(Y))) 
    axxu11(tt, X, Y) => axxsnd(axxsplitAt(mark(X), mark(Y))) 
    axxu21(tt, X) => mark(X) 
    axxu31(tt, X) => mark(X) 
    axxu41(tt, X) => cons(mark(X), natsFrom(s(X))) 
    axxu51(tt, X, Y) => axxhead(axxafterNth(mark(X), mark(Y))) 
    axxu61(tt, X) => mark(X) 
    axxu71(tt, X) => pair(nil, mark(X)) 
    axxu81(tt, X, Y, Z) => axxu82(axxsplitAt(mark(X), mark(Z)), Y) 
    axxu82(pair(X, Y), Z) => pair(cons(mark(Z), X), mark(Y)) 
    axxu91(tt, X) => mark(X) 
    axxafterNth(X, Y) => axxu11(axxand(axxisNatural(X), isLNat(Y)), X, Y) 
    axxand(tt, X) => mark(X) 
    axxfst(pair(X, Y)) => axxu21(axxand(axxisLNat(X), isLNat(Y)), X) 
    axxhead(cons(X, Y)) => axxu31(axxand(axxisNatural(X), isLNat(Y)), X) 
    axxisLNat(nil) => tt 
    axxisLNat(afterNth(X, Y)) => axxand(axxisNatural(X), isLNat(Y)) 
    axxisLNat(cons(X, Y)) => axxand(axxisNatural(X), isLNat(Y)) 
    axxisLNat(fst(X)) => axxisPLNat(X) 
    axxisLNat(natsFrom(X)) => axxisNatural(X) 
    axxisLNat(snd(X)) => axxisPLNat(X) 
    axxisLNat(tail(X)) => axxisLNat(X) 
    axxisLNat(take(X, Y)) => axxand(axxisNatural(X), isLNat(Y)) 
    axxisNatural(O) => tt 
    axxisNatural(head(X)) => axxisLNat(X) 
    axxisNatural(s(X)) => axxisNatural(X) 
    axxisNatural(sel(X, Y)) => axxand(axxisNatural(X), isLNat(Y)) 
    axxisPLNat(pair(X, Y)) => axxand(axxisLNat(X), isLNat(Y)) 
    axxisPLNat(splitAt(X, Y)) => axxand(axxisNatural(X), isLNat(Y)) 
    axxnatsFrom(X) => axxu41(axxisNatural(X), X) 
    axxsel(X, Y) => axxu51(axxand(axxisNatural(X), isLNat(Y)), X, Y) 
    axxsnd(pair(X, Y)) => axxu61(axxand(axxisLNat(X), isLNat(Y)), Y) 
    axxsplitAt(O, X) => axxu71(axxisLNat(X), X) 
    axxsplitAt(s(X), cons(Y, Z)) => axxu81(axxand(axxisNatural(X), and(isNatural(Y), isLNat(Z))), X, Y, Z) 
    axxtail(cons(X, Y)) => axxu91(axxand(axxisNatural(X), isLNat(Y)), Y) 
    axxtake(X, Y) => axxu101(axxand(axxisNatural(X), isLNat(Y)), X, Y) 
    mark(u101(X, Y, Z)) => axxu101(mark(X), Y, Z) 
    mark(fst(X)) => axxfst(mark(X)) 
    mark(splitAt(X, Y)) => axxsplitAt(mark(X), mark(Y)) 
    mark(u11(X, Y, Z)) => axxu11(mark(X), Y, Z) 
    mark(snd(X)) => axxsnd(mark(X)) 
    mark(u21(X, Y)) => axxu21(mark(X), Y) 
    mark(u31(X, Y)) => axxu31(mark(X), Y) 
    mark(u41(X, Y)) => axxu41(mark(X), Y) 
    mark(natsFrom(X)) => axxnatsFrom(mark(X)) 
    mark(u51(X, Y, Z)) => axxu51(mark(X), Y, Z) 
    mark(head(X)) => axxhead(mark(X)) 
    mark(afterNth(X, Y)) => axxafterNth(mark(X), mark(Y)) 
    mark(u61(X, Y)) => axxu61(mark(X), Y) 
    mark(u71(X, Y)) => axxu71(mark(X), Y) 
    mark(u81(X, Y, Z, U)) => axxu81(mark(X), Y, Z, U) 
    mark(u82(X, Y)) => axxu82(mark(X), Y) 
    mark(u91(X, Y)) => axxu91(mark(X), Y) 
    mark(and(X, Y)) => axxand(mark(X), Y) 
    mark(isNatural(X)) => axxisNatural(X) 
    mark(isLNat(X)) => axxisLNat(X) 
    mark(isPLNat(X)) => axxisPLNat(X) 
    mark(tail(X)) => axxtail(mark(X)) 
    mark(take(X, Y)) => axxtake(mark(X), mark(Y)) 
    mark(sel(X, Y)) => axxsel(mark(X), mark(Y)) 
    mark(tt) => tt 
    mark(cons(X, Y)) => cons(mark(X), Y) 
    mark(s(X)) => s(mark(X)) 
    mark(pair(X, Y)) => pair(mark(X), mark(Y)) 
    mark(nil) => nil 
    mark(O) => O 
    axxu101(X, Y, Z) => u101(X, Y, Z) 
    axxfst(X) => fst(X) 
    axxsplitAt(X, Y) => splitAt(X, Y) 
    axxu11(X, Y, Z) => u11(X, Y, Z) 
    axxsnd(X) => snd(X) 
    axxu21(X, Y) => u21(X, Y) 
    axxu31(X, Y) => u31(X, Y) 
    axxu41(X, Y) => u41(X, Y) 
    axxnatsFrom(X) => natsFrom(X) 
    axxu51(X, Y, Z) => u51(X, Y, Z) 
    axxhead(X) => head(X) 
    axxafterNth(X, Y) => afterNth(X, Y) 
    axxu61(X, Y) => u61(X, Y) 
    axxu71(X, Y) => u71(X, Y) 
    axxu81(X, Y, Z, U) => u81(X, Y, Z, U) 
    axxu82(X, Y) => u82(X, Y) 
    axxu91(X, Y) => u91(X, Y) 
    axxand(X, Y) => and(X, Y) 
    axxisNatural(X) => isNatural(X) 
    axxisLNat(X) => isLNat(X) 
    axxisPLNat(X) => isPLNat(X) 
    axxtail(X) => tail(X) 
    axxtake(X, Y) => take(X, Y) 
    axxsel(X, Y) => sel(X, Y) 
    map(F, nil) => nil 

Thus, the original system is terminating if (P_0, R_0, computable, formative) is finite.

We consider the dependency pair problem (P_0, R_0, computable, formative).

We place the elements of P in a dependency graph approximation G (see e.g. [Kop12, Thm. 7.27, 7.29], as follows:


This graph has no strongly connected components.  By [Kop12, Thm. 7.31], this implies finiteness of the dependency pair problem.

As all dependency pair problems were succesfully simplified with sound (and complete) processors until nothing remained, we conclude termination.


+++ Citations +++

[FuhKop19]  C. Fuhs, and C. Kop.  A static higher-order dependency pair framework.  In Proceedings of ESOP 2019, 2019.
[Kop12]  C. Kop.  Higher Order Termination.  PhD Thesis, 2012.
[KusIsoSakBla09]  K. Kusakari, Y. Isogai, M. Sakai, and F. Blanqui.  Static Dependency Pair Method Based On Strong Computability for Higher-Order Rewrite Systems.  In volume 92(10) of IEICE Transactions on Information and Systems.  2007--2015, 2009.
