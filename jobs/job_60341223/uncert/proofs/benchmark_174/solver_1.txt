YES
We consider the system dPGIK.

  Alphabet:

    O : [] --> a 
    add : [a] --> a -> a 
    cons : [b * c] --> c 
    id : [] --> a -> a 
    map : [b -> b * c] --> c 
    nil : [] --> c 
    s : [a] --> a 

  Rules:

    id X => X 
    add(O) => id 
    add(s(X)) Y => s(add(X) Y) 
    map(F, nil) => nil 
    map(F, cons(X, Y)) => cons(F X, map(F, Y)) 

We use rule removal, following [Kop12, Theorem 2.23].

This gives the following requirements (possibly using Theorems 2.25 and 2.26 in [Kop12]):

  id X >? X 
  add(O) >? id 
  add(s(X)) Y >? s(add(X) Y) 
  map(F, nil) >? nil 
  map(F, cons(X, Y)) >? cons(F X, map(F, Y)) 

We orient these requirements with a polynomial interpretation in the natural numbers.

The following interpretation satisfies the requirements:

  O = 3 
  add = Lam[y0;y1].3 + 3*y0 + 3*y1 
  cons = Lam[y0;y1].3 + y0 + y1 
  id = Lam[y0].3*y0 
  map = Lam[G0;y1].3 + 3*y1 + G0(y1) + 3*y1*G0(y1) 
  nil = 0 
  s = Lam[y0].3 + y0 

Using this interpretation, the requirements translate to:

  [[id _x0]] = 4*x0 >= x0 = [[_x0]] 
  [[add(O)]] = Lam[y0].12 + 3*y0 > Lam[y0].3*y0 = [[id]] 
  [[add(s(_x0)) _x1]] = 12 + 3*x0 + 4*x1 > 6 + 3*x0 + 4*x1 = [[s(add(_x0) _x1)]] 
  [[map(_F0, nil)]] = 3 + F0(0) > 0 = [[nil]] 
  [[map(_F0, cons(_x1, _x2))]] = 12 + 3*x1 + 3*x2 + 3*x1*F0(3 + x1 + x2) + 3*x2*F0(3 + x1 + x2) + 10*F0(3 + x1 + x2) > 6 + x1 + 3*x2 + F0(x1) + F0(x2) + 3*x2*F0(x2) = [[cons(_F0 _x1, map(_F0, _x2))]] 

We can thus remove the following rules:

  add(O) => id 
  add(s(X)) Y => s(add(X) Y) 
  map(F, nil) => nil 
  map(F, cons(X, Y)) => cons(F X, map(F, Y)) 

We use rule removal, following [Kop12, Theorem 2.23].

This gives the following requirements (possibly using Theorems 2.25 and 2.26 in [Kop12]):

  id(X) >? X 

We orient these requirements with a polynomial interpretation in the natural numbers.

The following interpretation satisfies the requirements:

  id = Lam[y0].1 + y0 

Using this interpretation, the requirements translate to:

  [[id(_x0)]] = 1 + x0 > x0 = [[_x0]] 

We can thus remove the following rules:

  id(X) => X 

All rules were succesfully removed.  Thus, termination of the original system has been reduced to termination of the beta-rule, which is well-known to hold.


+++ Citations +++

[Kop12]  C. Kop.  Higher Order Termination.  PhD Thesis, 2012.
