MAYBE
We consider the system 3WEid.

  Alphabet:

    abs : [a -> a] --> aa 
    app : [aa * a] --> a 
    let : [ta * a -> ta] --> ta 
    return : [a] --> ta 

  Rules:

    app(abs(F), X) => F X 
    abs(/\x.app(X, x)) => X 
    let(return(X), F) => F X 
    let(X, /\x.return(x)) => X 
    let(let(X, F), G) => let(X, /\x.let(F x, G)) 

