YES
We consider the system yT6MP.

  Alphabet:

    cons : [a * b] --> b 
    map : [a -> a * b] --> b 
    nil : [] --> b 

  Rules:

    map(F, nil) => nil 
    map(F, cons(X, Y)) => cons(F X, map(F, Y)) 

We use rule removal, following [Kop12, Theorem 2.23].

This gives the following requirements (possibly using Theorems 2.25 and 2.26 in [Kop12]):

  map(F, nil) >? nil 
  map(F, cons(X, Y)) >? cons(F X, map(F, Y)) 

We orient these requirements with a polynomial interpretation in the natural numbers.

The following interpretation satisfies the requirements:

  cons = Lam[y0;y1].3 + y0 + y1 
  map = Lam[G0;y1].3 + 3*y1 + G0(y1) + 3*y1*G0(y1) 
  nil = 2 

Using this interpretation, the requirements translate to:

  [[map(_F0, nil)]] = 9 + 7*F0(2) > 2 = [[nil]] 
  [[map(_F0, cons(_x1, _x2))]] = 12 + 3*x1 + 3*x2 + 3*x1*F0(3 + x1 + x2) + 3*x2*F0(3 + x1 + x2) + 10*F0(3 + x1 + x2) > 6 + x1 + 3*x2 + F0(x1) + F0(x2) + 3*x2*F0(x2) = [[cons(_F0 _x1, map(_F0, _x2))]] 

We can thus remove the following rules:

  map(F, nil) => nil 
  map(F, cons(X, Y)) => cons(F X, map(F, Y)) 

All rules were succesfully removed.  Thus, termination of the original system has been reduced to termination of the beta-rule, which is well-known to hold.


+++ Citations +++

[Kop12]  C. Kop.  Higher Order Termination.  PhD Thesis, 2012.
