YES
We consider the system k7UT7.

  Alphabet:

    cons : [a * list] --> list 
    map : [list * a -> a] --> list 
    nil : [] --> list 

  Rules:

    map(nil, F) => nil 
    map(cons(X, Y), F) => cons(F X, map(Y, F)) 

We use rule removal, following [Kop12, Theorem 2.23].

This gives the following requirements (possibly using Theorems 2.25 and 2.26 in [Kop12]):

  map(nil, F) >? nil 
  map(cons(X, Y), F) >? cons(F X, map(Y, F)) 

We orient these requirements with a polynomial interpretation in the natural numbers.

The following interpretation satisfies the requirements:

  cons = Lam[y0;y1].3 + y0 + y1 
  map = Lam[y0;G1].3 + 3*y0 + G1(y0) + 3*y0*G1(y0) 
  nil = 2 

Using this interpretation, the requirements translate to:

  [[map(nil, _F0)]] = 9 + 7*F0(2) > 2 = [[nil]] 
  [[map(cons(_x0, _x1), _F2)]] = 12 + 3*x0 + 3*x1 + 3*x0*F2(3 + x0 + x1) + 3*x1*F2(3 + x0 + x1) + 10*F2(3 + x0 + x1) > 6 + x0 + 3*x1 + F2(x0) + F2(x1) + 3*x1*F2(x1) = [[cons(_F2 _x0, map(_x1, _F2))]] 

We can thus remove the following rules:

  map(nil, F) => nil 
  map(cons(X, Y), F) => cons(F X, map(Y, F)) 

All rules were succesfully removed.  Thus, termination of the original system has been reduced to termination of the beta-rule, which is well-known to hold.


+++ Citations +++

[Kop12]  C. Kop.  Higher Order Termination.  PhD Thesis, 2012.
