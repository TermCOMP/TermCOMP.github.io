YES
We consider the system LoGOq.

  Alphabet:

    bind : [Ta * a -> Ta] --> Ta 
    return : [a] --> Ta 

  Rules:

    bind(return(X), F) => F X 
    bind(X, /\x.return(x)) => X 
    bind(bind(X, F), G) => bind(X, /\x.bind(F x, G)) 

We use rule removal, following [Kop12, Theorem 2.23].

This gives the following requirements (possibly using Theorems 2.25 and 2.26 in [Kop12]):

  bind(return(X), F) >? F X 
  bind(X, /\x.return(x)) >? X 
  bind(bind(X, F), G) >? bind(X, /\x.bind(F x, G)) 

We orient these requirements with a polynomial interpretation in the natural numbers.

The following interpretation satisfies the requirements:

  bind = Lam[y0;G1].2 + 2*y0 + G1(y0) 
  return = Lam[y0].3 + 2*y0 

Using this interpretation, the requirements translate to:

  [[bind(return(_x0), _F1)]] = 8 + 4*x0 + F1(3 + 2*x0) > x0 + F1(x0) = [[_F1 _x0]] 
  [[bind(_x0, /\x.return(x))]] = 5 + 4*x0 > x0 = [[_x0]] 
  [[bind(bind(_x0, _F1), _F2)]] = 6 + 4*x0 + F2(2 + 2*x0 + F1(x0)) + 2*F1(x0) > 4 + 4*x0 + F2(x0 + F1(x0)) + 2*F1(x0) = [[bind(_x0, /\x.bind(_F1 x, _F2))]] 

We can thus remove the following rules:

  bind(return(X), F) => F X 
  bind(X, /\x.return(x)) => X 
  bind(bind(X, F), G) => bind(X, /\x.bind(F x, G)) 

All rules were succesfully removed.  Thus, termination of the original system has been reduced to termination of the beta-rule, which is well-known to hold.


+++ Citations +++

[Kop12]  C. Kop.  Higher Order Termination.  PhD Thesis, 2012.
