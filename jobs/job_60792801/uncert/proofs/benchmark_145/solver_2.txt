YES

Problem 1: 

(VAR vu95NonEmpty N X X1 X2 Y Z)
(RULES
active(add(s(X),Y)) -> mark(s(add(X,Y)))
active(add(num0,X)) -> mark(X)
active(dbl(s(X))) -> mark(s(s(dbl(X))))
active(dbl(num0)) -> mark(num0)
active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
active(first(num0,X)) -> mark(nil)
active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
active(sqr(num0)) -> mark(num0)
active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
add(active(X1),X2) -> add(X1,X2)
add(mark(X1),X2) -> add(X1,X2)
add(X1,active(X2)) -> add(X1,X2)
add(X1,mark(X2)) -> add(X1,X2)
cons(active(X1),X2) -> cons(X1,X2)
cons(mark(X1),X2) -> cons(X1,X2)
cons(X1,active(X2)) -> cons(X1,X2)
cons(X1,mark(X2)) -> cons(X1,X2)
dbl(active(X)) -> dbl(X)
dbl(mark(X)) -> dbl(X)
first(active(X1),X2) -> first(X1,X2)
first(mark(X1),X2) -> first(X1,X2)
first(X1,active(X2)) -> first(X1,X2)
first(X1,mark(X2)) -> first(X1,X2)
mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
mark(dbl(X)) -> active(dbl(mark(X)))
mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
mark(recip(X)) -> active(recip(mark(X)))
mark(s(X)) -> active(s(X))
mark(sqr(X)) -> active(sqr(mark(X)))
mark(terms(X)) -> active(terms(mark(X)))
mark(num0) -> active(num0)
mark(nil) -> active(nil)
recip(active(X)) -> recip(X)
recip(mark(X)) -> recip(X)
s(active(X)) -> s(X)
s(mark(X)) -> s(X)
sqr(active(X)) -> sqr(X)
sqr(mark(X)) -> sqr(X)
terms(active(X)) -> terms(X)
terms(mark(X)) -> terms(X)
)
 
(STRATEGY INNERMOST)

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ACTIVE(add(s(X),Y)) -> ADD(X,Y)
 ACTIVE(add(s(X),Y)) -> MARK(s(add(X,Y)))
 ACTIVE(add(s(X),Y)) -> S(add(X,Y))
 ACTIVE(add(num0,X)) -> MARK(X)
 ACTIVE(dbl(s(X))) -> DBL(X)
 ACTIVE(dbl(s(X))) -> MARK(s(s(dbl(X))))
 ACTIVE(dbl(s(X))) -> S(dbl(X))
 ACTIVE(dbl(s(X))) -> S(s(dbl(X)))
 ACTIVE(dbl(num0)) -> MARK(num0)
 ACTIVE(first(s(X),cons(Y,Z))) -> CONS(Y,first(X,Z))
 ACTIVE(first(s(X),cons(Y,Z))) -> FIRST(X,Z)
 ACTIVE(first(s(X),cons(Y,Z))) -> MARK(cons(Y,first(X,Z)))
 ACTIVE(first(num0,X)) -> MARK(nil)
 ACTIVE(sqr(s(X))) -> ADD(sqr(X),dbl(X))
 ACTIVE(sqr(s(X))) -> DBL(X)
 ACTIVE(sqr(s(X))) -> MARK(s(add(sqr(X),dbl(X))))
 ACTIVE(sqr(s(X))) -> S(add(sqr(X),dbl(X)))
 ACTIVE(sqr(s(X))) -> SQR(X)
 ACTIVE(sqr(num0)) -> MARK(num0)
 ACTIVE(terms(N)) -> CONS(recip(sqr(N)),terms(s(N)))
 ACTIVE(terms(N)) -> MARK(cons(recip(sqr(N)),terms(s(N))))
 ACTIVE(terms(N)) -> RECIP(sqr(N))
 ACTIVE(terms(N)) -> S(N)
 ACTIVE(terms(N)) -> SQR(N)
 ACTIVE(terms(N)) -> TERMS(s(N))
 ADD(active(X1),X2) -> ADD(X1,X2)
 ADD(mark(X1),X2) -> ADD(X1,X2)
 ADD(X1,active(X2)) -> ADD(X1,X2)
 ADD(X1,mark(X2)) -> ADD(X1,X2)
 CONS(active(X1),X2) -> CONS(X1,X2)
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(X1,active(X2)) -> CONS(X1,X2)
 CONS(X1,mark(X2)) -> CONS(X1,X2)
 DBL(active(X)) -> DBL(X)
 DBL(mark(X)) -> DBL(X)
 FIRST(active(X1),X2) -> FIRST(X1,X2)
 FIRST(mark(X1),X2) -> FIRST(X1,X2)
 FIRST(X1,active(X2)) -> FIRST(X1,X2)
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
 MARK(add(X1,X2)) -> ACTIVE(add(mark(X1),mark(X2)))
 MARK(add(X1,X2)) -> ADD(mark(X1),mark(X2))
 MARK(add(X1,X2)) -> MARK(X1)
 MARK(add(X1,X2)) -> MARK(X2)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> CONS(mark(X1),X2)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(dbl(X)) -> ACTIVE(dbl(mark(X)))
 MARK(dbl(X)) -> DBL(mark(X))
 MARK(dbl(X)) -> MARK(X)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> FIRST(mark(X1),mark(X2))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(recip(X)) -> ACTIVE(recip(mark(X)))
 MARK(recip(X)) -> MARK(X)
 MARK(recip(X)) -> RECIP(mark(X))
 MARK(s(X)) -> ACTIVE(s(X))
 MARK(sqr(X)) -> ACTIVE(sqr(mark(X)))
 MARK(sqr(X)) -> MARK(X)
 MARK(sqr(X)) -> SQR(mark(X))
 MARK(terms(X)) -> ACTIVE(terms(mark(X)))
 MARK(terms(X)) -> MARK(X)
 MARK(terms(X)) -> TERMS(mark(X))
 RECIP(active(X)) -> RECIP(X)
 RECIP(mark(X)) -> RECIP(X)
 S(active(X)) -> S(X)
 S(mark(X)) -> S(X)
 SQR(active(X)) -> SQR(X)
 SQR(mark(X)) -> SQR(X)
 TERMS(active(X)) -> TERMS(X)
 TERMS(mark(X)) -> TERMS(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVE(add(s(X),Y)) -> ADD(X,Y)
 ACTIVE(add(s(X),Y)) -> MARK(s(add(X,Y)))
 ACTIVE(add(s(X),Y)) -> S(add(X,Y))
 ACTIVE(add(num0,X)) -> MARK(X)
 ACTIVE(dbl(s(X))) -> DBL(X)
 ACTIVE(dbl(s(X))) -> MARK(s(s(dbl(X))))
 ACTIVE(dbl(s(X))) -> S(dbl(X))
 ACTIVE(dbl(s(X))) -> S(s(dbl(X)))
 ACTIVE(dbl(num0)) -> MARK(num0)
 ACTIVE(first(s(X),cons(Y,Z))) -> CONS(Y,first(X,Z))
 ACTIVE(first(s(X),cons(Y,Z))) -> FIRST(X,Z)
 ACTIVE(first(s(X),cons(Y,Z))) -> MARK(cons(Y,first(X,Z)))
 ACTIVE(first(num0,X)) -> MARK(nil)
 ACTIVE(sqr(s(X))) -> ADD(sqr(X),dbl(X))
 ACTIVE(sqr(s(X))) -> DBL(X)
 ACTIVE(sqr(s(X))) -> MARK(s(add(sqr(X),dbl(X))))
 ACTIVE(sqr(s(X))) -> S(add(sqr(X),dbl(X)))
 ACTIVE(sqr(s(X))) -> SQR(X)
 ACTIVE(sqr(num0)) -> MARK(num0)
 ACTIVE(terms(N)) -> CONS(recip(sqr(N)),terms(s(N)))
 ACTIVE(terms(N)) -> MARK(cons(recip(sqr(N)),terms(s(N))))
 ACTIVE(terms(N)) -> RECIP(sqr(N))
 ACTIVE(terms(N)) -> S(N)
 ACTIVE(terms(N)) -> SQR(N)
 ACTIVE(terms(N)) -> TERMS(s(N))
 ADD(active(X1),X2) -> ADD(X1,X2)
 ADD(mark(X1),X2) -> ADD(X1,X2)
 ADD(X1,active(X2)) -> ADD(X1,X2)
 ADD(X1,mark(X2)) -> ADD(X1,X2)
 CONS(active(X1),X2) -> CONS(X1,X2)
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(X1,active(X2)) -> CONS(X1,X2)
 CONS(X1,mark(X2)) -> CONS(X1,X2)
 DBL(active(X)) -> DBL(X)
 DBL(mark(X)) -> DBL(X)
 FIRST(active(X1),X2) -> FIRST(X1,X2)
 FIRST(mark(X1),X2) -> FIRST(X1,X2)
 FIRST(X1,active(X2)) -> FIRST(X1,X2)
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
 MARK(add(X1,X2)) -> ACTIVE(add(mark(X1),mark(X2)))
 MARK(add(X1,X2)) -> ADD(mark(X1),mark(X2))
 MARK(add(X1,X2)) -> MARK(X1)
 MARK(add(X1,X2)) -> MARK(X2)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> CONS(mark(X1),X2)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(dbl(X)) -> ACTIVE(dbl(mark(X)))
 MARK(dbl(X)) -> DBL(mark(X))
 MARK(dbl(X)) -> MARK(X)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> FIRST(mark(X1),mark(X2))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(recip(X)) -> ACTIVE(recip(mark(X)))
 MARK(recip(X)) -> MARK(X)
 MARK(recip(X)) -> RECIP(mark(X))
 MARK(s(X)) -> ACTIVE(s(X))
 MARK(sqr(X)) -> ACTIVE(sqr(mark(X)))
 MARK(sqr(X)) -> MARK(X)
 MARK(sqr(X)) -> SQR(mark(X))
 MARK(terms(X)) -> ACTIVE(terms(mark(X)))
 MARK(terms(X)) -> MARK(X)
 MARK(terms(X)) -> TERMS(mark(X))
 RECIP(active(X)) -> RECIP(X)
 RECIP(mark(X)) -> RECIP(X)
 S(active(X)) -> S(X)
 S(mark(X)) -> S(X)
 SQR(active(X)) -> SQR(X)
 SQR(mark(X)) -> SQR(X)
 TERMS(active(X)) -> TERMS(X)
 TERMS(mark(X)) -> TERMS(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 TERMS(active(X)) -> TERMS(X)
 TERMS(mark(X)) -> TERMS(X)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->->Cycle:
->->-> Pairs:
 SQR(active(X)) -> SQR(X)
 SQR(mark(X)) -> SQR(X)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->->Cycle:
->->-> Pairs:
 S(active(X)) -> S(X)
 S(mark(X)) -> S(X)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->->Cycle:
->->-> Pairs:
 RECIP(active(X)) -> RECIP(X)
 RECIP(mark(X)) -> RECIP(X)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->->Cycle:
->->-> Pairs:
 FIRST(active(X1),X2) -> FIRST(X1,X2)
 FIRST(mark(X1),X2) -> FIRST(X1,X2)
 FIRST(X1,active(X2)) -> FIRST(X1,X2)
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->->Cycle:
->->-> Pairs:
 DBL(active(X)) -> DBL(X)
 DBL(mark(X)) -> DBL(X)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->->Cycle:
->->-> Pairs:
 CONS(active(X1),X2) -> CONS(X1,X2)
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(X1,active(X2)) -> CONS(X1,X2)
 CONS(X1,mark(X2)) -> CONS(X1,X2)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->->Cycle:
->->-> Pairs:
 ADD(active(X1),X2) -> ADD(X1,X2)
 ADD(mark(X1),X2) -> ADD(X1,X2)
 ADD(X1,active(X2)) -> ADD(X1,X2)
 ADD(X1,mark(X2)) -> ADD(X1,X2)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->->Cycle:
->->-> Pairs:
 ACTIVE(add(s(X),Y)) -> MARK(s(add(X,Y)))
 ACTIVE(add(num0,X)) -> MARK(X)
 ACTIVE(dbl(s(X))) -> MARK(s(s(dbl(X))))
 ACTIVE(first(s(X),cons(Y,Z))) -> MARK(cons(Y,first(X,Z)))
 ACTIVE(sqr(s(X))) -> MARK(s(add(sqr(X),dbl(X))))
 ACTIVE(terms(N)) -> MARK(cons(recip(sqr(N)),terms(s(N))))
 MARK(add(X1,X2)) -> ACTIVE(add(mark(X1),mark(X2)))
 MARK(add(X1,X2)) -> MARK(X1)
 MARK(add(X1,X2)) -> MARK(X2)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(dbl(X)) -> ACTIVE(dbl(mark(X)))
 MARK(dbl(X)) -> MARK(X)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(recip(X)) -> ACTIVE(recip(mark(X)))
 MARK(recip(X)) -> MARK(X)
 MARK(sqr(X)) -> ACTIVE(sqr(mark(X)))
 MARK(sqr(X)) -> MARK(X)
 MARK(terms(X)) -> ACTIVE(terms(mark(X)))
 MARK(terms(X)) -> MARK(X)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)


The problem is decomposed in 9 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 TERMS(active(X)) -> TERMS(X)
 TERMS(mark(X)) -> TERMS(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Projection:
 pi(TERMS) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 SQR(active(X)) -> SQR(X)
 SQR(mark(X)) -> SQR(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Projection:
 pi(SQR) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> Pairs:
 S(active(X)) -> S(X)
 S(mark(X)) -> S(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Projection:
 pi(S) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Subterm Processor:
-> Pairs:
 RECIP(active(X)) -> RECIP(X)
 RECIP(mark(X)) -> RECIP(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Projection:
 pi(RECIP) = 1

Problem 1.4: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.5: 

Subterm Processor:
-> Pairs:
 FIRST(active(X1),X2) -> FIRST(X1,X2)
 FIRST(mark(X1),X2) -> FIRST(X1,X2)
 FIRST(X1,active(X2)) -> FIRST(X1,X2)
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Projection:
 pi(FIRST) = 1

Problem 1.5: 

SCC Processor:
-> Pairs:
 FIRST(X1,active(X2)) -> FIRST(X1,X2)
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 FIRST(X1,active(X2)) -> FIRST(X1,X2)
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)

Problem 1.5: 

Subterm Processor:
-> Pairs:
 FIRST(X1,active(X2)) -> FIRST(X1,X2)
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Projection:
 pi(FIRST) = 2

Problem 1.5: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.6: 

Subterm Processor:
-> Pairs:
 DBL(active(X)) -> DBL(X)
 DBL(mark(X)) -> DBL(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Projection:
 pi(DBL) = 1

Problem 1.6: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.7: 

Subterm Processor:
-> Pairs:
 CONS(active(X1),X2) -> CONS(X1,X2)
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(X1,active(X2)) -> CONS(X1,X2)
 CONS(X1,mark(X2)) -> CONS(X1,X2)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Projection:
 pi(CONS) = 1

Problem 1.7: 

SCC Processor:
-> Pairs:
 CONS(X1,active(X2)) -> CONS(X1,X2)
 CONS(X1,mark(X2)) -> CONS(X1,X2)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 CONS(X1,active(X2)) -> CONS(X1,X2)
 CONS(X1,mark(X2)) -> CONS(X1,X2)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)

Problem 1.7: 

Subterm Processor:
-> Pairs:
 CONS(X1,active(X2)) -> CONS(X1,X2)
 CONS(X1,mark(X2)) -> CONS(X1,X2)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Projection:
 pi(CONS) = 2

Problem 1.7: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.8: 

Subterm Processor:
-> Pairs:
 ADD(active(X1),X2) -> ADD(X1,X2)
 ADD(mark(X1),X2) -> ADD(X1,X2)
 ADD(X1,active(X2)) -> ADD(X1,X2)
 ADD(X1,mark(X2)) -> ADD(X1,X2)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Projection:
 pi(ADD) = 1

Problem 1.8: 

SCC Processor:
-> Pairs:
 ADD(X1,active(X2)) -> ADD(X1,X2)
 ADD(X1,mark(X2)) -> ADD(X1,X2)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ADD(X1,active(X2)) -> ADD(X1,X2)
 ADD(X1,mark(X2)) -> ADD(X1,X2)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)

Problem 1.8: 

Subterm Processor:
-> Pairs:
 ADD(X1,active(X2)) -> ADD(X1,X2)
 ADD(X1,mark(X2)) -> ADD(X1,X2)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Projection:
 pi(ADD) = 2

Problem 1.8: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.9: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(add(s(X),Y)) -> MARK(s(add(X,Y)))
 ACTIVE(add(num0,X)) -> MARK(X)
 ACTIVE(dbl(s(X))) -> MARK(s(s(dbl(X))))
 ACTIVE(first(s(X),cons(Y,Z))) -> MARK(cons(Y,first(X,Z)))
 ACTIVE(sqr(s(X))) -> MARK(s(add(sqr(X),dbl(X))))
 ACTIVE(terms(N)) -> MARK(cons(recip(sqr(N)),terms(s(N))))
 MARK(add(X1,X2)) -> ACTIVE(add(mark(X1),mark(X2)))
 MARK(add(X1,X2)) -> MARK(X1)
 MARK(add(X1,X2)) -> MARK(X2)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(dbl(X)) -> ACTIVE(dbl(mark(X)))
 MARK(dbl(X)) -> MARK(X)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(recip(X)) -> ACTIVE(recip(mark(X)))
 MARK(recip(X)) -> MARK(X)
 MARK(sqr(X)) -> ACTIVE(sqr(mark(X)))
 MARK(sqr(X)) -> MARK(X)
 MARK(terms(X)) -> ACTIVE(terms(mark(X)))
 MARK(terms(X)) -> MARK(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
-> Usable rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = X
[add](X1,X2) = 2.X1 + 2.X2 + 1
[cons](X1,X2) = X1
[dbl](X) = 2.X + 2
[first](X1,X2) = 2.X1 + 2.X2
[mark](X) = 2.X
[recip](X) = X
[s](X) = 1
[sqr](X) = X + 1
[terms](X) = 2.X + 2
[num0] = 0
[fSNonEmpty] = 0
[nil] = 0
[ACTIVE](X) = X + 2
[ADD](X1,X2) = 0
[CONS](X1,X2) = 0
[DBL](X) = 0
[FIRST](X1,X2) = 0
[MARK](X) = 2.X + 2
[RECIP](X) = 0
[S](X) = 0
[SQR](X) = 0
[TERMS](X) = 0

Problem 1.9: 

SCC Processor:
-> Pairs:
 ACTIVE(add(num0,X)) -> MARK(X)
 ACTIVE(dbl(s(X))) -> MARK(s(s(dbl(X))))
 ACTIVE(first(s(X),cons(Y,Z))) -> MARK(cons(Y,first(X,Z)))
 ACTIVE(sqr(s(X))) -> MARK(s(add(sqr(X),dbl(X))))
 ACTIVE(terms(N)) -> MARK(cons(recip(sqr(N)),terms(s(N))))
 MARK(add(X1,X2)) -> ACTIVE(add(mark(X1),mark(X2)))
 MARK(add(X1,X2)) -> MARK(X1)
 MARK(add(X1,X2)) -> MARK(X2)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(dbl(X)) -> ACTIVE(dbl(mark(X)))
 MARK(dbl(X)) -> MARK(X)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(recip(X)) -> ACTIVE(recip(mark(X)))
 MARK(recip(X)) -> MARK(X)
 MARK(sqr(X)) -> ACTIVE(sqr(mark(X)))
 MARK(sqr(X)) -> MARK(X)
 MARK(terms(X)) -> ACTIVE(terms(mark(X)))
 MARK(terms(X)) -> MARK(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(add(num0,X)) -> MARK(X)
 ACTIVE(dbl(s(X))) -> MARK(s(s(dbl(X))))
 ACTIVE(first(s(X),cons(Y,Z))) -> MARK(cons(Y,first(X,Z)))
 ACTIVE(sqr(s(X))) -> MARK(s(add(sqr(X),dbl(X))))
 ACTIVE(terms(N)) -> MARK(cons(recip(sqr(N)),terms(s(N))))
 MARK(add(X1,X2)) -> ACTIVE(add(mark(X1),mark(X2)))
 MARK(add(X1,X2)) -> MARK(X1)
 MARK(add(X1,X2)) -> MARK(X2)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(dbl(X)) -> ACTIVE(dbl(mark(X)))
 MARK(dbl(X)) -> MARK(X)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(recip(X)) -> ACTIVE(recip(mark(X)))
 MARK(recip(X)) -> MARK(X)
 MARK(sqr(X)) -> ACTIVE(sqr(mark(X)))
 MARK(sqr(X)) -> MARK(X)
 MARK(terms(X)) -> ACTIVE(terms(mark(X)))
 MARK(terms(X)) -> MARK(X)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)

Problem 1.9: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(add(num0,X)) -> MARK(X)
 ACTIVE(dbl(s(X))) -> MARK(s(s(dbl(X))))
 ACTIVE(first(s(X),cons(Y,Z))) -> MARK(cons(Y,first(X,Z)))
 ACTIVE(sqr(s(X))) -> MARK(s(add(sqr(X),dbl(X))))
 ACTIVE(terms(N)) -> MARK(cons(recip(sqr(N)),terms(s(N))))
 MARK(add(X1,X2)) -> ACTIVE(add(mark(X1),mark(X2)))
 MARK(add(X1,X2)) -> MARK(X1)
 MARK(add(X1,X2)) -> MARK(X2)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(dbl(X)) -> ACTIVE(dbl(mark(X)))
 MARK(dbl(X)) -> MARK(X)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(recip(X)) -> ACTIVE(recip(mark(X)))
 MARK(recip(X)) -> MARK(X)
 MARK(sqr(X)) -> ACTIVE(sqr(mark(X)))
 MARK(sqr(X)) -> MARK(X)
 MARK(terms(X)) -> ACTIVE(terms(mark(X)))
 MARK(terms(X)) -> MARK(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
-> Usable rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = X
[add](X1,X2) = 2.X1 + 2.X2 + 2
[cons](X1,X2) = X1
[dbl](X) = X + 1
[first](X1,X2) = 2.X1 + 2.X2 + 2
[mark](X) = 2.X
[recip](X) = X
[s](X) = 1
[sqr](X) = X + 1
[terms](X) = 2.X + 2
[num0] = 0
[fSNonEmpty] = 0
[nil] = 1
[ACTIVE](X) = X + 2
[ADD](X1,X2) = 0
[CONS](X1,X2) = 0
[DBL](X) = 0
[FIRST](X1,X2) = 0
[MARK](X) = 2.X + 2
[RECIP](X) = 0
[S](X) = 0
[SQR](X) = 0
[TERMS](X) = 0

Problem 1.9: 

SCC Processor:
-> Pairs:
 ACTIVE(dbl(s(X))) -> MARK(s(s(dbl(X))))
 ACTIVE(first(s(X),cons(Y,Z))) -> MARK(cons(Y,first(X,Z)))
 ACTIVE(sqr(s(X))) -> MARK(s(add(sqr(X),dbl(X))))
 ACTIVE(terms(N)) -> MARK(cons(recip(sqr(N)),terms(s(N))))
 MARK(add(X1,X2)) -> ACTIVE(add(mark(X1),mark(X2)))
 MARK(add(X1,X2)) -> MARK(X1)
 MARK(add(X1,X2)) -> MARK(X2)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(dbl(X)) -> ACTIVE(dbl(mark(X)))
 MARK(dbl(X)) -> MARK(X)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(recip(X)) -> ACTIVE(recip(mark(X)))
 MARK(recip(X)) -> MARK(X)
 MARK(sqr(X)) -> ACTIVE(sqr(mark(X)))
 MARK(sqr(X)) -> MARK(X)
 MARK(terms(X)) -> ACTIVE(terms(mark(X)))
 MARK(terms(X)) -> MARK(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(dbl(s(X))) -> MARK(s(s(dbl(X))))
 ACTIVE(first(s(X),cons(Y,Z))) -> MARK(cons(Y,first(X,Z)))
 ACTIVE(sqr(s(X))) -> MARK(s(add(sqr(X),dbl(X))))
 ACTIVE(terms(N)) -> MARK(cons(recip(sqr(N)),terms(s(N))))
 MARK(add(X1,X2)) -> ACTIVE(add(mark(X1),mark(X2)))
 MARK(add(X1,X2)) -> MARK(X1)
 MARK(add(X1,X2)) -> MARK(X2)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(dbl(X)) -> ACTIVE(dbl(mark(X)))
 MARK(dbl(X)) -> MARK(X)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(recip(X)) -> ACTIVE(recip(mark(X)))
 MARK(recip(X)) -> MARK(X)
 MARK(sqr(X)) -> ACTIVE(sqr(mark(X)))
 MARK(sqr(X)) -> MARK(X)
 MARK(terms(X)) -> ACTIVE(terms(mark(X)))
 MARK(terms(X)) -> MARK(X)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)

Problem 1.9: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(dbl(s(X))) -> MARK(s(s(dbl(X))))
 ACTIVE(first(s(X),cons(Y,Z))) -> MARK(cons(Y,first(X,Z)))
 ACTIVE(sqr(s(X))) -> MARK(s(add(sqr(X),dbl(X))))
 ACTIVE(terms(N)) -> MARK(cons(recip(sqr(N)),terms(s(N))))
 MARK(add(X1,X2)) -> ACTIVE(add(mark(X1),mark(X2)))
 MARK(add(X1,X2)) -> MARK(X1)
 MARK(add(X1,X2)) -> MARK(X2)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(dbl(X)) -> ACTIVE(dbl(mark(X)))
 MARK(dbl(X)) -> MARK(X)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(recip(X)) -> ACTIVE(recip(mark(X)))
 MARK(recip(X)) -> MARK(X)
 MARK(sqr(X)) -> ACTIVE(sqr(mark(X)))
 MARK(sqr(X)) -> MARK(X)
 MARK(terms(X)) -> ACTIVE(terms(mark(X)))
 MARK(terms(X)) -> MARK(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
-> Usable rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = X
[add](X1,X2) = X1 + 2.X2
[cons](X1,X2) = X1
[dbl](X) = 2.X + 2
[first](X1,X2) = 2.X1 + 2.X2 + 2
[mark](X) = 2.X
[recip](X) = X
[s](X) = 0
[sqr](X) = X + 1
[terms](X) = 2.X + 2
[num0] = 1
[fSNonEmpty] = 0
[nil] = 2
[ACTIVE](X) = X + 2
[ADD](X1,X2) = 0
[CONS](X1,X2) = 0
[DBL](X) = 0
[FIRST](X1,X2) = 0
[MARK](X) = 2.X + 2
[RECIP](X) = 0
[S](X) = 0
[SQR](X) = 0
[TERMS](X) = 0

Problem 1.9: 

SCC Processor:
-> Pairs:
 ACTIVE(first(s(X),cons(Y,Z))) -> MARK(cons(Y,first(X,Z)))
 ACTIVE(sqr(s(X))) -> MARK(s(add(sqr(X),dbl(X))))
 ACTIVE(terms(N)) -> MARK(cons(recip(sqr(N)),terms(s(N))))
 MARK(add(X1,X2)) -> ACTIVE(add(mark(X1),mark(X2)))
 MARK(add(X1,X2)) -> MARK(X1)
 MARK(add(X1,X2)) -> MARK(X2)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(dbl(X)) -> ACTIVE(dbl(mark(X)))
 MARK(dbl(X)) -> MARK(X)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(recip(X)) -> ACTIVE(recip(mark(X)))
 MARK(recip(X)) -> MARK(X)
 MARK(sqr(X)) -> ACTIVE(sqr(mark(X)))
 MARK(sqr(X)) -> MARK(X)
 MARK(terms(X)) -> ACTIVE(terms(mark(X)))
 MARK(terms(X)) -> MARK(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(first(s(X),cons(Y,Z))) -> MARK(cons(Y,first(X,Z)))
 ACTIVE(sqr(s(X))) -> MARK(s(add(sqr(X),dbl(X))))
 ACTIVE(terms(N)) -> MARK(cons(recip(sqr(N)),terms(s(N))))
 MARK(add(X1,X2)) -> ACTIVE(add(mark(X1),mark(X2)))
 MARK(add(X1,X2)) -> MARK(X1)
 MARK(add(X1,X2)) -> MARK(X2)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(dbl(X)) -> ACTIVE(dbl(mark(X)))
 MARK(dbl(X)) -> MARK(X)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(recip(X)) -> ACTIVE(recip(mark(X)))
 MARK(recip(X)) -> MARK(X)
 MARK(sqr(X)) -> ACTIVE(sqr(mark(X)))
 MARK(sqr(X)) -> MARK(X)
 MARK(terms(X)) -> ACTIVE(terms(mark(X)))
 MARK(terms(X)) -> MARK(X)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)

Problem 1.9: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(first(s(X),cons(Y,Z))) -> MARK(cons(Y,first(X,Z)))
 ACTIVE(sqr(s(X))) -> MARK(s(add(sqr(X),dbl(X))))
 ACTIVE(terms(N)) -> MARK(cons(recip(sqr(N)),terms(s(N))))
 MARK(add(X1,X2)) -> ACTIVE(add(mark(X1),mark(X2)))
 MARK(add(X1,X2)) -> MARK(X1)
 MARK(add(X1,X2)) -> MARK(X2)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(dbl(X)) -> ACTIVE(dbl(mark(X)))
 MARK(dbl(X)) -> MARK(X)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(recip(X)) -> ACTIVE(recip(mark(X)))
 MARK(recip(X)) -> MARK(X)
 MARK(sqr(X)) -> ACTIVE(sqr(mark(X)))
 MARK(sqr(X)) -> MARK(X)
 MARK(terms(X)) -> ACTIVE(terms(mark(X)))
 MARK(terms(X)) -> MARK(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
-> Usable rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = X
[add](X1,X2) = X1 + 2.X2 + 2
[cons](X1,X2) = X1
[dbl](X) = 2.X + 1
[first](X1,X2) = 2.X1 + 2.X2 + 2
[mark](X) = 2.X
[recip](X) = X + 1
[s](X) = 0
[sqr](X) = X
[terms](X) = 2.X + 2
[num0] = 0
[fSNonEmpty] = 0
[nil] = 1
[ACTIVE](X) = X + 1
[ADD](X1,X2) = 0
[CONS](X1,X2) = 0
[DBL](X) = 0
[FIRST](X1,X2) = 0
[MARK](X) = 2.X + 1
[RECIP](X) = 0
[S](X) = 0
[SQR](X) = 0
[TERMS](X) = 0

Problem 1.9: 

SCC Processor:
-> Pairs:
 ACTIVE(sqr(s(X))) -> MARK(s(add(sqr(X),dbl(X))))
 ACTIVE(terms(N)) -> MARK(cons(recip(sqr(N)),terms(s(N))))
 MARK(add(X1,X2)) -> ACTIVE(add(mark(X1),mark(X2)))
 MARK(add(X1,X2)) -> MARK(X1)
 MARK(add(X1,X2)) -> MARK(X2)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(dbl(X)) -> ACTIVE(dbl(mark(X)))
 MARK(dbl(X)) -> MARK(X)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(recip(X)) -> ACTIVE(recip(mark(X)))
 MARK(recip(X)) -> MARK(X)
 MARK(sqr(X)) -> ACTIVE(sqr(mark(X)))
 MARK(sqr(X)) -> MARK(X)
 MARK(terms(X)) -> ACTIVE(terms(mark(X)))
 MARK(terms(X)) -> MARK(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(sqr(s(X))) -> MARK(s(add(sqr(X),dbl(X))))
 ACTIVE(terms(N)) -> MARK(cons(recip(sqr(N)),terms(s(N))))
 MARK(add(X1,X2)) -> ACTIVE(add(mark(X1),mark(X2)))
 MARK(add(X1,X2)) -> MARK(X1)
 MARK(add(X1,X2)) -> MARK(X2)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(dbl(X)) -> ACTIVE(dbl(mark(X)))
 MARK(dbl(X)) -> MARK(X)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(recip(X)) -> ACTIVE(recip(mark(X)))
 MARK(recip(X)) -> MARK(X)
 MARK(sqr(X)) -> ACTIVE(sqr(mark(X)))
 MARK(sqr(X)) -> MARK(X)
 MARK(terms(X)) -> ACTIVE(terms(mark(X)))
 MARK(terms(X)) -> MARK(X)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)

Problem 1.9: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(sqr(s(X))) -> MARK(s(add(sqr(X),dbl(X))))
 ACTIVE(terms(N)) -> MARK(cons(recip(sqr(N)),terms(s(N))))
 MARK(add(X1,X2)) -> ACTIVE(add(mark(X1),mark(X2)))
 MARK(add(X1,X2)) -> MARK(X1)
 MARK(add(X1,X2)) -> MARK(X2)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(dbl(X)) -> ACTIVE(dbl(mark(X)))
 MARK(dbl(X)) -> MARK(X)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(recip(X)) -> ACTIVE(recip(mark(X)))
 MARK(recip(X)) -> MARK(X)
 MARK(sqr(X)) -> ACTIVE(sqr(mark(X)))
 MARK(sqr(X)) -> MARK(X)
 MARK(terms(X)) -> ACTIVE(terms(mark(X)))
 MARK(terms(X)) -> MARK(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
-> Usable rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = X
[add](X1,X2) = X1 + 2.X2 + 2
[cons](X1,X2) = X1
[dbl](X) = 2.X + 2
[first](X1,X2) = 2.X1 + 2.X2
[mark](X) = 2.X
[recip](X) = X
[s](X) = 0
[sqr](X) = X + 1
[terms](X) = 2.X + 2
[num0] = 0
[fSNonEmpty] = 0
[nil] = 0
[ACTIVE](X) = X + 2
[ADD](X1,X2) = 0
[CONS](X1,X2) = 0
[DBL](X) = 0
[FIRST](X1,X2) = 0
[MARK](X) = 2.X + 2
[RECIP](X) = 0
[S](X) = 0
[SQR](X) = 0
[TERMS](X) = 0

Problem 1.9: 

SCC Processor:
-> Pairs:
 ACTIVE(terms(N)) -> MARK(cons(recip(sqr(N)),terms(s(N))))
 MARK(add(X1,X2)) -> ACTIVE(add(mark(X1),mark(X2)))
 MARK(add(X1,X2)) -> MARK(X1)
 MARK(add(X1,X2)) -> MARK(X2)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(dbl(X)) -> ACTIVE(dbl(mark(X)))
 MARK(dbl(X)) -> MARK(X)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(recip(X)) -> ACTIVE(recip(mark(X)))
 MARK(recip(X)) -> MARK(X)
 MARK(sqr(X)) -> ACTIVE(sqr(mark(X)))
 MARK(sqr(X)) -> MARK(X)
 MARK(terms(X)) -> ACTIVE(terms(mark(X)))
 MARK(terms(X)) -> MARK(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(terms(N)) -> MARK(cons(recip(sqr(N)),terms(s(N))))
 MARK(add(X1,X2)) -> ACTIVE(add(mark(X1),mark(X2)))
 MARK(add(X1,X2)) -> MARK(X1)
 MARK(add(X1,X2)) -> MARK(X2)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(dbl(X)) -> ACTIVE(dbl(mark(X)))
 MARK(dbl(X)) -> MARK(X)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(recip(X)) -> ACTIVE(recip(mark(X)))
 MARK(recip(X)) -> MARK(X)
 MARK(sqr(X)) -> ACTIVE(sqr(mark(X)))
 MARK(sqr(X)) -> MARK(X)
 MARK(terms(X)) -> ACTIVE(terms(mark(X)))
 MARK(terms(X)) -> MARK(X)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)

Problem 1.9: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(terms(N)) -> MARK(cons(recip(sqr(N)),terms(s(N))))
 MARK(add(X1,X2)) -> ACTIVE(add(mark(X1),mark(X2)))
 MARK(add(X1,X2)) -> MARK(X1)
 MARK(add(X1,X2)) -> MARK(X2)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(dbl(X)) -> ACTIVE(dbl(mark(X)))
 MARK(dbl(X)) -> MARK(X)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(recip(X)) -> ACTIVE(recip(mark(X)))
 MARK(recip(X)) -> MARK(X)
 MARK(sqr(X)) -> ACTIVE(sqr(mark(X)))
 MARK(sqr(X)) -> MARK(X)
 MARK(terms(X)) -> ACTIVE(terms(mark(X)))
 MARK(terms(X)) -> MARK(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
-> Usable rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = X
[add](X1,X2) = X1 + 2.X2 + 2
[cons](X1,X2) = X1
[dbl](X) = 2.X + 2
[first](X1,X2) = 2.X1 + 2.X2 + 1
[mark](X) = 2.X
[recip](X) = X
[s](X) = 0
[sqr](X) = X
[terms](X) = 2.X + 2
[num0] = 0
[fSNonEmpty] = 0
[nil] = 0
[ACTIVE](X) = X + 2
[ADD](X1,X2) = 0
[CONS](X1,X2) = 0
[DBL](X) = 0
[FIRST](X1,X2) = 0
[MARK](X) = 2.X + 2
[RECIP](X) = 0
[S](X) = 0
[SQR](X) = 0
[TERMS](X) = 0

Problem 1.9: 

SCC Processor:
-> Pairs:
 MARK(add(X1,X2)) -> ACTIVE(add(mark(X1),mark(X2)))
 MARK(add(X1,X2)) -> MARK(X1)
 MARK(add(X1,X2)) -> MARK(X2)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(dbl(X)) -> ACTIVE(dbl(mark(X)))
 MARK(dbl(X)) -> MARK(X)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(recip(X)) -> ACTIVE(recip(mark(X)))
 MARK(recip(X)) -> MARK(X)
 MARK(sqr(X)) -> ACTIVE(sqr(mark(X)))
 MARK(sqr(X)) -> MARK(X)
 MARK(terms(X)) -> ACTIVE(terms(mark(X)))
 MARK(terms(X)) -> MARK(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 MARK(add(X1,X2)) -> MARK(X1)
 MARK(add(X1,X2)) -> MARK(X2)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(dbl(X)) -> MARK(X)
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(recip(X)) -> MARK(X)
 MARK(sqr(X)) -> MARK(X)
 MARK(terms(X)) -> MARK(X)
->->-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)

Problem 1.9: 

Subterm Processor:
-> Pairs:
 MARK(add(X1,X2)) -> MARK(X1)
 MARK(add(X1,X2)) -> MARK(X2)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(dbl(X)) -> MARK(X)
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(recip(X)) -> MARK(X)
 MARK(sqr(X)) -> MARK(X)
 MARK(terms(X)) -> MARK(X)
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Projection:
 pi(MARK) = 1

Problem 1.9: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(add(s(X),Y)) -> mark(s(add(X,Y)))
 active(add(num0,X)) -> mark(X)
 active(dbl(s(X))) -> mark(s(s(dbl(X))))
 active(dbl(num0)) -> mark(num0)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(sqr(s(X))) -> mark(s(add(sqr(X),dbl(X))))
 active(sqr(num0)) -> mark(num0)
 active(terms(N)) -> mark(cons(recip(sqr(N)),terms(s(N))))
 add(active(X1),X2) -> add(X1,X2)
 add(mark(X1),X2) -> add(X1,X2)
 add(X1,active(X2)) -> add(X1,X2)
 add(X1,mark(X2)) -> add(X1,X2)
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 dbl(active(X)) -> dbl(X)
 dbl(mark(X)) -> dbl(X)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 mark(add(X1,X2)) -> active(add(mark(X1),mark(X2)))
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(dbl(X)) -> active(dbl(mark(X)))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(recip(X)) -> active(recip(mark(X)))
 mark(s(X)) -> active(s(X))
 mark(sqr(X)) -> active(sqr(mark(X)))
 mark(terms(X)) -> active(terms(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 recip(active(X)) -> recip(X)
 recip(mark(X)) -> recip(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sqr(active(X)) -> sqr(X)
 sqr(mark(X)) -> sqr(X)
 terms(active(X)) -> terms(X)
 terms(mark(X)) -> terms(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
