YES
proof of /home/ff862203/input_Xzyjnou5bz.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 36 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 0 ms]
(4) QTRS
(5) RisEmptyProof [EQUIVALENT, 0 ms]
(6) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   append(@l1, @l2) -> append#1(@l1, @l2)
   append#1(::(@x, @xs), @l2) -> ::(@x, append(@xs, @l2))
   append#1(nil, @l2) -> @l2
   appendAll(@l) -> appendAll#1(@l)
   appendAll#1(::(@l1, @ls)) -> append(@l1, appendAll(@ls))
   appendAll#1(nil) -> nil
   appendAll2(@l) -> appendAll2#1(@l)
   appendAll2#1(::(@l1, @ls)) -> append(appendAll(@l1), appendAll2(@ls))
   appendAll2#1(nil) -> nil
   appendAll3(@l) -> appendAll3#1(@l)
   appendAll3#1(::(@l1, @ls)) -> append(appendAll2(@l1), appendAll3(@ls))
   appendAll3#1(nil) -> nil

The set Q consists of the following terms:

   appendAll(x0)
   appendAll#1(::(x0, x1))
   append#1(::(x0, x1), x2)
   appendAll2#1(::(x0, x1))
   appendAll3#1(::(x0, x1))
   appendAll#1(nil)
   appendAll3#1(nil)
   append(x0, x1)
   appendAll2(x0)
   appendAll3(x0)
   append#1(nil, x0)
   appendAll2#1(nil)


----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(::(x_1, x_2)) = 1 + 2*x_1 + x_2
   POL(append(x_1, x_2)) = 2*x_1 + x_2
   POL(append#1(x_1, x_2)) = 2*x_1 + x_2
   POL(appendAll(x_1)) = 1 + 2*x_1
   POL(appendAll#1(x_1)) = 2*x_1
   POL(appendAll2(x_1)) = 2*x_1
   POL(appendAll2#1(x_1)) = 2*x_1
   POL(appendAll3(x_1)) = 1 + 2*x_1
   POL(appendAll3#1(x_1)) = 2*x_1
   POL(nil) = 1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   append#1(::(@x, @xs), @l2) -> ::(@x, append(@xs, @l2))
   append#1(nil, @l2) -> @l2
   appendAll(@l) -> appendAll#1(@l)
   appendAll#1(::(@l1, @ls)) -> append(@l1, appendAll(@ls))
   appendAll#1(nil) -> nil
   appendAll2#1(nil) -> nil
   appendAll3(@l) -> appendAll3#1(@l)
   appendAll3#1(::(@l1, @ls)) -> append(appendAll2(@l1), appendAll3(@ls))
   appendAll3#1(nil) -> nil




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   append(@l1, @l2) -> append#1(@l1, @l2)
   appendAll2(@l) -> appendAll2#1(@l)
   appendAll2#1(::(@l1, @ls)) -> append(appendAll(@l1), appendAll2(@ls))

The set Q consists of the following terms:

   appendAll(x0)
   appendAll#1(::(x0, x1))
   append#1(::(x0, x1), x2)
   appendAll2#1(::(x0, x1))
   appendAll3#1(::(x0, x1))
   appendAll#1(nil)
   appendAll3#1(nil)
   append(x0, x1)
   appendAll2(x0)
   appendAll3(x0)
   append#1(nil, x0)
   appendAll2#1(nil)


----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Knuth-Bendix order [KBO] with precedence:::_2 > appendAll_1 > appendAll2#1_1 > appendAll2_1 > append_2 > append#1_2

and weight map:

   appendAll2_1=2
   appendAll2#1_1=1
   appendAll_1=1
   append_2=0
   append#1_2=0
   ::_2=2

The variable weight is 1With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   append(@l1, @l2) -> append#1(@l1, @l2)
   appendAll2(@l) -> appendAll2#1(@l)
   appendAll2#1(::(@l1, @ls)) -> append(appendAll(@l1), appendAll2(@ls))




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
R is empty.
The set Q consists of the following terms:

   appendAll(x0)
   appendAll#1(::(x0, x1))
   append#1(::(x0, x1), x2)
   appendAll2#1(::(x0, x1))
   appendAll3#1(::(x0, x1))
   appendAll#1(nil)
   appendAll3#1(nil)
   append(x0, x1)
   appendAll2(x0)
   appendAll3(x0)
   append#1(nil, x0)
   appendAll2#1(nil)


----------------------------------------

(5) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(6)
YES
