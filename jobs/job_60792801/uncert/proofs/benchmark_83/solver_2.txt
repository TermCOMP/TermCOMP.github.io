YES

Problem 1: 

(VAR vu95NonEmpty u64u95u649 u64a u64b u64breadthu641 u64breadthu642 u64breadthu647 u64breadthu648 u64childrenu643 u64childrenu644 u64childrenu645 u64childrenu646 u64copyoveru641 u64copyoveru642 u64dequeueu641 u64dequeueu642 u64dequeueu643 u64dequeueu644 u64elem u64inq u64l u64l1 u64l2 u64outq u64queue u64queueu39 u64x u64xs u64y u64ys u64z)
(RULES
breadth(u64breadthu641,u64breadthu642) -> breadthu351(dequeue(u64breadthu641,u64breadthu642))
breadthu351(tupleu352(u64queueu39,u64elem)) -> breadthu352(u64elem,u64queueu39)
breadthu352(u58u58(u64z,u64u95u649),u64queueu39) -> breadthu353(breadthu354(u64z),u64queueu39)
breadthu352(nil,u64queueu39) -> nil
breadthu353(tupleu352(u64x,u64ys),u64queueu39) -> u58u58(u64x,breadthu355(enqueues(u64ys,u64queueu39)))
breadthu354(tupleu354(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)) -> children(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)
breadthu355(tupleu352(u64breadthu647,u64breadthu648)) -> breadth(u64breadthu647,u64breadthu648)
children(u64a,u64b,u64l1,u64l2) -> tupleu352(tupleu352(u64a,u64b),childrenu351(u64l1,u64b,u64l2))
childrenu351(u58u58(u64x,u64xs),u64b,u64l2) -> childrenu353(u64l2,u64b,u64x,u64xs)
childrenu351(nil,u64b,u64l2) -> childrenu352(u64l2,u64b)
childrenu352(u58u58(u64y,u64ys),u64b) -> u58u58(tupleu354(u64y,u64b,nil,u64ys),nil)
childrenu352(nil,u64b) -> nil
childrenu353(u58u58(u64y,u64ys),u64b,u64x,u64xs) -> u58u58(tupleu354(u64x,u64b,nil,u64xs),u58u58(tupleu354(u64x,u64y,u64xs,u64ys),nil))
childrenu353(nil,u64b,u64x,u64xs) -> nil
copyover(u64copyoveru641,u64copyoveru642) -> copyoveru351(tupleu352(u64copyoveru641,u64copyoveru642))
copyoveru351(tupleu352(u64inq,u64outq)) -> copyoveru352(u64inq,u64outq)
copyoveru352(u58u58(u64x,u64xs),u64outq) -> copyover(u64xs,u58u58(u64x,u64outq))
copyoveru352(nil,u64outq) -> tupleu352(nil,u64outq)
dequeue(u64dequeueu641,u64dequeueu642) -> dequeueu351(tupleu352(u64dequeueu641,u64dequeueu642))
dequeueu351(tupleu352(u64inq,u64outq)) -> dequeueu352(u64outq,u64inq)
dequeueu352(u58u58(u64y,u64ys),u64inq) -> tupleu352(tupleu352(u64inq,u64ys),u58u58(u64y,nil))
dequeueu352(nil,u64inq) -> dequeueu353(u64inq)
dequeueu353(u58u58(u64x,u64xs)) -> dequeueu354(copyover(u58u58(u64x,u64xs),nil))
dequeueu353(nil) -> tupleu352(tupleu352(nil,nil),nil)
dequeueu354(tupleu352(u64dequeueu643,u64dequeueu644)) -> dequeue(u64dequeueu643,u64dequeueu644)
empty(u64x) -> tupleu352(nil,nil)
enqueue(u64x,u64queue) -> enqueueu351(u64queue,u64x)
enqueueu351(tupleu352(u64inq,u64outq),u64x) -> tupleu352(u58u58(u64x,u64inq),u64outq)
enqueues(u64l,u64queue) -> enqueuesu351(u64l,u64queue)
enqueuesu351(u58u58(u64x,u64xs),u64queue) -> enqueues(u64xs,enqueue(u64x,u64queue))
enqueuesu351(nil,u64queue) -> u64queue
startBreadth(u64xs) -> startBreadthu351(u64xs)
startBreadthu351(u58u58(u64x,u64xs)) -> startBreadthu352(enqueue(tupleu354(u64x,u64x,u64xs,u64xs),empty(u35unit)))
startBreadthu351(nil) -> nil
startBreadthu352(tupleu352(u64breadthu641,u64breadthu642)) -> breadth(u64breadthu641,u64breadthu642)
)
 
(STRATEGY INNERMOST)

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 BREADTH(u64breadthu641,u64breadthu642) -> BREADTHU351(dequeue(u64breadthu641,u64breadthu642))
 BREADTH(u64breadthu641,u64breadthu642) -> DEQUEUE(u64breadthu641,u64breadthu642)
 BREADTHU351(tupleu352(u64queueu39,u64elem)) -> BREADTHU352(u64elem,u64queueu39)
 BREADTHU352(u58u58(u64z,u64u95u649),u64queueu39) -> BREADTHU353(breadthu354(u64z),u64queueu39)
 BREADTHU352(u58u58(u64z,u64u95u649),u64queueu39) -> BREADTHU354(u64z)
 BREADTHU353(tupleu352(u64x,u64ys),u64queueu39) -> BREADTHU355(enqueues(u64ys,u64queueu39))
 BREADTHU353(tupleu352(u64x,u64ys),u64queueu39) -> ENQUEUES(u64ys,u64queueu39)
 BREADTHU354(tupleu354(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)) -> CHILDREN(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)
 BREADTHU355(tupleu352(u64breadthu647,u64breadthu648)) -> BREADTH(u64breadthu647,u64breadthu648)
 CHILDREN(u64a,u64b,u64l1,u64l2) -> CHILDRENU351(u64l1,u64b,u64l2)
 CHILDRENU351(u58u58(u64x,u64xs),u64b,u64l2) -> CHILDRENU353(u64l2,u64b,u64x,u64xs)
 CHILDRENU351(nil,u64b,u64l2) -> CHILDRENU352(u64l2,u64b)
 COPYOVER(u64copyoveru641,u64copyoveru642) -> COPYOVERU351(tupleu352(u64copyoveru641,u64copyoveru642))
 COPYOVERU351(tupleu352(u64inq,u64outq)) -> COPYOVERU352(u64inq,u64outq)
 COPYOVERU352(u58u58(u64x,u64xs),u64outq) -> COPYOVER(u64xs,u58u58(u64x,u64outq))
 DEQUEUE(u64dequeueu641,u64dequeueu642) -> DEQUEUEU351(tupleu352(u64dequeueu641,u64dequeueu642))
 DEQUEUEU351(tupleu352(u64inq,u64outq)) -> DEQUEUEU352(u64outq,u64inq)
 DEQUEUEU352(nil,u64inq) -> DEQUEUEU353(u64inq)
 DEQUEUEU353(u58u58(u64x,u64xs)) -> COPYOVER(u58u58(u64x,u64xs),nil)
 DEQUEUEU353(u58u58(u64x,u64xs)) -> DEQUEUEU354(copyover(u58u58(u64x,u64xs),nil))
 DEQUEUEU354(tupleu352(u64dequeueu643,u64dequeueu644)) -> DEQUEUE(u64dequeueu643,u64dequeueu644)
 ENQUEUE(u64x,u64queue) -> ENQUEUEU351(u64queue,u64x)
 ENQUEUES(u64l,u64queue) -> ENQUEUESU351(u64l,u64queue)
 ENQUEUESU351(u58u58(u64x,u64xs),u64queue) -> ENQUEUE(u64x,u64queue)
 ENQUEUESU351(u58u58(u64x,u64xs),u64queue) -> ENQUEUES(u64xs,enqueue(u64x,u64queue))
 STARTBREADTH(u64xs) -> STARTBREADTHU351(u64xs)
 STARTBREADTHU351(u58u58(u64x,u64xs)) -> EMPTY(u35unit)
 STARTBREADTHU351(u58u58(u64x,u64xs)) -> ENQUEUE(tupleu354(u64x,u64x,u64xs,u64xs),empty(u35unit))
 STARTBREADTHU351(u58u58(u64x,u64xs)) -> STARTBREADTHU352(enqueue(tupleu354(u64x,u64x,u64xs,u64xs),empty(u35unit)))
 STARTBREADTHU352(tupleu352(u64breadthu641,u64breadthu642)) -> BREADTH(u64breadthu641,u64breadthu642)
-> Rules:
 breadth(u64breadthu641,u64breadthu642) -> breadthu351(dequeue(u64breadthu641,u64breadthu642))
 breadthu351(tupleu352(u64queueu39,u64elem)) -> breadthu352(u64elem,u64queueu39)
 breadthu352(u58u58(u64z,u64u95u649),u64queueu39) -> breadthu353(breadthu354(u64z),u64queueu39)
 breadthu352(nil,u64queueu39) -> nil
 breadthu353(tupleu352(u64x,u64ys),u64queueu39) -> u58u58(u64x,breadthu355(enqueues(u64ys,u64queueu39)))
 breadthu354(tupleu354(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)) -> children(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)
 breadthu355(tupleu352(u64breadthu647,u64breadthu648)) -> breadth(u64breadthu647,u64breadthu648)
 children(u64a,u64b,u64l1,u64l2) -> tupleu352(tupleu352(u64a,u64b),childrenu351(u64l1,u64b,u64l2))
 childrenu351(u58u58(u64x,u64xs),u64b,u64l2) -> childrenu353(u64l2,u64b,u64x,u64xs)
 childrenu351(nil,u64b,u64l2) -> childrenu352(u64l2,u64b)
 childrenu352(u58u58(u64y,u64ys),u64b) -> u58u58(tupleu354(u64y,u64b,nil,u64ys),nil)
 childrenu352(nil,u64b) -> nil
 childrenu353(u58u58(u64y,u64ys),u64b,u64x,u64xs) -> u58u58(tupleu354(u64x,u64b,nil,u64xs),u58u58(tupleu354(u64x,u64y,u64xs,u64ys),nil))
 childrenu353(nil,u64b,u64x,u64xs) -> nil
 copyover(u64copyoveru641,u64copyoveru642) -> copyoveru351(tupleu352(u64copyoveru641,u64copyoveru642))
 copyoveru351(tupleu352(u64inq,u64outq)) -> copyoveru352(u64inq,u64outq)
 copyoveru352(u58u58(u64x,u64xs),u64outq) -> copyover(u64xs,u58u58(u64x,u64outq))
 copyoveru352(nil,u64outq) -> tupleu352(nil,u64outq)
 dequeue(u64dequeueu641,u64dequeueu642) -> dequeueu351(tupleu352(u64dequeueu641,u64dequeueu642))
 dequeueu351(tupleu352(u64inq,u64outq)) -> dequeueu352(u64outq,u64inq)
 dequeueu352(u58u58(u64y,u64ys),u64inq) -> tupleu352(tupleu352(u64inq,u64ys),u58u58(u64y,nil))
 dequeueu352(nil,u64inq) -> dequeueu353(u64inq)
 dequeueu353(u58u58(u64x,u64xs)) -> dequeueu354(copyover(u58u58(u64x,u64xs),nil))
 dequeueu353(nil) -> tupleu352(tupleu352(nil,nil),nil)
 dequeueu354(tupleu352(u64dequeueu643,u64dequeueu644)) -> dequeue(u64dequeueu643,u64dequeueu644)
 empty(u64x) -> tupleu352(nil,nil)
 enqueue(u64x,u64queue) -> enqueueu351(u64queue,u64x)
 enqueueu351(tupleu352(u64inq,u64outq),u64x) -> tupleu352(u58u58(u64x,u64inq),u64outq)
 enqueues(u64l,u64queue) -> enqueuesu351(u64l,u64queue)
 enqueuesu351(u58u58(u64x,u64xs),u64queue) -> enqueues(u64xs,enqueue(u64x,u64queue))
 enqueuesu351(nil,u64queue) -> u64queue
 startBreadth(u64xs) -> startBreadthu351(u64xs)
 startBreadthu351(u58u58(u64x,u64xs)) -> startBreadthu352(enqueue(tupleu354(u64x,u64x,u64xs,u64xs),empty(u35unit)))
 startBreadthu351(nil) -> nil
 startBreadthu352(tupleu352(u64breadthu641,u64breadthu642)) -> breadth(u64breadthu641,u64breadthu642)

Problem 1: 

SCC Processor:
-> Pairs:
 BREADTH(u64breadthu641,u64breadthu642) -> BREADTHU351(dequeue(u64breadthu641,u64breadthu642))
 BREADTH(u64breadthu641,u64breadthu642) -> DEQUEUE(u64breadthu641,u64breadthu642)
 BREADTHU351(tupleu352(u64queueu39,u64elem)) -> BREADTHU352(u64elem,u64queueu39)
 BREADTHU352(u58u58(u64z,u64u95u649),u64queueu39) -> BREADTHU353(breadthu354(u64z),u64queueu39)
 BREADTHU352(u58u58(u64z,u64u95u649),u64queueu39) -> BREADTHU354(u64z)
 BREADTHU353(tupleu352(u64x,u64ys),u64queueu39) -> BREADTHU355(enqueues(u64ys,u64queueu39))
 BREADTHU353(tupleu352(u64x,u64ys),u64queueu39) -> ENQUEUES(u64ys,u64queueu39)
 BREADTHU354(tupleu354(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)) -> CHILDREN(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)
 BREADTHU355(tupleu352(u64breadthu647,u64breadthu648)) -> BREADTH(u64breadthu647,u64breadthu648)
 CHILDREN(u64a,u64b,u64l1,u64l2) -> CHILDRENU351(u64l1,u64b,u64l2)
 CHILDRENU351(u58u58(u64x,u64xs),u64b,u64l2) -> CHILDRENU353(u64l2,u64b,u64x,u64xs)
 CHILDRENU351(nil,u64b,u64l2) -> CHILDRENU352(u64l2,u64b)
 COPYOVER(u64copyoveru641,u64copyoveru642) -> COPYOVERU351(tupleu352(u64copyoveru641,u64copyoveru642))
 COPYOVERU351(tupleu352(u64inq,u64outq)) -> COPYOVERU352(u64inq,u64outq)
 COPYOVERU352(u58u58(u64x,u64xs),u64outq) -> COPYOVER(u64xs,u58u58(u64x,u64outq))
 DEQUEUE(u64dequeueu641,u64dequeueu642) -> DEQUEUEU351(tupleu352(u64dequeueu641,u64dequeueu642))
 DEQUEUEU351(tupleu352(u64inq,u64outq)) -> DEQUEUEU352(u64outq,u64inq)
 DEQUEUEU352(nil,u64inq) -> DEQUEUEU353(u64inq)
 DEQUEUEU353(u58u58(u64x,u64xs)) -> COPYOVER(u58u58(u64x,u64xs),nil)
 DEQUEUEU353(u58u58(u64x,u64xs)) -> DEQUEUEU354(copyover(u58u58(u64x,u64xs),nil))
 DEQUEUEU354(tupleu352(u64dequeueu643,u64dequeueu644)) -> DEQUEUE(u64dequeueu643,u64dequeueu644)
 ENQUEUE(u64x,u64queue) -> ENQUEUEU351(u64queue,u64x)
 ENQUEUES(u64l,u64queue) -> ENQUEUESU351(u64l,u64queue)
 ENQUEUESU351(u58u58(u64x,u64xs),u64queue) -> ENQUEUE(u64x,u64queue)
 ENQUEUESU351(u58u58(u64x,u64xs),u64queue) -> ENQUEUES(u64xs,enqueue(u64x,u64queue))
 STARTBREADTH(u64xs) -> STARTBREADTHU351(u64xs)
 STARTBREADTHU351(u58u58(u64x,u64xs)) -> EMPTY(u35unit)
 STARTBREADTHU351(u58u58(u64x,u64xs)) -> ENQUEUE(tupleu354(u64x,u64x,u64xs,u64xs),empty(u35unit))
 STARTBREADTHU351(u58u58(u64x,u64xs)) -> STARTBREADTHU352(enqueue(tupleu354(u64x,u64x,u64xs,u64xs),empty(u35unit)))
 STARTBREADTHU352(tupleu352(u64breadthu641,u64breadthu642)) -> BREADTH(u64breadthu641,u64breadthu642)
-> Rules:
 breadth(u64breadthu641,u64breadthu642) -> breadthu351(dequeue(u64breadthu641,u64breadthu642))
 breadthu351(tupleu352(u64queueu39,u64elem)) -> breadthu352(u64elem,u64queueu39)
 breadthu352(u58u58(u64z,u64u95u649),u64queueu39) -> breadthu353(breadthu354(u64z),u64queueu39)
 breadthu352(nil,u64queueu39) -> nil
 breadthu353(tupleu352(u64x,u64ys),u64queueu39) -> u58u58(u64x,breadthu355(enqueues(u64ys,u64queueu39)))
 breadthu354(tupleu354(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)) -> children(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)
 breadthu355(tupleu352(u64breadthu647,u64breadthu648)) -> breadth(u64breadthu647,u64breadthu648)
 children(u64a,u64b,u64l1,u64l2) -> tupleu352(tupleu352(u64a,u64b),childrenu351(u64l1,u64b,u64l2))
 childrenu351(u58u58(u64x,u64xs),u64b,u64l2) -> childrenu353(u64l2,u64b,u64x,u64xs)
 childrenu351(nil,u64b,u64l2) -> childrenu352(u64l2,u64b)
 childrenu352(u58u58(u64y,u64ys),u64b) -> u58u58(tupleu354(u64y,u64b,nil,u64ys),nil)
 childrenu352(nil,u64b) -> nil
 childrenu353(u58u58(u64y,u64ys),u64b,u64x,u64xs) -> u58u58(tupleu354(u64x,u64b,nil,u64xs),u58u58(tupleu354(u64x,u64y,u64xs,u64ys),nil))
 childrenu353(nil,u64b,u64x,u64xs) -> nil
 copyover(u64copyoveru641,u64copyoveru642) -> copyoveru351(tupleu352(u64copyoveru641,u64copyoveru642))
 copyoveru351(tupleu352(u64inq,u64outq)) -> copyoveru352(u64inq,u64outq)
 copyoveru352(u58u58(u64x,u64xs),u64outq) -> copyover(u64xs,u58u58(u64x,u64outq))
 copyoveru352(nil,u64outq) -> tupleu352(nil,u64outq)
 dequeue(u64dequeueu641,u64dequeueu642) -> dequeueu351(tupleu352(u64dequeueu641,u64dequeueu642))
 dequeueu351(tupleu352(u64inq,u64outq)) -> dequeueu352(u64outq,u64inq)
 dequeueu352(u58u58(u64y,u64ys),u64inq) -> tupleu352(tupleu352(u64inq,u64ys),u58u58(u64y,nil))
 dequeueu352(nil,u64inq) -> dequeueu353(u64inq)
 dequeueu353(u58u58(u64x,u64xs)) -> dequeueu354(copyover(u58u58(u64x,u64xs),nil))
 dequeueu353(nil) -> tupleu352(tupleu352(nil,nil),nil)
 dequeueu354(tupleu352(u64dequeueu643,u64dequeueu644)) -> dequeue(u64dequeueu643,u64dequeueu644)
 empty(u64x) -> tupleu352(nil,nil)
 enqueue(u64x,u64queue) -> enqueueu351(u64queue,u64x)
 enqueueu351(tupleu352(u64inq,u64outq),u64x) -> tupleu352(u58u58(u64x,u64inq),u64outq)
 enqueues(u64l,u64queue) -> enqueuesu351(u64l,u64queue)
 enqueuesu351(u58u58(u64x,u64xs),u64queue) -> enqueues(u64xs,enqueue(u64x,u64queue))
 enqueuesu351(nil,u64queue) -> u64queue
 startBreadth(u64xs) -> startBreadthu351(u64xs)
 startBreadthu351(u58u58(u64x,u64xs)) -> startBreadthu352(enqueue(tupleu354(u64x,u64x,u64xs,u64xs),empty(u35unit)))
 startBreadthu351(nil) -> nil
 startBreadthu352(tupleu352(u64breadthu641,u64breadthu642)) -> breadth(u64breadthu641,u64breadthu642)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ENQUEUES(u64l,u64queue) -> ENQUEUESU351(u64l,u64queue)
 ENQUEUESU351(u58u58(u64x,u64xs),u64queue) -> ENQUEUES(u64xs,enqueue(u64x,u64queue))
->->-> Rules:
 breadth(u64breadthu641,u64breadthu642) -> breadthu351(dequeue(u64breadthu641,u64breadthu642))
 breadthu351(tupleu352(u64queueu39,u64elem)) -> breadthu352(u64elem,u64queueu39)
 breadthu352(u58u58(u64z,u64u95u649),u64queueu39) -> breadthu353(breadthu354(u64z),u64queueu39)
 breadthu352(nil,u64queueu39) -> nil
 breadthu353(tupleu352(u64x,u64ys),u64queueu39) -> u58u58(u64x,breadthu355(enqueues(u64ys,u64queueu39)))
 breadthu354(tupleu354(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)) -> children(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)
 breadthu355(tupleu352(u64breadthu647,u64breadthu648)) -> breadth(u64breadthu647,u64breadthu648)
 children(u64a,u64b,u64l1,u64l2) -> tupleu352(tupleu352(u64a,u64b),childrenu351(u64l1,u64b,u64l2))
 childrenu351(u58u58(u64x,u64xs),u64b,u64l2) -> childrenu353(u64l2,u64b,u64x,u64xs)
 childrenu351(nil,u64b,u64l2) -> childrenu352(u64l2,u64b)
 childrenu352(u58u58(u64y,u64ys),u64b) -> u58u58(tupleu354(u64y,u64b,nil,u64ys),nil)
 childrenu352(nil,u64b) -> nil
 childrenu353(u58u58(u64y,u64ys),u64b,u64x,u64xs) -> u58u58(tupleu354(u64x,u64b,nil,u64xs),u58u58(tupleu354(u64x,u64y,u64xs,u64ys),nil))
 childrenu353(nil,u64b,u64x,u64xs) -> nil
 copyover(u64copyoveru641,u64copyoveru642) -> copyoveru351(tupleu352(u64copyoveru641,u64copyoveru642))
 copyoveru351(tupleu352(u64inq,u64outq)) -> copyoveru352(u64inq,u64outq)
 copyoveru352(u58u58(u64x,u64xs),u64outq) -> copyover(u64xs,u58u58(u64x,u64outq))
 copyoveru352(nil,u64outq) -> tupleu352(nil,u64outq)
 dequeue(u64dequeueu641,u64dequeueu642) -> dequeueu351(tupleu352(u64dequeueu641,u64dequeueu642))
 dequeueu351(tupleu352(u64inq,u64outq)) -> dequeueu352(u64outq,u64inq)
 dequeueu352(u58u58(u64y,u64ys),u64inq) -> tupleu352(tupleu352(u64inq,u64ys),u58u58(u64y,nil))
 dequeueu352(nil,u64inq) -> dequeueu353(u64inq)
 dequeueu353(u58u58(u64x,u64xs)) -> dequeueu354(copyover(u58u58(u64x,u64xs),nil))
 dequeueu353(nil) -> tupleu352(tupleu352(nil,nil),nil)
 dequeueu354(tupleu352(u64dequeueu643,u64dequeueu644)) -> dequeue(u64dequeueu643,u64dequeueu644)
 empty(u64x) -> tupleu352(nil,nil)
 enqueue(u64x,u64queue) -> enqueueu351(u64queue,u64x)
 enqueueu351(tupleu352(u64inq,u64outq),u64x) -> tupleu352(u58u58(u64x,u64inq),u64outq)
 enqueues(u64l,u64queue) -> enqueuesu351(u64l,u64queue)
 enqueuesu351(u58u58(u64x,u64xs),u64queue) -> enqueues(u64xs,enqueue(u64x,u64queue))
 enqueuesu351(nil,u64queue) -> u64queue
 startBreadth(u64xs) -> startBreadthu351(u64xs)
 startBreadthu351(u58u58(u64x,u64xs)) -> startBreadthu352(enqueue(tupleu354(u64x,u64x,u64xs,u64xs),empty(u35unit)))
 startBreadthu351(nil) -> nil
 startBreadthu352(tupleu352(u64breadthu641,u64breadthu642)) -> breadth(u64breadthu641,u64breadthu642)
->->Cycle:
->->-> Pairs:
 COPYOVER(u64copyoveru641,u64copyoveru642) -> COPYOVERU351(tupleu352(u64copyoveru641,u64copyoveru642))
 COPYOVERU351(tupleu352(u64inq,u64outq)) -> COPYOVERU352(u64inq,u64outq)
 COPYOVERU352(u58u58(u64x,u64xs),u64outq) -> COPYOVER(u64xs,u58u58(u64x,u64outq))
->->-> Rules:
 breadth(u64breadthu641,u64breadthu642) -> breadthu351(dequeue(u64breadthu641,u64breadthu642))
 breadthu351(tupleu352(u64queueu39,u64elem)) -> breadthu352(u64elem,u64queueu39)
 breadthu352(u58u58(u64z,u64u95u649),u64queueu39) -> breadthu353(breadthu354(u64z),u64queueu39)
 breadthu352(nil,u64queueu39) -> nil
 breadthu353(tupleu352(u64x,u64ys),u64queueu39) -> u58u58(u64x,breadthu355(enqueues(u64ys,u64queueu39)))
 breadthu354(tupleu354(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)) -> children(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)
 breadthu355(tupleu352(u64breadthu647,u64breadthu648)) -> breadth(u64breadthu647,u64breadthu648)
 children(u64a,u64b,u64l1,u64l2) -> tupleu352(tupleu352(u64a,u64b),childrenu351(u64l1,u64b,u64l2))
 childrenu351(u58u58(u64x,u64xs),u64b,u64l2) -> childrenu353(u64l2,u64b,u64x,u64xs)
 childrenu351(nil,u64b,u64l2) -> childrenu352(u64l2,u64b)
 childrenu352(u58u58(u64y,u64ys),u64b) -> u58u58(tupleu354(u64y,u64b,nil,u64ys),nil)
 childrenu352(nil,u64b) -> nil
 childrenu353(u58u58(u64y,u64ys),u64b,u64x,u64xs) -> u58u58(tupleu354(u64x,u64b,nil,u64xs),u58u58(tupleu354(u64x,u64y,u64xs,u64ys),nil))
 childrenu353(nil,u64b,u64x,u64xs) -> nil
 copyover(u64copyoveru641,u64copyoveru642) -> copyoveru351(tupleu352(u64copyoveru641,u64copyoveru642))
 copyoveru351(tupleu352(u64inq,u64outq)) -> copyoveru352(u64inq,u64outq)
 copyoveru352(u58u58(u64x,u64xs),u64outq) -> copyover(u64xs,u58u58(u64x,u64outq))
 copyoveru352(nil,u64outq) -> tupleu352(nil,u64outq)
 dequeue(u64dequeueu641,u64dequeueu642) -> dequeueu351(tupleu352(u64dequeueu641,u64dequeueu642))
 dequeueu351(tupleu352(u64inq,u64outq)) -> dequeueu352(u64outq,u64inq)
 dequeueu352(u58u58(u64y,u64ys),u64inq) -> tupleu352(tupleu352(u64inq,u64ys),u58u58(u64y,nil))
 dequeueu352(nil,u64inq) -> dequeueu353(u64inq)
 dequeueu353(u58u58(u64x,u64xs)) -> dequeueu354(copyover(u58u58(u64x,u64xs),nil))
 dequeueu353(nil) -> tupleu352(tupleu352(nil,nil),nil)
 dequeueu354(tupleu352(u64dequeueu643,u64dequeueu644)) -> dequeue(u64dequeueu643,u64dequeueu644)
 empty(u64x) -> tupleu352(nil,nil)
 enqueue(u64x,u64queue) -> enqueueu351(u64queue,u64x)
 enqueueu351(tupleu352(u64inq,u64outq),u64x) -> tupleu352(u58u58(u64x,u64inq),u64outq)
 enqueues(u64l,u64queue) -> enqueuesu351(u64l,u64queue)
 enqueuesu351(u58u58(u64x,u64xs),u64queue) -> enqueues(u64xs,enqueue(u64x,u64queue))
 enqueuesu351(nil,u64queue) -> u64queue
 startBreadth(u64xs) -> startBreadthu351(u64xs)
 startBreadthu351(u58u58(u64x,u64xs)) -> startBreadthu352(enqueue(tupleu354(u64x,u64x,u64xs,u64xs),empty(u35unit)))
 startBreadthu351(nil) -> nil
 startBreadthu352(tupleu352(u64breadthu641,u64breadthu642)) -> breadth(u64breadthu641,u64breadthu642)
->->Cycle:
->->-> Pairs:
 DEQUEUE(u64dequeueu641,u64dequeueu642) -> DEQUEUEU351(tupleu352(u64dequeueu641,u64dequeueu642))
 DEQUEUEU351(tupleu352(u64inq,u64outq)) -> DEQUEUEU352(u64outq,u64inq)
 DEQUEUEU352(nil,u64inq) -> DEQUEUEU353(u64inq)
 DEQUEUEU353(u58u58(u64x,u64xs)) -> DEQUEUEU354(copyover(u58u58(u64x,u64xs),nil))
 DEQUEUEU354(tupleu352(u64dequeueu643,u64dequeueu644)) -> DEQUEUE(u64dequeueu643,u64dequeueu644)
->->-> Rules:
 breadth(u64breadthu641,u64breadthu642) -> breadthu351(dequeue(u64breadthu641,u64breadthu642))
 breadthu351(tupleu352(u64queueu39,u64elem)) -> breadthu352(u64elem,u64queueu39)
 breadthu352(u58u58(u64z,u64u95u649),u64queueu39) -> breadthu353(breadthu354(u64z),u64queueu39)
 breadthu352(nil,u64queueu39) -> nil
 breadthu353(tupleu352(u64x,u64ys),u64queueu39) -> u58u58(u64x,breadthu355(enqueues(u64ys,u64queueu39)))
 breadthu354(tupleu354(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)) -> children(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)
 breadthu355(tupleu352(u64breadthu647,u64breadthu648)) -> breadth(u64breadthu647,u64breadthu648)
 children(u64a,u64b,u64l1,u64l2) -> tupleu352(tupleu352(u64a,u64b),childrenu351(u64l1,u64b,u64l2))
 childrenu351(u58u58(u64x,u64xs),u64b,u64l2) -> childrenu353(u64l2,u64b,u64x,u64xs)
 childrenu351(nil,u64b,u64l2) -> childrenu352(u64l2,u64b)
 childrenu352(u58u58(u64y,u64ys),u64b) -> u58u58(tupleu354(u64y,u64b,nil,u64ys),nil)
 childrenu352(nil,u64b) -> nil
 childrenu353(u58u58(u64y,u64ys),u64b,u64x,u64xs) -> u58u58(tupleu354(u64x,u64b,nil,u64xs),u58u58(tupleu354(u64x,u64y,u64xs,u64ys),nil))
 childrenu353(nil,u64b,u64x,u64xs) -> nil
 copyover(u64copyoveru641,u64copyoveru642) -> copyoveru351(tupleu352(u64copyoveru641,u64copyoveru642))
 copyoveru351(tupleu352(u64inq,u64outq)) -> copyoveru352(u64inq,u64outq)
 copyoveru352(u58u58(u64x,u64xs),u64outq) -> copyover(u64xs,u58u58(u64x,u64outq))
 copyoveru352(nil,u64outq) -> tupleu352(nil,u64outq)
 dequeue(u64dequeueu641,u64dequeueu642) -> dequeueu351(tupleu352(u64dequeueu641,u64dequeueu642))
 dequeueu351(tupleu352(u64inq,u64outq)) -> dequeueu352(u64outq,u64inq)
 dequeueu352(u58u58(u64y,u64ys),u64inq) -> tupleu352(tupleu352(u64inq,u64ys),u58u58(u64y,nil))
 dequeueu352(nil,u64inq) -> dequeueu353(u64inq)
 dequeueu353(u58u58(u64x,u64xs)) -> dequeueu354(copyover(u58u58(u64x,u64xs),nil))
 dequeueu353(nil) -> tupleu352(tupleu352(nil,nil),nil)
 dequeueu354(tupleu352(u64dequeueu643,u64dequeueu644)) -> dequeue(u64dequeueu643,u64dequeueu644)
 empty(u64x) -> tupleu352(nil,nil)
 enqueue(u64x,u64queue) -> enqueueu351(u64queue,u64x)
 enqueueu351(tupleu352(u64inq,u64outq),u64x) -> tupleu352(u58u58(u64x,u64inq),u64outq)
 enqueues(u64l,u64queue) -> enqueuesu351(u64l,u64queue)
 enqueuesu351(u58u58(u64x,u64xs),u64queue) -> enqueues(u64xs,enqueue(u64x,u64queue))
 enqueuesu351(nil,u64queue) -> u64queue
 startBreadth(u64xs) -> startBreadthu351(u64xs)
 startBreadthu351(u58u58(u64x,u64xs)) -> startBreadthu352(enqueue(tupleu354(u64x,u64x,u64xs,u64xs),empty(u35unit)))
 startBreadthu351(nil) -> nil
 startBreadthu352(tupleu352(u64breadthu641,u64breadthu642)) -> breadth(u64breadthu641,u64breadthu642)
->->Cycle:
->->-> Pairs:
 BREADTH(u64breadthu641,u64breadthu642) -> BREADTHU351(dequeue(u64breadthu641,u64breadthu642))
 BREADTHU351(tupleu352(u64queueu39,u64elem)) -> BREADTHU352(u64elem,u64queueu39)
 BREADTHU352(u58u58(u64z,u64u95u649),u64queueu39) -> BREADTHU353(breadthu354(u64z),u64queueu39)
 BREADTHU353(tupleu352(u64x,u64ys),u64queueu39) -> BREADTHU355(enqueues(u64ys,u64queueu39))
 BREADTHU355(tupleu352(u64breadthu647,u64breadthu648)) -> BREADTH(u64breadthu647,u64breadthu648)
->->-> Rules:
 breadth(u64breadthu641,u64breadthu642) -> breadthu351(dequeue(u64breadthu641,u64breadthu642))
 breadthu351(tupleu352(u64queueu39,u64elem)) -> breadthu352(u64elem,u64queueu39)
 breadthu352(u58u58(u64z,u64u95u649),u64queueu39) -> breadthu353(breadthu354(u64z),u64queueu39)
 breadthu352(nil,u64queueu39) -> nil
 breadthu353(tupleu352(u64x,u64ys),u64queueu39) -> u58u58(u64x,breadthu355(enqueues(u64ys,u64queueu39)))
 breadthu354(tupleu354(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)) -> children(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)
 breadthu355(tupleu352(u64breadthu647,u64breadthu648)) -> breadth(u64breadthu647,u64breadthu648)
 children(u64a,u64b,u64l1,u64l2) -> tupleu352(tupleu352(u64a,u64b),childrenu351(u64l1,u64b,u64l2))
 childrenu351(u58u58(u64x,u64xs),u64b,u64l2) -> childrenu353(u64l2,u64b,u64x,u64xs)
 childrenu351(nil,u64b,u64l2) -> childrenu352(u64l2,u64b)
 childrenu352(u58u58(u64y,u64ys),u64b) -> u58u58(tupleu354(u64y,u64b,nil,u64ys),nil)
 childrenu352(nil,u64b) -> nil
 childrenu353(u58u58(u64y,u64ys),u64b,u64x,u64xs) -> u58u58(tupleu354(u64x,u64b,nil,u64xs),u58u58(tupleu354(u64x,u64y,u64xs,u64ys),nil))
 childrenu353(nil,u64b,u64x,u64xs) -> nil
 copyover(u64copyoveru641,u64copyoveru642) -> copyoveru351(tupleu352(u64copyoveru641,u64copyoveru642))
 copyoveru351(tupleu352(u64inq,u64outq)) -> copyoveru352(u64inq,u64outq)
 copyoveru352(u58u58(u64x,u64xs),u64outq) -> copyover(u64xs,u58u58(u64x,u64outq))
 copyoveru352(nil,u64outq) -> tupleu352(nil,u64outq)
 dequeue(u64dequeueu641,u64dequeueu642) -> dequeueu351(tupleu352(u64dequeueu641,u64dequeueu642))
 dequeueu351(tupleu352(u64inq,u64outq)) -> dequeueu352(u64outq,u64inq)
 dequeueu352(u58u58(u64y,u64ys),u64inq) -> tupleu352(tupleu352(u64inq,u64ys),u58u58(u64y,nil))
 dequeueu352(nil,u64inq) -> dequeueu353(u64inq)
 dequeueu353(u58u58(u64x,u64xs)) -> dequeueu354(copyover(u58u58(u64x,u64xs),nil))
 dequeueu353(nil) -> tupleu352(tupleu352(nil,nil),nil)
 dequeueu354(tupleu352(u64dequeueu643,u64dequeueu644)) -> dequeue(u64dequeueu643,u64dequeueu644)
 empty(u64x) -> tupleu352(nil,nil)
 enqueue(u64x,u64queue) -> enqueueu351(u64queue,u64x)
 enqueueu351(tupleu352(u64inq,u64outq),u64x) -> tupleu352(u58u58(u64x,u64inq),u64outq)
 enqueues(u64l,u64queue) -> enqueuesu351(u64l,u64queue)
 enqueuesu351(u58u58(u64x,u64xs),u64queue) -> enqueues(u64xs,enqueue(u64x,u64queue))
 enqueuesu351(nil,u64queue) -> u64queue
 startBreadth(u64xs) -> startBreadthu351(u64xs)
 startBreadthu351(u58u58(u64x,u64xs)) -> startBreadthu352(enqueue(tupleu354(u64x,u64x,u64xs,u64xs),empty(u35unit)))
 startBreadthu351(nil) -> nil
 startBreadthu352(tupleu352(u64breadthu641,u64breadthu642)) -> breadth(u64breadthu641,u64breadthu642)


The problem is decomposed in 4 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 ENQUEUES(u64l,u64queue) -> ENQUEUESU351(u64l,u64queue)
 ENQUEUESU351(u58u58(u64x,u64xs),u64queue) -> ENQUEUES(u64xs,enqueue(u64x,u64queue))
-> Rules:
 breadth(u64breadthu641,u64breadthu642) -> breadthu351(dequeue(u64breadthu641,u64breadthu642))
 breadthu351(tupleu352(u64queueu39,u64elem)) -> breadthu352(u64elem,u64queueu39)
 breadthu352(u58u58(u64z,u64u95u649),u64queueu39) -> breadthu353(breadthu354(u64z),u64queueu39)
 breadthu352(nil,u64queueu39) -> nil
 breadthu353(tupleu352(u64x,u64ys),u64queueu39) -> u58u58(u64x,breadthu355(enqueues(u64ys,u64queueu39)))
 breadthu354(tupleu354(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)) -> children(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)
 breadthu355(tupleu352(u64breadthu647,u64breadthu648)) -> breadth(u64breadthu647,u64breadthu648)
 children(u64a,u64b,u64l1,u64l2) -> tupleu352(tupleu352(u64a,u64b),childrenu351(u64l1,u64b,u64l2))
 childrenu351(u58u58(u64x,u64xs),u64b,u64l2) -> childrenu353(u64l2,u64b,u64x,u64xs)
 childrenu351(nil,u64b,u64l2) -> childrenu352(u64l2,u64b)
 childrenu352(u58u58(u64y,u64ys),u64b) -> u58u58(tupleu354(u64y,u64b,nil,u64ys),nil)
 childrenu352(nil,u64b) -> nil
 childrenu353(u58u58(u64y,u64ys),u64b,u64x,u64xs) -> u58u58(tupleu354(u64x,u64b,nil,u64xs),u58u58(tupleu354(u64x,u64y,u64xs,u64ys),nil))
 childrenu353(nil,u64b,u64x,u64xs) -> nil
 copyover(u64copyoveru641,u64copyoveru642) -> copyoveru351(tupleu352(u64copyoveru641,u64copyoveru642))
 copyoveru351(tupleu352(u64inq,u64outq)) -> copyoveru352(u64inq,u64outq)
 copyoveru352(u58u58(u64x,u64xs),u64outq) -> copyover(u64xs,u58u58(u64x,u64outq))
 copyoveru352(nil,u64outq) -> tupleu352(nil,u64outq)
 dequeue(u64dequeueu641,u64dequeueu642) -> dequeueu351(tupleu352(u64dequeueu641,u64dequeueu642))
 dequeueu351(tupleu352(u64inq,u64outq)) -> dequeueu352(u64outq,u64inq)
 dequeueu352(u58u58(u64y,u64ys),u64inq) -> tupleu352(tupleu352(u64inq,u64ys),u58u58(u64y,nil))
 dequeueu352(nil,u64inq) -> dequeueu353(u64inq)
 dequeueu353(u58u58(u64x,u64xs)) -> dequeueu354(copyover(u58u58(u64x,u64xs),nil))
 dequeueu353(nil) -> tupleu352(tupleu352(nil,nil),nil)
 dequeueu354(tupleu352(u64dequeueu643,u64dequeueu644)) -> dequeue(u64dequeueu643,u64dequeueu644)
 empty(u64x) -> tupleu352(nil,nil)
 enqueue(u64x,u64queue) -> enqueueu351(u64queue,u64x)
 enqueueu351(tupleu352(u64inq,u64outq),u64x) -> tupleu352(u58u58(u64x,u64inq),u64outq)
 enqueues(u64l,u64queue) -> enqueuesu351(u64l,u64queue)
 enqueuesu351(u58u58(u64x,u64xs),u64queue) -> enqueues(u64xs,enqueue(u64x,u64queue))
 enqueuesu351(nil,u64queue) -> u64queue
 startBreadth(u64xs) -> startBreadthu351(u64xs)
 startBreadthu351(u58u58(u64x,u64xs)) -> startBreadthu352(enqueue(tupleu354(u64x,u64x,u64xs,u64xs),empty(u35unit)))
 startBreadthu351(nil) -> nil
 startBreadthu352(tupleu352(u64breadthu641,u64breadthu642)) -> breadth(u64breadthu641,u64breadthu642)
->Projection:
 pi(ENQUEUES) = 1
 pi(ENQUEUESU351) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 ENQUEUES(u64l,u64queue) -> ENQUEUESU351(u64l,u64queue)
-> Rules:
 breadth(u64breadthu641,u64breadthu642) -> breadthu351(dequeue(u64breadthu641,u64breadthu642))
 breadthu351(tupleu352(u64queueu39,u64elem)) -> breadthu352(u64elem,u64queueu39)
 breadthu352(u58u58(u64z,u64u95u649),u64queueu39) -> breadthu353(breadthu354(u64z),u64queueu39)
 breadthu352(nil,u64queueu39) -> nil
 breadthu353(tupleu352(u64x,u64ys),u64queueu39) -> u58u58(u64x,breadthu355(enqueues(u64ys,u64queueu39)))
 breadthu354(tupleu354(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)) -> children(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)
 breadthu355(tupleu352(u64breadthu647,u64breadthu648)) -> breadth(u64breadthu647,u64breadthu648)
 children(u64a,u64b,u64l1,u64l2) -> tupleu352(tupleu352(u64a,u64b),childrenu351(u64l1,u64b,u64l2))
 childrenu351(u58u58(u64x,u64xs),u64b,u64l2) -> childrenu353(u64l2,u64b,u64x,u64xs)
 childrenu351(nil,u64b,u64l2) -> childrenu352(u64l2,u64b)
 childrenu352(u58u58(u64y,u64ys),u64b) -> u58u58(tupleu354(u64y,u64b,nil,u64ys),nil)
 childrenu352(nil,u64b) -> nil
 childrenu353(u58u58(u64y,u64ys),u64b,u64x,u64xs) -> u58u58(tupleu354(u64x,u64b,nil,u64xs),u58u58(tupleu354(u64x,u64y,u64xs,u64ys),nil))
 childrenu353(nil,u64b,u64x,u64xs) -> nil
 copyover(u64copyoveru641,u64copyoveru642) -> copyoveru351(tupleu352(u64copyoveru641,u64copyoveru642))
 copyoveru351(tupleu352(u64inq,u64outq)) -> copyoveru352(u64inq,u64outq)
 copyoveru352(u58u58(u64x,u64xs),u64outq) -> copyover(u64xs,u58u58(u64x,u64outq))
 copyoveru352(nil,u64outq) -> tupleu352(nil,u64outq)
 dequeue(u64dequeueu641,u64dequeueu642) -> dequeueu351(tupleu352(u64dequeueu641,u64dequeueu642))
 dequeueu351(tupleu352(u64inq,u64outq)) -> dequeueu352(u64outq,u64inq)
 dequeueu352(u58u58(u64y,u64ys),u64inq) -> tupleu352(tupleu352(u64inq,u64ys),u58u58(u64y,nil))
 dequeueu352(nil,u64inq) -> dequeueu353(u64inq)
 dequeueu353(u58u58(u64x,u64xs)) -> dequeueu354(copyover(u58u58(u64x,u64xs),nil))
 dequeueu353(nil) -> tupleu352(tupleu352(nil,nil),nil)
 dequeueu354(tupleu352(u64dequeueu643,u64dequeueu644)) -> dequeue(u64dequeueu643,u64dequeueu644)
 empty(u64x) -> tupleu352(nil,nil)
 enqueue(u64x,u64queue) -> enqueueu351(u64queue,u64x)
 enqueueu351(tupleu352(u64inq,u64outq),u64x) -> tupleu352(u58u58(u64x,u64inq),u64outq)
 enqueues(u64l,u64queue) -> enqueuesu351(u64l,u64queue)
 enqueuesu351(u58u58(u64x,u64xs),u64queue) -> enqueues(u64xs,enqueue(u64x,u64queue))
 enqueuesu351(nil,u64queue) -> u64queue
 startBreadth(u64xs) -> startBreadthu351(u64xs)
 startBreadthu351(u58u58(u64x,u64xs)) -> startBreadthu352(enqueue(tupleu354(u64x,u64x,u64xs,u64xs),empty(u35unit)))
 startBreadthu351(nil) -> nil
 startBreadthu352(tupleu352(u64breadthu641,u64breadthu642)) -> breadth(u64breadthu641,u64breadthu642)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Reduction Pairs Processor:
-> Pairs:
 COPYOVER(u64copyoveru641,u64copyoveru642) -> COPYOVERU351(tupleu352(u64copyoveru641,u64copyoveru642))
 COPYOVERU351(tupleu352(u64inq,u64outq)) -> COPYOVERU352(u64inq,u64outq)
 COPYOVERU352(u58u58(u64x,u64xs),u64outq) -> COPYOVER(u64xs,u58u58(u64x,u64outq))
-> Rules:
 breadth(u64breadthu641,u64breadthu642) -> breadthu351(dequeue(u64breadthu641,u64breadthu642))
 breadthu351(tupleu352(u64queueu39,u64elem)) -> breadthu352(u64elem,u64queueu39)
 breadthu352(u58u58(u64z,u64u95u649),u64queueu39) -> breadthu353(breadthu354(u64z),u64queueu39)
 breadthu352(nil,u64queueu39) -> nil
 breadthu353(tupleu352(u64x,u64ys),u64queueu39) -> u58u58(u64x,breadthu355(enqueues(u64ys,u64queueu39)))
 breadthu354(tupleu354(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)) -> children(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)
 breadthu355(tupleu352(u64breadthu647,u64breadthu648)) -> breadth(u64breadthu647,u64breadthu648)
 children(u64a,u64b,u64l1,u64l2) -> tupleu352(tupleu352(u64a,u64b),childrenu351(u64l1,u64b,u64l2))
 childrenu351(u58u58(u64x,u64xs),u64b,u64l2) -> childrenu353(u64l2,u64b,u64x,u64xs)
 childrenu351(nil,u64b,u64l2) -> childrenu352(u64l2,u64b)
 childrenu352(u58u58(u64y,u64ys),u64b) -> u58u58(tupleu354(u64y,u64b,nil,u64ys),nil)
 childrenu352(nil,u64b) -> nil
 childrenu353(u58u58(u64y,u64ys),u64b,u64x,u64xs) -> u58u58(tupleu354(u64x,u64b,nil,u64xs),u58u58(tupleu354(u64x,u64y,u64xs,u64ys),nil))
 childrenu353(nil,u64b,u64x,u64xs) -> nil
 copyover(u64copyoveru641,u64copyoveru642) -> copyoveru351(tupleu352(u64copyoveru641,u64copyoveru642))
 copyoveru351(tupleu352(u64inq,u64outq)) -> copyoveru352(u64inq,u64outq)
 copyoveru352(u58u58(u64x,u64xs),u64outq) -> copyover(u64xs,u58u58(u64x,u64outq))
 copyoveru352(nil,u64outq) -> tupleu352(nil,u64outq)
 dequeue(u64dequeueu641,u64dequeueu642) -> dequeueu351(tupleu352(u64dequeueu641,u64dequeueu642))
 dequeueu351(tupleu352(u64inq,u64outq)) -> dequeueu352(u64outq,u64inq)
 dequeueu352(u58u58(u64y,u64ys),u64inq) -> tupleu352(tupleu352(u64inq,u64ys),u58u58(u64y,nil))
 dequeueu352(nil,u64inq) -> dequeueu353(u64inq)
 dequeueu353(u58u58(u64x,u64xs)) -> dequeueu354(copyover(u58u58(u64x,u64xs),nil))
 dequeueu353(nil) -> tupleu352(tupleu352(nil,nil),nil)
 dequeueu354(tupleu352(u64dequeueu643,u64dequeueu644)) -> dequeue(u64dequeueu643,u64dequeueu644)
 empty(u64x) -> tupleu352(nil,nil)
 enqueue(u64x,u64queue) -> enqueueu351(u64queue,u64x)
 enqueueu351(tupleu352(u64inq,u64outq),u64x) -> tupleu352(u58u58(u64x,u64inq),u64outq)
 enqueues(u64l,u64queue) -> enqueuesu351(u64l,u64queue)
 enqueuesu351(u58u58(u64x,u64xs),u64queue) -> enqueues(u64xs,enqueue(u64x,u64queue))
 enqueuesu351(nil,u64queue) -> u64queue
 startBreadth(u64xs) -> startBreadthu351(u64xs)
 startBreadthu351(u58u58(u64x,u64xs)) -> startBreadthu352(enqueue(tupleu354(u64x,u64x,u64xs,u64xs),empty(u35unit)))
 startBreadthu351(nil) -> nil
 startBreadthu352(tupleu352(u64breadthu641,u64breadthu642)) -> breadth(u64breadthu641,u64breadthu642)
-> Usable rules:
 Empty
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[breadth](X1,X2) = 0
[breadthu351](X) = 0
[breadthu352](X1,X2) = 0
[breadthu353](X1,X2) = 0
[breadthu354](X) = 0
[breadthu355](X) = 0
[children](X1,X2,X3,X4) = 0
[childrenu351](X1,X2,X3) = 0
[childrenu352](X1,X2) = 0
[childrenu353](X1,X2,X3,X4) = 0
[copyover](X1,X2) = 0
[copyoveru351](X) = 0
[copyoveru352](X1,X2) = 0
[dequeue](X1,X2) = 0
[dequeueu351](X) = 0
[dequeueu352](X1,X2) = 0
[dequeueu353](X) = 0
[dequeueu354](X) = 0
[empty](X) = 0
[enqueue](X1,X2) = 0
[enqueueu351](X1,X2) = 0
[enqueues](X1,X2) = 0
[enqueuesu351](X1,X2) = 0
[startBreadth](X) = 0
[startBreadthu351](X) = 0
[startBreadthu352](X) = 0
[u35unit] = 0
[u58u58](X1,X2) = 2.X1 + 2.X2 + 2
[fSNonEmpty] = 0
[nil] = 0
[tupleu352](X1,X2) = 2.X1
[tupleu354](X1,X2,X3,X4) = 0
[BREADTH](X1,X2) = 0
[BREADTHU351](X) = 0
[BREADTHU352](X1,X2) = 0
[BREADTHU353](X1,X2) = 0
[BREADTHU354](X) = 0
[BREADTHU355](X) = 0
[CHILDREN](X1,X2,X3,X4) = 0
[CHILDRENU351](X1,X2,X3) = 0
[CHILDRENU352](X1,X2) = 0
[CHILDRENU353](X1,X2,X3,X4) = 0
[COPYOVER](X1,X2) = 2.X1 + 1
[COPYOVERU351](X) = X
[COPYOVERU352](X1,X2) = 2.X1
[DEQUEUE](X1,X2) = 0
[DEQUEUEU351](X) = 0
[DEQUEUEU352](X1,X2) = 0
[DEQUEUEU353](X) = 0
[DEQUEUEU354](X) = 0
[EMPTY](X) = 0
[ENQUEUE](X1,X2) = 0
[ENQUEUEU351](X1,X2) = 0
[ENQUEUES](X1,X2) = 0
[ENQUEUESU351](X1,X2) = 0
[STARTBREADTH](X) = 0
[STARTBREADTHU351](X) = 0
[STARTBREADTHU352](X) = 0

Problem 1.2: 

SCC Processor:
-> Pairs:
 COPYOVERU351(tupleu352(u64inq,u64outq)) -> COPYOVERU352(u64inq,u64outq)
 COPYOVERU352(u58u58(u64x,u64xs),u64outq) -> COPYOVER(u64xs,u58u58(u64x,u64outq))
-> Rules:
 breadth(u64breadthu641,u64breadthu642) -> breadthu351(dequeue(u64breadthu641,u64breadthu642))
 breadthu351(tupleu352(u64queueu39,u64elem)) -> breadthu352(u64elem,u64queueu39)
 breadthu352(u58u58(u64z,u64u95u649),u64queueu39) -> breadthu353(breadthu354(u64z),u64queueu39)
 breadthu352(nil,u64queueu39) -> nil
 breadthu353(tupleu352(u64x,u64ys),u64queueu39) -> u58u58(u64x,breadthu355(enqueues(u64ys,u64queueu39)))
 breadthu354(tupleu354(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)) -> children(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)
 breadthu355(tupleu352(u64breadthu647,u64breadthu648)) -> breadth(u64breadthu647,u64breadthu648)
 children(u64a,u64b,u64l1,u64l2) -> tupleu352(tupleu352(u64a,u64b),childrenu351(u64l1,u64b,u64l2))
 childrenu351(u58u58(u64x,u64xs),u64b,u64l2) -> childrenu353(u64l2,u64b,u64x,u64xs)
 childrenu351(nil,u64b,u64l2) -> childrenu352(u64l2,u64b)
 childrenu352(u58u58(u64y,u64ys),u64b) -> u58u58(tupleu354(u64y,u64b,nil,u64ys),nil)
 childrenu352(nil,u64b) -> nil
 childrenu353(u58u58(u64y,u64ys),u64b,u64x,u64xs) -> u58u58(tupleu354(u64x,u64b,nil,u64xs),u58u58(tupleu354(u64x,u64y,u64xs,u64ys),nil))
 childrenu353(nil,u64b,u64x,u64xs) -> nil
 copyover(u64copyoveru641,u64copyoveru642) -> copyoveru351(tupleu352(u64copyoveru641,u64copyoveru642))
 copyoveru351(tupleu352(u64inq,u64outq)) -> copyoveru352(u64inq,u64outq)
 copyoveru352(u58u58(u64x,u64xs),u64outq) -> copyover(u64xs,u58u58(u64x,u64outq))
 copyoveru352(nil,u64outq) -> tupleu352(nil,u64outq)
 dequeue(u64dequeueu641,u64dequeueu642) -> dequeueu351(tupleu352(u64dequeueu641,u64dequeueu642))
 dequeueu351(tupleu352(u64inq,u64outq)) -> dequeueu352(u64outq,u64inq)
 dequeueu352(u58u58(u64y,u64ys),u64inq) -> tupleu352(tupleu352(u64inq,u64ys),u58u58(u64y,nil))
 dequeueu352(nil,u64inq) -> dequeueu353(u64inq)
 dequeueu353(u58u58(u64x,u64xs)) -> dequeueu354(copyover(u58u58(u64x,u64xs),nil))
 dequeueu353(nil) -> tupleu352(tupleu352(nil,nil),nil)
 dequeueu354(tupleu352(u64dequeueu643,u64dequeueu644)) -> dequeue(u64dequeueu643,u64dequeueu644)
 empty(u64x) -> tupleu352(nil,nil)
 enqueue(u64x,u64queue) -> enqueueu351(u64queue,u64x)
 enqueueu351(tupleu352(u64inq,u64outq),u64x) -> tupleu352(u58u58(u64x,u64inq),u64outq)
 enqueues(u64l,u64queue) -> enqueuesu351(u64l,u64queue)
 enqueuesu351(u58u58(u64x,u64xs),u64queue) -> enqueues(u64xs,enqueue(u64x,u64queue))
 enqueuesu351(nil,u64queue) -> u64queue
 startBreadth(u64xs) -> startBreadthu351(u64xs)
 startBreadthu351(u58u58(u64x,u64xs)) -> startBreadthu352(enqueue(tupleu354(u64x,u64x,u64xs,u64xs),empty(u35unit)))
 startBreadthu351(nil) -> nil
 startBreadthu352(tupleu352(u64breadthu641,u64breadthu642)) -> breadth(u64breadthu641,u64breadthu642)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pairs Processor:
-> Pairs:
 DEQUEUE(u64dequeueu641,u64dequeueu642) -> DEQUEUEU351(tupleu352(u64dequeueu641,u64dequeueu642))
 DEQUEUEU351(tupleu352(u64inq,u64outq)) -> DEQUEUEU352(u64outq,u64inq)
 DEQUEUEU352(nil,u64inq) -> DEQUEUEU353(u64inq)
 DEQUEUEU353(u58u58(u64x,u64xs)) -> DEQUEUEU354(copyover(u58u58(u64x,u64xs),nil))
 DEQUEUEU354(tupleu352(u64dequeueu643,u64dequeueu644)) -> DEQUEUE(u64dequeueu643,u64dequeueu644)
-> Rules:
 breadth(u64breadthu641,u64breadthu642) -> breadthu351(dequeue(u64breadthu641,u64breadthu642))
 breadthu351(tupleu352(u64queueu39,u64elem)) -> breadthu352(u64elem,u64queueu39)
 breadthu352(u58u58(u64z,u64u95u649),u64queueu39) -> breadthu353(breadthu354(u64z),u64queueu39)
 breadthu352(nil,u64queueu39) -> nil
 breadthu353(tupleu352(u64x,u64ys),u64queueu39) -> u58u58(u64x,breadthu355(enqueues(u64ys,u64queueu39)))
 breadthu354(tupleu354(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)) -> children(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)
 breadthu355(tupleu352(u64breadthu647,u64breadthu648)) -> breadth(u64breadthu647,u64breadthu648)
 children(u64a,u64b,u64l1,u64l2) -> tupleu352(tupleu352(u64a,u64b),childrenu351(u64l1,u64b,u64l2))
 childrenu351(u58u58(u64x,u64xs),u64b,u64l2) -> childrenu353(u64l2,u64b,u64x,u64xs)
 childrenu351(nil,u64b,u64l2) -> childrenu352(u64l2,u64b)
 childrenu352(u58u58(u64y,u64ys),u64b) -> u58u58(tupleu354(u64y,u64b,nil,u64ys),nil)
 childrenu352(nil,u64b) -> nil
 childrenu353(u58u58(u64y,u64ys),u64b,u64x,u64xs) -> u58u58(tupleu354(u64x,u64b,nil,u64xs),u58u58(tupleu354(u64x,u64y,u64xs,u64ys),nil))
 childrenu353(nil,u64b,u64x,u64xs) -> nil
 copyover(u64copyoveru641,u64copyoveru642) -> copyoveru351(tupleu352(u64copyoveru641,u64copyoveru642))
 copyoveru351(tupleu352(u64inq,u64outq)) -> copyoveru352(u64inq,u64outq)
 copyoveru352(u58u58(u64x,u64xs),u64outq) -> copyover(u64xs,u58u58(u64x,u64outq))
 copyoveru352(nil,u64outq) -> tupleu352(nil,u64outq)
 dequeue(u64dequeueu641,u64dequeueu642) -> dequeueu351(tupleu352(u64dequeueu641,u64dequeueu642))
 dequeueu351(tupleu352(u64inq,u64outq)) -> dequeueu352(u64outq,u64inq)
 dequeueu352(u58u58(u64y,u64ys),u64inq) -> tupleu352(tupleu352(u64inq,u64ys),u58u58(u64y,nil))
 dequeueu352(nil,u64inq) -> dequeueu353(u64inq)
 dequeueu353(u58u58(u64x,u64xs)) -> dequeueu354(copyover(u58u58(u64x,u64xs),nil))
 dequeueu353(nil) -> tupleu352(tupleu352(nil,nil),nil)
 dequeueu354(tupleu352(u64dequeueu643,u64dequeueu644)) -> dequeue(u64dequeueu643,u64dequeueu644)
 empty(u64x) -> tupleu352(nil,nil)
 enqueue(u64x,u64queue) -> enqueueu351(u64queue,u64x)
 enqueueu351(tupleu352(u64inq,u64outq),u64x) -> tupleu352(u58u58(u64x,u64inq),u64outq)
 enqueues(u64l,u64queue) -> enqueuesu351(u64l,u64queue)
 enqueuesu351(u58u58(u64x,u64xs),u64queue) -> enqueues(u64xs,enqueue(u64x,u64queue))
 enqueuesu351(nil,u64queue) -> u64queue
 startBreadth(u64xs) -> startBreadthu351(u64xs)
 startBreadthu351(u58u58(u64x,u64xs)) -> startBreadthu352(enqueue(tupleu354(u64x,u64x,u64xs,u64xs),empty(u35unit)))
 startBreadthu351(nil) -> nil
 startBreadthu352(tupleu352(u64breadthu641,u64breadthu642)) -> breadth(u64breadthu641,u64breadthu642)
-> Usable rules:
 copyover(u64copyoveru641,u64copyoveru642) -> copyoveru351(tupleu352(u64copyoveru641,u64copyoveru642))
 copyoveru351(tupleu352(u64inq,u64outq)) -> copyoveru352(u64inq,u64outq)
 copyoveru352(u58u58(u64x,u64xs),u64outq) -> copyover(u64xs,u58u58(u64x,u64outq))
 copyoveru352(nil,u64outq) -> tupleu352(nil,u64outq)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[breadth](X1,X2) = 0
[breadthu351](X) = 0
[breadthu352](X1,X2) = 0
[breadthu353](X1,X2) = 0
[breadthu354](X) = 0
[breadthu355](X) = 0
[children](X1,X2,X3,X4) = 0
[childrenu351](X1,X2,X3) = 0
[childrenu352](X1,X2) = 0
[childrenu353](X1,X2,X3,X4) = 0
[copyover](X1,X2) = 2
[copyoveru351](X) = 2
[copyoveru352](X1,X2) = 2
[dequeue](X1,X2) = 0
[dequeueu351](X) = 0
[dequeueu352](X1,X2) = 0
[dequeueu353](X) = 0
[dequeueu354](X) = 0
[empty](X) = 0
[enqueue](X1,X2) = 0
[enqueueu351](X1,X2) = 0
[enqueues](X1,X2) = 0
[enqueuesu351](X1,X2) = 0
[startBreadth](X) = 0
[startBreadthu351](X) = 0
[startBreadthu352](X) = 0
[u35unit] = 0
[u58u58](X1,X2) = X1 + 2
[fSNonEmpty] = 0
[nil] = 0
[tupleu352](X1,X2) = 2.X1
[tupleu354](X1,X2,X3,X4) = 0
[BREADTH](X1,X2) = 0
[BREADTHU351](X) = 0
[BREADTHU352](X1,X2) = 0
[BREADTHU353](X1,X2) = 0
[BREADTHU354](X) = 0
[BREADTHU355](X) = 0
[CHILDREN](X1,X2,X3,X4) = 0
[CHILDRENU351](X1,X2,X3) = 0
[CHILDRENU352](X1,X2) = 0
[CHILDRENU353](X1,X2,X3,X4) = 0
[COPYOVER](X1,X2) = 0
[COPYOVERU351](X) = 0
[COPYOVERU352](X1,X2) = 0
[DEQUEUE](X1,X2) = 2.X1 + 2
[DEQUEUEU351](X) = X + 1
[DEQUEUEU352](X1,X2) = 2.X2 + 1
[DEQUEUEU353](X) = 2.X
[DEQUEUEU354](X) = X + 2
[EMPTY](X) = 0
[ENQUEUE](X1,X2) = 0
[ENQUEUEU351](X1,X2) = 0
[ENQUEUES](X1,X2) = 0
[ENQUEUESU351](X1,X2) = 0
[STARTBREADTH](X) = 0
[STARTBREADTHU351](X) = 0
[STARTBREADTHU352](X) = 0

Problem 1.3: 

SCC Processor:
-> Pairs:
 DEQUEUEU351(tupleu352(u64inq,u64outq)) -> DEQUEUEU352(u64outq,u64inq)
 DEQUEUEU352(nil,u64inq) -> DEQUEUEU353(u64inq)
 DEQUEUEU353(u58u58(u64x,u64xs)) -> DEQUEUEU354(copyover(u58u58(u64x,u64xs),nil))
 DEQUEUEU354(tupleu352(u64dequeueu643,u64dequeueu644)) -> DEQUEUE(u64dequeueu643,u64dequeueu644)
-> Rules:
 breadth(u64breadthu641,u64breadthu642) -> breadthu351(dequeue(u64breadthu641,u64breadthu642))
 breadthu351(tupleu352(u64queueu39,u64elem)) -> breadthu352(u64elem,u64queueu39)
 breadthu352(u58u58(u64z,u64u95u649),u64queueu39) -> breadthu353(breadthu354(u64z),u64queueu39)
 breadthu352(nil,u64queueu39) -> nil
 breadthu353(tupleu352(u64x,u64ys),u64queueu39) -> u58u58(u64x,breadthu355(enqueues(u64ys,u64queueu39)))
 breadthu354(tupleu354(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)) -> children(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)
 breadthu355(tupleu352(u64breadthu647,u64breadthu648)) -> breadth(u64breadthu647,u64breadthu648)
 children(u64a,u64b,u64l1,u64l2) -> tupleu352(tupleu352(u64a,u64b),childrenu351(u64l1,u64b,u64l2))
 childrenu351(u58u58(u64x,u64xs),u64b,u64l2) -> childrenu353(u64l2,u64b,u64x,u64xs)
 childrenu351(nil,u64b,u64l2) -> childrenu352(u64l2,u64b)
 childrenu352(u58u58(u64y,u64ys),u64b) -> u58u58(tupleu354(u64y,u64b,nil,u64ys),nil)
 childrenu352(nil,u64b) -> nil
 childrenu353(u58u58(u64y,u64ys),u64b,u64x,u64xs) -> u58u58(tupleu354(u64x,u64b,nil,u64xs),u58u58(tupleu354(u64x,u64y,u64xs,u64ys),nil))
 childrenu353(nil,u64b,u64x,u64xs) -> nil
 copyover(u64copyoveru641,u64copyoveru642) -> copyoveru351(tupleu352(u64copyoveru641,u64copyoveru642))
 copyoveru351(tupleu352(u64inq,u64outq)) -> copyoveru352(u64inq,u64outq)
 copyoveru352(u58u58(u64x,u64xs),u64outq) -> copyover(u64xs,u58u58(u64x,u64outq))
 copyoveru352(nil,u64outq) -> tupleu352(nil,u64outq)
 dequeue(u64dequeueu641,u64dequeueu642) -> dequeueu351(tupleu352(u64dequeueu641,u64dequeueu642))
 dequeueu351(tupleu352(u64inq,u64outq)) -> dequeueu352(u64outq,u64inq)
 dequeueu352(u58u58(u64y,u64ys),u64inq) -> tupleu352(tupleu352(u64inq,u64ys),u58u58(u64y,nil))
 dequeueu352(nil,u64inq) -> dequeueu353(u64inq)
 dequeueu353(u58u58(u64x,u64xs)) -> dequeueu354(copyover(u58u58(u64x,u64xs),nil))
 dequeueu353(nil) -> tupleu352(tupleu352(nil,nil),nil)
 dequeueu354(tupleu352(u64dequeueu643,u64dequeueu644)) -> dequeue(u64dequeueu643,u64dequeueu644)
 empty(u64x) -> tupleu352(nil,nil)
 enqueue(u64x,u64queue) -> enqueueu351(u64queue,u64x)
 enqueueu351(tupleu352(u64inq,u64outq),u64x) -> tupleu352(u58u58(u64x,u64inq),u64outq)
 enqueues(u64l,u64queue) -> enqueuesu351(u64l,u64queue)
 enqueuesu351(u58u58(u64x,u64xs),u64queue) -> enqueues(u64xs,enqueue(u64x,u64queue))
 enqueuesu351(nil,u64queue) -> u64queue
 startBreadth(u64xs) -> startBreadthu351(u64xs)
 startBreadthu351(u58u58(u64x,u64xs)) -> startBreadthu352(enqueue(tupleu354(u64x,u64x,u64xs,u64xs),empty(u35unit)))
 startBreadthu351(nil) -> nil
 startBreadthu352(tupleu352(u64breadthu641,u64breadthu642)) -> breadth(u64breadthu641,u64breadthu642)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Reduction Pairs Processor:
-> Pairs:
 BREADTH(u64breadthu641,u64breadthu642) -> BREADTHU351(dequeue(u64breadthu641,u64breadthu642))
 BREADTHU351(tupleu352(u64queueu39,u64elem)) -> BREADTHU352(u64elem,u64queueu39)
 BREADTHU352(u58u58(u64z,u64u95u649),u64queueu39) -> BREADTHU353(breadthu354(u64z),u64queueu39)
 BREADTHU353(tupleu352(u64x,u64ys),u64queueu39) -> BREADTHU355(enqueues(u64ys,u64queueu39))
 BREADTHU355(tupleu352(u64breadthu647,u64breadthu648)) -> BREADTH(u64breadthu647,u64breadthu648)
-> Rules:
 breadth(u64breadthu641,u64breadthu642) -> breadthu351(dequeue(u64breadthu641,u64breadthu642))
 breadthu351(tupleu352(u64queueu39,u64elem)) -> breadthu352(u64elem,u64queueu39)
 breadthu352(u58u58(u64z,u64u95u649),u64queueu39) -> breadthu353(breadthu354(u64z),u64queueu39)
 breadthu352(nil,u64queueu39) -> nil
 breadthu353(tupleu352(u64x,u64ys),u64queueu39) -> u58u58(u64x,breadthu355(enqueues(u64ys,u64queueu39)))
 breadthu354(tupleu354(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)) -> children(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)
 breadthu355(tupleu352(u64breadthu647,u64breadthu648)) -> breadth(u64breadthu647,u64breadthu648)
 children(u64a,u64b,u64l1,u64l2) -> tupleu352(tupleu352(u64a,u64b),childrenu351(u64l1,u64b,u64l2))
 childrenu351(u58u58(u64x,u64xs),u64b,u64l2) -> childrenu353(u64l2,u64b,u64x,u64xs)
 childrenu351(nil,u64b,u64l2) -> childrenu352(u64l2,u64b)
 childrenu352(u58u58(u64y,u64ys),u64b) -> u58u58(tupleu354(u64y,u64b,nil,u64ys),nil)
 childrenu352(nil,u64b) -> nil
 childrenu353(u58u58(u64y,u64ys),u64b,u64x,u64xs) -> u58u58(tupleu354(u64x,u64b,nil,u64xs),u58u58(tupleu354(u64x,u64y,u64xs,u64ys),nil))
 childrenu353(nil,u64b,u64x,u64xs) -> nil
 copyover(u64copyoveru641,u64copyoveru642) -> copyoveru351(tupleu352(u64copyoveru641,u64copyoveru642))
 copyoveru351(tupleu352(u64inq,u64outq)) -> copyoveru352(u64inq,u64outq)
 copyoveru352(u58u58(u64x,u64xs),u64outq) -> copyover(u64xs,u58u58(u64x,u64outq))
 copyoveru352(nil,u64outq) -> tupleu352(nil,u64outq)
 dequeue(u64dequeueu641,u64dequeueu642) -> dequeueu351(tupleu352(u64dequeueu641,u64dequeueu642))
 dequeueu351(tupleu352(u64inq,u64outq)) -> dequeueu352(u64outq,u64inq)
 dequeueu352(u58u58(u64y,u64ys),u64inq) -> tupleu352(tupleu352(u64inq,u64ys),u58u58(u64y,nil))
 dequeueu352(nil,u64inq) -> dequeueu353(u64inq)
 dequeueu353(u58u58(u64x,u64xs)) -> dequeueu354(copyover(u58u58(u64x,u64xs),nil))
 dequeueu353(nil) -> tupleu352(tupleu352(nil,nil),nil)
 dequeueu354(tupleu352(u64dequeueu643,u64dequeueu644)) -> dequeue(u64dequeueu643,u64dequeueu644)
 empty(u64x) -> tupleu352(nil,nil)
 enqueue(u64x,u64queue) -> enqueueu351(u64queue,u64x)
 enqueueu351(tupleu352(u64inq,u64outq),u64x) -> tupleu352(u58u58(u64x,u64inq),u64outq)
 enqueues(u64l,u64queue) -> enqueuesu351(u64l,u64queue)
 enqueuesu351(u58u58(u64x,u64xs),u64queue) -> enqueues(u64xs,enqueue(u64x,u64queue))
 enqueuesu351(nil,u64queue) -> u64queue
 startBreadth(u64xs) -> startBreadthu351(u64xs)
 startBreadthu351(u58u58(u64x,u64xs)) -> startBreadthu352(enqueue(tupleu354(u64x,u64x,u64xs,u64xs),empty(u35unit)))
 startBreadthu351(nil) -> nil
 startBreadthu352(tupleu352(u64breadthu641,u64breadthu642)) -> breadth(u64breadthu641,u64breadthu642)
-> Usable rules:
 breadthu354(tupleu354(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)) -> children(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)
 children(u64a,u64b,u64l1,u64l2) -> tupleu352(tupleu352(u64a,u64b),childrenu351(u64l1,u64b,u64l2))
 childrenu351(u58u58(u64x,u64xs),u64b,u64l2) -> childrenu353(u64l2,u64b,u64x,u64xs)
 childrenu351(nil,u64b,u64l2) -> childrenu352(u64l2,u64b)
 childrenu352(u58u58(u64y,u64ys),u64b) -> u58u58(tupleu354(u64y,u64b,nil,u64ys),nil)
 childrenu352(nil,u64b) -> nil
 childrenu353(u58u58(u64y,u64ys),u64b,u64x,u64xs) -> u58u58(tupleu354(u64x,u64b,nil,u64xs),u58u58(tupleu354(u64x,u64y,u64xs,u64ys),nil))
 childrenu353(nil,u64b,u64x,u64xs) -> nil
 copyover(u64copyoveru641,u64copyoveru642) -> copyoveru351(tupleu352(u64copyoveru641,u64copyoveru642))
 copyoveru351(tupleu352(u64inq,u64outq)) -> copyoveru352(u64inq,u64outq)
 copyoveru352(u58u58(u64x,u64xs),u64outq) -> copyover(u64xs,u58u58(u64x,u64outq))
 copyoveru352(nil,u64outq) -> tupleu352(nil,u64outq)
 dequeue(u64dequeueu641,u64dequeueu642) -> dequeueu351(tupleu352(u64dequeueu641,u64dequeueu642))
 dequeueu351(tupleu352(u64inq,u64outq)) -> dequeueu352(u64outq,u64inq)
 dequeueu352(u58u58(u64y,u64ys),u64inq) -> tupleu352(tupleu352(u64inq,u64ys),u58u58(u64y,nil))
 dequeueu352(nil,u64inq) -> dequeueu353(u64inq)
 dequeueu353(u58u58(u64x,u64xs)) -> dequeueu354(copyover(u58u58(u64x,u64xs),nil))
 dequeueu353(nil) -> tupleu352(tupleu352(nil,nil),nil)
 dequeueu354(tupleu352(u64dequeueu643,u64dequeueu644)) -> dequeue(u64dequeueu643,u64dequeueu644)
 enqueue(u64x,u64queue) -> enqueueu351(u64queue,u64x)
 enqueueu351(tupleu352(u64inq,u64outq),u64x) -> tupleu352(u58u58(u64x,u64inq),u64outq)
 enqueues(u64l,u64queue) -> enqueuesu351(u64l,u64queue)
 enqueuesu351(u58u58(u64x,u64xs),u64queue) -> enqueues(u64xs,enqueue(u64x,u64queue))
 enqueuesu351(nil,u64queue) -> u64queue
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 2
->Bound:
 1
->Interpretation:
 
[breadth](X1,X2) = 0
[breadthu351](X) = 0
[breadthu352](X1,X2) = 0
[breadthu353](X1,X2) = 0
[breadthu354](X) = [0 1;1 0].X + [1;1]
[breadthu355](X) = 0
[children](X1,X2,X3,X4) = [1 0;0 0].X1 + [1 1;0 0].X2 + [0 1;0 1].X3 + [1 1;1 0].X4 + [1;1]
[childrenu351](X1,X2,X3) = [0 1;1 1].X1 + [0 0;1 1].X2 + [1 0;1 1].X3 + [0;1]
[childrenu352](X1,X2) = [1 0;1 1].X1 + [0 0;1 1].X2 + [0;1]
[childrenu353](X1,X2,X3,X4) = [1 0;1 1].X1 + [0 0;1 0].X2 + [1 1;1 1].X4 + [1;1]
[copyover](X1,X2) = [1 0;1 0].X1 + [1 0;1 0].X2 + [0;1]
[copyoveru351](X) = [1 0;1 0].X + [0;1]
[copyoveru352](X1,X2) = [1 0;1 0].X1 + [1 0;1 0].X2 + [0;1]
[dequeue](X1,X2) = [1 0;1 0].X1 + [1 0;1 0].X2 + [0;1]
[dequeueu351](X) = [1 0;1 0].X + [0;1]
[dequeueu352](X1,X2) = [1 0;1 0].X1 + [1 0;1 0].X2 + [0;1]
[dequeueu353](X) = [1 0;1 0].X + [0;1]
[dequeueu354](X) = [1 0;1 0].X + [0;1]
[empty](X) = 0
[enqueue](X1,X2) = [1 0;1 0].X1 + [1 0;0 1].X2 + [1;1]
[enqueueu351](X1,X2) = [1 0;0 1].X1 + [1 0;1 0].X2 + [1;1]
[enqueues](X1,X2) = [1 0;1 1].X1 + [1 0;0 1].X2 + [0;1]
[enqueuesu351](X1,X2) = [1 0;1 1].X1 + [1 0;0 1].X2 + [0;1]
[startBreadth](X) = 0
[startBreadthu351](X) = 0
[startBreadthu352](X) = 0
[u35unit] = 0
[u58u58](X1,X2) = [1 0;0 0].X1 + [1 0;1 1].X2 + [1;1]
[fSNonEmpty] = 0
[nil] = 0
[tupleu352](X1,X2) = [1 0;0 0].X1 + [1 0;1 0].X2 + [0;1]
[tupleu354](X1,X2,X3,X4) = [0 0;1 0].X1 + [0 0;1 1].X2 + [0 1;0 1].X3 + [1 0;1 1].X4
[BREADTH](X1,X2) = [1 0;1 0].X1 + [1 0;1 0].X2 + [1;1]
[BREADTHU351](X) = [1 0;1 0].X + [0;1]
[BREADTHU352](X1,X2) = [1 0;1 0].X1 + [1 0;1 0].X2 + [0;1]
[BREADTHU353](X1,X2) = [0 1;0 1].X1 + [1 0;1 0].X2
[BREADTHU354](X) = 0
[BREADTHU355](X) = [1 0;1 0].X + [1;1]
[CHILDREN](X1,X2,X3,X4) = 0
[CHILDRENU351](X1,X2,X3) = 0
[CHILDRENU352](X1,X2) = 0
[CHILDRENU353](X1,X2,X3,X4) = 0
[COPYOVER](X1,X2) = 0
[COPYOVERU351](X) = 0
[COPYOVERU352](X1,X2) = 0
[DEQUEUE](X1,X2) = 0
[DEQUEUEU351](X) = 0
[DEQUEUEU352](X1,X2) = 0
[DEQUEUEU353](X) = 0
[DEQUEUEU354](X) = 0
[EMPTY](X) = 0
[ENQUEUE](X1,X2) = 0
[ENQUEUEU351](X1,X2) = 0
[ENQUEUES](X1,X2) = 0
[ENQUEUESU351](X1,X2) = 0
[STARTBREADTH](X) = 0
[STARTBREADTHU351](X) = 0
[STARTBREADTHU352](X) = 0

Problem 1.4: 

SCC Processor:
-> Pairs:
 BREADTHU351(tupleu352(u64queueu39,u64elem)) -> BREADTHU352(u64elem,u64queueu39)
 BREADTHU352(u58u58(u64z,u64u95u649),u64queueu39) -> BREADTHU353(breadthu354(u64z),u64queueu39)
 BREADTHU353(tupleu352(u64x,u64ys),u64queueu39) -> BREADTHU355(enqueues(u64ys,u64queueu39))
 BREADTHU355(tupleu352(u64breadthu647,u64breadthu648)) -> BREADTH(u64breadthu647,u64breadthu648)
-> Rules:
 breadth(u64breadthu641,u64breadthu642) -> breadthu351(dequeue(u64breadthu641,u64breadthu642))
 breadthu351(tupleu352(u64queueu39,u64elem)) -> breadthu352(u64elem,u64queueu39)
 breadthu352(u58u58(u64z,u64u95u649),u64queueu39) -> breadthu353(breadthu354(u64z),u64queueu39)
 breadthu352(nil,u64queueu39) -> nil
 breadthu353(tupleu352(u64x,u64ys),u64queueu39) -> u58u58(u64x,breadthu355(enqueues(u64ys,u64queueu39)))
 breadthu354(tupleu354(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)) -> children(u64childrenu643,u64childrenu644,u64childrenu645,u64childrenu646)
 breadthu355(tupleu352(u64breadthu647,u64breadthu648)) -> breadth(u64breadthu647,u64breadthu648)
 children(u64a,u64b,u64l1,u64l2) -> tupleu352(tupleu352(u64a,u64b),childrenu351(u64l1,u64b,u64l2))
 childrenu351(u58u58(u64x,u64xs),u64b,u64l2) -> childrenu353(u64l2,u64b,u64x,u64xs)
 childrenu351(nil,u64b,u64l2) -> childrenu352(u64l2,u64b)
 childrenu352(u58u58(u64y,u64ys),u64b) -> u58u58(tupleu354(u64y,u64b,nil,u64ys),nil)
 childrenu352(nil,u64b) -> nil
 childrenu353(u58u58(u64y,u64ys),u64b,u64x,u64xs) -> u58u58(tupleu354(u64x,u64b,nil,u64xs),u58u58(tupleu354(u64x,u64y,u64xs,u64ys),nil))
 childrenu353(nil,u64b,u64x,u64xs) -> nil
 copyover(u64copyoveru641,u64copyoveru642) -> copyoveru351(tupleu352(u64copyoveru641,u64copyoveru642))
 copyoveru351(tupleu352(u64inq,u64outq)) -> copyoveru352(u64inq,u64outq)
 copyoveru352(u58u58(u64x,u64xs),u64outq) -> copyover(u64xs,u58u58(u64x,u64outq))
 copyoveru352(nil,u64outq) -> tupleu352(nil,u64outq)
 dequeue(u64dequeueu641,u64dequeueu642) -> dequeueu351(tupleu352(u64dequeueu641,u64dequeueu642))
 dequeueu351(tupleu352(u64inq,u64outq)) -> dequeueu352(u64outq,u64inq)
 dequeueu352(u58u58(u64y,u64ys),u64inq) -> tupleu352(tupleu352(u64inq,u64ys),u58u58(u64y,nil))
 dequeueu352(nil,u64inq) -> dequeueu353(u64inq)
 dequeueu353(u58u58(u64x,u64xs)) -> dequeueu354(copyover(u58u58(u64x,u64xs),nil))
 dequeueu353(nil) -> tupleu352(tupleu352(nil,nil),nil)
 dequeueu354(tupleu352(u64dequeueu643,u64dequeueu644)) -> dequeue(u64dequeueu643,u64dequeueu644)
 empty(u64x) -> tupleu352(nil,nil)
 enqueue(u64x,u64queue) -> enqueueu351(u64queue,u64x)
 enqueueu351(tupleu352(u64inq,u64outq),u64x) -> tupleu352(u58u58(u64x,u64inq),u64outq)
 enqueues(u64l,u64queue) -> enqueuesu351(u64l,u64queue)
 enqueuesu351(u58u58(u64x,u64xs),u64queue) -> enqueues(u64xs,enqueue(u64x,u64queue))
 enqueuesu351(nil,u64queue) -> u64queue
 startBreadth(u64xs) -> startBreadthu351(u64xs)
 startBreadthu351(u58u58(u64x,u64xs)) -> startBreadthu352(enqueue(tupleu354(u64x,u64x,u64xs,u64xs),empty(u35unit)))
 startBreadthu351(nil) -> nil
 startBreadthu352(tupleu352(u64breadthu641,u64breadthu642)) -> breadth(u64breadthu641,u64breadthu642)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
