YES
proof of /home/ff862203/input_JG7tr78ORp.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) QDPQMonotonicMRRProof [EQUIVALENT, 14 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__f(a, b, X) -> a__f(X, X, mark(X))
   a__c -> a
   a__c -> b
   mark(f(X1, X2, X3)) -> a__f(X1, X2, mark(X3))
   mark(c) -> a__c
   mark(a) -> a
   mark(b) -> b
   a__f(X1, X2, X3) -> f(X1, X2, X3)
   a__c -> c

The set Q consists of the following terms:

   mark(c)
   mark(b)
   mark(f(x0, x1, x2))
   a__f(x0, x1, x2)
   mark(a)
   a__c


----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__F(a, b, X) -> A__F(X, X, mark(X))
   A__F(a, b, X) -> MARK(X)
   MARK(f(X1, X2, X3)) -> A__F(X1, X2, mark(X3))
   MARK(f(X1, X2, X3)) -> MARK(X3)
   MARK(c) -> A__C

The TRS R consists of the following rules:

   a__f(a, b, X) -> a__f(X, X, mark(X))
   a__c -> a
   a__c -> b
   mark(f(X1, X2, X3)) -> a__f(X1, X2, mark(X3))
   mark(c) -> a__c
   mark(a) -> a
   mark(b) -> b
   a__f(X1, X2, X3) -> f(X1, X2, X3)
   a__c -> c

The set Q consists of the following terms:

   mark(c)
   mark(b)
   mark(f(x0, x1, x2))
   a__f(x0, x1, x2)
   mark(a)
   a__c

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__F(a, b, X) -> MARK(X)
   MARK(f(X1, X2, X3)) -> A__F(X1, X2, mark(X3))
   MARK(f(X1, X2, X3)) -> MARK(X3)

The TRS R consists of the following rules:

   a__f(a, b, X) -> a__f(X, X, mark(X))
   a__c -> a
   a__c -> b
   mark(f(X1, X2, X3)) -> a__f(X1, X2, mark(X3))
   mark(c) -> a__c
   mark(a) -> a
   mark(b) -> b
   a__f(X1, X2, X3) -> f(X1, X2, X3)
   a__c -> c

The set Q consists of the following terms:

   mark(c)
   mark(b)
   mark(f(x0, x1, x2))
   a__f(x0, x1, x2)
   mark(a)
   a__c

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) QDPQMonotonicMRRProof (EQUIVALENT)
By using the Q-monotonic rule removal processor with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented such that it always occurs at a strongly monotonic position in a (P,Q,R)-chain.

Strictly oriented dependency pairs:

   MARK(f(X1, X2, X3)) -> A__F(X1, X2, mark(X3))
   MARK(f(X1, X2, X3)) -> MARK(X3)


Used ordering: Polynomial interpretation [POLO]:

   POL(A__F(x_1, x_2, x_3)) = 2*x_3
   POL(MARK(x_1)) = 2*x_1
   POL(a) = 0
   POL(a__c) = 0
   POL(a__f(x_1, x_2, x_3)) = 2 + x_3
   POL(b) = 0
   POL(c) = 0
   POL(f(x_1, x_2, x_3)) = 2 + x_3
   POL(mark(x_1)) = x_1


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__F(a, b, X) -> MARK(X)

The TRS R consists of the following rules:

   a__f(a, b, X) -> a__f(X, X, mark(X))
   a__c -> a
   a__c -> b
   mark(f(X1, X2, X3)) -> a__f(X1, X2, mark(X3))
   mark(c) -> a__c
   mark(a) -> a
   mark(b) -> b
   a__f(X1, X2, X3) -> f(X1, X2, X3)
   a__c -> c

The set Q consists of the following terms:

   mark(c)
   mark(b)
   mark(f(x0, x1, x2))
   a__f(x0, x1, x2)
   mark(a)
   a__c

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(8)
TRUE
