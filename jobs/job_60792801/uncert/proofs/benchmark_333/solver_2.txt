YES

Problem 1: 

(VAR vu95NonEmpty I P V V1 V2 X X1 X2 X3 Y Z)
(RULES
U11(active(X1),X2) -> U11(X1,X2)
U11(mark(X1),X2) -> U11(X1,X2)
U11(X1,active(X2)) -> U11(X1,X2)
U11(X1,mark(X2)) -> U11(X1,X2)
U12(active(X)) -> U12(X)
U12(mark(X)) -> U12(X)
U21(active(X1),X2,X3) -> U21(X1,X2,X3)
U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
U21(X1,active(X2),X3) -> U21(X1,X2,X3)
U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
U22(active(X1),X2) -> U22(X1,X2)
U22(mark(X1),X2) -> U22(X1,X2)
U22(X1,active(X2)) -> U22(X1,X2)
U22(X1,mark(X2)) -> U22(X1,X2)
U23(active(X)) -> U23(X)
U23(mark(X)) -> U23(X)
U31(active(X1),X2) -> U31(X1,X2)
U31(mark(X1),X2) -> U31(X1,X2)
U31(X1,active(X2)) -> U31(X1,X2)
U31(X1,mark(X2)) -> U31(X1,X2)
U32(active(X)) -> U32(X)
U32(mark(X)) -> U32(X)
U41(active(X1),X2,X3) -> U41(X1,X2,X3)
U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
U41(X1,active(X2),X3) -> U41(X1,X2,X3)
U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
U42(active(X1),X2) -> U42(X1,X2)
U42(mark(X1),X2) -> U42(X1,X2)
U42(X1,active(X2)) -> U42(X1,X2)
U42(X1,mark(X2)) -> U42(X1,X2)
U43(active(X)) -> U43(X)
U43(mark(X)) -> U43(X)
U51(active(X1),X2,X3) -> U51(X1,X2,X3)
U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
U51(X1,active(X2),X3) -> U51(X1,X2,X3)
U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
U52(active(X1),X2) -> U52(X1,X2)
U52(mark(X1),X2) -> U52(X1,X2)
U52(X1,active(X2)) -> U52(X1,X2)
U52(X1,mark(X2)) -> U52(X1,X2)
U53(active(X)) -> U53(X)
U53(mark(X)) -> U53(X)
U61(active(X1),X2) -> U61(X1,X2)
U61(mark(X1),X2) -> U61(X1,X2)
U61(X1,active(X2)) -> U61(X1,X2)
U61(X1,mark(X2)) -> U61(X1,X2)
U62(active(X)) -> U62(X)
U62(mark(X)) -> U62(X)
U71(active(X1),X2) -> U71(X1,X2)
U71(mark(X1),X2) -> U71(X1,X2)
U71(X1,active(X2)) -> U71(X1,X2)
U71(X1,mark(X2)) -> U71(X1,X2)
U72(active(X)) -> U72(X)
U72(mark(X)) -> U72(X)
u95u95(active(X1),X2) -> u95u95(X1,X2)
u95u95(mark(X1),X2) -> u95u95(X1,X2)
u95u95(X1,active(X2)) -> u95u95(X1,X2)
u95u95(X1,mark(X2)) -> u95u95(X1,X2)
active(U11(tt,V)) -> mark(U12(isNeList(V)))
active(U12(tt)) -> mark(tt)
active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
active(U22(tt,V2)) -> mark(U23(isList(V2)))
active(U23(tt)) -> mark(tt)
active(U31(tt,V)) -> mark(U32(isQid(V)))
active(U32(tt)) -> mark(tt)
active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
active(U43(tt)) -> mark(tt)
active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
active(U52(tt,V2)) -> mark(U53(isList(V2)))
active(U53(tt)) -> mark(tt)
active(U61(tt,V)) -> mark(U62(isQid(V)))
active(U62(tt)) -> mark(tt)
active(U71(tt,V)) -> mark(U72(isNePal(V)))
active(U72(tt)) -> mark(tt)
active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
active(u95u95(nil,X)) -> mark(X)
active(u95u95(X,nil)) -> mark(X)
active(and(tt,X)) -> mark(X)
active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
active(isList(nil)) -> mark(tt)
active(isList(V)) -> mark(U11(isPalListKind(V),V))
active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
active(isPal(nil)) -> mark(tt)
active(isPal(V)) -> mark(U71(isPalListKind(V),V))
active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
active(isPalListKind(a)) -> mark(tt)
active(isPalListKind(e)) -> mark(tt)
active(isPalListKind(i)) -> mark(tt)
active(isPalListKind(nil)) -> mark(tt)
active(isPalListKind(o)) -> mark(tt)
active(isPalListKind(u)) -> mark(tt)
active(isQid(a)) -> mark(tt)
active(isQid(e)) -> mark(tt)
active(isQid(i)) -> mark(tt)
active(isQid(o)) -> mark(tt)
active(isQid(u)) -> mark(tt)
and(active(X1),X2) -> and(X1,X2)
and(mark(X1),X2) -> and(X1,X2)
and(X1,active(X2)) -> and(X1,X2)
and(X1,mark(X2)) -> and(X1,X2)
isList(active(X)) -> isList(X)
isList(mark(X)) -> isList(X)
isNeList(active(X)) -> isNeList(X)
isNeList(mark(X)) -> isNeList(X)
isNePal(active(X)) -> isNePal(X)
isNePal(mark(X)) -> isNePal(X)
isPal(active(X)) -> isPal(X)
isPal(mark(X)) -> isPal(X)
isPalListKind(active(X)) -> isPalListKind(X)
isPalListKind(mark(X)) -> isPalListKind(X)
isQid(active(X)) -> isQid(X)
isQid(mark(X)) -> isQid(X)
mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
mark(U12(X)) -> active(U12(mark(X)))
mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
mark(U23(X)) -> active(U23(mark(X)))
mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
mark(U32(X)) -> active(U32(mark(X)))
mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
mark(U43(X)) -> active(U43(mark(X)))
mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
mark(U53(X)) -> active(U53(mark(X)))
mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
mark(U62(X)) -> active(U62(mark(X)))
mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
mark(U72(X)) -> active(U72(mark(X)))
mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
mark(and(X1,X2)) -> active(and(mark(X1),X2))
mark(isList(X)) -> active(isList(X))
mark(isNeList(X)) -> active(isNeList(X))
mark(isNePal(X)) -> active(isNePal(X))
mark(isPal(X)) -> active(isPal(X))
mark(isPalListKind(X)) -> active(isPalListKind(X))
mark(isQid(X)) -> active(isQid(X))
mark(a) -> active(a)
mark(e) -> active(e)
mark(i) -> active(i)
mark(nil) -> active(nil)
mark(o) -> active(o)
mark(tt) -> active(tt)
mark(u) -> active(u)
)
 
(STRATEGY INNERMOST)

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 U11Sharp(active(X1),X2) -> U11Sharp(X1,X2)
 U11Sharp(mark(X1),X2) -> U11Sharp(X1,X2)
 U11Sharp(X1,active(X2)) -> U11Sharp(X1,X2)
 U11Sharp(X1,mark(X2)) -> U11Sharp(X1,X2)
 U12Sharp(active(X)) -> U12Sharp(X)
 U12Sharp(mark(X)) -> U12Sharp(X)
 U21Sharp(active(X1),X2,X3) -> U21Sharp(X1,X2,X3)
 U21Sharp(mark(X1),X2,X3) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,active(X2),X3) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,mark(X2),X3) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,X2,active(X3)) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,X2,mark(X3)) -> U21Sharp(X1,X2,X3)
 U22Sharp(active(X1),X2) -> U22Sharp(X1,X2)
 U22Sharp(mark(X1),X2) -> U22Sharp(X1,X2)
 U22Sharp(X1,active(X2)) -> U22Sharp(X1,X2)
 U22Sharp(X1,mark(X2)) -> U22Sharp(X1,X2)
 U23Sharp(active(X)) -> U23Sharp(X)
 U23Sharp(mark(X)) -> U23Sharp(X)
 U31Sharp(active(X1),X2) -> U31Sharp(X1,X2)
 U31Sharp(mark(X1),X2) -> U31Sharp(X1,X2)
 U31Sharp(X1,active(X2)) -> U31Sharp(X1,X2)
 U31Sharp(X1,mark(X2)) -> U31Sharp(X1,X2)
 U32Sharp(active(X)) -> U32Sharp(X)
 U32Sharp(mark(X)) -> U32Sharp(X)
 U41Sharp(active(X1),X2,X3) -> U41Sharp(X1,X2,X3)
 U41Sharp(mark(X1),X2,X3) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,active(X2),X3) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,mark(X2),X3) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,X2,active(X3)) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,X2,mark(X3)) -> U41Sharp(X1,X2,X3)
 U42Sharp(active(X1),X2) -> U42Sharp(X1,X2)
 U42Sharp(mark(X1),X2) -> U42Sharp(X1,X2)
 U42Sharp(X1,active(X2)) -> U42Sharp(X1,X2)
 U42Sharp(X1,mark(X2)) -> U42Sharp(X1,X2)
 U43Sharp(active(X)) -> U43Sharp(X)
 U43Sharp(mark(X)) -> U43Sharp(X)
 U51Sharp(active(X1),X2,X3) -> U51Sharp(X1,X2,X3)
 U51Sharp(mark(X1),X2,X3) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,active(X2),X3) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,mark(X2),X3) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,X2,active(X3)) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,X2,mark(X3)) -> U51Sharp(X1,X2,X3)
 U52Sharp(active(X1),X2) -> U52Sharp(X1,X2)
 U52Sharp(mark(X1),X2) -> U52Sharp(X1,X2)
 U52Sharp(X1,active(X2)) -> U52Sharp(X1,X2)
 U52Sharp(X1,mark(X2)) -> U52Sharp(X1,X2)
 U53Sharp(active(X)) -> U53Sharp(X)
 U53Sharp(mark(X)) -> U53Sharp(X)
 U61Sharp(active(X1),X2) -> U61Sharp(X1,X2)
 U61Sharp(mark(X1),X2) -> U61Sharp(X1,X2)
 U61Sharp(X1,active(X2)) -> U61Sharp(X1,X2)
 U61Sharp(X1,mark(X2)) -> U61Sharp(X1,X2)
 U62Sharp(active(X)) -> U62Sharp(X)
 U62Sharp(mark(X)) -> U62Sharp(X)
 U71Sharp(active(X1),X2) -> U71Sharp(X1,X2)
 U71Sharp(mark(X1),X2) -> U71Sharp(X1,X2)
 U71Sharp(X1,active(X2)) -> U71Sharp(X1,X2)
 U71Sharp(X1,mark(X2)) -> U71Sharp(X1,X2)
 U72Sharp(active(X)) -> U72Sharp(X)
 U72Sharp(mark(X)) -> U72Sharp(X)
 U95U95(active(X1),X2) -> U95U95(X1,X2)
 U95U95(mark(X1),X2) -> U95U95(X1,X2)
 U95U95(X1,active(X2)) -> U95U95(X1,X2)
 U95U95(X1,mark(X2)) -> U95U95(X1,X2)
 ACTIVE(U11(tt,V)) -> U12Sharp(isNeList(V))
 ACTIVE(U11(tt,V)) -> ISNELIST(V)
 ACTIVE(U11(tt,V)) -> MARK(U12(isNeList(V)))
 ACTIVE(U12(tt)) -> MARK(tt)
 ACTIVE(U21(tt,V1,V2)) -> U22Sharp(isList(V1),V2)
 ACTIVE(U21(tt,V1,V2)) -> ISLIST(V1)
 ACTIVE(U21(tt,V1,V2)) -> MARK(U22(isList(V1),V2))
 ACTIVE(U22(tt,V2)) -> U23Sharp(isList(V2))
 ACTIVE(U22(tt,V2)) -> ISLIST(V2)
 ACTIVE(U22(tt,V2)) -> MARK(U23(isList(V2)))
 ACTIVE(U23(tt)) -> MARK(tt)
 ACTIVE(U31(tt,V)) -> U32Sharp(isQid(V))
 ACTIVE(U31(tt,V)) -> ISQID(V)
 ACTIVE(U31(tt,V)) -> MARK(U32(isQid(V)))
 ACTIVE(U32(tt)) -> MARK(tt)
 ACTIVE(U41(tt,V1,V2)) -> U42Sharp(isList(V1),V2)
 ACTIVE(U41(tt,V1,V2)) -> ISLIST(V1)
 ACTIVE(U41(tt,V1,V2)) -> MARK(U42(isList(V1),V2))
 ACTIVE(U42(tt,V2)) -> U43Sharp(isNeList(V2))
 ACTIVE(U42(tt,V2)) -> ISNELIST(V2)
 ACTIVE(U42(tt,V2)) -> MARK(U43(isNeList(V2)))
 ACTIVE(U43(tt)) -> MARK(tt)
 ACTIVE(U51(tt,V1,V2)) -> U52Sharp(isNeList(V1),V2)
 ACTIVE(U51(tt,V1,V2)) -> ISNELIST(V1)
 ACTIVE(U51(tt,V1,V2)) -> MARK(U52(isNeList(V1),V2))
 ACTIVE(U52(tt,V2)) -> U53Sharp(isList(V2))
 ACTIVE(U52(tt,V2)) -> ISLIST(V2)
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U53(tt)) -> MARK(tt)
 ACTIVE(U61(tt,V)) -> U62Sharp(isQid(V))
 ACTIVE(U61(tt,V)) -> ISQID(V)
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U62(tt)) -> MARK(tt)
 ACTIVE(U71(tt,V)) -> U72Sharp(isNePal(V))
 ACTIVE(U71(tt,V)) -> ISNEPAL(V)
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(U72(tt)) -> MARK(tt)
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> U95U95(X,u95u95(Y,Z))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> U95U95(Y,Z)
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> U21Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 ACTIVE(isList(u95u95(V1,V2))) -> AND(isPalListKind(V1),isPalListKind(V2))
 ACTIVE(isList(u95u95(V1,V2))) -> ISPALLISTKIND(V1)
 ACTIVE(isList(u95u95(V1,V2))) -> ISPALLISTKIND(V2)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(nil)) -> MARK(tt)
 ACTIVE(isList(V)) -> U11Sharp(isPalListKind(V),V)
 ACTIVE(isList(V)) -> ISPALLISTKIND(V)
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> U41Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 ACTIVE(isNeList(u95u95(V1,V2))) -> U51Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 ACTIVE(isNeList(u95u95(V1,V2))) -> AND(isPalListKind(V1),isPalListKind(V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> ISPALLISTKIND(V1)
 ACTIVE(isNeList(u95u95(V1,V2))) -> ISPALLISTKIND(V2)
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> U31Sharp(isPalListKind(V),V)
 ACTIVE(isNeList(V)) -> ISPALLISTKIND(V)
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> AND(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> AND(isPal(P),isPalListKind(P))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> AND(isQid(I),isPalListKind(I))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> ISPAL(P)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> ISPALLISTKIND(I)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> ISPALLISTKIND(P)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> ISQID(I)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> U61Sharp(isPalListKind(V),V)
 ACTIVE(isNePal(V)) -> ISPALLISTKIND(V)
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(nil)) -> MARK(tt)
 ACTIVE(isPal(V)) -> U71Sharp(isPalListKind(V),V)
 ACTIVE(isPal(V)) -> ISPALLISTKIND(V)
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> AND(isPalListKind(V1),isPalListKind(V2))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> ISPALLISTKIND(V1)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> ISPALLISTKIND(V2)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 ACTIVE(isPalListKind(a)) -> MARK(tt)
 ACTIVE(isPalListKind(e)) -> MARK(tt)
 ACTIVE(isPalListKind(i)) -> MARK(tt)
 ACTIVE(isPalListKind(nil)) -> MARK(tt)
 ACTIVE(isPalListKind(o)) -> MARK(tt)
 ACTIVE(isPalListKind(u)) -> MARK(tt)
 ACTIVE(isQid(a)) -> MARK(tt)
 ACTIVE(isQid(e)) -> MARK(tt)
 ACTIVE(isQid(i)) -> MARK(tt)
 ACTIVE(isQid(o)) -> MARK(tt)
 ACTIVE(isQid(u)) -> MARK(tt)
 AND(active(X1),X2) -> AND(X1,X2)
 AND(mark(X1),X2) -> AND(X1,X2)
 AND(X1,active(X2)) -> AND(X1,X2)
 AND(X1,mark(X2)) -> AND(X1,X2)
 ISLIST(active(X)) -> ISLIST(X)
 ISLIST(mark(X)) -> ISLIST(X)
 ISNELIST(active(X)) -> ISNELIST(X)
 ISNELIST(mark(X)) -> ISNELIST(X)
 ISNEPAL(active(X)) -> ISNEPAL(X)
 ISNEPAL(mark(X)) -> ISNEPAL(X)
 ISPAL(active(X)) -> ISPAL(X)
 ISPAL(mark(X)) -> ISPAL(X)
 ISPALLISTKIND(active(X)) -> ISPALLISTKIND(X)
 ISPALLISTKIND(mark(X)) -> ISPALLISTKIND(X)
 ISQID(active(X)) -> ISQID(X)
 ISQID(mark(X)) -> ISQID(X)
 MARK(U11(X1,X2)) -> U11Sharp(mark(X1),X2)
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> U12Sharp(mark(X))
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> U21Sharp(mark(X1),X2,X3)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> U22Sharp(mark(X1),X2)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> U23Sharp(mark(X))
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> U31Sharp(mark(X1),X2)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> U32Sharp(mark(X))
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> U41Sharp(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> U42Sharp(mark(X1),X2)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> U43Sharp(mark(X))
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> U51Sharp(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> U52Sharp(mark(X1),X2)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> U53Sharp(mark(X))
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> U61Sharp(mark(X1),X2)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> U62Sharp(mark(X))
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> U71Sharp(mark(X1),X2)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> U72Sharp(mark(X))
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
 MARK(isQid(X)) -> ACTIVE(isQid(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1: 

SCC Processor:
-> Pairs:
 U11Sharp(active(X1),X2) -> U11Sharp(X1,X2)
 U11Sharp(mark(X1),X2) -> U11Sharp(X1,X2)
 U11Sharp(X1,active(X2)) -> U11Sharp(X1,X2)
 U11Sharp(X1,mark(X2)) -> U11Sharp(X1,X2)
 U12Sharp(active(X)) -> U12Sharp(X)
 U12Sharp(mark(X)) -> U12Sharp(X)
 U21Sharp(active(X1),X2,X3) -> U21Sharp(X1,X2,X3)
 U21Sharp(mark(X1),X2,X3) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,active(X2),X3) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,mark(X2),X3) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,X2,active(X3)) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,X2,mark(X3)) -> U21Sharp(X1,X2,X3)
 U22Sharp(active(X1),X2) -> U22Sharp(X1,X2)
 U22Sharp(mark(X1),X2) -> U22Sharp(X1,X2)
 U22Sharp(X1,active(X2)) -> U22Sharp(X1,X2)
 U22Sharp(X1,mark(X2)) -> U22Sharp(X1,X2)
 U23Sharp(active(X)) -> U23Sharp(X)
 U23Sharp(mark(X)) -> U23Sharp(X)
 U31Sharp(active(X1),X2) -> U31Sharp(X1,X2)
 U31Sharp(mark(X1),X2) -> U31Sharp(X1,X2)
 U31Sharp(X1,active(X2)) -> U31Sharp(X1,X2)
 U31Sharp(X1,mark(X2)) -> U31Sharp(X1,X2)
 U32Sharp(active(X)) -> U32Sharp(X)
 U32Sharp(mark(X)) -> U32Sharp(X)
 U41Sharp(active(X1),X2,X3) -> U41Sharp(X1,X2,X3)
 U41Sharp(mark(X1),X2,X3) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,active(X2),X3) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,mark(X2),X3) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,X2,active(X3)) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,X2,mark(X3)) -> U41Sharp(X1,X2,X3)
 U42Sharp(active(X1),X2) -> U42Sharp(X1,X2)
 U42Sharp(mark(X1),X2) -> U42Sharp(X1,X2)
 U42Sharp(X1,active(X2)) -> U42Sharp(X1,X2)
 U42Sharp(X1,mark(X2)) -> U42Sharp(X1,X2)
 U43Sharp(active(X)) -> U43Sharp(X)
 U43Sharp(mark(X)) -> U43Sharp(X)
 U51Sharp(active(X1),X2,X3) -> U51Sharp(X1,X2,X3)
 U51Sharp(mark(X1),X2,X3) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,active(X2),X3) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,mark(X2),X3) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,X2,active(X3)) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,X2,mark(X3)) -> U51Sharp(X1,X2,X3)
 U52Sharp(active(X1),X2) -> U52Sharp(X1,X2)
 U52Sharp(mark(X1),X2) -> U52Sharp(X1,X2)
 U52Sharp(X1,active(X2)) -> U52Sharp(X1,X2)
 U52Sharp(X1,mark(X2)) -> U52Sharp(X1,X2)
 U53Sharp(active(X)) -> U53Sharp(X)
 U53Sharp(mark(X)) -> U53Sharp(X)
 U61Sharp(active(X1),X2) -> U61Sharp(X1,X2)
 U61Sharp(mark(X1),X2) -> U61Sharp(X1,X2)
 U61Sharp(X1,active(X2)) -> U61Sharp(X1,X2)
 U61Sharp(X1,mark(X2)) -> U61Sharp(X1,X2)
 U62Sharp(active(X)) -> U62Sharp(X)
 U62Sharp(mark(X)) -> U62Sharp(X)
 U71Sharp(active(X1),X2) -> U71Sharp(X1,X2)
 U71Sharp(mark(X1),X2) -> U71Sharp(X1,X2)
 U71Sharp(X1,active(X2)) -> U71Sharp(X1,X2)
 U71Sharp(X1,mark(X2)) -> U71Sharp(X1,X2)
 U72Sharp(active(X)) -> U72Sharp(X)
 U72Sharp(mark(X)) -> U72Sharp(X)
 U95U95(active(X1),X2) -> U95U95(X1,X2)
 U95U95(mark(X1),X2) -> U95U95(X1,X2)
 U95U95(X1,active(X2)) -> U95U95(X1,X2)
 U95U95(X1,mark(X2)) -> U95U95(X1,X2)
 ACTIVE(U11(tt,V)) -> U12Sharp(isNeList(V))
 ACTIVE(U11(tt,V)) -> ISNELIST(V)
 ACTIVE(U11(tt,V)) -> MARK(U12(isNeList(V)))
 ACTIVE(U12(tt)) -> MARK(tt)
 ACTIVE(U21(tt,V1,V2)) -> U22Sharp(isList(V1),V2)
 ACTIVE(U21(tt,V1,V2)) -> ISLIST(V1)
 ACTIVE(U21(tt,V1,V2)) -> MARK(U22(isList(V1),V2))
 ACTIVE(U22(tt,V2)) -> U23Sharp(isList(V2))
 ACTIVE(U22(tt,V2)) -> ISLIST(V2)
 ACTIVE(U22(tt,V2)) -> MARK(U23(isList(V2)))
 ACTIVE(U23(tt)) -> MARK(tt)
 ACTIVE(U31(tt,V)) -> U32Sharp(isQid(V))
 ACTIVE(U31(tt,V)) -> ISQID(V)
 ACTIVE(U31(tt,V)) -> MARK(U32(isQid(V)))
 ACTIVE(U32(tt)) -> MARK(tt)
 ACTIVE(U41(tt,V1,V2)) -> U42Sharp(isList(V1),V2)
 ACTIVE(U41(tt,V1,V2)) -> ISLIST(V1)
 ACTIVE(U41(tt,V1,V2)) -> MARK(U42(isList(V1),V2))
 ACTIVE(U42(tt,V2)) -> U43Sharp(isNeList(V2))
 ACTIVE(U42(tt,V2)) -> ISNELIST(V2)
 ACTIVE(U42(tt,V2)) -> MARK(U43(isNeList(V2)))
 ACTIVE(U43(tt)) -> MARK(tt)
 ACTIVE(U51(tt,V1,V2)) -> U52Sharp(isNeList(V1),V2)
 ACTIVE(U51(tt,V1,V2)) -> ISNELIST(V1)
 ACTIVE(U51(tt,V1,V2)) -> MARK(U52(isNeList(V1),V2))
 ACTIVE(U52(tt,V2)) -> U53Sharp(isList(V2))
 ACTIVE(U52(tt,V2)) -> ISLIST(V2)
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U53(tt)) -> MARK(tt)
 ACTIVE(U61(tt,V)) -> U62Sharp(isQid(V))
 ACTIVE(U61(tt,V)) -> ISQID(V)
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U62(tt)) -> MARK(tt)
 ACTIVE(U71(tt,V)) -> U72Sharp(isNePal(V))
 ACTIVE(U71(tt,V)) -> ISNEPAL(V)
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(U72(tt)) -> MARK(tt)
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> U95U95(X,u95u95(Y,Z))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> U95U95(Y,Z)
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> U21Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 ACTIVE(isList(u95u95(V1,V2))) -> AND(isPalListKind(V1),isPalListKind(V2))
 ACTIVE(isList(u95u95(V1,V2))) -> ISPALLISTKIND(V1)
 ACTIVE(isList(u95u95(V1,V2))) -> ISPALLISTKIND(V2)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(nil)) -> MARK(tt)
 ACTIVE(isList(V)) -> U11Sharp(isPalListKind(V),V)
 ACTIVE(isList(V)) -> ISPALLISTKIND(V)
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> U41Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 ACTIVE(isNeList(u95u95(V1,V2))) -> U51Sharp(and(isPalListKind(V1),isPalListKind(V2)),V1,V2)
 ACTIVE(isNeList(u95u95(V1,V2))) -> AND(isPalListKind(V1),isPalListKind(V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> ISPALLISTKIND(V1)
 ACTIVE(isNeList(u95u95(V1,V2))) -> ISPALLISTKIND(V2)
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> U31Sharp(isPalListKind(V),V)
 ACTIVE(isNeList(V)) -> ISPALLISTKIND(V)
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> AND(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P)))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> AND(isPal(P),isPalListKind(P))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> AND(isQid(I),isPalListKind(I))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> ISPAL(P)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> ISPALLISTKIND(I)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> ISPALLISTKIND(P)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> ISQID(I)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> U61Sharp(isPalListKind(V),V)
 ACTIVE(isNePal(V)) -> ISPALLISTKIND(V)
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(nil)) -> MARK(tt)
 ACTIVE(isPal(V)) -> U71Sharp(isPalListKind(V),V)
 ACTIVE(isPal(V)) -> ISPALLISTKIND(V)
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> AND(isPalListKind(V1),isPalListKind(V2))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> ISPALLISTKIND(V1)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> ISPALLISTKIND(V2)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 ACTIVE(isPalListKind(a)) -> MARK(tt)
 ACTIVE(isPalListKind(e)) -> MARK(tt)
 ACTIVE(isPalListKind(i)) -> MARK(tt)
 ACTIVE(isPalListKind(nil)) -> MARK(tt)
 ACTIVE(isPalListKind(o)) -> MARK(tt)
 ACTIVE(isPalListKind(u)) -> MARK(tt)
 ACTIVE(isQid(a)) -> MARK(tt)
 ACTIVE(isQid(e)) -> MARK(tt)
 ACTIVE(isQid(i)) -> MARK(tt)
 ACTIVE(isQid(o)) -> MARK(tt)
 ACTIVE(isQid(u)) -> MARK(tt)
 AND(active(X1),X2) -> AND(X1,X2)
 AND(mark(X1),X2) -> AND(X1,X2)
 AND(X1,active(X2)) -> AND(X1,X2)
 AND(X1,mark(X2)) -> AND(X1,X2)
 ISLIST(active(X)) -> ISLIST(X)
 ISLIST(mark(X)) -> ISLIST(X)
 ISNELIST(active(X)) -> ISNELIST(X)
 ISNELIST(mark(X)) -> ISNELIST(X)
 ISNEPAL(active(X)) -> ISNEPAL(X)
 ISNEPAL(mark(X)) -> ISNEPAL(X)
 ISPAL(active(X)) -> ISPAL(X)
 ISPAL(mark(X)) -> ISPAL(X)
 ISPALLISTKIND(active(X)) -> ISPALLISTKIND(X)
 ISPALLISTKIND(mark(X)) -> ISPALLISTKIND(X)
 ISQID(active(X)) -> ISQID(X)
 ISQID(mark(X)) -> ISQID(X)
 MARK(U11(X1,X2)) -> U11Sharp(mark(X1),X2)
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> U12Sharp(mark(X))
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> U21Sharp(mark(X1),X2,X3)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> U22Sharp(mark(X1),X2)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> U23Sharp(mark(X))
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> U31Sharp(mark(X1),X2)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> U32Sharp(mark(X))
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> U41Sharp(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> U42Sharp(mark(X1),X2)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> U43Sharp(mark(X))
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> U51Sharp(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> U52Sharp(mark(X1),X2)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> U53Sharp(mark(X))
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> U61Sharp(mark(X1),X2)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> U62Sharp(mark(X))
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> U71Sharp(mark(X1),X2)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> U72Sharp(mark(X))
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
 MARK(isQid(X)) -> ACTIVE(isQid(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ISQID(active(X)) -> ISQID(X)
 ISQID(mark(X)) -> ISQID(X)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 ISPALLISTKIND(active(X)) -> ISPALLISTKIND(X)
 ISPALLISTKIND(mark(X)) -> ISPALLISTKIND(X)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 ISPAL(active(X)) -> ISPAL(X)
 ISPAL(mark(X)) -> ISPAL(X)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 ISNEPAL(active(X)) -> ISNEPAL(X)
 ISNEPAL(mark(X)) -> ISNEPAL(X)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 ISNELIST(active(X)) -> ISNELIST(X)
 ISNELIST(mark(X)) -> ISNELIST(X)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 ISLIST(active(X)) -> ISLIST(X)
 ISLIST(mark(X)) -> ISLIST(X)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 AND(active(X1),X2) -> AND(X1,X2)
 AND(mark(X1),X2) -> AND(X1,X2)
 AND(X1,active(X2)) -> AND(X1,X2)
 AND(X1,mark(X2)) -> AND(X1,X2)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 U95U95(active(X1),X2) -> U95U95(X1,X2)
 U95U95(mark(X1),X2) -> U95U95(X1,X2)
 U95U95(X1,active(X2)) -> U95U95(X1,X2)
 U95U95(X1,mark(X2)) -> U95U95(X1,X2)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 U72Sharp(active(X)) -> U72Sharp(X)
 U72Sharp(mark(X)) -> U72Sharp(X)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 U71Sharp(active(X1),X2) -> U71Sharp(X1,X2)
 U71Sharp(mark(X1),X2) -> U71Sharp(X1,X2)
 U71Sharp(X1,active(X2)) -> U71Sharp(X1,X2)
 U71Sharp(X1,mark(X2)) -> U71Sharp(X1,X2)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 U62Sharp(active(X)) -> U62Sharp(X)
 U62Sharp(mark(X)) -> U62Sharp(X)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 U61Sharp(active(X1),X2) -> U61Sharp(X1,X2)
 U61Sharp(mark(X1),X2) -> U61Sharp(X1,X2)
 U61Sharp(X1,active(X2)) -> U61Sharp(X1,X2)
 U61Sharp(X1,mark(X2)) -> U61Sharp(X1,X2)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 U53Sharp(active(X)) -> U53Sharp(X)
 U53Sharp(mark(X)) -> U53Sharp(X)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 U52Sharp(active(X1),X2) -> U52Sharp(X1,X2)
 U52Sharp(mark(X1),X2) -> U52Sharp(X1,X2)
 U52Sharp(X1,active(X2)) -> U52Sharp(X1,X2)
 U52Sharp(X1,mark(X2)) -> U52Sharp(X1,X2)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 U51Sharp(active(X1),X2,X3) -> U51Sharp(X1,X2,X3)
 U51Sharp(mark(X1),X2,X3) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,active(X2),X3) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,mark(X2),X3) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,X2,active(X3)) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,X2,mark(X3)) -> U51Sharp(X1,X2,X3)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 U43Sharp(active(X)) -> U43Sharp(X)
 U43Sharp(mark(X)) -> U43Sharp(X)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 U42Sharp(active(X1),X2) -> U42Sharp(X1,X2)
 U42Sharp(mark(X1),X2) -> U42Sharp(X1,X2)
 U42Sharp(X1,active(X2)) -> U42Sharp(X1,X2)
 U42Sharp(X1,mark(X2)) -> U42Sharp(X1,X2)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 U41Sharp(active(X1),X2,X3) -> U41Sharp(X1,X2,X3)
 U41Sharp(mark(X1),X2,X3) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,active(X2),X3) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,mark(X2),X3) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,X2,active(X3)) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,X2,mark(X3)) -> U41Sharp(X1,X2,X3)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 U32Sharp(active(X)) -> U32Sharp(X)
 U32Sharp(mark(X)) -> U32Sharp(X)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 U31Sharp(active(X1),X2) -> U31Sharp(X1,X2)
 U31Sharp(mark(X1),X2) -> U31Sharp(X1,X2)
 U31Sharp(X1,active(X2)) -> U31Sharp(X1,X2)
 U31Sharp(X1,mark(X2)) -> U31Sharp(X1,X2)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 U23Sharp(active(X)) -> U23Sharp(X)
 U23Sharp(mark(X)) -> U23Sharp(X)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 U22Sharp(active(X1),X2) -> U22Sharp(X1,X2)
 U22Sharp(mark(X1),X2) -> U22Sharp(X1,X2)
 U22Sharp(X1,active(X2)) -> U22Sharp(X1,X2)
 U22Sharp(X1,mark(X2)) -> U22Sharp(X1,X2)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 U21Sharp(active(X1),X2,X3) -> U21Sharp(X1,X2,X3)
 U21Sharp(mark(X1),X2,X3) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,active(X2),X3) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,mark(X2),X3) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,X2,active(X3)) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,X2,mark(X3)) -> U21Sharp(X1,X2,X3)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 U12Sharp(active(X)) -> U12Sharp(X)
 U12Sharp(mark(X)) -> U12Sharp(X)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 U11Sharp(active(X1),X2) -> U11Sharp(X1,X2)
 U11Sharp(mark(X1),X2) -> U11Sharp(X1,X2)
 U11Sharp(X1,active(X2)) -> U11Sharp(X1,X2)
 U11Sharp(X1,mark(X2)) -> U11Sharp(X1,X2)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->->Cycle:
->->-> Pairs:
 ACTIVE(U11(tt,V)) -> MARK(U12(isNeList(V)))
 ACTIVE(U21(tt,V1,V2)) -> MARK(U22(isList(V1),V2))
 ACTIVE(U22(tt,V2)) -> MARK(U23(isList(V2)))
 ACTIVE(U31(tt,V)) -> MARK(U32(isQid(V)))
 ACTIVE(U41(tt,V1,V2)) -> MARK(U42(isList(V1),V2))
 ACTIVE(U42(tt,V2)) -> MARK(U43(isNeList(V2)))
 ACTIVE(U51(tt,V1,V2)) -> MARK(U52(isNeList(V1),V2))
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)


The problem is decomposed in 26 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 ISQID(active(X)) -> ISQID(X)
 ISQID(mark(X)) -> ISQID(X)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(ISQID) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 ISPALLISTKIND(active(X)) -> ISPALLISTKIND(X)
 ISPALLISTKIND(mark(X)) -> ISPALLISTKIND(X)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(ISPALLISTKIND) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> Pairs:
 ISPAL(active(X)) -> ISPAL(X)
 ISPAL(mark(X)) -> ISPAL(X)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(ISPAL) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Subterm Processor:
-> Pairs:
 ISNEPAL(active(X)) -> ISNEPAL(X)
 ISNEPAL(mark(X)) -> ISNEPAL(X)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(ISNEPAL) = 1

Problem 1.4: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.5: 

Subterm Processor:
-> Pairs:
 ISNELIST(active(X)) -> ISNELIST(X)
 ISNELIST(mark(X)) -> ISNELIST(X)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(ISNELIST) = 1

Problem 1.5: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.6: 

Subterm Processor:
-> Pairs:
 ISLIST(active(X)) -> ISLIST(X)
 ISLIST(mark(X)) -> ISLIST(X)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(ISLIST) = 1

Problem 1.6: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.7: 

Subterm Processor:
-> Pairs:
 AND(active(X1),X2) -> AND(X1,X2)
 AND(mark(X1),X2) -> AND(X1,X2)
 AND(X1,active(X2)) -> AND(X1,X2)
 AND(X1,mark(X2)) -> AND(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(AND) = 1

Problem 1.7: 

SCC Processor:
-> Pairs:
 AND(X1,active(X2)) -> AND(X1,X2)
 AND(X1,mark(X2)) -> AND(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AND(X1,active(X2)) -> AND(X1,X2)
 AND(X1,mark(X2)) -> AND(X1,X2)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.7: 

Subterm Processor:
-> Pairs:
 AND(X1,active(X2)) -> AND(X1,X2)
 AND(X1,mark(X2)) -> AND(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(AND) = 2

Problem 1.7: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.8: 

Subterm Processor:
-> Pairs:
 U95U95(active(X1),X2) -> U95U95(X1,X2)
 U95U95(mark(X1),X2) -> U95U95(X1,X2)
 U95U95(X1,active(X2)) -> U95U95(X1,X2)
 U95U95(X1,mark(X2)) -> U95U95(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U95U95) = 1

Problem 1.8: 

SCC Processor:
-> Pairs:
 U95U95(X1,active(X2)) -> U95U95(X1,X2)
 U95U95(X1,mark(X2)) -> U95U95(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U95U95(X1,active(X2)) -> U95U95(X1,X2)
 U95U95(X1,mark(X2)) -> U95U95(X1,X2)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.8: 

Subterm Processor:
-> Pairs:
 U95U95(X1,active(X2)) -> U95U95(X1,X2)
 U95U95(X1,mark(X2)) -> U95U95(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U95U95) = 2

Problem 1.8: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.9: 

Subterm Processor:
-> Pairs:
 U72Sharp(active(X)) -> U72Sharp(X)
 U72Sharp(mark(X)) -> U72Sharp(X)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U72Sharp) = 1

Problem 1.9: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.10: 

Subterm Processor:
-> Pairs:
 U71Sharp(active(X1),X2) -> U71Sharp(X1,X2)
 U71Sharp(mark(X1),X2) -> U71Sharp(X1,X2)
 U71Sharp(X1,active(X2)) -> U71Sharp(X1,X2)
 U71Sharp(X1,mark(X2)) -> U71Sharp(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U71Sharp) = 1

Problem 1.10: 

SCC Processor:
-> Pairs:
 U71Sharp(X1,active(X2)) -> U71Sharp(X1,X2)
 U71Sharp(X1,mark(X2)) -> U71Sharp(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U71Sharp(X1,active(X2)) -> U71Sharp(X1,X2)
 U71Sharp(X1,mark(X2)) -> U71Sharp(X1,X2)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.10: 

Subterm Processor:
-> Pairs:
 U71Sharp(X1,active(X2)) -> U71Sharp(X1,X2)
 U71Sharp(X1,mark(X2)) -> U71Sharp(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U71Sharp) = 2

Problem 1.10: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.11: 

Subterm Processor:
-> Pairs:
 U62Sharp(active(X)) -> U62Sharp(X)
 U62Sharp(mark(X)) -> U62Sharp(X)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U62Sharp) = 1

Problem 1.11: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.12: 

Subterm Processor:
-> Pairs:
 U61Sharp(active(X1),X2) -> U61Sharp(X1,X2)
 U61Sharp(mark(X1),X2) -> U61Sharp(X1,X2)
 U61Sharp(X1,active(X2)) -> U61Sharp(X1,X2)
 U61Sharp(X1,mark(X2)) -> U61Sharp(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U61Sharp) = 1

Problem 1.12: 

SCC Processor:
-> Pairs:
 U61Sharp(X1,active(X2)) -> U61Sharp(X1,X2)
 U61Sharp(X1,mark(X2)) -> U61Sharp(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U61Sharp(X1,active(X2)) -> U61Sharp(X1,X2)
 U61Sharp(X1,mark(X2)) -> U61Sharp(X1,X2)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.12: 

Subterm Processor:
-> Pairs:
 U61Sharp(X1,active(X2)) -> U61Sharp(X1,X2)
 U61Sharp(X1,mark(X2)) -> U61Sharp(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U61Sharp) = 2

Problem 1.12: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.13: 

Subterm Processor:
-> Pairs:
 U53Sharp(active(X)) -> U53Sharp(X)
 U53Sharp(mark(X)) -> U53Sharp(X)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U53Sharp) = 1

Problem 1.13: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.14: 

Subterm Processor:
-> Pairs:
 U52Sharp(active(X1),X2) -> U52Sharp(X1,X2)
 U52Sharp(mark(X1),X2) -> U52Sharp(X1,X2)
 U52Sharp(X1,active(X2)) -> U52Sharp(X1,X2)
 U52Sharp(X1,mark(X2)) -> U52Sharp(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U52Sharp) = 1

Problem 1.14: 

SCC Processor:
-> Pairs:
 U52Sharp(X1,active(X2)) -> U52Sharp(X1,X2)
 U52Sharp(X1,mark(X2)) -> U52Sharp(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U52Sharp(X1,active(X2)) -> U52Sharp(X1,X2)
 U52Sharp(X1,mark(X2)) -> U52Sharp(X1,X2)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.14: 

Subterm Processor:
-> Pairs:
 U52Sharp(X1,active(X2)) -> U52Sharp(X1,X2)
 U52Sharp(X1,mark(X2)) -> U52Sharp(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U52Sharp) = 2

Problem 1.14: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.15: 

Subterm Processor:
-> Pairs:
 U51Sharp(active(X1),X2,X3) -> U51Sharp(X1,X2,X3)
 U51Sharp(mark(X1),X2,X3) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,active(X2),X3) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,mark(X2),X3) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,X2,active(X3)) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,X2,mark(X3)) -> U51Sharp(X1,X2,X3)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U51Sharp) = 1

Problem 1.15: 

SCC Processor:
-> Pairs:
 U51Sharp(X1,active(X2),X3) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,mark(X2),X3) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,X2,active(X3)) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,X2,mark(X3)) -> U51Sharp(X1,X2,X3)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U51Sharp(X1,active(X2),X3) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,mark(X2),X3) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,X2,active(X3)) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,X2,mark(X3)) -> U51Sharp(X1,X2,X3)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.15: 

Subterm Processor:
-> Pairs:
 U51Sharp(X1,active(X2),X3) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,mark(X2),X3) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,X2,active(X3)) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,X2,mark(X3)) -> U51Sharp(X1,X2,X3)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U51Sharp) = 2

Problem 1.15: 

SCC Processor:
-> Pairs:
 U51Sharp(X1,X2,active(X3)) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,X2,mark(X3)) -> U51Sharp(X1,X2,X3)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U51Sharp(X1,X2,active(X3)) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,X2,mark(X3)) -> U51Sharp(X1,X2,X3)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.15: 

Subterm Processor:
-> Pairs:
 U51Sharp(X1,X2,active(X3)) -> U51Sharp(X1,X2,X3)
 U51Sharp(X1,X2,mark(X3)) -> U51Sharp(X1,X2,X3)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U51Sharp) = 3

Problem 1.15: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.16: 

Subterm Processor:
-> Pairs:
 U43Sharp(active(X)) -> U43Sharp(X)
 U43Sharp(mark(X)) -> U43Sharp(X)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U43Sharp) = 1

Problem 1.16: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.17: 

Subterm Processor:
-> Pairs:
 U42Sharp(active(X1),X2) -> U42Sharp(X1,X2)
 U42Sharp(mark(X1),X2) -> U42Sharp(X1,X2)
 U42Sharp(X1,active(X2)) -> U42Sharp(X1,X2)
 U42Sharp(X1,mark(X2)) -> U42Sharp(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U42Sharp) = 1

Problem 1.17: 

SCC Processor:
-> Pairs:
 U42Sharp(X1,active(X2)) -> U42Sharp(X1,X2)
 U42Sharp(X1,mark(X2)) -> U42Sharp(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U42Sharp(X1,active(X2)) -> U42Sharp(X1,X2)
 U42Sharp(X1,mark(X2)) -> U42Sharp(X1,X2)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.17: 

Subterm Processor:
-> Pairs:
 U42Sharp(X1,active(X2)) -> U42Sharp(X1,X2)
 U42Sharp(X1,mark(X2)) -> U42Sharp(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U42Sharp) = 2

Problem 1.17: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.18: 

Subterm Processor:
-> Pairs:
 U41Sharp(active(X1),X2,X3) -> U41Sharp(X1,X2,X3)
 U41Sharp(mark(X1),X2,X3) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,active(X2),X3) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,mark(X2),X3) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,X2,active(X3)) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,X2,mark(X3)) -> U41Sharp(X1,X2,X3)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U41Sharp) = 1

Problem 1.18: 

SCC Processor:
-> Pairs:
 U41Sharp(X1,active(X2),X3) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,mark(X2),X3) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,X2,active(X3)) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,X2,mark(X3)) -> U41Sharp(X1,X2,X3)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U41Sharp(X1,active(X2),X3) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,mark(X2),X3) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,X2,active(X3)) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,X2,mark(X3)) -> U41Sharp(X1,X2,X3)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.18: 

Subterm Processor:
-> Pairs:
 U41Sharp(X1,active(X2),X3) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,mark(X2),X3) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,X2,active(X3)) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,X2,mark(X3)) -> U41Sharp(X1,X2,X3)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U41Sharp) = 2

Problem 1.18: 

SCC Processor:
-> Pairs:
 U41Sharp(X1,X2,active(X3)) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,X2,mark(X3)) -> U41Sharp(X1,X2,X3)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U41Sharp(X1,X2,active(X3)) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,X2,mark(X3)) -> U41Sharp(X1,X2,X3)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.18: 

Subterm Processor:
-> Pairs:
 U41Sharp(X1,X2,active(X3)) -> U41Sharp(X1,X2,X3)
 U41Sharp(X1,X2,mark(X3)) -> U41Sharp(X1,X2,X3)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U41Sharp) = 3

Problem 1.18: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.19: 

Subterm Processor:
-> Pairs:
 U32Sharp(active(X)) -> U32Sharp(X)
 U32Sharp(mark(X)) -> U32Sharp(X)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U32Sharp) = 1

Problem 1.19: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.20: 

Subterm Processor:
-> Pairs:
 U31Sharp(active(X1),X2) -> U31Sharp(X1,X2)
 U31Sharp(mark(X1),X2) -> U31Sharp(X1,X2)
 U31Sharp(X1,active(X2)) -> U31Sharp(X1,X2)
 U31Sharp(X1,mark(X2)) -> U31Sharp(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U31Sharp) = 1

Problem 1.20: 

SCC Processor:
-> Pairs:
 U31Sharp(X1,active(X2)) -> U31Sharp(X1,X2)
 U31Sharp(X1,mark(X2)) -> U31Sharp(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U31Sharp(X1,active(X2)) -> U31Sharp(X1,X2)
 U31Sharp(X1,mark(X2)) -> U31Sharp(X1,X2)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.20: 

Subterm Processor:
-> Pairs:
 U31Sharp(X1,active(X2)) -> U31Sharp(X1,X2)
 U31Sharp(X1,mark(X2)) -> U31Sharp(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U31Sharp) = 2

Problem 1.20: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.21: 

Subterm Processor:
-> Pairs:
 U23Sharp(active(X)) -> U23Sharp(X)
 U23Sharp(mark(X)) -> U23Sharp(X)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U23Sharp) = 1

Problem 1.21: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.22: 

Subterm Processor:
-> Pairs:
 U22Sharp(active(X1),X2) -> U22Sharp(X1,X2)
 U22Sharp(mark(X1),X2) -> U22Sharp(X1,X2)
 U22Sharp(X1,active(X2)) -> U22Sharp(X1,X2)
 U22Sharp(X1,mark(X2)) -> U22Sharp(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U22Sharp) = 1

Problem 1.22: 

SCC Processor:
-> Pairs:
 U22Sharp(X1,active(X2)) -> U22Sharp(X1,X2)
 U22Sharp(X1,mark(X2)) -> U22Sharp(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U22Sharp(X1,active(X2)) -> U22Sharp(X1,X2)
 U22Sharp(X1,mark(X2)) -> U22Sharp(X1,X2)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.22: 

Subterm Processor:
-> Pairs:
 U22Sharp(X1,active(X2)) -> U22Sharp(X1,X2)
 U22Sharp(X1,mark(X2)) -> U22Sharp(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U22Sharp) = 2

Problem 1.22: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.23: 

Subterm Processor:
-> Pairs:
 U21Sharp(active(X1),X2,X3) -> U21Sharp(X1,X2,X3)
 U21Sharp(mark(X1),X2,X3) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,active(X2),X3) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,mark(X2),X3) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,X2,active(X3)) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,X2,mark(X3)) -> U21Sharp(X1,X2,X3)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U21Sharp) = 1

Problem 1.23: 

SCC Processor:
-> Pairs:
 U21Sharp(X1,active(X2),X3) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,mark(X2),X3) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,X2,active(X3)) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,X2,mark(X3)) -> U21Sharp(X1,X2,X3)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U21Sharp(X1,active(X2),X3) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,mark(X2),X3) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,X2,active(X3)) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,X2,mark(X3)) -> U21Sharp(X1,X2,X3)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.23: 

Subterm Processor:
-> Pairs:
 U21Sharp(X1,active(X2),X3) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,mark(X2),X3) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,X2,active(X3)) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,X2,mark(X3)) -> U21Sharp(X1,X2,X3)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U21Sharp) = 2

Problem 1.23: 

SCC Processor:
-> Pairs:
 U21Sharp(X1,X2,active(X3)) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,X2,mark(X3)) -> U21Sharp(X1,X2,X3)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U21Sharp(X1,X2,active(X3)) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,X2,mark(X3)) -> U21Sharp(X1,X2,X3)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.23: 

Subterm Processor:
-> Pairs:
 U21Sharp(X1,X2,active(X3)) -> U21Sharp(X1,X2,X3)
 U21Sharp(X1,X2,mark(X3)) -> U21Sharp(X1,X2,X3)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U21Sharp) = 3

Problem 1.23: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.24: 

Subterm Processor:
-> Pairs:
 U12Sharp(active(X)) -> U12Sharp(X)
 U12Sharp(mark(X)) -> U12Sharp(X)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U12Sharp) = 1

Problem 1.24: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.25: 

Subterm Processor:
-> Pairs:
 U11Sharp(active(X1),X2) -> U11Sharp(X1,X2)
 U11Sharp(mark(X1),X2) -> U11Sharp(X1,X2)
 U11Sharp(X1,active(X2)) -> U11Sharp(X1,X2)
 U11Sharp(X1,mark(X2)) -> U11Sharp(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U11Sharp) = 1

Problem 1.25: 

SCC Processor:
-> Pairs:
 U11Sharp(X1,active(X2)) -> U11Sharp(X1,X2)
 U11Sharp(X1,mark(X2)) -> U11Sharp(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U11Sharp(X1,active(X2)) -> U11Sharp(X1,X2)
 U11Sharp(X1,mark(X2)) -> U11Sharp(X1,X2)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.25: 

Subterm Processor:
-> Pairs:
 U11Sharp(X1,active(X2)) -> U11Sharp(X1,X2)
 U11Sharp(X1,mark(X2)) -> U11Sharp(X1,X2)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(U11Sharp) = 2

Problem 1.25: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(U11(tt,V)) -> MARK(U12(isNeList(V)))
 ACTIVE(U21(tt,V1,V2)) -> MARK(U22(isList(V1),V2))
 ACTIVE(U22(tt,V2)) -> MARK(U23(isList(V2)))
 ACTIVE(U31(tt,V)) -> MARK(U32(isQid(V)))
 ACTIVE(U41(tt,V1,V2)) -> MARK(U42(isList(V1),V2))
 ACTIVE(U42(tt,V2)) -> MARK(U43(isNeList(V2)))
 ACTIVE(U51(tt,V1,V2)) -> MARK(U52(isNeList(V1),V2))
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X + 1
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X
[U61](X1,X2) = X1 + 2.X2
[U62](X) = X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X + 2
[u95u95](X1,X2) = 2.X1 + X2 + 1
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X + 1
[isNeList](X) = 2.X
[isNePal](X) = 2.X
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[mark](X) = X
[a] = 0
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(U21(tt,V1,V2)) -> MARK(U22(isList(V1),V2))
 ACTIVE(U22(tt,V2)) -> MARK(U23(isList(V2)))
 ACTIVE(U31(tt,V)) -> MARK(U32(isQid(V)))
 ACTIVE(U41(tt,V1,V2)) -> MARK(U42(isList(V1),V2))
 ACTIVE(U42(tt,V2)) -> MARK(U43(isNeList(V2)))
 ACTIVE(U51(tt,V1,V2)) -> MARK(U52(isNeList(V1),V2))
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(U21(tt,V1,V2)) -> MARK(U22(isList(V1),V2))
 ACTIVE(U22(tt,V2)) -> MARK(U23(isList(V2)))
 ACTIVE(U31(tt,V)) -> MARK(U32(isQid(V)))
 ACTIVE(U41(tt,V1,V2)) -> MARK(U42(isList(V1),V2))
 ACTIVE(U42(tt,V2)) -> MARK(U43(isNeList(V2)))
 ACTIVE(U51(tt,V1,V2)) -> MARK(U52(isNeList(V1),V2))
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(U21(tt,V1,V2)) -> MARK(U22(isList(V1),V2))
 ACTIVE(U22(tt,V2)) -> MARK(U23(isList(V2)))
 ACTIVE(U31(tt,V)) -> MARK(U32(isQid(V)))
 ACTIVE(U41(tt,V1,V2)) -> MARK(U42(isList(V1),V2))
 ACTIVE(U42(tt,V2)) -> MARK(U43(isNeList(V2)))
 ACTIVE(U51(tt,V1,V2)) -> MARK(U52(isNeList(V1),V2))
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + 2.X2
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X + 1
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 2
[U43](X) = X + 2
[U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X
[U61](X1,X2) = X1 + 2.X2 + 2
[U62](X) = X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[mark](X) = X
[a] = 1
[e] = 1
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 0
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 1
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 1

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(U22(tt,V2)) -> MARK(U23(isList(V2)))
 ACTIVE(U31(tt,V)) -> MARK(U32(isQid(V)))
 ACTIVE(U41(tt,V1,V2)) -> MARK(U42(isList(V1),V2))
 ACTIVE(U42(tt,V2)) -> MARK(U43(isNeList(V2)))
 ACTIVE(U51(tt,V1,V2)) -> MARK(U52(isNeList(V1),V2))
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(U22(tt,V2)) -> MARK(U23(isList(V2)))
 ACTIVE(U31(tt,V)) -> MARK(U32(isQid(V)))
 ACTIVE(U41(tt,V1,V2)) -> MARK(U42(isList(V1),V2))
 ACTIVE(U42(tt,V2)) -> MARK(U43(isNeList(V2)))
 ACTIVE(U51(tt,V1,V2)) -> MARK(U52(isNeList(V1),V2))
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(U22(tt,V2)) -> MARK(U23(isList(V2)))
 ACTIVE(U31(tt,V)) -> MARK(U32(isQid(V)))
 ACTIVE(U41(tt,V1,V2)) -> MARK(U42(isList(V1),V2))
 ACTIVE(U42(tt,V2)) -> MARK(U43(isNeList(V2)))
 ACTIVE(U51(tt,V1,V2)) -> MARK(U52(isNeList(V1),V2))
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = X1 + 2.X2
[U12](X) = X
[U21](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 2
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = X
[U41](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 2
[U43](X) = X + 1
[U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X + 1
[U61](X1,X2) = 2.X1 + 2.X2 + 1
[U62](X) = 2.X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = 2.X1 + X2
[isList](X) = 2.X
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[mark](X) = X
[a] = 0
[e] = 2
[fSNonEmpty] = 0
[i] = 1
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(U31(tt,V)) -> MARK(U32(isQid(V)))
 ACTIVE(U41(tt,V1,V2)) -> MARK(U42(isList(V1),V2))
 ACTIVE(U42(tt,V2)) -> MARK(U43(isNeList(V2)))
 ACTIVE(U51(tt,V1,V2)) -> MARK(U52(isNeList(V1),V2))
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(U31(tt,V)) -> MARK(U32(isQid(V)))
 ACTIVE(U41(tt,V1,V2)) -> MARK(U42(isList(V1),V2))
 ACTIVE(U42(tt,V2)) -> MARK(U43(isNeList(V2)))
 ACTIVE(U51(tt,V1,V2)) -> MARK(U52(isNeList(V1),V2))
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(U31(tt,V)) -> MARK(U32(isQid(V)))
 ACTIVE(U41(tt,V1,V2)) -> MARK(U42(isList(V1),V2))
 ACTIVE(U42(tt,V2)) -> MARK(U43(isNeList(V2)))
 ACTIVE(U51(tt,V1,V2)) -> MARK(U52(isNeList(V1),V2))
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2 + 1
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X + 1
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X + 1
[isNeList](X) = 2.X + 1
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[mark](X) = X
[a] = 2
[e] = 1
[fSNonEmpty] = 0
[i] = 1
[nil] = 1
[o] = 2
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(U41(tt,V1,V2)) -> MARK(U42(isList(V1),V2))
 ACTIVE(U42(tt,V2)) -> MARK(U43(isNeList(V2)))
 ACTIVE(U51(tt,V1,V2)) -> MARK(U52(isNeList(V1),V2))
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(U41(tt,V1,V2)) -> MARK(U42(isList(V1),V2))
 ACTIVE(U42(tt,V2)) -> MARK(U43(isNeList(V2)))
 ACTIVE(U51(tt,V1,V2)) -> MARK(U52(isNeList(V1),V2))
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(U41(tt,V1,V2)) -> MARK(U42(isList(V1),V2))
 ACTIVE(U42(tt,V2)) -> MARK(U43(isNeList(V2)))
 ACTIVE(U51(tt,V1,V2)) -> MARK(U52(isNeList(V1),V2))
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + X2
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 2
[U22](X1,X2) = 2.X1 + X2 + 2
[U23](X) = X + 2
[U31](X1,X2) = 2.X1 + X2
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 2
[U42](X1,X2) = X1 + X2 + 1
[U43](X) = X + 1
[U51](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 2
[U52](X1,X2) = X1 + X2 + 2
[U53](X) = X + 2
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = 2.X1 + X2
[isList](X) = X
[isNeList](X) = X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[mark](X) = X
[a] = 2
[e] = 0
[fSNonEmpty] = 0
[i] = 0
[nil] = 2
[o] = 0
[tt] = 0
[u] = 1
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(U42(tt,V2)) -> MARK(U43(isNeList(V2)))
 ACTIVE(U51(tt,V1,V2)) -> MARK(U52(isNeList(V1),V2))
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(U42(tt,V2)) -> MARK(U43(isNeList(V2)))
 ACTIVE(U51(tt,V1,V2)) -> MARK(U52(isNeList(V1),V2))
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(U42(tt,V2)) -> MARK(U43(isNeList(V2)))
 ACTIVE(U51(tt,V1,V2)) -> MARK(U52(isNeList(V1),V2))
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + 2.X2
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 2
[U23](X) = X + 2
[U31](X1,X2) = X1 + 2.X2
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 2
[U43](X) = X + 1
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X + 2
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[mark](X) = X
[a] = 2
[e] = 1
[fSNonEmpty] = 0
[i] = 2
[nil] = 0
[o] = 1
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(U51(tt,V1,V2)) -> MARK(U52(isNeList(V1),V2))
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(U51(tt,V1,V2)) -> MARK(U52(isNeList(V1),V2))
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(U51(tt,V1,V2)) -> MARK(U52(isNeList(V1),V2))
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = X1 + 2.X2
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 2
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X + 1
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X + 1
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[mark](X) = X
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 1
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(U52(tt,V2)) -> MARK(U53(isList(V2)))
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + 2.X2
[U12](X) = X
[U21](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 2
[U23](X) = X + 2
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = 2.X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X + 1
[U61](X1,X2) = X1 + X2 + 1
[U62](X) = 2.X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = 2.X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + X2
[isList](X) = 2.X
[isNeList](X) = 2.X
[isNePal](X) = X + 1
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[mark](X) = X
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 1
[nil] = 0
[o] = 1
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(U61(tt,V)) -> MARK(U62(isQid(V)))
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X + 1
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = X1 + 2.X2
[U32](X) = X
[U41](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X + 1
[U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X + 1
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X + 1
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = 2.X1 + X2
[isList](X) = 2.X + 1
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = X
[mark](X) = X
[a] = 1
[e] = 0
[fSNonEmpty] = 0
[i] = 2
[nil] = 1
[o] = 0
[tt] = 0
[u] = 1
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(U71(tt,V)) -> MARK(U72(isNePal(V)))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X + 1
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X + 1
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X
[U61](X1,X2) = X1 + 2.X2 + 1
[U62](X) = X + 1
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X + 1
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 1
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[mark](X) = X
[a] = 2
[e] = 1
[fSNonEmpty] = 0
[i] = 1
[nil] = 2
[o] = 1
[tt] = 0
[u] = 1
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + 2.X2
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 2
[U23](X) = X + 1
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = 2.X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 2
[U43](X) = X + 1
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X + 1
[U61](X1,X2) = X1 + 2.X2 + 2
[U62](X) = 2.X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = 2.X1 + X2
[isList](X) = 2.X
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = X
[mark](X) = X
[a] = 0
[e] = 2
[fSNonEmpty] = 0
[i] = 1
[nil] = 0
[o] = 0
[tt] = 0
[u] = 0
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + 2.X2
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 2
[U23](X) = X + 1
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 1
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X + 1
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X + 2
[U61](X1,X2) = X1 + 2.X2
[U62](X) = X
[U71](X1,X2) = X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[mark](X) = X
[a] = 0
[e] = 0
[fSNonEmpty] = 0
[i] = 1
[nil] = 2
[o] = 2
[tt] = 0
[u] = 1
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X + 1
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = X1 + 2.X2
[U32](X) = 2.X
[U41](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X + 1
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X + 1
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = 2.X + 2
[U71](X1,X2) = X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X + 1
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[mark](X) = X
[a] = 0
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(u95u95(V1,V2))) -> MARK(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X + 1
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = X1 + 2.X2
[U32](X) = 2.X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X + 1
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = 2.X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = 2.X1 + X2
[isList](X) = 2.X + 1
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = X
[mark](X) = X
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isList(V)) -> MARK(U11(isPalListKind(V),V))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + 2.X2
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X + 1
[U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2
[U62](X) = X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X + 1
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[mark](X) = X
[a] = 0
[e] = 0
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 2
[tt] = 0
[u] = 1
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isList(X)) -> ACTIVE(isList(X))
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2 + 1
[U32](X) = X
[U41](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2
[U62](X) = X
[U71](X1,X2) = 2.X1 + 2.X2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X + 1
[isNeList](X) = 2.X + 1
[isNePal](X) = 2.X
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[mark](X) = X
[a] = 0
[e] = 0
[fSNonEmpty] = 0
[i] = 1
[nil] = 2
[o] = 1
[tt] = 0
[u] = 1
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isNeList(u95u95(V1,V2))) -> MARK(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + 2.X2
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 2
[U23](X) = X + 1
[U31](X1,X2) = 2.X1
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3
[U42](X1,X2) = X1 + 2.X2
[U43](X) = X
[U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X + 2
[U61](X1,X2) = 2.X1 + X2 + 2
[U62](X) = 2.X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = 2.X1 + X2
[isList](X) = 2.X
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[mark](X) = X
[a] = 0
[e] = 0
[fSNonEmpty] = 0
[i] = 0
[nil] = 2
[o] = 0
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isNeList(V)) -> MARK(U31(isPalListKind(V),V))
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = X1 + 2.X2 + 1
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2
[U62](X) = X
[U71](X1,X2) = 2.X1 + 2.X2 + 1
[U72](X) = X + 1
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X + 1
[isNeList](X) = 2.X + 1
[isNePal](X) = 2.X
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[mark](X) = X
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[nil] = 1
[o] = 2
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNeList(X)) -> ACTIVE(isNeList(X))
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + 2.X2
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 2
[U43](X) = X + 2
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X + 2
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[mark](X) = X
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isNePal(V)) -> MARK(U61(isPalListKind(V),V))
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = X1 + 2.X2 + 1
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2 + 1
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2 + 1
[U62](X) = X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X + 1
[isNeList](X) = 2.X + 1
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X + 1
[mark](X) = X
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 1
[nil] = 2
[o] = 0
[tt] = 0
[u] = 0
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isNePal(X)) -> ACTIVE(isNePal(X))
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPal(V)) -> MARK(U71(isPalListKind(V),V))
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = X1 + 2.X2
[U12](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 2
[U23](X) = X
[U31](X1,X2) = X1
[U32](X) = 2.X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 2
[U43](X) = X + 2
[U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X + 2
[U61](X1,X2) = X1 + X2
[U62](X) = 2.X
[U71](X1,X2) = 2.X1 + 2.X2 + 1
[U72](X) = 2.X + 1
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + X2
[isList](X) = 2.X
[isNeList](X) = 2.X
[isNePal](X) = X
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[mark](X) = X
[a] = 2
[e] = 0
[fSNonEmpty] = 0
[i] = 0
[nil] = 2
[o] = 0
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPal(X)) -> ACTIVE(isPal(X))
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> ACTIVE(U11(mark(X1),X2))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 1
[U12](X) = 2
[U21](X1,X2,X3) = 2
[U22](X1,X2) = 2
[U23](X) = 1
[U31](X1,X2) = 2
[U32](X) = 1
[U41](X1,X2,X3) = 2
[U42](X1,X2) = 2
[U43](X) = 2
[U51](X1,X2,X3) = 2
[U52](X1,X2) = 2
[U53](X) = 2
[U61](X1,X2) = 2
[U62](X) = 2
[U71](X1,X2) = 0
[U72](X) = 2
[u95u95](X1,X2) = 2
[active](X) = 2
[and](X1,X2) = 2
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = 2
[isPal](X) = 2
[isPalListKind](X) = 2
[isQid](X) = 0
[mark](X) = 2
[a] = 0
[e] = 0
[fSNonEmpty] = 0
[i] = 0
[nil] = 0
[o] = 2
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = X
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = X1 + X2 + 1
[U12](X) = X + 1
[U21](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 2
[U22](X1,X2) = X1 + X2 + 1
[U23](X) = X
[U31](X1,X2) = X1 + X2
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 2
[U42](X1,X2) = 2.X1 + X2
[U43](X) = X
[U51](X1,X2,X3) = X1 + 2.X2 + X3 + 2
[U52](X1,X2) = 2.X1 + X2 + 2
[U53](X) = X
[U61](X1,X2) = X1 + 2.X2
[U62](X) = 2.X
[U71](X1,X2) = 2.X1 + 2.X2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = X + 1
[isNeList](X) = X
[isNePal](X) = 2.X
[isPal](X) = 2.X
[isPalListKind](X) = 0
[isQid](X) = X
[mark](X) = X
[a] = 1
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 2
[tt] = 0
[u] = 1
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = X + 1
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X + 1
[U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2
[U62](X) = X
[U71](X1,X2) = 2.X1 + 2.X2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X + 1
[isNeList](X) = 2.X
[isNePal](X) = 2.X
[isPal](X) = 2.X
[isPalListKind](X) = 0
[isQid](X) = 2.X
[mark](X) = X
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 1
[nil] = 2
[o] = 0
[tt] = 0
[u] = 0
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U12(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + X2 + 1
[U12](X) = X + 1
[U21](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 2
[U22](X1,X2) = X1 + X2 + 1
[U23](X) = X
[U31](X1,X2) = X1 + X2
[U32](X) = X
[U41](X1,X2,X3) = X1 + 2.X2 + X3 + 2
[U42](X1,X2) = X1 + X2 + 1
[U43](X) = X + 1
[U51](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 2
[U52](X1,X2) = 2.X1 + X2 + 2
[U53](X) = X + 1
[U61](X1,X2) = X1 + 2.X2 + 2
[U62](X) = X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = X + 1
[isNeList](X) = X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = X
[mark](X) = X
[a] = 1
[e] = 1
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 0
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U21(X1,X2,X3)) -> ACTIVE(U21(mark(X1),X2,X3))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2
[U12](X) = 1
[U21](X1,X2,X3) = 0
[U22](X1,X2) = 1
[U23](X) = 1
[U31](X1,X2) = 1
[U32](X) = 1
[U41](X1,X2,X3) = 0
[U42](X1,X2) = 1
[U43](X) = 1
[U51](X1,X2,X3) = 1
[U52](X1,X2) = 1
[U53](X) = 1
[U61](X1,X2) = 0
[U62](X) = 0
[U71](X1,X2) = 1
[U72](X) = 1
[u95u95](X1,X2) = 1
[active](X) = 0
[and](X1,X2) = 1
[isList](X) = 2
[isNeList](X) = 1
[isNePal](X) = 2
[isPal](X) = 2
[isPalListKind](X) = 1
[isQid](X) = 0
[mark](X) = 0
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 1
[nil] = 2
[o] = 0
[tt] = 0
[u] = 1
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1
[U12](X) = 0
[U21](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 2
[U22](X1,X2) = 2.X1 + X2 + 2
[U23](X) = X + 2
[U31](X1,X2) = 2.X1 + 2.X2 + 2
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = 2.X1 + 2.X2 + 2
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + X2
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = X
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X + 2
[mark](X) = X
[a] = 2
[e] = 0
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 1
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 1

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U22(X1,X2)) -> ACTIVE(U22(mark(X1),X2))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = X1 + X2 + 1
[U12](X) = 1
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2 + 1
[U62](X) = X + 1
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X + 1
[isNeList](X) = 2.X + 1
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[mark](X) = X
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 0
[nil] = 2
[o] = 2
[tt] = 0
[u] = 0
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U22(X1,X2)) -> MARK(X1)
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X2 + 1
[U12](X) = 1
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 2.X2 + 1
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X + 1
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X + 1
[isNeList](X) = 2.X + 1
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X + 1
[mark](X) = X
[a] = 1
[e] = 0
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 1
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 1

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U23(X)) -> ACTIVE(U23(mark(X)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2
[U12](X) = 2
[U21](X1,X2,X3) = 2
[U22](X1,X2) = 2
[U23](X) = 0
[U31](X1,X2) = 1
[U32](X) = 1
[U41](X1,X2,X3) = 1
[U42](X1,X2) = 0
[U43](X) = 0
[U51](X1,X2,X3) = 0
[U52](X1,X2) = 0
[U53](X) = 1
[U61](X1,X2) = 1
[U62](X) = 1
[U71](X1,X2) = 1
[U72](X) = 1
[u95u95](X1,X2) = 1
[active](X) = 2
[and](X1,X2) = 1
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = 2
[isPal](X) = 2
[isPalListKind](X) = 1
[isQid](X) = 0
[mark](X) = 2
[a] = 0
[e] = 1
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 2
[tt] = 2
[u] = 0
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U23(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + X2
[U12](X) = 0
[U21](X1,X2,X3) = 2.X2 + X3 + 2
[U22](X1,X2) = 2.X1 + X2 + 2
[U23](X) = X + 1
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = 2.X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 2
[U43](X) = X + 2
[U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = 2.X + 2
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = X
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = X
[mark](X) = X
[a] = 2
[e] = 1
[fSNonEmpty] = 0
[i] = 0
[nil] = 2
[o] = 0
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U31(X1,X2)) -> ACTIVE(U31(mark(X1),X2))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = X2
[U12](X) = 0
[U21](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U22](X1,X2) = 2
[U23](X) = 1
[U31](X1,X2) = 2.X1 + 2.X2 + 2
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 2
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X
[U71](X1,X2) = X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X + 2
[mark](X) = X
[a] = 2
[e] = 0
[fSNonEmpty] = 0
[i] = 0
[nil] = 1
[o] = 0
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + X2 + 1
[U12](X) = 0
[U21](X1,X2,X3) = X1 + 2.X2 + X3 + 2
[U22](X1,X2) = 2.X1
[U23](X) = 0
[U31](X1,X2) = 2.X1 + 2.X2 + 1
[U32](X) = 2.X + 1
[U41](X1,X2,X3) = 2.X1 + X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2
[U62](X) = 2.X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X + 1
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = X + 1
[isNeList](X) = 2.X + 1
[isNePal](X) = 2.X
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = X
[mark](X) = X
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U32(X)) -> ACTIVE(U32(mark(X)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + 2.X2
[U12](X) = 0
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = X1 + 2.X2 + 2
[U23](X) = X + 2
[U31](X1,X2) = 2.X2 + 2
[U32](X) = X + 1
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 2
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X + 1
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X + 1
[mark](X) = X
[a] = 0
[e] = 2
[fSNonEmpty] = 0
[i] = 0
[nil] = 0
[o] = 2
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U32(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X2
[U12](X) = 0
[U21](X1,X2,X3) = X1 + 2.X2 + 2
[U22](X1,X2) = X1 + 2
[U23](X) = 2
[U31](X1,X2) = 2.X1 + 2.X2 + 1
[U32](X) = X + 1
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 2
[U43](X) = X + 1
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X + 1
[U61](X1,X2) = X1 + 2.X2 + 2
[U62](X) = X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 1
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X
[isNeList](X) = 2.X + 1
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[mark](X) = X
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U41(X1,X2,X3)) -> ACTIVE(U41(mark(X1),X2,X3))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X2 + 1
[U12](X) = X
[U21](X1,X2,X3) = X1 + X2 + 2.X3
[U22](X1,X2) = 2.X2
[U23](X) = 0
[U31](X1,X2) = 2.X1 + X2 + 1
[U32](X) = 1
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 1
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X + 1
[isNeList](X) = 2.X + 1
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X + 2
[mark](X) = X
[a] = 1
[e] = 2
[fSNonEmpty] = 0
[i] = 1
[nil] = 0
[o] = 0
[tt] = 0
[u] = 0
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + 2.X2 + 2
[U12](X) = 1
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = 2.X2 + 2
[U23](X) = X
[U31](X1,X2) = 2.X1
[U32](X) = 0
[U41](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2
[U43](X) = X
[U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X + 2
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[mark](X) = X
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U42(X1,X2)) -> ACTIVE(U42(mark(X1),X2))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2
[U12](X) = 1
[U21](X1,X2,X3) = 2
[U22](X1,X2) = 2
[U23](X) = 2
[U31](X1,X2) = 2
[U32](X) = 2
[U41](X1,X2,X3) = 2
[U42](X1,X2) = 0
[U43](X) = 1
[U51](X1,X2,X3) = 1
[U52](X1,X2) = 1
[U53](X) = 1
[U61](X1,X2) = 0
[U62](X) = 0
[U71](X1,X2) = 1
[U72](X) = 0
[u95u95](X1,X2) = 1
[active](X) = 2
[and](X1,X2) = 1
[isList](X) = 2
[isNeList](X) = 2
[isNePal](X) = 0
[isPal](X) = 0
[isPalListKind](X) = 1
[isQid](X) = 0
[mark](X) = 2
[a] = 0
[e] = 0
[fSNonEmpty] = 0
[i] = 2
[nil] = 0
[o] = 0
[tt] = 2
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = X + 1
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U42(X1,X2)) -> MARK(X1)
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1
[U12](X) = 0
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = 2
[U23](X) = 2
[U31](X1,X2) = 2.X1 + 2.X2 + 2
[U32](X) = 2.X + 1
[U41](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X1 + 2.X2 + 2
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2
[U53](X) = X
[U61](X1,X2) = X1
[U62](X) = X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X + 2
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[mark](X) = X
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 1
[tt] = 0
[u] = 1
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U43(X)) -> ACTIVE(U43(mark(X)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2
[U12](X) = 2
[U21](X1,X2,X3) = 2
[U22](X1,X2) = 0
[U23](X) = 0
[U31](X1,X2) = 0
[U32](X) = 0
[U41](X1,X2,X3) = 2
[U42](X1,X2) = 1
[U43](X) = 1
[U51](X1,X2,X3) = 0
[U52](X1,X2) = 0
[U53](X) = 2
[U61](X1,X2) = 0
[U62](X) = 0
[U71](X1,X2) = 0
[U72](X) = 2
[u95u95](X1,X2) = 2
[active](X) = 0
[and](X1,X2) = 2
[isList](X) = 2
[isNeList](X) = 0
[isNePal](X) = 1
[isPal](X) = 2
[isPalListKind](X) = 2
[isQid](X) = 0
[mark](X) = 0
[a] = 0
[e] = 0
[fSNonEmpty] = 0
[i] = 2
[nil] = 0
[o] = 2
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = X
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U43(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + X2 + 2
[U12](X) = 2
[U21](X1,X2,X3) = 2.X1 + X3 + 2
[U22](X1,X2) = 2
[U23](X) = 2
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = 2.X
[U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U42](X1,X2) = 2.X2 + 2
[U43](X) = X + 2
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = X
[U61](X1,X2) = X1 + 2.X2 + 2
[U62](X) = 2.X + 1
[U71](X1,X2) = X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X + 2
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = X
[mark](X) = X
[a] = 2
[e] = 0
[fSNonEmpty] = 0
[i] = 0
[nil] = 1
[o] = 2
[tt] = 0
[u] = 0
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U51(X1,X2,X3)) -> ACTIVE(U51(mark(X1),X2,X3))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 0
[U12](X) = 0
[U21](X1,X2,X3) = 2.X1
[U22](X1,X2) = 2.X1
[U23](X) = X
[U31](X1,X2) = 2.X1 + 1
[U32](X) = 2.X + 1
[U41](X1,X2,X3) = 2
[U42](X1,X2) = 2.X1 + 2
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2
[U52](X1,X2) = X1
[U53](X) = X
[U61](X1,X2) = 2.X1 + 2.X2 + 1
[U62](X) = 2.X + 1
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 0
[isNeList](X) = 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[mark](X) = X
[a] = 0
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = X
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1
[U12](X) = 0
[U21](X1,X2,X3) = 2.X1
[U22](X1,X2) = 2.X1
[U23](X) = 2.X
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = 0
[U41](X1,X2,X3) = 2.X1 + 2.X3 + 2
[U42](X1,X2) = 2.X2 + 2
[U43](X) = X + 2
[U51](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = 2.X + 2
[U61](X1,X2) = 2.X1 + 2
[U62](X) = 2.X + 2
[U71](X1,X2) = X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 0
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[mark](X) = X
[a] = 0
[e] = 1
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U52(X1,X2)) -> ACTIVE(U52(mark(X1),X2))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + X2
[U12](X) = 0
[U21](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 2
[U22](X1,X2) = 2.X1 + X2 + 2
[U23](X) = X + 1
[U31](X1,X2) = 2.X1 + 2.X2 + 1
[U32](X) = 2.X + 1
[U41](X1,X2,X3) = X1 + 2.X2 + 1
[U42](X1,X2) = 1
[U43](X) = 1
[U51](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 1
[U53](X) = 2.X
[U61](X1,X2) = 2.X1 + 2.X2
[U62](X) = 2.X
[U71](X1,X2) = 2.X1 + 2.X2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = X
[isNeList](X) = 2.X + 1
[isNePal](X) = 2.X
[isPal](X) = 2.X
[isPalListKind](X) = 0
[isQid](X) = X
[mark](X) = X
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 2
[tt] = 0
[u] = 1
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U52(X1,X2)) -> MARK(X1)
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + 1
[U12](X) = 1
[U21](X1,X2,X3) = 2.X2 + X3 + 2
[U22](X1,X2) = 2.X1 + X2
[U23](X) = 0
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = 2.X1 + 2.X2
[U43](X) = X
[U51](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = 2.X
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = X + 1
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[mark](X) = X
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U53(X)) -> ACTIVE(U53(mark(X)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = X1 + X2
[U12](X) = 0
[U21](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 2
[U22](X1,X2) = X1 + X2 + 2
[U23](X) = X + 2
[U31](X1,X2) = 2.X1 + 2.X2
[U32](X) = 2.X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2) = X2 + 2
[U43](X) = 2
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2 + 2
[U53](X) = 2.X + 2
[U61](X1,X2) = 2.X1
[U62](X) = 2.X
[U71](X1,X2) = 2.X1
[U72](X) = 2.X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = X
[isNeList](X) = 2.X
[isNePal](X) = 0
[isPal](X) = 0
[isPalListKind](X) = 0
[isQid](X) = 0
[mark](X) = X
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 0
[nil] = 1
[o] = 2
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = X + 1
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 1

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U53(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + X2 + 1
[U12](X) = 1
[U21](X1,X2,X3) = 2.X2 + X3 + 2
[U22](X1,X2) = 2.X1 + X2
[U23](X) = 0
[U31](X1,X2) = X1 + X2
[U32](X) = 0
[U41](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 2
[U42](X1,X2) = X2 + 2
[U43](X) = 2
[U51](X1,X2,X3) = 2.X2 + X3 + 2
[U52](X1,X2) = X2 + 2
[U53](X) = X + 1
[U61](X1,X2) = X1 + 2.X2 + 2
[U62](X) = X + 2
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = X + 1
[isNeList](X) = X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X
[mark](X) = X
[a] = 0
[e] = 0
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 0
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U61(X1,X2)) -> ACTIVE(U61(mark(X1),X2))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2
[U12](X) = 0
[U21](X1,X2,X3) = 2.X1 + 2
[U22](X1,X2) = 2
[U23](X) = 2
[U31](X1,X2) = 2.X1 + 2.X2 + 2
[U32](X) = 2
[U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U42](X1,X2) = 2.X2 + 2
[U43](X) = 2
[U51](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U52](X1,X2) = 2
[U53](X) = 2
[U61](X1,X2) = 2.X1 + 2.X2 + 1
[U62](X) = 2.X + 1
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X + 1
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 1
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = X
[mark](X) = X
[a] = 2
[e] = 0
[fSNonEmpty] = 0
[i] = 0
[nil] = 1
[o] = 2
[tt] = 0
[u] = 0
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = X
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X2 + 2
[U12](X) = X
[U21](X1,X2,X3) = 2.X2 + 2.X3
[U22](X1,X2) = 0
[U23](X) = 0
[U31](X1,X2) = 2
[U32](X) = 2.X + 2
[U41](X1,X2,X3) = 0
[U42](X1,X2) = 0
[U43](X) = 0
[U51](X1,X2,X3) = X1 + 2
[U52](X1,X2) = 2
[U53](X) = 2
[U61](X1,X2) = 2.X1 + 2.X2 + 2
[U62](X) = 2.X + 2
[U71](X1,X2) = X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2
[active](X) = X
[and](X1,X2) = X1 + X2
[isList](X) = 2.X + 2
[isNeList](X) = 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 0
[mark](X) = X
[a] = 2
[e] = 0
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U62(X)) -> ACTIVE(U62(mark(X)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + 2.X2 + 1
[U12](X) = 1
[U21](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2) = 2.X2 + 2
[U23](X) = 2
[U31](X1,X2) = 2.X1 + 2.X2 + 2
[U32](X) = 2.X + 2
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 1
[U42](X1,X2) = 2.X2 + 1
[U43](X) = 1
[U51](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U52](X1,X2) = X2 + 1
[U53](X) = 0
[U61](X1,X2) = 2.X1 + 2.X2 + 1
[U62](X) = 2.X + 1
[U71](X1,X2) = X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2.X + 2
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = X
[mark](X) = X
[a] = 0
[e] = 0
[fSNonEmpty] = 0
[i] = 0
[nil] = 2
[o] = 2
[tt] = 0
[u] = 0
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U62(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1
[U12](X) = 0
[U21](X1,X2,X3) = 0
[U22](X1,X2) = 2.X1
[U23](X) = 0
[U31](X1,X2) = 2.X1 + X2 + 2
[U32](X) = X + 2
[U41](X1,X2,X3) = 2.X2 + X3 + 2
[U42](X1,X2) = 2.X1 + X2 + 2
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 2
[U52](X1,X2) = X2 + 1
[U53](X) = 2.X + 1
[U61](X1,X2) = 2.X1 + X2 + 2
[U62](X) = X + 2
[U71](X1,X2) = X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = 2.X1 + X2
[isList](X) = 0
[isNeList](X) = X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = X
[mark](X) = X
[a] = 0
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 2
[tt] = 0
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U71(X1,X2)) -> ACTIVE(U71(mark(X1),X2))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2.X1 + 2
[U12](X) = 1
[U21](X1,X2,X3) = X1 + 2
[U22](X1,X2) = 2
[U23](X) = 2
[U31](X1,X2) = 2.X1 + 2.X2 + 2
[U32](X) = X
[U41](X1,X2,X3) = X1 + X2 + 2.X3 + 2
[U42](X1,X2) = 2.X2 + 2
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2) = X1 + 2.X2
[U53](X) = 0
[U61](X1,X2) = 2.X2 + 2
[U62](X) = X
[U71](X1,X2) = X1 + 2.X2 + 2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + 2.X2
[isList](X) = 2
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 2.X + 2
[mark](X) = X
[a] = 0
[e] = 2
[fSNonEmpty] = 0
[i] = 0
[nil] = 0
[o] = 2
[tt] = 0
[u] = 0
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2
[U12](X) = 2
[U21](X1,X2,X3) = X2 + 2
[U22](X1,X2) = 2
[U23](X) = 0
[U31](X1,X2) = 2.X1 + 2.X2 + 2
[U32](X) = X + 1
[U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U42](X1,X2) = 2.X2 + 2
[U43](X) = 1
[U51](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 2
[U52](X1,X2) = X1 + X2
[U53](X) = 0
[U61](X1,X2) = 2.X1 + X2 + 1
[U62](X) = X
[U71](X1,X2) = X1 + 2.X2 + 2
[U72](X) = 2.X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + X2
[isList](X) = 2.X + 2
[isNeList](X) = 2.X + 2
[isNePal](X) = X + 1
[isPal](X) = 2.X + 2
[isPalListKind](X) = 0
[isQid](X) = 1
[mark](X) = X
[a] = 2
[e] = 1
[fSNonEmpty] = 0
[i] = 1
[nil] = 0
[o] = 1
[tt] = 0
[u] = 1
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(and(tt,X)) -> MARK(X)
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = X1 + X2 + 2
[U12](X) = 2
[U21](X1,X2,X3) = 2.X1 + X2 + 2
[U22](X1,X2) = 2
[U23](X) = 2
[U31](X1,X2) = X1
[U32](X) = 2
[U41](X1,X2,X3) = 2.X3 + 2
[U42](X1,X2) = 2.X2
[U43](X) = X
[U51](X1,X2,X3) = 2.X1 + 2
[U52](X1,X2) = 2
[U53](X) = 2
[U61](X1,X2) = 2.X1 + 1
[U62](X) = 2
[U71](X1,X2) = 2.X2 + 2
[U72](X) = X + 1
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + X2
[isList](X) = 2.X + 2
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 1
[isPal](X) = 2.X + 2
[isPalListKind](X) = X
[isQid](X) = 2.X
[mark](X) = X
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 2
[tt] = 2
[u] = 2
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X

Problem 1.26: 

SCC Processor:
-> Pairs:
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(isPalListKind(u95u95(V1,V2))) -> MARK(and(isPalListKind(V1),isPalListKind(V2)))
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
-> Usable rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X1,X2) = 2
[U12](X) = 2
[U21](X1,X2,X3) = 2
[U22](X1,X2) = X1
[U23](X) = 2
[U31](X1,X2) = 2
[U32](X) = 2
[U41](X1,X2,X3) = 2
[U42](X1,X2) = 2
[U43](X) = 2
[U51](X1,X2,X3) = 2
[U52](X1,X2) = 2
[U53](X) = 2
[U61](X1,X2) = X1
[U62](X) = 2
[U71](X1,X2) = 2.X2
[U72](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[and](X1,X2) = X1 + X2 + 2
[isList](X) = 2
[isNeList](X) = 2
[isNePal](X) = 2.X
[isPal](X) = 2.X
[isPalListKind](X) = 2.X
[isQid](X) = 2.X + 2
[mark](X) = X
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[nil] = 2
[o] = 2
[tt] = 2
[u] = 1
[U11Sharp](X1,X2) = 0
[U12Sharp](X) = 0
[U21Sharp](X1,X2,X3) = 0
[U22Sharp](X1,X2) = 0
[U23Sharp](X) = 0
[U31Sharp](X1,X2) = 0
[U32Sharp](X) = 0
[U41Sharp](X1,X2,X3) = 0
[U42Sharp](X1,X2) = 0
[U43Sharp](X) = 0
[U51Sharp](X1,X2,X3) = 0
[U52Sharp](X1,X2) = 0
[U53Sharp](X) = 0
[U61Sharp](X1,X2) = 0
[U62Sharp](X) = 0
[U71Sharp](X1,X2) = 0
[U72Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[AND](X1,X2) = 0
[ISLIST](X) = 0
[ISNELIST](X) = 0
[ISNEPAL](X) = 0
[ISPAL](X) = 0
[ISPALLISTKIND](X) = 0
[ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.26: 

SCC Processor:
-> Pairs:
 MARK(U72(X)) -> ACTIVE(U72(mark(X)))
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> ACTIVE(and(mark(X1),X2))
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(isPalListKind(X)) -> ACTIVE(isPalListKind(X))
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> MARK(X1)
->->-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)

Problem 1.26: 

Subterm Processor:
-> Pairs:
 MARK(U72(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(and(X1,X2)) -> MARK(X1)
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Projection:
 pi(MARK) = 1

Problem 1.26: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X1),X2) -> U11(X1,X2)
 U11(mark(X1),X2) -> U11(X1,X2)
 U11(X1,active(X2)) -> U11(X1,X2)
 U11(X1,mark(X2)) -> U11(X1,X2)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 U21(active(X1),X2,X3) -> U21(X1,X2,X3)
 U21(mark(X1),X2,X3) -> U21(X1,X2,X3)
 U21(X1,active(X2),X3) -> U21(X1,X2,X3)
 U21(X1,mark(X2),X3) -> U21(X1,X2,X3)
 U21(X1,X2,active(X3)) -> U21(X1,X2,X3)
 U21(X1,X2,mark(X3)) -> U21(X1,X2,X3)
 U22(active(X1),X2) -> U22(X1,X2)
 U22(mark(X1),X2) -> U22(X1,X2)
 U22(X1,active(X2)) -> U22(X1,X2)
 U22(X1,mark(X2)) -> U22(X1,X2)
 U23(active(X)) -> U23(X)
 U23(mark(X)) -> U23(X)
 U31(active(X1),X2) -> U31(X1,X2)
 U31(mark(X1),X2) -> U31(X1,X2)
 U31(X1,active(X2)) -> U31(X1,X2)
 U31(X1,mark(X2)) -> U31(X1,X2)
 U32(active(X)) -> U32(X)
 U32(mark(X)) -> U32(X)
 U41(active(X1),X2,X3) -> U41(X1,X2,X3)
 U41(mark(X1),X2,X3) -> U41(X1,X2,X3)
 U41(X1,active(X2),X3) -> U41(X1,X2,X3)
 U41(X1,mark(X2),X3) -> U41(X1,X2,X3)
 U41(X1,X2,active(X3)) -> U41(X1,X2,X3)
 U41(X1,X2,mark(X3)) -> U41(X1,X2,X3)
 U42(active(X1),X2) -> U42(X1,X2)
 U42(mark(X1),X2) -> U42(X1,X2)
 U42(X1,active(X2)) -> U42(X1,X2)
 U42(X1,mark(X2)) -> U42(X1,X2)
 U43(active(X)) -> U43(X)
 U43(mark(X)) -> U43(X)
 U51(active(X1),X2,X3) -> U51(X1,X2,X3)
 U51(mark(X1),X2,X3) -> U51(X1,X2,X3)
 U51(X1,active(X2),X3) -> U51(X1,X2,X3)
 U51(X1,mark(X2),X3) -> U51(X1,X2,X3)
 U51(X1,X2,active(X3)) -> U51(X1,X2,X3)
 U51(X1,X2,mark(X3)) -> U51(X1,X2,X3)
 U52(active(X1),X2) -> U52(X1,X2)
 U52(mark(X1),X2) -> U52(X1,X2)
 U52(X1,active(X2)) -> U52(X1,X2)
 U52(X1,mark(X2)) -> U52(X1,X2)
 U53(active(X)) -> U53(X)
 U53(mark(X)) -> U53(X)
 U61(active(X1),X2) -> U61(X1,X2)
 U61(mark(X1),X2) -> U61(X1,X2)
 U61(X1,active(X2)) -> U61(X1,X2)
 U61(X1,mark(X2)) -> U61(X1,X2)
 U62(active(X)) -> U62(X)
 U62(mark(X)) -> U62(X)
 U71(active(X1),X2) -> U71(X1,X2)
 U71(mark(X1),X2) -> U71(X1,X2)
 U71(X1,active(X2)) -> U71(X1,X2)
 U71(X1,mark(X2)) -> U71(X1,X2)
 U72(active(X)) -> U72(X)
 U72(mark(X)) -> U72(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt,V)) -> mark(U12(isNeList(V)))
 active(U12(tt)) -> mark(tt)
 active(U21(tt,V1,V2)) -> mark(U22(isList(V1),V2))
 active(U22(tt,V2)) -> mark(U23(isList(V2)))
 active(U23(tt)) -> mark(tt)
 active(U31(tt,V)) -> mark(U32(isQid(V)))
 active(U32(tt)) -> mark(tt)
 active(U41(tt,V1,V2)) -> mark(U42(isList(V1),V2))
 active(U42(tt,V2)) -> mark(U43(isNeList(V2)))
 active(U43(tt)) -> mark(tt)
 active(U51(tt,V1,V2)) -> mark(U52(isNeList(V1),V2))
 active(U52(tt,V2)) -> mark(U53(isList(V2)))
 active(U53(tt)) -> mark(tt)
 active(U61(tt,V)) -> mark(U62(isQid(V)))
 active(U62(tt)) -> mark(tt)
 active(U71(tt,V)) -> mark(U72(isNePal(V)))
 active(U72(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(and(tt,X)) -> mark(X)
 active(isList(u95u95(V1,V2))) -> mark(U21(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isList(nil)) -> mark(tt)
 active(isList(V)) -> mark(U11(isPalListKind(V),V))
 active(isNeList(u95u95(V1,V2))) -> mark(U41(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(u95u95(V1,V2))) -> mark(U51(and(isPalListKind(V1),isPalListKind(V2)),V1,V2))
 active(isNeList(V)) -> mark(U31(isPalListKind(V),V))
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(and(and(isQid(I),isPalListKind(I)),and(isPal(P),isPalListKind(P))))
 active(isNePal(V)) -> mark(U61(isPalListKind(V),V))
 active(isPal(nil)) -> mark(tt)
 active(isPal(V)) -> mark(U71(isPalListKind(V),V))
 active(isPalListKind(u95u95(V1,V2))) -> mark(and(isPalListKind(V1),isPalListKind(V2)))
 active(isPalListKind(a)) -> mark(tt)
 active(isPalListKind(e)) -> mark(tt)
 active(isPalListKind(i)) -> mark(tt)
 active(isPalListKind(nil)) -> mark(tt)
 active(isPalListKind(o)) -> mark(tt)
 active(isPalListKind(u)) -> mark(tt)
 active(isQid(a)) -> mark(tt)
 active(isQid(e)) -> mark(tt)
 active(isQid(i)) -> mark(tt)
 active(isQid(o)) -> mark(tt)
 active(isQid(u)) -> mark(tt)
 and(active(X1),X2) -> and(X1,X2)
 and(mark(X1),X2) -> and(X1,X2)
 and(X1,active(X2)) -> and(X1,X2)
 and(X1,mark(X2)) -> and(X1,X2)
 isList(active(X)) -> isList(X)
 isList(mark(X)) -> isList(X)
 isNeList(active(X)) -> isNeList(X)
 isNeList(mark(X)) -> isNeList(X)
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 isPal(active(X)) -> isPal(X)
 isPal(mark(X)) -> isPal(X)
 isPalListKind(active(X)) -> isPalListKind(X)
 isPalListKind(mark(X)) -> isPalListKind(X)
 isQid(active(X)) -> isQid(X)
 isQid(mark(X)) -> isQid(X)
 mark(U11(X1,X2)) -> active(U11(mark(X1),X2))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(U21(X1,X2,X3)) -> active(U21(mark(X1),X2,X3))
 mark(U22(X1,X2)) -> active(U22(mark(X1),X2))
 mark(U23(X)) -> active(U23(mark(X)))
 mark(U31(X1,X2)) -> active(U31(mark(X1),X2))
 mark(U32(X)) -> active(U32(mark(X)))
 mark(U41(X1,X2,X3)) -> active(U41(mark(X1),X2,X3))
 mark(U42(X1,X2)) -> active(U42(mark(X1),X2))
 mark(U43(X)) -> active(U43(mark(X)))
 mark(U51(X1,X2,X3)) -> active(U51(mark(X1),X2,X3))
 mark(U52(X1,X2)) -> active(U52(mark(X1),X2))
 mark(U53(X)) -> active(U53(mark(X)))
 mark(U61(X1,X2)) -> active(U61(mark(X1),X2))
 mark(U62(X)) -> active(U62(mark(X)))
 mark(U71(X1,X2)) -> active(U71(mark(X1),X2))
 mark(U72(X)) -> active(U72(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(and(X1,X2)) -> active(and(mark(X1),X2))
 mark(isList(X)) -> active(isList(X))
 mark(isNeList(X)) -> active(isNeList(X))
 mark(isNePal(X)) -> active(isNePal(X))
 mark(isPal(X)) -> active(isPal(X))
 mark(isPalListKind(X)) -> active(isPalListKind(X))
 mark(isQid(X)) -> active(isQid(X))
 mark(a) -> active(a)
 mark(e) -> active(e)
 mark(i) -> active(i)
 mark(nil) -> active(nil)
 mark(o) -> active(o)
 mark(tt) -> active(tt)
 mark(u) -> active(u)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
