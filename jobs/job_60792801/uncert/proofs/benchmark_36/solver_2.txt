YES

Problem 1: 

(VAR vu95NonEmpty fun x xs)
(RULES
app(app(app(app(filter2,ffalse),fun),x),xs) -> app(app(filter,fun),xs)
app(app(app(app(filter2,ftrue),fun),x),xs) -> app(app(cons,x),app(app(filter,fun),xs))
app(app(f,x),app(g,x)) -> app(app(f,num1),app(g,x))
app(app(filter,fun),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(fun,x)),fun),x),xs)
app(app(filter,fun),nil) -> nil
app(app(map,fun),app(app(cons,x),xs)) -> app(app(cons,app(fun,x)),app(app(map,fun),xs))
app(app(map,fun),nil) -> nil
app(g,num1) -> app(g,num0)
)
 
(STRATEGY INNERMOST)

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 APP(app(app(app(filter2,ffalse),fun),x),xs) -> APP(app(filter,fun),xs)
 APP(app(app(app(filter2,ftrue),fun),x),xs) -> APP(app(cons,x),app(app(filter,fun),xs))
 APP(app(app(app(filter2,ftrue),fun),x),xs) -> APP(app(filter,fun),xs)
 APP(app(f,x),app(g,x)) -> APP(app(f,num1),app(g,x))
 APP(app(filter,fun),app(app(cons,x),xs)) -> APP(app(app(app(filter2,app(fun,x)),fun),x),xs)
 APP(app(filter,fun),app(app(cons,x),xs)) -> APP(app(app(filter2,app(fun,x)),fun),x)
 APP(app(filter,fun),app(app(cons,x),xs)) -> APP(app(filter2,app(fun,x)),fun)
 APP(app(filter,fun),app(app(cons,x),xs)) -> APP(filter2,app(fun,x))
 APP(app(filter,fun),app(app(cons,x),xs)) -> APP(fun,x)
 APP(app(map,fun),app(app(cons,x),xs)) -> APP(app(cons,app(fun,x)),app(app(map,fun),xs))
 APP(app(map,fun),app(app(cons,x),xs)) -> APP(app(map,fun),xs)
 APP(app(map,fun),app(app(cons,x),xs)) -> APP(cons,app(fun,x))
 APP(app(map,fun),app(app(cons,x),xs)) -> APP(fun,x)
-> Rules:
 app(app(app(app(filter2,ffalse),fun),x),xs) -> app(app(filter,fun),xs)
 app(app(app(app(filter2,ftrue),fun),x),xs) -> app(app(cons,x),app(app(filter,fun),xs))
 app(app(f,x),app(g,x)) -> app(app(f,num1),app(g,x))
 app(app(filter,fun),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(fun,x)),fun),x),xs)
 app(app(filter,fun),nil) -> nil
 app(app(map,fun),app(app(cons,x),xs)) -> app(app(cons,app(fun,x)),app(app(map,fun),xs))
 app(app(map,fun),nil) -> nil
 app(g,num1) -> app(g,num0)

Problem 1: 

SCC Processor:
-> Pairs:
 APP(app(app(app(filter2,ffalse),fun),x),xs) -> APP(app(filter,fun),xs)
 APP(app(app(app(filter2,ftrue),fun),x),xs) -> APP(app(cons,x),app(app(filter,fun),xs))
 APP(app(app(app(filter2,ftrue),fun),x),xs) -> APP(app(filter,fun),xs)
 APP(app(f,x),app(g,x)) -> APP(app(f,num1),app(g,x))
 APP(app(filter,fun),app(app(cons,x),xs)) -> APP(app(app(app(filter2,app(fun,x)),fun),x),xs)
 APP(app(filter,fun),app(app(cons,x),xs)) -> APP(app(app(filter2,app(fun,x)),fun),x)
 APP(app(filter,fun),app(app(cons,x),xs)) -> APP(app(filter2,app(fun,x)),fun)
 APP(app(filter,fun),app(app(cons,x),xs)) -> APP(filter2,app(fun,x))
 APP(app(filter,fun),app(app(cons,x),xs)) -> APP(fun,x)
 APP(app(map,fun),app(app(cons,x),xs)) -> APP(app(cons,app(fun,x)),app(app(map,fun),xs))
 APP(app(map,fun),app(app(cons,x),xs)) -> APP(app(map,fun),xs)
 APP(app(map,fun),app(app(cons,x),xs)) -> APP(cons,app(fun,x))
 APP(app(map,fun),app(app(cons,x),xs)) -> APP(fun,x)
-> Rules:
 app(app(app(app(filter2,ffalse),fun),x),xs) -> app(app(filter,fun),xs)
 app(app(app(app(filter2,ftrue),fun),x),xs) -> app(app(cons,x),app(app(filter,fun),xs))
 app(app(f,x),app(g,x)) -> app(app(f,num1),app(g,x))
 app(app(filter,fun),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(fun,x)),fun),x),xs)
 app(app(filter,fun),nil) -> nil
 app(app(map,fun),app(app(cons,x),xs)) -> app(app(cons,app(fun,x)),app(app(map,fun),xs))
 app(app(map,fun),nil) -> nil
 app(g,num1) -> app(g,num0)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 APP(app(app(app(filter2,ffalse),fun),x),xs) -> APP(app(filter,fun),xs)
 APP(app(app(app(filter2,ftrue),fun),x),xs) -> APP(app(filter,fun),xs)
 APP(app(filter,fun),app(app(cons,x),xs)) -> APP(app(app(app(filter2,app(fun,x)),fun),x),xs)
 APP(app(filter,fun),app(app(cons,x),xs)) -> APP(fun,x)
 APP(app(map,fun),app(app(cons,x),xs)) -> APP(app(map,fun),xs)
 APP(app(map,fun),app(app(cons,x),xs)) -> APP(fun,x)
->->-> Rules:
 app(app(app(app(filter2,ffalse),fun),x),xs) -> app(app(filter,fun),xs)
 app(app(app(app(filter2,ftrue),fun),x),xs) -> app(app(cons,x),app(app(filter,fun),xs))
 app(app(f,x),app(g,x)) -> app(app(f,num1),app(g,x))
 app(app(filter,fun),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(fun,x)),fun),x),xs)
 app(app(filter,fun),nil) -> nil
 app(app(map,fun),app(app(cons,x),xs)) -> app(app(cons,app(fun,x)),app(app(map,fun),xs))
 app(app(map,fun),nil) -> nil
 app(g,num1) -> app(g,num0)

Problem 1: 

Subterm Processor:
-> Pairs:
 APP(app(app(app(filter2,ffalse),fun),x),xs) -> APP(app(filter,fun),xs)
 APP(app(app(app(filter2,ftrue),fun),x),xs) -> APP(app(filter,fun),xs)
 APP(app(filter,fun),app(app(cons,x),xs)) -> APP(app(app(app(filter2,app(fun,x)),fun),x),xs)
 APP(app(filter,fun),app(app(cons,x),xs)) -> APP(fun,x)
 APP(app(map,fun),app(app(cons,x),xs)) -> APP(app(map,fun),xs)
 APP(app(map,fun),app(app(cons,x),xs)) -> APP(fun,x)
-> Rules:
 app(app(app(app(filter2,ffalse),fun),x),xs) -> app(app(filter,fun),xs)
 app(app(app(app(filter2,ftrue),fun),x),xs) -> app(app(cons,x),app(app(filter,fun),xs))
 app(app(f,x),app(g,x)) -> app(app(f,num1),app(g,x))
 app(app(filter,fun),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(fun,x)),fun),x),xs)
 app(app(filter,fun),nil) -> nil
 app(app(map,fun),app(app(cons,x),xs)) -> app(app(cons,app(fun,x)),app(app(map,fun),xs))
 app(app(map,fun),nil) -> nil
 app(g,num1) -> app(g,num0)
->Projection:
 pi(APP) = 2

Problem 1: 

SCC Processor:
-> Pairs:
 APP(app(app(app(filter2,ffalse),fun),x),xs) -> APP(app(filter,fun),xs)
 APP(app(app(app(filter2,ftrue),fun),x),xs) -> APP(app(filter,fun),xs)
-> Rules:
 app(app(app(app(filter2,ffalse),fun),x),xs) -> app(app(filter,fun),xs)
 app(app(app(app(filter2,ftrue),fun),x),xs) -> app(app(cons,x),app(app(filter,fun),xs))
 app(app(f,x),app(g,x)) -> app(app(f,num1),app(g,x))
 app(app(filter,fun),app(app(cons,x),xs)) -> app(app(app(app(filter2,app(fun,x)),fun),x),xs)
 app(app(filter,fun),nil) -> nil
 app(app(map,fun),app(app(cons,x),xs)) -> app(app(cons,app(fun,x)),app(app(map,fun),xs))
 app(app(map,fun),nil) -> nil
 app(g,num1) -> app(g,num0)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
