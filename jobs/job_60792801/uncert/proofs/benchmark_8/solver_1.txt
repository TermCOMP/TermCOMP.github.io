YES
proof of /home/ff862203/input_e4Fovf8tL4.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QDP
        (6) UsableRulesProof [EQUIVALENT, 0 ms]
        (7) QDP
        (8) QReductionProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (11) YES
    (12) QDP
        (13) UsableRulesProof [EQUIVALENT, 0 ms]
        (14) QDP
        (15) QReductionProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (18) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x, c(x), c(y)) -> f(y, y, f(y, x, y))
   f(s(x), y, z) -> f(x, s(c(y)), c(z))
   f(c(x), x, y) -> c(y)
   g(x, y) -> x
   g(x, y) -> y

The set Q consists of the following terms:

   g(x0, x1)
   f(s(x0), x1, x2)
   f(c(x0), x0, x1)
   f(x0, c(x0), c(x1))


----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, c(x), c(y)) -> F(y, y, f(y, x, y))
   F(x, c(x), c(y)) -> F(y, x, y)
   F(s(x), y, z) -> F(x, s(c(y)), c(z))

The TRS R consists of the following rules:

   f(x, c(x), c(y)) -> f(y, y, f(y, x, y))
   f(s(x), y, z) -> f(x, s(c(y)), c(z))
   f(c(x), x, y) -> c(y)
   g(x, y) -> x
   g(x, y) -> y

The set Q consists of the following terms:

   g(x0, x1)
   f(s(x0), x1, x2)
   f(c(x0), x0, x1)
   f(x0, c(x0), c(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 1 less node.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), y, z) -> F(x, s(c(y)), c(z))

The TRS R consists of the following rules:

   f(x, c(x), c(y)) -> f(y, y, f(y, x, y))
   f(s(x), y, z) -> f(x, s(c(y)), c(z))
   f(c(x), x, y) -> c(y)
   g(x, y) -> x
   g(x, y) -> y

The set Q consists of the following terms:

   g(x0, x1)
   f(s(x0), x1, x2)
   f(c(x0), x0, x1)
   f(x0, c(x0), c(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(6) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), y, z) -> F(x, s(c(y)), c(z))

R is empty.
The set Q consists of the following terms:

   g(x0, x1)
   f(s(x0), x1, x2)
   f(c(x0), x0, x1)
   f(x0, c(x0), c(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   g(x0, x1)
   f(s(x0), x1, x2)
   f(c(x0), x0, x1)
   f(x0, c(x0), c(x1))


----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(s(x), y, z) -> F(x, s(c(y)), c(z))

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F(s(x), y, z) -> F(x, s(c(y)), c(z))
The graph contains the following edges 1 > 1


----------------------------------------

(11)
YES

----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, c(x), c(y)) -> F(y, x, y)

The TRS R consists of the following rules:

   f(x, c(x), c(y)) -> f(y, y, f(y, x, y))
   f(s(x), y, z) -> f(x, s(c(y)), c(z))
   f(c(x), x, y) -> c(y)
   g(x, y) -> x
   g(x, y) -> y

The set Q consists of the following terms:

   g(x0, x1)
   f(s(x0), x1, x2)
   f(c(x0), x0, x1)
   f(x0, c(x0), c(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, c(x), c(y)) -> F(y, x, y)

R is empty.
The set Q consists of the following terms:

   g(x0, x1)
   f(s(x0), x1, x2)
   f(c(x0), x0, x1)
   f(x0, c(x0), c(x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   g(x0, x1)
   f(s(x0), x1, x2)
   f(c(x0), x0, x1)
   f(x0, c(x0), c(x1))


----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x, c(x), c(y)) -> F(y, x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F(x, c(x), c(y)) -> F(y, x, y)
The graph contains the following edges 3 > 1, 1 >= 2, 2 > 2, 3 > 3


----------------------------------------

(18)
YES
