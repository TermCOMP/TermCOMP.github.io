YES
proof of /home/ff862203/input_DsrYNTvT1H.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [SOUND, 0 ms]
(2) QTRS
(3) RFCMatchBoundsTRSProof [EQUIVALENT, 0 ms]
(4) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(f(X)) -> mark(g(h(f(X))))
   active(f(X)) -> f(active(X))
   active(h(X)) -> h(active(X))
   f(mark(X)) -> mark(f(X))
   h(mark(X)) -> mark(h(X))
   proper(f(X)) -> f(proper(X))
   proper(g(X)) -> g(proper(X))
   proper(h(X)) -> h(proper(X))
   f(ok(X)) -> ok(f(X))
   g(ok(X)) -> ok(g(X))
   h(ok(X)) -> ok(h(X))
   top(mark(X)) -> top(proper(X))
   top(ok(X)) -> top(active(X))

The set Q consists of the following terms:

   h(ok(x0))
   f(mark(x0))
   proper(h(x0))
   active(h(x0))
   g(ok(x0))
   proper(f(x0))
   f(ok(x0))
   top(ok(x0))
   proper(g(x0))
   top(mark(x0))
   h(mark(x0))
   active(f(x0))


----------------------------------------

(1) QTRS Reverse (SOUND)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(active(X)) -> f(h(g(mark(X))))
   f(active(X)) -> active(f(X))
   h(active(X)) -> active(h(X))
   mark(f(X)) -> f(mark(X))
   mark(h(X)) -> h(mark(X))
   f(proper(X)) -> proper(f(X))
   g(proper(X)) -> proper(g(X))
   h(proper(X)) -> proper(h(X))
   ok(f(X)) -> f(ok(X))
   ok(g(X)) -> g(ok(X))
   ok(h(X)) -> h(ok(X))
   mark(top(X)) -> proper(top(X))
   ok(top(X)) -> active(top(X))

Q is empty.

----------------------------------------

(3) RFCMatchBoundsTRSProof (EQUIVALENT)
Termination of the TRS R could be shown with a Match Bound [MATCHBOUNDS1,MATCHBOUNDS2] of 4. This implies Q-termination of R.
The following rules were used to construct the certificate:

   f(active(X)) -> f(h(g(mark(X))))
   f(active(X)) -> active(f(X))
   h(active(X)) -> active(h(X))
   mark(f(X)) -> f(mark(X))
   mark(h(X)) -> h(mark(X))
   f(proper(X)) -> proper(f(X))
   g(proper(X)) -> proper(g(X))
   h(proper(X)) -> proper(h(X))
   ok(f(X)) -> f(ok(X))
   ok(g(X)) -> g(ok(X))
   ok(h(X)) -> h(ok(X))
   mark(top(X)) -> proper(top(X))
   ok(top(X)) -> active(top(X))

The certificate found is represented by the following graph.
The certificate consists of the following enumerated nodes:
3, 4, 9, 10, 11, 12, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 56, 57, 58, 59, 60, 61, 62, 63, 72, 73

Node 3 is start node and node 4 is final node.

Those nodes are connected through the following edges:

* 3 to 9 labelled f_1(0), g_1(0), h_1(0)* 3 to 12 labelled active_1(0), proper_1(0)* 3 to 11 labelled f_1(0), h_1(0)* 3 to 26 labelled f_1(1)* 3 to 29 labelled active_1(1), proper_1(1)* 3 to 60 labelled proper_1(2)* 4 to 4 labelled #_1(0)* 9 to 10 labelled h_1(0)* 9 to 4 labelled ok_1(0)* 9 to 15 labelled f_1(1), g_1(1), h_1(1)* 9 to 20 labelled active_1(1)* 9 to 31 labelled proper_1(1)* 9 to 32 labelled f_1(2)* 9 to 35 labelled active_1(2)* 9 to 63 labelled proper_1(3)* 9 to 72 labelled proper_1(2)* 10 to 11 labelled g_1(0)* 10 to 30 labelled proper_1(1)* 11 to 4 labelled mark_1(0)* 11 to 21 labelled f_1(1), h_1(1)* 11 to 20 labelled proper_1(1)* 11 to 35 labelled proper_1(2)* 12 to 4 labelled f_1(0), h_1(0), g_1(0), top_1(0)* 12 to 22 labelled f_1(1)* 12 to 25 labelled active_1(1), proper_1(1)* 12 to 56 labelled proper_1(2)* 15 to 4 labelled ok_1(1)* 15 to 15 labelled f_1(1), g_1(1), h_1(1)* 15 to 20 labelled active_1(1)* 15 to 32 labelled f_1(2)* 15 to 35 labelled active_1(2)* 15 to 63 labelled proper_1(3)* 15 to 72 labelled proper_1(2)* 20 to 4 labelled top_1(1)* 21 to 4 labelled mark_1(1)* 21 to 21 labelled f_1(1), h_1(1)* 21 to 20 labelled proper_1(1)* 21 to 35 labelled proper_1(2)* 22 to 23 labelled h_1(1)* 22 to 38 labelled proper_1(2)* 23 to 24 labelled g_1(1)* 23 to 36 labelled proper_1(2)* 24 to 4 labelled mark_1(1)* 24 to 21 labelled f_1(1), h_1(1)* 24 to 20 labelled proper_1(1)* 24 to 35 labelled proper_1(2)* 25 to 4 labelled f_1(1), h_1(1), g_1(1)* 25 to 22 labelled f_1(1)* 25 to 25 labelled active_1(1), proper_1(1)* 25 to 56 labelled proper_1(2)* 26 to 27 labelled h_1(1)* 26 to 57 labelled proper_1(2)* 27 to 28 labelled g_1(1)* 27 to 39 labelled proper_1(2)* 28 to 20 labelled mark_1(1)* 28 to 37 labelled proper_1(2)* 28 to 35 labelled mark_1(1)* 28 to 34 labelled f_1(2), h_1(2)* 28 to 61 labelled proper_1(3)* 29 to 20 labelled f_1(1), h_1(1)* 29 to 31 labelled f_1(1), g_1(1), h_1(1)* 29 to 35 labelled f_1(1), h_1(1)* 29 to 63 labelled f_1(1), g_1(1), h_1(1)* 29 to 72 labelled f_1(1), g_1(1), h_1(1)* 30 to 20 labelled g_1(1)* 30 to 35 labelled g_1(1)* 31 to 30 labelled h_1(1)* 32 to 33 labelled h_1(2)* 32 to 62 labelled proper_1(3)* 33 to 34 labelled g_1(2)* 33 to 59 labelled proper_1(3)* 34 to 20 labelled mark_1(2)* 34 to 35 labelled mark_1(2)* 34 to 37 labelled proper_1(2)* 34 to 58 labelled f_1(3), h_1(3)* 34 to 61 labelled proper_1(3)* 34 to 73 labelled proper_1(4)* 35 to 20 labelled f_1(2), h_1(2)* 35 to 35 labelled f_1(2), h_1(2)* 36 to 20 labelled g_1(2)* 36 to 35 labelled g_1(2)* 37 to 4 labelled top_1(2)* 38 to 36 labelled h_1(2)* 39 to 37 labelled g_1(2)* 39 to 61 labelled g_1(2)* 56 to 38 labelled f_1(2)* 57 to 39 labelled h_1(2)* 58 to 20 labelled mark_1(3)* 58 to 35 labelled mark_1(3)* 58 to 37 labelled proper_1(2)* 58 to 58 labelled f_1(3), h_1(3)* 58 to 61 labelled proper_1(3)* 58 to 73 labelled proper_1(4)* 59 to 37 labelled g_1(3)* 59 to 61 labelled g_1(3)* 59 to 73 labelled g_1(3)* 60 to 57 labelled f_1(2)* 61 to 37 labelled f_1(3), h_1(3)* 61 to 61 labelled f_1(3), h_1(3)* 61 to 73 labelled f_1(3), h_1(3)* 62 to 59 labelled h_1(3)* 63 to 62 labelled f_1(3)* 72 to 63 labelled f_1(2), g_1(2), h_1(2)* 72 to 72 labelled f_1(2), g_1(2), h_1(2)* 73 to 61 labelled f_1(4), h_1(4)* 73 to 73 labelled f_1(4), h_1(4)


----------------------------------------

(4)
YES
