YES
proof of /home/ff862203/input_1D2WqDS7Ru.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 17 ms]
(2) QTRS
(3) RisEmptyProof [EQUIVALENT, 0 ms]
(4) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a____(__(X, Y), Z) -> a____(mark(X), a____(mark(Y), mark(Z)))
   a____(X, nil) -> mark(X)
   a____(nil, X) -> mark(X)
   a__and(tt, X) -> mark(X)
   a__isList(V) -> a__isNeList(V)
   a__isList(nil) -> tt
   a__isList(__(V1, V2)) -> a__and(a__isList(V1), isList(V2))
   a__isNeList(V) -> a__isQid(V)
   a__isNeList(__(V1, V2)) -> a__and(a__isList(V1), isNeList(V2))
   a__isNeList(__(V1, V2)) -> a__and(a__isNeList(V1), isList(V2))
   a__isNePal(V) -> a__isQid(V)
   a__isNePal(__(I, __(P, I))) -> a__and(a__isQid(I), isPal(P))
   a__isPal(V) -> a__isNePal(V)
   a__isPal(nil) -> tt
   a__isQid(a) -> tt
   a__isQid(e) -> tt
   a__isQid(i) -> tt
   a__isQid(o) -> tt
   a__isQid(u) -> tt
   mark(__(X1, X2)) -> a____(mark(X1), mark(X2))
   mark(and(X1, X2)) -> a__and(mark(X1), X2)
   mark(isList(X)) -> a__isList(X)
   mark(isNeList(X)) -> a__isNeList(X)
   mark(isQid(X)) -> a__isQid(X)
   mark(isNePal(X)) -> a__isNePal(X)
   mark(isPal(X)) -> a__isPal(X)
   mark(nil) -> nil
   mark(tt) -> tt
   mark(a) -> a
   mark(e) -> e
   mark(i) -> i
   mark(o) -> o
   mark(u) -> u
   a____(X1, X2) -> __(X1, X2)
   a__and(X1, X2) -> and(X1, X2)
   a__isList(X) -> isList(X)
   a__isNeList(X) -> isNeList(X)
   a__isQid(X) -> isQid(X)
   a__isNePal(X) -> isNePal(X)
   a__isPal(X) -> isPal(X)

The set Q consists of the following terms:

   a__isNeList(x0)
   a____(x0, x1)
   a__and(x0, x1)
   mark(isList(x0))
   a__isPal(x0)
   mark(isPal(x0))
   a__isNePal(x0)
   mark(u)
   mark(i)
   a__isQid(x0)
   mark(and(x0, x1))
   mark(isQid(x0))
   mark(a)
   mark(o)
   mark(tt)
   mark(isNeList(x0))
   mark(e)
   mark(__(x0, x1))
   a__isList(x0)
   mark(nil)
   mark(isNePal(x0))


----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Knuth-Bendix order [KBO] with precedence:mark_1 > a > nil > a__and_2 > and_2 > u > o > i > a__isNeList_1 > isNeList_1 > a__isNePal_1 > isNePal_1 > a__isQid_1 > isQid_1 > e > a_____2 > a__isPal_1 > a__isList_1 > isList_1 > ___2 > isPal_1 > tt

and weight map:

   nil=1
   tt=3
   a=2
   e=2
   i=2
   o=2
   u=2
   mark_1=0
   a__isList_1=3
   a__isNeList_1=2
   isList_1=3
   a__isQid_1=1
   isNeList_1=2
   a__isNePal_1=2
   isPal_1=9
   a__isPal_1=9
   isQid_1=1
   isNePal_1=2
   ___2=4
   a_____2=4
   a__and_2=0
   and_2=0

The variable weight is 1With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   a____(__(X, Y), Z) -> a____(mark(X), a____(mark(Y), mark(Z)))
   a____(X, nil) -> mark(X)
   a____(nil, X) -> mark(X)
   a__and(tt, X) -> mark(X)
   a__isList(V) -> a__isNeList(V)
   a__isList(nil) -> tt
   a__isList(__(V1, V2)) -> a__and(a__isList(V1), isList(V2))
   a__isNeList(V) -> a__isQid(V)
   a__isNeList(__(V1, V2)) -> a__and(a__isList(V1), isNeList(V2))
   a__isNeList(__(V1, V2)) -> a__and(a__isNeList(V1), isList(V2))
   a__isNePal(V) -> a__isQid(V)
   a__isNePal(__(I, __(P, I))) -> a__and(a__isQid(I), isPal(P))
   a__isPal(V) -> a__isNePal(V)
   a__isPal(nil) -> tt
   a__isQid(a) -> tt
   a__isQid(e) -> tt
   a__isQid(i) -> tt
   a__isQid(o) -> tt
   a__isQid(u) -> tt
   mark(__(X1, X2)) -> a____(mark(X1), mark(X2))
   mark(and(X1, X2)) -> a__and(mark(X1), X2)
   mark(isList(X)) -> a__isList(X)
   mark(isNeList(X)) -> a__isNeList(X)
   mark(isQid(X)) -> a__isQid(X)
   mark(isNePal(X)) -> a__isNePal(X)
   mark(isPal(X)) -> a__isPal(X)
   mark(nil) -> nil
   mark(tt) -> tt
   mark(a) -> a
   mark(e) -> e
   mark(i) -> i
   mark(o) -> o
   mark(u) -> u
   a____(X1, X2) -> __(X1, X2)
   a__and(X1, X2) -> and(X1, X2)
   a__isList(X) -> isList(X)
   a__isNeList(X) -> isNeList(X)
   a__isQid(X) -> isQid(X)
   a__isNePal(X) -> isNePal(X)
   a__isPal(X) -> isPal(X)




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
R is empty.
The set Q consists of the following terms:

   a__isNeList(x0)
   a____(x0, x1)
   a__and(x0, x1)
   mark(isList(x0))
   a__isPal(x0)
   mark(isPal(x0))
   a__isNePal(x0)
   mark(u)
   mark(i)
   a__isQid(x0)
   mark(and(x0, x1))
   mark(isQid(x0))
   mark(a)
   mark(o)
   mark(tt)
   mark(isNeList(x0))
   mark(e)
   mark(__(x0, x1))
   a__isList(x0)
   mark(nil)
   mark(isNePal(x0))


----------------------------------------

(3) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(4)
YES
