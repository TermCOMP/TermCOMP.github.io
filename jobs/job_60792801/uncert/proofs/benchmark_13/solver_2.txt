YES

Problem 1: 

(VAR vu95NonEmpty x y z)
(RULES
plus(num0,y) -> y
plus(s(x),y) -> s(plus(x,y))
quot(num0,s(y),s(z)) -> num0
quot(s(x),s(y),z) -> quot(x,y,z)
quot(x,num0,s(z)) -> s(quot(x,plus(z,s(num0)),s(z)))
)
 
(STRATEGY INNERMOST)

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 PLUS(s(x),y) -> PLUS(x,y)
 QUOT(s(x),s(y),z) -> QUOT(x,y,z)
 QUOT(x,num0,s(z)) -> PLUS(z,s(num0))
 QUOT(x,num0,s(z)) -> QUOT(x,plus(z,s(num0)),s(z))
-> Rules:
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y),s(z)) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(quot(x,plus(z,s(num0)),s(z)))

Problem 1: 

SCC Processor:
-> Pairs:
 PLUS(s(x),y) -> PLUS(x,y)
 QUOT(s(x),s(y),z) -> QUOT(x,y,z)
 QUOT(x,num0,s(z)) -> PLUS(z,s(num0))
 QUOT(x,num0,s(z)) -> QUOT(x,plus(z,s(num0)),s(z))
-> Rules:
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y),s(z)) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(quot(x,plus(z,s(num0)),s(z)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 PLUS(s(x),y) -> PLUS(x,y)
->->-> Rules:
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y),s(z)) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(quot(x,plus(z,s(num0)),s(z)))
->->Cycle:
->->-> Pairs:
 QUOT(s(x),s(y),z) -> QUOT(x,y,z)
 QUOT(x,num0,s(z)) -> QUOT(x,plus(z,s(num0)),s(z))
->->-> Rules:
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y),s(z)) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(quot(x,plus(z,s(num0)),s(z)))


The problem is decomposed in 2 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 PLUS(s(x),y) -> PLUS(x,y)
-> Rules:
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y),s(z)) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(quot(x,plus(z,s(num0)),s(z)))
->Projection:
 pi(PLUS) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y),s(z)) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(quot(x,plus(z,s(num0)),s(z)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 QUOT(s(x),s(y),z) -> QUOT(x,y,z)
 QUOT(x,num0,s(z)) -> QUOT(x,plus(z,s(num0)),s(z))
-> Rules:
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y),s(z)) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(quot(x,plus(z,s(num0)),s(z)))
->Projection:
 pi(QUOT) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 QUOT(x,num0,s(z)) -> QUOT(x,plus(z,s(num0)),s(z))
-> Rules:
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y),s(z)) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(quot(x,plus(z,s(num0)),s(z)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 QUOT(x,num0,s(z)) -> QUOT(x,plus(z,s(num0)),s(z))
->->-> Rules:
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y),s(z)) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(quot(x,plus(z,s(num0)),s(z)))

Problem 1.2: 

Reduction Pairs Processor:
-> Pairs:
 QUOT(x,num0,s(z)) -> QUOT(x,plus(z,s(num0)),s(z))
-> Rules:
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y),s(z)) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(quot(x,plus(z,s(num0)),s(z)))
-> Usable rules:
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[plus](X1,X2) = X2 + 1
[quot](X1,X2,X3) = 0
[num0] = 2
[fSNonEmpty] = 0
[s](X) = 0
[PLUS](X1,X2) = 0
[QUOT](X1,X2,X3) = 2.X2

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 plus(num0,y) -> y
 plus(s(x),y) -> s(plus(x,y))
 quot(num0,s(y),s(z)) -> num0
 quot(s(x),s(y),z) -> quot(x,y,z)
 quot(x,num0,s(z)) -> s(quot(x,plus(z,s(num0)),s(z)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
