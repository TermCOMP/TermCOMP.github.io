YES
proof of /home/ff862203/input_acl35JZMNX.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [SOUND, 0 ms]
(2) QTRS
(3) RFCMatchBoundsTRSProof [EQUIVALENT, 0 ms]
(4) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__f(f(a)) -> a__f(g(f(a)))
   mark(f(X)) -> a__f(mark(X))
   mark(a) -> a
   mark(g(X)) -> g(X)
   a__f(X) -> f(X)

The set Q consists of the following terms:

   a__f(x0)
   mark(a)
   mark(g(x0))
   mark(f(x0))


----------------------------------------

(1) QTRS Reverse (SOUND)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a'(f(a__f(x))) -> a'(f(g(a__f(x))))
   f(mark(X)) -> mark(a__f(X))
   a'(mark(x)) -> a'(x)
   g(mark(X)) -> g(X)
   a__f(X) -> f(X)

Q is empty.

----------------------------------------

(3) RFCMatchBoundsTRSProof (EQUIVALENT)
Termination of the TRS R could be shown with a Match Bound [MATCHBOUNDS1,MATCHBOUNDS2] of 2. This implies Q-termination of R.
The following rules were used to construct the certificate:

   a'(f(a__f(x))) -> a'(f(g(a__f(x))))
   f(mark(X)) -> mark(a__f(X))
   a'(mark(x)) -> a'(x)
   g(mark(X)) -> g(X)
   a__f(X) -> f(X)

The certificate found is represented by the following graph.
The certificate consists of the following enumerated nodes:
6, 7, 8, 9, 10, 18, 19, 20

Node 6 is start node and node 7 is final node.

Those nodes are connected through the following edges:

* 6 to 8 labelled a'_1(0)* 6 to 10 labelled mark_1(0)* 6 to 7 labelled a'_1(0), g_1(0), f_1(0), a'_1(1), g_1(1)* 6 to 18 labelled a'_1(1)* 6 to 20 labelled mark_1(1)* 7 to 7 labelled #_1(0)* 8 to 9 labelled f_1(0)* 9 to 10 labelled g_1(0)* 9 to 20 labelled g_1(1), g_1(2)* 10 to 7 labelled a__f_1(0), f_1(1)* 10 to 20 labelled mark_1(1)* 18 to 19 labelled f_1(1)* 19 to 20 labelled g_1(1), g_1(2)* 20 to 7 labelled a__f_1(1), f_1(2)* 20 to 20 labelled mark_1(1)


----------------------------------------

(4)
YES
