YES

Problem 1: 

(VAR vu95NonEmpty L X X1 X2)
(RULES
active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
active(adx(nil)) -> mark(nil)
active(adx(X)) -> adx(active(X))
active(cons(X1,X2)) -> cons(active(X1),X2)
active(head(cons(X,L))) -> mark(X)
active(head(X)) -> head(active(X))
active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
active(incr(nil)) -> mark(nil)
active(incr(X)) -> incr(active(X))
active(s(X)) -> s(active(X))
active(tail(cons(X,L))) -> mark(L)
active(tail(X)) -> tail(active(X))
active(nats) -> mark(adx(zeros))
active(zeros) -> mark(cons(num0,zeros))
adx(mark(X)) -> mark(adx(X))
adx(ok(X)) -> ok(adx(X))
cons(mark(X1),X2) -> mark(cons(X1,X2))
cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
head(mark(X)) -> mark(head(X))
head(ok(X)) -> ok(head(X))
incr(mark(X)) -> mark(incr(X))
incr(ok(X)) -> ok(incr(X))
proper(adx(X)) -> adx(proper(X))
proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
proper(head(X)) -> head(proper(X))
proper(incr(X)) -> incr(proper(X))
proper(s(X)) -> s(proper(X))
proper(tail(X)) -> tail(proper(X))
proper(num0) -> ok(num0)
proper(nats) -> ok(nats)
proper(nil) -> ok(nil)
proper(zeros) -> ok(zeros)
s(mark(X)) -> mark(s(X))
s(ok(X)) -> ok(s(X))
tail(mark(X)) -> mark(tail(X))
tail(ok(X)) -> ok(tail(X))
top(mark(X)) -> top(proper(X))
top(ok(X)) -> top(active(X))
)
 
(STRATEGY INNERMOST)

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ACTIVE(adx(cons(X,L))) -> ADX(L)
 ACTIVE(adx(cons(X,L))) -> CONS(X,adx(L))
 ACTIVE(adx(cons(X,L))) -> INCR(cons(X,adx(L)))
 ACTIVE(adx(X)) -> ACTIVE(X)
 ACTIVE(adx(X)) -> ADX(active(X))
 ACTIVE(cons(X1,X2)) -> ACTIVE(X1)
 ACTIVE(cons(X1,X2)) -> CONS(active(X1),X2)
 ACTIVE(head(X)) -> ACTIVE(X)
 ACTIVE(head(X)) -> HEAD(active(X))
 ACTIVE(incr(cons(X,L))) -> CONS(s(X),incr(L))
 ACTIVE(incr(cons(X,L))) -> INCR(L)
 ACTIVE(incr(cons(X,L))) -> S(X)
 ACTIVE(incr(X)) -> ACTIVE(X)
 ACTIVE(incr(X)) -> INCR(active(X))
 ACTIVE(s(X)) -> ACTIVE(X)
 ACTIVE(s(X)) -> S(active(X))
 ACTIVE(tail(X)) -> ACTIVE(X)
 ACTIVE(tail(X)) -> TAIL(active(X))
 ADX(mark(X)) -> ADX(X)
 ADX(ok(X)) -> ADX(X)
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(ok(X1),ok(X2)) -> CONS(X1,X2)
 HEAD(mark(X)) -> HEAD(X)
 HEAD(ok(X)) -> HEAD(X)
 INCR(mark(X)) -> INCR(X)
 INCR(ok(X)) -> INCR(X)
 PROPER(adx(X)) -> ADX(proper(X))
 PROPER(adx(X)) -> PROPER(X)
 PROPER(cons(X1,X2)) -> CONS(proper(X1),proper(X2))
 PROPER(cons(X1,X2)) -> PROPER(X1)
 PROPER(cons(X1,X2)) -> PROPER(X2)
 PROPER(head(X)) -> HEAD(proper(X))
 PROPER(head(X)) -> PROPER(X)
 PROPER(incr(X)) -> INCR(proper(X))
 PROPER(incr(X)) -> PROPER(X)
 PROPER(s(X)) -> PROPER(X)
 PROPER(s(X)) -> S(proper(X))
 PROPER(tail(X)) -> PROPER(X)
 PROPER(tail(X)) -> TAIL(proper(X))
 S(mark(X)) -> S(X)
 S(ok(X)) -> S(X)
 TAIL(mark(X)) -> TAIL(X)
 TAIL(ok(X)) -> TAIL(X)
 TOP(mark(X)) -> PROPER(X)
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> ACTIVE(X)
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVE(adx(cons(X,L))) -> ADX(L)
 ACTIVE(adx(cons(X,L))) -> CONS(X,adx(L))
 ACTIVE(adx(cons(X,L))) -> INCR(cons(X,adx(L)))
 ACTIVE(adx(X)) -> ACTIVE(X)
 ACTIVE(adx(X)) -> ADX(active(X))
 ACTIVE(cons(X1,X2)) -> ACTIVE(X1)
 ACTIVE(cons(X1,X2)) -> CONS(active(X1),X2)
 ACTIVE(head(X)) -> ACTIVE(X)
 ACTIVE(head(X)) -> HEAD(active(X))
 ACTIVE(incr(cons(X,L))) -> CONS(s(X),incr(L))
 ACTIVE(incr(cons(X,L))) -> INCR(L)
 ACTIVE(incr(cons(X,L))) -> S(X)
 ACTIVE(incr(X)) -> ACTIVE(X)
 ACTIVE(incr(X)) -> INCR(active(X))
 ACTIVE(s(X)) -> ACTIVE(X)
 ACTIVE(s(X)) -> S(active(X))
 ACTIVE(tail(X)) -> ACTIVE(X)
 ACTIVE(tail(X)) -> TAIL(active(X))
 ADX(mark(X)) -> ADX(X)
 ADX(ok(X)) -> ADX(X)
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(ok(X1),ok(X2)) -> CONS(X1,X2)
 HEAD(mark(X)) -> HEAD(X)
 HEAD(ok(X)) -> HEAD(X)
 INCR(mark(X)) -> INCR(X)
 INCR(ok(X)) -> INCR(X)
 PROPER(adx(X)) -> ADX(proper(X))
 PROPER(adx(X)) -> PROPER(X)
 PROPER(cons(X1,X2)) -> CONS(proper(X1),proper(X2))
 PROPER(cons(X1,X2)) -> PROPER(X1)
 PROPER(cons(X1,X2)) -> PROPER(X2)
 PROPER(head(X)) -> HEAD(proper(X))
 PROPER(head(X)) -> PROPER(X)
 PROPER(incr(X)) -> INCR(proper(X))
 PROPER(incr(X)) -> PROPER(X)
 PROPER(s(X)) -> PROPER(X)
 PROPER(s(X)) -> S(proper(X))
 PROPER(tail(X)) -> PROPER(X)
 PROPER(tail(X)) -> TAIL(proper(X))
 S(mark(X)) -> S(X)
 S(ok(X)) -> S(X)
 TAIL(mark(X)) -> TAIL(X)
 TAIL(ok(X)) -> TAIL(X)
 TOP(mark(X)) -> PROPER(X)
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> ACTIVE(X)
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 TAIL(mark(X)) -> TAIL(X)
 TAIL(ok(X)) -> TAIL(X)
->->-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 S(mark(X)) -> S(X)
 S(ok(X)) -> S(X)
->->-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 INCR(mark(X)) -> INCR(X)
 INCR(ok(X)) -> INCR(X)
->->-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 HEAD(mark(X)) -> HEAD(X)
 HEAD(ok(X)) -> HEAD(X)
->->-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(ok(X1),ok(X2)) -> CONS(X1,X2)
->->-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 ADX(mark(X)) -> ADX(X)
 ADX(ok(X)) -> ADX(X)
->->-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 PROPER(adx(X)) -> PROPER(X)
 PROPER(cons(X1,X2)) -> PROPER(X1)
 PROPER(cons(X1,X2)) -> PROPER(X2)
 PROPER(head(X)) -> PROPER(X)
 PROPER(incr(X)) -> PROPER(X)
 PROPER(s(X)) -> PROPER(X)
 PROPER(tail(X)) -> PROPER(X)
->->-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 ACTIVE(adx(X)) -> ACTIVE(X)
 ACTIVE(cons(X1,X2)) -> ACTIVE(X1)
 ACTIVE(head(X)) -> ACTIVE(X)
 ACTIVE(incr(X)) -> ACTIVE(X)
 ACTIVE(s(X)) -> ACTIVE(X)
 ACTIVE(tail(X)) -> ACTIVE(X)
->->-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> TOP(active(X))
->->-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))


The problem is decomposed in 9 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 TAIL(mark(X)) -> TAIL(X)
 TAIL(ok(X)) -> TAIL(X)
-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(TAIL) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 S(mark(X)) -> S(X)
 S(ok(X)) -> S(X)
-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(S) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> Pairs:
 INCR(mark(X)) -> INCR(X)
 INCR(ok(X)) -> INCR(X)
-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(INCR) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Subterm Processor:
-> Pairs:
 HEAD(mark(X)) -> HEAD(X)
 HEAD(ok(X)) -> HEAD(X)
-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(HEAD) = 1

Problem 1.4: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.5: 

Subterm Processor:
-> Pairs:
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(ok(X1),ok(X2)) -> CONS(X1,X2)
-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(CONS) = 1

Problem 1.5: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.6: 

Subterm Processor:
-> Pairs:
 ADX(mark(X)) -> ADX(X)
 ADX(ok(X)) -> ADX(X)
-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(ADX) = 1

Problem 1.6: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.7: 

Subterm Processor:
-> Pairs:
 PROPER(adx(X)) -> PROPER(X)
 PROPER(cons(X1,X2)) -> PROPER(X1)
 PROPER(cons(X1,X2)) -> PROPER(X2)
 PROPER(head(X)) -> PROPER(X)
 PROPER(incr(X)) -> PROPER(X)
 PROPER(s(X)) -> PROPER(X)
 PROPER(tail(X)) -> PROPER(X)
-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(PROPER) = 1

Problem 1.7: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.8: 

Subterm Processor:
-> Pairs:
 ACTIVE(adx(X)) -> ACTIVE(X)
 ACTIVE(cons(X1,X2)) -> ACTIVE(X1)
 ACTIVE(head(X)) -> ACTIVE(X)
 ACTIVE(incr(X)) -> ACTIVE(X)
 ACTIVE(s(X)) -> ACTIVE(X)
 ACTIVE(tail(X)) -> ACTIVE(X)
-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(ACTIVE) = 1

Problem 1.8: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.9: 

Reduction Pairs Processor:
-> Pairs:
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
-> Usable rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
->Interpretation type:
 Linear
->Coefficients:
 All rationals
->Dimension:
 1
->Bound:
 4
->Interpretation:
 
[active](X) = X
[adx](X) = X + 4/3
[cons](X1,X2) = 4/3.X1 + 1/4.X2
[head](X) = 4.X + 1/3
[incr](X) = X + 2/3
[proper](X) = X
[s](X) = X
[tail](X) = 4.X + 1/3
[top](X) = 0
[num0] = 0
[fSNonEmpty] = 0
[mark](X) = X + 1/3
[nats] = 4
[nil] = 1/4
[ok](X) = X
[zeros] = 2
[ACTIVE](X) = 0
[ADX](X) = 0
[CONS](X1,X2) = 0
[HEAD](X) = 0
[INCR](X) = 0
[PROPER](X) = 0
[S](X) = 0
[TAIL](X) = 0
[TOP](X) = 4.X

Problem 1.9: 

SCC Processor:
-> Pairs:
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 TOP(ok(X)) -> TOP(active(X))
->->-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))

Problem 1.9: 

Reduction Pairs Processor:
-> Pairs:
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
-> Usable rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = 2.X
[adx](X) = 2.X
[cons](X1,X2) = 2.X1 + 2
[head](X) = 2.X + 1
[incr](X) = 2.X
[proper](X) = 0
[s](X) = 2.X + 2
[tail](X) = 2.X + 2
[top](X) = 0
[num0] = 2
[fSNonEmpty] = 0
[mark](X) = 2
[nats] = 2
[nil] = 2
[ok](X) = 2.X + 2
[zeros] = 2
[ACTIVE](X) = 0
[ADX](X) = 0
[CONS](X1,X2) = 0
[HEAD](X) = 0
[INCR](X) = 0
[PROPER](X) = 0
[S](X) = 0
[TAIL](X) = 0
[TOP](X) = X

Problem 1.9: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(adx(cons(X,L))) -> mark(incr(cons(X,adx(L))))
 active(adx(nil)) -> mark(nil)
 active(adx(X)) -> adx(active(X))
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(head(cons(X,L))) -> mark(X)
 active(head(X)) -> head(active(X))
 active(incr(cons(X,L))) -> mark(cons(s(X),incr(L)))
 active(incr(nil)) -> mark(nil)
 active(incr(X)) -> incr(active(X))
 active(s(X)) -> s(active(X))
 active(tail(cons(X,L))) -> mark(L)
 active(tail(X)) -> tail(active(X))
 active(nats) -> mark(adx(zeros))
 active(zeros) -> mark(cons(num0,zeros))
 adx(mark(X)) -> mark(adx(X))
 adx(ok(X)) -> ok(adx(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 head(mark(X)) -> mark(head(X))
 head(ok(X)) -> ok(head(X))
 incr(mark(X)) -> mark(incr(X))
 incr(ok(X)) -> ok(incr(X))
 proper(adx(X)) -> adx(proper(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(head(X)) -> head(proper(X))
 proper(incr(X)) -> incr(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(tail(X)) -> tail(proper(X))
 proper(num0) -> ok(num0)
 proper(nats) -> ok(nats)
 proper(nil) -> ok(nil)
 proper(zeros) -> ok(zeros)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 tail(mark(X)) -> mark(tail(X))
 tail(ok(X)) -> ok(tail(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
