YES

Problem 1: 

(VAR vu95NonEmpty L N V V1 V2 X X1 X2 X3)
(RULES
au95u95U11(tt) -> tt
au95u95U11(X) -> U11(X)
au95u95U21(tt) -> tt
au95u95U21(X) -> U21(X)
au95u95U31(tt) -> tt
au95u95U31(X) -> U31(X)
au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
au95u95U41(X1,X2) -> U41(X1,X2)
au95u95U42(tt) -> tt
au95u95U42(X) -> U42(X)
au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
au95u95U51(X1,X2) -> U51(X1,X2)
au95u95U52(tt) -> tt
au95u95U52(X) -> U52(X)
au95u95U61(tt,L,N) -> au95u95U62(au95u95isNat(N),L)
au95u95U61(X1,X2,X3) -> U61(X1,X2,X3)
au95u95U62(tt,L) -> s(au95u95length(mark(L)))
au95u95U62(X1,X2) -> U62(X1,X2)
au95u95isNat(num0) -> tt
au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
au95u95isNat(X) -> isNat(X)
au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
au95u95isNatIList(zeros) -> tt
au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
au95u95isNatIList(X) -> isNatIList(X)
au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
au95u95isNatList(nil) -> tt
au95u95isNatList(X) -> isNatList(X)
au95u95length(cons(N,L)) -> au95u95U61(au95u95isNatList(L),L,N)
au95u95length(nil) -> num0
au95u95length(X) -> length(X)
au95u95zeros -> cons(num0,zeros)
au95u95zeros -> zeros
mark(num0) -> num0
mark(U11(X)) -> au95u95U11(mark(X))
mark(U21(X)) -> au95u95U21(mark(X))
mark(U31(X)) -> au95u95U31(mark(X))
mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
mark(U42(X)) -> au95u95U42(mark(X))
mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
mark(U52(X)) -> au95u95U52(mark(X))
mark(U61(X1,X2,X3)) -> au95u95U61(mark(X1),X2,X3)
mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
mark(cons(X1,X2)) -> cons(mark(X1),X2)
mark(isNat(X)) -> au95u95isNat(X)
mark(isNatIList(X)) -> au95u95isNatIList(X)
mark(isNatList(X)) -> au95u95isNatList(X)
mark(length(X)) -> au95u95length(mark(X))
mark(nil) -> nil
mark(s(X)) -> s(mark(X))
mark(tt) -> tt
mark(zeros) -> au95u95zeros
)
 
(STRATEGY INNERMOST)

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 AU95U95U41(tt,V2) -> AU95U95U42(au95u95isNatIList(V2))
 AU95U95U41(tt,V2) -> AU95U95ISNATILIST(V2)
 AU95U95U51(tt,V2) -> AU95U95U52(au95u95isNatList(V2))
 AU95U95U51(tt,V2) -> AU95U95ISNATLIST(V2)
 AU95U95U61(tt,L,N) -> AU95U95U62(au95u95isNat(N),L)
 AU95U95U61(tt,L,N) -> AU95U95ISNAT(N)
 AU95U95U62(tt,L) -> AU95U95LENGTH(mark(L))
 AU95U95U62(tt,L) -> MARK(L)
 AU95U95ISNAT(length(V1)) -> AU95U95U11(au95u95isNatList(V1))
 AU95U95ISNAT(length(V1)) -> AU95U95ISNATLIST(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNat(V1))
 AU95U95ISNAT(s(V1)) -> AU95U95ISNAT(V1)
 AU95U95ISNATILIST(cons(V1,V2)) -> AU95U95U41(au95u95isNat(V1),V2)
 AU95U95ISNATILIST(cons(V1,V2)) -> AU95U95ISNAT(V1)
 AU95U95ISNATILIST(V) -> AU95U95U31(au95u95isNatList(V))
 AU95U95ISNATILIST(V) -> AU95U95ISNATLIST(V)
 AU95U95ISNATLIST(cons(V1,V2)) -> AU95U95U51(au95u95isNat(V1),V2)
 AU95U95ISNATLIST(cons(V1,V2)) -> AU95U95ISNAT(V1)
 AU95U95LENGTH(cons(N,L)) -> AU95U95U61(au95u95isNatList(L),L,N)
 AU95U95LENGTH(cons(N,L)) -> AU95U95ISNATLIST(L)
 MARK(U11(X)) -> AU95U95U11(mark(X))
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X)) -> AU95U95U21(mark(X))
 MARK(U21(X)) -> MARK(X)
 MARK(U31(X)) -> AU95U95U31(mark(X))
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> AU95U95U41(mark(X1),X2)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> AU95U95U42(mark(X))
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> AU95U95U51(mark(X1),X2)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> AU95U95U52(mark(X))
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X1,X2,X3)) -> AU95U95U61(mark(X1),X2,X3)
 MARK(U61(X1,X2,X3)) -> MARK(X1)
 MARK(U62(X1,X2)) -> AU95U95U62(mark(X1),X2)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatIList(X)) -> AU95U95ISNATILIST(X)
 MARK(isNatList(X)) -> AU95U95ISNATLIST(X)
 MARK(length(X)) -> AU95U95LENGTH(mark(X))
 MARK(length(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(zeros) -> AU95U95ZEROS
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,L,N) -> au95u95U62(au95u95isNat(N),L)
 au95u95U61(X1,X2,X3) -> U61(X1,X2,X3)
 au95u95U62(tt,L) -> s(au95u95length(mark(L)))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U61(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2,X3)) -> au95u95U61(mark(X1),X2,X3)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U41(tt,V2) -> AU95U95U42(au95u95isNatIList(V2))
 AU95U95U41(tt,V2) -> AU95U95ISNATILIST(V2)
 AU95U95U51(tt,V2) -> AU95U95U52(au95u95isNatList(V2))
 AU95U95U51(tt,V2) -> AU95U95ISNATLIST(V2)
 AU95U95U61(tt,L,N) -> AU95U95U62(au95u95isNat(N),L)
 AU95U95U61(tt,L,N) -> AU95U95ISNAT(N)
 AU95U95U62(tt,L) -> AU95U95LENGTH(mark(L))
 AU95U95U62(tt,L) -> MARK(L)
 AU95U95ISNAT(length(V1)) -> AU95U95U11(au95u95isNatList(V1))
 AU95U95ISNAT(length(V1)) -> AU95U95ISNATLIST(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95U21(au95u95isNat(V1))
 AU95U95ISNAT(s(V1)) -> AU95U95ISNAT(V1)
 AU95U95ISNATILIST(cons(V1,V2)) -> AU95U95U41(au95u95isNat(V1),V2)
 AU95U95ISNATILIST(cons(V1,V2)) -> AU95U95ISNAT(V1)
 AU95U95ISNATILIST(V) -> AU95U95U31(au95u95isNatList(V))
 AU95U95ISNATILIST(V) -> AU95U95ISNATLIST(V)
 AU95U95ISNATLIST(cons(V1,V2)) -> AU95U95U51(au95u95isNat(V1),V2)
 AU95U95ISNATLIST(cons(V1,V2)) -> AU95U95ISNAT(V1)
 AU95U95LENGTH(cons(N,L)) -> AU95U95U61(au95u95isNatList(L),L,N)
 AU95U95LENGTH(cons(N,L)) -> AU95U95ISNATLIST(L)
 MARK(U11(X)) -> AU95U95U11(mark(X))
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X)) -> AU95U95U21(mark(X))
 MARK(U21(X)) -> MARK(X)
 MARK(U31(X)) -> AU95U95U31(mark(X))
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> AU95U95U41(mark(X1),X2)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> AU95U95U42(mark(X))
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> AU95U95U51(mark(X1),X2)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> AU95U95U52(mark(X))
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X1,X2,X3)) -> AU95U95U61(mark(X1),X2,X3)
 MARK(U61(X1,X2,X3)) -> MARK(X1)
 MARK(U62(X1,X2)) -> AU95U95U62(mark(X1),X2)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(isNat(X)) -> AU95U95ISNAT(X)
 MARK(isNatIList(X)) -> AU95U95ISNATILIST(X)
 MARK(isNatList(X)) -> AU95U95ISNATLIST(X)
 MARK(length(X)) -> AU95U95LENGTH(mark(X))
 MARK(length(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(zeros) -> AU95U95ZEROS
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,L,N) -> au95u95U62(au95u95isNat(N),L)
 au95u95U61(X1,X2,X3) -> U61(X1,X2,X3)
 au95u95U62(tt,L) -> s(au95u95length(mark(L)))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U61(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2,X3)) -> au95u95U61(mark(X1),X2,X3)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U51(tt,V2) -> AU95U95ISNATLIST(V2)
 AU95U95ISNAT(length(V1)) -> AU95U95ISNATLIST(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNAT(V1)
 AU95U95ISNATLIST(cons(V1,V2)) -> AU95U95U51(au95u95isNat(V1),V2)
 AU95U95ISNATLIST(cons(V1,V2)) -> AU95U95ISNAT(V1)
->->-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,L,N) -> au95u95U62(au95u95isNat(N),L)
 au95u95U61(X1,X2,X3) -> U61(X1,X2,X3)
 au95u95U62(tt,L) -> s(au95u95length(mark(L)))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U61(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2,X3)) -> au95u95U61(mark(X1),X2,X3)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->->Cycle:
->->-> Pairs:
 AU95U95U41(tt,V2) -> AU95U95ISNATILIST(V2)
 AU95U95ISNATILIST(cons(V1,V2)) -> AU95U95U41(au95u95isNat(V1),V2)
->->-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,L,N) -> au95u95U62(au95u95isNat(N),L)
 au95u95U61(X1,X2,X3) -> U61(X1,X2,X3)
 au95u95U62(tt,L) -> s(au95u95length(mark(L)))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U61(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2,X3)) -> au95u95U61(mark(X1),X2,X3)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->->Cycle:
->->-> Pairs:
 AU95U95U61(tt,L,N) -> AU95U95U62(au95u95isNat(N),L)
 AU95U95U62(tt,L) -> AU95U95LENGTH(mark(L))
 AU95U95U62(tt,L) -> MARK(L)
 AU95U95LENGTH(cons(N,L)) -> AU95U95U61(au95u95isNatList(L),L,N)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X1,X2,X3)) -> AU95U95U61(mark(X1),X2,X3)
 MARK(U61(X1,X2,X3)) -> MARK(X1)
 MARK(U62(X1,X2)) -> AU95U95U62(mark(X1),X2)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(length(X)) -> AU95U95LENGTH(mark(X))
 MARK(length(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,L,N) -> au95u95U62(au95u95isNat(N),L)
 au95u95U61(X1,X2,X3) -> U61(X1,X2,X3)
 au95u95U62(tt,L) -> s(au95u95length(mark(L)))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U61(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2,X3)) -> au95u95U61(mark(X1),X2,X3)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros


The problem is decomposed in 3 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 AU95U95U51(tt,V2) -> AU95U95ISNATLIST(V2)
 AU95U95ISNAT(length(V1)) -> AU95U95ISNATLIST(V1)
 AU95U95ISNAT(s(V1)) -> AU95U95ISNAT(V1)
 AU95U95ISNATLIST(cons(V1,V2)) -> AU95U95U51(au95u95isNat(V1),V2)
 AU95U95ISNATLIST(cons(V1,V2)) -> AU95U95ISNAT(V1)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,L,N) -> au95u95U62(au95u95isNat(N),L)
 au95u95U61(X1,X2,X3) -> U61(X1,X2,X3)
 au95u95U62(tt,L) -> s(au95u95length(mark(L)))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U61(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2,X3)) -> au95u95U61(mark(X1),X2,X3)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->Projection:
 pi(AU95U95U51) = 2
 pi(AU95U95ISNAT) = 1
 pi(AU95U95ISNATLIST) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 AU95U95U51(tt,V2) -> AU95U95ISNATLIST(V2)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,L,N) -> au95u95U62(au95u95isNat(N),L)
 au95u95U61(X1,X2,X3) -> U61(X1,X2,X3)
 au95u95U62(tt,L) -> s(au95u95length(mark(L)))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U61(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2,X3)) -> au95u95U61(mark(X1),X2,X3)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 AU95U95U41(tt,V2) -> AU95U95ISNATILIST(V2)
 AU95U95ISNATILIST(cons(V1,V2)) -> AU95U95U41(au95u95isNat(V1),V2)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,L,N) -> au95u95U62(au95u95isNat(N),L)
 au95u95U61(X1,X2,X3) -> U61(X1,X2,X3)
 au95u95U62(tt,L) -> s(au95u95length(mark(L)))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U61(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2,X3)) -> au95u95U61(mark(X1),X2,X3)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->Projection:
 pi(AU95U95U41) = 2
 pi(AU95U95ISNATILIST) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 AU95U95U41(tt,V2) -> AU95U95ISNATILIST(V2)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,L,N) -> au95u95U62(au95u95isNat(N),L)
 au95u95U61(X1,X2,X3) -> U61(X1,X2,X3)
 au95u95U62(tt,L) -> s(au95u95length(mark(L)))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U61(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2,X3)) -> au95u95U61(mark(X1),X2,X3)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95U61(tt,L,N) -> AU95U95U62(au95u95isNat(N),L)
 AU95U95U62(tt,L) -> AU95U95LENGTH(mark(L))
 AU95U95U62(tt,L) -> MARK(L)
 AU95U95LENGTH(cons(N,L)) -> AU95U95U61(au95u95isNatList(L),L,N)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X1,X2,X3)) -> AU95U95U61(mark(X1),X2,X3)
 MARK(U61(X1,X2,X3)) -> MARK(X1)
 MARK(U62(X1,X2)) -> AU95U95U62(mark(X1),X2)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(length(X)) -> AU95U95LENGTH(mark(X))
 MARK(length(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,L,N) -> au95u95U62(au95u95isNat(N),L)
 au95u95U61(X1,X2,X3) -> U61(X1,X2,X3)
 au95u95U62(tt,L) -> s(au95u95length(mark(L)))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U61(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2,X3)) -> au95u95U61(mark(X1),X2,X3)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
-> Usable rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,L,N) -> au95u95U62(au95u95isNat(N),L)
 au95u95U61(X1,X2,X3) -> U61(X1,X2,X3)
 au95u95U62(tt,L) -> s(au95u95length(mark(L)))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U61(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2,X3)) -> au95u95U61(mark(X1),X2,X3)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X) = X
[au95u95U21](X) = X
[au95u95U31](X) = X + 1
[au95u95U41](X1,X2) = X1 + 2.X2
[au95u95U42](X) = X
[au95u95U51](X1,X2) = X1 + 2.X2 + 1
[au95u95U52](X) = X + 2
[au95u95U61](X1,X2,X3) = X1 + X2 + X3 + 2
[au95u95U62](X1,X2) = X1 + X2 + 2
[au95u95isNat](X) = X + 2
[au95u95isNatIList](X) = 2.X + 2
[au95u95isNatList](X) = X + 1
[au95u95length](X) = X + 1
[au95u95zeros] = 2
[mark](X) = X + 2
[num0] = 0
[U11](X) = X
[U21](X) = X
[U31](X) = X + 1
[U41](X1,X2) = X1 + 2.X2
[U42](X) = X
[U51](X1,X2) = X1 + 2.X2 + 1
[U52](X) = X + 2
[U61](X1,X2,X3) = X1 + X2 + X3 + 2
[U62](X1,X2) = X1 + X2 + 2
[cons](X1,X2) = X1 + 2.X2 + 2
[fSNonEmpty] = 0
[isNat](X) = X + 2
[isNatIList](X) = 2.X + 2
[isNatList](X) = X + 1
[length](X) = X + 1
[nil] = 2
[s](X) = X + 1
[tt] = 2
[zeros] = 0
[AU95U95U11](X) = 0
[AU95U95U21](X) = 0
[AU95U95U31](X) = 0
[AU95U95U41](X1,X2) = 0
[AU95U95U42](X) = 0
[AU95U95U51](X1,X2) = 0
[AU95U95U52](X) = 0
[AU95U95U61](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[AU95U95U62](X1,X2) = 2.X1 + 2.X2
[AU95U95ISNAT](X) = 0
[AU95U95ISNATILIST](X) = 0
[AU95U95ISNATLIST](X) = 0
[AU95U95LENGTH](X) = 2.X
[AU95U95ZEROS] = 0
[MARK](X) = 2.X + 2

Problem 1.3: 

SCC Processor:
-> Pairs:
 AU95U95U62(tt,L) -> AU95U95LENGTH(mark(L))
 AU95U95U62(tt,L) -> MARK(L)
 AU95U95LENGTH(cons(N,L)) -> AU95U95U61(au95u95isNatList(L),L,N)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X1,X2,X3)) -> AU95U95U61(mark(X1),X2,X3)
 MARK(U61(X1,X2,X3)) -> MARK(X1)
 MARK(U62(X1,X2)) -> AU95U95U62(mark(X1),X2)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(length(X)) -> AU95U95LENGTH(mark(X))
 MARK(length(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,L,N) -> au95u95U62(au95u95isNat(N),L)
 au95u95U61(X1,X2,X3) -> U61(X1,X2,X3)
 au95u95U62(tt,L) -> s(au95u95length(mark(L)))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U61(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2,X3)) -> au95u95U61(mark(X1),X2,X3)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U62(tt,L) -> MARK(L)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X1,X2,X3)) -> MARK(X1)
 MARK(U62(X1,X2)) -> AU95U95U62(mark(X1),X2)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(length(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,L,N) -> au95u95U62(au95u95isNat(N),L)
 au95u95U61(X1,X2,X3) -> U61(X1,X2,X3)
 au95u95U62(tt,L) -> s(au95u95length(mark(L)))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U61(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2,X3)) -> au95u95U61(mark(X1),X2,X3)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros

Problem 1.3: 

Subterm Processor:
-> Pairs:
 AU95U95U62(tt,L) -> MARK(L)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X1,X2,X3)) -> MARK(X1)
 MARK(U62(X1,X2)) -> AU95U95U62(mark(X1),X2)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(length(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,L,N) -> au95u95U62(au95u95isNat(N),L)
 au95u95U61(X1,X2,X3) -> U61(X1,X2,X3)
 au95u95U62(tt,L) -> s(au95u95length(mark(L)))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U61(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2,X3)) -> au95u95U61(mark(X1),X2,X3)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->Projection:
 pi(AU95U95U62) = 2
 pi(MARK) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 AU95U95U62(tt,L) -> MARK(L)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt) -> tt
 au95u95U21(X) -> U21(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNatIList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isNatList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt,L,N) -> au95u95U62(au95u95isNat(N),L)
 au95u95U61(X1,X2,X3) -> U61(X1,X2,X3)
 au95u95U62(tt,L) -> s(au95u95length(mark(L)))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95isNat(num0) -> tt
 au95u95isNat(length(V1)) -> au95u95U11(au95u95isNatList(V1))
 au95u95isNat(s(V1)) -> au95u95U21(au95u95isNat(V1))
 au95u95isNat(X) -> isNat(X)
 au95u95isNatIList(cons(V1,V2)) -> au95u95U41(au95u95isNat(V1),V2)
 au95u95isNatIList(zeros) -> tt
 au95u95isNatIList(V) -> au95u95U31(au95u95isNatList(V))
 au95u95isNatIList(X) -> isNatIList(X)
 au95u95isNatList(cons(V1,V2)) -> au95u95U51(au95u95isNat(V1),V2)
 au95u95isNatList(nil) -> tt
 au95u95isNatList(X) -> isNatList(X)
 au95u95length(cons(N,L)) -> au95u95U61(au95u95isNatList(L),L,N)
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X)) -> au95u95U21(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X1,X2,X3)) -> au95u95U61(mark(X1),X2,X3)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(isNat(X)) -> au95u95isNat(X)
 mark(isNatIList(X)) -> au95u95isNatIList(X)
 mark(isNatList(X)) -> au95u95isNatList(X)
 mark(length(X)) -> au95u95length(mark(X))
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(zeros) -> au95u95zeros
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
