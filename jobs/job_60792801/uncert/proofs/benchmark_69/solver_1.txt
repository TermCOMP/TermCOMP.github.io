YES
proof of /home/ff862203/input_klyN5Br49c.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 31 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) QDP
(7) UsableRulesProof [EQUIVALENT, 0 ms]
(8) QDP
(9) QReductionProof [EQUIVALENT, 0 ms]
(10) QDP
(11) QDPSizeChangeProof [EQUIVALENT, 0 ms]
(12) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   h(X, Z) -> f(X, s(X), Z)
   f(X, Y, g(X, Y)) -> h(0, g(X, Y))
   g(0, Y) -> 0
   g(X, s(Y)) -> g(X, Y)

The set Q consists of the following terms:

   f(x0, x1, g(x0, x1))
   g(x0, s(x1))
   h(x0, x1)
   g(0, x0)


----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(f(x_1, x_2, x_3)) = x_1 + x_2 + x_3
   POL(g(x_1, x_2)) = 2 + 2*x_1 + x_2
   POL(h(x_1, x_2)) = 2*x_1 + x_2
   POL(s(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   g(0, Y) -> 0




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   h(X, Z) -> f(X, s(X), Z)
   f(X, Y, g(X, Y)) -> h(0, g(X, Y))
   g(X, s(Y)) -> g(X, Y)

The set Q consists of the following terms:

   f(x0, x1, g(x0, x1))
   g(x0, s(x1))
   h(x0, x1)
   g(0, x0)


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   H(X, Z) -> F(X, s(X), Z)
   F(X, Y, g(X, Y)) -> H(0, g(X, Y))
   G(X, s(Y)) -> G(X, Y)

The TRS R consists of the following rules:

   h(X, Z) -> f(X, s(X), Z)
   f(X, Y, g(X, Y)) -> h(0, g(X, Y))
   g(X, s(Y)) -> g(X, Y)

The set Q consists of the following terms:

   f(x0, x1, g(x0, x1))
   g(x0, s(x1))
   h(x0, x1)
   g(0, x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(X, s(Y)) -> G(X, Y)

The TRS R consists of the following rules:

   h(X, Z) -> f(X, s(X), Z)
   f(X, Y, g(X, Y)) -> h(0, g(X, Y))
   g(X, s(Y)) -> g(X, Y)

The set Q consists of the following terms:

   f(x0, x1, g(x0, x1))
   g(x0, s(x1))
   h(x0, x1)
   g(0, x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(X, s(Y)) -> G(X, Y)

R is empty.
The set Q consists of the following terms:

   f(x0, x1, g(x0, x1))
   g(x0, s(x1))
   h(x0, x1)
   g(0, x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(x0, x1, g(x0, x1))
   g(x0, s(x1))
   h(x0, x1)
   g(0, x0)


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(X, s(Y)) -> G(X, Y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*G(X, s(Y)) -> G(X, Y)
The graph contains the following edges 1 >= 1, 2 > 2


----------------------------------------

(12)
YES
