YES
proof of /home/ff862203/input_QzOm47rtUZ.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 31 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 0 ms]
(4) QTRS
(5) QTRSRRRProof [EQUIVALENT, 0 ms]
(6) QTRS
(7) QTRSRRRProof [EQUIVALENT, 0 ms]
(8) QTRS
(9) RisEmptyProof [EQUIVALENT, 0 ms]
(10) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__f(X) -> a__if(mark(X), c, f(true))
   a__if(true, X, Y) -> mark(X)
   a__if(false, X, Y) -> mark(Y)
   mark(f(X)) -> a__f(mark(X))
   mark(if(X1, X2, X3)) -> a__if(mark(X1), mark(X2), X3)
   mark(c) -> c
   mark(true) -> true
   mark(false) -> false
   a__f(X) -> f(X)
   a__if(X1, X2, X3) -> if(X1, X2, X3)

The set Q consists of the following terms:

   a__f(x0)
   mark(c)
   mark(true)
   a__if(x0, x1, x2)
   mark(if(x0, x1, x2))
   mark(false)
   mark(f(x0))


----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a__f(x_1)) = 2*x_1
   POL(a__if(x_1, x_2, x_3)) = 2*x_1 + x_2 + 2*x_3
   POL(c) = 0
   POL(f(x_1)) = 2*x_1
   POL(false) = 2
   POL(if(x_1, x_2, x_3)) = 2*x_1 + x_2 + 2*x_3
   POL(mark(x_1)) = x_1
   POL(true) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   a__if(false, X, Y) -> mark(Y)




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__f(X) -> a__if(mark(X), c, f(true))
   a__if(true, X, Y) -> mark(X)
   mark(f(X)) -> a__f(mark(X))
   mark(if(X1, X2, X3)) -> a__if(mark(X1), mark(X2), X3)
   mark(c) -> c
   mark(true) -> true
   mark(false) -> false
   a__f(X) -> f(X)
   a__if(X1, X2, X3) -> if(X1, X2, X3)

The set Q consists of the following terms:

   a__f(x0)
   mark(c)
   mark(true)
   a__if(x0, x1, x2)
   mark(if(x0, x1, x2))
   mark(false)
   mark(f(x0))


----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a__f(x_1)) = 2*x_1
   POL(a__if(x_1, x_2, x_3)) = x_1 + 2*x_2 + 2*x_3
   POL(c) = 0
   POL(f(x_1)) = 2*x_1
   POL(false) = 2
   POL(if(x_1, x_2, x_3)) = x_1 + 2*x_2 + 2*x_3
   POL(mark(x_1)) = 2*x_1
   POL(true) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   mark(false) -> false




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__f(X) -> a__if(mark(X), c, f(true))
   a__if(true, X, Y) -> mark(X)
   mark(f(X)) -> a__f(mark(X))
   mark(if(X1, X2, X3)) -> a__if(mark(X1), mark(X2), X3)
   mark(c) -> c
   mark(true) -> true
   a__f(X) -> f(X)
   a__if(X1, X2, X3) -> if(X1, X2, X3)

The set Q consists of the following terms:

   a__f(x0)
   mark(c)
   mark(true)
   a__if(x0, x1, x2)
   mark(if(x0, x1, x2))
   mark(false)
   mark(f(x0))


----------------------------------------

(5) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a__f(x_1)) = 1 + 2*x_1
   POL(a__if(x_1, x_2, x_3)) = x_1 + 2*x_2 + x_3
   POL(c) = 0
   POL(f(x_1)) = 1 + 2*x_1
   POL(if(x_1, x_2, x_3)) = x_1 + 2*x_2 + x_3
   POL(mark(x_1)) = 2*x_1
   POL(true) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   mark(f(X)) -> a__f(mark(X))




----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__f(X) -> a__if(mark(X), c, f(true))
   a__if(true, X, Y) -> mark(X)
   mark(if(X1, X2, X3)) -> a__if(mark(X1), mark(X2), X3)
   mark(c) -> c
   mark(true) -> true
   a__f(X) -> f(X)
   a__if(X1, X2, X3) -> if(X1, X2, X3)

The set Q consists of the following terms:

   a__f(x0)
   mark(c)
   mark(true)
   a__if(x0, x1, x2)
   mark(if(x0, x1, x2))
   mark(false)
   mark(f(x0))


----------------------------------------

(7) QTRSRRRProof (EQUIVALENT)
Used ordering:
Knuth-Bendix order [KBO] with precedence:mark_1 > a__if_3 > if_3 > f_1 > true > c > a__f_1

and weight map:

   c=1
   true=1
   a__f_1=4
   mark_1=0
   f_1=1
   a__if_3=0
   if_3=0

The variable weight is 1With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   a__f(X) -> a__if(mark(X), c, f(true))
   a__if(true, X, Y) -> mark(X)
   mark(if(X1, X2, X3)) -> a__if(mark(X1), mark(X2), X3)
   mark(c) -> c
   mark(true) -> true
   a__f(X) -> f(X)
   a__if(X1, X2, X3) -> if(X1, X2, X3)




----------------------------------------

(8)
Obligation:
Q restricted rewrite system:
R is empty.
The set Q consists of the following terms:

   a__f(x0)
   mark(c)
   mark(true)
   a__if(x0, x1, x2)
   mark(if(x0, x1, x2))
   mark(false)
   mark(f(x0))


----------------------------------------

(9) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(10)
YES
