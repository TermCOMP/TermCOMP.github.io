YES
proof of /home/ff862203/input_kfaiZON5FZ.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 34 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 16 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QDP
        (8) UsableRulesProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QReductionProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QDP
        (15) UsableRulesProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QReductionProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (20) YES
    (21) QDP
        (22) UsableRulesProof [EQUIVALENT, 0 ms]
        (23) QDP
        (24) QReductionProof [EQUIVALENT, 0 ms]
        (25) QDP
        (26) QDPOrderProof [EQUIVALENT, 0 ms]
        (27) QDP
        (28) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (29) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(zeros) -> mark(cons(0, zeros))
   active(tail(cons(X, XS))) -> mark(XS)
   mark(zeros) -> active(zeros)
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(0) -> active(0)
   mark(tail(X)) -> active(tail(mark(X)))
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   tail(mark(X)) -> tail(X)
   tail(active(X)) -> tail(X)

The set Q consists of the following terms:

   mark(cons(x0, x1))
   mark(tail(x0))
   cons(x0, mark(x1))
   cons(x0, active(x1))
   tail(active(x0))
   active(zeros)
   cons(mark(x0), x1)
   mark(zeros)
   active(tail(cons(x0, x1)))
   mark(0)
   tail(mark(x0))
   cons(active(x0), x1)


----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(active(x_1)) = x_1
   POL(cons(x_1, x_2)) = 2*x_1 + 2*x_2
   POL(mark(x_1)) = 2*x_1
   POL(tail(x_1)) = 1 + 2*x_1
   POL(zeros) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   active(tail(cons(X, XS))) -> mark(XS)
   mark(tail(X)) -> active(tail(mark(X)))




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(zeros) -> mark(cons(0, zeros))
   mark(zeros) -> active(zeros)
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(0) -> active(0)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   tail(mark(X)) -> tail(X)
   tail(active(X)) -> tail(X)

The set Q consists of the following terms:

   mark(cons(x0, x1))
   mark(tail(x0))
   cons(x0, mark(x1))
   cons(x0, active(x1))
   tail(active(x0))
   active(zeros)
   cons(mark(x0), x1)
   mark(zeros)
   active(tail(cons(x0, x1)))
   mark(0)
   tail(mark(x0))
   cons(active(x0), x1)


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACTIVE(zeros) -> MARK(cons(0, zeros))
   ACTIVE(zeros) -> CONS(0, zeros)
   MARK(zeros) -> ACTIVE(zeros)
   MARK(cons(X1, X2)) -> ACTIVE(cons(mark(X1), X2))
   MARK(cons(X1, X2)) -> CONS(mark(X1), X2)
   MARK(cons(X1, X2)) -> MARK(X1)
   MARK(0) -> ACTIVE(0)
   CONS(mark(X1), X2) -> CONS(X1, X2)
   CONS(X1, mark(X2)) -> CONS(X1, X2)
   CONS(active(X1), X2) -> CONS(X1, X2)
   CONS(X1, active(X2)) -> CONS(X1, X2)
   TAIL(mark(X)) -> TAIL(X)
   TAIL(active(X)) -> TAIL(X)

The TRS R consists of the following rules:

   active(zeros) -> mark(cons(0, zeros))
   mark(zeros) -> active(zeros)
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(0) -> active(0)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   tail(mark(X)) -> tail(X)
   tail(active(X)) -> tail(X)

The set Q consists of the following terms:

   mark(cons(x0, x1))
   mark(tail(x0))
   cons(x0, mark(x1))
   cons(x0, active(x1))
   tail(active(x0))
   active(zeros)
   cons(mark(x0), x1)
   mark(zeros)
   active(tail(cons(x0, x1)))
   mark(0)
   tail(mark(x0))
   cons(active(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 3 SCCs with 4 less nodes.
----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TAIL(active(X)) -> TAIL(X)
   TAIL(mark(X)) -> TAIL(X)

The TRS R consists of the following rules:

   active(zeros) -> mark(cons(0, zeros))
   mark(zeros) -> active(zeros)
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(0) -> active(0)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   tail(mark(X)) -> tail(X)
   tail(active(X)) -> tail(X)

The set Q consists of the following terms:

   mark(cons(x0, x1))
   mark(tail(x0))
   cons(x0, mark(x1))
   cons(x0, active(x1))
   tail(active(x0))
   active(zeros)
   cons(mark(x0), x1)
   mark(zeros)
   active(tail(cons(x0, x1)))
   mark(0)
   tail(mark(x0))
   cons(active(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TAIL(active(X)) -> TAIL(X)
   TAIL(mark(X)) -> TAIL(X)

R is empty.
The set Q consists of the following terms:

   mark(cons(x0, x1))
   mark(tail(x0))
   cons(x0, mark(x1))
   cons(x0, active(x1))
   tail(active(x0))
   active(zeros)
   cons(mark(x0), x1)
   mark(zeros)
   active(tail(cons(x0, x1)))
   mark(0)
   tail(mark(x0))
   cons(active(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   cons(x0, mark(x1))
   cons(x0, active(x1))
   tail(active(x0))
   cons(mark(x0), x1)
   tail(mark(x0))
   cons(active(x0), x1)


----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   TAIL(active(X)) -> TAIL(X)
   TAIL(mark(X)) -> TAIL(X)

R is empty.
The set Q consists of the following terms:

   mark(cons(x0, x1))
   mark(tail(x0))
   active(zeros)
   mark(zeros)
   active(tail(cons(x0, x1)))
   mark(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*TAIL(active(X)) -> TAIL(X)
The graph contains the following edges 1 > 1


*TAIL(mark(X)) -> TAIL(X)
The graph contains the following edges 1 > 1


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   CONS(X1, mark(X2)) -> CONS(X1, X2)
   CONS(mark(X1), X2) -> CONS(X1, X2)
   CONS(active(X1), X2) -> CONS(X1, X2)
   CONS(X1, active(X2)) -> CONS(X1, X2)

The TRS R consists of the following rules:

   active(zeros) -> mark(cons(0, zeros))
   mark(zeros) -> active(zeros)
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(0) -> active(0)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   tail(mark(X)) -> tail(X)
   tail(active(X)) -> tail(X)

The set Q consists of the following terms:

   mark(cons(x0, x1))
   mark(tail(x0))
   cons(x0, mark(x1))
   cons(x0, active(x1))
   tail(active(x0))
   active(zeros)
   cons(mark(x0), x1)
   mark(zeros)
   active(tail(cons(x0, x1)))
   mark(0)
   tail(mark(x0))
   cons(active(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   CONS(X1, mark(X2)) -> CONS(X1, X2)
   CONS(mark(X1), X2) -> CONS(X1, X2)
   CONS(active(X1), X2) -> CONS(X1, X2)
   CONS(X1, active(X2)) -> CONS(X1, X2)

R is empty.
The set Q consists of the following terms:

   mark(cons(x0, x1))
   mark(tail(x0))
   cons(x0, mark(x1))
   cons(x0, active(x1))
   tail(active(x0))
   active(zeros)
   cons(mark(x0), x1)
   mark(zeros)
   active(tail(cons(x0, x1)))
   mark(0)
   tail(mark(x0))
   cons(active(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   cons(x0, mark(x1))
   cons(x0, active(x1))
   tail(active(x0))
   cons(mark(x0), x1)
   tail(mark(x0))
   cons(active(x0), x1)


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   CONS(X1, mark(X2)) -> CONS(X1, X2)
   CONS(mark(X1), X2) -> CONS(X1, X2)
   CONS(active(X1), X2) -> CONS(X1, X2)
   CONS(X1, active(X2)) -> CONS(X1, X2)

R is empty.
The set Q consists of the following terms:

   mark(cons(x0, x1))
   mark(tail(x0))
   active(zeros)
   mark(zeros)
   active(tail(cons(x0, x1)))
   mark(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*CONS(X1, mark(X2)) -> CONS(X1, X2)
The graph contains the following edges 1 >= 1, 2 > 2


*CONS(mark(X1), X2) -> CONS(X1, X2)
The graph contains the following edges 1 > 1, 2 >= 2


*CONS(active(X1), X2) -> CONS(X1, X2)
The graph contains the following edges 1 > 1, 2 >= 2


*CONS(X1, active(X2)) -> CONS(X1, X2)
The graph contains the following edges 1 >= 1, 2 > 2


----------------------------------------

(20)
YES

----------------------------------------

(21)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(cons(X1, X2)) -> MARK(X1)
   MARK(zeros) -> ACTIVE(zeros)
   ACTIVE(zeros) -> MARK(cons(0, zeros))

The TRS R consists of the following rules:

   active(zeros) -> mark(cons(0, zeros))
   mark(zeros) -> active(zeros)
   mark(cons(X1, X2)) -> active(cons(mark(X1), X2))
   mark(0) -> active(0)
   cons(mark(X1), X2) -> cons(X1, X2)
   cons(X1, mark(X2)) -> cons(X1, X2)
   cons(active(X1), X2) -> cons(X1, X2)
   cons(X1, active(X2)) -> cons(X1, X2)
   tail(mark(X)) -> tail(X)
   tail(active(X)) -> tail(X)

The set Q consists of the following terms:

   mark(cons(x0, x1))
   mark(tail(x0))
   cons(x0, mark(x1))
   cons(x0, active(x1))
   tail(active(x0))
   active(zeros)
   cons(mark(x0), x1)
   mark(zeros)
   active(tail(cons(x0, x1)))
   mark(0)
   tail(mark(x0))
   cons(active(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(22) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(23)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(cons(X1, X2)) -> MARK(X1)
   MARK(zeros) -> ACTIVE(zeros)
   ACTIVE(zeros) -> MARK(cons(0, zeros))

R is empty.
The set Q consists of the following terms:

   mark(cons(x0, x1))
   mark(tail(x0))
   cons(x0, mark(x1))
   cons(x0, active(x1))
   tail(active(x0))
   active(zeros)
   cons(mark(x0), x1)
   mark(zeros)
   active(tail(cons(x0, x1)))
   mark(0)
   tail(mark(x0))
   cons(active(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(24) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   mark(cons(x0, x1))
   mark(tail(x0))
   tail(active(x0))
   active(zeros)
   mark(zeros)
   active(tail(cons(x0, x1)))
   mark(0)
   tail(mark(x0))


----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(cons(X1, X2)) -> MARK(X1)
   MARK(zeros) -> ACTIVE(zeros)
   ACTIVE(zeros) -> MARK(cons(0, zeros))

R is empty.
The set Q consists of the following terms:

   cons(x0, mark(x1))
   cons(x0, active(x1))
   cons(mark(x0), x1)
   cons(active(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   MARK(zeros) -> ACTIVE(zeros)
   ACTIVE(zeros) -> MARK(cons(0, zeros))
The remaining pairs can at least be oriented weakly.
Used ordering:  Combined order from the following AFS and order.
MARK(x1)  =  x1

cons(x1, x2)  =  x1

zeros  =  zeros

ACTIVE(x1)  =  ACTIVE

0  =  0


Knuth-Bendix order [KBO] with precedence:zeros > ACTIVE > 0

and weight map:

   0=1
   ACTIVE=1
   zeros=1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:
none


----------------------------------------

(27)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(cons(X1, X2)) -> MARK(X1)

R is empty.
The set Q consists of the following terms:

   cons(x0, mark(x1))
   cons(x0, active(x1))
   cons(mark(x0), x1)
   cons(active(x0), x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(28) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MARK(cons(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


----------------------------------------

(29)
YES
