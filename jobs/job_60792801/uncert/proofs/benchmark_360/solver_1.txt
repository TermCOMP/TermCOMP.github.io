YES
proof of /home/ff862203/input_LHTiLr8yCc.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QDP
        (6) UsableRulesProof [EQUIVALENT, 0 ms]
        (7) QDP
        (8) QReductionProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (11) YES
    (12) QDP
        (13) UsableRulesProof [EQUIVALENT, 0 ms]
        (14) QDP
        (15) QReductionProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (18) YES
    (19) QDP
        (20) UsableRulesProof [EQUIVALENT, 0 ms]
        (21) QDP
        (22) QReductionProof [EQUIVALENT, 0 ms]
        (23) QDP
        (24) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (25) YES
    (26) QDP
        (27) UsableRulesProof [EQUIVALENT, 0 ms]
        (28) QDP
        (29) QReductionProof [EQUIVALENT, 0 ms]
        (30) QDP
        (31) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (32) YES
    (33) QDP
        (34) UsableRulesProof [EQUIVALENT, 0 ms]
        (35) QDP
        (36) QReductionProof [EQUIVALENT, 0 ms]
        (37) QDP
        (38) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (39) YES
    (40) QDP
        (41) UsableRulesProof [EQUIVALENT, 0 ms]
        (42) QDP
        (43) QReductionProof [EQUIVALENT, 0 ms]
        (44) QDP
        (45) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (46) YES
    (47) QDP
        (48) UsableRulesProof [EQUIVALENT, 0 ms]
        (49) QDP
        (50) QReductionProof [EQUIVALENT, 0 ms]
        (51) QDP
        (52) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (53) YES
    (54) QDP
        (55) UsableRulesProof [EQUIVALENT, 0 ms]
        (56) QDP
        (57) QReductionProof [EQUIVALENT, 0 ms]
        (58) QDP
        (59) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (60) YES
    (61) QDP
        (62) UsableRulesProof [EQUIVALENT, 0 ms]
        (63) QDP
        (64) QReductionProof [EQUIVALENT, 0 ms]
        (65) QDP
        (66) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (67) YES
    (68) QDP
        (69) UsableRulesProof [EQUIVALENT, 0 ms]
        (70) QDP
        (71) QDPQMonotonicMRRProof [EQUIVALENT, 65 ms]
        (72) QDP
        (73) QDPQMonotonicMRRProof [EQUIVALENT, 54 ms]
        (74) QDP
        (75) QDPOrderProof [EQUIVALENT, 17 ms]
        (76) QDP
        (77) QDPOrderProof [EQUIVALENT, 9 ms]
        (78) QDP
        (79) QDPOrderProof [EQUIVALENT, 0 ms]
        (80) QDP
        (81) QDPOrderProof [EQUIVALENT, 0 ms]
        (82) QDP
        (83) DependencyGraphProof [EQUIVALENT, 0 ms]
        (84) QDP
        (85) QDPOrderProof [EQUIVALENT, 73 ms]
        (86) QDP
        (87) QDPQMonotonicMRRProof [EQUIVALENT, 4 ms]
        (88) QDP
        (89) QDPQMonotonicMRRProof [EQUIVALENT, 40 ms]
        (90) QDP
        (91) DependencyGraphProof [EQUIVALENT, 0 ms]
        (92) QDP
        (93) QDPQMonotonicMRRProof [EQUIVALENT, 37 ms]
        (94) QDP
        (95) QDPQMonotonicMRRProof [EQUIVALENT, 27 ms]
        (96) QDP
        (97) DependencyGraphProof [EQUIVALENT, 0 ms]
        (98) QDP
        (99) UsableRulesProof [EQUIVALENT, 0 ms]
        (100) QDP
        (101) QReductionProof [EQUIVALENT, 0 ms]
        (102) QDP
        (103) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (104) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(U31(tt, N)) -> mark(N)
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   active(isNat(0)) -> mark(tt)
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   mark(tt) -> active(tt)
   mark(U12(X)) -> active(U12(mark(X)))
   mark(isNat(X)) -> active(isNat(X))
   mark(U21(X)) -> active(U21(mark(X)))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   mark(s(X)) -> active(s(mark(X)))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(0) -> active(0)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U12(mark(X)) -> U12(X)
   U12(active(X)) -> U12(X)
   isNat(mark(X)) -> isNat(X)
   isNat(active(X)) -> isNat(X)
   U21(mark(X)) -> U21(X)
   U21(active(X)) -> U21(X)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))


----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACTIVE(U11(tt, V2)) -> MARK(U12(isNat(V2)))
   ACTIVE(U11(tt, V2)) -> U12^1(isNat(V2))
   ACTIVE(U11(tt, V2)) -> ISNAT(V2)
   ACTIVE(U12(tt)) -> MARK(tt)
   ACTIVE(U21(tt)) -> MARK(tt)
   ACTIVE(U31(tt, N)) -> MARK(N)
   ACTIVE(U41(tt, M, N)) -> MARK(U42(isNat(N), M, N))
   ACTIVE(U41(tt, M, N)) -> U42^1(isNat(N), M, N)
   ACTIVE(U41(tt, M, N)) -> ISNAT(N)
   ACTIVE(U42(tt, M, N)) -> MARK(s(plus(N, M)))
   ACTIVE(U42(tt, M, N)) -> S(plus(N, M))
   ACTIVE(U42(tt, M, N)) -> PLUS(N, M)
   ACTIVE(isNat(0)) -> MARK(tt)
   ACTIVE(isNat(plus(V1, V2))) -> MARK(U11(isNat(V1), V2))
   ACTIVE(isNat(plus(V1, V2))) -> U11^1(isNat(V1), V2)
   ACTIVE(isNat(plus(V1, V2))) -> ISNAT(V1)
   ACTIVE(isNat(s(V1))) -> MARK(U21(isNat(V1)))
   ACTIVE(isNat(s(V1))) -> U21^1(isNat(V1))
   ACTIVE(isNat(s(V1))) -> ISNAT(V1)
   ACTIVE(plus(N, 0)) -> MARK(U31(isNat(N), N))
   ACTIVE(plus(N, 0)) -> U31^1(isNat(N), N)
   ACTIVE(plus(N, 0)) -> ISNAT(N)
   ACTIVE(plus(N, s(M))) -> MARK(U41(isNat(M), M, N))
   ACTIVE(plus(N, s(M))) -> U41^1(isNat(M), M, N)
   ACTIVE(plus(N, s(M))) -> ISNAT(M)
   MARK(U11(X1, X2)) -> ACTIVE(U11(mark(X1), X2))
   MARK(U11(X1, X2)) -> U11^1(mark(X1), X2)
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(tt) -> ACTIVE(tt)
   MARK(U12(X)) -> ACTIVE(U12(mark(X)))
   MARK(U12(X)) -> U12^1(mark(X))
   MARK(U12(X)) -> MARK(X)
   MARK(isNat(X)) -> ACTIVE(isNat(X))
   MARK(U21(X)) -> ACTIVE(U21(mark(X)))
   MARK(U21(X)) -> U21^1(mark(X))
   MARK(U21(X)) -> MARK(X)
   MARK(U31(X1, X2)) -> ACTIVE(U31(mark(X1), X2))
   MARK(U31(X1, X2)) -> U31^1(mark(X1), X2)
   MARK(U31(X1, X2)) -> MARK(X1)
   MARK(U41(X1, X2, X3)) -> ACTIVE(U41(mark(X1), X2, X3))
   MARK(U41(X1, X2, X3)) -> U41^1(mark(X1), X2, X3)
   MARK(U41(X1, X2, X3)) -> MARK(X1)
   MARK(U42(X1, X2, X3)) -> ACTIVE(U42(mark(X1), X2, X3))
   MARK(U42(X1, X2, X3)) -> U42^1(mark(X1), X2, X3)
   MARK(U42(X1, X2, X3)) -> MARK(X1)
   MARK(s(X)) -> ACTIVE(s(mark(X)))
   MARK(s(X)) -> S(mark(X))
   MARK(s(X)) -> MARK(X)
   MARK(plus(X1, X2)) -> ACTIVE(plus(mark(X1), mark(X2)))
   MARK(plus(X1, X2)) -> PLUS(mark(X1), mark(X2))
   MARK(plus(X1, X2)) -> MARK(X1)
   MARK(plus(X1, X2)) -> MARK(X2)
   MARK(0) -> ACTIVE(0)
   U11^1(mark(X1), X2) -> U11^1(X1, X2)
   U11^1(X1, mark(X2)) -> U11^1(X1, X2)
   U11^1(active(X1), X2) -> U11^1(X1, X2)
   U11^1(X1, active(X2)) -> U11^1(X1, X2)
   U12^1(mark(X)) -> U12^1(X)
   U12^1(active(X)) -> U12^1(X)
   ISNAT(mark(X)) -> ISNAT(X)
   ISNAT(active(X)) -> ISNAT(X)
   U21^1(mark(X)) -> U21^1(X)
   U21^1(active(X)) -> U21^1(X)
   U31^1(mark(X1), X2) -> U31^1(X1, X2)
   U31^1(X1, mark(X2)) -> U31^1(X1, X2)
   U31^1(active(X1), X2) -> U31^1(X1, X2)
   U31^1(X1, active(X2)) -> U31^1(X1, X2)
   U41^1(mark(X1), X2, X3) -> U41^1(X1, X2, X3)
   U41^1(X1, mark(X2), X3) -> U41^1(X1, X2, X3)
   U41^1(X1, X2, mark(X3)) -> U41^1(X1, X2, X3)
   U41^1(active(X1), X2, X3) -> U41^1(X1, X2, X3)
   U41^1(X1, active(X2), X3) -> U41^1(X1, X2, X3)
   U41^1(X1, X2, active(X3)) -> U41^1(X1, X2, X3)
   U42^1(mark(X1), X2, X3) -> U42^1(X1, X2, X3)
   U42^1(X1, mark(X2), X3) -> U42^1(X1, X2, X3)
   U42^1(X1, X2, mark(X3)) -> U42^1(X1, X2, X3)
   U42^1(active(X1), X2, X3) -> U42^1(X1, X2, X3)
   U42^1(X1, active(X2), X3) -> U42^1(X1, X2, X3)
   U42^1(X1, X2, active(X3)) -> U42^1(X1, X2, X3)
   S(mark(X)) -> S(X)
   S(active(X)) -> S(X)
   PLUS(mark(X1), X2) -> PLUS(X1, X2)
   PLUS(X1, mark(X2)) -> PLUS(X1, X2)
   PLUS(active(X1), X2) -> PLUS(X1, X2)
   PLUS(X1, active(X2)) -> PLUS(X1, X2)

The TRS R consists of the following rules:

   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(U31(tt, N)) -> mark(N)
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   active(isNat(0)) -> mark(tt)
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   mark(tt) -> active(tt)
   mark(U12(X)) -> active(U12(mark(X)))
   mark(isNat(X)) -> active(isNat(X))
   mark(U21(X)) -> active(U21(mark(X)))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   mark(s(X)) -> active(s(mark(X)))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(0) -> active(0)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U12(mark(X)) -> U12(X)
   U12(active(X)) -> U12(X)
   isNat(mark(X)) -> isNat(X)
   isNat(active(X)) -> isNat(X)
   U21(mark(X)) -> U21(X)
   U21(active(X)) -> U21(X)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 10 SCCs with 27 less nodes.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PLUS(X1, mark(X2)) -> PLUS(X1, X2)
   PLUS(mark(X1), X2) -> PLUS(X1, X2)
   PLUS(active(X1), X2) -> PLUS(X1, X2)
   PLUS(X1, active(X2)) -> PLUS(X1, X2)

The TRS R consists of the following rules:

   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(U31(tt, N)) -> mark(N)
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   active(isNat(0)) -> mark(tt)
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   mark(tt) -> active(tt)
   mark(U12(X)) -> active(U12(mark(X)))
   mark(isNat(X)) -> active(isNat(X))
   mark(U21(X)) -> active(U21(mark(X)))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   mark(s(X)) -> active(s(mark(X)))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(0) -> active(0)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U12(mark(X)) -> U12(X)
   U12(active(X)) -> U12(X)
   isNat(mark(X)) -> isNat(X)
   isNat(active(X)) -> isNat(X)
   U21(mark(X)) -> U21(X)
   U21(active(X)) -> U21(X)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(6) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PLUS(X1, mark(X2)) -> PLUS(X1, X2)
   PLUS(mark(X1), X2) -> PLUS(X1, X2)
   PLUS(active(X1), X2) -> PLUS(X1, X2)
   PLUS(X1, active(X2)) -> PLUS(X1, X2)

R is empty.
The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   U41(active(x0), x1, x2)
   U41(x0, x1, mark(x2))
   U41(x0, mark(x1), x2)
   U12(mark(x0))
   U31(active(x0), x1)
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   U42(mark(x0), x1, x2)
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   U12(active(x0))
   U31(mark(x0), x1)
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   U11(x0, active(x1))


----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PLUS(X1, mark(X2)) -> PLUS(X1, X2)
   PLUS(mark(X1), X2) -> PLUS(X1, X2)
   PLUS(active(X1), X2) -> PLUS(X1, X2)
   PLUS(X1, active(X2)) -> PLUS(X1, X2)

R is empty.
The set Q consists of the following terms:

   mark(U42(x0, x1, x2))
   mark(U21(x0))
   active(isNat(plus(x0, x1)))
   active(plus(x0, s(x1)))
   mark(tt)
   mark(0)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   active(U21(tt))
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   active(U12(tt))
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   mark(s(x0))
   mark(plus(x0, x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*PLUS(X1, mark(X2)) -> PLUS(X1, X2)
The graph contains the following edges 1 >= 1, 2 > 2


*PLUS(mark(X1), X2) -> PLUS(X1, X2)
The graph contains the following edges 1 > 1, 2 >= 2


*PLUS(active(X1), X2) -> PLUS(X1, X2)
The graph contains the following edges 1 > 1, 2 >= 2


*PLUS(X1, active(X2)) -> PLUS(X1, X2)
The graph contains the following edges 1 >= 1, 2 > 2


----------------------------------------

(11)
YES

----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(active(X)) -> S(X)
   S(mark(X)) -> S(X)

The TRS R consists of the following rules:

   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(U31(tt, N)) -> mark(N)
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   active(isNat(0)) -> mark(tt)
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   mark(tt) -> active(tt)
   mark(U12(X)) -> active(U12(mark(X)))
   mark(isNat(X)) -> active(isNat(X))
   mark(U21(X)) -> active(U21(mark(X)))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   mark(s(X)) -> active(s(mark(X)))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(0) -> active(0)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U12(mark(X)) -> U12(X)
   U12(active(X)) -> U12(X)
   isNat(mark(X)) -> isNat(X)
   isNat(active(X)) -> isNat(X)
   U21(mark(X)) -> U21(X)
   U21(active(X)) -> U21(X)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(active(X)) -> S(X)
   S(mark(X)) -> S(X)

R is empty.
The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   U41(active(x0), x1, x2)
   U41(x0, x1, mark(x2))
   U41(x0, mark(x1), x2)
   U12(mark(x0))
   U31(active(x0), x1)
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   U42(mark(x0), x1, x2)
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   U12(active(x0))
   U31(mark(x0), x1)
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   U11(x0, active(x1))


----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   S(active(X)) -> S(X)
   S(mark(X)) -> S(X)

R is empty.
The set Q consists of the following terms:

   mark(U42(x0, x1, x2))
   mark(U21(x0))
   active(isNat(plus(x0, x1)))
   active(plus(x0, s(x1)))
   mark(tt)
   mark(0)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   active(U21(tt))
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   active(U12(tt))
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   mark(s(x0))
   mark(plus(x0, x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*S(active(X)) -> S(X)
The graph contains the following edges 1 > 1


*S(mark(X)) -> S(X)
The graph contains the following edges 1 > 1


----------------------------------------

(18)
YES

----------------------------------------

(19)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U42^1(X1, mark(X2), X3) -> U42^1(X1, X2, X3)
   U42^1(mark(X1), X2, X3) -> U42^1(X1, X2, X3)
   U42^1(X1, X2, mark(X3)) -> U42^1(X1, X2, X3)
   U42^1(active(X1), X2, X3) -> U42^1(X1, X2, X3)
   U42^1(X1, active(X2), X3) -> U42^1(X1, X2, X3)
   U42^1(X1, X2, active(X3)) -> U42^1(X1, X2, X3)

The TRS R consists of the following rules:

   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(U31(tt, N)) -> mark(N)
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   active(isNat(0)) -> mark(tt)
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   mark(tt) -> active(tt)
   mark(U12(X)) -> active(U12(mark(X)))
   mark(isNat(X)) -> active(isNat(X))
   mark(U21(X)) -> active(U21(mark(X)))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   mark(s(X)) -> active(s(mark(X)))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(0) -> active(0)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U12(mark(X)) -> U12(X)
   U12(active(X)) -> U12(X)
   isNat(mark(X)) -> isNat(X)
   isNat(active(X)) -> isNat(X)
   U21(mark(X)) -> U21(X)
   U21(active(X)) -> U21(X)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(20) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(21)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U42^1(X1, mark(X2), X3) -> U42^1(X1, X2, X3)
   U42^1(mark(X1), X2, X3) -> U42^1(X1, X2, X3)
   U42^1(X1, X2, mark(X3)) -> U42^1(X1, X2, X3)
   U42^1(active(X1), X2, X3) -> U42^1(X1, X2, X3)
   U42^1(X1, active(X2), X3) -> U42^1(X1, X2, X3)
   U42^1(X1, X2, active(X3)) -> U42^1(X1, X2, X3)

R is empty.
The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(22) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   U41(active(x0), x1, x2)
   U41(x0, x1, mark(x2))
   U41(x0, mark(x1), x2)
   U12(mark(x0))
   U31(active(x0), x1)
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   U42(mark(x0), x1, x2)
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   U12(active(x0))
   U31(mark(x0), x1)
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   U11(x0, active(x1))


----------------------------------------

(23)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U42^1(X1, mark(X2), X3) -> U42^1(X1, X2, X3)
   U42^1(mark(X1), X2, X3) -> U42^1(X1, X2, X3)
   U42^1(X1, X2, mark(X3)) -> U42^1(X1, X2, X3)
   U42^1(active(X1), X2, X3) -> U42^1(X1, X2, X3)
   U42^1(X1, active(X2), X3) -> U42^1(X1, X2, X3)
   U42^1(X1, X2, active(X3)) -> U42^1(X1, X2, X3)

R is empty.
The set Q consists of the following terms:

   mark(U42(x0, x1, x2))
   mark(U21(x0))
   active(isNat(plus(x0, x1)))
   active(plus(x0, s(x1)))
   mark(tt)
   mark(0)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   active(U21(tt))
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   active(U12(tt))
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   mark(s(x0))
   mark(plus(x0, x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(24) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*U42^1(X1, mark(X2), X3) -> U42^1(X1, X2, X3)
The graph contains the following edges 1 >= 1, 2 > 2, 3 >= 3


*U42^1(mark(X1), X2, X3) -> U42^1(X1, X2, X3)
The graph contains the following edges 1 > 1, 2 >= 2, 3 >= 3


*U42^1(X1, X2, mark(X3)) -> U42^1(X1, X2, X3)
The graph contains the following edges 1 >= 1, 2 >= 2, 3 > 3


*U42^1(active(X1), X2, X3) -> U42^1(X1, X2, X3)
The graph contains the following edges 1 > 1, 2 >= 2, 3 >= 3


*U42^1(X1, active(X2), X3) -> U42^1(X1, X2, X3)
The graph contains the following edges 1 >= 1, 2 > 2, 3 >= 3


*U42^1(X1, X2, active(X3)) -> U42^1(X1, X2, X3)
The graph contains the following edges 1 >= 1, 2 >= 2, 3 > 3


----------------------------------------

(25)
YES

----------------------------------------

(26)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U41^1(X1, mark(X2), X3) -> U41^1(X1, X2, X3)
   U41^1(mark(X1), X2, X3) -> U41^1(X1, X2, X3)
   U41^1(X1, X2, mark(X3)) -> U41^1(X1, X2, X3)
   U41^1(active(X1), X2, X3) -> U41^1(X1, X2, X3)
   U41^1(X1, active(X2), X3) -> U41^1(X1, X2, X3)
   U41^1(X1, X2, active(X3)) -> U41^1(X1, X2, X3)

The TRS R consists of the following rules:

   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(U31(tt, N)) -> mark(N)
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   active(isNat(0)) -> mark(tt)
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   mark(tt) -> active(tt)
   mark(U12(X)) -> active(U12(mark(X)))
   mark(isNat(X)) -> active(isNat(X))
   mark(U21(X)) -> active(U21(mark(X)))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   mark(s(X)) -> active(s(mark(X)))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(0) -> active(0)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U12(mark(X)) -> U12(X)
   U12(active(X)) -> U12(X)
   isNat(mark(X)) -> isNat(X)
   isNat(active(X)) -> isNat(X)
   U21(mark(X)) -> U21(X)
   U21(active(X)) -> U21(X)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(27) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(28)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U41^1(X1, mark(X2), X3) -> U41^1(X1, X2, X3)
   U41^1(mark(X1), X2, X3) -> U41^1(X1, X2, X3)
   U41^1(X1, X2, mark(X3)) -> U41^1(X1, X2, X3)
   U41^1(active(X1), X2, X3) -> U41^1(X1, X2, X3)
   U41^1(X1, active(X2), X3) -> U41^1(X1, X2, X3)
   U41^1(X1, X2, active(X3)) -> U41^1(X1, X2, X3)

R is empty.
The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(29) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   U41(active(x0), x1, x2)
   U41(x0, x1, mark(x2))
   U41(x0, mark(x1), x2)
   U12(mark(x0))
   U31(active(x0), x1)
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   U42(mark(x0), x1, x2)
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   U12(active(x0))
   U31(mark(x0), x1)
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   U11(x0, active(x1))


----------------------------------------

(30)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U41^1(X1, mark(X2), X3) -> U41^1(X1, X2, X3)
   U41^1(mark(X1), X2, X3) -> U41^1(X1, X2, X3)
   U41^1(X1, X2, mark(X3)) -> U41^1(X1, X2, X3)
   U41^1(active(X1), X2, X3) -> U41^1(X1, X2, X3)
   U41^1(X1, active(X2), X3) -> U41^1(X1, X2, X3)
   U41^1(X1, X2, active(X3)) -> U41^1(X1, X2, X3)

R is empty.
The set Q consists of the following terms:

   mark(U42(x0, x1, x2))
   mark(U21(x0))
   active(isNat(plus(x0, x1)))
   active(plus(x0, s(x1)))
   mark(tt)
   mark(0)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   active(U21(tt))
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   active(U12(tt))
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   mark(s(x0))
   mark(plus(x0, x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(31) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*U41^1(X1, mark(X2), X3) -> U41^1(X1, X2, X3)
The graph contains the following edges 1 >= 1, 2 > 2, 3 >= 3


*U41^1(mark(X1), X2, X3) -> U41^1(X1, X2, X3)
The graph contains the following edges 1 > 1, 2 >= 2, 3 >= 3


*U41^1(X1, X2, mark(X3)) -> U41^1(X1, X2, X3)
The graph contains the following edges 1 >= 1, 2 >= 2, 3 > 3


*U41^1(active(X1), X2, X3) -> U41^1(X1, X2, X3)
The graph contains the following edges 1 > 1, 2 >= 2, 3 >= 3


*U41^1(X1, active(X2), X3) -> U41^1(X1, X2, X3)
The graph contains the following edges 1 >= 1, 2 > 2, 3 >= 3


*U41^1(X1, X2, active(X3)) -> U41^1(X1, X2, X3)
The graph contains the following edges 1 >= 1, 2 >= 2, 3 > 3


----------------------------------------

(32)
YES

----------------------------------------

(33)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U31^1(X1, mark(X2)) -> U31^1(X1, X2)
   U31^1(mark(X1), X2) -> U31^1(X1, X2)
   U31^1(active(X1), X2) -> U31^1(X1, X2)
   U31^1(X1, active(X2)) -> U31^1(X1, X2)

The TRS R consists of the following rules:

   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(U31(tt, N)) -> mark(N)
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   active(isNat(0)) -> mark(tt)
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   mark(tt) -> active(tt)
   mark(U12(X)) -> active(U12(mark(X)))
   mark(isNat(X)) -> active(isNat(X))
   mark(U21(X)) -> active(U21(mark(X)))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   mark(s(X)) -> active(s(mark(X)))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(0) -> active(0)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U12(mark(X)) -> U12(X)
   U12(active(X)) -> U12(X)
   isNat(mark(X)) -> isNat(X)
   isNat(active(X)) -> isNat(X)
   U21(mark(X)) -> U21(X)
   U21(active(X)) -> U21(X)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(34) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(35)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U31^1(X1, mark(X2)) -> U31^1(X1, X2)
   U31^1(mark(X1), X2) -> U31^1(X1, X2)
   U31^1(active(X1), X2) -> U31^1(X1, X2)
   U31^1(X1, active(X2)) -> U31^1(X1, X2)

R is empty.
The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(36) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   U41(active(x0), x1, x2)
   U41(x0, x1, mark(x2))
   U41(x0, mark(x1), x2)
   U12(mark(x0))
   U31(active(x0), x1)
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   U42(mark(x0), x1, x2)
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   U12(active(x0))
   U31(mark(x0), x1)
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   U11(x0, active(x1))


----------------------------------------

(37)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U31^1(X1, mark(X2)) -> U31^1(X1, X2)
   U31^1(mark(X1), X2) -> U31^1(X1, X2)
   U31^1(active(X1), X2) -> U31^1(X1, X2)
   U31^1(X1, active(X2)) -> U31^1(X1, X2)

R is empty.
The set Q consists of the following terms:

   mark(U42(x0, x1, x2))
   mark(U21(x0))
   active(isNat(plus(x0, x1)))
   active(plus(x0, s(x1)))
   mark(tt)
   mark(0)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   active(U21(tt))
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   active(U12(tt))
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   mark(s(x0))
   mark(plus(x0, x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(38) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*U31^1(X1, mark(X2)) -> U31^1(X1, X2)
The graph contains the following edges 1 >= 1, 2 > 2


*U31^1(mark(X1), X2) -> U31^1(X1, X2)
The graph contains the following edges 1 > 1, 2 >= 2


*U31^1(active(X1), X2) -> U31^1(X1, X2)
The graph contains the following edges 1 > 1, 2 >= 2


*U31^1(X1, active(X2)) -> U31^1(X1, X2)
The graph contains the following edges 1 >= 1, 2 > 2


----------------------------------------

(39)
YES

----------------------------------------

(40)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U21^1(active(X)) -> U21^1(X)
   U21^1(mark(X)) -> U21^1(X)

The TRS R consists of the following rules:

   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(U31(tt, N)) -> mark(N)
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   active(isNat(0)) -> mark(tt)
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   mark(tt) -> active(tt)
   mark(U12(X)) -> active(U12(mark(X)))
   mark(isNat(X)) -> active(isNat(X))
   mark(U21(X)) -> active(U21(mark(X)))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   mark(s(X)) -> active(s(mark(X)))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(0) -> active(0)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U12(mark(X)) -> U12(X)
   U12(active(X)) -> U12(X)
   isNat(mark(X)) -> isNat(X)
   isNat(active(X)) -> isNat(X)
   U21(mark(X)) -> U21(X)
   U21(active(X)) -> U21(X)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(41) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(42)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U21^1(active(X)) -> U21^1(X)
   U21^1(mark(X)) -> U21^1(X)

R is empty.
The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(43) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   U41(active(x0), x1, x2)
   U41(x0, x1, mark(x2))
   U41(x0, mark(x1), x2)
   U12(mark(x0))
   U31(active(x0), x1)
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   U42(mark(x0), x1, x2)
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   U12(active(x0))
   U31(mark(x0), x1)
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   U11(x0, active(x1))


----------------------------------------

(44)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U21^1(active(X)) -> U21^1(X)
   U21^1(mark(X)) -> U21^1(X)

R is empty.
The set Q consists of the following terms:

   mark(U42(x0, x1, x2))
   mark(U21(x0))
   active(isNat(plus(x0, x1)))
   active(plus(x0, s(x1)))
   mark(tt)
   mark(0)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   active(U21(tt))
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   active(U12(tt))
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   mark(s(x0))
   mark(plus(x0, x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(45) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*U21^1(active(X)) -> U21^1(X)
The graph contains the following edges 1 > 1


*U21^1(mark(X)) -> U21^1(X)
The graph contains the following edges 1 > 1


----------------------------------------

(46)
YES

----------------------------------------

(47)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ISNAT(active(X)) -> ISNAT(X)
   ISNAT(mark(X)) -> ISNAT(X)

The TRS R consists of the following rules:

   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(U31(tt, N)) -> mark(N)
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   active(isNat(0)) -> mark(tt)
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   mark(tt) -> active(tt)
   mark(U12(X)) -> active(U12(mark(X)))
   mark(isNat(X)) -> active(isNat(X))
   mark(U21(X)) -> active(U21(mark(X)))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   mark(s(X)) -> active(s(mark(X)))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(0) -> active(0)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U12(mark(X)) -> U12(X)
   U12(active(X)) -> U12(X)
   isNat(mark(X)) -> isNat(X)
   isNat(active(X)) -> isNat(X)
   U21(mark(X)) -> U21(X)
   U21(active(X)) -> U21(X)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(48) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(49)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ISNAT(active(X)) -> ISNAT(X)
   ISNAT(mark(X)) -> ISNAT(X)

R is empty.
The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(50) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   U41(active(x0), x1, x2)
   U41(x0, x1, mark(x2))
   U41(x0, mark(x1), x2)
   U12(mark(x0))
   U31(active(x0), x1)
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   U42(mark(x0), x1, x2)
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   U12(active(x0))
   U31(mark(x0), x1)
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   U11(x0, active(x1))


----------------------------------------

(51)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ISNAT(active(X)) -> ISNAT(X)
   ISNAT(mark(X)) -> ISNAT(X)

R is empty.
The set Q consists of the following terms:

   mark(U42(x0, x1, x2))
   mark(U21(x0))
   active(isNat(plus(x0, x1)))
   active(plus(x0, s(x1)))
   mark(tt)
   mark(0)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   active(U21(tt))
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   active(U12(tt))
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   mark(s(x0))
   mark(plus(x0, x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(52) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ISNAT(active(X)) -> ISNAT(X)
The graph contains the following edges 1 > 1


*ISNAT(mark(X)) -> ISNAT(X)
The graph contains the following edges 1 > 1


----------------------------------------

(53)
YES

----------------------------------------

(54)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U12^1(active(X)) -> U12^1(X)
   U12^1(mark(X)) -> U12^1(X)

The TRS R consists of the following rules:

   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(U31(tt, N)) -> mark(N)
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   active(isNat(0)) -> mark(tt)
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   mark(tt) -> active(tt)
   mark(U12(X)) -> active(U12(mark(X)))
   mark(isNat(X)) -> active(isNat(X))
   mark(U21(X)) -> active(U21(mark(X)))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   mark(s(X)) -> active(s(mark(X)))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(0) -> active(0)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U12(mark(X)) -> U12(X)
   U12(active(X)) -> U12(X)
   isNat(mark(X)) -> isNat(X)
   isNat(active(X)) -> isNat(X)
   U21(mark(X)) -> U21(X)
   U21(active(X)) -> U21(X)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(55) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(56)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U12^1(active(X)) -> U12^1(X)
   U12^1(mark(X)) -> U12^1(X)

R is empty.
The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(57) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   U41(active(x0), x1, x2)
   U41(x0, x1, mark(x2))
   U41(x0, mark(x1), x2)
   U12(mark(x0))
   U31(active(x0), x1)
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   U42(mark(x0), x1, x2)
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   U12(active(x0))
   U31(mark(x0), x1)
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   U11(x0, active(x1))


----------------------------------------

(58)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U12^1(active(X)) -> U12^1(X)
   U12^1(mark(X)) -> U12^1(X)

R is empty.
The set Q consists of the following terms:

   mark(U42(x0, x1, x2))
   mark(U21(x0))
   active(isNat(plus(x0, x1)))
   active(plus(x0, s(x1)))
   mark(tt)
   mark(0)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   active(U21(tt))
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   active(U12(tt))
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   mark(s(x0))
   mark(plus(x0, x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(59) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*U12^1(active(X)) -> U12^1(X)
The graph contains the following edges 1 > 1


*U12^1(mark(X)) -> U12^1(X)
The graph contains the following edges 1 > 1


----------------------------------------

(60)
YES

----------------------------------------

(61)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U11^1(X1, mark(X2)) -> U11^1(X1, X2)
   U11^1(mark(X1), X2) -> U11^1(X1, X2)
   U11^1(active(X1), X2) -> U11^1(X1, X2)
   U11^1(X1, active(X2)) -> U11^1(X1, X2)

The TRS R consists of the following rules:

   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(U31(tt, N)) -> mark(N)
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   active(isNat(0)) -> mark(tt)
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   mark(tt) -> active(tt)
   mark(U12(X)) -> active(U12(mark(X)))
   mark(isNat(X)) -> active(isNat(X))
   mark(U21(X)) -> active(U21(mark(X)))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   mark(s(X)) -> active(s(mark(X)))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(0) -> active(0)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U12(mark(X)) -> U12(X)
   U12(active(X)) -> U12(X)
   isNat(mark(X)) -> isNat(X)
   isNat(active(X)) -> isNat(X)
   U21(mark(X)) -> U21(X)
   U21(active(X)) -> U21(X)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(62) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(63)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U11^1(X1, mark(X2)) -> U11^1(X1, X2)
   U11^1(mark(X1), X2) -> U11^1(X1, X2)
   U11^1(active(X1), X2) -> U11^1(X1, X2)
   U11^1(X1, active(X2)) -> U11^1(X1, X2)

R is empty.
The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(64) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   U41(active(x0), x1, x2)
   U41(x0, x1, mark(x2))
   U41(x0, mark(x1), x2)
   U12(mark(x0))
   U31(active(x0), x1)
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   U42(mark(x0), x1, x2)
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   U12(active(x0))
   U31(mark(x0), x1)
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   U11(x0, active(x1))


----------------------------------------

(65)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U11^1(X1, mark(X2)) -> U11^1(X1, X2)
   U11^1(mark(X1), X2) -> U11^1(X1, X2)
   U11^1(active(X1), X2) -> U11^1(X1, X2)
   U11^1(X1, active(X2)) -> U11^1(X1, X2)

R is empty.
The set Q consists of the following terms:

   mark(U42(x0, x1, x2))
   mark(U21(x0))
   active(isNat(plus(x0, x1)))
   active(plus(x0, s(x1)))
   mark(tt)
   mark(0)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   active(U21(tt))
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   active(U12(tt))
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   mark(s(x0))
   mark(plus(x0, x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(66) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*U11^1(X1, mark(X2)) -> U11^1(X1, X2)
The graph contains the following edges 1 >= 1, 2 > 2


*U11^1(mark(X1), X2) -> U11^1(X1, X2)
The graph contains the following edges 1 > 1, 2 >= 2


*U11^1(active(X1), X2) -> U11^1(X1, X2)
The graph contains the following edges 1 > 1, 2 >= 2


*U11^1(X1, active(X2)) -> U11^1(X1, X2)
The graph contains the following edges 1 >= 1, 2 > 2


----------------------------------------

(67)
YES

----------------------------------------

(68)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(U12(X)) -> ACTIVE(U12(mark(X)))
   ACTIVE(U11(tt, V2)) -> MARK(U12(isNat(V2)))
   MARK(U12(X)) -> MARK(X)
   MARK(U11(X1, X2)) -> ACTIVE(U11(mark(X1), X2))
   ACTIVE(U31(tt, N)) -> MARK(N)
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(isNat(X)) -> ACTIVE(isNat(X))
   ACTIVE(isNat(plus(V1, V2))) -> MARK(U11(isNat(V1), V2))
   ACTIVE(isNat(s(V1))) -> MARK(U21(isNat(V1)))
   MARK(U21(X)) -> ACTIVE(U21(mark(X)))
   ACTIVE(U41(tt, M, N)) -> MARK(U42(isNat(N), M, N))
   MARK(U42(X1, X2, X3)) -> ACTIVE(U42(mark(X1), X2, X3))
   ACTIVE(U42(tt, M, N)) -> MARK(s(plus(N, M)))
   MARK(s(X)) -> ACTIVE(s(mark(X)))
   ACTIVE(plus(N, 0)) -> MARK(U31(isNat(N), N))
   MARK(U31(X1, X2)) -> ACTIVE(U31(mark(X1), X2))
   ACTIVE(plus(N, s(M))) -> MARK(U41(isNat(M), M, N))
   MARK(U41(X1, X2, X3)) -> ACTIVE(U41(mark(X1), X2, X3))
   MARK(U41(X1, X2, X3)) -> MARK(X1)
   MARK(U21(X)) -> MARK(X)
   MARK(U31(X1, X2)) -> MARK(X1)
   MARK(U42(X1, X2, X3)) -> MARK(X1)
   MARK(s(X)) -> MARK(X)
   MARK(plus(X1, X2)) -> ACTIVE(plus(mark(X1), mark(X2)))
   MARK(plus(X1, X2)) -> MARK(X1)
   MARK(plus(X1, X2)) -> MARK(X2)

The TRS R consists of the following rules:

   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(U31(tt, N)) -> mark(N)
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   active(isNat(0)) -> mark(tt)
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   mark(tt) -> active(tt)
   mark(U12(X)) -> active(U12(mark(X)))
   mark(isNat(X)) -> active(isNat(X))
   mark(U21(X)) -> active(U21(mark(X)))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   mark(s(X)) -> active(s(mark(X)))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(0) -> active(0)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U12(mark(X)) -> U12(X)
   U12(active(X)) -> U12(X)
   isNat(mark(X)) -> isNat(X)
   isNat(active(X)) -> isNat(X)
   U21(mark(X)) -> U21(X)
   U21(active(X)) -> U21(X)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(69) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(70)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(U12(X)) -> ACTIVE(U12(mark(X)))
   ACTIVE(U11(tt, V2)) -> MARK(U12(isNat(V2)))
   MARK(U12(X)) -> MARK(X)
   MARK(U11(X1, X2)) -> ACTIVE(U11(mark(X1), X2))
   ACTIVE(U31(tt, N)) -> MARK(N)
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(isNat(X)) -> ACTIVE(isNat(X))
   ACTIVE(isNat(plus(V1, V2))) -> MARK(U11(isNat(V1), V2))
   ACTIVE(isNat(s(V1))) -> MARK(U21(isNat(V1)))
   MARK(U21(X)) -> ACTIVE(U21(mark(X)))
   ACTIVE(U41(tt, M, N)) -> MARK(U42(isNat(N), M, N))
   MARK(U42(X1, X2, X3)) -> ACTIVE(U42(mark(X1), X2, X3))
   ACTIVE(U42(tt, M, N)) -> MARK(s(plus(N, M)))
   MARK(s(X)) -> ACTIVE(s(mark(X)))
   ACTIVE(plus(N, 0)) -> MARK(U31(isNat(N), N))
   MARK(U31(X1, X2)) -> ACTIVE(U31(mark(X1), X2))
   ACTIVE(plus(N, s(M))) -> MARK(U41(isNat(M), M, N))
   MARK(U41(X1, X2, X3)) -> ACTIVE(U41(mark(X1), X2, X3))
   MARK(U41(X1, X2, X3)) -> MARK(X1)
   MARK(U21(X)) -> MARK(X)
   MARK(U31(X1, X2)) -> MARK(X1)
   MARK(U42(X1, X2, X3)) -> MARK(X1)
   MARK(s(X)) -> MARK(X)
   MARK(plus(X1, X2)) -> ACTIVE(plus(mark(X1), mark(X2)))
   MARK(plus(X1, X2)) -> MARK(X1)
   MARK(plus(X1, X2)) -> MARK(X2)

The TRS R consists of the following rules:

   mark(U12(X)) -> active(U12(mark(X)))
   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U31(tt, N)) -> mark(N)
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   mark(s(X)) -> active(s(mark(X)))
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   mark(U21(X)) -> active(U21(mark(X)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(isNat(X)) -> active(isNat(X))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(tt) -> active(tt)
   mark(0) -> active(0)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   U12(active(X)) -> U12(X)
   U12(mark(X)) -> U12(X)
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(isNat(0)) -> mark(tt)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   U21(active(X)) -> U21(X)
   U21(mark(X)) -> U21(X)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(71) QDPQMonotonicMRRProof (EQUIVALENT)
By using the Q-monotonic rule removal processor with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented such that it always occurs at a strongly monotonic position in a (P,Q,R)-chain.

Strictly oriented dependency pairs:

   MARK(U12(X)) -> ACTIVE(U12(mark(X)))
   MARK(s(X)) -> ACTIVE(s(mark(X)))


Used ordering: Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(ACTIVE(x_1)) = x_1
   POL(MARK(x_1)) = 1
   POL(U11(x_1, x_2)) = 1
   POL(U12(x_1)) = 0
   POL(U21(x_1)) = 1
   POL(U31(x_1, x_2)) = 1
   POL(U41(x_1, x_2, x_3)) = 1
   POL(U42(x_1, x_2, x_3)) = 1
   POL(active(x_1)) = 0
   POL(isNat(x_1)) = 1
   POL(mark(x_1)) = 0
   POL(plus(x_1, x_2)) = 1
   POL(s(x_1)) = 0
   POL(tt) = 0


----------------------------------------

(72)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACTIVE(U11(tt, V2)) -> MARK(U12(isNat(V2)))
   MARK(U12(X)) -> MARK(X)
   MARK(U11(X1, X2)) -> ACTIVE(U11(mark(X1), X2))
   ACTIVE(U31(tt, N)) -> MARK(N)
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(isNat(X)) -> ACTIVE(isNat(X))
   ACTIVE(isNat(plus(V1, V2))) -> MARK(U11(isNat(V1), V2))
   ACTIVE(isNat(s(V1))) -> MARK(U21(isNat(V1)))
   MARK(U21(X)) -> ACTIVE(U21(mark(X)))
   ACTIVE(U41(tt, M, N)) -> MARK(U42(isNat(N), M, N))
   MARK(U42(X1, X2, X3)) -> ACTIVE(U42(mark(X1), X2, X3))
   ACTIVE(U42(tt, M, N)) -> MARK(s(plus(N, M)))
   ACTIVE(plus(N, 0)) -> MARK(U31(isNat(N), N))
   MARK(U31(X1, X2)) -> ACTIVE(U31(mark(X1), X2))
   ACTIVE(plus(N, s(M))) -> MARK(U41(isNat(M), M, N))
   MARK(U41(X1, X2, X3)) -> ACTIVE(U41(mark(X1), X2, X3))
   MARK(U41(X1, X2, X3)) -> MARK(X1)
   MARK(U21(X)) -> MARK(X)
   MARK(U31(X1, X2)) -> MARK(X1)
   MARK(U42(X1, X2, X3)) -> MARK(X1)
   MARK(s(X)) -> MARK(X)
   MARK(plus(X1, X2)) -> ACTIVE(plus(mark(X1), mark(X2)))
   MARK(plus(X1, X2)) -> MARK(X1)
   MARK(plus(X1, X2)) -> MARK(X2)

The TRS R consists of the following rules:

   mark(U12(X)) -> active(U12(mark(X)))
   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U31(tt, N)) -> mark(N)
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   mark(s(X)) -> active(s(mark(X)))
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   mark(U21(X)) -> active(U21(mark(X)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(isNat(X)) -> active(isNat(X))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(tt) -> active(tt)
   mark(0) -> active(0)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   U12(active(X)) -> U12(X)
   U12(mark(X)) -> U12(X)
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(isNat(0)) -> mark(tt)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   U21(active(X)) -> U21(X)
   U21(mark(X)) -> U21(X)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(73) QDPQMonotonicMRRProof (EQUIVALENT)
By using the Q-monotonic rule removal processor with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented such that it always occurs at a strongly monotonic position in a (P,Q,R)-chain.

Strictly oriented dependency pairs:

   MARK(U21(X)) -> ACTIVE(U21(mark(X)))


Used ordering: Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(ACTIVE(x_1)) = x_1
   POL(MARK(x_1)) = 1
   POL(U11(x_1, x_2)) = 1
   POL(U12(x_1)) = 0
   POL(U21(x_1)) = 0
   POL(U31(x_1, x_2)) = 1
   POL(U41(x_1, x_2, x_3)) = 1
   POL(U42(x_1, x_2, x_3)) = 1
   POL(active(x_1)) = 0
   POL(isNat(x_1)) = 1
   POL(mark(x_1)) = 0
   POL(plus(x_1, x_2)) = 1
   POL(s(x_1)) = 0
   POL(tt) = 0


----------------------------------------

(74)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACTIVE(U11(tt, V2)) -> MARK(U12(isNat(V2)))
   MARK(U12(X)) -> MARK(X)
   MARK(U11(X1, X2)) -> ACTIVE(U11(mark(X1), X2))
   ACTIVE(U31(tt, N)) -> MARK(N)
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(isNat(X)) -> ACTIVE(isNat(X))
   ACTIVE(isNat(plus(V1, V2))) -> MARK(U11(isNat(V1), V2))
   ACTIVE(isNat(s(V1))) -> MARK(U21(isNat(V1)))
   ACTIVE(U41(tt, M, N)) -> MARK(U42(isNat(N), M, N))
   MARK(U42(X1, X2, X3)) -> ACTIVE(U42(mark(X1), X2, X3))
   ACTIVE(U42(tt, M, N)) -> MARK(s(plus(N, M)))
   ACTIVE(plus(N, 0)) -> MARK(U31(isNat(N), N))
   MARK(U31(X1, X2)) -> ACTIVE(U31(mark(X1), X2))
   ACTIVE(plus(N, s(M))) -> MARK(U41(isNat(M), M, N))
   MARK(U41(X1, X2, X3)) -> ACTIVE(U41(mark(X1), X2, X3))
   MARK(U41(X1, X2, X3)) -> MARK(X1)
   MARK(U21(X)) -> MARK(X)
   MARK(U31(X1, X2)) -> MARK(X1)
   MARK(U42(X1, X2, X3)) -> MARK(X1)
   MARK(s(X)) -> MARK(X)
   MARK(plus(X1, X2)) -> ACTIVE(plus(mark(X1), mark(X2)))
   MARK(plus(X1, X2)) -> MARK(X1)
   MARK(plus(X1, X2)) -> MARK(X2)

The TRS R consists of the following rules:

   mark(U12(X)) -> active(U12(mark(X)))
   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U31(tt, N)) -> mark(N)
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   mark(s(X)) -> active(s(mark(X)))
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   mark(U21(X)) -> active(U21(mark(X)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(isNat(X)) -> active(isNat(X))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(tt) -> active(tt)
   mark(0) -> active(0)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   U12(active(X)) -> U12(X)
   U12(mark(X)) -> U12(X)
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(isNat(0)) -> mark(tt)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   U21(active(X)) -> U21(X)
   U21(mark(X)) -> U21(X)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(75) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   ACTIVE(plus(N, 0)) -> MARK(U31(isNat(N), N))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0) = 1
   POL(ACTIVE(x_1)) = x_1
   POL(MARK(x_1)) = x_1
   POL(U11(x_1, x_2)) = x_1
   POL(U12(x_1)) = x_1
   POL(U21(x_1)) = x_1
   POL(U31(x_1, x_2)) = x_1 + x_2
   POL(U41(x_1, x_2, x_3)) = x_1 + x_2 + x_3
   POL(U42(x_1, x_2, x_3)) = x_1 + x_2 + x_3
   POL(active(x_1)) = x_1
   POL(isNat(x_1)) = 0
   POL(mark(x_1)) = x_1
   POL(plus(x_1, x_2)) = x_1 + x_2
   POL(s(x_1)) = x_1
   POL(tt) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   mark(U12(X)) -> active(U12(mark(X)))
   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U31(tt, N)) -> mark(N)
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   mark(s(X)) -> active(s(mark(X)))
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   mark(U21(X)) -> active(U21(mark(X)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(isNat(X)) -> active(isNat(X))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(tt) -> active(tt)
   mark(0) -> active(0)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   U12(active(X)) -> U12(X)
   U12(mark(X)) -> U12(X)
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(isNat(0)) -> mark(tt)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   U21(active(X)) -> U21(X)
   U21(mark(X)) -> U21(X)


----------------------------------------

(76)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACTIVE(U11(tt, V2)) -> MARK(U12(isNat(V2)))
   MARK(U12(X)) -> MARK(X)
   MARK(U11(X1, X2)) -> ACTIVE(U11(mark(X1), X2))
   ACTIVE(U31(tt, N)) -> MARK(N)
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(isNat(X)) -> ACTIVE(isNat(X))
   ACTIVE(isNat(plus(V1, V2))) -> MARK(U11(isNat(V1), V2))
   ACTIVE(isNat(s(V1))) -> MARK(U21(isNat(V1)))
   ACTIVE(U41(tt, M, N)) -> MARK(U42(isNat(N), M, N))
   MARK(U42(X1, X2, X3)) -> ACTIVE(U42(mark(X1), X2, X3))
   ACTIVE(U42(tt, M, N)) -> MARK(s(plus(N, M)))
   MARK(U31(X1, X2)) -> ACTIVE(U31(mark(X1), X2))
   ACTIVE(plus(N, s(M))) -> MARK(U41(isNat(M), M, N))
   MARK(U41(X1, X2, X3)) -> ACTIVE(U41(mark(X1), X2, X3))
   MARK(U41(X1, X2, X3)) -> MARK(X1)
   MARK(U21(X)) -> MARK(X)
   MARK(U31(X1, X2)) -> MARK(X1)
   MARK(U42(X1, X2, X3)) -> MARK(X1)
   MARK(s(X)) -> MARK(X)
   MARK(plus(X1, X2)) -> ACTIVE(plus(mark(X1), mark(X2)))
   MARK(plus(X1, X2)) -> MARK(X1)
   MARK(plus(X1, X2)) -> MARK(X2)

The TRS R consists of the following rules:

   mark(U12(X)) -> active(U12(mark(X)))
   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U31(tt, N)) -> mark(N)
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   mark(s(X)) -> active(s(mark(X)))
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   mark(U21(X)) -> active(U21(mark(X)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(isNat(X)) -> active(isNat(X))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(tt) -> active(tt)
   mark(0) -> active(0)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   U12(active(X)) -> U12(X)
   U12(mark(X)) -> U12(X)
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(isNat(0)) -> mark(tt)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   U21(active(X)) -> U21(X)
   U21(mark(X)) -> U21(X)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(77) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   ACTIVE(U31(tt, N)) -> MARK(N)
   MARK(U31(X1, X2)) -> MARK(X1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0) = 1
   POL(ACTIVE(x_1)) = x_1
   POL(MARK(x_1)) = x_1
   POL(U11(x_1, x_2)) = x_1
   POL(U12(x_1)) = x_1
   POL(U21(x_1)) = x_1
   POL(U31(x_1, x_2)) = 1 + x_1 + x_2
   POL(U41(x_1, x_2, x_3)) = x_1 + x_2 + x_3
   POL(U42(x_1, x_2, x_3)) = x_1 + x_2 + x_3
   POL(active(x_1)) = x_1
   POL(isNat(x_1)) = 0
   POL(mark(x_1)) = x_1
   POL(plus(x_1, x_2)) = x_1 + x_2
   POL(s(x_1)) = x_1
   POL(tt) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   mark(U12(X)) -> active(U12(mark(X)))
   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U31(tt, N)) -> mark(N)
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   mark(s(X)) -> active(s(mark(X)))
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   mark(U21(X)) -> active(U21(mark(X)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(isNat(X)) -> active(isNat(X))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(tt) -> active(tt)
   mark(0) -> active(0)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   U12(active(X)) -> U12(X)
   U12(mark(X)) -> U12(X)
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(isNat(0)) -> mark(tt)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   U21(active(X)) -> U21(X)
   U21(mark(X)) -> U21(X)


----------------------------------------

(78)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACTIVE(U11(tt, V2)) -> MARK(U12(isNat(V2)))
   MARK(U12(X)) -> MARK(X)
   MARK(U11(X1, X2)) -> ACTIVE(U11(mark(X1), X2))
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(isNat(X)) -> ACTIVE(isNat(X))
   ACTIVE(isNat(plus(V1, V2))) -> MARK(U11(isNat(V1), V2))
   ACTIVE(isNat(s(V1))) -> MARK(U21(isNat(V1)))
   ACTIVE(U41(tt, M, N)) -> MARK(U42(isNat(N), M, N))
   MARK(U42(X1, X2, X3)) -> ACTIVE(U42(mark(X1), X2, X3))
   ACTIVE(U42(tt, M, N)) -> MARK(s(plus(N, M)))
   MARK(U31(X1, X2)) -> ACTIVE(U31(mark(X1), X2))
   ACTIVE(plus(N, s(M))) -> MARK(U41(isNat(M), M, N))
   MARK(U41(X1, X2, X3)) -> ACTIVE(U41(mark(X1), X2, X3))
   MARK(U41(X1, X2, X3)) -> MARK(X1)
   MARK(U21(X)) -> MARK(X)
   MARK(U42(X1, X2, X3)) -> MARK(X1)
   MARK(s(X)) -> MARK(X)
   MARK(plus(X1, X2)) -> ACTIVE(plus(mark(X1), mark(X2)))
   MARK(plus(X1, X2)) -> MARK(X1)
   MARK(plus(X1, X2)) -> MARK(X2)

The TRS R consists of the following rules:

   mark(U12(X)) -> active(U12(mark(X)))
   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U31(tt, N)) -> mark(N)
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   mark(s(X)) -> active(s(mark(X)))
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   mark(U21(X)) -> active(U21(mark(X)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(isNat(X)) -> active(isNat(X))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(tt) -> active(tt)
   mark(0) -> active(0)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   U12(active(X)) -> U12(X)
   U12(mark(X)) -> U12(X)
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(isNat(0)) -> mark(tt)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   U21(active(X)) -> U21(X)
   U21(mark(X)) -> U21(X)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(79) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   MARK(U31(X1, X2)) -> ACTIVE(U31(mark(X1), X2))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(ACTIVE(x_1)) = x_1
   POL(MARK(x_1)) = 1
   POL(U11(x_1, x_2)) = 1
   POL(U12(x_1)) = 0
   POL(U21(x_1)) = 0
   POL(U31(x_1, x_2)) = 0
   POL(U41(x_1, x_2, x_3)) = 1
   POL(U42(x_1, x_2, x_3)) = 1
   POL(active(x_1)) = 0
   POL(isNat(x_1)) = 1
   POL(mark(x_1)) = 0
   POL(plus(x_1, x_2)) = 1
   POL(s(x_1)) = 0
   POL(tt) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)


----------------------------------------

(80)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACTIVE(U11(tt, V2)) -> MARK(U12(isNat(V2)))
   MARK(U12(X)) -> MARK(X)
   MARK(U11(X1, X2)) -> ACTIVE(U11(mark(X1), X2))
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(isNat(X)) -> ACTIVE(isNat(X))
   ACTIVE(isNat(plus(V1, V2))) -> MARK(U11(isNat(V1), V2))
   ACTIVE(isNat(s(V1))) -> MARK(U21(isNat(V1)))
   ACTIVE(U41(tt, M, N)) -> MARK(U42(isNat(N), M, N))
   MARK(U42(X1, X2, X3)) -> ACTIVE(U42(mark(X1), X2, X3))
   ACTIVE(U42(tt, M, N)) -> MARK(s(plus(N, M)))
   ACTIVE(plus(N, s(M))) -> MARK(U41(isNat(M), M, N))
   MARK(U41(X1, X2, X3)) -> ACTIVE(U41(mark(X1), X2, X3))
   MARK(U41(X1, X2, X3)) -> MARK(X1)
   MARK(U21(X)) -> MARK(X)
   MARK(U42(X1, X2, X3)) -> MARK(X1)
   MARK(s(X)) -> MARK(X)
   MARK(plus(X1, X2)) -> ACTIVE(plus(mark(X1), mark(X2)))
   MARK(plus(X1, X2)) -> MARK(X1)
   MARK(plus(X1, X2)) -> MARK(X2)

The TRS R consists of the following rules:

   mark(U12(X)) -> active(U12(mark(X)))
   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U31(tt, N)) -> mark(N)
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   mark(s(X)) -> active(s(mark(X)))
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   mark(U21(X)) -> active(U21(mark(X)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(isNat(X)) -> active(isNat(X))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(tt) -> active(tt)
   mark(0) -> active(0)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   U12(active(X)) -> U12(X)
   U12(mark(X)) -> U12(X)
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(isNat(0)) -> mark(tt)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   U21(active(X)) -> U21(X)
   U21(mark(X)) -> U21(X)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(81) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   MARK(U41(X1, X2, X3)) -> MARK(X1)
   MARK(U42(X1, X2, X3)) -> MARK(X1)
   MARK(s(X)) -> MARK(X)
   MARK(plus(X1, X2)) -> MARK(X1)
   MARK(plus(X1, X2)) -> MARK(X2)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(ACTIVE(x_1)) = x_1
   POL(MARK(x_1)) = x_1
   POL(U11(x_1, x_2)) = x_1
   POL(U12(x_1)) = x_1
   POL(U21(x_1)) = x_1
   POL(U31(x_1, x_2)) = x_2
   POL(U41(x_1, x_2, x_3)) = 1 + x_1 + x_2 + x_3
   POL(U42(x_1, x_2, x_3)) = 1 + x_1 + x_2 + x_3
   POL(active(x_1)) = x_1
   POL(isNat(x_1)) = 1
   POL(mark(x_1)) = x_1
   POL(plus(x_1, x_2)) = 1 + x_1 + x_2
   POL(s(x_1)) = 1 + x_1
   POL(tt) = 1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   mark(U12(X)) -> active(U12(mark(X)))
   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U31(tt, N)) -> mark(N)
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   mark(s(X)) -> active(s(mark(X)))
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   mark(U21(X)) -> active(U21(mark(X)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(isNat(X)) -> active(isNat(X))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(tt) -> active(tt)
   mark(0) -> active(0)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   U12(active(X)) -> U12(X)
   U12(mark(X)) -> U12(X)
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(isNat(0)) -> mark(tt)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   U21(active(X)) -> U21(X)
   U21(mark(X)) -> U21(X)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)


----------------------------------------

(82)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACTIVE(U11(tt, V2)) -> MARK(U12(isNat(V2)))
   MARK(U12(X)) -> MARK(X)
   MARK(U11(X1, X2)) -> ACTIVE(U11(mark(X1), X2))
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(isNat(X)) -> ACTIVE(isNat(X))
   ACTIVE(isNat(plus(V1, V2))) -> MARK(U11(isNat(V1), V2))
   ACTIVE(isNat(s(V1))) -> MARK(U21(isNat(V1)))
   ACTIVE(U41(tt, M, N)) -> MARK(U42(isNat(N), M, N))
   MARK(U42(X1, X2, X3)) -> ACTIVE(U42(mark(X1), X2, X3))
   ACTIVE(U42(tt, M, N)) -> MARK(s(plus(N, M)))
   ACTIVE(plus(N, s(M))) -> MARK(U41(isNat(M), M, N))
   MARK(U41(X1, X2, X3)) -> ACTIVE(U41(mark(X1), X2, X3))
   MARK(U21(X)) -> MARK(X)
   MARK(plus(X1, X2)) -> ACTIVE(plus(mark(X1), mark(X2)))

The TRS R consists of the following rules:

   mark(U12(X)) -> active(U12(mark(X)))
   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U31(tt, N)) -> mark(N)
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   mark(s(X)) -> active(s(mark(X)))
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   mark(U21(X)) -> active(U21(mark(X)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(isNat(X)) -> active(isNat(X))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(tt) -> active(tt)
   mark(0) -> active(0)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   U12(active(X)) -> U12(X)
   U12(mark(X)) -> U12(X)
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(isNat(0)) -> mark(tt)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   U21(active(X)) -> U21(X)
   U21(mark(X)) -> U21(X)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(83) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(84)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(U12(X)) -> MARK(X)
   MARK(U11(X1, X2)) -> ACTIVE(U11(mark(X1), X2))
   ACTIVE(U11(tt, V2)) -> MARK(U12(isNat(V2)))
   ACTIVE(U41(tt, M, N)) -> MARK(U42(isNat(N), M, N))
   MARK(U42(X1, X2, X3)) -> ACTIVE(U42(mark(X1), X2, X3))
   ACTIVE(plus(N, s(M))) -> MARK(U41(isNat(M), M, N))
   MARK(U41(X1, X2, X3)) -> ACTIVE(U41(mark(X1), X2, X3))
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(isNat(X)) -> ACTIVE(isNat(X))
   ACTIVE(isNat(plus(V1, V2))) -> MARK(U11(isNat(V1), V2))
   ACTIVE(isNat(s(V1))) -> MARK(U21(isNat(V1)))
   MARK(U21(X)) -> MARK(X)
   MARK(plus(X1, X2)) -> ACTIVE(plus(mark(X1), mark(X2)))

The TRS R consists of the following rules:

   mark(U12(X)) -> active(U12(mark(X)))
   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U31(tt, N)) -> mark(N)
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   mark(s(X)) -> active(s(mark(X)))
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   mark(U21(X)) -> active(U21(mark(X)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(isNat(X)) -> active(isNat(X))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(tt) -> active(tt)
   mark(0) -> active(0)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   U12(active(X)) -> U12(X)
   U12(mark(X)) -> U12(X)
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(isNat(0)) -> mark(tt)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   U21(active(X)) -> U21(X)
   U21(mark(X)) -> U21(X)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(85) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   MARK(plus(X1, X2)) -> ACTIVE(plus(mark(X1), mark(X2)))
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( ACTIVE_1(x_1) ) = max{0, -2}
POL( U11_2(x_1, x_2) ) = 2x_1 + 1
POL( U41_3(x_1, ..., x_3) ) = max{0, -2}
POL( U42_3(x_1, ..., x_3) ) = 0
POL( plus_2(x_1, x_2) ) = 2
POL( mark_1(x_1) ) = max{0, -2}
POL( U12_1(x_1) ) = 2x_1 + 1
POL( active_1(x_1) ) = max{0, x_1 - 2}
POL( tt ) = 0
POL( isNat_1(x_1) ) = 0
POL( U31_2(x_1, x_2) ) = max{0, 2x_1 + 2x_2 - 2}
POL( s_1(x_1) ) = max{0, -2}
POL( U21_1(x_1) ) = 2x_1 + 1
POL( 0 ) = 0
POL( MARK_1(x_1) ) = max{0, 2x_1 - 2}

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:
none


----------------------------------------

(86)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(U12(X)) -> MARK(X)
   MARK(U11(X1, X2)) -> ACTIVE(U11(mark(X1), X2))
   ACTIVE(U11(tt, V2)) -> MARK(U12(isNat(V2)))
   ACTIVE(U41(tt, M, N)) -> MARK(U42(isNat(N), M, N))
   MARK(U42(X1, X2, X3)) -> ACTIVE(U42(mark(X1), X2, X3))
   ACTIVE(plus(N, s(M))) -> MARK(U41(isNat(M), M, N))
   MARK(U41(X1, X2, X3)) -> ACTIVE(U41(mark(X1), X2, X3))
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(isNat(X)) -> ACTIVE(isNat(X))
   ACTIVE(isNat(plus(V1, V2))) -> MARK(U11(isNat(V1), V2))
   ACTIVE(isNat(s(V1))) -> MARK(U21(isNat(V1)))
   MARK(U21(X)) -> MARK(X)

The TRS R consists of the following rules:

   mark(U12(X)) -> active(U12(mark(X)))
   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U31(tt, N)) -> mark(N)
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   mark(s(X)) -> active(s(mark(X)))
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   mark(U21(X)) -> active(U21(mark(X)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(isNat(X)) -> active(isNat(X))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(tt) -> active(tt)
   mark(0) -> active(0)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   U12(active(X)) -> U12(X)
   U12(mark(X)) -> U12(X)
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(isNat(0)) -> mark(tt)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   U21(active(X)) -> U21(X)
   U21(mark(X)) -> U21(X)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(87) QDPQMonotonicMRRProof (EQUIVALENT)
By using the Q-monotonic rule removal processor with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented such that it always occurs at a strongly monotonic position in a (P,Q,R)-chain.

Strictly oriented dependency pairs:

   ACTIVE(plus(N, s(M))) -> MARK(U41(isNat(M), M, N))


Used ordering: Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(ACTIVE(x_1)) = 2*x_1
   POL(MARK(x_1)) = 0
   POL(U11(x_1, x_2)) = 0
   POL(U12(x_1)) = 0
   POL(U21(x_1)) = 0
   POL(U31(x_1, x_2)) = 0
   POL(U41(x_1, x_2, x_3)) = 0
   POL(U42(x_1, x_2, x_3)) = 0
   POL(active(x_1)) = 0
   POL(isNat(x_1)) = 0
   POL(mark(x_1)) = 0
   POL(plus(x_1, x_2)) = 2
   POL(s(x_1)) = 0
   POL(tt) = 0


----------------------------------------

(88)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(U12(X)) -> MARK(X)
   MARK(U11(X1, X2)) -> ACTIVE(U11(mark(X1), X2))
   ACTIVE(U11(tt, V2)) -> MARK(U12(isNat(V2)))
   ACTIVE(U41(tt, M, N)) -> MARK(U42(isNat(N), M, N))
   MARK(U42(X1, X2, X3)) -> ACTIVE(U42(mark(X1), X2, X3))
   MARK(U41(X1, X2, X3)) -> ACTIVE(U41(mark(X1), X2, X3))
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(isNat(X)) -> ACTIVE(isNat(X))
   ACTIVE(isNat(plus(V1, V2))) -> MARK(U11(isNat(V1), V2))
   ACTIVE(isNat(s(V1))) -> MARK(U21(isNat(V1)))
   MARK(U21(X)) -> MARK(X)

The TRS R consists of the following rules:

   mark(U12(X)) -> active(U12(mark(X)))
   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U31(tt, N)) -> mark(N)
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   mark(s(X)) -> active(s(mark(X)))
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   mark(U21(X)) -> active(U21(mark(X)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(isNat(X)) -> active(isNat(X))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(tt) -> active(tt)
   mark(0) -> active(0)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   U12(active(X)) -> U12(X)
   U12(mark(X)) -> U12(X)
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(isNat(0)) -> mark(tt)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   U21(active(X)) -> U21(X)
   U21(mark(X)) -> U21(X)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(89) QDPQMonotonicMRRProof (EQUIVALENT)
By using the Q-monotonic rule removal processor with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented such that it always occurs at a strongly monotonic position in a (P,Q,R)-chain.

Strictly oriented dependency pairs:

   MARK(U42(X1, X2, X3)) -> ACTIVE(U42(mark(X1), X2, X3))


Used ordering: Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(ACTIVE(x_1)) = 2*x_1
   POL(MARK(x_1)) = 2
   POL(U11(x_1, x_2)) = 1
   POL(U12(x_1)) = 0
   POL(U21(x_1)) = 0
   POL(U31(x_1, x_2)) = 0
   POL(U41(x_1, x_2, x_3)) = 1
   POL(U42(x_1, x_2, x_3)) = 0
   POL(active(x_1)) = 0
   POL(isNat(x_1)) = 1
   POL(mark(x_1)) = 0
   POL(plus(x_1, x_2)) = 0
   POL(s(x_1)) = 0
   POL(tt) = 0


----------------------------------------

(90)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(U12(X)) -> MARK(X)
   MARK(U11(X1, X2)) -> ACTIVE(U11(mark(X1), X2))
   ACTIVE(U11(tt, V2)) -> MARK(U12(isNat(V2)))
   ACTIVE(U41(tt, M, N)) -> MARK(U42(isNat(N), M, N))
   MARK(U41(X1, X2, X3)) -> ACTIVE(U41(mark(X1), X2, X3))
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(isNat(X)) -> ACTIVE(isNat(X))
   ACTIVE(isNat(plus(V1, V2))) -> MARK(U11(isNat(V1), V2))
   ACTIVE(isNat(s(V1))) -> MARK(U21(isNat(V1)))
   MARK(U21(X)) -> MARK(X)

The TRS R consists of the following rules:

   mark(U12(X)) -> active(U12(mark(X)))
   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U31(tt, N)) -> mark(N)
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   mark(s(X)) -> active(s(mark(X)))
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   mark(U21(X)) -> active(U21(mark(X)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(isNat(X)) -> active(isNat(X))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(tt) -> active(tt)
   mark(0) -> active(0)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   U12(active(X)) -> U12(X)
   U12(mark(X)) -> U12(X)
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(isNat(0)) -> mark(tt)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   U21(active(X)) -> U21(X)
   U21(mark(X)) -> U21(X)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(91) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(92)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(U11(X1, X2)) -> ACTIVE(U11(mark(X1), X2))
   ACTIVE(U11(tt, V2)) -> MARK(U12(isNat(V2)))
   MARK(U12(X)) -> MARK(X)
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(isNat(X)) -> ACTIVE(isNat(X))
   ACTIVE(isNat(plus(V1, V2))) -> MARK(U11(isNat(V1), V2))
   ACTIVE(isNat(s(V1))) -> MARK(U21(isNat(V1)))
   MARK(U21(X)) -> MARK(X)
   MARK(U41(X1, X2, X3)) -> ACTIVE(U41(mark(X1), X2, X3))

The TRS R consists of the following rules:

   mark(U12(X)) -> active(U12(mark(X)))
   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U31(tt, N)) -> mark(N)
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   mark(s(X)) -> active(s(mark(X)))
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   mark(U21(X)) -> active(U21(mark(X)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(isNat(X)) -> active(isNat(X))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(tt) -> active(tt)
   mark(0) -> active(0)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   U12(active(X)) -> U12(X)
   U12(mark(X)) -> U12(X)
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(isNat(0)) -> mark(tt)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   U21(active(X)) -> U21(X)
   U21(mark(X)) -> U21(X)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(93) QDPQMonotonicMRRProof (EQUIVALENT)
By using the Q-monotonic rule removal processor with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented such that it always occurs at a strongly monotonic position in a (P,Q,R)-chain.

Strictly oriented dependency pairs:

   MARK(U41(X1, X2, X3)) -> ACTIVE(U41(mark(X1), X2, X3))


Used ordering: Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(ACTIVE(x_1)) = 2*x_1
   POL(MARK(x_1)) = 2
   POL(U11(x_1, x_2)) = 1
   POL(U12(x_1)) = 0
   POL(U21(x_1)) = 0
   POL(U31(x_1, x_2)) = 0
   POL(U41(x_1, x_2, x_3)) = 0
   POL(U42(x_1, x_2, x_3)) = 0
   POL(active(x_1)) = 0
   POL(isNat(x_1)) = 1
   POL(mark(x_1)) = 0
   POL(plus(x_1, x_2)) = 0
   POL(s(x_1)) = 0
   POL(tt) = 0


----------------------------------------

(94)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(U11(X1, X2)) -> ACTIVE(U11(mark(X1), X2))
   ACTIVE(U11(tt, V2)) -> MARK(U12(isNat(V2)))
   MARK(U12(X)) -> MARK(X)
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(isNat(X)) -> ACTIVE(isNat(X))
   ACTIVE(isNat(plus(V1, V2))) -> MARK(U11(isNat(V1), V2))
   ACTIVE(isNat(s(V1))) -> MARK(U21(isNat(V1)))
   MARK(U21(X)) -> MARK(X)

The TRS R consists of the following rules:

   mark(U12(X)) -> active(U12(mark(X)))
   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U31(tt, N)) -> mark(N)
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   mark(s(X)) -> active(s(mark(X)))
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   mark(U21(X)) -> active(U21(mark(X)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(isNat(X)) -> active(isNat(X))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(tt) -> active(tt)
   mark(0) -> active(0)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   U12(active(X)) -> U12(X)
   U12(mark(X)) -> U12(X)
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(isNat(0)) -> mark(tt)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   U21(active(X)) -> U21(X)
   U21(mark(X)) -> U21(X)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(95) QDPQMonotonicMRRProof (EQUIVALENT)
By using the Q-monotonic rule removal processor with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented such that it always occurs at a strongly monotonic position in a (P,Q,R)-chain.

Strictly oriented dependency pairs:

   MARK(U11(X1, X2)) -> ACTIVE(U11(mark(X1), X2))
   ACTIVE(U11(tt, V2)) -> MARK(U12(isNat(V2)))
   MARK(U12(X)) -> MARK(X)
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(isNat(X)) -> ACTIVE(isNat(X))
   ACTIVE(isNat(s(V1))) -> MARK(U21(isNat(V1)))


Used ordering: Polynomial interpretation [POLO]:

   POL(0) = 1
   POL(ACTIVE(x_1)) = 2*x_1
   POL(MARK(x_1)) = 2 + 2*x_1
   POL(U11(x_1, x_2)) = 1 + 2*x_1 + 2*x_2
   POL(U12(x_1)) = 1 + x_1
   POL(U21(x_1)) = x_1
   POL(U31(x_1, x_2)) = x_2
   POL(U41(x_1, x_2, x_3)) = 2 + 2*x_2 + 2*x_3
   POL(U42(x_1, x_2, x_3)) = 2 + 2*x_2 + 2*x_3
   POL(active(x_1)) = x_1
   POL(isNat(x_1)) = 2*x_1
   POL(mark(x_1)) = x_1
   POL(plus(x_1, x_2)) = 1 + 2*x_1 + 2*x_2
   POL(s(x_1)) = 1 + x_1
   POL(tt) = 1


----------------------------------------

(96)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACTIVE(isNat(plus(V1, V2))) -> MARK(U11(isNat(V1), V2))
   MARK(U21(X)) -> MARK(X)

The TRS R consists of the following rules:

   mark(U12(X)) -> active(U12(mark(X)))
   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U31(tt, N)) -> mark(N)
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   mark(s(X)) -> active(s(mark(X)))
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   mark(U21(X)) -> active(U21(mark(X)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(isNat(X)) -> active(isNat(X))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(tt) -> active(tt)
   mark(0) -> active(0)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   U12(active(X)) -> U12(X)
   U12(mark(X)) -> U12(X)
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(isNat(0)) -> mark(tt)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   U21(active(X)) -> U21(X)
   U21(mark(X)) -> U21(X)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(97) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(98)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(U21(X)) -> MARK(X)

The TRS R consists of the following rules:

   mark(U12(X)) -> active(U12(mark(X)))
   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U31(tt, N)) -> mark(N)
   mark(U11(X1, X2)) -> active(U11(mark(X1), X2))
   active(U41(tt, M, N)) -> mark(U42(isNat(N), M, N))
   mark(U42(X1, X2, X3)) -> active(U42(mark(X1), X2, X3))
   active(U42(tt, M, N)) -> mark(s(plus(N, M)))
   mark(s(X)) -> active(s(mark(X)))
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   mark(U21(X)) -> active(U21(mark(X)))
   active(plus(N, 0)) -> mark(U31(isNat(N), N))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   active(plus(N, s(M))) -> mark(U41(isNat(M), M, N))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(isNat(X)) -> active(isNat(X))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(tt) -> active(tt)
   mark(0) -> active(0)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   U12(active(X)) -> U12(X)
   U12(mark(X)) -> U12(X)
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(isNat(0)) -> mark(tt)
   U11(X1, mark(X2)) -> U11(X1, X2)
   U11(mark(X1), X2) -> U11(X1, X2)
   U11(active(X1), X2) -> U11(X1, X2)
   U11(X1, active(X2)) -> U11(X1, X2)
   U42(X1, mark(X2), X3) -> U42(X1, X2, X3)
   U42(mark(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, X2, mark(X3)) -> U42(X1, X2, X3)
   U42(active(X1), X2, X3) -> U42(X1, X2, X3)
   U42(X1, active(X2), X3) -> U42(X1, X2, X3)
   U42(X1, X2, active(X3)) -> U42(X1, X2, X3)
   s(active(X)) -> s(X)
   s(mark(X)) -> s(X)
   U21(active(X)) -> U21(X)
   U21(mark(X)) -> U21(X)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)

The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(99) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(100)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(U21(X)) -> MARK(X)

R is empty.
The set Q consists of the following terms:

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   U21(mark(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   U21(active(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(101) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   U42(x0, active(x1), x2)
   U11(mark(x0), x1)
   U11(x0, mark(x1))
   U42(active(x0), x1, x2)
   U42(x0, x1, active(x2))
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   mark(U42(x0, x1, x2))
   mark(U21(x0))
   U41(active(x0), x1, x2)
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U12(mark(x0))
   U31(active(x0), x1)
   mark(U31(x0, x1))
   mark(U12(x0))
   active(U31(tt, x0))
   active(U42(tt, x0, x1))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   active(U21(tt))
   U42(mark(x0), x1, x2)
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   s(active(x0))
   U11(active(x0), x1)
   active(U12(tt))
   U31(x0, active(x1))
   U42(x0, x1, mark(x2))
   plus(x0, active(x1))
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   U12(active(x0))
   mark(U11(x0, x1))
   active(U11(tt, x0))
   U31(mark(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U41(x0, x1, active(x2))
   U42(x0, mark(x1), x2)
   s(mark(x0))
   mark(plus(x0, x1))
   U11(x0, active(x1))
   active(plus(x0, 0))


----------------------------------------

(102)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(U21(X)) -> MARK(X)

R is empty.
The set Q consists of the following terms:

   U21(mark(x0))
   U21(active(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(103) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MARK(U21(X)) -> MARK(X)
The graph contains the following edges 1 > 1


----------------------------------------

(104)
YES
