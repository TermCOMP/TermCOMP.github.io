YES
proof of /home/ff862203/input_TbGCjIHCPv.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSToCSRProof [SOUND, 0 ms]
(2) CSR
(3) CSDependencyPairsProof [EQUIVALENT, 24 ms]
(4) QCSDP
(5) QCSDependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QCSDP
        (8) QCSDPSubtermProof [EQUIVALENT, 0 ms]
        (9) QCSDP
        (10) QCSDependencyGraphProof [EQUIVALENT, 0 ms]
        (11) TRUE
    (12) QCSDP
        (13) QCSDPSubtermProof [EQUIVALENT, 0 ms]
        (14) QCSDP
        (15) QCSDependencyGraphProof [EQUIVALENT, 0 ms]
        (16) TRUE
    (17) QCSDP
        (18) QCSDPSubtermProof [EQUIVALENT, 0 ms]
        (19) QCSDP
        (20) QCSDependencyGraphProof [EQUIVALENT, 0 ms]
        (21) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(U31(tt, V2)) -> mark(U32(isNat(V2)))
   active(U32(tt)) -> mark(tt)
   active(U41(tt, N)) -> mark(N)
   active(U51(tt, M, N)) -> mark(U52(isNat(N), M, N))
   active(U52(tt, M, N)) -> mark(s(plus(N, M)))
   active(U61(tt)) -> mark(0)
   active(U71(tt, M, N)) -> mark(U72(isNat(N), M, N))
   active(U72(tt, M, N)) -> mark(plus(x(N, M), N))
   active(isNat(0)) -> mark(tt)
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   active(isNat(x(V1, V2))) -> mark(U31(isNat(V1), V2))
   active(plus(N, 0)) -> mark(U41(isNat(N), N))
   active(plus(N, s(M))) -> mark(U51(isNat(M), M, N))
   active(x(N, 0)) -> mark(U61(isNat(N)))
   active(x(N, s(M))) -> mark(U71(isNat(M), M, N))
   active(U11(X1, X2)) -> U11(active(X1), X2)
   active(U12(X)) -> U12(active(X))
   active(U21(X)) -> U21(active(X))
   active(U31(X1, X2)) -> U31(active(X1), X2)
   active(U32(X)) -> U32(active(X))
   active(U41(X1, X2)) -> U41(active(X1), X2)
   active(U51(X1, X2, X3)) -> U51(active(X1), X2, X3)
   active(U52(X1, X2, X3)) -> U52(active(X1), X2, X3)
   active(s(X)) -> s(active(X))
   active(plus(X1, X2)) -> plus(active(X1), X2)
   active(plus(X1, X2)) -> plus(X1, active(X2))
   active(U61(X)) -> U61(active(X))
   active(U71(X1, X2, X3)) -> U71(active(X1), X2, X3)
   active(U72(X1, X2, X3)) -> U72(active(X1), X2, X3)
   active(x(X1, X2)) -> x(active(X1), X2)
   active(x(X1, X2)) -> x(X1, active(X2))
   U11(mark(X1), X2) -> mark(U11(X1, X2))
   U12(mark(X)) -> mark(U12(X))
   U21(mark(X)) -> mark(U21(X))
   U31(mark(X1), X2) -> mark(U31(X1, X2))
   U32(mark(X)) -> mark(U32(X))
   U41(mark(X1), X2) -> mark(U41(X1, X2))
   U51(mark(X1), X2, X3) -> mark(U51(X1, X2, X3))
   U52(mark(X1), X2, X3) -> mark(U52(X1, X2, X3))
   s(mark(X)) -> mark(s(X))
   plus(mark(X1), X2) -> mark(plus(X1, X2))
   plus(X1, mark(X2)) -> mark(plus(X1, X2))
   U61(mark(X)) -> mark(U61(X))
   U71(mark(X1), X2, X3) -> mark(U71(X1, X2, X3))
   U72(mark(X1), X2, X3) -> mark(U72(X1, X2, X3))
   x(mark(X1), X2) -> mark(x(X1, X2))
   x(X1, mark(X2)) -> mark(x(X1, X2))
   proper(U11(X1, X2)) -> U11(proper(X1), proper(X2))
   proper(tt) -> ok(tt)
   proper(U12(X)) -> U12(proper(X))
   proper(isNat(X)) -> isNat(proper(X))
   proper(U21(X)) -> U21(proper(X))
   proper(U31(X1, X2)) -> U31(proper(X1), proper(X2))
   proper(U32(X)) -> U32(proper(X))
   proper(U41(X1, X2)) -> U41(proper(X1), proper(X2))
   proper(U51(X1, X2, X3)) -> U51(proper(X1), proper(X2), proper(X3))
   proper(U52(X1, X2, X3)) -> U52(proper(X1), proper(X2), proper(X3))
   proper(s(X)) -> s(proper(X))
   proper(plus(X1, X2)) -> plus(proper(X1), proper(X2))
   proper(U61(X)) -> U61(proper(X))
   proper(0) -> ok(0)
   proper(U71(X1, X2, X3)) -> U71(proper(X1), proper(X2), proper(X3))
   proper(U72(X1, X2, X3)) -> U72(proper(X1), proper(X2), proper(X3))
   proper(x(X1, X2)) -> x(proper(X1), proper(X2))
   U11(ok(X1), ok(X2)) -> ok(U11(X1, X2))
   U12(ok(X)) -> ok(U12(X))
   isNat(ok(X)) -> ok(isNat(X))
   U21(ok(X)) -> ok(U21(X))
   U31(ok(X1), ok(X2)) -> ok(U31(X1, X2))
   U32(ok(X)) -> ok(U32(X))
   U41(ok(X1), ok(X2)) -> ok(U41(X1, X2))
   U51(ok(X1), ok(X2), ok(X3)) -> ok(U51(X1, X2, X3))
   U52(ok(X1), ok(X2), ok(X3)) -> ok(U52(X1, X2, X3))
   s(ok(X)) -> ok(s(X))
   plus(ok(X1), ok(X2)) -> ok(plus(X1, X2))
   U61(ok(X)) -> ok(U61(X))
   U71(ok(X1), ok(X2), ok(X3)) -> ok(U71(X1, X2, X3))
   U72(ok(X1), ok(X2), ok(X3)) -> ok(U72(X1, X2, X3))
   x(ok(X1), ok(X2)) -> ok(x(X1, X2))
   top(mark(X)) -> top(proper(X))
   top(ok(X)) -> top(active(X))

The set Q consists of the following terms:

   proper(U51(x0, x1, x2))
   active(x(x0, x1))
   proper(isNat(x0))
   active(U41(x0, x1))
   active(plus(x0, x1))
   U61(mark(x0))
   U11(mark(x0), x1)
   active(U71(x0, x1, x2))
   U71(mark(x0), x1, x2)
   proper(U11(x0, x1))
   plus(ok(x0), ok(x1))
   x(ok(x0), ok(x1))
   proper(U71(x0, x1, x2))
   U41(ok(x0), ok(x1))
   U51(mark(x0), x1, x2)
   U31(ok(x0), ok(x1))
   U72(mark(x0), x1, x2)
   proper(0)
   active(U31(x0, x1))
   proper(U12(x0))
   active(isNat(plus(x0, x1)))
   s(ok(x0))
   proper(U61(x0))
   active(U52(x0, x1, x2))
   x(mark(x0), x1)
   U71(ok(x0), ok(x1), ok(x2))
   U12(mark(x0))
   proper(plus(x0, x1))
   active(U12(x0))
   U52(mark(x0), x1, x2)
   active(s(x0))
   active(U11(x0, x1))
   active(U61(x0))
   U52(ok(x0), ok(x1), ok(x2))
   plus(mark(x0), x1)
   proper(s(x0))
   U32(ok(x0))
   U21(ok(x0))
   active(isNat(0))
   U32(mark(x0))
   proper(U72(x0, x1, x2))
   U21(mark(x0))
   top(mark(x0))
   U51(ok(x0), ok(x1), ok(x2))
   proper(U21(x0))
   U72(ok(x0), ok(x1), ok(x2))
   proper(U52(x0, x1, x2))
   active(isNat(s(x0)))
   U31(mark(x0), x1)
   U12(ok(x0))
   x(x0, mark(x1))
   active(U32(x0))
   proper(tt)
   plus(x0, mark(x1))
   s(mark(x0))
   proper(U31(x0, x1))
   proper(x(x0, x1))
   active(isNat(x(x0, x1)))
   U41(mark(x0), x1)
   active(U51(x0, x1, x2))
   isNat(ok(x0))
   U11(ok(x0), ok(x1))
   U61(ok(x0))
   top(ok(x0))
   proper(U32(x0))
   proper(U41(x0, x1))
   active(U72(x0, x1, x2))
   active(U21(x0))


----------------------------------------

(1) QTRSToCSRProof (SOUND)
The following Q TRS is given: Q restricted rewrite system:
The TRS R consists of the following rules:

   active(U11(tt, V2)) -> mark(U12(isNat(V2)))
   active(U12(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(U31(tt, V2)) -> mark(U32(isNat(V2)))
   active(U32(tt)) -> mark(tt)
   active(U41(tt, N)) -> mark(N)
   active(U51(tt, M, N)) -> mark(U52(isNat(N), M, N))
   active(U52(tt, M, N)) -> mark(s(plus(N, M)))
   active(U61(tt)) -> mark(0)
   active(U71(tt, M, N)) -> mark(U72(isNat(N), M, N))
   active(U72(tt, M, N)) -> mark(plus(x(N, M), N))
   active(isNat(0)) -> mark(tt)
   active(isNat(plus(V1, V2))) -> mark(U11(isNat(V1), V2))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   active(isNat(x(V1, V2))) -> mark(U31(isNat(V1), V2))
   active(plus(N, 0)) -> mark(U41(isNat(N), N))
   active(plus(N, s(M))) -> mark(U51(isNat(M), M, N))
   active(x(N, 0)) -> mark(U61(isNat(N)))
   active(x(N, s(M))) -> mark(U71(isNat(M), M, N))
   active(U11(X1, X2)) -> U11(active(X1), X2)
   active(U12(X)) -> U12(active(X))
   active(U21(X)) -> U21(active(X))
   active(U31(X1, X2)) -> U31(active(X1), X2)
   active(U32(X)) -> U32(active(X))
   active(U41(X1, X2)) -> U41(active(X1), X2)
   active(U51(X1, X2, X3)) -> U51(active(X1), X2, X3)
   active(U52(X1, X2, X3)) -> U52(active(X1), X2, X3)
   active(s(X)) -> s(active(X))
   active(plus(X1, X2)) -> plus(active(X1), X2)
   active(plus(X1, X2)) -> plus(X1, active(X2))
   active(U61(X)) -> U61(active(X))
   active(U71(X1, X2, X3)) -> U71(active(X1), X2, X3)
   active(U72(X1, X2, X3)) -> U72(active(X1), X2, X3)
   active(x(X1, X2)) -> x(active(X1), X2)
   active(x(X1, X2)) -> x(X1, active(X2))
   U11(mark(X1), X2) -> mark(U11(X1, X2))
   U12(mark(X)) -> mark(U12(X))
   U21(mark(X)) -> mark(U21(X))
   U31(mark(X1), X2) -> mark(U31(X1, X2))
   U32(mark(X)) -> mark(U32(X))
   U41(mark(X1), X2) -> mark(U41(X1, X2))
   U51(mark(X1), X2, X3) -> mark(U51(X1, X2, X3))
   U52(mark(X1), X2, X3) -> mark(U52(X1, X2, X3))
   s(mark(X)) -> mark(s(X))
   plus(mark(X1), X2) -> mark(plus(X1, X2))
   plus(X1, mark(X2)) -> mark(plus(X1, X2))
   U61(mark(X)) -> mark(U61(X))
   U71(mark(X1), X2, X3) -> mark(U71(X1, X2, X3))
   U72(mark(X1), X2, X3) -> mark(U72(X1, X2, X3))
   x(mark(X1), X2) -> mark(x(X1, X2))
   x(X1, mark(X2)) -> mark(x(X1, X2))
   proper(U11(X1, X2)) -> U11(proper(X1), proper(X2))
   proper(tt) -> ok(tt)
   proper(U12(X)) -> U12(proper(X))
   proper(isNat(X)) -> isNat(proper(X))
   proper(U21(X)) -> U21(proper(X))
   proper(U31(X1, X2)) -> U31(proper(X1), proper(X2))
   proper(U32(X)) -> U32(proper(X))
   proper(U41(X1, X2)) -> U41(proper(X1), proper(X2))
   proper(U51(X1, X2, X3)) -> U51(proper(X1), proper(X2), proper(X3))
   proper(U52(X1, X2, X3)) -> U52(proper(X1), proper(X2), proper(X3))
   proper(s(X)) -> s(proper(X))
   proper(plus(X1, X2)) -> plus(proper(X1), proper(X2))
   proper(U61(X)) -> U61(proper(X))
   proper(0) -> ok(0)
   proper(U71(X1, X2, X3)) -> U71(proper(X1), proper(X2), proper(X3))
   proper(U72(X1, X2, X3)) -> U72(proper(X1), proper(X2), proper(X3))
   proper(x(X1, X2)) -> x(proper(X1), proper(X2))
   U11(ok(X1), ok(X2)) -> ok(U11(X1, X2))
   U12(ok(X)) -> ok(U12(X))
   isNat(ok(X)) -> ok(isNat(X))
   U21(ok(X)) -> ok(U21(X))
   U31(ok(X1), ok(X2)) -> ok(U31(X1, X2))
   U32(ok(X)) -> ok(U32(X))
   U41(ok(X1), ok(X2)) -> ok(U41(X1, X2))
   U51(ok(X1), ok(X2), ok(X3)) -> ok(U51(X1, X2, X3))
   U52(ok(X1), ok(X2), ok(X3)) -> ok(U52(X1, X2, X3))
   s(ok(X)) -> ok(s(X))
   plus(ok(X1), ok(X2)) -> ok(plus(X1, X2))
   U61(ok(X)) -> ok(U61(X))
   U71(ok(X1), ok(X2), ok(X3)) -> ok(U71(X1, X2, X3))
   U72(ok(X1), ok(X2), ok(X3)) -> ok(U72(X1, X2, X3))
   x(ok(X1), ok(X2)) -> ok(x(X1, X2))
   top(mark(X)) -> top(proper(X))
   top(ok(X)) -> top(active(X))

The set Q consists of the following terms:

   proper(U51(x0, x1, x2))
   active(x(x0, x1))
   proper(isNat(x0))
   active(U41(x0, x1))
   active(plus(x0, x1))
   U61(mark(x0))
   U11(mark(x0), x1)
   active(U71(x0, x1, x2))
   U71(mark(x0), x1, x2)
   proper(U11(x0, x1))
   plus(ok(x0), ok(x1))
   x(ok(x0), ok(x1))
   proper(U71(x0, x1, x2))
   U41(ok(x0), ok(x1))
   U51(mark(x0), x1, x2)
   U31(ok(x0), ok(x1))
   U72(mark(x0), x1, x2)
   proper(0)
   active(U31(x0, x1))
   proper(U12(x0))
   active(isNat(plus(x0, x1)))
   s(ok(x0))
   proper(U61(x0))
   active(U52(x0, x1, x2))
   x(mark(x0), x1)
   U71(ok(x0), ok(x1), ok(x2))
   U12(mark(x0))
   proper(plus(x0, x1))
   active(U12(x0))
   U52(mark(x0), x1, x2)
   active(s(x0))
   active(U11(x0, x1))
   active(U61(x0))
   U52(ok(x0), ok(x1), ok(x2))
   plus(mark(x0), x1)
   proper(s(x0))
   U32(ok(x0))
   U21(ok(x0))
   active(isNat(0))
   U32(mark(x0))
   proper(U72(x0, x1, x2))
   U21(mark(x0))
   top(mark(x0))
   U51(ok(x0), ok(x1), ok(x2))
   proper(U21(x0))
   U72(ok(x0), ok(x1), ok(x2))
   proper(U52(x0, x1, x2))
   active(isNat(s(x0)))
   U31(mark(x0), x1)
   U12(ok(x0))
   x(x0, mark(x1))
   active(U32(x0))
   proper(tt)
   plus(x0, mark(x1))
   s(mark(x0))
   proper(U31(x0, x1))
   proper(x(x0, x1))
   active(isNat(x(x0, x1)))
   U41(mark(x0), x1)
   active(U51(x0, x1, x2))
   isNat(ok(x0))
   U11(ok(x0), ok(x1))
   U61(ok(x0))
   top(ok(x0))
   proper(U32(x0))
   proper(U41(x0, x1))
   active(U72(x0, x1, x2))
   active(U21(x0))

Special symbols used for the transformation (see [GM04]):
top: top_1, active: active_1, mark: mark_1, ok: ok_1, proper: proper_1
The replacement map contains the following entries:

U11: {1}
tt: empty set
U12: {1}
isNat: empty set
U21: {1}
U31: {1}
U32: {1}
U41: {1}
U51: {1}
U52: {1}
s: {1}
plus: {1, 2}
U61: {1}
0: empty set
U71: {1}
U72: {1}
x: {1, 2}
The QTRS contained just a subset of rules created by the complete Giesl-Middeldorp transformation. Therefore, the inverse transformation is sound, but not necessarily complete.
----------------------------------------

(2)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   U11(tt, V2) -> U12(isNat(V2))
   U12(tt) -> tt
   U21(tt) -> tt
   U31(tt, V2) -> U32(isNat(V2))
   U32(tt) -> tt
   U41(tt, N) -> N
   U51(tt, M, N) -> U52(isNat(N), M, N)
   U52(tt, M, N) -> s(plus(N, M))
   U61(tt) -> 0
   U71(tt, M, N) -> U72(isNat(N), M, N)
   U72(tt, M, N) -> plus(x(N, M), N)
   isNat(0) -> tt
   isNat(plus(V1, V2)) -> U11(isNat(V1), V2)
   isNat(s(V1)) -> U21(isNat(V1))
   isNat(x(V1, V2)) -> U31(isNat(V1), V2)
   plus(N, 0) -> U41(isNat(N), N)
   plus(N, s(M)) -> U51(isNat(M), M, N)
   x(N, 0) -> U61(isNat(N))
   x(N, s(M)) -> U71(isNat(M), M, N)

The replacement map contains the following entries:

U11: {1}
tt: empty set
U12: {1}
isNat: empty set
U21: {1}
U31: {1}
U32: {1}
U41: {1}
U51: {1}
U52: {1}
s: {1}
plus: {1, 2}
U61: {1}
0: empty set
U71: {1}
U72: {1}
x: {1, 2}

----------------------------------------

(3) CSDependencyPairsProof (EQUIVALENT)
Using Improved CS-DPs [LPAR08] we result in the following initial Q-CSDP problem.
----------------------------------------

(4)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {U12_1, U21_1, U32_1, s_1, plus_2, U61_1, x_2, U12'_1, U32'_1, PLUS_2, X_2, U21'_1, U61'_1} are replacing on all positions.
For all symbols f in {U11_2, U31_2, U41_2, U51_3, U52_3, U71_3, U72_3, U11'_2, U31'_2, U52'_3, U51'_3, U72'_3, U71'_3, U41'_2} we have mu(f) = {1}.
The symbols in {isNat_1, ISNAT_1, U_1} are not replacing on any position.

The ordinary context-sensitive dependency pairs DP_o are:
   U11'(tt, V2) -> U12'(isNat(V2))
   U11'(tt, V2) -> ISNAT(V2)
   U31'(tt, V2) -> U32'(isNat(V2))
   U31'(tt, V2) -> ISNAT(V2)
   U51'(tt, M, N) -> U52'(isNat(N), M, N)
   U51'(tt, M, N) -> ISNAT(N)
   U52'(tt, M, N) -> PLUS(N, M)
   U71'(tt, M, N) -> U72'(isNat(N), M, N)
   U71'(tt, M, N) -> ISNAT(N)
   U72'(tt, M, N) -> PLUS(x(N, M), N)
   U72'(tt, M, N) -> X(N, M)
   ISNAT(plus(V1, V2)) -> U11'(isNat(V1), V2)
   ISNAT(plus(V1, V2)) -> ISNAT(V1)
   ISNAT(s(V1)) -> U21'(isNat(V1))
   ISNAT(s(V1)) -> ISNAT(V1)
   ISNAT(x(V1, V2)) -> U31'(isNat(V1), V2)
   ISNAT(x(V1, V2)) -> ISNAT(V1)
   PLUS(N, 0) -> U41'(isNat(N), N)
   PLUS(N, 0) -> ISNAT(N)
   PLUS(N, s(M)) -> U51'(isNat(M), M, N)
   PLUS(N, s(M)) -> ISNAT(M)
   X(N, 0) -> U61'(isNat(N))
   X(N, 0) -> ISNAT(N)
   X(N, s(M)) -> U71'(isNat(M), M, N)
   X(N, s(M)) -> ISNAT(M)

The collapsing dependency pairs are DP_c:
   U41'(tt, N) -> N
   U52'(tt, M, N) -> N
   U52'(tt, M, N) -> M
   U72'(tt, M, N) -> N
   U72'(tt, M, N) -> M


The hidden terms of R are:
none

Every hiding context is built from:none

Hence, the new unhiding pairs DP_u are :
   U41'(tt, N) -> U(N)
   U52'(tt, M, N) -> U(N)
   U52'(tt, M, N) -> U(M)
   U72'(tt, M, N) -> U(N)
   U72'(tt, M, N) -> U(M)

The TRS R consists of the following rules:

   U11(tt, V2) -> U12(isNat(V2))
   U12(tt) -> tt
   U21(tt) -> tt
   U31(tt, V2) -> U32(isNat(V2))
   U32(tt) -> tt
   U41(tt, N) -> N
   U51(tt, M, N) -> U52(isNat(N), M, N)
   U52(tt, M, N) -> s(plus(N, M))
   U61(tt) -> 0
   U71(tt, M, N) -> U72(isNat(N), M, N)
   U72(tt, M, N) -> plus(x(N, M), N)
   isNat(0) -> tt
   isNat(plus(V1, V2)) -> U11(isNat(V1), V2)
   isNat(s(V1)) -> U21(isNat(V1))
   isNat(x(V1, V2)) -> U31(isNat(V1), V2)
   plus(N, 0) -> U41(isNat(N), N)
   plus(N, s(M)) -> U51(isNat(M), M, N)
   x(N, 0) -> U61(isNat(N))
   x(N, s(M)) -> U71(isNat(M), M, N)

Q is empty.

----------------------------------------

(5) QCSDependencyGraphProof (EQUIVALENT)
The approximation of the Context-Sensitive Dependency Graph [LPAR08] contains 3 SCCs with 17 less nodes.

----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {U12_1, U21_1, U32_1, s_1, plus_2, U61_1, x_2} are replacing on all positions.
For all symbols f in {U11_2, U31_2, U41_2, U51_3, U52_3, U71_3, U72_3, U11'_2, U31'_2} we have mu(f) = {1}.
The symbols in {isNat_1, ISNAT_1} are not replacing on any position.

The TRS P consists of the following rules:

   ISNAT(plus(V1, V2)) -> U11'(isNat(V1), V2)
   U11'(tt, V2) -> ISNAT(V2)
   ISNAT(plus(V1, V2)) -> ISNAT(V1)
   ISNAT(s(V1)) -> ISNAT(V1)
   ISNAT(x(V1, V2)) -> U31'(isNat(V1), V2)
   U31'(tt, V2) -> ISNAT(V2)
   ISNAT(x(V1, V2)) -> ISNAT(V1)

The TRS R consists of the following rules:

   U11(tt, V2) -> U12(isNat(V2))
   U12(tt) -> tt
   U21(tt) -> tt
   U31(tt, V2) -> U32(isNat(V2))
   U32(tt) -> tt
   U41(tt, N) -> N
   U51(tt, M, N) -> U52(isNat(N), M, N)
   U52(tt, M, N) -> s(plus(N, M))
   U61(tt) -> 0
   U71(tt, M, N) -> U72(isNat(N), M, N)
   U72(tt, M, N) -> plus(x(N, M), N)
   isNat(0) -> tt
   isNat(plus(V1, V2)) -> U11(isNat(V1), V2)
   isNat(s(V1)) -> U21(isNat(V1))
   isNat(x(V1, V2)) -> U31(isNat(V1), V2)
   plus(N, 0) -> U41(isNat(N), N)
   plus(N, s(M)) -> U51(isNat(M), M, N)
   x(N, 0) -> U61(isNat(N))
   x(N, s(M)) -> U71(isNat(M), M, N)

Q is empty.

----------------------------------------

(8) QCSDPSubtermProof (EQUIVALENT)
We use the subterm processor [DA_EMMES].


The following pairs can be oriented strictly and are deleted.

   ISNAT(plus(V1, V2)) -> U11'(isNat(V1), V2)
   ISNAT(plus(V1, V2)) -> ISNAT(V1)
   ISNAT(s(V1)) -> ISNAT(V1)
   ISNAT(x(V1, V2)) -> U31'(isNat(V1), V2)
   ISNAT(x(V1, V2)) -> ISNAT(V1)
The remaining pairs can at least be oriented weakly.

   U11'(tt, V2) -> ISNAT(V2)
   U31'(tt, V2) -> ISNAT(V2)
Used ordering:  Combined order from the following AFS and order.
U11'(x1, x2)  =  x2

ISNAT(x1)  =  x1

U31'(x1, x2)  =  x2


Subterm Order

----------------------------------------

(9)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {U12_1, U21_1, U32_1, s_1, plus_2, U61_1, x_2} are replacing on all positions.
For all symbols f in {U11_2, U31_2, U41_2, U51_3, U52_3, U71_3, U72_3, U11'_2, U31'_2} we have mu(f) = {1}.
The symbols in {isNat_1, ISNAT_1} are not replacing on any position.

The TRS P consists of the following rules:

   U11'(tt, V2) -> ISNAT(V2)
   U31'(tt, V2) -> ISNAT(V2)

The TRS R consists of the following rules:

   U11(tt, V2) -> U12(isNat(V2))
   U12(tt) -> tt
   U21(tt) -> tt
   U31(tt, V2) -> U32(isNat(V2))
   U32(tt) -> tt
   U41(tt, N) -> N
   U51(tt, M, N) -> U52(isNat(N), M, N)
   U52(tt, M, N) -> s(plus(N, M))
   U61(tt) -> 0
   U71(tt, M, N) -> U72(isNat(N), M, N)
   U72(tt, M, N) -> plus(x(N, M), N)
   isNat(0) -> tt
   isNat(plus(V1, V2)) -> U11(isNat(V1), V2)
   isNat(s(V1)) -> U21(isNat(V1))
   isNat(x(V1, V2)) -> U31(isNat(V1), V2)
   plus(N, 0) -> U41(isNat(N), N)
   plus(N, s(M)) -> U51(isNat(M), M, N)
   x(N, 0) -> U61(isNat(N))
   x(N, s(M)) -> U71(isNat(M), M, N)

Q is empty.

----------------------------------------

(10) QCSDependencyGraphProof (EQUIVALENT)
The approximation of the Context-Sensitive Dependency Graph [LPAR08] contains 0 SCCs with 2 less nodes.

----------------------------------------

(11)
TRUE

----------------------------------------

(12)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {U12_1, U21_1, U32_1, s_1, plus_2, U61_1, x_2, PLUS_2} are replacing on all positions.
For all symbols f in {U11_2, U31_2, U41_2, U51_3, U52_3, U71_3, U72_3, U52'_3, U51'_3} we have mu(f) = {1}.
The symbols in {isNat_1} are not replacing on any position.

The TRS P consists of the following rules:

   U51'(tt, M, N) -> U52'(isNat(N), M, N)
   U52'(tt, M, N) -> PLUS(N, M)
   PLUS(N, s(M)) -> U51'(isNat(M), M, N)

The TRS R consists of the following rules:

   U11(tt, V2) -> U12(isNat(V2))
   U12(tt) -> tt
   U21(tt) -> tt
   U31(tt, V2) -> U32(isNat(V2))
   U32(tt) -> tt
   U41(tt, N) -> N
   U51(tt, M, N) -> U52(isNat(N), M, N)
   U52(tt, M, N) -> s(plus(N, M))
   U61(tt) -> 0
   U71(tt, M, N) -> U72(isNat(N), M, N)
   U72(tt, M, N) -> plus(x(N, M), N)
   isNat(0) -> tt
   isNat(plus(V1, V2)) -> U11(isNat(V1), V2)
   isNat(s(V1)) -> U21(isNat(V1))
   isNat(x(V1, V2)) -> U31(isNat(V1), V2)
   plus(N, 0) -> U41(isNat(N), N)
   plus(N, s(M)) -> U51(isNat(M), M, N)
   x(N, 0) -> U61(isNat(N))
   x(N, s(M)) -> U71(isNat(M), M, N)

Q is empty.

----------------------------------------

(13) QCSDPSubtermProof (EQUIVALENT)
We use the subterm processor [DA_EMMES].


The following pairs can be oriented strictly and are deleted.

   PLUS(N, s(M)) -> U51'(isNat(M), M, N)
The remaining pairs can at least be oriented weakly.

   U51'(tt, M, N) -> U52'(isNat(N), M, N)
   U52'(tt, M, N) -> PLUS(N, M)
Used ordering:  Combined order from the following AFS and order.
U52'(x1, x2, x3)  =  x2

U51'(x1, x2, x3)  =  x2

PLUS(x1, x2)  =  x2


Subterm Order

----------------------------------------

(14)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {U12_1, U21_1, U32_1, s_1, plus_2, U61_1, x_2, PLUS_2} are replacing on all positions.
For all symbols f in {U11_2, U31_2, U41_2, U51_3, U52_3, U71_3, U72_3, U52'_3, U51'_3} we have mu(f) = {1}.
The symbols in {isNat_1} are not replacing on any position.

The TRS P consists of the following rules:

   U51'(tt, M, N) -> U52'(isNat(N), M, N)
   U52'(tt, M, N) -> PLUS(N, M)

The TRS R consists of the following rules:

   U11(tt, V2) -> U12(isNat(V2))
   U12(tt) -> tt
   U21(tt) -> tt
   U31(tt, V2) -> U32(isNat(V2))
   U32(tt) -> tt
   U41(tt, N) -> N
   U51(tt, M, N) -> U52(isNat(N), M, N)
   U52(tt, M, N) -> s(plus(N, M))
   U61(tt) -> 0
   U71(tt, M, N) -> U72(isNat(N), M, N)
   U72(tt, M, N) -> plus(x(N, M), N)
   isNat(0) -> tt
   isNat(plus(V1, V2)) -> U11(isNat(V1), V2)
   isNat(s(V1)) -> U21(isNat(V1))
   isNat(x(V1, V2)) -> U31(isNat(V1), V2)
   plus(N, 0) -> U41(isNat(N), N)
   plus(N, s(M)) -> U51(isNat(M), M, N)
   x(N, 0) -> U61(isNat(N))
   x(N, s(M)) -> U71(isNat(M), M, N)

Q is empty.

----------------------------------------

(15) QCSDependencyGraphProof (EQUIVALENT)
The approximation of the Context-Sensitive Dependency Graph [LPAR08] contains 0 SCCs with 2 less nodes.

----------------------------------------

(16)
TRUE

----------------------------------------

(17)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {U12_1, U21_1, U32_1, s_1, plus_2, U61_1, x_2, X_2} are replacing on all positions.
For all symbols f in {U11_2, U31_2, U41_2, U51_3, U52_3, U71_3, U72_3, U72'_3, U71'_3} we have mu(f) = {1}.
The symbols in {isNat_1} are not replacing on any position.

The TRS P consists of the following rules:

   U72'(tt, M, N) -> X(N, M)
   X(N, s(M)) -> U71'(isNat(M), M, N)
   U71'(tt, M, N) -> U72'(isNat(N), M, N)

The TRS R consists of the following rules:

   U11(tt, V2) -> U12(isNat(V2))
   U12(tt) -> tt
   U21(tt) -> tt
   U31(tt, V2) -> U32(isNat(V2))
   U32(tt) -> tt
   U41(tt, N) -> N
   U51(tt, M, N) -> U52(isNat(N), M, N)
   U52(tt, M, N) -> s(plus(N, M))
   U61(tt) -> 0
   U71(tt, M, N) -> U72(isNat(N), M, N)
   U72(tt, M, N) -> plus(x(N, M), N)
   isNat(0) -> tt
   isNat(plus(V1, V2)) -> U11(isNat(V1), V2)
   isNat(s(V1)) -> U21(isNat(V1))
   isNat(x(V1, V2)) -> U31(isNat(V1), V2)
   plus(N, 0) -> U41(isNat(N), N)
   plus(N, s(M)) -> U51(isNat(M), M, N)
   x(N, 0) -> U61(isNat(N))
   x(N, s(M)) -> U71(isNat(M), M, N)

Q is empty.

----------------------------------------

(18) QCSDPSubtermProof (EQUIVALENT)
We use the subterm processor [DA_EMMES].


The following pairs can be oriented strictly and are deleted.

   X(N, s(M)) -> U71'(isNat(M), M, N)
The remaining pairs can at least be oriented weakly.

   U72'(tt, M, N) -> X(N, M)
   U71'(tt, M, N) -> U72'(isNat(N), M, N)
Used ordering:  Combined order from the following AFS and order.
X(x1, x2)  =  x2

U72'(x1, x2, x3)  =  x2

U71'(x1, x2, x3)  =  x2


Subterm Order

----------------------------------------

(19)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {U12_1, U21_1, U32_1, s_1, plus_2, U61_1, x_2, X_2} are replacing on all positions.
For all symbols f in {U11_2, U31_2, U41_2, U51_3, U52_3, U71_3, U72_3, U72'_3, U71'_3} we have mu(f) = {1}.
The symbols in {isNat_1} are not replacing on any position.

The TRS P consists of the following rules:

   U72'(tt, M, N) -> X(N, M)
   U71'(tt, M, N) -> U72'(isNat(N), M, N)

The TRS R consists of the following rules:

   U11(tt, V2) -> U12(isNat(V2))
   U12(tt) -> tt
   U21(tt) -> tt
   U31(tt, V2) -> U32(isNat(V2))
   U32(tt) -> tt
   U41(tt, N) -> N
   U51(tt, M, N) -> U52(isNat(N), M, N)
   U52(tt, M, N) -> s(plus(N, M))
   U61(tt) -> 0
   U71(tt, M, N) -> U72(isNat(N), M, N)
   U72(tt, M, N) -> plus(x(N, M), N)
   isNat(0) -> tt
   isNat(plus(V1, V2)) -> U11(isNat(V1), V2)
   isNat(s(V1)) -> U21(isNat(V1))
   isNat(x(V1, V2)) -> U31(isNat(V1), V2)
   plus(N, 0) -> U41(isNat(N), N)
   plus(N, s(M)) -> U51(isNat(M), M, N)
   x(N, 0) -> U61(isNat(N))
   x(N, s(M)) -> U71(isNat(M), M, N)

Q is empty.

----------------------------------------

(20) QCSDependencyGraphProof (EQUIVALENT)
The approximation of the Context-Sensitive Dependency Graph [LPAR08] contains 0 SCCs with 2 less nodes.

----------------------------------------

(21)
TRUE
