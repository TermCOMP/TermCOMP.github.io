YES
proof of /home/ff862203/input_VFEeuNdLR0.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 181 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 4 ms]
(4) QTRS
(5) QTRSRRRProof [EQUIVALENT, 3 ms]
(6) QTRS
(7) RisEmptyProof [EQUIVALENT, 0 ms]
(8) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(U11(tt, V1, V2)) -> mark(U12(isNat(V1), V2))
   active(U12(tt, V2)) -> mark(U13(isNat(V2)))
   active(U13(tt)) -> mark(tt)
   active(U21(tt, V1)) -> mark(U22(isNat(V1)))
   active(U22(tt)) -> mark(tt)
   active(U31(tt, N)) -> mark(N)
   active(U41(tt, M, N)) -> mark(s(plus(N, M)))
   active(and(tt, X)) -> mark(X)
   active(isNat(0)) -> mark(tt)
   active(isNat(plus(V1, V2))) -> mark(U11(and(isNatKind(V1), isNatKind(V2)), V1, V2))
   active(isNat(s(V1))) -> mark(U21(isNatKind(V1), V1))
   active(isNatKind(0)) -> mark(tt)
   active(isNatKind(plus(V1, V2))) -> mark(and(isNatKind(V1), isNatKind(V2)))
   active(isNatKind(s(V1))) -> mark(isNatKind(V1))
   active(plus(N, 0)) -> mark(U31(and(isNat(N), isNatKind(N)), N))
   active(plus(N, s(M))) -> mark(U41(and(and(isNat(M), isNatKind(M)), and(isNat(N), isNatKind(N))), M, N))
   mark(U11(X1, X2, X3)) -> active(U11(mark(X1), X2, X3))
   mark(tt) -> active(tt)
   mark(U12(X1, X2)) -> active(U12(mark(X1), X2))
   mark(isNat(X)) -> active(isNat(X))
   mark(U13(X)) -> active(U13(mark(X)))
   mark(U21(X1, X2)) -> active(U21(mark(X1), X2))
   mark(U22(X)) -> active(U22(mark(X)))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(s(X)) -> active(s(mark(X)))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(and(X1, X2)) -> active(and(mark(X1), X2))
   mark(0) -> active(0)
   mark(isNatKind(X)) -> active(isNatKind(X))
   U11(mark(X1), X2, X3) -> U11(X1, X2, X3)
   U11(X1, mark(X2), X3) -> U11(X1, X2, X3)
   U11(X1, X2, mark(X3)) -> U11(X1, X2, X3)
   U11(active(X1), X2, X3) -> U11(X1, X2, X3)
   U11(X1, active(X2), X3) -> U11(X1, X2, X3)
   U11(X1, X2, active(X3)) -> U11(X1, X2, X3)
   U12(mark(X1), X2) -> U12(X1, X2)
   U12(X1, mark(X2)) -> U12(X1, X2)
   U12(active(X1), X2) -> U12(X1, X2)
   U12(X1, active(X2)) -> U12(X1, X2)
   isNat(mark(X)) -> isNat(X)
   isNat(active(X)) -> isNat(X)
   U13(mark(X)) -> U13(X)
   U13(active(X)) -> U13(X)
   U21(mark(X1), X2) -> U21(X1, X2)
   U21(X1, mark(X2)) -> U21(X1, X2)
   U21(active(X1), X2) -> U21(X1, X2)
   U21(X1, active(X2)) -> U21(X1, X2)
   U22(mark(X)) -> U22(X)
   U22(active(X)) -> U22(X)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   and(mark(X1), X2) -> and(X1, X2)
   and(X1, mark(X2)) -> and(X1, X2)
   and(active(X1), X2) -> and(X1, X2)
   and(X1, active(X2)) -> and(X1, X2)
   isNatKind(mark(X)) -> isNatKind(X)
   isNatKind(active(X)) -> isNatKind(X)

The set Q consists of the following terms:

   U12(x0, mark(x1))
   active(U13(tt))
   U12(mark(x0), x1)
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   U21(mark(x0), x1)
   isNatKind(mark(x0))
   U41(active(x0), x1, x2)
   U11(x0, x1, active(x2))
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U11(active(x0), x1, x2)
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U21(x0, mark(x1))
   U12(x0, active(x1))
   U22(active(x0))
   U31(active(x0), x1)
   active(U12(tt, x0))
   U11(x0, mark(x1), x2)
   mark(U31(x0, x1))
   active(U31(tt, x0))
   mark(isNatKind(x0))
   mark(U22(x0))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   and(mark(x0), x1)
   U21(active(x0), x1)
   active(and(tt, x0))
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   active(isNatKind(0))
   U21(x0, active(x1))
   s(active(x0))
   mark(U21(x0, x1))
   U11(mark(x0), x1, x2)
   U31(x0, active(x1))
   active(U22(tt))
   U13(active(x0))
   U22(mark(x0))
   plus(x0, active(x1))
   U12(active(x0), x1)
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   mark(and(x0, x1))
   active(U11(tt, x0, x1))
   active(isNatKind(s(x0)))
   active(isNatKind(plus(x0, x1)))
   and(x0, active(x1))
   U31(mark(x0), x1)
   isNatKind(active(x0))
   mark(U13(x0))
   mark(U11(x0, x1, x2))
   and(active(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U11(x0, active(x1), x2)
   U41(x0, x1, active(x2))
   s(mark(x0))
   and(x0, mark(x1))
   mark(U12(x0, x1))
   U11(x0, x1, mark(x2))
   mark(plus(x0, x1))
   active(plus(x0, 0))
   active(U21(tt, x0))
   U13(mark(x0))


----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
active/1)YES(
U11/3(YES,YES,YES)
tt/0)
mark/1)YES(
U12/2(YES,YES)
isNat/1(YES)
U13/1)YES(
U21/2(YES,YES)
U22/1)YES(
U31/2(YES,YES)
U41/3(YES,YES,YES)
s/1(YES)
plus/2(YES,YES)
and/2(YES,YES)
0/0)
isNatKind/1(YES)

Quasi precedence:
[U41_3, plus_2] > U11_3 > [U12_2, isNat_1, U21_2, s_1] > isNatKind_1 > [tt, 0]
[U41_3, plus_2] > U31_2
[U41_3, plus_2] > and_2


Status:
U11_3: multiset status
tt: multiset status
U12_2: multiset status
isNat_1: multiset status
U21_2: multiset status
U31_2: multiset status
U41_3: [3,2,1]
s_1: multiset status
plus_2: [1,2]
and_2: [2,1]
0: multiset status
isNatKind_1: multiset status

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   active(U11(tt, V1, V2)) -> mark(U12(isNat(V1), V2))
   active(U12(tt, V2)) -> mark(U13(isNat(V2)))
   active(U21(tt, V1)) -> mark(U22(isNat(V1)))
   active(U31(tt, N)) -> mark(N)
   active(U41(tt, M, N)) -> mark(s(plus(N, M)))
   active(and(tt, X)) -> mark(X)
   active(isNat(0)) -> mark(tt)
   active(isNat(plus(V1, V2))) -> mark(U11(and(isNatKind(V1), isNatKind(V2)), V1, V2))
   active(isNat(s(V1))) -> mark(U21(isNatKind(V1), V1))
   active(isNatKind(0)) -> mark(tt)
   active(isNatKind(plus(V1, V2))) -> mark(and(isNatKind(V1), isNatKind(V2)))
   active(isNatKind(s(V1))) -> mark(isNatKind(V1))
   active(plus(N, 0)) -> mark(U31(and(isNat(N), isNatKind(N)), N))
   active(plus(N, s(M))) -> mark(U41(and(and(isNat(M), isNatKind(M)), and(isNat(N), isNatKind(N))), M, N))




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(U13(tt)) -> mark(tt)
   active(U22(tt)) -> mark(tt)
   mark(U11(X1, X2, X3)) -> active(U11(mark(X1), X2, X3))
   mark(tt) -> active(tt)
   mark(U12(X1, X2)) -> active(U12(mark(X1), X2))
   mark(isNat(X)) -> active(isNat(X))
   mark(U13(X)) -> active(U13(mark(X)))
   mark(U21(X1, X2)) -> active(U21(mark(X1), X2))
   mark(U22(X)) -> active(U22(mark(X)))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(s(X)) -> active(s(mark(X)))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(and(X1, X2)) -> active(and(mark(X1), X2))
   mark(0) -> active(0)
   mark(isNatKind(X)) -> active(isNatKind(X))
   U11(mark(X1), X2, X3) -> U11(X1, X2, X3)
   U11(X1, mark(X2), X3) -> U11(X1, X2, X3)
   U11(X1, X2, mark(X3)) -> U11(X1, X2, X3)
   U11(active(X1), X2, X3) -> U11(X1, X2, X3)
   U11(X1, active(X2), X3) -> U11(X1, X2, X3)
   U11(X1, X2, active(X3)) -> U11(X1, X2, X3)
   U12(mark(X1), X2) -> U12(X1, X2)
   U12(X1, mark(X2)) -> U12(X1, X2)
   U12(active(X1), X2) -> U12(X1, X2)
   U12(X1, active(X2)) -> U12(X1, X2)
   isNat(mark(X)) -> isNat(X)
   isNat(active(X)) -> isNat(X)
   U13(mark(X)) -> U13(X)
   U13(active(X)) -> U13(X)
   U21(mark(X1), X2) -> U21(X1, X2)
   U21(X1, mark(X2)) -> U21(X1, X2)
   U21(active(X1), X2) -> U21(X1, X2)
   U21(X1, active(X2)) -> U21(X1, X2)
   U22(mark(X)) -> U22(X)
   U22(active(X)) -> U22(X)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)
   s(mark(X)) -> s(X)
   s(active(X)) -> s(X)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(X1, mark(X2)) -> plus(X1, X2)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   and(mark(X1), X2) -> and(X1, X2)
   and(X1, mark(X2)) -> and(X1, X2)
   and(active(X1), X2) -> and(X1, X2)
   and(X1, active(X2)) -> and(X1, X2)
   isNatKind(mark(X)) -> isNatKind(X)
   isNatKind(active(X)) -> isNatKind(X)

The set Q consists of the following terms:

   U12(x0, mark(x1))
   active(U13(tt))
   U12(mark(x0), x1)
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   U21(mark(x0), x1)
   isNatKind(mark(x0))
   U41(active(x0), x1, x2)
   U11(x0, x1, active(x2))
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U11(active(x0), x1, x2)
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U21(x0, mark(x1))
   U12(x0, active(x1))
   U22(active(x0))
   U31(active(x0), x1)
   active(U12(tt, x0))
   U11(x0, mark(x1), x2)
   mark(U31(x0, x1))
   active(U31(tt, x0))
   mark(isNatKind(x0))
   mark(U22(x0))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   and(mark(x0), x1)
   U21(active(x0), x1)
   active(and(tt, x0))
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   active(isNatKind(0))
   U21(x0, active(x1))
   s(active(x0))
   mark(U21(x0, x1))
   U11(mark(x0), x1, x2)
   U31(x0, active(x1))
   active(U22(tt))
   U13(active(x0))
   U22(mark(x0))
   plus(x0, active(x1))
   U12(active(x0), x1)
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   mark(and(x0, x1))
   active(U11(tt, x0, x1))
   active(isNatKind(s(x0)))
   active(isNatKind(plus(x0, x1)))
   and(x0, active(x1))
   U31(mark(x0), x1)
   isNatKind(active(x0))
   mark(U13(x0))
   mark(U11(x0, x1, x2))
   and(active(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U11(x0, active(x1), x2)
   U41(x0, x1, active(x2))
   s(mark(x0))
   and(x0, mark(x1))
   mark(U12(x0, x1))
   U11(x0, x1, mark(x2))
   mark(plus(x0, x1))
   active(plus(x0, 0))
   active(U21(tt, x0))
   U13(mark(x0))


----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 2
   POL(U11(x_1, x_2, x_3)) = 2 + 2*x_1 + x_2 + 2*x_3
   POL(U12(x_1, x_2)) = 2 + x_1 + x_2
   POL(U13(x_1)) = 2 + x_1
   POL(U21(x_1, x_2)) = 2 + x_1 + 2*x_2
   POL(U22(x_1)) = 2 + x_1
   POL(U31(x_1, x_2)) = 2 + x_1 + x_2
   POL(U41(x_1, x_2, x_3)) = 2 + x_1 + x_2 + x_3
   POL(active(x_1)) = 1 + x_1
   POL(and(x_1, x_2)) = 2 + x_1 + x_2
   POL(isNat(x_1)) = 2 + x_1
   POL(isNatKind(x_1)) = 2 + x_1
   POL(mark(x_1)) = 2*x_1
   POL(plus(x_1, x_2)) = 2 + 2*x_1 + x_2
   POL(s(x_1)) = 2 + x_1
   POL(tt) = 2
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   active(U13(tt)) -> mark(tt)
   active(U22(tt)) -> mark(tt)
   mark(U11(X1, X2, X3)) -> active(U11(mark(X1), X2, X3))
   mark(tt) -> active(tt)
   mark(U12(X1, X2)) -> active(U12(mark(X1), X2))
   mark(isNat(X)) -> active(isNat(X))
   mark(U13(X)) -> active(U13(mark(X)))
   mark(U21(X1, X2)) -> active(U21(mark(X1), X2))
   mark(U22(X)) -> active(U22(mark(X)))
   mark(U31(X1, X2)) -> active(U31(mark(X1), X2))
   mark(U41(X1, X2, X3)) -> active(U41(mark(X1), X2, X3))
   mark(s(X)) -> active(s(mark(X)))
   mark(plus(X1, X2)) -> active(plus(mark(X1), mark(X2)))
   mark(and(X1, X2)) -> active(and(mark(X1), X2))
   mark(0) -> active(0)
   mark(isNatKind(X)) -> active(isNatKind(X))
   U11(active(X1), X2, X3) -> U11(X1, X2, X3)
   U11(X1, active(X2), X3) -> U11(X1, X2, X3)
   U11(X1, X2, active(X3)) -> U11(X1, X2, X3)
   U12(active(X1), X2) -> U12(X1, X2)
   U12(X1, active(X2)) -> U12(X1, X2)
   isNat(active(X)) -> isNat(X)
   U13(active(X)) -> U13(X)
   U21(active(X1), X2) -> U21(X1, X2)
   U21(X1, active(X2)) -> U21(X1, X2)
   U22(active(X)) -> U22(X)
   U31(active(X1), X2) -> U31(X1, X2)
   U31(X1, active(X2)) -> U31(X1, X2)
   U41(active(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, active(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, active(X3)) -> U41(X1, X2, X3)
   s(active(X)) -> s(X)
   plus(active(X1), X2) -> plus(X1, X2)
   plus(X1, active(X2)) -> plus(X1, X2)
   and(active(X1), X2) -> and(X1, X2)
   and(X1, active(X2)) -> and(X1, X2)
   isNatKind(active(X)) -> isNatKind(X)




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   U11(mark(X1), X2, X3) -> U11(X1, X2, X3)
   U11(X1, mark(X2), X3) -> U11(X1, X2, X3)
   U11(X1, X2, mark(X3)) -> U11(X1, X2, X3)
   U12(mark(X1), X2) -> U12(X1, X2)
   U12(X1, mark(X2)) -> U12(X1, X2)
   isNat(mark(X)) -> isNat(X)
   U13(mark(X)) -> U13(X)
   U21(mark(X1), X2) -> U21(X1, X2)
   U21(X1, mark(X2)) -> U21(X1, X2)
   U22(mark(X)) -> U22(X)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   s(mark(X)) -> s(X)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(X1, mark(X2)) -> plus(X1, X2)
   and(mark(X1), X2) -> and(X1, X2)
   and(X1, mark(X2)) -> and(X1, X2)
   isNatKind(mark(X)) -> isNatKind(X)

The set Q consists of the following terms:

   U12(x0, mark(x1))
   active(U13(tt))
   U12(mark(x0), x1)
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   U21(mark(x0), x1)
   isNatKind(mark(x0))
   U41(active(x0), x1, x2)
   U11(x0, x1, active(x2))
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U11(active(x0), x1, x2)
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U21(x0, mark(x1))
   U12(x0, active(x1))
   U22(active(x0))
   U31(active(x0), x1)
   active(U12(tt, x0))
   U11(x0, mark(x1), x2)
   mark(U31(x0, x1))
   active(U31(tt, x0))
   mark(isNatKind(x0))
   mark(U22(x0))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   and(mark(x0), x1)
   U21(active(x0), x1)
   active(and(tt, x0))
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   active(isNatKind(0))
   U21(x0, active(x1))
   s(active(x0))
   mark(U21(x0, x1))
   U11(mark(x0), x1, x2)
   U31(x0, active(x1))
   active(U22(tt))
   U13(active(x0))
   U22(mark(x0))
   plus(x0, active(x1))
   U12(active(x0), x1)
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   mark(and(x0, x1))
   active(U11(tt, x0, x1))
   active(isNatKind(s(x0)))
   active(isNatKind(plus(x0, x1)))
   and(x0, active(x1))
   U31(mark(x0), x1)
   isNatKind(active(x0))
   mark(U13(x0))
   mark(U11(x0, x1, x2))
   and(active(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U11(x0, active(x1), x2)
   U41(x0, x1, active(x2))
   s(mark(x0))
   and(x0, mark(x1))
   mark(U12(x0, x1))
   U11(x0, x1, mark(x2))
   mark(plus(x0, x1))
   active(plus(x0, 0))
   active(U21(tt, x0))
   U13(mark(x0))


----------------------------------------

(5) QTRSRRRProof (EQUIVALENT)
Used ordering:
Knuth-Bendix order [KBO] with precedence:mark_1 > isNatKind_1 > and_2 > plus_2 > s_1 > U41_3 > U31_2 > U22_1 > U21_2 > U13_1 > isNat_1 > U11_3 > U12_2

and weight map:

   mark_1=0
   isNat_1=1
   U13_1=1
   U22_1=1
   s_1=1
   isNatKind_1=1
   U11_3=0
   U12_2=0
   U21_2=0
   U31_2=0
   U41_3=0
   plus_2=0
   and_2=0

The variable weight is 1With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   U11(mark(X1), X2, X3) -> U11(X1, X2, X3)
   U11(X1, mark(X2), X3) -> U11(X1, X2, X3)
   U11(X1, X2, mark(X3)) -> U11(X1, X2, X3)
   U12(mark(X1), X2) -> U12(X1, X2)
   U12(X1, mark(X2)) -> U12(X1, X2)
   isNat(mark(X)) -> isNat(X)
   U13(mark(X)) -> U13(X)
   U21(mark(X1), X2) -> U21(X1, X2)
   U21(X1, mark(X2)) -> U21(X1, X2)
   U22(mark(X)) -> U22(X)
   U31(mark(X1), X2) -> U31(X1, X2)
   U31(X1, mark(X2)) -> U31(X1, X2)
   U41(mark(X1), X2, X3) -> U41(X1, X2, X3)
   U41(X1, mark(X2), X3) -> U41(X1, X2, X3)
   U41(X1, X2, mark(X3)) -> U41(X1, X2, X3)
   s(mark(X)) -> s(X)
   plus(mark(X1), X2) -> plus(X1, X2)
   plus(X1, mark(X2)) -> plus(X1, X2)
   and(mark(X1), X2) -> and(X1, X2)
   and(X1, mark(X2)) -> and(X1, X2)
   isNatKind(mark(X)) -> isNatKind(X)




----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
R is empty.
The set Q consists of the following terms:

   U12(x0, mark(x1))
   active(U13(tt))
   U12(mark(x0), x1)
   U41(x0, active(x1), x2)
   isNat(mark(x0))
   U21(mark(x0), x1)
   isNatKind(mark(x0))
   U41(active(x0), x1, x2)
   U11(x0, x1, active(x2))
   active(isNat(plus(x0, x1)))
   U41(x0, x1, mark(x2))
   active(plus(x0, s(x1)))
   U11(active(x0), x1, x2)
   U41(x0, mark(x1), x2)
   mark(tt)
   mark(0)
   U21(x0, mark(x1))
   U12(x0, active(x1))
   U22(active(x0))
   U31(active(x0), x1)
   active(U12(tt, x0))
   U11(x0, mark(x1), x2)
   mark(U31(x0, x1))
   active(U31(tt, x0))
   mark(isNatKind(x0))
   mark(U22(x0))
   plus(mark(x0), x1)
   U31(x0, mark(x1))
   and(mark(x0), x1)
   U21(active(x0), x1)
   active(and(tt, x0))
   mark(isNat(x0))
   active(isNat(0))
   mark(U41(x0, x1, x2))
   isNat(active(x0))
   active(isNatKind(0))
   U21(x0, active(x1))
   s(active(x0))
   mark(U21(x0, x1))
   U11(mark(x0), x1, x2)
   U31(x0, active(x1))
   active(U22(tt))
   U13(active(x0))
   U22(mark(x0))
   plus(x0, active(x1))
   U12(active(x0), x1)
   plus(active(x0), x1)
   active(U41(tt, x0, x1))
   active(isNat(s(x0)))
   mark(and(x0, x1))
   active(U11(tt, x0, x1))
   active(isNatKind(s(x0)))
   active(isNatKind(plus(x0, x1)))
   and(x0, active(x1))
   U31(mark(x0), x1)
   isNatKind(active(x0))
   mark(U13(x0))
   mark(U11(x0, x1, x2))
   and(active(x0), x1)
   mark(s(x0))
   U41(mark(x0), x1, x2)
   plus(x0, mark(x1))
   U11(x0, active(x1), x2)
   U41(x0, x1, active(x2))
   s(mark(x0))
   and(x0, mark(x1))
   mark(U12(x0, x1))
   U11(x0, x1, mark(x2))
   mark(plus(x0, x1))
   active(plus(x0, 0))
   active(U21(tt, x0))
   U13(mark(x0))


----------------------------------------

(7) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(8)
YES
