YES
proof of /home/ff862203/input_9V6iKI8gVn.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 24 ms]
(2) QTRS
(3) DependencyPairsProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   g(c, g(a(x), y)) -> g(f(a(b)), g(a(y), x))
   f(a(x)) -> c
   a(b) -> d

The set Q consists of the following terms:

   g(c, g(a(x0), x1))
   f(a(x0))
   a(b)


----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a(x_1)) = 1 + x_1
   POL(b) = 0
   POL(c) = 1
   POL(d) = 0
   POL(f(x_1)) = x_1
   POL(g(x_1, x_2)) = 2*x_1 + 2*x_2
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   a(b) -> d




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   g(c, g(a(x), y)) -> g(f(a(b)), g(a(y), x))
   f(a(x)) -> c

The set Q consists of the following terms:

   g(c, g(a(x0), x1))
   f(a(x0))
   a(b)


----------------------------------------

(3) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(c, g(a(x), y)) -> G(f(a(b)), g(a(y), x))
   G(c, g(a(x), y)) -> F(a(b))
   G(c, g(a(x), y)) -> G(a(y), x)

The TRS R consists of the following rules:

   g(c, g(a(x), y)) -> g(f(a(b)), g(a(y), x))
   f(a(x)) -> c

The set Q consists of the following terms:

   g(c, g(a(x0), x1))
   f(a(x0))
   a(b)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 3 less nodes.
----------------------------------------

(6)
TRUE
