YES

Problem 1: 

(VAR vu95NonEmpty M N X X1 X2)
(RULES
au95u95and(tt,X) -> mark(X)
au95u95and(X1,X2) -> and(X1,X2)
au95u95plus(N,num0) -> mark(N)
au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
au95u95plus(X1,X2) -> plus(X1,X2)
au95u95x(N,num0) -> num0
au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
au95u95x(X1,X2) -> x(X1,X2)
mark(num0) -> num0
mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
mark(s(X)) -> s(mark(X))
mark(tt) -> tt
mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
)
 
(STRATEGY INNERMOST)

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95PLUS(N,num0) -> MARK(N)
 AU95U95PLUS(N,s(M)) -> AU95U95PLUS(mark(N),mark(M))
 AU95U95PLUS(N,s(M)) -> MARK(M)
 AU95U95PLUS(N,s(M)) -> MARK(N)
 AU95U95X(N,s(M)) -> AU95U95PLUS(au95u95x(mark(N),mark(M)),mark(N))
 AU95U95X(N,s(M)) -> AU95U95X(mark(N),mark(M))
 AU95U95X(N,s(M)) -> MARK(M)
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95PLUS(N,num0) -> MARK(N)
 AU95U95PLUS(N,s(M)) -> AU95U95PLUS(mark(N),mark(M))
 AU95U95PLUS(N,s(M)) -> MARK(M)
 AU95U95PLUS(N,s(M)) -> MARK(N)
 AU95U95X(N,s(M)) -> AU95U95PLUS(au95u95x(mark(N),mark(M)),mark(N))
 AU95U95X(N,s(M)) -> AU95U95X(mark(N),mark(M))
 AU95U95X(N,s(M)) -> MARK(M)
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95PLUS(N,num0) -> MARK(N)
 AU95U95PLUS(N,s(M)) -> AU95U95PLUS(mark(N),mark(M))
 AU95U95PLUS(N,s(M)) -> MARK(M)
 AU95U95PLUS(N,s(M)) -> MARK(N)
 AU95U95X(N,s(M)) -> AU95U95PLUS(au95u95x(mark(N),mark(M)),mark(N))
 AU95U95X(N,s(M)) -> AU95U95X(mark(N),mark(M))
 AU95U95X(N,s(M)) -> MARK(M)
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))

Problem 1: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95AND(tt,X) -> MARK(X)
 AU95U95PLUS(N,num0) -> MARK(N)
 AU95U95PLUS(N,s(M)) -> AU95U95PLUS(mark(N),mark(M))
 AU95U95PLUS(N,s(M)) -> MARK(M)
 AU95U95PLUS(N,s(M)) -> MARK(N)
 AU95U95X(N,s(M)) -> AU95U95PLUS(au95u95x(mark(N),mark(M)),mark(N))
 AU95U95X(N,s(M)) -> AU95U95X(mark(N),mark(M))
 AU95U95X(N,s(M)) -> MARK(M)
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
-> Usable rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95and](X1,X2) = 2.X1.X2 + 2.X1 + X2 + 2
[au95u95plus](X1,X2) = X1 + 2.X2 + 2
[au95u95x](X1,X2) = X1.X2 + 2.X1 + X2
[mark](X) = X
[num0] = 2
[and](X1,X2) = 2.X1.X2 + 2.X1 + X2 + 2
[fSNonEmpty] = 0
[plus](X1,X2) = X1 + 2.X2 + 2
[s](X) = X + 2
[tt] = 1
[x](X1,X2) = X1.X2 + 2.X1 + X2
[AU95U95AND](X1,X2) = X1.X2 + 2.X1 + 2.X2 + 1
[AU95U95PLUS](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95X](X1,X2) = 2.X1.X2 + 2.X1 + 2.X2
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95PLUS(N,num0) -> MARK(N)
 AU95U95PLUS(N,s(M)) -> AU95U95PLUS(mark(N),mark(M))
 AU95U95PLUS(N,s(M)) -> MARK(M)
 AU95U95PLUS(N,s(M)) -> MARK(N)
 AU95U95X(N,s(M)) -> AU95U95PLUS(au95u95x(mark(N),mark(M)),mark(N))
 AU95U95X(N,s(M)) -> AU95U95X(mark(N),mark(M))
 AU95U95X(N,s(M)) -> MARK(M)
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> AU95U95AND(mark(X1),X2)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95PLUS(N,num0) -> MARK(N)
 AU95U95PLUS(N,s(M)) -> AU95U95PLUS(mark(N),mark(M))
 AU95U95PLUS(N,s(M)) -> MARK(M)
 AU95U95PLUS(N,s(M)) -> MARK(N)
 AU95U95X(N,s(M)) -> AU95U95PLUS(au95u95x(mark(N),mark(M)),mark(N))
 AU95U95X(N,s(M)) -> AU95U95X(mark(N),mark(M))
 AU95U95X(N,s(M)) -> MARK(M)
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))

Problem 1: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95PLUS(N,num0) -> MARK(N)
 AU95U95PLUS(N,s(M)) -> AU95U95PLUS(mark(N),mark(M))
 AU95U95PLUS(N,s(M)) -> MARK(M)
 AU95U95PLUS(N,s(M)) -> MARK(N)
 AU95U95X(N,s(M)) -> AU95U95PLUS(au95u95x(mark(N),mark(M)),mark(N))
 AU95U95X(N,s(M)) -> AU95U95X(mark(N),mark(M))
 AU95U95X(N,s(M)) -> MARK(M)
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
-> Usable rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95and](X1,X2) = X1 + X2
[au95u95plus](X1,X2) = X1 + 2.X2 + 2
[au95u95x](X1,X2) = X1.X2 + 2.X1 + X2 + 2
[mark](X) = X
[num0] = 2
[and](X1,X2) = X1 + X2
[fSNonEmpty] = 0
[plus](X1,X2) = X1 + 2.X2 + 2
[s](X) = X + 2
[tt] = 0
[x](X1,X2) = X1.X2 + 2.X1 + X2 + 2
[AU95U95AND](X1,X2) = 0
[AU95U95PLUS](X1,X2) = 2.X1 + 2.X2
[AU95U95X](X1,X2) = 2.X1.X2 + 2.X1 + 2.X2
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95PLUS(N,s(M)) -> AU95U95PLUS(mark(N),mark(M))
 AU95U95PLUS(N,s(M)) -> MARK(M)
 AU95U95PLUS(N,s(M)) -> MARK(N)
 AU95U95X(N,s(M)) -> AU95U95PLUS(au95u95x(mark(N),mark(M)),mark(N))
 AU95U95X(N,s(M)) -> AU95U95X(mark(N),mark(M))
 AU95U95X(N,s(M)) -> MARK(M)
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95PLUS(N,s(M)) -> AU95U95PLUS(mark(N),mark(M))
 AU95U95PLUS(N,s(M)) -> MARK(M)
 AU95U95PLUS(N,s(M)) -> MARK(N)
 AU95U95X(N,s(M)) -> AU95U95PLUS(au95u95x(mark(N),mark(M)),mark(N))
 AU95U95X(N,s(M)) -> AU95U95X(mark(N),mark(M))
 AU95U95X(N,s(M)) -> MARK(M)
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))

Problem 1: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95PLUS(N,s(M)) -> AU95U95PLUS(mark(N),mark(M))
 AU95U95PLUS(N,s(M)) -> MARK(M)
 AU95U95PLUS(N,s(M)) -> MARK(N)
 AU95U95X(N,s(M)) -> AU95U95PLUS(au95u95x(mark(N),mark(M)),mark(N))
 AU95U95X(N,s(M)) -> AU95U95X(mark(N),mark(M))
 AU95U95X(N,s(M)) -> MARK(M)
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
-> Usable rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95and](X1,X2) = 2.X1.X2 + 2.X1 + X2 + 2
[au95u95plus](X1,X2) = X1 + 2.X2 + 2
[au95u95x](X1,X2) = X1.X2 + 2.X1 + X2 + 2
[mark](X) = X
[num0] = 1
[and](X1,X2) = 2.X1.X2 + 2.X1 + X2 + 2
[fSNonEmpty] = 0
[plus](X1,X2) = X1 + 2.X2 + 2
[s](X) = X + 2
[tt] = 2
[x](X1,X2) = X1.X2 + 2.X1 + X2 + 2
[AU95U95AND](X1,X2) = 0
[AU95U95PLUS](X1,X2) = 2.X1 + 2.X2 + 1
[AU95U95X](X1,X2) = 2.X1.X2 + 2.X1 + 2.X2 + 1
[MARK](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95PLUS(N,s(M)) -> MARK(M)
 AU95U95PLUS(N,s(M)) -> MARK(N)
 AU95U95X(N,s(M)) -> AU95U95PLUS(au95u95x(mark(N),mark(M)),mark(N))
 AU95U95X(N,s(M)) -> AU95U95X(mark(N),mark(M))
 AU95U95X(N,s(M)) -> MARK(M)
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95PLUS(N,s(M)) -> MARK(M)
 AU95U95PLUS(N,s(M)) -> MARK(N)
 AU95U95X(N,s(M)) -> AU95U95PLUS(au95u95x(mark(N),mark(M)),mark(N))
 AU95U95X(N,s(M)) -> AU95U95X(mark(N),mark(M))
 AU95U95X(N,s(M)) -> MARK(M)
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))

Problem 1: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95PLUS(N,s(M)) -> MARK(M)
 AU95U95PLUS(N,s(M)) -> MARK(N)
 AU95U95X(N,s(M)) -> AU95U95PLUS(au95u95x(mark(N),mark(M)),mark(N))
 AU95U95X(N,s(M)) -> AU95U95X(mark(N),mark(M))
 AU95U95X(N,s(M)) -> MARK(M)
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
-> Usable rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95and](X1,X2) = 2.X1.X2 + 2.X1 + X2 + 2
[au95u95plus](X1,X2) = X1 + 2.X2 + 1
[au95u95x](X1,X2) = X1.X2 + 2.X1 + X2
[mark](X) = X
[num0] = 1
[and](X1,X2) = 2.X1.X2 + 2.X1 + X2 + 2
[fSNonEmpty] = 0
[plus](X1,X2) = X1 + 2.X2 + 1
[s](X) = X + 2
[tt] = 2
[x](X1,X2) = X1.X2 + 2.X1 + X2
[AU95U95AND](X1,X2) = 0
[AU95U95PLUS](X1,X2) = 2.X1 + 2.X2 + 1
[AU95U95X](X1,X2) = 2.X1.X2 + 2.X1 + 2.X2
[MARK](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95PLUS(N,s(M)) -> MARK(N)
 AU95U95X(N,s(M)) -> AU95U95PLUS(au95u95x(mark(N),mark(M)),mark(N))
 AU95U95X(N,s(M)) -> AU95U95X(mark(N),mark(M))
 AU95U95X(N,s(M)) -> MARK(M)
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95PLUS(N,s(M)) -> MARK(N)
 AU95U95X(N,s(M)) -> AU95U95PLUS(au95u95x(mark(N),mark(M)),mark(N))
 AU95U95X(N,s(M)) -> AU95U95X(mark(N),mark(M))
 AU95U95X(N,s(M)) -> MARK(M)
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))

Problem 1: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95PLUS(N,s(M)) -> MARK(N)
 AU95U95X(N,s(M)) -> AU95U95PLUS(au95u95x(mark(N),mark(M)),mark(N))
 AU95U95X(N,s(M)) -> AU95U95X(mark(N),mark(M))
 AU95U95X(N,s(M)) -> MARK(M)
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
-> Usable rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95and](X1,X2) = X1.X2 + 2.X1 + 2.X2 + 2
[au95u95plus](X1,X2) = X1 + X2 + 2
[au95u95x](X1,X2) = X1.X2 + 2.X1 + X2 + 2
[mark](X) = X
[num0] = 2
[and](X1,X2) = X1.X2 + 2.X1 + 2.X2 + 2
[fSNonEmpty] = 0
[plus](X1,X2) = X1 + X2 + 2
[s](X) = X + 2
[tt] = 1
[x](X1,X2) = X1.X2 + 2.X1 + X2 + 2
[AU95U95AND](X1,X2) = 0
[AU95U95PLUS](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95X](X1,X2) = 2.X1.X2 + 2.X1 + 2.X2 + 2
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95X(N,s(M)) -> AU95U95PLUS(au95u95x(mark(N),mark(M)),mark(N))
 AU95U95X(N,s(M)) -> AU95U95X(mark(N),mark(M))
 AU95U95X(N,s(M)) -> MARK(M)
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> AU95U95PLUS(mark(X1),mark(X2))
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95X(N,s(M)) -> AU95U95X(mark(N),mark(M))
 AU95U95X(N,s(M)) -> MARK(M)
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))

Problem 1: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95X(N,s(M)) -> AU95U95X(mark(N),mark(M))
 AU95U95X(N,s(M)) -> MARK(M)
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
-> Usable rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95and](X1,X2) = 2.X1.X2 + 2.X1 + X2 + 2
[au95u95plus](X1,X2) = X1 + 2.X2 + 2
[au95u95x](X1,X2) = X1.X2 + 2.X1 + 2.X2 + 2
[mark](X) = X
[num0] = 2
[and](X1,X2) = 2.X1.X2 + 2.X1 + X2 + 2
[fSNonEmpty] = 0
[plus](X1,X2) = X1 + 2.X2 + 2
[s](X) = X + 2
[tt] = 2
[x](X1,X2) = X1.X2 + 2.X1 + 2.X2 + 2
[AU95U95AND](X1,X2) = 0
[AU95U95PLUS](X1,X2) = 0
[AU95U95X](X1,X2) = 2.X1 + 2.X2 + 2
[MARK](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95X(N,s(M)) -> MARK(M)
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95X(N,s(M)) -> MARK(M)
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))

Problem 1: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95X(N,s(M)) -> MARK(M)
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
-> Usable rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95and](X1,X2) = 2.X1.X2 + 2.X1 + X2 + 2
[au95u95plus](X1,X2) = X1 + 2.X2 + 2
[au95u95x](X1,X2) = 2.X1.X2 + 2.X1 + 2.X2
[mark](X) = X
[num0] = 2
[and](X1,X2) = 2.X1.X2 + 2.X1 + X2 + 2
[fSNonEmpty] = 0
[plus](X1,X2) = X1 + 2.X2 + 2
[s](X) = X + 2
[tt] = 0
[x](X1,X2) = 2.X1.X2 + 2.X1 + 2.X2
[AU95U95AND](X1,X2) = 0
[AU95U95PLUS](X1,X2) = 0
[AU95U95X](X1,X2) = 2.X1.X2 + 2.X1 + 2.X2 + 2
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))

Problem 1: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95X(N,s(M)) -> MARK(N)
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
-> Usable rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
->Interpretation type:
 Simple mixed
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95and](X1,X2) = X1.X2 + 2.X1 + 2.X2 + 2
[au95u95plus](X1,X2) = X1 + 2.X2 + 2
[au95u95x](X1,X2) = 2.X1.X2 + 2.X1 + 2.X2 + 2
[mark](X) = X
[num0] = 2
[and](X1,X2) = X1.X2 + 2.X1 + 2.X2 + 2
[fSNonEmpty] = 0
[plus](X1,X2) = X1 + 2.X2 + 2
[s](X) = X + 2
[tt] = 2
[x](X1,X2) = 2.X1.X2 + 2.X1 + 2.X2 + 2
[AU95U95AND](X1,X2) = 0
[AU95U95PLUS](X1,X2) = 0
[AU95U95X](X1,X2) = 2.X1.X2 + X2 + 1
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> AU95U95X(mark(X1),mark(X2))
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))

Problem 1: 

Subterm Processor:
-> Pairs:
 MARK(and(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X1)
 MARK(plus(X1,X2)) -> MARK(X2)
 MARK(s(X)) -> MARK(X)
 MARK(x(X1,X2)) -> MARK(X1)
 MARK(x(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
->Projection:
 pi(MARK) = 1

Problem 1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 au95u95and(tt,X) -> mark(X)
 au95u95and(X1,X2) -> and(X1,X2)
 au95u95plus(N,num0) -> mark(N)
 au95u95plus(N,s(M)) -> s(au95u95plus(mark(N),mark(M)))
 au95u95plus(X1,X2) -> plus(X1,X2)
 au95u95x(N,num0) -> num0
 au95u95x(N,s(M)) -> au95u95plus(au95u95x(mark(N),mark(M)),mark(N))
 au95u95x(X1,X2) -> x(X1,X2)
 mark(num0) -> num0
 mark(and(X1,X2)) -> au95u95and(mark(X1),X2)
 mark(plus(X1,X2)) -> au95u95plus(mark(X1),mark(X2))
 mark(s(X)) -> s(mark(X))
 mark(tt) -> tt
 mark(x(X1,X2)) -> au95u95x(mark(X1),mark(X2))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
