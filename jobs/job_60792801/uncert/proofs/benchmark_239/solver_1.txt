YES
proof of /home/ff862203/input_6E7oB9W2iE.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSToCSRProof [SOUND, 0 ms]
(2) CSR
(3) CSRRRRProof [EQUIVALENT, 25 ms]
(4) CSR
(5) CSRRRRProof [EQUIVALENT, 0 ms]
(6) CSR
(7) CSRRRRProof [EQUIVALENT, 0 ms]
(8) CSR
(9) CSRRRRProof [EQUIVALENT, 0 ms]
(10) CSR
(11) CSRRRRProof [EQUIVALENT, 0 ms]
(12) CSR
(13) CSRRRRProof [EQUIVALENT, 0 ms]
(14) CSR
(15) RisEmptyProof [EQUIVALENT, 0 ms]
(16) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(nats) -> mark(adx(zeros))
   active(zeros) -> mark(cons(0, zeros))
   active(incr(cons(X, Y))) -> mark(cons(s(X), incr(Y)))
   active(adx(cons(X, Y))) -> mark(incr(cons(X, adx(Y))))
   active(hd(cons(X, Y))) -> mark(X)
   active(tl(cons(X, Y))) -> mark(Y)
   active(adx(X)) -> adx(active(X))
   active(incr(X)) -> incr(active(X))
   active(hd(X)) -> hd(active(X))
   active(tl(X)) -> tl(active(X))
   adx(mark(X)) -> mark(adx(X))
   incr(mark(X)) -> mark(incr(X))
   hd(mark(X)) -> mark(hd(X))
   tl(mark(X)) -> mark(tl(X))
   proper(nats) -> ok(nats)
   proper(adx(X)) -> adx(proper(X))
   proper(zeros) -> ok(zeros)
   proper(cons(X1, X2)) -> cons(proper(X1), proper(X2))
   proper(0) -> ok(0)
   proper(incr(X)) -> incr(proper(X))
   proper(s(X)) -> s(proper(X))
   proper(hd(X)) -> hd(proper(X))
   proper(tl(X)) -> tl(proper(X))
   adx(ok(X)) -> ok(adx(X))
   cons(ok(X1), ok(X2)) -> ok(cons(X1, X2))
   incr(ok(X)) -> ok(incr(X))
   s(ok(X)) -> ok(s(X))
   hd(ok(X)) -> ok(hd(X))
   tl(ok(X)) -> ok(tl(X))
   top(mark(X)) -> top(proper(X))
   top(ok(X)) -> top(active(X))

The set Q consists of the following terms:

   active(zeros)
   proper(hd(x0))
   active(adx(x0))
   tl(mark(x0))
   proper(nats)
   top(mark(x0))
   incr(ok(x0))
   proper(cons(x0, x1))
   active(incr(x0))
   active(hd(x0))
   proper(adx(x0))
   proper(0)
   active(nats)
   hd(ok(x0))
   s(ok(x0))
   proper(tl(x0))
   adx(ok(x0))
   proper(incr(x0))
   hd(mark(x0))
   adx(mark(x0))
   active(tl(x0))
   cons(ok(x0), ok(x1))
   incr(mark(x0))
   proper(zeros)
   tl(ok(x0))
   top(ok(x0))
   proper(s(x0))


----------------------------------------

(1) QTRSToCSRProof (SOUND)
The following Q TRS is given: Q restricted rewrite system:
The TRS R consists of the following rules:

   active(nats) -> mark(adx(zeros))
   active(zeros) -> mark(cons(0, zeros))
   active(incr(cons(X, Y))) -> mark(cons(s(X), incr(Y)))
   active(adx(cons(X, Y))) -> mark(incr(cons(X, adx(Y))))
   active(hd(cons(X, Y))) -> mark(X)
   active(tl(cons(X, Y))) -> mark(Y)
   active(adx(X)) -> adx(active(X))
   active(incr(X)) -> incr(active(X))
   active(hd(X)) -> hd(active(X))
   active(tl(X)) -> tl(active(X))
   adx(mark(X)) -> mark(adx(X))
   incr(mark(X)) -> mark(incr(X))
   hd(mark(X)) -> mark(hd(X))
   tl(mark(X)) -> mark(tl(X))
   proper(nats) -> ok(nats)
   proper(adx(X)) -> adx(proper(X))
   proper(zeros) -> ok(zeros)
   proper(cons(X1, X2)) -> cons(proper(X1), proper(X2))
   proper(0) -> ok(0)
   proper(incr(X)) -> incr(proper(X))
   proper(s(X)) -> s(proper(X))
   proper(hd(X)) -> hd(proper(X))
   proper(tl(X)) -> tl(proper(X))
   adx(ok(X)) -> ok(adx(X))
   cons(ok(X1), ok(X2)) -> ok(cons(X1, X2))
   incr(ok(X)) -> ok(incr(X))
   s(ok(X)) -> ok(s(X))
   hd(ok(X)) -> ok(hd(X))
   tl(ok(X)) -> ok(tl(X))
   top(mark(X)) -> top(proper(X))
   top(ok(X)) -> top(active(X))

The set Q consists of the following terms:

   active(zeros)
   proper(hd(x0))
   active(adx(x0))
   tl(mark(x0))
   proper(nats)
   top(mark(x0))
   incr(ok(x0))
   proper(cons(x0, x1))
   active(incr(x0))
   active(hd(x0))
   proper(adx(x0))
   proper(0)
   active(nats)
   hd(ok(x0))
   s(ok(x0))
   proper(tl(x0))
   adx(ok(x0))
   proper(incr(x0))
   hd(mark(x0))
   adx(mark(x0))
   active(tl(x0))
   cons(ok(x0), ok(x1))
   incr(mark(x0))
   proper(zeros)
   tl(ok(x0))
   top(ok(x0))
   proper(s(x0))

Special symbols used for the transformation (see [GM04]):
top: top_1, active: active_1, mark: mark_1, ok: ok_1, proper: proper_1
The replacement map contains the following entries:

nats: empty set
adx: {1}
zeros: empty set
cons: empty set
0: empty set
incr: {1}
s: empty set
hd: {1}
tl: {1}
The QTRS contained just a subset of rules created by the complete Giesl-Middeldorp transformation. Therefore, the inverse transformation is sound, but not necessarily complete.
----------------------------------------

(2)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   nats -> adx(zeros)
   zeros -> cons(0, zeros)
   incr(cons(X, Y)) -> cons(s(X), incr(Y))
   adx(cons(X, Y)) -> incr(cons(X, adx(Y)))
   hd(cons(X, Y)) -> X
   tl(cons(X, Y)) -> Y

The replacement map contains the following entries:

nats: empty set
adx: {1}
zeros: empty set
cons: empty set
0: empty set
incr: {1}
s: empty set
hd: {1}
tl: {1}

----------------------------------------

(3) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   nats -> adx(zeros)
   zeros -> cons(0, zeros)
   incr(cons(X, Y)) -> cons(s(X), incr(Y))
   adx(cons(X, Y)) -> incr(cons(X, adx(Y)))
   hd(cons(X, Y)) -> X
   tl(cons(X, Y)) -> Y

The replacement map contains the following entries:

nats: empty set
adx: {1}
zeros: empty set
cons: empty set
0: empty set
incr: {1}
s: empty set
hd: {1}
tl: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(adx(x_1)) = x_1
   POL(cons(x_1, x_2)) = x_1 + x_2
   POL(hd(x_1)) = 2*x_1
   POL(incr(x_1)) = x_1
   POL(nats) = 2
   POL(s(x_1)) = 0
   POL(tl(x_1)) = x_1
   POL(zeros) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   nats -> adx(zeros)




----------------------------------------

(4)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   incr(cons(X, Y)) -> cons(s(X), incr(Y))
   adx(cons(X, Y)) -> incr(cons(X, adx(Y)))
   hd(cons(X, Y)) -> X
   tl(cons(X, Y)) -> Y

The replacement map contains the following entries:

adx: {1}
zeros: empty set
cons: empty set
0: empty set
incr: {1}
s: empty set
hd: {1}
tl: {1}

----------------------------------------

(5) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   incr(cons(X, Y)) -> cons(s(X), incr(Y))
   adx(cons(X, Y)) -> incr(cons(X, adx(Y)))
   hd(cons(X, Y)) -> X
   tl(cons(X, Y)) -> Y

The replacement map contains the following entries:

adx: {1}
zeros: empty set
cons: empty set
0: empty set
incr: {1}
s: empty set
hd: {1}
tl: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(adx(x_1)) = x_1
   POL(cons(x_1, x_2)) = x_1 + x_2
   POL(hd(x_1)) = x_1
   POL(incr(x_1)) = x_1
   POL(s(x_1)) = x_1
   POL(tl(x_1)) = 1 + x_1
   POL(zeros) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   tl(cons(X, Y)) -> Y




----------------------------------------

(6)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   incr(cons(X, Y)) -> cons(s(X), incr(Y))
   adx(cons(X, Y)) -> incr(cons(X, adx(Y)))
   hd(cons(X, Y)) -> X

The replacement map contains the following entries:

adx: {1}
zeros: empty set
cons: empty set
0: empty set
incr: {1}
s: empty set
hd: {1}

----------------------------------------

(7) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   incr(cons(X, Y)) -> cons(s(X), incr(Y))
   adx(cons(X, Y)) -> incr(cons(X, adx(Y)))
   hd(cons(X, Y)) -> X

The replacement map contains the following entries:

adx: {1}
zeros: empty set
cons: empty set
0: empty set
incr: {1}
s: empty set
hd: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(adx(x_1)) = x_1
   POL(cons(x_1, x_2)) = 2*x_1
   POL(hd(x_1)) = 1 + 2*x_1
   POL(incr(x_1)) = x_1
   POL(s(x_1)) = x_1
   POL(zeros) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   hd(cons(X, Y)) -> X




----------------------------------------

(8)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   incr(cons(X, Y)) -> cons(s(X), incr(Y))
   adx(cons(X, Y)) -> incr(cons(X, adx(Y)))

The replacement map contains the following entries:

adx: {1}
zeros: empty set
cons: empty set
0: empty set
incr: {1}
s: empty set

----------------------------------------

(9) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   incr(cons(X, Y)) -> cons(s(X), incr(Y))
   adx(cons(X, Y)) -> incr(cons(X, adx(Y)))

The replacement map contains the following entries:

adx: {1}
zeros: empty set
cons: empty set
0: empty set
incr: {1}
s: empty set
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(adx(x_1)) = 1 + x_1
   POL(cons(x_1, x_2)) = 1 + x_1
   POL(incr(x_1)) = 1 + x_1
   POL(s(x_1)) = x_1
   POL(zeros) = 1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   incr(cons(X, Y)) -> cons(s(X), incr(Y))




----------------------------------------

(10)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   adx(cons(X, Y)) -> incr(cons(X, adx(Y)))

The replacement map contains the following entries:

adx: {1}
zeros: empty set
cons: empty set
0: empty set
incr: {1}

----------------------------------------

(11) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   adx(cons(X, Y)) -> incr(cons(X, adx(Y)))

The replacement map contains the following entries:

adx: {1}
zeros: empty set
cons: empty set
0: empty set
incr: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(adx(x_1)) = 1 + 2*x_1
   POL(cons(x_1, x_2)) = 2 + x_1
   POL(incr(x_1)) = x_1
   POL(zeros) = 2
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   adx(cons(X, Y)) -> incr(cons(X, adx(Y)))




----------------------------------------

(12)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)

The replacement map contains the following entries:

zeros: empty set
cons: empty set
0: empty set

----------------------------------------

(13) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)

The replacement map contains the following entries:

zeros: empty set
cons: empty set
0: empty set
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 1
   POL(cons(x_1, x_2)) = 0
   POL(zeros) = 1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   zeros -> cons(0, zeros)




----------------------------------------

(14)
Obligation:
Context-sensitive rewrite system:
R is empty.

----------------------------------------

(15) RisEmptyProof (EQUIVALENT)
The CSR R is empty. Hence, termination is trivially proven.
----------------------------------------

(16)
YES
