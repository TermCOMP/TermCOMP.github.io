YES
proof of /home/ff862203/input_hTg9Er82vQ.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) QDP
(5) UsableRulesProof [EQUIVALENT, 0 ms]
(6) QDP
(7) QReductionProof [EQUIVALENT, 0 ms]
(8) QDP
(9) QDPSizeChangeProof [EQUIVALENT, 0 ms]
(10) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__f(X, g(X), Y) -> a__f(Y, Y, Y)
   a__g(b) -> c
   a__b -> c
   mark(f(X1, X2, X3)) -> a__f(X1, X2, X3)
   mark(g(X)) -> a__g(mark(X))
   mark(b) -> a__b
   mark(c) -> c
   a__f(X1, X2, X3) -> f(X1, X2, X3)
   a__g(X) -> g(X)
   a__b -> b

The set Q consists of the following terms:

   mark(b)
   mark(c)
   mark(f(x0, x1, x2))
   a__f(x0, x1, x2)
   a__g(x0)
   mark(g(x0))
   a__b


----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__F(X, g(X), Y) -> A__F(Y, Y, Y)
   MARK(f(X1, X2, X3)) -> A__F(X1, X2, X3)
   MARK(g(X)) -> A__G(mark(X))
   MARK(g(X)) -> MARK(X)
   MARK(b) -> A__B

The TRS R consists of the following rules:

   a__f(X, g(X), Y) -> a__f(Y, Y, Y)
   a__g(b) -> c
   a__b -> c
   mark(f(X1, X2, X3)) -> a__f(X1, X2, X3)
   mark(g(X)) -> a__g(mark(X))
   mark(b) -> a__b
   mark(c) -> c
   a__f(X1, X2, X3) -> f(X1, X2, X3)
   a__g(X) -> g(X)
   a__b -> b

The set Q consists of the following terms:

   mark(b)
   mark(c)
   mark(f(x0, x1, x2))
   a__f(x0, x1, x2)
   a__g(x0)
   mark(g(x0))
   a__b

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 4 less nodes.
----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(g(X)) -> MARK(X)

The TRS R consists of the following rules:

   a__f(X, g(X), Y) -> a__f(Y, Y, Y)
   a__g(b) -> c
   a__b -> c
   mark(f(X1, X2, X3)) -> a__f(X1, X2, X3)
   mark(g(X)) -> a__g(mark(X))
   mark(b) -> a__b
   mark(c) -> c
   a__f(X1, X2, X3) -> f(X1, X2, X3)
   a__g(X) -> g(X)
   a__b -> b

The set Q consists of the following terms:

   mark(b)
   mark(c)
   mark(f(x0, x1, x2))
   a__f(x0, x1, x2)
   a__g(x0)
   mark(g(x0))
   a__b

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(g(X)) -> MARK(X)

R is empty.
The set Q consists of the following terms:

   mark(b)
   mark(c)
   mark(f(x0, x1, x2))
   a__f(x0, x1, x2)
   a__g(x0)
   mark(g(x0))
   a__b

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   mark(b)
   mark(c)
   mark(f(x0, x1, x2))
   a__f(x0, x1, x2)
   a__g(x0)
   mark(g(x0))
   a__b


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(g(X)) -> MARK(X)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MARK(g(X)) -> MARK(X)
The graph contains the following edges 1 > 1


----------------------------------------

(10)
YES
