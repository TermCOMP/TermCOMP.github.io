YES
proof of /home/ff862203/input_M15fOoTFl4.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QDP
        (6) UsableRulesProof [EQUIVALENT, 0 ms]
        (7) QDP
        (8) QReductionProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (11) YES
    (12) QDP
        (13) UsableRulesProof [EQUIVALENT, 0 ms]
        (14) QDP
        (15) QReductionProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (18) YES
    (19) QDP
        (20) UsableRulesProof [EQUIVALENT, 0 ms]
        (21) QDP
        (22) QReductionProof [EQUIVALENT, 0 ms]
        (23) QDP
        (24) TransformationProof [EQUIVALENT, 0 ms]
        (25) QDP
        (26) DependencyGraphProof [EQUIVALENT, 0 ms]
        (27) TRUE
    (28) QDP
        (29) UsableRulesProof [EQUIVALENT, 0 ms]
        (30) QDP
        (31) QReductionProof [EQUIVALENT, 0 ms]
        (32) QDP
        (33) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (34) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(f(X, g(X), Y)) -> mark(f(Y, Y, Y))
   active(g(b)) -> mark(c)
   active(b) -> mark(c)
   mark(f(X1, X2, X3)) -> active(f(X1, X2, X3))
   mark(g(X)) -> active(g(mark(X)))
   mark(b) -> active(b)
   mark(c) -> active(c)
   f(mark(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, mark(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, mark(X3)) -> f(X1, X2, X3)
   f(active(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, active(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, active(X3)) -> f(X1, X2, X3)
   g(mark(X)) -> g(X)
   g(active(X)) -> g(X)

The set Q consists of the following terms:

   g(mark(x0))
   mark(c)
   mark(f(x0, x1, x2))
   active(f(x0, g(x0), x1))
   active(b)
   f(x0, x1, active(x2))
   f(active(x0), x1, x2)
   g(active(x0))
   mark(b)
   f(x0, x1, mark(x2))
   f(x0, mark(x1), x2)
   f(mark(x0), x1, x2)
   f(x0, active(x1), x2)
   active(g(b))
   mark(g(x0))


----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACTIVE(f(X, g(X), Y)) -> MARK(f(Y, Y, Y))
   ACTIVE(f(X, g(X), Y)) -> F(Y, Y, Y)
   ACTIVE(g(b)) -> MARK(c)
   ACTIVE(b) -> MARK(c)
   MARK(f(X1, X2, X3)) -> ACTIVE(f(X1, X2, X3))
   MARK(g(X)) -> ACTIVE(g(mark(X)))
   MARK(g(X)) -> G(mark(X))
   MARK(g(X)) -> MARK(X)
   MARK(b) -> ACTIVE(b)
   MARK(c) -> ACTIVE(c)
   F(mark(X1), X2, X3) -> F(X1, X2, X3)
   F(X1, mark(X2), X3) -> F(X1, X2, X3)
   F(X1, X2, mark(X3)) -> F(X1, X2, X3)
   F(active(X1), X2, X3) -> F(X1, X2, X3)
   F(X1, active(X2), X3) -> F(X1, X2, X3)
   F(X1, X2, active(X3)) -> F(X1, X2, X3)
   G(mark(X)) -> G(X)
   G(active(X)) -> G(X)

The TRS R consists of the following rules:

   active(f(X, g(X), Y)) -> mark(f(Y, Y, Y))
   active(g(b)) -> mark(c)
   active(b) -> mark(c)
   mark(f(X1, X2, X3)) -> active(f(X1, X2, X3))
   mark(g(X)) -> active(g(mark(X)))
   mark(b) -> active(b)
   mark(c) -> active(c)
   f(mark(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, mark(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, mark(X3)) -> f(X1, X2, X3)
   f(active(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, active(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, active(X3)) -> f(X1, X2, X3)
   g(mark(X)) -> g(X)
   g(active(X)) -> g(X)

The set Q consists of the following terms:

   g(mark(x0))
   mark(c)
   mark(f(x0, x1, x2))
   active(f(x0, g(x0), x1))
   active(b)
   f(x0, x1, active(x2))
   f(active(x0), x1, x2)
   g(active(x0))
   mark(b)
   f(x0, x1, mark(x2))
   f(x0, mark(x1), x2)
   f(mark(x0), x1, x2)
   f(x0, active(x1), x2)
   active(g(b))
   mark(g(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 4 SCCs with 7 less nodes.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(active(X)) -> G(X)
   G(mark(X)) -> G(X)

The TRS R consists of the following rules:

   active(f(X, g(X), Y)) -> mark(f(Y, Y, Y))
   active(g(b)) -> mark(c)
   active(b) -> mark(c)
   mark(f(X1, X2, X3)) -> active(f(X1, X2, X3))
   mark(g(X)) -> active(g(mark(X)))
   mark(b) -> active(b)
   mark(c) -> active(c)
   f(mark(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, mark(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, mark(X3)) -> f(X1, X2, X3)
   f(active(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, active(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, active(X3)) -> f(X1, X2, X3)
   g(mark(X)) -> g(X)
   g(active(X)) -> g(X)

The set Q consists of the following terms:

   g(mark(x0))
   mark(c)
   mark(f(x0, x1, x2))
   active(f(x0, g(x0), x1))
   active(b)
   f(x0, x1, active(x2))
   f(active(x0), x1, x2)
   g(active(x0))
   mark(b)
   f(x0, x1, mark(x2))
   f(x0, mark(x1), x2)
   f(mark(x0), x1, x2)
   f(x0, active(x1), x2)
   active(g(b))
   mark(g(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(6) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(active(X)) -> G(X)
   G(mark(X)) -> G(X)

R is empty.
The set Q consists of the following terms:

   g(mark(x0))
   mark(c)
   mark(f(x0, x1, x2))
   active(f(x0, g(x0), x1))
   active(b)
   f(x0, x1, active(x2))
   f(active(x0), x1, x2)
   g(active(x0))
   mark(b)
   f(x0, x1, mark(x2))
   f(x0, mark(x1), x2)
   f(mark(x0), x1, x2)
   f(x0, active(x1), x2)
   active(g(b))
   mark(g(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   g(mark(x0))
   f(x0, x1, active(x2))
   f(active(x0), x1, x2)
   g(active(x0))
   f(x0, x1, mark(x2))
   f(x0, mark(x1), x2)
   f(mark(x0), x1, x2)
   f(x0, active(x1), x2)


----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(active(X)) -> G(X)
   G(mark(X)) -> G(X)

R is empty.
The set Q consists of the following terms:

   mark(c)
   mark(f(x0, x1, x2))
   active(f(x0, g(x0), x1))
   active(b)
   mark(b)
   active(g(b))
   mark(g(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*G(active(X)) -> G(X)
The graph contains the following edges 1 > 1


*G(mark(X)) -> G(X)
The graph contains the following edges 1 > 1


----------------------------------------

(11)
YES

----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(X1, mark(X2), X3) -> F(X1, X2, X3)
   F(mark(X1), X2, X3) -> F(X1, X2, X3)
   F(X1, X2, mark(X3)) -> F(X1, X2, X3)
   F(active(X1), X2, X3) -> F(X1, X2, X3)
   F(X1, active(X2), X3) -> F(X1, X2, X3)
   F(X1, X2, active(X3)) -> F(X1, X2, X3)

The TRS R consists of the following rules:

   active(f(X, g(X), Y)) -> mark(f(Y, Y, Y))
   active(g(b)) -> mark(c)
   active(b) -> mark(c)
   mark(f(X1, X2, X3)) -> active(f(X1, X2, X3))
   mark(g(X)) -> active(g(mark(X)))
   mark(b) -> active(b)
   mark(c) -> active(c)
   f(mark(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, mark(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, mark(X3)) -> f(X1, X2, X3)
   f(active(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, active(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, active(X3)) -> f(X1, X2, X3)
   g(mark(X)) -> g(X)
   g(active(X)) -> g(X)

The set Q consists of the following terms:

   g(mark(x0))
   mark(c)
   mark(f(x0, x1, x2))
   active(f(x0, g(x0), x1))
   active(b)
   f(x0, x1, active(x2))
   f(active(x0), x1, x2)
   g(active(x0))
   mark(b)
   f(x0, x1, mark(x2))
   f(x0, mark(x1), x2)
   f(mark(x0), x1, x2)
   f(x0, active(x1), x2)
   active(g(b))
   mark(g(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(X1, mark(X2), X3) -> F(X1, X2, X3)
   F(mark(X1), X2, X3) -> F(X1, X2, X3)
   F(X1, X2, mark(X3)) -> F(X1, X2, X3)
   F(active(X1), X2, X3) -> F(X1, X2, X3)
   F(X1, active(X2), X3) -> F(X1, X2, X3)
   F(X1, X2, active(X3)) -> F(X1, X2, X3)

R is empty.
The set Q consists of the following terms:

   g(mark(x0))
   mark(c)
   mark(f(x0, x1, x2))
   active(f(x0, g(x0), x1))
   active(b)
   f(x0, x1, active(x2))
   f(active(x0), x1, x2)
   g(active(x0))
   mark(b)
   f(x0, x1, mark(x2))
   f(x0, mark(x1), x2)
   f(mark(x0), x1, x2)
   f(x0, active(x1), x2)
   active(g(b))
   mark(g(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   g(mark(x0))
   f(x0, x1, active(x2))
   f(active(x0), x1, x2)
   g(active(x0))
   f(x0, x1, mark(x2))
   f(x0, mark(x1), x2)
   f(mark(x0), x1, x2)
   f(x0, active(x1), x2)


----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(X1, mark(X2), X3) -> F(X1, X2, X3)
   F(mark(X1), X2, X3) -> F(X1, X2, X3)
   F(X1, X2, mark(X3)) -> F(X1, X2, X3)
   F(active(X1), X2, X3) -> F(X1, X2, X3)
   F(X1, active(X2), X3) -> F(X1, X2, X3)
   F(X1, X2, active(X3)) -> F(X1, X2, X3)

R is empty.
The set Q consists of the following terms:

   mark(c)
   mark(f(x0, x1, x2))
   active(f(x0, g(x0), x1))
   active(b)
   mark(b)
   active(g(b))
   mark(g(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F(X1, mark(X2), X3) -> F(X1, X2, X3)
The graph contains the following edges 1 >= 1, 2 > 2, 3 >= 3


*F(mark(X1), X2, X3) -> F(X1, X2, X3)
The graph contains the following edges 1 > 1, 2 >= 2, 3 >= 3


*F(X1, X2, mark(X3)) -> F(X1, X2, X3)
The graph contains the following edges 1 >= 1, 2 >= 2, 3 > 3


*F(active(X1), X2, X3) -> F(X1, X2, X3)
The graph contains the following edges 1 > 1, 2 >= 2, 3 >= 3


*F(X1, active(X2), X3) -> F(X1, X2, X3)
The graph contains the following edges 1 >= 1, 2 > 2, 3 >= 3


*F(X1, X2, active(X3)) -> F(X1, X2, X3)
The graph contains the following edges 1 >= 1, 2 >= 2, 3 > 3


----------------------------------------

(18)
YES

----------------------------------------

(19)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(f(X1, X2, X3)) -> ACTIVE(f(X1, X2, X3))
   ACTIVE(f(X, g(X), Y)) -> MARK(f(Y, Y, Y))

The TRS R consists of the following rules:

   active(f(X, g(X), Y)) -> mark(f(Y, Y, Y))
   active(g(b)) -> mark(c)
   active(b) -> mark(c)
   mark(f(X1, X2, X3)) -> active(f(X1, X2, X3))
   mark(g(X)) -> active(g(mark(X)))
   mark(b) -> active(b)
   mark(c) -> active(c)
   f(mark(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, mark(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, mark(X3)) -> f(X1, X2, X3)
   f(active(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, active(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, active(X3)) -> f(X1, X2, X3)
   g(mark(X)) -> g(X)
   g(active(X)) -> g(X)

The set Q consists of the following terms:

   g(mark(x0))
   mark(c)
   mark(f(x0, x1, x2))
   active(f(x0, g(x0), x1))
   active(b)
   f(x0, x1, active(x2))
   f(active(x0), x1, x2)
   g(active(x0))
   mark(b)
   f(x0, x1, mark(x2))
   f(x0, mark(x1), x2)
   f(mark(x0), x1, x2)
   f(x0, active(x1), x2)
   active(g(b))
   mark(g(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(20) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(21)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(f(X1, X2, X3)) -> ACTIVE(f(X1, X2, X3))
   ACTIVE(f(X, g(X), Y)) -> MARK(f(Y, Y, Y))

R is empty.
The set Q consists of the following terms:

   g(mark(x0))
   mark(c)
   mark(f(x0, x1, x2))
   active(f(x0, g(x0), x1))
   active(b)
   f(x0, x1, active(x2))
   f(active(x0), x1, x2)
   g(active(x0))
   mark(b)
   f(x0, x1, mark(x2))
   f(x0, mark(x1), x2)
   f(mark(x0), x1, x2)
   f(x0, active(x1), x2)
   active(g(b))
   mark(g(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(22) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   mark(c)
   mark(f(x0, x1, x2))
   active(f(x0, g(x0), x1))
   active(b)
   mark(b)
   active(g(b))
   mark(g(x0))


----------------------------------------

(23)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(f(X1, X2, X3)) -> ACTIVE(f(X1, X2, X3))
   ACTIVE(f(X, g(X), Y)) -> MARK(f(Y, Y, Y))

R is empty.
The set Q consists of the following terms:

   g(mark(x0))
   f(x0, x1, active(x2))
   f(active(x0), x1, x2)
   g(active(x0))
   f(x0, x1, mark(x2))
   f(x0, mark(x1), x2)
   f(mark(x0), x1, x2)
   f(x0, active(x1), x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(24) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule MARK(f(X1, X2, X3)) -> ACTIVE(f(X1, X2, X3)) we obtained the following new rules [LPAR04]:

   (MARK(f(z1, z1, z1)) -> ACTIVE(f(z1, z1, z1)),MARK(f(z1, z1, z1)) -> ACTIVE(f(z1, z1, z1)))


----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACTIVE(f(X, g(X), Y)) -> MARK(f(Y, Y, Y))
   MARK(f(z1, z1, z1)) -> ACTIVE(f(z1, z1, z1))

R is empty.
The set Q consists of the following terms:

   g(mark(x0))
   f(x0, x1, active(x2))
   f(active(x0), x1, x2)
   g(active(x0))
   f(x0, x1, mark(x2))
   f(x0, mark(x1), x2)
   f(mark(x0), x1, x2)
   f(x0, active(x1), x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 2 less nodes.
----------------------------------------

(27)
TRUE

----------------------------------------

(28)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(g(X)) -> MARK(X)

The TRS R consists of the following rules:

   active(f(X, g(X), Y)) -> mark(f(Y, Y, Y))
   active(g(b)) -> mark(c)
   active(b) -> mark(c)
   mark(f(X1, X2, X3)) -> active(f(X1, X2, X3))
   mark(g(X)) -> active(g(mark(X)))
   mark(b) -> active(b)
   mark(c) -> active(c)
   f(mark(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, mark(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, mark(X3)) -> f(X1, X2, X3)
   f(active(X1), X2, X3) -> f(X1, X2, X3)
   f(X1, active(X2), X3) -> f(X1, X2, X3)
   f(X1, X2, active(X3)) -> f(X1, X2, X3)
   g(mark(X)) -> g(X)
   g(active(X)) -> g(X)

The set Q consists of the following terms:

   g(mark(x0))
   mark(c)
   mark(f(x0, x1, x2))
   active(f(x0, g(x0), x1))
   active(b)
   f(x0, x1, active(x2))
   f(active(x0), x1, x2)
   g(active(x0))
   mark(b)
   f(x0, x1, mark(x2))
   f(x0, mark(x1), x2)
   f(mark(x0), x1, x2)
   f(x0, active(x1), x2)
   active(g(b))
   mark(g(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(29) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(30)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(g(X)) -> MARK(X)

R is empty.
The set Q consists of the following terms:

   g(mark(x0))
   mark(c)
   mark(f(x0, x1, x2))
   active(f(x0, g(x0), x1))
   active(b)
   f(x0, x1, active(x2))
   f(active(x0), x1, x2)
   g(active(x0))
   mark(b)
   f(x0, x1, mark(x2))
   f(x0, mark(x1), x2)
   f(mark(x0), x1, x2)
   f(x0, active(x1), x2)
   active(g(b))
   mark(g(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(31) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   mark(c)
   mark(f(x0, x1, x2))
   active(f(x0, g(x0), x1))
   active(b)
   f(x0, x1, active(x2))
   f(active(x0), x1, x2)
   mark(b)
   f(x0, x1, mark(x2))
   f(x0, mark(x1), x2)
   f(mark(x0), x1, x2)
   f(x0, active(x1), x2)
   active(g(b))
   mark(g(x0))


----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(g(X)) -> MARK(X)

R is empty.
The set Q consists of the following terms:

   g(mark(x0))
   g(active(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(33) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MARK(g(X)) -> MARK(X)
The graph contains the following edges 1 > 1


----------------------------------------

(34)
YES
