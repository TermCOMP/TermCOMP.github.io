YES
proof of /home/ff862203/input_hQuuauGTu0.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QDP
        (6) UsableRulesProof [EQUIVALENT, 0 ms]
        (7) QDP
        (8) QReductionProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (11) YES
    (12) QDP
        (13) MRRProof [EQUIVALENT, 0 ms]
        (14) QDP
        (15) TransformationProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) UsableRulesProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) TransformationProof [EQUIVALENT, 0 ms]
        (20) QDP
        (21) UsableRulesProof [EQUIVALENT, 0 ms]
        (22) QDP
        (23) TransformationProof [EQUIVALENT, 0 ms]
        (24) QDP
        (25) DependencyGraphProof [EQUIVALENT, 0 ms]
        (26) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(f(X, X)) -> mark(f(a, b))
   active(b) -> mark(a)
   mark(f(X1, X2)) -> active(f(mark(X1), X2))
   mark(a) -> active(a)
   mark(b) -> active(b)
   f(mark(X1), X2) -> f(X1, X2)
   f(X1, mark(X2)) -> f(X1, X2)
   f(active(X1), X2) -> f(X1, X2)
   f(X1, active(X2)) -> f(X1, X2)

The set Q consists of the following terms:

   mark(b)
   f(x0, active(x1))
   f(x0, mark(x1))
   active(b)
   mark(a)
   active(f(x0, x0))
   f(mark(x0), x1)
   f(active(x0), x1)
   mark(f(x0, x1))


----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACTIVE(f(X, X)) -> MARK(f(a, b))
   ACTIVE(f(X, X)) -> F(a, b)
   ACTIVE(b) -> MARK(a)
   MARK(f(X1, X2)) -> ACTIVE(f(mark(X1), X2))
   MARK(f(X1, X2)) -> F(mark(X1), X2)
   MARK(f(X1, X2)) -> MARK(X1)
   MARK(a) -> ACTIVE(a)
   MARK(b) -> ACTIVE(b)
   F(mark(X1), X2) -> F(X1, X2)
   F(X1, mark(X2)) -> F(X1, X2)
   F(active(X1), X2) -> F(X1, X2)
   F(X1, active(X2)) -> F(X1, X2)

The TRS R consists of the following rules:

   active(f(X, X)) -> mark(f(a, b))
   active(b) -> mark(a)
   mark(f(X1, X2)) -> active(f(mark(X1), X2))
   mark(a) -> active(a)
   mark(b) -> active(b)
   f(mark(X1), X2) -> f(X1, X2)
   f(X1, mark(X2)) -> f(X1, X2)
   f(active(X1), X2) -> f(X1, X2)
   f(X1, active(X2)) -> f(X1, X2)

The set Q consists of the following terms:

   mark(b)
   f(x0, active(x1))
   f(x0, mark(x1))
   active(b)
   mark(a)
   active(f(x0, x0))
   f(mark(x0), x1)
   f(active(x0), x1)
   mark(f(x0, x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 5 less nodes.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(X1, mark(X2)) -> F(X1, X2)
   F(mark(X1), X2) -> F(X1, X2)
   F(active(X1), X2) -> F(X1, X2)
   F(X1, active(X2)) -> F(X1, X2)

The TRS R consists of the following rules:

   active(f(X, X)) -> mark(f(a, b))
   active(b) -> mark(a)
   mark(f(X1, X2)) -> active(f(mark(X1), X2))
   mark(a) -> active(a)
   mark(b) -> active(b)
   f(mark(X1), X2) -> f(X1, X2)
   f(X1, mark(X2)) -> f(X1, X2)
   f(active(X1), X2) -> f(X1, X2)
   f(X1, active(X2)) -> f(X1, X2)

The set Q consists of the following terms:

   mark(b)
   f(x0, active(x1))
   f(x0, mark(x1))
   active(b)
   mark(a)
   active(f(x0, x0))
   f(mark(x0), x1)
   f(active(x0), x1)
   mark(f(x0, x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(6) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(X1, mark(X2)) -> F(X1, X2)
   F(mark(X1), X2) -> F(X1, X2)
   F(active(X1), X2) -> F(X1, X2)
   F(X1, active(X2)) -> F(X1, X2)

R is empty.
The set Q consists of the following terms:

   mark(b)
   f(x0, active(x1))
   f(x0, mark(x1))
   active(b)
   mark(a)
   active(f(x0, x0))
   f(mark(x0), x1)
   f(active(x0), x1)
   mark(f(x0, x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(x0, active(x1))
   f(x0, mark(x1))
   f(mark(x0), x1)
   f(active(x0), x1)


----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(X1, mark(X2)) -> F(X1, X2)
   F(mark(X1), X2) -> F(X1, X2)
   F(active(X1), X2) -> F(X1, X2)
   F(X1, active(X2)) -> F(X1, X2)

R is empty.
The set Q consists of the following terms:

   mark(b)
   active(b)
   mark(a)
   active(f(x0, x0))
   mark(f(x0, x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F(X1, mark(X2)) -> F(X1, X2)
The graph contains the following edges 1 >= 1, 2 > 2


*F(mark(X1), X2) -> F(X1, X2)
The graph contains the following edges 1 > 1, 2 >= 2


*F(active(X1), X2) -> F(X1, X2)
The graph contains the following edges 1 > 1, 2 >= 2


*F(X1, active(X2)) -> F(X1, X2)
The graph contains the following edges 1 >= 1, 2 > 2


----------------------------------------

(11)
YES

----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(f(X1, X2)) -> ACTIVE(f(mark(X1), X2))
   ACTIVE(f(X, X)) -> MARK(f(a, b))
   MARK(f(X1, X2)) -> MARK(X1)

The TRS R consists of the following rules:

   active(f(X, X)) -> mark(f(a, b))
   active(b) -> mark(a)
   mark(f(X1, X2)) -> active(f(mark(X1), X2))
   mark(a) -> active(a)
   mark(b) -> active(b)
   f(mark(X1), X2) -> f(X1, X2)
   f(X1, mark(X2)) -> f(X1, X2)
   f(active(X1), X2) -> f(X1, X2)
   f(X1, active(X2)) -> f(X1, X2)

The set Q consists of the following terms:

   mark(b)
   f(x0, active(x1))
   f(x0, mark(x1))
   active(b)
   mark(a)
   active(f(x0, x0))
   f(mark(x0), x1)
   f(active(x0), x1)
   mark(f(x0, x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   MARK(f(X1, X2)) -> MARK(X1)


Used ordering: Polynomial interpretation [POLO]:

   POL(ACTIVE(x_1)) = 2 + 2*x_1
   POL(MARK(x_1)) = 2 + 2*x_1
   POL(a) = 0
   POL(active(x_1)) = x_1
   POL(b) = 0
   POL(f(x_1, x_2)) = 1 + 2*x_1 + 2*x_2
   POL(mark(x_1)) = x_1


----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(f(X1, X2)) -> ACTIVE(f(mark(X1), X2))
   ACTIVE(f(X, X)) -> MARK(f(a, b))

The TRS R consists of the following rules:

   active(f(X, X)) -> mark(f(a, b))
   active(b) -> mark(a)
   mark(f(X1, X2)) -> active(f(mark(X1), X2))
   mark(a) -> active(a)
   mark(b) -> active(b)
   f(mark(X1), X2) -> f(X1, X2)
   f(X1, mark(X2)) -> f(X1, X2)
   f(active(X1), X2) -> f(X1, X2)
   f(X1, active(X2)) -> f(X1, X2)

The set Q consists of the following terms:

   mark(b)
   f(x0, active(x1))
   f(x0, mark(x1))
   active(b)
   mark(a)
   active(f(x0, x0))
   f(mark(x0), x1)
   f(active(x0), x1)
   mark(f(x0, x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule MARK(f(X1, X2)) -> ACTIVE(f(mark(X1), X2)) we obtained the following new rules [LPAR04]:

   (MARK(f(a, b)) -> ACTIVE(f(mark(a), b)),MARK(f(a, b)) -> ACTIVE(f(mark(a), b)))


----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACTIVE(f(X, X)) -> MARK(f(a, b))
   MARK(f(a, b)) -> ACTIVE(f(mark(a), b))

The TRS R consists of the following rules:

   active(f(X, X)) -> mark(f(a, b))
   active(b) -> mark(a)
   mark(f(X1, X2)) -> active(f(mark(X1), X2))
   mark(a) -> active(a)
   mark(b) -> active(b)
   f(mark(X1), X2) -> f(X1, X2)
   f(X1, mark(X2)) -> f(X1, X2)
   f(active(X1), X2) -> f(X1, X2)
   f(X1, active(X2)) -> f(X1, X2)

The set Q consists of the following terms:

   mark(b)
   f(x0, active(x1))
   f(x0, mark(x1))
   active(b)
   mark(a)
   active(f(x0, x0))
   f(mark(x0), x1)
   f(active(x0), x1)
   mark(f(x0, x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACTIVE(f(X, X)) -> MARK(f(a, b))
   MARK(f(a, b)) -> ACTIVE(f(mark(a), b))

The TRS R consists of the following rules:

   mark(a) -> active(a)
   f(X1, mark(X2)) -> f(X1, X2)
   f(mark(X1), X2) -> f(X1, X2)
   f(active(X1), X2) -> f(X1, X2)
   f(X1, active(X2)) -> f(X1, X2)

The set Q consists of the following terms:

   mark(b)
   f(x0, active(x1))
   f(x0, mark(x1))
   active(b)
   mark(a)
   active(f(x0, x0))
   f(mark(x0), x1)
   f(active(x0), x1)
   mark(f(x0, x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule MARK(f(a, b)) -> ACTIVE(f(mark(a), b)) at position [0,0] we obtained the following new rules [LPAR04]:

   (MARK(f(a, b)) -> ACTIVE(f(active(a), b)),MARK(f(a, b)) -> ACTIVE(f(active(a), b)))


----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACTIVE(f(X, X)) -> MARK(f(a, b))
   MARK(f(a, b)) -> ACTIVE(f(active(a), b))

The TRS R consists of the following rules:

   mark(a) -> active(a)
   f(X1, mark(X2)) -> f(X1, X2)
   f(mark(X1), X2) -> f(X1, X2)
   f(active(X1), X2) -> f(X1, X2)
   f(X1, active(X2)) -> f(X1, X2)

The set Q consists of the following terms:

   mark(b)
   f(x0, active(x1))
   f(x0, mark(x1))
   active(b)
   mark(a)
   active(f(x0, x0))
   f(mark(x0), x1)
   f(active(x0), x1)
   mark(f(x0, x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACTIVE(f(X, X)) -> MARK(f(a, b))
   MARK(f(a, b)) -> ACTIVE(f(active(a), b))

The TRS R consists of the following rules:

   f(X1, mark(X2)) -> f(X1, X2)
   f(mark(X1), X2) -> f(X1, X2)
   f(active(X1), X2) -> f(X1, X2)
   f(X1, active(X2)) -> f(X1, X2)

The set Q consists of the following terms:

   mark(b)
   f(x0, active(x1))
   f(x0, mark(x1))
   active(b)
   mark(a)
   active(f(x0, x0))
   f(mark(x0), x1)
   f(active(x0), x1)
   mark(f(x0, x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule MARK(f(a, b)) -> ACTIVE(f(active(a), b)) at position [0] we obtained the following new rules [LPAR04]:

   (MARK(f(a, b)) -> ACTIVE(f(a, b)),MARK(f(a, b)) -> ACTIVE(f(a, b)))


----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ACTIVE(f(X, X)) -> MARK(f(a, b))
   MARK(f(a, b)) -> ACTIVE(f(a, b))

The TRS R consists of the following rules:

   f(X1, mark(X2)) -> f(X1, X2)
   f(mark(X1), X2) -> f(X1, X2)
   f(active(X1), X2) -> f(X1, X2)
   f(X1, active(X2)) -> f(X1, X2)

The set Q consists of the following terms:

   mark(b)
   f(x0, active(x1))
   f(x0, mark(x1))
   active(b)
   mark(a)
   active(f(x0, x0))
   f(mark(x0), x1)
   f(active(x0), x1)
   mark(f(x0, x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 2 less nodes.
----------------------------------------

(26)
TRUE
