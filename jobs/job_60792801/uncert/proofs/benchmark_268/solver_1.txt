YES
proof of /home/ff862203/input_8SaYkPJgLc.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSToCSRProof [SOUND, 0 ms]
(2) CSR
(3) CSRRRRProof [EQUIVALENT, 33 ms]
(4) CSR
(5) CSRRRRProof [EQUIVALENT, 0 ms]
(6) CSR
(7) CSRRRRProof [EQUIVALENT, 5 ms]
(8) CSR
(9) CSRRRRProof [EQUIVALENT, 0 ms]
(10) CSR
(11) CSRRRRProof [EQUIVALENT, 0 ms]
(12) CSR
(13) CSRRRRProof [EQUIVALENT, 0 ms]
(14) CSR
(15) CSRRRRProof [EQUIVALENT, 3 ms]
(16) CSR
(17) CSRRRRProof [EQUIVALENT, 0 ms]
(18) CSR
(19) CSRRRRProof [EQUIVALENT, 0 ms]
(20) CSR
(21) CSRRRRProof [EQUIVALENT, 0 ms]
(22) CSR
(23) CSRRRRProof [EQUIVALENT, 1 ms]
(24) CSR
(25) CSRRRRProof [EQUIVALENT, 0 ms]
(26) CSR
(27) CSRRRRProof [EQUIVALENT, 0 ms]
(28) CSR
(29) CSRRRRProof [EQUIVALENT, 0 ms]
(30) CSR
(31) CSRRRRProof [EQUIVALENT, 0 ms]
(32) CSR
(33) CSRRRRProof [EQUIVALENT, 0 ms]
(34) CSR
(35) RisEmptyProof [EQUIVALENT, 0 ms]
(36) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(zeros) -> mark(cons(0, zeros))
   active(U11(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(U31(tt)) -> mark(tt)
   active(U41(tt, V2)) -> mark(U42(isNatIList(V2)))
   active(U42(tt)) -> mark(tt)
   active(U51(tt, V2)) -> mark(U52(isNatList(V2)))
   active(U52(tt)) -> mark(tt)
   active(U61(tt, L, N)) -> mark(U62(isNat(N), L))
   active(U62(tt, L)) -> mark(s(length(L)))
   active(isNat(0)) -> mark(tt)
   active(isNat(length(V1))) -> mark(U11(isNatList(V1)))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   active(isNatIList(V)) -> mark(U31(isNatList(V)))
   active(isNatIList(zeros)) -> mark(tt)
   active(isNatIList(cons(V1, V2))) -> mark(U41(isNat(V1), V2))
   active(isNatList(nil)) -> mark(tt)
   active(isNatList(cons(V1, V2))) -> mark(U51(isNat(V1), V2))
   active(length(nil)) -> mark(0)
   active(length(cons(N, L))) -> mark(U61(isNatList(L), L, N))
   active(cons(X1, X2)) -> cons(active(X1), X2)
   active(U11(X)) -> U11(active(X))
   active(U21(X)) -> U21(active(X))
   active(U31(X)) -> U31(active(X))
   active(U41(X1, X2)) -> U41(active(X1), X2)
   active(U42(X)) -> U42(active(X))
   active(U51(X1, X2)) -> U51(active(X1), X2)
   active(U52(X)) -> U52(active(X))
   active(U61(X1, X2, X3)) -> U61(active(X1), X2, X3)
   active(U62(X1, X2)) -> U62(active(X1), X2)
   active(s(X)) -> s(active(X))
   active(length(X)) -> length(active(X))
   cons(mark(X1), X2) -> mark(cons(X1, X2))
   U11(mark(X)) -> mark(U11(X))
   U21(mark(X)) -> mark(U21(X))
   U31(mark(X)) -> mark(U31(X))
   U41(mark(X1), X2) -> mark(U41(X1, X2))
   U42(mark(X)) -> mark(U42(X))
   U51(mark(X1), X2) -> mark(U51(X1, X2))
   U52(mark(X)) -> mark(U52(X))
   U61(mark(X1), X2, X3) -> mark(U61(X1, X2, X3))
   U62(mark(X1), X2) -> mark(U62(X1, X2))
   s(mark(X)) -> mark(s(X))
   length(mark(X)) -> mark(length(X))
   proper(zeros) -> ok(zeros)
   proper(cons(X1, X2)) -> cons(proper(X1), proper(X2))
   proper(0) -> ok(0)
   proper(U11(X)) -> U11(proper(X))
   proper(tt) -> ok(tt)
   proper(U21(X)) -> U21(proper(X))
   proper(U31(X)) -> U31(proper(X))
   proper(U41(X1, X2)) -> U41(proper(X1), proper(X2))
   proper(U42(X)) -> U42(proper(X))
   proper(isNatIList(X)) -> isNatIList(proper(X))
   proper(U51(X1, X2)) -> U51(proper(X1), proper(X2))
   proper(U52(X)) -> U52(proper(X))
   proper(isNatList(X)) -> isNatList(proper(X))
   proper(U61(X1, X2, X3)) -> U61(proper(X1), proper(X2), proper(X3))
   proper(U62(X1, X2)) -> U62(proper(X1), proper(X2))
   proper(isNat(X)) -> isNat(proper(X))
   proper(s(X)) -> s(proper(X))
   proper(length(X)) -> length(proper(X))
   proper(nil) -> ok(nil)
   cons(ok(X1), ok(X2)) -> ok(cons(X1, X2))
   U11(ok(X)) -> ok(U11(X))
   U21(ok(X)) -> ok(U21(X))
   U31(ok(X)) -> ok(U31(X))
   U41(ok(X1), ok(X2)) -> ok(U41(X1, X2))
   U42(ok(X)) -> ok(U42(X))
   isNatIList(ok(X)) -> ok(isNatIList(X))
   U51(ok(X1), ok(X2)) -> ok(U51(X1, X2))
   U52(ok(X)) -> ok(U52(X))
   isNatList(ok(X)) -> ok(isNatList(X))
   U61(ok(X1), ok(X2), ok(X3)) -> ok(U61(X1, X2, X3))
   U62(ok(X1), ok(X2)) -> ok(U62(X1, X2))
   isNat(ok(X)) -> ok(isNat(X))
   s(ok(X)) -> ok(s(X))
   length(ok(X)) -> ok(length(X))
   top(mark(X)) -> top(proper(X))
   top(ok(X)) -> top(active(X))

The set Q consists of the following terms:

   proper(U42(x0))
   proper(isNat(x0))
   active(U41(x0, x1))
   proper(U61(x0, x1, x2))
   proper(cons(x0, x1))
   active(U52(x0))
   U41(ok(x0), ok(x1))
   U61(mark(x0), x1, x2)
   proper(U52(x0))
   proper(0)
   s(ok(x0))
   U51(ok(x0), ok(x1))
   active(cons(x0, x1))
   length(mark(x0))
   U52(ok(x0))
   isNatList(ok(x0))
   active(isNatIList(x0))
   active(s(x0))
   U31(mark(x0))
   U11(ok(x0))
   cons(ok(x0), ok(x1))
   proper(isNatIList(x0))
   proper(s(x0))
   U62(mark(x0), x1)
   isNatIList(ok(x0))
   U21(ok(x0))
   active(zeros)
   active(isNat(0))
   active(U62(x0, x1))
   U21(mark(x0))
   U51(mark(x0), x1)
   active(U31(x0))
   top(mark(x0))
   active(isNat(length(x0)))
   proper(U21(x0))
   U42(ok(x0))
   U11(mark(x0))
   cons(mark(x0), x1)
   proper(nil)
   length(ok(x0))
   active(isNat(s(x0)))
   U61(ok(x0), ok(x1), ok(x2))
   proper(U31(x0))
   U31(ok(x0))
   U52(mark(x0))
   proper(U51(x0, x1))
   proper(tt)
   active(U11(x0))
   active(length(x0))
   active(isNatList(nil))
   U62(ok(x0), ok(x1))
   U42(mark(x0))
   s(mark(x0))
   U41(mark(x0), x1)
   active(U42(x0))
   active(U61(x0, x1, x2))
   proper(zeros)
   proper(isNatList(x0))
   proper(U62(x0, x1))
   isNat(ok(x0))
   proper(length(x0))
   top(ok(x0))
   active(U51(x0, x1))
   proper(U41(x0, x1))
   active(isNatList(cons(x0, x1)))
   active(U21(x0))
   proper(U11(x0))


----------------------------------------

(1) QTRSToCSRProof (SOUND)
The following Q TRS is given: Q restricted rewrite system:
The TRS R consists of the following rules:

   active(zeros) -> mark(cons(0, zeros))
   active(U11(tt)) -> mark(tt)
   active(U21(tt)) -> mark(tt)
   active(U31(tt)) -> mark(tt)
   active(U41(tt, V2)) -> mark(U42(isNatIList(V2)))
   active(U42(tt)) -> mark(tt)
   active(U51(tt, V2)) -> mark(U52(isNatList(V2)))
   active(U52(tt)) -> mark(tt)
   active(U61(tt, L, N)) -> mark(U62(isNat(N), L))
   active(U62(tt, L)) -> mark(s(length(L)))
   active(isNat(0)) -> mark(tt)
   active(isNat(length(V1))) -> mark(U11(isNatList(V1)))
   active(isNat(s(V1))) -> mark(U21(isNat(V1)))
   active(isNatIList(V)) -> mark(U31(isNatList(V)))
   active(isNatIList(zeros)) -> mark(tt)
   active(isNatIList(cons(V1, V2))) -> mark(U41(isNat(V1), V2))
   active(isNatList(nil)) -> mark(tt)
   active(isNatList(cons(V1, V2))) -> mark(U51(isNat(V1), V2))
   active(length(nil)) -> mark(0)
   active(length(cons(N, L))) -> mark(U61(isNatList(L), L, N))
   active(cons(X1, X2)) -> cons(active(X1), X2)
   active(U11(X)) -> U11(active(X))
   active(U21(X)) -> U21(active(X))
   active(U31(X)) -> U31(active(X))
   active(U41(X1, X2)) -> U41(active(X1), X2)
   active(U42(X)) -> U42(active(X))
   active(U51(X1, X2)) -> U51(active(X1), X2)
   active(U52(X)) -> U52(active(X))
   active(U61(X1, X2, X3)) -> U61(active(X1), X2, X3)
   active(U62(X1, X2)) -> U62(active(X1), X2)
   active(s(X)) -> s(active(X))
   active(length(X)) -> length(active(X))
   cons(mark(X1), X2) -> mark(cons(X1, X2))
   U11(mark(X)) -> mark(U11(X))
   U21(mark(X)) -> mark(U21(X))
   U31(mark(X)) -> mark(U31(X))
   U41(mark(X1), X2) -> mark(U41(X1, X2))
   U42(mark(X)) -> mark(U42(X))
   U51(mark(X1), X2) -> mark(U51(X1, X2))
   U52(mark(X)) -> mark(U52(X))
   U61(mark(X1), X2, X3) -> mark(U61(X1, X2, X3))
   U62(mark(X1), X2) -> mark(U62(X1, X2))
   s(mark(X)) -> mark(s(X))
   length(mark(X)) -> mark(length(X))
   proper(zeros) -> ok(zeros)
   proper(cons(X1, X2)) -> cons(proper(X1), proper(X2))
   proper(0) -> ok(0)
   proper(U11(X)) -> U11(proper(X))
   proper(tt) -> ok(tt)
   proper(U21(X)) -> U21(proper(X))
   proper(U31(X)) -> U31(proper(X))
   proper(U41(X1, X2)) -> U41(proper(X1), proper(X2))
   proper(U42(X)) -> U42(proper(X))
   proper(isNatIList(X)) -> isNatIList(proper(X))
   proper(U51(X1, X2)) -> U51(proper(X1), proper(X2))
   proper(U52(X)) -> U52(proper(X))
   proper(isNatList(X)) -> isNatList(proper(X))
   proper(U61(X1, X2, X3)) -> U61(proper(X1), proper(X2), proper(X3))
   proper(U62(X1, X2)) -> U62(proper(X1), proper(X2))
   proper(isNat(X)) -> isNat(proper(X))
   proper(s(X)) -> s(proper(X))
   proper(length(X)) -> length(proper(X))
   proper(nil) -> ok(nil)
   cons(ok(X1), ok(X2)) -> ok(cons(X1, X2))
   U11(ok(X)) -> ok(U11(X))
   U21(ok(X)) -> ok(U21(X))
   U31(ok(X)) -> ok(U31(X))
   U41(ok(X1), ok(X2)) -> ok(U41(X1, X2))
   U42(ok(X)) -> ok(U42(X))
   isNatIList(ok(X)) -> ok(isNatIList(X))
   U51(ok(X1), ok(X2)) -> ok(U51(X1, X2))
   U52(ok(X)) -> ok(U52(X))
   isNatList(ok(X)) -> ok(isNatList(X))
   U61(ok(X1), ok(X2), ok(X3)) -> ok(U61(X1, X2, X3))
   U62(ok(X1), ok(X2)) -> ok(U62(X1, X2))
   isNat(ok(X)) -> ok(isNat(X))
   s(ok(X)) -> ok(s(X))
   length(ok(X)) -> ok(length(X))
   top(mark(X)) -> top(proper(X))
   top(ok(X)) -> top(active(X))

The set Q consists of the following terms:

   proper(U42(x0))
   proper(isNat(x0))
   active(U41(x0, x1))
   proper(U61(x0, x1, x2))
   proper(cons(x0, x1))
   active(U52(x0))
   U41(ok(x0), ok(x1))
   U61(mark(x0), x1, x2)
   proper(U52(x0))
   proper(0)
   s(ok(x0))
   U51(ok(x0), ok(x1))
   active(cons(x0, x1))
   length(mark(x0))
   U52(ok(x0))
   isNatList(ok(x0))
   active(isNatIList(x0))
   active(s(x0))
   U31(mark(x0))
   U11(ok(x0))
   cons(ok(x0), ok(x1))
   proper(isNatIList(x0))
   proper(s(x0))
   U62(mark(x0), x1)
   isNatIList(ok(x0))
   U21(ok(x0))
   active(zeros)
   active(isNat(0))
   active(U62(x0, x1))
   U21(mark(x0))
   U51(mark(x0), x1)
   active(U31(x0))
   top(mark(x0))
   active(isNat(length(x0)))
   proper(U21(x0))
   U42(ok(x0))
   U11(mark(x0))
   cons(mark(x0), x1)
   proper(nil)
   length(ok(x0))
   active(isNat(s(x0)))
   U61(ok(x0), ok(x1), ok(x2))
   proper(U31(x0))
   U31(ok(x0))
   U52(mark(x0))
   proper(U51(x0, x1))
   proper(tt)
   active(U11(x0))
   active(length(x0))
   active(isNatList(nil))
   U62(ok(x0), ok(x1))
   U42(mark(x0))
   s(mark(x0))
   U41(mark(x0), x1)
   active(U42(x0))
   active(U61(x0, x1, x2))
   proper(zeros)
   proper(isNatList(x0))
   proper(U62(x0, x1))
   isNat(ok(x0))
   proper(length(x0))
   top(ok(x0))
   active(U51(x0, x1))
   proper(U41(x0, x1))
   active(isNatList(cons(x0, x1)))
   active(U21(x0))
   proper(U11(x0))

Special symbols used for the transformation (see [GM04]):
top: top_1, active: active_1, mark: mark_1, ok: ok_1, proper: proper_1
The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
U11: {1}
tt: empty set
U21: {1}
U31: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
isNat: empty set
s: {1}
length: {1}
nil: empty set
The QTRS contained just a subset of rules created by the complete Giesl-Middeldorp transformation. Therefore, the inverse transformation is sound, but not necessarily complete.
----------------------------------------

(2)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U11(tt) -> tt
   U21(tt) -> tt
   U31(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, L, N) -> U62(isNat(N), L)
   U62(tt, L) -> s(length(L))
   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(V) -> U31(isNatList(V))
   isNatIList(zeros) -> tt
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   length(nil) -> 0
   length(cons(N, L)) -> U61(isNatList(L), L, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
U11: {1}
tt: empty set
U21: {1}
U31: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
isNat: empty set
s: {1}
length: {1}
nil: empty set

----------------------------------------

(3) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U11(tt) -> tt
   U21(tt) -> tt
   U31(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, L, N) -> U62(isNat(N), L)
   U62(tt, L) -> s(length(L))
   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(V) -> U31(isNatList(V))
   isNatIList(zeros) -> tt
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   length(nil) -> 0
   length(cons(N, L)) -> U61(isNatList(L), L, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
U11: {1}
tt: empty set
U21: {1}
U31: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
isNat: empty set
s: {1}
length: {1}
nil: empty set
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(U11(x_1)) = 2*x_1
   POL(U21(x_1)) = 2*x_1
   POL(U31(x_1)) = 2*x_1
   POL(U41(x_1, x_2)) = 1 + x_1 + 2*x_2
   POL(U42(x_1)) = x_1
   POL(U51(x_1, x_2)) = 2*x_1
   POL(U52(x_1)) = x_1
   POL(U61(x_1, x_2, x_3)) = 2*x_1 + 2*x_2 + 2*x_3
   POL(U62(x_1, x_2)) = 2*x_1 + 2*x_2
   POL(cons(x_1, x_2)) = 2*x_1 + 2*x_2
   POL(isNat(x_1)) = 0
   POL(isNatIList(x_1)) = 1 + x_1
   POL(isNatList(x_1)) = 0
   POL(length(x_1)) = 2*x_1
   POL(nil) = 0
   POL(s(x_1)) = x_1
   POL(tt) = 0
   POL(zeros) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   isNatIList(V) -> U31(isNatList(V))
   isNatIList(zeros) -> tt




----------------------------------------

(4)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U11(tt) -> tt
   U21(tt) -> tt
   U31(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, L, N) -> U62(isNat(N), L)
   U62(tt, L) -> s(length(L))
   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   length(nil) -> 0
   length(cons(N, L)) -> U61(isNatList(L), L, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
U11: {1}
tt: empty set
U21: {1}
U31: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
isNat: empty set
s: {1}
length: {1}
nil: empty set

----------------------------------------

(5) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U11(tt) -> tt
   U21(tt) -> tt
   U31(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, L, N) -> U62(isNat(N), L)
   U62(tt, L) -> s(length(L))
   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   length(nil) -> 0
   length(cons(N, L)) -> U61(isNatList(L), L, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
U11: {1}
tt: empty set
U21: {1}
U31: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
isNat: empty set
s: {1}
length: {1}
nil: empty set
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(U11(x_1)) = x_1
   POL(U21(x_1)) = x_1
   POL(U31(x_1)) = x_1
   POL(U41(x_1, x_2)) = x_1 + x_2
   POL(U42(x_1)) = x_1
   POL(U51(x_1, x_2)) = x_1
   POL(U52(x_1)) = x_1
   POL(U61(x_1, x_2, x_3)) = x_1 + x_2
   POL(U62(x_1, x_2)) = x_1 + x_2
   POL(cons(x_1, x_2)) = x_1 + x_2
   POL(isNat(x_1)) = 1
   POL(isNatIList(x_1)) = 1 + x_1
   POL(isNatList(x_1)) = 1
   POL(length(x_1)) = 1 + x_1
   POL(nil) = 1
   POL(s(x_1)) = x_1
   POL(tt) = 1
   POL(zeros) = 1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   length(nil) -> 0




----------------------------------------

(6)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U11(tt) -> tt
   U21(tt) -> tt
   U31(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, L, N) -> U62(isNat(N), L)
   U62(tt, L) -> s(length(L))
   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   length(cons(N, L)) -> U61(isNatList(L), L, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
U11: {1}
tt: empty set
U21: {1}
U31: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
isNat: empty set
s: {1}
length: {1}
nil: empty set

----------------------------------------

(7) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U11(tt) -> tt
   U21(tt) -> tt
   U31(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, L, N) -> U62(isNat(N), L)
   U62(tt, L) -> s(length(L))
   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   length(cons(N, L)) -> U61(isNatList(L), L, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
U11: {1}
tt: empty set
U21: {1}
U31: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
isNat: empty set
s: {1}
length: {1}
nil: empty set
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(U11(x_1)) = x_1
   POL(U21(x_1)) = x_1
   POL(U31(x_1)) = 1 + x_1
   POL(U41(x_1, x_2)) = x_1 + x_2
   POL(U42(x_1)) = x_1
   POL(U51(x_1, x_2)) = x_1
   POL(U52(x_1)) = x_1
   POL(U61(x_1, x_2, x_3)) = x_1 + x_2
   POL(U62(x_1, x_2)) = x_1 + x_2
   POL(cons(x_1, x_2)) = x_1 + x_2
   POL(isNat(x_1)) = 1
   POL(isNatIList(x_1)) = 1 + x_1
   POL(isNatList(x_1)) = 1
   POL(length(x_1)) = 1 + x_1
   POL(nil) = 1
   POL(s(x_1)) = x_1
   POL(tt) = 1
   POL(zeros) = 1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   U31(tt) -> tt




----------------------------------------

(8)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U11(tt) -> tt
   U21(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, L, N) -> U62(isNat(N), L)
   U62(tt, L) -> s(length(L))
   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   length(cons(N, L)) -> U61(isNatList(L), L, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
U11: {1}
tt: empty set
U21: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
isNat: empty set
s: {1}
length: {1}
nil: empty set

----------------------------------------

(9) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U11(tt) -> tt
   U21(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, L, N) -> U62(isNat(N), L)
   U62(tt, L) -> s(length(L))
   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(nil) -> tt
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   length(cons(N, L)) -> U61(isNatList(L), L, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
U11: {1}
tt: empty set
U21: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
isNat: empty set
s: {1}
length: {1}
nil: empty set
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(U11(x_1)) = x_1
   POL(U21(x_1)) = x_1
   POL(U41(x_1, x_2)) = 2*x_1 + 2*x_2
   POL(U42(x_1)) = x_1
   POL(U51(x_1, x_2)) = 2*x_1 + 2*x_2
   POL(U52(x_1)) = 2*x_1
   POL(U61(x_1, x_2, x_3)) = x_1 + x_2 + 2*x_3
   POL(U62(x_1, x_2)) = 2*x_1 + x_2
   POL(cons(x_1, x_2)) = 2*x_1 + 2*x_2
   POL(isNat(x_1)) = x_1
   POL(isNatIList(x_1)) = 2*x_1
   POL(isNatList(x_1)) = x_1
   POL(length(x_1)) = x_1
   POL(nil) = 1
   POL(s(x_1)) = x_1
   POL(tt) = 0
   POL(zeros) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   isNatList(nil) -> tt




----------------------------------------

(10)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U11(tt) -> tt
   U21(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, L, N) -> U62(isNat(N), L)
   U62(tt, L) -> s(length(L))
   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   length(cons(N, L)) -> U61(isNatList(L), L, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
U11: {1}
tt: empty set
U21: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
isNat: empty set
s: {1}
length: {1}

----------------------------------------

(11) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U11(tt) -> tt
   U21(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, L, N) -> U62(isNat(N), L)
   U62(tt, L) -> s(length(L))
   isNat(0) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   length(cons(N, L)) -> U61(isNatList(L), L, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
U11: {1}
tt: empty set
U21: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
isNat: empty set
s: {1}
length: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(U11(x_1)) = 1 + x_1
   POL(U21(x_1)) = x_1
   POL(U41(x_1, x_2)) = x_1 + 2*x_2
   POL(U42(x_1)) = 2*x_1
   POL(U51(x_1, x_2)) = x_1 + 2*x_2
   POL(U52(x_1)) = x_1
   POL(U61(x_1, x_2, x_3)) = 2 + 2*x_1 + 2*x_2 + 2*x_3
   POL(U62(x_1, x_2)) = 2 + x_1 + 2*x_2
   POL(cons(x_1, x_2)) = 2*x_1 + 2*x_2
   POL(isNat(x_1)) = x_1
   POL(isNatIList(x_1)) = x_1
   POL(isNatList(x_1)) = x_1
   POL(length(x_1)) = 2 + 2*x_1
   POL(s(x_1)) = x_1
   POL(tt) = 0
   POL(zeros) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   U11(tt) -> tt
   isNat(length(V1)) -> U11(isNatList(V1))




----------------------------------------

(12)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U21(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, L, N) -> U62(isNat(N), L)
   U62(tt, L) -> s(length(L))
   isNat(0) -> tt
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   length(cons(N, L)) -> U61(isNatList(L), L, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
tt: empty set
U21: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
isNat: empty set
s: {1}
length: {1}

----------------------------------------

(13) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U21(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U42(tt) -> tt
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, L, N) -> U62(isNat(N), L)
   U62(tt, L) -> s(length(L))
   isNat(0) -> tt
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   length(cons(N, L)) -> U61(isNatList(L), L, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
tt: empty set
U21: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
isNat: empty set
s: {1}
length: {1}
Used ordering:
Matrix interpretation [MATRO] to (N^2, +, *, >=, >) :

   <<<
 POL(zeros) =  	[[0], [1]]
>>>

   <<<
 POL(cons(x_1, x_2)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1 	 +  	[[1, 0], [1, 1]] 	* 	x_2
>>>

   <<<
 POL(0) =  	[[0], [0]]
>>>

   <<<
 POL(U21(x_1)) =  	[[0], [1]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1
>>>

   <<<
 POL(tt) =  	[[0], [1]]
>>>

   <<<
 POL(U41(x_1, x_2)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1 	 +  	[[1, 0], [0, 0]] 	* 	x_2
>>>

   <<<
 POL(U42(x_1)) =  	[[0], [0]] 	 +  	[[1, 1], [0, 1]] 	* 	x_1
>>>

   <<<
 POL(isNatIList(x_1)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1
>>>

   <<<
 POL(U51(x_1, x_2)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1 	 +  	[[1, 0], [0, 0]] 	* 	x_2
>>>

   <<<
 POL(U52(x_1)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 1]] 	* 	x_1
>>>

   <<<
 POL(isNatList(x_1)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1
>>>

   <<<
 POL(U61(x_1, x_2, x_3)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1 	 +  	[[1, 1], [0, 0]] 	* 	x_2 	 +  	[[1, 0], [0, 0]] 	* 	x_3
>>>

   <<<
 POL(U62(x_1, x_2)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1 	 +  	[[1, 1], [0, 0]] 	* 	x_2
>>>

   <<<
 POL(isNat(x_1)) =  	[[0], [1]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1
>>>

   <<<
 POL(s(x_1)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1
>>>

   <<<
 POL(length(x_1)) =  	[[0], [0]] 	 +  	[[1, 1], [0, 0]] 	* 	x_1
>>>

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   U42(tt) -> tt




----------------------------------------

(14)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U21(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, L, N) -> U62(isNat(N), L)
   U62(tt, L) -> s(length(L))
   isNat(0) -> tt
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   length(cons(N, L)) -> U61(isNatList(L), L, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
tt: empty set
U21: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
isNat: empty set
s: {1}
length: {1}

----------------------------------------

(15) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U21(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U51(tt, V2) -> U52(isNatList(V2))
   U52(tt) -> tt
   U61(tt, L, N) -> U62(isNat(N), L)
   U62(tt, L) -> s(length(L))
   isNat(0) -> tt
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   length(cons(N, L)) -> U61(isNatList(L), L, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
tt: empty set
U21: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
isNat: empty set
s: {1}
length: {1}
Used ordering:
Matrix interpretation [MATRO] to (N^2, +, *, >=, >) :

   <<<
 POL(zeros) =  	[[0], [0]]
>>>

   <<<
 POL(cons(x_1, x_2)) =  	[[0], [0]] 	 +  	[[1, 1], [1, 0]] 	* 	x_1 	 +  	[[1, 1], [1, 0]] 	* 	x_2
>>>

   <<<
 POL(0) =  	[[0], [0]]
>>>

   <<<
 POL(U21(x_1)) =  	[[0], [1]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1
>>>

   <<<
 POL(tt) =  	[[0], [1]]
>>>

   <<<
 POL(U41(x_1, x_2)) =  	[[0], [0]] 	 +  	[[1, 0], [1, 1]] 	* 	x_1 	 +  	[[1, 1], [1, 1]] 	* 	x_2
>>>

   <<<
 POL(U42(x_1)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 1]] 	* 	x_1
>>>

   <<<
 POL(isNatIList(x_1)) =  	[[0], [1]] 	 +  	[[1, 1], [1, 1]] 	* 	x_1
>>>

   <<<
 POL(U51(x_1, x_2)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1 	 +  	[[1, 1], [0, 0]] 	* 	x_2
>>>

   <<<
 POL(U52(x_1)) =  	[[0], [0]] 	 +  	[[1, 1], [0, 1]] 	* 	x_1
>>>

   <<<
 POL(isNatList(x_1)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1
>>>

   <<<
 POL(U61(x_1, x_2, x_3)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1 	 +  	[[1, 1], [0, 0]] 	* 	x_2 	 +  	[[1, 1], [0, 0]] 	* 	x_3
>>>

   <<<
 POL(U62(x_1, x_2)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1 	 +  	[[1, 1], [0, 0]] 	* 	x_2
>>>

   <<<
 POL(isNat(x_1)) =  	[[0], [1]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1
>>>

   <<<
 POL(s(x_1)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1
>>>

   <<<
 POL(length(x_1)) =  	[[0], [0]] 	 +  	[[1, 1], [0, 0]] 	* 	x_1
>>>

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   U52(tt) -> tt




----------------------------------------

(16)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U21(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U51(tt, V2) -> U52(isNatList(V2))
   U61(tt, L, N) -> U62(isNat(N), L)
   U62(tt, L) -> s(length(L))
   isNat(0) -> tt
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   length(cons(N, L)) -> U61(isNatList(L), L, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
tt: empty set
U21: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
isNat: empty set
s: {1}
length: {1}

----------------------------------------

(17) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U21(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U51(tt, V2) -> U52(isNatList(V2))
   U61(tt, L, N) -> U62(isNat(N), L)
   U62(tt, L) -> s(length(L))
   isNat(0) -> tt
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   length(cons(N, L)) -> U61(isNatList(L), L, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
tt: empty set
U21: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
isNat: empty set
s: {1}
length: {1}
Used ordering:
Matrix interpretation [MATRO] to (N^2, +, *, >=, >) :

   <<<
 POL(zeros) =  	[[0], [1]]
>>>

   <<<
 POL(cons(x_1, x_2)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1 	 +  	[[1, 0], [1, 1]] 	* 	x_2
>>>

   <<<
 POL(0) =  	[[0], [0]]
>>>

   <<<
 POL(U21(x_1)) =  	[[0], [1]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1
>>>

   <<<
 POL(tt) =  	[[0], [1]]
>>>

   <<<
 POL(U41(x_1, x_2)) =  	[[0], [0]] 	 +  	[[1, 0], [1, 1]] 	* 	x_1 	 +  	[[1, 1], [1, 1]] 	* 	x_2
>>>

   <<<
 POL(U42(x_1)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 1]] 	* 	x_1
>>>

   <<<
 POL(isNatIList(x_1)) =  	[[0], [1]] 	 +  	[[1, 1], [1, 1]] 	* 	x_1
>>>

   <<<
 POL(U51(x_1, x_2)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1 	 +  	[[1, 0], [0, 0]] 	* 	x_2
>>>

   <<<
 POL(U52(x_1)) =  	[[0], [0]] 	 +  	[[1, 1], [0, 1]] 	* 	x_1
>>>

   <<<
 POL(isNatList(x_1)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1
>>>

   <<<
 POL(U61(x_1, x_2, x_3)) =  	[[0], [0]] 	 +  	[[1, 1], [0, 0]] 	* 	x_1 	 +  	[[1, 1], [0, 0]] 	* 	x_2 	 +  	[[1, 0], [0, 0]] 	* 	x_3
>>>

   <<<
 POL(U62(x_1, x_2)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1 	 +  	[[1, 1], [0, 0]] 	* 	x_2
>>>

   <<<
 POL(isNat(x_1)) =  	[[0], [1]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1
>>>

   <<<
 POL(s(x_1)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 0]] 	* 	x_1
>>>

   <<<
 POL(length(x_1)) =  	[[0], [0]] 	 +  	[[1, 1], [0, 0]] 	* 	x_1
>>>

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   U61(tt, L, N) -> U62(isNat(N), L)




----------------------------------------

(18)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U21(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U51(tt, V2) -> U52(isNatList(V2))
   U62(tt, L) -> s(length(L))
   isNat(0) -> tt
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   length(cons(N, L)) -> U61(isNatList(L), L, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
tt: empty set
U21: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
isNat: empty set
s: {1}
length: {1}

----------------------------------------

(19) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U21(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U51(tt, V2) -> U52(isNatList(V2))
   U62(tt, L) -> s(length(L))
   isNat(0) -> tt
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   length(cons(N, L)) -> U61(isNatList(L), L, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
tt: empty set
U21: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
U62: {1}
isNat: empty set
s: {1}
length: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(U21(x_1)) = x_1
   POL(U41(x_1, x_2)) = x_1
   POL(U42(x_1)) = x_1
   POL(U51(x_1, x_2)) = x_1
   POL(U52(x_1)) = x_1
   POL(U61(x_1, x_2, x_3)) = x_1 + x_2
   POL(U62(x_1, x_2)) = 1 + x_1 + x_2
   POL(cons(x_1, x_2)) = x_1 + x_2
   POL(isNat(x_1)) = 0
   POL(isNatIList(x_1)) = 0
   POL(isNatList(x_1)) = 0
   POL(length(x_1)) = x_1
   POL(s(x_1)) = x_1
   POL(tt) = 0
   POL(zeros) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   U62(tt, L) -> s(length(L))




----------------------------------------

(20)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U21(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U51(tt, V2) -> U52(isNatList(V2))
   isNat(0) -> tt
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   length(cons(N, L)) -> U61(isNatList(L), L, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
tt: empty set
U21: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
isNat: empty set
s: {1}
length: {1}

----------------------------------------

(21) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U21(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U51(tt, V2) -> U52(isNatList(V2))
   isNat(0) -> tt
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)
   length(cons(N, L)) -> U61(isNatList(L), L, N)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
tt: empty set
U21: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
U61: {1}
isNat: empty set
s: {1}
length: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(U21(x_1)) = x_1
   POL(U41(x_1, x_2)) = x_1
   POL(U42(x_1)) = x_1
   POL(U51(x_1, x_2)) = x_1
   POL(U52(x_1)) = x_1
   POL(U61(x_1, x_2, x_3)) = x_1 + x_2
   POL(cons(x_1, x_2)) = x_1 + x_2
   POL(isNat(x_1)) = 0
   POL(isNatIList(x_1)) = 0
   POL(isNatList(x_1)) = 0
   POL(length(x_1)) = 1 + x_1
   POL(s(x_1)) = 1 + x_1
   POL(tt) = 0
   POL(zeros) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   length(cons(N, L)) -> U61(isNatList(L), L, N)




----------------------------------------

(22)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U21(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U51(tt, V2) -> U52(isNatList(V2))
   isNat(0) -> tt
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
tt: empty set
U21: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
isNat: empty set
s: {1}

----------------------------------------

(23) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U21(tt) -> tt
   U41(tt, V2) -> U42(isNatIList(V2))
   U51(tt, V2) -> U52(isNatList(V2))
   isNat(0) -> tt
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
tt: empty set
U21: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
isNat: empty set
s: {1}
Used ordering:
Matrix interpretation [MATRO] to (N^2, +, *, >=, >) :

   <<<
 POL(zeros) =  	[[0], [0]]
>>>

   <<<
 POL(cons(x_1, x_2)) =  	[[0], [0]] 	 +  	[[1, 1], [1, 0]] 	* 	x_1 	 +  	[[1, 1], [1, 1]] 	* 	x_2
>>>

   <<<
 POL(0) =  	[[0], [0]]
>>>

   <<<
 POL(U21(x_1)) =  	[[1], [0]] 	 +  	[[1, 1], [0, 0]] 	* 	x_1
>>>

   <<<
 POL(tt) =  	[[0], [0]]
>>>

   <<<
 POL(U41(x_1, x_2)) =  	[[0], [0]] 	 +  	[[1, 0], [1, 1]] 	* 	x_1 	 +  	[[1, 1], [1, 1]] 	* 	x_2
>>>

   <<<
 POL(U42(x_1)) =  	[[0], [0]] 	 +  	[[1, 0], [1, 0]] 	* 	x_1
>>>

   <<<
 POL(isNatIList(x_1)) =  	[[0], [1]] 	 +  	[[1, 0], [1, 1]] 	* 	x_1
>>>

   <<<
 POL(U51(x_1, x_2)) =  	[[0], [1]] 	 +  	[[1, 0], [1, 0]] 	* 	x_1 	 +  	[[1, 1], [1, 1]] 	* 	x_2
>>>

   <<<
 POL(U52(x_1)) =  	[[0], [0]] 	 +  	[[1, 0], [0, 1]] 	* 	x_1
>>>

   <<<
 POL(isNatList(x_1)) =  	[[0], [1]] 	 +  	[[1, 0], [1, 1]] 	* 	x_1
>>>

   <<<
 POL(isNat(x_1)) =  	[[0], [1]] 	 +  	[[1, 1], [0, 0]] 	* 	x_1
>>>

   <<<
 POL(s(x_1)) =  	[[1], [1]] 	 +  	[[1, 1], [1, 1]] 	* 	x_1
>>>

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   U21(tt) -> tt




----------------------------------------

(24)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U41(tt, V2) -> U42(isNatIList(V2))
   U51(tt, V2) -> U52(isNatList(V2))
   isNat(0) -> tt
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
tt: empty set
U21: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
isNat: empty set
s: {1}

----------------------------------------

(25) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   zeros -> cons(0, zeros)
   U41(tt, V2) -> U42(isNatIList(V2))
   U51(tt, V2) -> U52(isNatList(V2))
   isNat(0) -> tt
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)

The replacement map contains the following entries:

zeros: empty set
cons: {1}
0: empty set
tt: empty set
U21: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
isNat: empty set
s: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(U21(x_1)) = 2*x_1
   POL(U41(x_1, x_2)) = 2*x_1
   POL(U42(x_1)) = 2*x_1
   POL(U51(x_1, x_2)) = x_1
   POL(U52(x_1)) = x_1
   POL(cons(x_1, x_2)) = 2*x_1
   POL(isNat(x_1)) = 0
   POL(isNatIList(x_1)) = 0
   POL(isNatList(x_1)) = 0
   POL(s(x_1)) = 2 + x_1
   POL(tt) = 0
   POL(zeros) = 1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   zeros -> cons(0, zeros)




----------------------------------------

(26)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   U41(tt, V2) -> U42(isNatIList(V2))
   U51(tt, V2) -> U52(isNatList(V2))
   isNat(0) -> tt
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)

The replacement map contains the following entries:

cons: {1}
0: empty set
tt: empty set
U21: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
isNat: empty set
s: {1}

----------------------------------------

(27) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   U41(tt, V2) -> U42(isNatIList(V2))
   U51(tt, V2) -> U52(isNatList(V2))
   isNat(0) -> tt
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)
   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)

The replacement map contains the following entries:

cons: {1}
0: empty set
tt: empty set
U21: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
isNat: empty set
s: {1}
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 1
   POL(U21(x_1)) = x_1
   POL(U41(x_1, x_2)) = x_1
   POL(U42(x_1)) = x_1
   POL(U51(x_1, x_2)) = x_1 + x_2
   POL(U52(x_1)) = x_1
   POL(cons(x_1, x_2)) = 1 + x_1 + x_2
   POL(isNat(x_1)) = 0
   POL(isNatIList(x_1)) = 0
   POL(isNatList(x_1)) = x_1
   POL(s(x_1)) = 1 + x_1
   POL(tt) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   isNatList(cons(V1, V2)) -> U51(isNat(V1), V2)




----------------------------------------

(28)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   U41(tt, V2) -> U42(isNatIList(V2))
   U51(tt, V2) -> U52(isNatList(V2))
   isNat(0) -> tt
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)

The replacement map contains the following entries:

cons: {1}
0: empty set
tt: empty set
U21: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
isNat: empty set
s: {1}

----------------------------------------

(29) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   U41(tt, V2) -> U42(isNatIList(V2))
   U51(tt, V2) -> U52(isNatList(V2))
   isNat(0) -> tt
   isNat(s(V1)) -> U21(isNat(V1))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)

The replacement map contains the following entries:

cons: {1}
0: empty set
tt: empty set
U21: {1}
U41: {1}
U42: {1}
isNatIList: empty set
U51: {1}
U52: {1}
isNatList: empty set
isNat: empty set
s: {1}
Used ordering:
Matrix interpretation [MATRO] to (N^2, +, *, >=, >) :

   <<<
 POL(U41(x_1, x_2)) =  	[[0], [0]] 	 +  	[[1, 1], [1, 1]] 	* 	x_1 	 +  	[[1, 1], [1, 1]] 	* 	x_2
>>>

   <<<
 POL(tt) =  	[[1], [1]]
>>>

   <<<
 POL(U42(x_1)) =  	[[1], [1]] 	 +  	[[1, 0], [1, 0]] 	* 	x_1
>>>

   <<<
 POL(isNatIList(x_1)) =  	[[1], [1]] 	 +  	[[1, 1], [1, 1]] 	* 	x_1
>>>

   <<<
 POL(U51(x_1, x_2)) =  	[[1], [1]] 	 +  	[[1, 1], [1, 1]] 	* 	x_1 	 +  	[[1, 1], [1, 1]] 	* 	x_2
>>>

   <<<
 POL(U52(x_1)) =  	[[0], [1]] 	 +  	[[1, 1], [1, 1]] 	* 	x_1
>>>

   <<<
 POL(isNatList(x_1)) =  	[[1], [0]] 	 +  	[[1, 0], [0, 1]] 	* 	x_1
>>>

   <<<
 POL(isNat(x_1)) =  	[[1], [1]] 	 +  	[[1, 1], [1, 1]] 	* 	x_1
>>>

   <<<
 POL(0) =  	[[0], [1]]
>>>

   <<<
 POL(s(x_1)) =  	[[1], [1]] 	 +  	[[1, 1], [1, 1]] 	* 	x_1
>>>

   <<<
 POL(U21(x_1)) =  	[[0], [1]] 	 +  	[[1, 1], [1, 1]] 	* 	x_1
>>>

   <<<
 POL(cons(x_1, x_2)) =  	[[0], [1]] 	 +  	[[1, 1], [1, 1]] 	* 	x_1 	 +  	[[1, 1], [1, 1]] 	* 	x_2
>>>

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   U51(tt, V2) -> U52(isNatList(V2))
   isNat(0) -> tt
   isNat(s(V1)) -> U21(isNat(V1))




----------------------------------------

(30)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   U41(tt, V2) -> U42(isNatIList(V2))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)

The replacement map contains the following entries:

cons: {1}
tt: empty set
U41: {1}
U42: {1}
isNatIList: empty set
isNat: empty set

----------------------------------------

(31) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   U41(tt, V2) -> U42(isNatIList(V2))
   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)

The replacement map contains the following entries:

cons: {1}
tt: empty set
U41: {1}
U42: {1}
isNatIList: empty set
isNat: empty set
Used ordering:
Matrix interpretation [MATRO] to (N^2, +, *, >=, >) :

   <<<
 POL(U41(x_1, x_2)) =  	[[1], [1]] 	 +  	[[1, 1], [0, 1]] 	* 	x_1 	 +  	[[1, 1], [0, 0]] 	* 	x_2
>>>

   <<<
 POL(tt) =  	[[1], [1]]
>>>

   <<<
 POL(U42(x_1)) =  	[[1], [1]] 	 +  	[[1, 1], [0, 1]] 	* 	x_1
>>>

   <<<
 POL(isNatIList(x_1)) =  	[[0], [1]] 	 +  	[[1, 1], [0, 0]] 	* 	x_1
>>>

   <<<
 POL(cons(x_1, x_2)) =  	[[0], [1]] 	 +  	[[1, 1], [1, 1]] 	* 	x_1 	 +  	[[1, 1], [1, 1]] 	* 	x_2
>>>

   <<<
 POL(isNat(x_1)) =  	[[0], [0]] 	 +  	[[1, 1], [0, 0]] 	* 	x_1
>>>

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   U41(tt, V2) -> U42(isNatIList(V2))




----------------------------------------

(32)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)

The replacement map contains the following entries:

cons: {1}
U41: {1}
isNatIList: empty set
isNat: empty set

----------------------------------------

(33) CSRRRRProof (EQUIVALENT)
The following CSR is given: Context-sensitive rewrite system:
The TRS R consists of the following rules:

   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)

The replacement map contains the following entries:

cons: {1}
U41: {1}
isNatIList: empty set
isNat: empty set
Used ordering:
Matrix interpretation [MATRO] to (N^2, +, *, >=, >) :

   <<<
 POL(isNatIList(x_1)) =  	[[1]] 	 +  	[[1, 1]] 	* 	x_1
>>>

   <<<
 POL(cons(x_1, x_2)) =  	[[1], [1]] 	 +  	[[1, 1], [0, 1]] 	* 	x_1 	 +  	[[1, 1], [1, 1]] 	* 	x_2
>>>

   <<<
 POL(U41(x_1, x_2)) =  	[[0]] 	 +  	[[1, 1]] 	* 	x_1 	 +  	[[1, 0]] 	* 	x_2
>>>

   <<<
 POL(isNat(x_1)) =  	[[1], [1]] 	 +  	[[1, 1], [0, 1]] 	* 	x_1
>>>

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   isNatIList(cons(V1, V2)) -> U41(isNat(V1), V2)




----------------------------------------

(34)
Obligation:
Context-sensitive rewrite system:
R is empty.

----------------------------------------

(35) RisEmptyProof (EQUIVALENT)
The CSR R is empty. Hence, termination is trivially proven.
----------------------------------------

(36)
YES
