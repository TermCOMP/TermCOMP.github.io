YES

Problem 1: 

(VAR vu95NonEmpty X X1 X2 Y Z)
(RULES
active(cons(X1,X2)) -> cons(active(X1),X2)
active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
active(first(num0,X)) -> mark(nil)
active(first(X1,X2)) -> first(active(X1),X2)
active(first(X1,X2)) -> first(X1,active(X2))
active(from(X)) -> from(active(X))
active(from(X)) -> mark(cons(X,from(s(X))))
active(s(X)) -> s(active(X))
cons(mark(X1),X2) -> mark(cons(X1,X2))
cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
first(mark(X1),X2) -> mark(first(X1,X2))
first(ok(X1),ok(X2)) -> ok(first(X1,X2))
first(X1,mark(X2)) -> mark(first(X1,X2))
from(mark(X)) -> mark(from(X))
from(ok(X)) -> ok(from(X))
proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
proper(first(X1,X2)) -> first(proper(X1),proper(X2))
proper(from(X)) -> from(proper(X))
proper(s(X)) -> s(proper(X))
proper(num0) -> ok(num0)
proper(nil) -> ok(nil)
s(mark(X)) -> mark(s(X))
s(ok(X)) -> ok(s(X))
top(mark(X)) -> top(proper(X))
top(ok(X)) -> top(active(X))
)
 
(STRATEGY INNERMOST)

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ACTIVE(cons(X1,X2)) -> ACTIVE(X1)
 ACTIVE(cons(X1,X2)) -> CONS(active(X1),X2)
 ACTIVE(first(s(X),cons(Y,Z))) -> CONS(Y,first(X,Z))
 ACTIVE(first(s(X),cons(Y,Z))) -> FIRST(X,Z)
 ACTIVE(first(X1,X2)) -> ACTIVE(X1)
 ACTIVE(first(X1,X2)) -> ACTIVE(X2)
 ACTIVE(first(X1,X2)) -> FIRST(active(X1),X2)
 ACTIVE(first(X1,X2)) -> FIRST(X1,active(X2))
 ACTIVE(from(X)) -> ACTIVE(X)
 ACTIVE(from(X)) -> CONS(X,from(s(X)))
 ACTIVE(from(X)) -> FROM(active(X))
 ACTIVE(from(X)) -> FROM(s(X))
 ACTIVE(from(X)) -> S(X)
 ACTIVE(s(X)) -> ACTIVE(X)
 ACTIVE(s(X)) -> S(active(X))
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(ok(X1),ok(X2)) -> CONS(X1,X2)
 FIRST(mark(X1),X2) -> FIRST(X1,X2)
 FIRST(ok(X1),ok(X2)) -> FIRST(X1,X2)
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
 FROM(mark(X)) -> FROM(X)
 FROM(ok(X)) -> FROM(X)
 PROPER(cons(X1,X2)) -> CONS(proper(X1),proper(X2))
 PROPER(cons(X1,X2)) -> PROPER(X1)
 PROPER(cons(X1,X2)) -> PROPER(X2)
 PROPER(first(X1,X2)) -> FIRST(proper(X1),proper(X2))
 PROPER(first(X1,X2)) -> PROPER(X1)
 PROPER(first(X1,X2)) -> PROPER(X2)
 PROPER(from(X)) -> FROM(proper(X))
 PROPER(from(X)) -> PROPER(X)
 PROPER(s(X)) -> PROPER(X)
 PROPER(s(X)) -> S(proper(X))
 S(mark(X)) -> S(X)
 S(ok(X)) -> S(X)
 TOP(mark(X)) -> PROPER(X)
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> ACTIVE(X)
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVE(cons(X1,X2)) -> ACTIVE(X1)
 ACTIVE(cons(X1,X2)) -> CONS(active(X1),X2)
 ACTIVE(first(s(X),cons(Y,Z))) -> CONS(Y,first(X,Z))
 ACTIVE(first(s(X),cons(Y,Z))) -> FIRST(X,Z)
 ACTIVE(first(X1,X2)) -> ACTIVE(X1)
 ACTIVE(first(X1,X2)) -> ACTIVE(X2)
 ACTIVE(first(X1,X2)) -> FIRST(active(X1),X2)
 ACTIVE(first(X1,X2)) -> FIRST(X1,active(X2))
 ACTIVE(from(X)) -> ACTIVE(X)
 ACTIVE(from(X)) -> CONS(X,from(s(X)))
 ACTIVE(from(X)) -> FROM(active(X))
 ACTIVE(from(X)) -> FROM(s(X))
 ACTIVE(from(X)) -> S(X)
 ACTIVE(s(X)) -> ACTIVE(X)
 ACTIVE(s(X)) -> S(active(X))
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(ok(X1),ok(X2)) -> CONS(X1,X2)
 FIRST(mark(X1),X2) -> FIRST(X1,X2)
 FIRST(ok(X1),ok(X2)) -> FIRST(X1,X2)
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
 FROM(mark(X)) -> FROM(X)
 FROM(ok(X)) -> FROM(X)
 PROPER(cons(X1,X2)) -> CONS(proper(X1),proper(X2))
 PROPER(cons(X1,X2)) -> PROPER(X1)
 PROPER(cons(X1,X2)) -> PROPER(X2)
 PROPER(first(X1,X2)) -> FIRST(proper(X1),proper(X2))
 PROPER(first(X1,X2)) -> PROPER(X1)
 PROPER(first(X1,X2)) -> PROPER(X2)
 PROPER(from(X)) -> FROM(proper(X))
 PROPER(from(X)) -> PROPER(X)
 PROPER(s(X)) -> PROPER(X)
 PROPER(s(X)) -> S(proper(X))
 S(mark(X)) -> S(X)
 S(ok(X)) -> S(X)
 TOP(mark(X)) -> PROPER(X)
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> ACTIVE(X)
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 S(mark(X)) -> S(X)
 S(ok(X)) -> S(X)
->->-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 FROM(mark(X)) -> FROM(X)
 FROM(ok(X)) -> FROM(X)
->->-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 FIRST(mark(X1),X2) -> FIRST(X1,X2)
 FIRST(ok(X1),ok(X2)) -> FIRST(X1,X2)
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
->->-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(ok(X1),ok(X2)) -> CONS(X1,X2)
->->-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 PROPER(cons(X1,X2)) -> PROPER(X1)
 PROPER(cons(X1,X2)) -> PROPER(X2)
 PROPER(first(X1,X2)) -> PROPER(X1)
 PROPER(first(X1,X2)) -> PROPER(X2)
 PROPER(from(X)) -> PROPER(X)
 PROPER(s(X)) -> PROPER(X)
->->-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 ACTIVE(cons(X1,X2)) -> ACTIVE(X1)
 ACTIVE(first(X1,X2)) -> ACTIVE(X1)
 ACTIVE(first(X1,X2)) -> ACTIVE(X2)
 ACTIVE(from(X)) -> ACTIVE(X)
 ACTIVE(s(X)) -> ACTIVE(X)
->->-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->->Cycle:
->->-> Pairs:
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> TOP(active(X))
->->-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))


The problem is decomposed in 7 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 S(mark(X)) -> S(X)
 S(ok(X)) -> S(X)
-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(S) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 FROM(mark(X)) -> FROM(X)
 FROM(ok(X)) -> FROM(X)
-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(FROM) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> Pairs:
 FIRST(mark(X1),X2) -> FIRST(X1,X2)
 FIRST(ok(X1),ok(X2)) -> FIRST(X1,X2)
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(FIRST) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
->->-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))

Problem 1.3: 

Subterm Processor:
-> Pairs:
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(FIRST) = 2

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Subterm Processor:
-> Pairs:
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(ok(X1),ok(X2)) -> CONS(X1,X2)
-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(CONS) = 1

Problem 1.4: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.5: 

Subterm Processor:
-> Pairs:
 PROPER(cons(X1,X2)) -> PROPER(X1)
 PROPER(cons(X1,X2)) -> PROPER(X2)
 PROPER(first(X1,X2)) -> PROPER(X1)
 PROPER(first(X1,X2)) -> PROPER(X2)
 PROPER(from(X)) -> PROPER(X)
 PROPER(s(X)) -> PROPER(X)
-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(PROPER) = 1

Problem 1.5: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.6: 

Subterm Processor:
-> Pairs:
 ACTIVE(cons(X1,X2)) -> ACTIVE(X1)
 ACTIVE(first(X1,X2)) -> ACTIVE(X1)
 ACTIVE(first(X1,X2)) -> ACTIVE(X2)
 ACTIVE(from(X)) -> ACTIVE(X)
 ACTIVE(s(X)) -> ACTIVE(X)
-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Projection:
 pi(ACTIVE) = 1

Problem 1.6: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.7: 

Reduction Pairs Processor:
-> Pairs:
 TOP(mark(X)) -> TOP(proper(X))
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
-> Usable rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = X
[cons](X1,X2) = 2.X1
[first](X1,X2) = 2.X1 + 2.X2 + 2
[from](X) = 2.X + 2
[proper](X) = X
[s](X) = X + 2
[top](X) = 0
[num0] = 2
[fSNonEmpty] = 0
[mark](X) = X + 2
[nil] = 2
[ok](X) = X
[ACTIVE](X) = 0
[CONS](X1,X2) = 0
[FIRST](X1,X2) = 0
[FROM](X) = 0
[PROPER](X) = 0
[S](X) = 0
[TOP](X) = X

Problem 1.7: 

SCC Processor:
-> Pairs:
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 TOP(ok(X)) -> TOP(active(X))
->->-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))

Problem 1.7: 

Reduction Pairs Processor:
-> Pairs:
 TOP(ok(X)) -> TOP(active(X))
-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
-> Usable rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = 2.X + 1
[cons](X1,X2) = 2.X1 + 2
[first](X1,X2) = X1 + X2
[from](X) = 2.X + 2
[proper](X) = 0
[s](X) = 2.X + 2
[top](X) = 0
[num0] = 2
[fSNonEmpty] = 0
[mark](X) = X + 2
[nil] = 1
[ok](X) = 2.X + 2
[ACTIVE](X) = 0
[CONS](X1,X2) = 0
[FIRST](X1,X2) = 0
[FROM](X) = 0
[PROPER](X) = 0
[S](X) = 0
[TOP](X) = 2.X

Problem 1.7: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(cons(X1,X2)) -> cons(active(X1),X2)
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(first(X1,X2)) -> first(active(X1),X2)
 active(first(X1,X2)) -> first(X1,active(X2))
 active(from(X)) -> from(active(X))
 active(from(X)) -> mark(cons(X,from(s(X))))
 active(s(X)) -> s(active(X))
 cons(mark(X1),X2) -> mark(cons(X1,X2))
 cons(ok(X1),ok(X2)) -> ok(cons(X1,X2))
 first(mark(X1),X2) -> mark(first(X1,X2))
 first(ok(X1),ok(X2)) -> ok(first(X1,X2))
 first(X1,mark(X2)) -> mark(first(X1,X2))
 from(mark(X)) -> mark(from(X))
 from(ok(X)) -> ok(from(X))
 proper(cons(X1,X2)) -> cons(proper(X1),proper(X2))
 proper(first(X1,X2)) -> first(proper(X1),proper(X2))
 proper(from(X)) -> from(proper(X))
 proper(s(X)) -> s(proper(X))
 proper(num0) -> ok(num0)
 proper(nil) -> ok(nil)
 s(mark(X)) -> mark(s(X))
 s(ok(X)) -> ok(s(X))
 top(mark(X)) -> top(proper(X))
 top(ok(X)) -> top(active(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
