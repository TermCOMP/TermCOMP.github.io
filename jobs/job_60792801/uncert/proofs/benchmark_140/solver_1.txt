YES
proof of /home/ff862203/input_JiQu8TqEgq.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) RFCMatchBoundsTRSProof [EQUIVALENT, 0 ms]
(2) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__f(f(X)) -> a__c(f(g(f(X))))
   a__c(X) -> d(X)
   a__h(X) -> a__c(d(X))
   mark(f(X)) -> a__f(mark(X))
   mark(c(X)) -> a__c(X)
   mark(h(X)) -> a__h(mark(X))
   mark(g(X)) -> g(X)
   mark(d(X)) -> d(X)
   a__f(X) -> f(X)
   a__c(X) -> c(X)
   a__h(X) -> h(X)

The set Q consists of the following terms:

   mark(d(x0))
   a__f(x0)
   a__c(x0)
   mark(c(x0))
   mark(h(x0))
   a__h(x0)
   mark(g(x0))
   mark(f(x0))


----------------------------------------

(1) RFCMatchBoundsTRSProof (EQUIVALENT)
Termination of the TRS R could be shown with a Match Bound [MATCHBOUNDS1,MATCHBOUNDS2] of 3. This implies Q-termination of R.
The following rules were used to construct the certificate:

   a__f(f(X)) -> a__c(f(g(f(X))))
   a__c(X) -> d(X)
   a__h(X) -> a__c(d(X))
   mark(f(X)) -> a__f(mark(X))
   mark(c(X)) -> a__c(X)
   mark(h(X)) -> a__h(mark(X))
   mark(g(X)) -> g(X)
   mark(d(X)) -> d(X)
   a__f(X) -> f(X)
   a__c(X) -> c(X)
   a__h(X) -> h(X)

The certificate found is represented by the following graph.
The certificate consists of the following enumerated nodes:
1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15

Node 1 is start node and node 2 is final node.

Those nodes are connected through the following edges:

* 1 to 3 labelled a__c_1(0), d_1(1), c_1(1)* 1 to 2 labelled d_1(0), a__c_1(0), g_1(0), f_1(0), c_1(0), h_1(0), d_1(1), c_1(1)* 1 to 1 labelled a__c_1(0), d_1(1), c_1(1)* 1 to 6 labelled a__f_1(0), a__h_1(0), f_1(1), h_1(1)* 1 to 7 labelled a__c_1(1), d_1(2), c_1(2)* 1 to 10 labelled a__c_1(1), d_1(2), c_1(2)* 2 to 2 labelled #_1(0)* 3 to 4 labelled f_1(0)* 4 to 5 labelled g_1(0)* 5 to 2 labelled f_1(0)* 6 to 2 labelled mark_1(0), a__c_1(1), g_1(1), d_1(1), d_1(2), c_1(2)* 6 to 8 labelled a__f_1(1), a__h_1(1), f_1(2), h_1(2)* 6 to 9 labelled a__c_1(2), d_1(3), c_1(3)* 6 to 13 labelled a__c_1(2), d_1(3), c_1(3)* 7 to 6 labelled d_1(1)* 8 to 2 labelled mark_1(1), a__c_1(1), g_1(1), d_1(1), d_1(2), c_1(2)* 8 to 8 labelled a__f_1(1), a__h_1(1), f_1(2), h_1(2)* 8 to 9 labelled a__c_1(2), d_1(3), c_1(3)* 8 to 13 labelled a__c_1(2), d_1(3), c_1(3)* 9 to 8 labelled d_1(2)* 10 to 11 labelled f_1(1)* 11 to 12 labelled g_1(1)* 12 to 8 labelled f_1(1)* 13 to 14 labelled f_1(2)* 14 to 15 labelled g_1(2)* 15 to 8 labelled f_1(2)


----------------------------------------

(2)
YES
