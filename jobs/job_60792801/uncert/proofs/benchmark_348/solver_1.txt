YES
proof of /home/ff862203/input_E5zSrSrFZq.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 36 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 0 ms]
(4) QTRS
(5) QTRSRRRProof [EQUIVALENT, 6 ms]
(6) QTRS
(7) QTRSRRRProof [EQUIVALENT, 0 ms]
(8) QTRS
(9) RisEmptyProof [EQUIVALENT, 0 ms]
(10) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(__(__(X, Y), Z)) -> mark(__(X, __(Y, Z)))
   active(__(X, nil)) -> mark(X)
   active(__(nil, X)) -> mark(X)
   active(U11(tt)) -> mark(U12(tt))
   active(U12(tt)) -> mark(tt)
   active(isNePal(__(I, __(P, I)))) -> mark(U11(tt))
   mark(__(X1, X2)) -> active(__(mark(X1), mark(X2)))
   mark(nil) -> active(nil)
   mark(U11(X)) -> active(U11(mark(X)))
   mark(tt) -> active(tt)
   mark(U12(X)) -> active(U12(mark(X)))
   mark(isNePal(X)) -> active(isNePal(mark(X)))
   __(mark(X1), X2) -> __(X1, X2)
   __(X1, mark(X2)) -> __(X1, X2)
   __(active(X1), X2) -> __(X1, X2)
   __(X1, active(X2)) -> __(X1, X2)
   U11(mark(X)) -> U11(X)
   U11(active(X)) -> U11(X)
   U12(mark(X)) -> U12(X)
   U12(active(X)) -> U12(X)
   isNePal(mark(X)) -> isNePal(X)
   isNePal(active(X)) -> isNePal(X)

The set Q consists of the following terms:

   active(U11(tt))
   __(active(x0), x1)
   active(__(__(x0, x1), x2))
   mark(tt)
   isNePal(mark(x0))
   isNePal(active(x0))
   U12(mark(x0))
   active(__(x0, nil))
   active(__(nil, x0))
   __(x0, active(x1))
   mark(__(x0, x1))
   U11(active(x0))
   active(isNePal(__(x0, __(x1, x0))))
   mark(U11(x0))
   __(mark(x0), x1)
   active(U12(tt))
   mark(U12(x0))
   U11(mark(x0))
   __(x0, mark(x1))
   mark(nil)
   mark(isNePal(x0))
   U12(active(x0))


----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(U11(x_1)) = 2 + x_1
   POL(U12(x_1)) = 2*x_1
   POL(__(x_1, x_2)) = 2 + x_1 + x_2
   POL(active(x_1)) = x_1
   POL(isNePal(x_1)) = x_1
   POL(mark(x_1)) = x_1
   POL(nil) = 0
   POL(tt) = 1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   active(__(X, nil)) -> mark(X)
   active(__(nil, X)) -> mark(X)
   active(U11(tt)) -> mark(U12(tt))
   active(U12(tt)) -> mark(tt)
   active(isNePal(__(I, __(P, I)))) -> mark(U11(tt))




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(__(__(X, Y), Z)) -> mark(__(X, __(Y, Z)))
   mark(__(X1, X2)) -> active(__(mark(X1), mark(X2)))
   mark(nil) -> active(nil)
   mark(U11(X)) -> active(U11(mark(X)))
   mark(tt) -> active(tt)
   mark(U12(X)) -> active(U12(mark(X)))
   mark(isNePal(X)) -> active(isNePal(mark(X)))
   __(mark(X1), X2) -> __(X1, X2)
   __(X1, mark(X2)) -> __(X1, X2)
   __(active(X1), X2) -> __(X1, X2)
   __(X1, active(X2)) -> __(X1, X2)
   U11(mark(X)) -> U11(X)
   U11(active(X)) -> U11(X)
   U12(mark(X)) -> U12(X)
   U12(active(X)) -> U12(X)
   isNePal(mark(X)) -> isNePal(X)
   isNePal(active(X)) -> isNePal(X)

The set Q consists of the following terms:

   active(U11(tt))
   __(active(x0), x1)
   active(__(__(x0, x1), x2))
   mark(tt)
   isNePal(mark(x0))
   isNePal(active(x0))
   U12(mark(x0))
   active(__(x0, nil))
   active(__(nil, x0))
   __(x0, active(x1))
   mark(__(x0, x1))
   U11(active(x0))
   active(isNePal(__(x0, __(x1, x0))))
   mark(U11(x0))
   __(mark(x0), x1)
   active(U12(tt))
   mark(U12(x0))
   U11(mark(x0))
   __(x0, mark(x1))
   mark(nil)
   mark(isNePal(x0))
   U12(active(x0))


----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(U11(x_1)) = 2*x_1
   POL(U12(x_1)) = x_1
   POL(__(x_1, x_2)) = 2 + 2*x_1 + x_2
   POL(active(x_1)) = x_1
   POL(isNePal(x_1)) = x_1
   POL(mark(x_1)) = x_1
   POL(nil) = 0
   POL(tt) = 0
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   active(__(__(X, Y), Z)) -> mark(__(X, __(Y, Z)))




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   mark(__(X1, X2)) -> active(__(mark(X1), mark(X2)))
   mark(nil) -> active(nil)
   mark(U11(X)) -> active(U11(mark(X)))
   mark(tt) -> active(tt)
   mark(U12(X)) -> active(U12(mark(X)))
   mark(isNePal(X)) -> active(isNePal(mark(X)))
   __(mark(X1), X2) -> __(X1, X2)
   __(X1, mark(X2)) -> __(X1, X2)
   __(active(X1), X2) -> __(X1, X2)
   __(X1, active(X2)) -> __(X1, X2)
   U11(mark(X)) -> U11(X)
   U11(active(X)) -> U11(X)
   U12(mark(X)) -> U12(X)
   U12(active(X)) -> U12(X)
   isNePal(mark(X)) -> isNePal(X)
   isNePal(active(X)) -> isNePal(X)

The set Q consists of the following terms:

   active(U11(tt))
   __(active(x0), x1)
   active(__(__(x0, x1), x2))
   mark(tt)
   isNePal(mark(x0))
   isNePal(active(x0))
   U12(mark(x0))
   active(__(x0, nil))
   active(__(nil, x0))
   __(x0, active(x1))
   mark(__(x0, x1))
   U11(active(x0))
   active(isNePal(__(x0, __(x1, x0))))
   mark(U11(x0))
   __(mark(x0), x1)
   active(U12(tt))
   mark(U12(x0))
   U11(mark(x0))
   __(x0, mark(x1))
   mark(nil)
   mark(isNePal(x0))
   U12(active(x0))


----------------------------------------

(5) QTRSRRRProof (EQUIVALENT)
Used ordering:
mark/1(YES)
__/2(YES,YES)
active/1)YES(
nil/0)
U11/1(YES)
tt/0)
U12/1(YES)
isNePal/1(YES)

Quasi precedence:
mark_1 > ___2
mark_1 > nil
mark_1 > U11_1
mark_1 > U12_1
mark_1 > isNePal_1


Status:
mark_1: multiset status
___2: multiset status
nil: multiset status
U11_1: multiset status
tt: multiset status
U12_1: multiset status
isNePal_1: multiset status

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   mark(__(X1, X2)) -> active(__(mark(X1), mark(X2)))
   mark(nil) -> active(nil)
   mark(U11(X)) -> active(U11(mark(X)))
   mark(tt) -> active(tt)
   mark(U12(X)) -> active(U12(mark(X)))
   mark(isNePal(X)) -> active(isNePal(mark(X)))
   __(mark(X1), X2) -> __(X1, X2)
   __(X1, mark(X2)) -> __(X1, X2)
   U11(mark(X)) -> U11(X)
   U12(mark(X)) -> U12(X)
   isNePal(mark(X)) -> isNePal(X)




----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   __(active(X1), X2) -> __(X1, X2)
   __(X1, active(X2)) -> __(X1, X2)
   U11(active(X)) -> U11(X)
   U12(active(X)) -> U12(X)
   isNePal(active(X)) -> isNePal(X)

The set Q consists of the following terms:

   active(U11(tt))
   __(active(x0), x1)
   active(__(__(x0, x1), x2))
   mark(tt)
   isNePal(mark(x0))
   isNePal(active(x0))
   U12(mark(x0))
   active(__(x0, nil))
   active(__(nil, x0))
   __(x0, active(x1))
   mark(__(x0, x1))
   U11(active(x0))
   active(isNePal(__(x0, __(x1, x0))))
   mark(U11(x0))
   __(mark(x0), x1)
   active(U12(tt))
   mark(U12(x0))
   U11(mark(x0))
   __(x0, mark(x1))
   mark(nil)
   mark(isNePal(x0))
   U12(active(x0))


----------------------------------------

(7) QTRSRRRProof (EQUIVALENT)
Used ordering:
Knuth-Bendix order [KBO] with precedence:active_1 > isNePal_1 > U12_1 > U11_1 > ___2

and weight map:

   active_1=0
   U11_1=1
   U12_1=1
   isNePal_1=1
   ___2=0

The variable weight is 1With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   __(active(X1), X2) -> __(X1, X2)
   __(X1, active(X2)) -> __(X1, X2)
   U11(active(X)) -> U11(X)
   U12(active(X)) -> U12(X)
   isNePal(active(X)) -> isNePal(X)




----------------------------------------

(8)
Obligation:
Q restricted rewrite system:
R is empty.
The set Q consists of the following terms:

   active(U11(tt))
   __(active(x0), x1)
   active(__(__(x0, x1), x2))
   mark(tt)
   isNePal(mark(x0))
   isNePal(active(x0))
   U12(mark(x0))
   active(__(x0, nil))
   active(__(nil, x0))
   __(x0, active(x1))
   mark(__(x0, x1))
   U11(active(x0))
   active(isNePal(__(x0, __(x1, x0))))
   mark(U11(x0))
   __(mark(x0), x1)
   active(U12(tt))
   mark(U12(x0))
   U11(mark(x0))
   __(x0, mark(x1))
   mark(nil)
   mark(isNePal(x0))
   U12(active(x0))


----------------------------------------

(9) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(10)
YES
