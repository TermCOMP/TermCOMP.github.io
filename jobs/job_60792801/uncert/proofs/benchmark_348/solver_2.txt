YES

Problem 1: 

(VAR vu95NonEmpty I P X X1 X2 Y Z)
(RULES
U11(active(X)) -> U11(X)
U11(mark(X)) -> U11(X)
U12(active(X)) -> U12(X)
U12(mark(X)) -> U12(X)
u95u95(active(X1),X2) -> u95u95(X1,X2)
u95u95(mark(X1),X2) -> u95u95(X1,X2)
u95u95(X1,active(X2)) -> u95u95(X1,X2)
u95u95(X1,mark(X2)) -> u95u95(X1,X2)
active(U11(tt)) -> mark(U12(tt))
active(U12(tt)) -> mark(tt)
active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
active(u95u95(nil,X)) -> mark(X)
active(u95u95(X,nil)) -> mark(X)
active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
isNePal(active(X)) -> isNePal(X)
isNePal(mark(X)) -> isNePal(X)
mark(U11(X)) -> active(U11(mark(X)))
mark(U12(X)) -> active(U12(mark(X)))
mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
mark(isNePal(X)) -> active(isNePal(mark(X)))
mark(nil) -> active(nil)
mark(tt) -> active(tt)
)
 
(STRATEGY INNERMOST)

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 U11Sharp(active(X)) -> U11Sharp(X)
 U11Sharp(mark(X)) -> U11Sharp(X)
 U12Sharp(active(X)) -> U12Sharp(X)
 U12Sharp(mark(X)) -> U12Sharp(X)
 U95U95(active(X1),X2) -> U95U95(X1,X2)
 U95U95(mark(X1),X2) -> U95U95(X1,X2)
 U95U95(X1,active(X2)) -> U95U95(X1,X2)
 U95U95(X1,mark(X2)) -> U95U95(X1,X2)
 ACTIVE(U11(tt)) -> MARK(U12(tt))
 ACTIVE(U12(tt)) -> MARK(tt)
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> U95U95(X,u95u95(Y,Z))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> U95U95(Y,Z)
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(U11(tt))
 ISNEPAL(active(X)) -> ISNEPAL(X)
 ISNEPAL(mark(X)) -> ISNEPAL(X)
 MARK(U11(X)) -> U11Sharp(mark(X))
 MARK(U11(X)) -> ACTIVE(U11(mark(X)))
 MARK(U11(X)) -> MARK(X)
 MARK(U12(X)) -> U12Sharp(mark(X))
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(isNePal(X)) -> ACTIVE(isNePal(mark(X)))
 MARK(isNePal(X)) -> ISNEPAL(mark(X))
 MARK(isNePal(X)) -> MARK(X)
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)

Problem 1: 

SCC Processor:
-> Pairs:
 U11Sharp(active(X)) -> U11Sharp(X)
 U11Sharp(mark(X)) -> U11Sharp(X)
 U12Sharp(active(X)) -> U12Sharp(X)
 U12Sharp(mark(X)) -> U12Sharp(X)
 U95U95(active(X1),X2) -> U95U95(X1,X2)
 U95U95(mark(X1),X2) -> U95U95(X1,X2)
 U95U95(X1,active(X2)) -> U95U95(X1,X2)
 U95U95(X1,mark(X2)) -> U95U95(X1,X2)
 ACTIVE(U11(tt)) -> MARK(U12(tt))
 ACTIVE(U12(tt)) -> MARK(tt)
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> U95U95(X,u95u95(Y,Z))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> U95U95(Y,Z)
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(U11(tt))
 ISNEPAL(active(X)) -> ISNEPAL(X)
 ISNEPAL(mark(X)) -> ISNEPAL(X)
 MARK(U11(X)) -> U11Sharp(mark(X))
 MARK(U11(X)) -> ACTIVE(U11(mark(X)))
 MARK(U11(X)) -> MARK(X)
 MARK(U12(X)) -> U12Sharp(mark(X))
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(isNePal(X)) -> ACTIVE(isNePal(mark(X)))
 MARK(isNePal(X)) -> ISNEPAL(mark(X))
 MARK(isNePal(X)) -> MARK(X)
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ISNEPAL(active(X)) -> ISNEPAL(X)
 ISNEPAL(mark(X)) -> ISNEPAL(X)
->->-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->->Cycle:
->->-> Pairs:
 U95U95(active(X1),X2) -> U95U95(X1,X2)
 U95U95(mark(X1),X2) -> U95U95(X1,X2)
 U95U95(X1,active(X2)) -> U95U95(X1,X2)
 U95U95(X1,mark(X2)) -> U95U95(X1,X2)
->->-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->->Cycle:
->->-> Pairs:
 U12Sharp(active(X)) -> U12Sharp(X)
 U12Sharp(mark(X)) -> U12Sharp(X)
->->-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->->Cycle:
->->-> Pairs:
 U11Sharp(active(X)) -> U11Sharp(X)
 U11Sharp(mark(X)) -> U11Sharp(X)
->->-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->->Cycle:
->->-> Pairs:
 ACTIVE(U11(tt)) -> MARK(U12(tt))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(U11(tt))
 MARK(U11(X)) -> ACTIVE(U11(mark(X)))
 MARK(U11(X)) -> MARK(X)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(isNePal(X)) -> ACTIVE(isNePal(mark(X)))
 MARK(isNePal(X)) -> MARK(X)
->->-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)


The problem is decomposed in 5 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 ISNEPAL(active(X)) -> ISNEPAL(X)
 ISNEPAL(mark(X)) -> ISNEPAL(X)
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->Projection:
 pi(ISNEPAL) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 U95U95(active(X1),X2) -> U95U95(X1,X2)
 U95U95(mark(X1),X2) -> U95U95(X1,X2)
 U95U95(X1,active(X2)) -> U95U95(X1,X2)
 U95U95(X1,mark(X2)) -> U95U95(X1,X2)
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->Projection:
 pi(U95U95) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 U95U95(X1,active(X2)) -> U95U95(X1,X2)
 U95U95(X1,mark(X2)) -> U95U95(X1,X2)
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U95U95(X1,active(X2)) -> U95U95(X1,X2)
 U95U95(X1,mark(X2)) -> U95U95(X1,X2)
->->-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)

Problem 1.2: 

Subterm Processor:
-> Pairs:
 U95U95(X1,active(X2)) -> U95U95(X1,X2)
 U95U95(X1,mark(X2)) -> U95U95(X1,X2)
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->Projection:
 pi(U95U95) = 2

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> Pairs:
 U12Sharp(active(X)) -> U12Sharp(X)
 U12Sharp(mark(X)) -> U12Sharp(X)
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->Projection:
 pi(U12Sharp) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Subterm Processor:
-> Pairs:
 U11Sharp(active(X)) -> U11Sharp(X)
 U11Sharp(mark(X)) -> U11Sharp(X)
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->Projection:
 pi(U11Sharp) = 1

Problem 1.4: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.5: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(U11(tt)) -> MARK(U12(tt))
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(U11(tt))
 MARK(U11(X)) -> ACTIVE(U11(mark(X)))
 MARK(U11(X)) -> MARK(X)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(isNePal(X)) -> ACTIVE(isNePal(mark(X)))
 MARK(isNePal(X)) -> MARK(X)
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
-> Usable rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X) = 2.X + 2
[U12](X) = X + 2
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[isNePal](X) = 2.X + 2
[mark](X) = X
[fSNonEmpty] = 0
[nil] = 1
[tt] = 2
[U11Sharp](X) = 0
[U12Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 1
[ISNEPAL](X) = 0
[MARK](X) = 2.X + 2

Problem 1.5: 

SCC Processor:
-> Pairs:
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(U11(tt))
 MARK(U11(X)) -> ACTIVE(U11(mark(X)))
 MARK(U11(X)) -> MARK(X)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(isNePal(X)) -> ACTIVE(isNePal(mark(X)))
 MARK(isNePal(X)) -> MARK(X)
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(U11(tt))
 MARK(U11(X)) -> ACTIVE(U11(mark(X)))
 MARK(U11(X)) -> MARK(X)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(isNePal(X)) -> ACTIVE(isNePal(mark(X)))
 MARK(isNePal(X)) -> MARK(X)
->->-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)

Problem 1.5: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(u95u95(u95u95(X,Y),Z)) -> MARK(u95u95(X,u95u95(Y,Z)))
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(U11(tt))
 MARK(U11(X)) -> ACTIVE(U11(mark(X)))
 MARK(U11(X)) -> MARK(X)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(isNePal(X)) -> ACTIVE(isNePal(mark(X)))
 MARK(isNePal(X)) -> MARK(X)
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
-> Usable rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X) = 2.X + 2
[U12](X) = 2.X + 2
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[isNePal](X) = 2.X + 2
[mark](X) = X
[fSNonEmpty] = 0
[nil] = 2
[tt] = 2
[U11Sharp](X) = 0
[U12Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X
[ISNEPAL](X) = 0
[MARK](X) = 2.X + 2

Problem 1.5: 

SCC Processor:
-> Pairs:
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(U11(tt))
 MARK(U11(X)) -> ACTIVE(U11(mark(X)))
 MARK(U11(X)) -> MARK(X)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(isNePal(X)) -> ACTIVE(isNePal(mark(X)))
 MARK(isNePal(X)) -> MARK(X)
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(U11(tt))
 MARK(U11(X)) -> ACTIVE(U11(mark(X)))
 MARK(U11(X)) -> MARK(X)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(isNePal(X)) -> ACTIVE(isNePal(mark(X)))
 MARK(isNePal(X)) -> MARK(X)
->->-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)

Problem 1.5: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(u95u95(nil,X)) -> MARK(X)
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(U11(tt))
 MARK(U11(X)) -> ACTIVE(U11(mark(X)))
 MARK(U11(X)) -> MARK(X)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(isNePal(X)) -> ACTIVE(isNePal(mark(X)))
 MARK(isNePal(X)) -> MARK(X)
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
-> Usable rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X) = 2.X + 2
[U12](X) = X + 2
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[isNePal](X) = 2.X + 1
[mark](X) = X
[fSNonEmpty] = 0
[nil] = 2
[tt] = 0
[U11Sharp](X) = 0
[U12Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[ISNEPAL](X) = 0
[MARK](X) = 2.X + 2

Problem 1.5: 

SCC Processor:
-> Pairs:
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(U11(tt))
 MARK(U11(X)) -> ACTIVE(U11(mark(X)))
 MARK(U11(X)) -> MARK(X)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(isNePal(X)) -> ACTIVE(isNePal(mark(X)))
 MARK(isNePal(X)) -> MARK(X)
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(U11(tt))
 MARK(U11(X)) -> ACTIVE(U11(mark(X)))
 MARK(U11(X)) -> MARK(X)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(isNePal(X)) -> ACTIVE(isNePal(mark(X)))
 MARK(isNePal(X)) -> MARK(X)
->->-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)

Problem 1.5: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(u95u95(X,nil)) -> MARK(X)
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(U11(tt))
 MARK(U11(X)) -> ACTIVE(U11(mark(X)))
 MARK(U11(X)) -> MARK(X)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(isNePal(X)) -> ACTIVE(isNePal(mark(X)))
 MARK(isNePal(X)) -> MARK(X)
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
-> Usable rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X) = 2.X + 2
[U12](X) = X + 1
[u95u95](X1,X2) = 2.X1 + X2 + 2
[active](X) = X
[isNePal](X) = 2.X + 2
[mark](X) = X
[fSNonEmpty] = 0
[nil] = 1
[tt] = 2
[U11Sharp](X) = 0
[U12Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 1
[ISNEPAL](X) = 0
[MARK](X) = 2.X + 2

Problem 1.5: 

SCC Processor:
-> Pairs:
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(U11(tt))
 MARK(U11(X)) -> ACTIVE(U11(mark(X)))
 MARK(U11(X)) -> MARK(X)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(isNePal(X)) -> ACTIVE(isNePal(mark(X)))
 MARK(isNePal(X)) -> MARK(X)
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(U11(tt))
 MARK(U11(X)) -> ACTIVE(U11(mark(X)))
 MARK(U11(X)) -> MARK(X)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(isNePal(X)) -> ACTIVE(isNePal(mark(X)))
 MARK(isNePal(X)) -> MARK(X)
->->-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)

Problem 1.5: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(isNePal(u95u95(I,u95u95(P,I)))) -> MARK(U11(tt))
 MARK(U11(X)) -> ACTIVE(U11(mark(X)))
 MARK(U11(X)) -> MARK(X)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(isNePal(X)) -> ACTIVE(isNePal(mark(X)))
 MARK(isNePal(X)) -> MARK(X)
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
-> Usable rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[U11](X) = 2.X + 1
[U12](X) = 2.X
[u95u95](X1,X2) = 2.X1 + X2
[active](X) = X
[isNePal](X) = 2.X + 2
[mark](X) = X
[fSNonEmpty] = 0
[nil] = 2
[tt] = 0
[U11Sharp](X) = 0
[U12Sharp](X) = 0
[U95U95](X1,X2) = 0
[ACTIVE](X) = 2.X + 2
[ISNEPAL](X) = 0
[MARK](X) = 2.X + 2

Problem 1.5: 

SCC Processor:
-> Pairs:
 MARK(U11(X)) -> ACTIVE(U11(mark(X)))
 MARK(U11(X)) -> MARK(X)
 MARK(U12(X)) -> ACTIVE(U12(mark(X)))
 MARK(U12(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> ACTIVE(u95u95(mark(X1),mark(X2)))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(isNePal(X)) -> ACTIVE(isNePal(mark(X)))
 MARK(isNePal(X)) -> MARK(X)
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 MARK(U11(X)) -> MARK(X)
 MARK(U12(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(isNePal(X)) -> MARK(X)
->->-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)

Problem 1.5: 

Subterm Processor:
-> Pairs:
 MARK(U11(X)) -> MARK(X)
 MARK(U12(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(isNePal(X)) -> MARK(X)
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->Projection:
 pi(MARK) = 1

Problem 1.5: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 U11(active(X)) -> U11(X)
 U11(mark(X)) -> U11(X)
 U12(active(X)) -> U12(X)
 U12(mark(X)) -> U12(X)
 u95u95(active(X1),X2) -> u95u95(X1,X2)
 u95u95(mark(X1),X2) -> u95u95(X1,X2)
 u95u95(X1,active(X2)) -> u95u95(X1,X2)
 u95u95(X1,mark(X2)) -> u95u95(X1,X2)
 active(U11(tt)) -> mark(U12(tt))
 active(U12(tt)) -> mark(tt)
 active(u95u95(u95u95(X,Y),Z)) -> mark(u95u95(X,u95u95(Y,Z)))
 active(u95u95(nil,X)) -> mark(X)
 active(u95u95(X,nil)) -> mark(X)
 active(isNePal(u95u95(I,u95u95(P,I)))) -> mark(U11(tt))
 isNePal(active(X)) -> isNePal(X)
 isNePal(mark(X)) -> isNePal(X)
 mark(U11(X)) -> active(U11(mark(X)))
 mark(U12(X)) -> active(U12(mark(X)))
 mark(u95u95(X1,X2)) -> active(u95u95(mark(X1),mark(X2)))
 mark(isNePal(X)) -> active(isNePal(mark(X)))
 mark(nil) -> active(nil)
 mark(tt) -> active(tt)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
