YES
proof of /home/ff862203/input_bJOkhCaQbC.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 98 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QDP
        (6) UsableRulesProof [EQUIVALENT, 0 ms]
        (7) QDP
        (8) QReductionProof [EQUIVALENT, 0 ms]
        (9) QDP
        (10) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (11) YES
    (12) QDP
        (13) UsableRulesProof [EQUIVALENT, 0 ms]
        (14) QDP
        (15) QReductionProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (18) YES
    (19) QDP
        (20) QDPOrderProof [EQUIVALENT, 352 ms]
        (21) QDP
        (22) DependencyGraphProof [EQUIVALENT, 0 ms]
        (23) QDP
        (24) QDPOrderProof [EQUIVALENT, 312 ms]
        (25) QDP
        (26) DependencyGraphProof [EQUIVALENT, 0 ms]
        (27) AND
            (28) QDP
                (29) UsableRulesProof [EQUIVALENT, 0 ms]
                (30) QDP
                (31) QReductionProof [EQUIVALENT, 0 ms]
                (32) QDP
                (33) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (34) YES
            (35) QDP
                (36) QDPOrderProof [EQUIVALENT, 424 ms]
                (37) QDP
                (38) DependencyGraphProof [EQUIVALENT, 0 ms]
                (39) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__zeros -> cons(0, zeros)
   a__U101(tt, V1, V2) -> a__U102(a__isNatKind(V1), V1, V2)
   a__U102(tt, V1, V2) -> a__U103(a__isNatIListKind(V2), V1, V2)
   a__U103(tt, V1, V2) -> a__U104(a__isNatIListKind(V2), V1, V2)
   a__U104(tt, V1, V2) -> a__U105(a__isNat(V1), V2)
   a__U105(tt, V2) -> a__U106(a__isNatIList(V2))
   a__U106(tt) -> tt
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U111(tt, L, N) -> a__U112(a__isNatIListKind(L), L, N)
   a__U112(tt, L, N) -> a__U113(a__isNat(N), L, N)
   a__U113(tt, L, N) -> a__U114(a__isNatKind(N), L)
   a__U114(tt, L) -> s(a__length(mark(L)))
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U121(tt, IL) -> a__U122(a__isNatIListKind(IL))
   a__U122(tt) -> nil
   a__U13(tt) -> tt
   a__U131(tt, IL, M, N) -> a__U132(a__isNatIListKind(IL), IL, M, N)
   a__U132(tt, IL, M, N) -> a__U133(a__isNat(M), IL, M, N)
   a__U133(tt, IL, M, N) -> a__U134(a__isNatKind(M), IL, M, N)
   a__U134(tt, IL, M, N) -> a__U135(a__isNat(N), IL, M, N)
   a__U135(tt, IL, M, N) -> a__U136(a__isNatKind(N), IL, M, N)
   a__U136(tt, IL, M, N) -> cons(mark(N), take(M, IL))
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U23(tt) -> tt
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U33(tt) -> tt
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U46(tt) -> tt
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U52(tt) -> tt
   a__U61(tt, V2) -> a__U62(a__isNatIListKind(V2))
   a__U62(tt) -> tt
   a__U71(tt) -> tt
   a__U81(tt) -> tt
   a__U91(tt, V1, V2) -> a__U92(a__isNatKind(V1), V1, V2)
   a__U92(tt, V1, V2) -> a__U93(a__isNatIListKind(V2), V1, V2)
   a__U93(tt, V1, V2) -> a__U94(a__isNatIListKind(V2), V1, V2)
   a__U94(tt, V1, V2) -> a__U95(a__isNat(V1), V2)
   a__U95(tt, V2) -> a__U96(a__isNatList(V2))
   a__U96(tt) -> tt
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatIListKind(take(V1, V2)) -> a__U61(a__isNatKind(V1), V2)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U71(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U81(a__isNatKind(V1))
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U91(a__isNatKind(V1), V1, V2)
   a__isNatList(take(V1, V2)) -> a__U101(a__isNatKind(V1), V1, V2)
   a__length(nil) -> 0
   a__length(cons(N, L)) -> a__U111(a__isNatList(L), L, N)
   a__take(0, IL) -> a__U121(a__isNatIList(IL), IL)
   a__take(s(M), cons(N, IL)) -> a__U131(a__isNatIList(IL), IL, M, N)
   mark(zeros) -> a__zeros
   mark(U101(X1, X2, X3)) -> a__U101(mark(X1), X2, X3)
   mark(U102(X1, X2, X3)) -> a__U102(mark(X1), X2, X3)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U103(X1, X2, X3)) -> a__U103(mark(X1), X2, X3)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U104(X1, X2, X3)) -> a__U104(mark(X1), X2, X3)
   mark(U105(X1, X2)) -> a__U105(mark(X1), X2)
   mark(isNat(X)) -> a__isNat(X)
   mark(U106(X)) -> a__U106(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(U111(X1, X2, X3)) -> a__U111(mark(X1), X2, X3)
   mark(U112(X1, X2, X3)) -> a__U112(mark(X1), X2, X3)
   mark(U113(X1, X2, X3)) -> a__U113(mark(X1), X2, X3)
   mark(U114(X1, X2)) -> a__U114(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U121(X1, X2)) -> a__U121(mark(X1), X2)
   mark(U122(X)) -> a__U122(mark(X))
   mark(U131(X1, X2, X3, X4)) -> a__U131(mark(X1), X2, X3, X4)
   mark(U132(X1, X2, X3, X4)) -> a__U132(mark(X1), X2, X3, X4)
   mark(U133(X1, X2, X3, X4)) -> a__U133(mark(X1), X2, X3, X4)
   mark(U134(X1, X2, X3, X4)) -> a__U134(mark(X1), X2, X3, X4)
   mark(U135(X1, X2, X3, X4)) -> a__U135(mark(X1), X2, X3, X4)
   mark(U136(X1, X2, X3, X4)) -> a__U136(mark(X1), X2, X3, X4)
   mark(take(X1, X2)) -> a__take(mark(X1), mark(X2))
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(U23(X)) -> a__U23(mark(X))
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X1, X2)) -> a__U61(mark(X1), X2)
   mark(U62(X)) -> a__U62(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X)) -> a__U81(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2, X3)) -> a__U94(mark(X1), X2, X3)
   mark(U95(X1, X2)) -> a__U95(mark(X1), X2)
   mark(U96(X)) -> a__U96(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__zeros -> zeros
   a__U101(X1, X2, X3) -> U101(X1, X2, X3)
   a__U102(X1, X2, X3) -> U102(X1, X2, X3)
   a__isNatKind(X) -> isNatKind(X)
   a__U103(X1, X2, X3) -> U103(X1, X2, X3)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U104(X1, X2, X3) -> U104(X1, X2, X3)
   a__U105(X1, X2) -> U105(X1, X2)
   a__isNat(X) -> isNat(X)
   a__U106(X) -> U106(X)
   a__isNatIList(X) -> isNatIList(X)
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(X1, X2) -> U12(X1, X2)
   a__U111(X1, X2, X3) -> U111(X1, X2, X3)
   a__U112(X1, X2, X3) -> U112(X1, X2, X3)
   a__U113(X1, X2, X3) -> U113(X1, X2, X3)
   a__U114(X1, X2) -> U114(X1, X2)
   a__length(X) -> length(X)
   a__U13(X) -> U13(X)
   a__isNatList(X) -> isNatList(X)
   a__U121(X1, X2) -> U121(X1, X2)
   a__U122(X) -> U122(X)
   a__U131(X1, X2, X3, X4) -> U131(X1, X2, X3, X4)
   a__U132(X1, X2, X3, X4) -> U132(X1, X2, X3, X4)
   a__U133(X1, X2, X3, X4) -> U133(X1, X2, X3, X4)
   a__U134(X1, X2, X3, X4) -> U134(X1, X2, X3, X4)
   a__U135(X1, X2, X3, X4) -> U135(X1, X2, X3, X4)
   a__U136(X1, X2, X3, X4) -> U136(X1, X2, X3, X4)
   a__take(X1, X2) -> take(X1, X2)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(X1, X2) -> U22(X1, X2)
   a__U23(X) -> U23(X)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(X) -> U33(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(X) -> U46(X)
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(X) -> U52(X)
   a__U61(X1, X2) -> U61(X1, X2)
   a__U62(X) -> U62(X)
   a__U71(X) -> U71(X)
   a__U81(X) -> U81(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2, X3) -> U94(X1, X2, X3)
   a__U95(X1, X2) -> U95(X1, X2)
   a__U96(X) -> U96(X)

The set Q consists of the following terms:

   mark(isNatIListKind(x0))
   a__U136(x0, x1, x2, x3)
   mark(U22(x0, x1))
   a__U135(x0, x1, x2, x3)
   mark(U42(x0, x1, x2))
   mark(U104(x0, x1, x2))
   a__length(x0)
   mark(U106(x0))
   mark(U96(x0))
   a__take(x0, x1)
   a__U62(x0)
   mark(zeros)
   mark(U23(x0))
   mark(0)
   mark(length(x0))
   a__isNatList(x0)
   mark(U71(x0))
   a__isNatKind(x0)
   a__U134(x0, x1, x2, x3)
   mark(cons(x0, x1))
   a__U121(x0, x1)
   mark(U95(x0, x1))
   a__U122(x0)
   a__U113(x0, x1, x2)
   mark(U94(x0, x1, x2))
   a__U21(x0, x1)
   mark(U113(x0, x1, x2))
   a__U112(x0, x1, x2)
   a__U101(x0, x1, x2)
   mark(U41(x0, x1, x2))
   a__U71(x0)
   mark(U105(x0, x1))
   a__U45(x0, x1)
   a__U23(x0)
   mark(U11(x0, x1))
   mark(take(x0, x1))
   mark(U135(x0, x1, x2, x3))
   mark(U111(x0, x1, x2))
   a__U42(x0, x1, x2)
   mark(U61(x0, x1))
   mark(U112(x0, x1, x2))
   a__U22(x0, x1)
   a__U46(x0)
   mark(U12(x0, x1))
   mark(U52(x0))
   mark(nil)
   a__U133(x0, x1, x2, x3)
   a__isNat(x0)
   mark(U136(x0, x1, x2, x3))
   mark(U32(x0, x1))
   mark(U133(x0, x1, x2, x3))
   a__U114(x0, x1)
   mark(U121(x0, x1))
   mark(U46(x0))
   mark(isNatIList(x0))
   mark(U45(x0, x1))
   a__U104(x0, x1, x2)
   mark(U102(x0, x1, x2))
   a__U91(x0, x1, x2)
   a__U51(x0, x1)
   a__isNatIListKind(x0)
   a__U95(x0, x1)
   mark(tt)
   a__U103(x0, x1, x2)
   a__U11(x0, x1)
   a__U43(x0, x1, x2)
   a__U92(x0, x1, x2)
   a__isNatIList(x0)
   mark(U81(x0))
   mark(U31(x0, x1))
   a__U52(x0)
   mark(U122(x0))
   a__U31(x0, x1)
   mark(U33(x0))
   a__U94(x0, x1, x2)
   mark(U134(x0, x1, x2, x3))
   mark(isNatKind(x0))
   a__U96(x0)
   mark(U114(x0, x1))
   a__U81(x0)
   mark(U103(x0, x1, x2))
   a__U131(x0, x1, x2, x3)
   mark(isNat(x0))
   mark(isNatList(x0))
   a__U13(x0)
   a__U111(x0, x1, x2)
   a__U132(x0, x1, x2, x3)
   mark(U21(x0, x1))
   mark(U44(x0, x1, x2))
   a__U41(x0, x1, x2)
   a__U12(x0, x1)
   mark(U93(x0, x1, x2))
   a__U106(x0)
   mark(U91(x0, x1, x2))
   a__U93(x0, x1, x2)
   mark(U51(x0, x1))
   a__U61(x0, x1)
   a__U105(x0, x1)
   a__U33(x0)
   a__zeros
   mark(U101(x0, x1, x2))
   mark(U13(x0))
   mark(U131(x0, x1, x2, x3))
   mark(U43(x0, x1, x2))
   mark(s(x0))
   mark(U132(x0, x1, x2, x3))
   a__U102(x0, x1, x2)
   mark(U62(x0))
   a__U32(x0, x1)
   a__U44(x0, x1, x2)
   mark(U92(x0, x1, x2))


----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__U101(tt, V1, V2) -> A__U102(a__isNatKind(V1), V1, V2)
   A__U101(tt, V1, V2) -> A__ISNATKIND(V1)
   A__U102(tt, V1, V2) -> A__U103(a__isNatIListKind(V2), V1, V2)
   A__U102(tt, V1, V2) -> A__ISNATILISTKIND(V2)
   A__U103(tt, V1, V2) -> A__U104(a__isNatIListKind(V2), V1, V2)
   A__U103(tt, V1, V2) -> A__ISNATILISTKIND(V2)
   A__U104(tt, V1, V2) -> A__U105(a__isNat(V1), V2)
   A__U104(tt, V1, V2) -> A__ISNAT(V1)
   A__U105(tt, V2) -> A__U106(a__isNatIList(V2))
   A__U105(tt, V2) -> A__ISNATILIST(V2)
   A__U11(tt, V1) -> A__U12(a__isNatIListKind(V1), V1)
   A__U11(tt, V1) -> A__ISNATILISTKIND(V1)
   A__U111(tt, L, N) -> A__U112(a__isNatIListKind(L), L, N)
   A__U111(tt, L, N) -> A__ISNATILISTKIND(L)
   A__U112(tt, L, N) -> A__U113(a__isNat(N), L, N)
   A__U112(tt, L, N) -> A__ISNAT(N)
   A__U113(tt, L, N) -> A__U114(a__isNatKind(N), L)
   A__U113(tt, L, N) -> A__ISNATKIND(N)
   A__U114(tt, L) -> A__LENGTH(mark(L))
   A__U114(tt, L) -> MARK(L)
   A__U12(tt, V1) -> A__U13(a__isNatList(V1))
   A__U12(tt, V1) -> A__ISNATLIST(V1)
   A__U121(tt, IL) -> A__U122(a__isNatIListKind(IL))
   A__U121(tt, IL) -> A__ISNATILISTKIND(IL)
   A__U131(tt, IL, M, N) -> A__U132(a__isNatIListKind(IL), IL, M, N)
   A__U131(tt, IL, M, N) -> A__ISNATILISTKIND(IL)
   A__U132(tt, IL, M, N) -> A__U133(a__isNat(M), IL, M, N)
   A__U132(tt, IL, M, N) -> A__ISNAT(M)
   A__U133(tt, IL, M, N) -> A__U134(a__isNatKind(M), IL, M, N)
   A__U133(tt, IL, M, N) -> A__ISNATKIND(M)
   A__U134(tt, IL, M, N) -> A__U135(a__isNat(N), IL, M, N)
   A__U134(tt, IL, M, N) -> A__ISNAT(N)
   A__U135(tt, IL, M, N) -> A__U136(a__isNatKind(N), IL, M, N)
   A__U135(tt, IL, M, N) -> A__ISNATKIND(N)
   A__U136(tt, IL, M, N) -> MARK(N)
   A__U21(tt, V1) -> A__U22(a__isNatKind(V1), V1)
   A__U21(tt, V1) -> A__ISNATKIND(V1)
   A__U22(tt, V1) -> A__U23(a__isNat(V1))
   A__U22(tt, V1) -> A__ISNAT(V1)
   A__U31(tt, V) -> A__U32(a__isNatIListKind(V), V)
   A__U31(tt, V) -> A__ISNATILISTKIND(V)
   A__U32(tt, V) -> A__U33(a__isNatList(V))
   A__U32(tt, V) -> A__ISNATLIST(V)
   A__U41(tt, V1, V2) -> A__U42(a__isNatKind(V1), V1, V2)
   A__U41(tt, V1, V2) -> A__ISNATKIND(V1)
   A__U42(tt, V1, V2) -> A__U43(a__isNatIListKind(V2), V1, V2)
   A__U42(tt, V1, V2) -> A__ISNATILISTKIND(V2)
   A__U43(tt, V1, V2) -> A__U44(a__isNatIListKind(V2), V1, V2)
   A__U43(tt, V1, V2) -> A__ISNATILISTKIND(V2)
   A__U44(tt, V1, V2) -> A__U45(a__isNat(V1), V2)
   A__U44(tt, V1, V2) -> A__ISNAT(V1)
   A__U45(tt, V2) -> A__U46(a__isNatIList(V2))
   A__U45(tt, V2) -> A__ISNATILIST(V2)
   A__U51(tt, V2) -> A__U52(a__isNatIListKind(V2))
   A__U51(tt, V2) -> A__ISNATILISTKIND(V2)
   A__U61(tt, V2) -> A__U62(a__isNatIListKind(V2))
   A__U61(tt, V2) -> A__ISNATILISTKIND(V2)
   A__U91(tt, V1, V2) -> A__U92(a__isNatKind(V1), V1, V2)
   A__U91(tt, V1, V2) -> A__ISNATKIND(V1)
   A__U92(tt, V1, V2) -> A__U93(a__isNatIListKind(V2), V1, V2)
   A__U92(tt, V1, V2) -> A__ISNATILISTKIND(V2)
   A__U93(tt, V1, V2) -> A__U94(a__isNatIListKind(V2), V1, V2)
   A__U93(tt, V1, V2) -> A__ISNATILISTKIND(V2)
   A__U94(tt, V1, V2) -> A__U95(a__isNat(V1), V2)
   A__U94(tt, V1, V2) -> A__ISNAT(V1)
   A__U95(tt, V2) -> A__U96(a__isNatList(V2))
   A__U95(tt, V2) -> A__ISNATLIST(V2)
   A__ISNAT(length(V1)) -> A__U11(a__isNatIListKind(V1), V1)
   A__ISNAT(length(V1)) -> A__ISNATILISTKIND(V1)
   A__ISNAT(s(V1)) -> A__U21(a__isNatKind(V1), V1)
   A__ISNAT(s(V1)) -> A__ISNATKIND(V1)
   A__ISNATILIST(V) -> A__U31(a__isNatIListKind(V), V)
   A__ISNATILIST(V) -> A__ISNATILISTKIND(V)
   A__ISNATILIST(cons(V1, V2)) -> A__U41(a__isNatKind(V1), V1, V2)
   A__ISNATILIST(cons(V1, V2)) -> A__ISNATKIND(V1)
   A__ISNATILISTKIND(cons(V1, V2)) -> A__U51(a__isNatKind(V1), V2)
   A__ISNATILISTKIND(cons(V1, V2)) -> A__ISNATKIND(V1)
   A__ISNATILISTKIND(take(V1, V2)) -> A__U61(a__isNatKind(V1), V2)
   A__ISNATILISTKIND(take(V1, V2)) -> A__ISNATKIND(V1)
   A__ISNATKIND(length(V1)) -> A__U71(a__isNatIListKind(V1))
   A__ISNATKIND(length(V1)) -> A__ISNATILISTKIND(V1)
   A__ISNATKIND(s(V1)) -> A__U81(a__isNatKind(V1))
   A__ISNATKIND(s(V1)) -> A__ISNATKIND(V1)
   A__ISNATLIST(cons(V1, V2)) -> A__U91(a__isNatKind(V1), V1, V2)
   A__ISNATLIST(cons(V1, V2)) -> A__ISNATKIND(V1)
   A__ISNATLIST(take(V1, V2)) -> A__U101(a__isNatKind(V1), V1, V2)
   A__ISNATLIST(take(V1, V2)) -> A__ISNATKIND(V1)
   A__LENGTH(cons(N, L)) -> A__U111(a__isNatList(L), L, N)
   A__LENGTH(cons(N, L)) -> A__ISNATLIST(L)
   A__TAKE(0, IL) -> A__U121(a__isNatIList(IL), IL)
   A__TAKE(0, IL) -> A__ISNATILIST(IL)
   A__TAKE(s(M), cons(N, IL)) -> A__U131(a__isNatIList(IL), IL, M, N)
   A__TAKE(s(M), cons(N, IL)) -> A__ISNATILIST(IL)
   MARK(zeros) -> A__ZEROS
   MARK(U101(X1, X2, X3)) -> A__U101(mark(X1), X2, X3)
   MARK(U101(X1, X2, X3)) -> MARK(X1)
   MARK(U102(X1, X2, X3)) -> A__U102(mark(X1), X2, X3)
   MARK(U102(X1, X2, X3)) -> MARK(X1)
   MARK(isNatKind(X)) -> A__ISNATKIND(X)
   MARK(U103(X1, X2, X3)) -> A__U103(mark(X1), X2, X3)
   MARK(U103(X1, X2, X3)) -> MARK(X1)
   MARK(isNatIListKind(X)) -> A__ISNATILISTKIND(X)
   MARK(U104(X1, X2, X3)) -> A__U104(mark(X1), X2, X3)
   MARK(U104(X1, X2, X3)) -> MARK(X1)
   MARK(U105(X1, X2)) -> A__U105(mark(X1), X2)
   MARK(U105(X1, X2)) -> MARK(X1)
   MARK(isNat(X)) -> A__ISNAT(X)
   MARK(U106(X)) -> A__U106(mark(X))
   MARK(U106(X)) -> MARK(X)
   MARK(isNatIList(X)) -> A__ISNATILIST(X)
   MARK(U11(X1, X2)) -> A__U11(mark(X1), X2)
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(U12(X1, X2)) -> A__U12(mark(X1), X2)
   MARK(U12(X1, X2)) -> MARK(X1)
   MARK(U111(X1, X2, X3)) -> A__U111(mark(X1), X2, X3)
   MARK(U111(X1, X2, X3)) -> MARK(X1)
   MARK(U112(X1, X2, X3)) -> A__U112(mark(X1), X2, X3)
   MARK(U112(X1, X2, X3)) -> MARK(X1)
   MARK(U113(X1, X2, X3)) -> A__U113(mark(X1), X2, X3)
   MARK(U113(X1, X2, X3)) -> MARK(X1)
   MARK(U114(X1, X2)) -> A__U114(mark(X1), X2)
   MARK(U114(X1, X2)) -> MARK(X1)
   MARK(length(X)) -> A__LENGTH(mark(X))
   MARK(length(X)) -> MARK(X)
   MARK(U13(X)) -> A__U13(mark(X))
   MARK(U13(X)) -> MARK(X)
   MARK(isNatList(X)) -> A__ISNATLIST(X)
   MARK(U121(X1, X2)) -> A__U121(mark(X1), X2)
   MARK(U121(X1, X2)) -> MARK(X1)
   MARK(U122(X)) -> A__U122(mark(X))
   MARK(U122(X)) -> MARK(X)
   MARK(U131(X1, X2, X3, X4)) -> A__U131(mark(X1), X2, X3, X4)
   MARK(U131(X1, X2, X3, X4)) -> MARK(X1)
   MARK(U132(X1, X2, X3, X4)) -> A__U132(mark(X1), X2, X3, X4)
   MARK(U132(X1, X2, X3, X4)) -> MARK(X1)
   MARK(U133(X1, X2, X3, X4)) -> A__U133(mark(X1), X2, X3, X4)
   MARK(U133(X1, X2, X3, X4)) -> MARK(X1)
   MARK(U134(X1, X2, X3, X4)) -> A__U134(mark(X1), X2, X3, X4)
   MARK(U134(X1, X2, X3, X4)) -> MARK(X1)
   MARK(U135(X1, X2, X3, X4)) -> A__U135(mark(X1), X2, X3, X4)
   MARK(U135(X1, X2, X3, X4)) -> MARK(X1)
   MARK(U136(X1, X2, X3, X4)) -> A__U136(mark(X1), X2, X3, X4)
   MARK(U136(X1, X2, X3, X4)) -> MARK(X1)
   MARK(take(X1, X2)) -> A__TAKE(mark(X1), mark(X2))
   MARK(take(X1, X2)) -> MARK(X1)
   MARK(take(X1, X2)) -> MARK(X2)
   MARK(U21(X1, X2)) -> A__U21(mark(X1), X2)
   MARK(U21(X1, X2)) -> MARK(X1)
   MARK(U22(X1, X2)) -> A__U22(mark(X1), X2)
   MARK(U22(X1, X2)) -> MARK(X1)
   MARK(U23(X)) -> A__U23(mark(X))
   MARK(U23(X)) -> MARK(X)
   MARK(U31(X1, X2)) -> A__U31(mark(X1), X2)
   MARK(U31(X1, X2)) -> MARK(X1)
   MARK(U32(X1, X2)) -> A__U32(mark(X1), X2)
   MARK(U32(X1, X2)) -> MARK(X1)
   MARK(U33(X)) -> A__U33(mark(X))
   MARK(U33(X)) -> MARK(X)
   MARK(U41(X1, X2, X3)) -> A__U41(mark(X1), X2, X3)
   MARK(U41(X1, X2, X3)) -> MARK(X1)
   MARK(U42(X1, X2, X3)) -> A__U42(mark(X1), X2, X3)
   MARK(U42(X1, X2, X3)) -> MARK(X1)
   MARK(U43(X1, X2, X3)) -> A__U43(mark(X1), X2, X3)
   MARK(U43(X1, X2, X3)) -> MARK(X1)
   MARK(U44(X1, X2, X3)) -> A__U44(mark(X1), X2, X3)
   MARK(U44(X1, X2, X3)) -> MARK(X1)
   MARK(U45(X1, X2)) -> A__U45(mark(X1), X2)
   MARK(U45(X1, X2)) -> MARK(X1)
   MARK(U46(X)) -> A__U46(mark(X))
   MARK(U46(X)) -> MARK(X)
   MARK(U51(X1, X2)) -> A__U51(mark(X1), X2)
   MARK(U51(X1, X2)) -> MARK(X1)
   MARK(U52(X)) -> A__U52(mark(X))
   MARK(U52(X)) -> MARK(X)
   MARK(U61(X1, X2)) -> A__U61(mark(X1), X2)
   MARK(U61(X1, X2)) -> MARK(X1)
   MARK(U62(X)) -> A__U62(mark(X))
   MARK(U62(X)) -> MARK(X)
   MARK(U71(X)) -> A__U71(mark(X))
   MARK(U71(X)) -> MARK(X)
   MARK(U81(X)) -> A__U81(mark(X))
   MARK(U81(X)) -> MARK(X)
   MARK(U91(X1, X2, X3)) -> A__U91(mark(X1), X2, X3)
   MARK(U91(X1, X2, X3)) -> MARK(X1)
   MARK(U92(X1, X2, X3)) -> A__U92(mark(X1), X2, X3)
   MARK(U92(X1, X2, X3)) -> MARK(X1)
   MARK(U93(X1, X2, X3)) -> A__U93(mark(X1), X2, X3)
   MARK(U93(X1, X2, X3)) -> MARK(X1)
   MARK(U94(X1, X2, X3)) -> A__U94(mark(X1), X2, X3)
   MARK(U94(X1, X2, X3)) -> MARK(X1)
   MARK(U95(X1, X2)) -> A__U95(mark(X1), X2)
   MARK(U95(X1, X2)) -> MARK(X1)
   MARK(U96(X)) -> A__U96(mark(X))
   MARK(U96(X)) -> MARK(X)
   MARK(cons(X1, X2)) -> MARK(X1)
   MARK(s(X)) -> MARK(X)

The TRS R consists of the following rules:

   a__zeros -> cons(0, zeros)
   a__U101(tt, V1, V2) -> a__U102(a__isNatKind(V1), V1, V2)
   a__U102(tt, V1, V2) -> a__U103(a__isNatIListKind(V2), V1, V2)
   a__U103(tt, V1, V2) -> a__U104(a__isNatIListKind(V2), V1, V2)
   a__U104(tt, V1, V2) -> a__U105(a__isNat(V1), V2)
   a__U105(tt, V2) -> a__U106(a__isNatIList(V2))
   a__U106(tt) -> tt
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U111(tt, L, N) -> a__U112(a__isNatIListKind(L), L, N)
   a__U112(tt, L, N) -> a__U113(a__isNat(N), L, N)
   a__U113(tt, L, N) -> a__U114(a__isNatKind(N), L)
   a__U114(tt, L) -> s(a__length(mark(L)))
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U121(tt, IL) -> a__U122(a__isNatIListKind(IL))
   a__U122(tt) -> nil
   a__U13(tt) -> tt
   a__U131(tt, IL, M, N) -> a__U132(a__isNatIListKind(IL), IL, M, N)
   a__U132(tt, IL, M, N) -> a__U133(a__isNat(M), IL, M, N)
   a__U133(tt, IL, M, N) -> a__U134(a__isNatKind(M), IL, M, N)
   a__U134(tt, IL, M, N) -> a__U135(a__isNat(N), IL, M, N)
   a__U135(tt, IL, M, N) -> a__U136(a__isNatKind(N), IL, M, N)
   a__U136(tt, IL, M, N) -> cons(mark(N), take(M, IL))
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U23(tt) -> tt
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U33(tt) -> tt
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U46(tt) -> tt
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U52(tt) -> tt
   a__U61(tt, V2) -> a__U62(a__isNatIListKind(V2))
   a__U62(tt) -> tt
   a__U71(tt) -> tt
   a__U81(tt) -> tt
   a__U91(tt, V1, V2) -> a__U92(a__isNatKind(V1), V1, V2)
   a__U92(tt, V1, V2) -> a__U93(a__isNatIListKind(V2), V1, V2)
   a__U93(tt, V1, V2) -> a__U94(a__isNatIListKind(V2), V1, V2)
   a__U94(tt, V1, V2) -> a__U95(a__isNat(V1), V2)
   a__U95(tt, V2) -> a__U96(a__isNatList(V2))
   a__U96(tt) -> tt
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatIListKind(take(V1, V2)) -> a__U61(a__isNatKind(V1), V2)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U71(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U81(a__isNatKind(V1))
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U91(a__isNatKind(V1), V1, V2)
   a__isNatList(take(V1, V2)) -> a__U101(a__isNatKind(V1), V1, V2)
   a__length(nil) -> 0
   a__length(cons(N, L)) -> a__U111(a__isNatList(L), L, N)
   a__take(0, IL) -> a__U121(a__isNatIList(IL), IL)
   a__take(s(M), cons(N, IL)) -> a__U131(a__isNatIList(IL), IL, M, N)
   mark(zeros) -> a__zeros
   mark(U101(X1, X2, X3)) -> a__U101(mark(X1), X2, X3)
   mark(U102(X1, X2, X3)) -> a__U102(mark(X1), X2, X3)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U103(X1, X2, X3)) -> a__U103(mark(X1), X2, X3)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U104(X1, X2, X3)) -> a__U104(mark(X1), X2, X3)
   mark(U105(X1, X2)) -> a__U105(mark(X1), X2)
   mark(isNat(X)) -> a__isNat(X)
   mark(U106(X)) -> a__U106(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(U111(X1, X2, X3)) -> a__U111(mark(X1), X2, X3)
   mark(U112(X1, X2, X3)) -> a__U112(mark(X1), X2, X3)
   mark(U113(X1, X2, X3)) -> a__U113(mark(X1), X2, X3)
   mark(U114(X1, X2)) -> a__U114(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U121(X1, X2)) -> a__U121(mark(X1), X2)
   mark(U122(X)) -> a__U122(mark(X))
   mark(U131(X1, X2, X3, X4)) -> a__U131(mark(X1), X2, X3, X4)
   mark(U132(X1, X2, X3, X4)) -> a__U132(mark(X1), X2, X3, X4)
   mark(U133(X1, X2, X3, X4)) -> a__U133(mark(X1), X2, X3, X4)
   mark(U134(X1, X2, X3, X4)) -> a__U134(mark(X1), X2, X3, X4)
   mark(U135(X1, X2, X3, X4)) -> a__U135(mark(X1), X2, X3, X4)
   mark(U136(X1, X2, X3, X4)) -> a__U136(mark(X1), X2, X3, X4)
   mark(take(X1, X2)) -> a__take(mark(X1), mark(X2))
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(U23(X)) -> a__U23(mark(X))
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X1, X2)) -> a__U61(mark(X1), X2)
   mark(U62(X)) -> a__U62(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X)) -> a__U81(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2, X3)) -> a__U94(mark(X1), X2, X3)
   mark(U95(X1, X2)) -> a__U95(mark(X1), X2)
   mark(U96(X)) -> a__U96(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__zeros -> zeros
   a__U101(X1, X2, X3) -> U101(X1, X2, X3)
   a__U102(X1, X2, X3) -> U102(X1, X2, X3)
   a__isNatKind(X) -> isNatKind(X)
   a__U103(X1, X2, X3) -> U103(X1, X2, X3)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U104(X1, X2, X3) -> U104(X1, X2, X3)
   a__U105(X1, X2) -> U105(X1, X2)
   a__isNat(X) -> isNat(X)
   a__U106(X) -> U106(X)
   a__isNatIList(X) -> isNatIList(X)
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(X1, X2) -> U12(X1, X2)
   a__U111(X1, X2, X3) -> U111(X1, X2, X3)
   a__U112(X1, X2, X3) -> U112(X1, X2, X3)
   a__U113(X1, X2, X3) -> U113(X1, X2, X3)
   a__U114(X1, X2) -> U114(X1, X2)
   a__length(X) -> length(X)
   a__U13(X) -> U13(X)
   a__isNatList(X) -> isNatList(X)
   a__U121(X1, X2) -> U121(X1, X2)
   a__U122(X) -> U122(X)
   a__U131(X1, X2, X3, X4) -> U131(X1, X2, X3, X4)
   a__U132(X1, X2, X3, X4) -> U132(X1, X2, X3, X4)
   a__U133(X1, X2, X3, X4) -> U133(X1, X2, X3, X4)
   a__U134(X1, X2, X3, X4) -> U134(X1, X2, X3, X4)
   a__U135(X1, X2, X3, X4) -> U135(X1, X2, X3, X4)
   a__U136(X1, X2, X3, X4) -> U136(X1, X2, X3, X4)
   a__take(X1, X2) -> take(X1, X2)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(X1, X2) -> U22(X1, X2)
   a__U23(X) -> U23(X)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(X) -> U33(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(X) -> U46(X)
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(X) -> U52(X)
   a__U61(X1, X2) -> U61(X1, X2)
   a__U62(X) -> U62(X)
   a__U71(X) -> U71(X)
   a__U81(X) -> U81(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2, X3) -> U94(X1, X2, X3)
   a__U95(X1, X2) -> U95(X1, X2)
   a__U96(X) -> U96(X)

The set Q consists of the following terms:

   mark(isNatIListKind(x0))
   a__U136(x0, x1, x2, x3)
   mark(U22(x0, x1))
   a__U135(x0, x1, x2, x3)
   mark(U42(x0, x1, x2))
   mark(U104(x0, x1, x2))
   a__length(x0)
   mark(U106(x0))
   mark(U96(x0))
   a__take(x0, x1)
   a__U62(x0)
   mark(zeros)
   mark(U23(x0))
   mark(0)
   mark(length(x0))
   a__isNatList(x0)
   mark(U71(x0))
   a__isNatKind(x0)
   a__U134(x0, x1, x2, x3)
   mark(cons(x0, x1))
   a__U121(x0, x1)
   mark(U95(x0, x1))
   a__U122(x0)
   a__U113(x0, x1, x2)
   mark(U94(x0, x1, x2))
   a__U21(x0, x1)
   mark(U113(x0, x1, x2))
   a__U112(x0, x1, x2)
   a__U101(x0, x1, x2)
   mark(U41(x0, x1, x2))
   a__U71(x0)
   mark(U105(x0, x1))
   a__U45(x0, x1)
   a__U23(x0)
   mark(U11(x0, x1))
   mark(take(x0, x1))
   mark(U135(x0, x1, x2, x3))
   mark(U111(x0, x1, x2))
   a__U42(x0, x1, x2)
   mark(U61(x0, x1))
   mark(U112(x0, x1, x2))
   a__U22(x0, x1)
   a__U46(x0)
   mark(U12(x0, x1))
   mark(U52(x0))
   mark(nil)
   a__U133(x0, x1, x2, x3)
   a__isNat(x0)
   mark(U136(x0, x1, x2, x3))
   mark(U32(x0, x1))
   mark(U133(x0, x1, x2, x3))
   a__U114(x0, x1)
   mark(U121(x0, x1))
   mark(U46(x0))
   mark(isNatIList(x0))
   mark(U45(x0, x1))
   a__U104(x0, x1, x2)
   mark(U102(x0, x1, x2))
   a__U91(x0, x1, x2)
   a__U51(x0, x1)
   a__isNatIListKind(x0)
   a__U95(x0, x1)
   mark(tt)
   a__U103(x0, x1, x2)
   a__U11(x0, x1)
   a__U43(x0, x1, x2)
   a__U92(x0, x1, x2)
   a__isNatIList(x0)
   mark(U81(x0))
   mark(U31(x0, x1))
   a__U52(x0)
   mark(U122(x0))
   a__U31(x0, x1)
   mark(U33(x0))
   a__U94(x0, x1, x2)
   mark(U134(x0, x1, x2, x3))
   mark(isNatKind(x0))
   a__U96(x0)
   mark(U114(x0, x1))
   a__U81(x0)
   mark(U103(x0, x1, x2))
   a__U131(x0, x1, x2, x3)
   mark(isNat(x0))
   mark(isNatList(x0))
   a__U13(x0)
   a__U111(x0, x1, x2)
   a__U132(x0, x1, x2, x3)
   mark(U21(x0, x1))
   mark(U44(x0, x1, x2))
   a__U41(x0, x1, x2)
   a__U12(x0, x1)
   mark(U93(x0, x1, x2))
   a__U106(x0)
   mark(U91(x0, x1, x2))
   a__U93(x0, x1, x2)
   mark(U51(x0, x1))
   a__U61(x0, x1)
   a__U105(x0, x1)
   a__U33(x0)
   a__zeros
   mark(U101(x0, x1, x2))
   mark(U13(x0))
   mark(U131(x0, x1, x2, x3))
   mark(U43(x0, x1, x2))
   mark(s(x0))
   mark(U132(x0, x1, x2, x3))
   a__U102(x0, x1, x2)
   mark(U62(x0))
   a__U32(x0, x1)
   a__U44(x0, x1, x2)
   mark(U92(x0, x1, x2))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 3 SCCs with 83 less nodes.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__U51(tt, V2) -> A__ISNATILISTKIND(V2)
   A__ISNATILISTKIND(cons(V1, V2)) -> A__U51(a__isNatKind(V1), V2)
   A__ISNATILISTKIND(cons(V1, V2)) -> A__ISNATKIND(V1)
   A__ISNATKIND(length(V1)) -> A__ISNATILISTKIND(V1)
   A__ISNATILISTKIND(take(V1, V2)) -> A__U61(a__isNatKind(V1), V2)
   A__U61(tt, V2) -> A__ISNATILISTKIND(V2)
   A__ISNATILISTKIND(take(V1, V2)) -> A__ISNATKIND(V1)
   A__ISNATKIND(s(V1)) -> A__ISNATKIND(V1)

The TRS R consists of the following rules:

   a__zeros -> cons(0, zeros)
   a__U101(tt, V1, V2) -> a__U102(a__isNatKind(V1), V1, V2)
   a__U102(tt, V1, V2) -> a__U103(a__isNatIListKind(V2), V1, V2)
   a__U103(tt, V1, V2) -> a__U104(a__isNatIListKind(V2), V1, V2)
   a__U104(tt, V1, V2) -> a__U105(a__isNat(V1), V2)
   a__U105(tt, V2) -> a__U106(a__isNatIList(V2))
   a__U106(tt) -> tt
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U111(tt, L, N) -> a__U112(a__isNatIListKind(L), L, N)
   a__U112(tt, L, N) -> a__U113(a__isNat(N), L, N)
   a__U113(tt, L, N) -> a__U114(a__isNatKind(N), L)
   a__U114(tt, L) -> s(a__length(mark(L)))
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U121(tt, IL) -> a__U122(a__isNatIListKind(IL))
   a__U122(tt) -> nil
   a__U13(tt) -> tt
   a__U131(tt, IL, M, N) -> a__U132(a__isNatIListKind(IL), IL, M, N)
   a__U132(tt, IL, M, N) -> a__U133(a__isNat(M), IL, M, N)
   a__U133(tt, IL, M, N) -> a__U134(a__isNatKind(M), IL, M, N)
   a__U134(tt, IL, M, N) -> a__U135(a__isNat(N), IL, M, N)
   a__U135(tt, IL, M, N) -> a__U136(a__isNatKind(N), IL, M, N)
   a__U136(tt, IL, M, N) -> cons(mark(N), take(M, IL))
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U23(tt) -> tt
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U33(tt) -> tt
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U46(tt) -> tt
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U52(tt) -> tt
   a__U61(tt, V2) -> a__U62(a__isNatIListKind(V2))
   a__U62(tt) -> tt
   a__U71(tt) -> tt
   a__U81(tt) -> tt
   a__U91(tt, V1, V2) -> a__U92(a__isNatKind(V1), V1, V2)
   a__U92(tt, V1, V2) -> a__U93(a__isNatIListKind(V2), V1, V2)
   a__U93(tt, V1, V2) -> a__U94(a__isNatIListKind(V2), V1, V2)
   a__U94(tt, V1, V2) -> a__U95(a__isNat(V1), V2)
   a__U95(tt, V2) -> a__U96(a__isNatList(V2))
   a__U96(tt) -> tt
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatIListKind(take(V1, V2)) -> a__U61(a__isNatKind(V1), V2)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U71(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U81(a__isNatKind(V1))
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U91(a__isNatKind(V1), V1, V2)
   a__isNatList(take(V1, V2)) -> a__U101(a__isNatKind(V1), V1, V2)
   a__length(nil) -> 0
   a__length(cons(N, L)) -> a__U111(a__isNatList(L), L, N)
   a__take(0, IL) -> a__U121(a__isNatIList(IL), IL)
   a__take(s(M), cons(N, IL)) -> a__U131(a__isNatIList(IL), IL, M, N)
   mark(zeros) -> a__zeros
   mark(U101(X1, X2, X3)) -> a__U101(mark(X1), X2, X3)
   mark(U102(X1, X2, X3)) -> a__U102(mark(X1), X2, X3)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U103(X1, X2, X3)) -> a__U103(mark(X1), X2, X3)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U104(X1, X2, X3)) -> a__U104(mark(X1), X2, X3)
   mark(U105(X1, X2)) -> a__U105(mark(X1), X2)
   mark(isNat(X)) -> a__isNat(X)
   mark(U106(X)) -> a__U106(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(U111(X1, X2, X3)) -> a__U111(mark(X1), X2, X3)
   mark(U112(X1, X2, X3)) -> a__U112(mark(X1), X2, X3)
   mark(U113(X1, X2, X3)) -> a__U113(mark(X1), X2, X3)
   mark(U114(X1, X2)) -> a__U114(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U121(X1, X2)) -> a__U121(mark(X1), X2)
   mark(U122(X)) -> a__U122(mark(X))
   mark(U131(X1, X2, X3, X4)) -> a__U131(mark(X1), X2, X3, X4)
   mark(U132(X1, X2, X3, X4)) -> a__U132(mark(X1), X2, X3, X4)
   mark(U133(X1, X2, X3, X4)) -> a__U133(mark(X1), X2, X3, X4)
   mark(U134(X1, X2, X3, X4)) -> a__U134(mark(X1), X2, X3, X4)
   mark(U135(X1, X2, X3, X4)) -> a__U135(mark(X1), X2, X3, X4)
   mark(U136(X1, X2, X3, X4)) -> a__U136(mark(X1), X2, X3, X4)
   mark(take(X1, X2)) -> a__take(mark(X1), mark(X2))
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(U23(X)) -> a__U23(mark(X))
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X1, X2)) -> a__U61(mark(X1), X2)
   mark(U62(X)) -> a__U62(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X)) -> a__U81(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2, X3)) -> a__U94(mark(X1), X2, X3)
   mark(U95(X1, X2)) -> a__U95(mark(X1), X2)
   mark(U96(X)) -> a__U96(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__zeros -> zeros
   a__U101(X1, X2, X3) -> U101(X1, X2, X3)
   a__U102(X1, X2, X3) -> U102(X1, X2, X3)
   a__isNatKind(X) -> isNatKind(X)
   a__U103(X1, X2, X3) -> U103(X1, X2, X3)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U104(X1, X2, X3) -> U104(X1, X2, X3)
   a__U105(X1, X2) -> U105(X1, X2)
   a__isNat(X) -> isNat(X)
   a__U106(X) -> U106(X)
   a__isNatIList(X) -> isNatIList(X)
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(X1, X2) -> U12(X1, X2)
   a__U111(X1, X2, X3) -> U111(X1, X2, X3)
   a__U112(X1, X2, X3) -> U112(X1, X2, X3)
   a__U113(X1, X2, X3) -> U113(X1, X2, X3)
   a__U114(X1, X2) -> U114(X1, X2)
   a__length(X) -> length(X)
   a__U13(X) -> U13(X)
   a__isNatList(X) -> isNatList(X)
   a__U121(X1, X2) -> U121(X1, X2)
   a__U122(X) -> U122(X)
   a__U131(X1, X2, X3, X4) -> U131(X1, X2, X3, X4)
   a__U132(X1, X2, X3, X4) -> U132(X1, X2, X3, X4)
   a__U133(X1, X2, X3, X4) -> U133(X1, X2, X3, X4)
   a__U134(X1, X2, X3, X4) -> U134(X1, X2, X3, X4)
   a__U135(X1, X2, X3, X4) -> U135(X1, X2, X3, X4)
   a__U136(X1, X2, X3, X4) -> U136(X1, X2, X3, X4)
   a__take(X1, X2) -> take(X1, X2)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(X1, X2) -> U22(X1, X2)
   a__U23(X) -> U23(X)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(X) -> U33(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(X) -> U46(X)
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(X) -> U52(X)
   a__U61(X1, X2) -> U61(X1, X2)
   a__U62(X) -> U62(X)
   a__U71(X) -> U71(X)
   a__U81(X) -> U81(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2, X3) -> U94(X1, X2, X3)
   a__U95(X1, X2) -> U95(X1, X2)
   a__U96(X) -> U96(X)

The set Q consists of the following terms:

   mark(isNatIListKind(x0))
   a__U136(x0, x1, x2, x3)
   mark(U22(x0, x1))
   a__U135(x0, x1, x2, x3)
   mark(U42(x0, x1, x2))
   mark(U104(x0, x1, x2))
   a__length(x0)
   mark(U106(x0))
   mark(U96(x0))
   a__take(x0, x1)
   a__U62(x0)
   mark(zeros)
   mark(U23(x0))
   mark(0)
   mark(length(x0))
   a__isNatList(x0)
   mark(U71(x0))
   a__isNatKind(x0)
   a__U134(x0, x1, x2, x3)
   mark(cons(x0, x1))
   a__U121(x0, x1)
   mark(U95(x0, x1))
   a__U122(x0)
   a__U113(x0, x1, x2)
   mark(U94(x0, x1, x2))
   a__U21(x0, x1)
   mark(U113(x0, x1, x2))
   a__U112(x0, x1, x2)
   a__U101(x0, x1, x2)
   mark(U41(x0, x1, x2))
   a__U71(x0)
   mark(U105(x0, x1))
   a__U45(x0, x1)
   a__U23(x0)
   mark(U11(x0, x1))
   mark(take(x0, x1))
   mark(U135(x0, x1, x2, x3))
   mark(U111(x0, x1, x2))
   a__U42(x0, x1, x2)
   mark(U61(x0, x1))
   mark(U112(x0, x1, x2))
   a__U22(x0, x1)
   a__U46(x0)
   mark(U12(x0, x1))
   mark(U52(x0))
   mark(nil)
   a__U133(x0, x1, x2, x3)
   a__isNat(x0)
   mark(U136(x0, x1, x2, x3))
   mark(U32(x0, x1))
   mark(U133(x0, x1, x2, x3))
   a__U114(x0, x1)
   mark(U121(x0, x1))
   mark(U46(x0))
   mark(isNatIList(x0))
   mark(U45(x0, x1))
   a__U104(x0, x1, x2)
   mark(U102(x0, x1, x2))
   a__U91(x0, x1, x2)
   a__U51(x0, x1)
   a__isNatIListKind(x0)
   a__U95(x0, x1)
   mark(tt)
   a__U103(x0, x1, x2)
   a__U11(x0, x1)
   a__U43(x0, x1, x2)
   a__U92(x0, x1, x2)
   a__isNatIList(x0)
   mark(U81(x0))
   mark(U31(x0, x1))
   a__U52(x0)
   mark(U122(x0))
   a__U31(x0, x1)
   mark(U33(x0))
   a__U94(x0, x1, x2)
   mark(U134(x0, x1, x2, x3))
   mark(isNatKind(x0))
   a__U96(x0)
   mark(U114(x0, x1))
   a__U81(x0)
   mark(U103(x0, x1, x2))
   a__U131(x0, x1, x2, x3)
   mark(isNat(x0))
   mark(isNatList(x0))
   a__U13(x0)
   a__U111(x0, x1, x2)
   a__U132(x0, x1, x2, x3)
   mark(U21(x0, x1))
   mark(U44(x0, x1, x2))
   a__U41(x0, x1, x2)
   a__U12(x0, x1)
   mark(U93(x0, x1, x2))
   a__U106(x0)
   mark(U91(x0, x1, x2))
   a__U93(x0, x1, x2)
   mark(U51(x0, x1))
   a__U61(x0, x1)
   a__U105(x0, x1)
   a__U33(x0)
   a__zeros
   mark(U101(x0, x1, x2))
   mark(U13(x0))
   mark(U131(x0, x1, x2, x3))
   mark(U43(x0, x1, x2))
   mark(s(x0))
   mark(U132(x0, x1, x2, x3))
   a__U102(x0, x1, x2)
   mark(U62(x0))
   a__U32(x0, x1)
   a__U44(x0, x1, x2)
   mark(U92(x0, x1, x2))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(6) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__U51(tt, V2) -> A__ISNATILISTKIND(V2)
   A__ISNATILISTKIND(cons(V1, V2)) -> A__U51(a__isNatKind(V1), V2)
   A__ISNATILISTKIND(cons(V1, V2)) -> A__ISNATKIND(V1)
   A__ISNATKIND(length(V1)) -> A__ISNATILISTKIND(V1)
   A__ISNATILISTKIND(take(V1, V2)) -> A__U61(a__isNatKind(V1), V2)
   A__U61(tt, V2) -> A__ISNATILISTKIND(V2)
   A__ISNATILISTKIND(take(V1, V2)) -> A__ISNATKIND(V1)
   A__ISNATKIND(s(V1)) -> A__ISNATKIND(V1)

The TRS R consists of the following rules:

   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U71(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U81(a__isNatKind(V1))
   a__isNatKind(X) -> isNatKind(X)
   a__U81(tt) -> tt
   a__U81(X) -> U81(X)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatIListKind(take(V1, V2)) -> a__U61(a__isNatKind(V1), V2)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U71(tt) -> tt
   a__U71(X) -> U71(X)
   a__U61(tt, V2) -> a__U62(a__isNatIListKind(V2))
   a__U61(X1, X2) -> U61(X1, X2)
   a__U62(tt) -> tt
   a__U62(X) -> U62(X)
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(tt) -> tt
   a__U52(X) -> U52(X)

The set Q consists of the following terms:

   mark(isNatIListKind(x0))
   a__U136(x0, x1, x2, x3)
   mark(U22(x0, x1))
   a__U135(x0, x1, x2, x3)
   mark(U42(x0, x1, x2))
   mark(U104(x0, x1, x2))
   a__length(x0)
   mark(U106(x0))
   mark(U96(x0))
   a__take(x0, x1)
   a__U62(x0)
   mark(zeros)
   mark(U23(x0))
   mark(0)
   mark(length(x0))
   a__isNatList(x0)
   mark(U71(x0))
   a__isNatKind(x0)
   a__U134(x0, x1, x2, x3)
   mark(cons(x0, x1))
   a__U121(x0, x1)
   mark(U95(x0, x1))
   a__U122(x0)
   a__U113(x0, x1, x2)
   mark(U94(x0, x1, x2))
   a__U21(x0, x1)
   mark(U113(x0, x1, x2))
   a__U112(x0, x1, x2)
   a__U101(x0, x1, x2)
   mark(U41(x0, x1, x2))
   a__U71(x0)
   mark(U105(x0, x1))
   a__U45(x0, x1)
   a__U23(x0)
   mark(U11(x0, x1))
   mark(take(x0, x1))
   mark(U135(x0, x1, x2, x3))
   mark(U111(x0, x1, x2))
   a__U42(x0, x1, x2)
   mark(U61(x0, x1))
   mark(U112(x0, x1, x2))
   a__U22(x0, x1)
   a__U46(x0)
   mark(U12(x0, x1))
   mark(U52(x0))
   mark(nil)
   a__U133(x0, x1, x2, x3)
   a__isNat(x0)
   mark(U136(x0, x1, x2, x3))
   mark(U32(x0, x1))
   mark(U133(x0, x1, x2, x3))
   a__U114(x0, x1)
   mark(U121(x0, x1))
   mark(U46(x0))
   mark(isNatIList(x0))
   mark(U45(x0, x1))
   a__U104(x0, x1, x2)
   mark(U102(x0, x1, x2))
   a__U91(x0, x1, x2)
   a__U51(x0, x1)
   a__isNatIListKind(x0)
   a__U95(x0, x1)
   mark(tt)
   a__U103(x0, x1, x2)
   a__U11(x0, x1)
   a__U43(x0, x1, x2)
   a__U92(x0, x1, x2)
   a__isNatIList(x0)
   mark(U81(x0))
   mark(U31(x0, x1))
   a__U52(x0)
   mark(U122(x0))
   a__U31(x0, x1)
   mark(U33(x0))
   a__U94(x0, x1, x2)
   mark(U134(x0, x1, x2, x3))
   mark(isNatKind(x0))
   a__U96(x0)
   mark(U114(x0, x1))
   a__U81(x0)
   mark(U103(x0, x1, x2))
   a__U131(x0, x1, x2, x3)
   mark(isNat(x0))
   mark(isNatList(x0))
   a__U13(x0)
   a__U111(x0, x1, x2)
   a__U132(x0, x1, x2, x3)
   mark(U21(x0, x1))
   mark(U44(x0, x1, x2))
   a__U41(x0, x1, x2)
   a__U12(x0, x1)
   mark(U93(x0, x1, x2))
   a__U106(x0)
   mark(U91(x0, x1, x2))
   a__U93(x0, x1, x2)
   mark(U51(x0, x1))
   a__U61(x0, x1)
   a__U105(x0, x1)
   a__U33(x0)
   a__zeros
   mark(U101(x0, x1, x2))
   mark(U13(x0))
   mark(U131(x0, x1, x2, x3))
   mark(U43(x0, x1, x2))
   mark(s(x0))
   mark(U132(x0, x1, x2, x3))
   a__U102(x0, x1, x2)
   mark(U62(x0))
   a__U32(x0, x1)
   a__U44(x0, x1, x2)
   mark(U92(x0, x1, x2))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   mark(isNatIListKind(x0))
   a__U136(x0, x1, x2, x3)
   mark(U22(x0, x1))
   a__U135(x0, x1, x2, x3)
   mark(U42(x0, x1, x2))
   mark(U104(x0, x1, x2))
   a__length(x0)
   mark(U106(x0))
   mark(U96(x0))
   a__take(x0, x1)
   mark(zeros)
   mark(U23(x0))
   mark(0)
   mark(length(x0))
   a__isNatList(x0)
   mark(U71(x0))
   a__U134(x0, x1, x2, x3)
   mark(cons(x0, x1))
   a__U121(x0, x1)
   mark(U95(x0, x1))
   a__U122(x0)
   a__U113(x0, x1, x2)
   mark(U94(x0, x1, x2))
   a__U21(x0, x1)
   mark(U113(x0, x1, x2))
   a__U112(x0, x1, x2)
   a__U101(x0, x1, x2)
   mark(U41(x0, x1, x2))
   mark(U105(x0, x1))
   a__U45(x0, x1)
   a__U23(x0)
   mark(U11(x0, x1))
   mark(take(x0, x1))
   mark(U135(x0, x1, x2, x3))
   mark(U111(x0, x1, x2))
   a__U42(x0, x1, x2)
   mark(U61(x0, x1))
   mark(U112(x0, x1, x2))
   a__U22(x0, x1)
   a__U46(x0)
   mark(U12(x0, x1))
   mark(U52(x0))
   mark(nil)
   a__U133(x0, x1, x2, x3)
   a__isNat(x0)
   mark(U136(x0, x1, x2, x3))
   mark(U32(x0, x1))
   mark(U133(x0, x1, x2, x3))
   a__U114(x0, x1)
   mark(U121(x0, x1))
   mark(U46(x0))
   mark(isNatIList(x0))
   mark(U45(x0, x1))
   a__U104(x0, x1, x2)
   mark(U102(x0, x1, x2))
   a__U91(x0, x1, x2)
   a__U95(x0, x1)
   mark(tt)
   a__U103(x0, x1, x2)
   a__U11(x0, x1)
   a__U43(x0, x1, x2)
   a__U92(x0, x1, x2)
   a__isNatIList(x0)
   mark(U81(x0))
   mark(U31(x0, x1))
   mark(U122(x0))
   a__U31(x0, x1)
   mark(U33(x0))
   a__U94(x0, x1, x2)
   mark(U134(x0, x1, x2, x3))
   mark(isNatKind(x0))
   a__U96(x0)
   mark(U114(x0, x1))
   mark(U103(x0, x1, x2))
   a__U131(x0, x1, x2, x3)
   mark(isNat(x0))
   mark(isNatList(x0))
   a__U13(x0)
   a__U111(x0, x1, x2)
   a__U132(x0, x1, x2, x3)
   mark(U21(x0, x1))
   mark(U44(x0, x1, x2))
   a__U41(x0, x1, x2)
   a__U12(x0, x1)
   mark(U93(x0, x1, x2))
   a__U106(x0)
   mark(U91(x0, x1, x2))
   a__U93(x0, x1, x2)
   mark(U51(x0, x1))
   a__U105(x0, x1)
   a__U33(x0)
   a__zeros
   mark(U101(x0, x1, x2))
   mark(U13(x0))
   mark(U131(x0, x1, x2, x3))
   mark(U43(x0, x1, x2))
   mark(s(x0))
   mark(U132(x0, x1, x2, x3))
   a__U102(x0, x1, x2)
   mark(U62(x0))
   a__U32(x0, x1)
   a__U44(x0, x1, x2)
   mark(U92(x0, x1, x2))


----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__U51(tt, V2) -> A__ISNATILISTKIND(V2)
   A__ISNATILISTKIND(cons(V1, V2)) -> A__U51(a__isNatKind(V1), V2)
   A__ISNATILISTKIND(cons(V1, V2)) -> A__ISNATKIND(V1)
   A__ISNATKIND(length(V1)) -> A__ISNATILISTKIND(V1)
   A__ISNATILISTKIND(take(V1, V2)) -> A__U61(a__isNatKind(V1), V2)
   A__U61(tt, V2) -> A__ISNATILISTKIND(V2)
   A__ISNATILISTKIND(take(V1, V2)) -> A__ISNATKIND(V1)
   A__ISNATKIND(s(V1)) -> A__ISNATKIND(V1)

The TRS R consists of the following rules:

   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U71(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U81(a__isNatKind(V1))
   a__isNatKind(X) -> isNatKind(X)
   a__U81(tt) -> tt
   a__U81(X) -> U81(X)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatIListKind(take(V1, V2)) -> a__U61(a__isNatKind(V1), V2)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U71(tt) -> tt
   a__U71(X) -> U71(X)
   a__U61(tt, V2) -> a__U62(a__isNatIListKind(V2))
   a__U61(X1, X2) -> U61(X1, X2)
   a__U62(tt) -> tt
   a__U62(X) -> U62(X)
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(tt) -> tt
   a__U52(X) -> U52(X)

The set Q consists of the following terms:

   a__U62(x0)
   a__isNatKind(x0)
   a__U71(x0)
   a__U51(x0, x1)
   a__isNatIListKind(x0)
   a__U52(x0)
   a__U81(x0)
   a__U61(x0, x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*A__ISNATILISTKIND(cons(V1, V2)) -> A__U51(a__isNatKind(V1), V2)
The graph contains the following edges 1 > 2


*A__U51(tt, V2) -> A__ISNATILISTKIND(V2)
The graph contains the following edges 2 >= 1


*A__ISNATKIND(s(V1)) -> A__ISNATKIND(V1)
The graph contains the following edges 1 > 1


*A__ISNATKIND(length(V1)) -> A__ISNATILISTKIND(V1)
The graph contains the following edges 1 > 1


*A__U61(tt, V2) -> A__ISNATILISTKIND(V2)
The graph contains the following edges 2 >= 1


*A__ISNATILISTKIND(take(V1, V2)) -> A__U61(a__isNatKind(V1), V2)
The graph contains the following edges 1 > 2


*A__ISNATILISTKIND(cons(V1, V2)) -> A__ISNATKIND(V1)
The graph contains the following edges 1 > 1


*A__ISNATILISTKIND(take(V1, V2)) -> A__ISNATKIND(V1)
The graph contains the following edges 1 > 1


----------------------------------------

(11)
YES

----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__U102(tt, V1, V2) -> A__U103(a__isNatIListKind(V2), V1, V2)
   A__U103(tt, V1, V2) -> A__U104(a__isNatIListKind(V2), V1, V2)
   A__U104(tt, V1, V2) -> A__U105(a__isNat(V1), V2)
   A__U105(tt, V2) -> A__ISNATILIST(V2)
   A__ISNATILIST(V) -> A__U31(a__isNatIListKind(V), V)
   A__U31(tt, V) -> A__U32(a__isNatIListKind(V), V)
   A__U32(tt, V) -> A__ISNATLIST(V)
   A__ISNATLIST(cons(V1, V2)) -> A__U91(a__isNatKind(V1), V1, V2)
   A__U91(tt, V1, V2) -> A__U92(a__isNatKind(V1), V1, V2)
   A__U92(tt, V1, V2) -> A__U93(a__isNatIListKind(V2), V1, V2)
   A__U93(tt, V1, V2) -> A__U94(a__isNatIListKind(V2), V1, V2)
   A__U94(tt, V1, V2) -> A__U95(a__isNat(V1), V2)
   A__U95(tt, V2) -> A__ISNATLIST(V2)
   A__ISNATLIST(take(V1, V2)) -> A__U101(a__isNatKind(V1), V1, V2)
   A__U101(tt, V1, V2) -> A__U102(a__isNatKind(V1), V1, V2)
   A__U94(tt, V1, V2) -> A__ISNAT(V1)
   A__ISNAT(length(V1)) -> A__U11(a__isNatIListKind(V1), V1)
   A__U11(tt, V1) -> A__U12(a__isNatIListKind(V1), V1)
   A__U12(tt, V1) -> A__ISNATLIST(V1)
   A__ISNAT(s(V1)) -> A__U21(a__isNatKind(V1), V1)
   A__U21(tt, V1) -> A__U22(a__isNatKind(V1), V1)
   A__U22(tt, V1) -> A__ISNAT(V1)
   A__ISNATILIST(cons(V1, V2)) -> A__U41(a__isNatKind(V1), V1, V2)
   A__U41(tt, V1, V2) -> A__U42(a__isNatKind(V1), V1, V2)
   A__U42(tt, V1, V2) -> A__U43(a__isNatIListKind(V2), V1, V2)
   A__U43(tt, V1, V2) -> A__U44(a__isNatIListKind(V2), V1, V2)
   A__U44(tt, V1, V2) -> A__U45(a__isNat(V1), V2)
   A__U45(tt, V2) -> A__ISNATILIST(V2)
   A__U44(tt, V1, V2) -> A__ISNAT(V1)
   A__U104(tt, V1, V2) -> A__ISNAT(V1)

The TRS R consists of the following rules:

   a__zeros -> cons(0, zeros)
   a__U101(tt, V1, V2) -> a__U102(a__isNatKind(V1), V1, V2)
   a__U102(tt, V1, V2) -> a__U103(a__isNatIListKind(V2), V1, V2)
   a__U103(tt, V1, V2) -> a__U104(a__isNatIListKind(V2), V1, V2)
   a__U104(tt, V1, V2) -> a__U105(a__isNat(V1), V2)
   a__U105(tt, V2) -> a__U106(a__isNatIList(V2))
   a__U106(tt) -> tt
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U111(tt, L, N) -> a__U112(a__isNatIListKind(L), L, N)
   a__U112(tt, L, N) -> a__U113(a__isNat(N), L, N)
   a__U113(tt, L, N) -> a__U114(a__isNatKind(N), L)
   a__U114(tt, L) -> s(a__length(mark(L)))
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U121(tt, IL) -> a__U122(a__isNatIListKind(IL))
   a__U122(tt) -> nil
   a__U13(tt) -> tt
   a__U131(tt, IL, M, N) -> a__U132(a__isNatIListKind(IL), IL, M, N)
   a__U132(tt, IL, M, N) -> a__U133(a__isNat(M), IL, M, N)
   a__U133(tt, IL, M, N) -> a__U134(a__isNatKind(M), IL, M, N)
   a__U134(tt, IL, M, N) -> a__U135(a__isNat(N), IL, M, N)
   a__U135(tt, IL, M, N) -> a__U136(a__isNatKind(N), IL, M, N)
   a__U136(tt, IL, M, N) -> cons(mark(N), take(M, IL))
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U23(tt) -> tt
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U33(tt) -> tt
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U46(tt) -> tt
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U52(tt) -> tt
   a__U61(tt, V2) -> a__U62(a__isNatIListKind(V2))
   a__U62(tt) -> tt
   a__U71(tt) -> tt
   a__U81(tt) -> tt
   a__U91(tt, V1, V2) -> a__U92(a__isNatKind(V1), V1, V2)
   a__U92(tt, V1, V2) -> a__U93(a__isNatIListKind(V2), V1, V2)
   a__U93(tt, V1, V2) -> a__U94(a__isNatIListKind(V2), V1, V2)
   a__U94(tt, V1, V2) -> a__U95(a__isNat(V1), V2)
   a__U95(tt, V2) -> a__U96(a__isNatList(V2))
   a__U96(tt) -> tt
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatIListKind(take(V1, V2)) -> a__U61(a__isNatKind(V1), V2)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U71(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U81(a__isNatKind(V1))
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U91(a__isNatKind(V1), V1, V2)
   a__isNatList(take(V1, V2)) -> a__U101(a__isNatKind(V1), V1, V2)
   a__length(nil) -> 0
   a__length(cons(N, L)) -> a__U111(a__isNatList(L), L, N)
   a__take(0, IL) -> a__U121(a__isNatIList(IL), IL)
   a__take(s(M), cons(N, IL)) -> a__U131(a__isNatIList(IL), IL, M, N)
   mark(zeros) -> a__zeros
   mark(U101(X1, X2, X3)) -> a__U101(mark(X1), X2, X3)
   mark(U102(X1, X2, X3)) -> a__U102(mark(X1), X2, X3)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U103(X1, X2, X3)) -> a__U103(mark(X1), X2, X3)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U104(X1, X2, X3)) -> a__U104(mark(X1), X2, X3)
   mark(U105(X1, X2)) -> a__U105(mark(X1), X2)
   mark(isNat(X)) -> a__isNat(X)
   mark(U106(X)) -> a__U106(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(U111(X1, X2, X3)) -> a__U111(mark(X1), X2, X3)
   mark(U112(X1, X2, X3)) -> a__U112(mark(X1), X2, X3)
   mark(U113(X1, X2, X3)) -> a__U113(mark(X1), X2, X3)
   mark(U114(X1, X2)) -> a__U114(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U121(X1, X2)) -> a__U121(mark(X1), X2)
   mark(U122(X)) -> a__U122(mark(X))
   mark(U131(X1, X2, X3, X4)) -> a__U131(mark(X1), X2, X3, X4)
   mark(U132(X1, X2, X3, X4)) -> a__U132(mark(X1), X2, X3, X4)
   mark(U133(X1, X2, X3, X4)) -> a__U133(mark(X1), X2, X3, X4)
   mark(U134(X1, X2, X3, X4)) -> a__U134(mark(X1), X2, X3, X4)
   mark(U135(X1, X2, X3, X4)) -> a__U135(mark(X1), X2, X3, X4)
   mark(U136(X1, X2, X3, X4)) -> a__U136(mark(X1), X2, X3, X4)
   mark(take(X1, X2)) -> a__take(mark(X1), mark(X2))
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(U23(X)) -> a__U23(mark(X))
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X1, X2)) -> a__U61(mark(X1), X2)
   mark(U62(X)) -> a__U62(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X)) -> a__U81(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2, X3)) -> a__U94(mark(X1), X2, X3)
   mark(U95(X1, X2)) -> a__U95(mark(X1), X2)
   mark(U96(X)) -> a__U96(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__zeros -> zeros
   a__U101(X1, X2, X3) -> U101(X1, X2, X3)
   a__U102(X1, X2, X3) -> U102(X1, X2, X3)
   a__isNatKind(X) -> isNatKind(X)
   a__U103(X1, X2, X3) -> U103(X1, X2, X3)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U104(X1, X2, X3) -> U104(X1, X2, X3)
   a__U105(X1, X2) -> U105(X1, X2)
   a__isNat(X) -> isNat(X)
   a__U106(X) -> U106(X)
   a__isNatIList(X) -> isNatIList(X)
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(X1, X2) -> U12(X1, X2)
   a__U111(X1, X2, X3) -> U111(X1, X2, X3)
   a__U112(X1, X2, X3) -> U112(X1, X2, X3)
   a__U113(X1, X2, X3) -> U113(X1, X2, X3)
   a__U114(X1, X2) -> U114(X1, X2)
   a__length(X) -> length(X)
   a__U13(X) -> U13(X)
   a__isNatList(X) -> isNatList(X)
   a__U121(X1, X2) -> U121(X1, X2)
   a__U122(X) -> U122(X)
   a__U131(X1, X2, X3, X4) -> U131(X1, X2, X3, X4)
   a__U132(X1, X2, X3, X4) -> U132(X1, X2, X3, X4)
   a__U133(X1, X2, X3, X4) -> U133(X1, X2, X3, X4)
   a__U134(X1, X2, X3, X4) -> U134(X1, X2, X3, X4)
   a__U135(X1, X2, X3, X4) -> U135(X1, X2, X3, X4)
   a__U136(X1, X2, X3, X4) -> U136(X1, X2, X3, X4)
   a__take(X1, X2) -> take(X1, X2)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(X1, X2) -> U22(X1, X2)
   a__U23(X) -> U23(X)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(X) -> U33(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(X) -> U46(X)
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(X) -> U52(X)
   a__U61(X1, X2) -> U61(X1, X2)
   a__U62(X) -> U62(X)
   a__U71(X) -> U71(X)
   a__U81(X) -> U81(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2, X3) -> U94(X1, X2, X3)
   a__U95(X1, X2) -> U95(X1, X2)
   a__U96(X) -> U96(X)

The set Q consists of the following terms:

   mark(isNatIListKind(x0))
   a__U136(x0, x1, x2, x3)
   mark(U22(x0, x1))
   a__U135(x0, x1, x2, x3)
   mark(U42(x0, x1, x2))
   mark(U104(x0, x1, x2))
   a__length(x0)
   mark(U106(x0))
   mark(U96(x0))
   a__take(x0, x1)
   a__U62(x0)
   mark(zeros)
   mark(U23(x0))
   mark(0)
   mark(length(x0))
   a__isNatList(x0)
   mark(U71(x0))
   a__isNatKind(x0)
   a__U134(x0, x1, x2, x3)
   mark(cons(x0, x1))
   a__U121(x0, x1)
   mark(U95(x0, x1))
   a__U122(x0)
   a__U113(x0, x1, x2)
   mark(U94(x0, x1, x2))
   a__U21(x0, x1)
   mark(U113(x0, x1, x2))
   a__U112(x0, x1, x2)
   a__U101(x0, x1, x2)
   mark(U41(x0, x1, x2))
   a__U71(x0)
   mark(U105(x0, x1))
   a__U45(x0, x1)
   a__U23(x0)
   mark(U11(x0, x1))
   mark(take(x0, x1))
   mark(U135(x0, x1, x2, x3))
   mark(U111(x0, x1, x2))
   a__U42(x0, x1, x2)
   mark(U61(x0, x1))
   mark(U112(x0, x1, x2))
   a__U22(x0, x1)
   a__U46(x0)
   mark(U12(x0, x1))
   mark(U52(x0))
   mark(nil)
   a__U133(x0, x1, x2, x3)
   a__isNat(x0)
   mark(U136(x0, x1, x2, x3))
   mark(U32(x0, x1))
   mark(U133(x0, x1, x2, x3))
   a__U114(x0, x1)
   mark(U121(x0, x1))
   mark(U46(x0))
   mark(isNatIList(x0))
   mark(U45(x0, x1))
   a__U104(x0, x1, x2)
   mark(U102(x0, x1, x2))
   a__U91(x0, x1, x2)
   a__U51(x0, x1)
   a__isNatIListKind(x0)
   a__U95(x0, x1)
   mark(tt)
   a__U103(x0, x1, x2)
   a__U11(x0, x1)
   a__U43(x0, x1, x2)
   a__U92(x0, x1, x2)
   a__isNatIList(x0)
   mark(U81(x0))
   mark(U31(x0, x1))
   a__U52(x0)
   mark(U122(x0))
   a__U31(x0, x1)
   mark(U33(x0))
   a__U94(x0, x1, x2)
   mark(U134(x0, x1, x2, x3))
   mark(isNatKind(x0))
   a__U96(x0)
   mark(U114(x0, x1))
   a__U81(x0)
   mark(U103(x0, x1, x2))
   a__U131(x0, x1, x2, x3)
   mark(isNat(x0))
   mark(isNatList(x0))
   a__U13(x0)
   a__U111(x0, x1, x2)
   a__U132(x0, x1, x2, x3)
   mark(U21(x0, x1))
   mark(U44(x0, x1, x2))
   a__U41(x0, x1, x2)
   a__U12(x0, x1)
   mark(U93(x0, x1, x2))
   a__U106(x0)
   mark(U91(x0, x1, x2))
   a__U93(x0, x1, x2)
   mark(U51(x0, x1))
   a__U61(x0, x1)
   a__U105(x0, x1)
   a__U33(x0)
   a__zeros
   mark(U101(x0, x1, x2))
   mark(U13(x0))
   mark(U131(x0, x1, x2, x3))
   mark(U43(x0, x1, x2))
   mark(s(x0))
   mark(U132(x0, x1, x2, x3))
   a__U102(x0, x1, x2)
   mark(U62(x0))
   a__U32(x0, x1)
   a__U44(x0, x1, x2)
   mark(U92(x0, x1, x2))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__U102(tt, V1, V2) -> A__U103(a__isNatIListKind(V2), V1, V2)
   A__U103(tt, V1, V2) -> A__U104(a__isNatIListKind(V2), V1, V2)
   A__U104(tt, V1, V2) -> A__U105(a__isNat(V1), V2)
   A__U105(tt, V2) -> A__ISNATILIST(V2)
   A__ISNATILIST(V) -> A__U31(a__isNatIListKind(V), V)
   A__U31(tt, V) -> A__U32(a__isNatIListKind(V), V)
   A__U32(tt, V) -> A__ISNATLIST(V)
   A__ISNATLIST(cons(V1, V2)) -> A__U91(a__isNatKind(V1), V1, V2)
   A__U91(tt, V1, V2) -> A__U92(a__isNatKind(V1), V1, V2)
   A__U92(tt, V1, V2) -> A__U93(a__isNatIListKind(V2), V1, V2)
   A__U93(tt, V1, V2) -> A__U94(a__isNatIListKind(V2), V1, V2)
   A__U94(tt, V1, V2) -> A__U95(a__isNat(V1), V2)
   A__U95(tt, V2) -> A__ISNATLIST(V2)
   A__ISNATLIST(take(V1, V2)) -> A__U101(a__isNatKind(V1), V1, V2)
   A__U101(tt, V1, V2) -> A__U102(a__isNatKind(V1), V1, V2)
   A__U94(tt, V1, V2) -> A__ISNAT(V1)
   A__ISNAT(length(V1)) -> A__U11(a__isNatIListKind(V1), V1)
   A__U11(tt, V1) -> A__U12(a__isNatIListKind(V1), V1)
   A__U12(tt, V1) -> A__ISNATLIST(V1)
   A__ISNAT(s(V1)) -> A__U21(a__isNatKind(V1), V1)
   A__U21(tt, V1) -> A__U22(a__isNatKind(V1), V1)
   A__U22(tt, V1) -> A__ISNAT(V1)
   A__ISNATILIST(cons(V1, V2)) -> A__U41(a__isNatKind(V1), V1, V2)
   A__U41(tt, V1, V2) -> A__U42(a__isNatKind(V1), V1, V2)
   A__U42(tt, V1, V2) -> A__U43(a__isNatIListKind(V2), V1, V2)
   A__U43(tt, V1, V2) -> A__U44(a__isNatIListKind(V2), V1, V2)
   A__U44(tt, V1, V2) -> A__U45(a__isNat(V1), V2)
   A__U45(tt, V2) -> A__ISNATILIST(V2)
   A__U44(tt, V1, V2) -> A__ISNAT(V1)
   A__U104(tt, V1, V2) -> A__ISNAT(V1)

The TRS R consists of the following rules:

   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNat(X) -> isNat(X)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U71(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U81(a__isNatKind(V1))
   a__isNatKind(X) -> isNatKind(X)
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U22(X1, X2) -> U22(X1, X2)
   a__U23(tt) -> tt
   a__U23(X) -> U23(X)
   a__U81(tt) -> tt
   a__U81(X) -> U81(X)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatIListKind(take(V1, V2)) -> a__U61(a__isNatKind(V1), V2)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U71(tt) -> tt
   a__U71(X) -> U71(X)
   a__U61(tt, V2) -> a__U62(a__isNatIListKind(V2))
   a__U61(X1, X2) -> U61(X1, X2)
   a__U62(tt) -> tt
   a__U62(X) -> U62(X)
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(tt) -> tt
   a__U52(X) -> U52(X)
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U12(X1, X2) -> U12(X1, X2)
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U91(a__isNatKind(V1), V1, V2)
   a__isNatList(take(V1, V2)) -> a__U101(a__isNatKind(V1), V1, V2)
   a__isNatList(X) -> isNatList(X)
   a__U13(tt) -> tt
   a__U13(X) -> U13(X)
   a__U101(tt, V1, V2) -> a__U102(a__isNatKind(V1), V1, V2)
   a__U101(X1, X2, X3) -> U101(X1, X2, X3)
   a__U102(tt, V1, V2) -> a__U103(a__isNatIListKind(V2), V1, V2)
   a__U102(X1, X2, X3) -> U102(X1, X2, X3)
   a__U103(tt, V1, V2) -> a__U104(a__isNatIListKind(V2), V1, V2)
   a__U103(X1, X2, X3) -> U103(X1, X2, X3)
   a__U104(tt, V1, V2) -> a__U105(a__isNat(V1), V2)
   a__U104(X1, X2, X3) -> U104(X1, X2, X3)
   a__U105(tt, V2) -> a__U106(a__isNatIList(V2))
   a__U105(X1, X2) -> U105(X1, X2)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIList(X) -> isNatIList(X)
   a__U106(tt) -> tt
   a__U106(X) -> U106(X)
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(tt) -> tt
   a__U46(X) -> U46(X)
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(tt) -> tt
   a__U33(X) -> U33(X)
   a__U91(tt, V1, V2) -> a__U92(a__isNatKind(V1), V1, V2)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(tt, V1, V2) -> a__U93(a__isNatIListKind(V2), V1, V2)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(tt, V1, V2) -> a__U94(a__isNatIListKind(V2), V1, V2)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(tt, V1, V2) -> a__U95(a__isNat(V1), V2)
   a__U94(X1, X2, X3) -> U94(X1, X2, X3)
   a__U95(tt, V2) -> a__U96(a__isNatList(V2))
   a__U95(X1, X2) -> U95(X1, X2)
   a__U96(tt) -> tt
   a__U96(X) -> U96(X)

The set Q consists of the following terms:

   mark(isNatIListKind(x0))
   a__U136(x0, x1, x2, x3)
   mark(U22(x0, x1))
   a__U135(x0, x1, x2, x3)
   mark(U42(x0, x1, x2))
   mark(U104(x0, x1, x2))
   a__length(x0)
   mark(U106(x0))
   mark(U96(x0))
   a__take(x0, x1)
   a__U62(x0)
   mark(zeros)
   mark(U23(x0))
   mark(0)
   mark(length(x0))
   a__isNatList(x0)
   mark(U71(x0))
   a__isNatKind(x0)
   a__U134(x0, x1, x2, x3)
   mark(cons(x0, x1))
   a__U121(x0, x1)
   mark(U95(x0, x1))
   a__U122(x0)
   a__U113(x0, x1, x2)
   mark(U94(x0, x1, x2))
   a__U21(x0, x1)
   mark(U113(x0, x1, x2))
   a__U112(x0, x1, x2)
   a__U101(x0, x1, x2)
   mark(U41(x0, x1, x2))
   a__U71(x0)
   mark(U105(x0, x1))
   a__U45(x0, x1)
   a__U23(x0)
   mark(U11(x0, x1))
   mark(take(x0, x1))
   mark(U135(x0, x1, x2, x3))
   mark(U111(x0, x1, x2))
   a__U42(x0, x1, x2)
   mark(U61(x0, x1))
   mark(U112(x0, x1, x2))
   a__U22(x0, x1)
   a__U46(x0)
   mark(U12(x0, x1))
   mark(U52(x0))
   mark(nil)
   a__U133(x0, x1, x2, x3)
   a__isNat(x0)
   mark(U136(x0, x1, x2, x3))
   mark(U32(x0, x1))
   mark(U133(x0, x1, x2, x3))
   a__U114(x0, x1)
   mark(U121(x0, x1))
   mark(U46(x0))
   mark(isNatIList(x0))
   mark(U45(x0, x1))
   a__U104(x0, x1, x2)
   mark(U102(x0, x1, x2))
   a__U91(x0, x1, x2)
   a__U51(x0, x1)
   a__isNatIListKind(x0)
   a__U95(x0, x1)
   mark(tt)
   a__U103(x0, x1, x2)
   a__U11(x0, x1)
   a__U43(x0, x1, x2)
   a__U92(x0, x1, x2)
   a__isNatIList(x0)
   mark(U81(x0))
   mark(U31(x0, x1))
   a__U52(x0)
   mark(U122(x0))
   a__U31(x0, x1)
   mark(U33(x0))
   a__U94(x0, x1, x2)
   mark(U134(x0, x1, x2, x3))
   mark(isNatKind(x0))
   a__U96(x0)
   mark(U114(x0, x1))
   a__U81(x0)
   mark(U103(x0, x1, x2))
   a__U131(x0, x1, x2, x3)
   mark(isNat(x0))
   mark(isNatList(x0))
   a__U13(x0)
   a__U111(x0, x1, x2)
   a__U132(x0, x1, x2, x3)
   mark(U21(x0, x1))
   mark(U44(x0, x1, x2))
   a__U41(x0, x1, x2)
   a__U12(x0, x1)
   mark(U93(x0, x1, x2))
   a__U106(x0)
   mark(U91(x0, x1, x2))
   a__U93(x0, x1, x2)
   mark(U51(x0, x1))
   a__U61(x0, x1)
   a__U105(x0, x1)
   a__U33(x0)
   a__zeros
   mark(U101(x0, x1, x2))
   mark(U13(x0))
   mark(U131(x0, x1, x2, x3))
   mark(U43(x0, x1, x2))
   mark(s(x0))
   mark(U132(x0, x1, x2, x3))
   a__U102(x0, x1, x2)
   mark(U62(x0))
   a__U32(x0, x1)
   a__U44(x0, x1, x2)
   mark(U92(x0, x1, x2))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   mark(isNatIListKind(x0))
   a__U136(x0, x1, x2, x3)
   mark(U22(x0, x1))
   a__U135(x0, x1, x2, x3)
   mark(U42(x0, x1, x2))
   mark(U104(x0, x1, x2))
   a__length(x0)
   mark(U106(x0))
   mark(U96(x0))
   a__take(x0, x1)
   mark(zeros)
   mark(U23(x0))
   mark(0)
   mark(length(x0))
   mark(U71(x0))
   a__U134(x0, x1, x2, x3)
   mark(cons(x0, x1))
   a__U121(x0, x1)
   mark(U95(x0, x1))
   a__U122(x0)
   a__U113(x0, x1, x2)
   mark(U94(x0, x1, x2))
   mark(U113(x0, x1, x2))
   a__U112(x0, x1, x2)
   mark(U41(x0, x1, x2))
   mark(U105(x0, x1))
   mark(U11(x0, x1))
   mark(take(x0, x1))
   mark(U135(x0, x1, x2, x3))
   mark(U111(x0, x1, x2))
   mark(U61(x0, x1))
   mark(U112(x0, x1, x2))
   mark(U12(x0, x1))
   mark(U52(x0))
   mark(nil)
   a__U133(x0, x1, x2, x3)
   mark(U136(x0, x1, x2, x3))
   mark(U32(x0, x1))
   mark(U133(x0, x1, x2, x3))
   a__U114(x0, x1)
   mark(U121(x0, x1))
   mark(U46(x0))
   mark(isNatIList(x0))
   mark(U45(x0, x1))
   mark(U102(x0, x1, x2))
   mark(tt)
   mark(U81(x0))
   mark(U31(x0, x1))
   mark(U122(x0))
   mark(U33(x0))
   mark(U134(x0, x1, x2, x3))
   mark(isNatKind(x0))
   mark(U114(x0, x1))
   mark(U103(x0, x1, x2))
   a__U131(x0, x1, x2, x3)
   mark(isNat(x0))
   mark(isNatList(x0))
   a__U111(x0, x1, x2)
   a__U132(x0, x1, x2, x3)
   mark(U21(x0, x1))
   mark(U44(x0, x1, x2))
   mark(U93(x0, x1, x2))
   mark(U91(x0, x1, x2))
   mark(U51(x0, x1))
   a__zeros
   mark(U101(x0, x1, x2))
   mark(U13(x0))
   mark(U131(x0, x1, x2, x3))
   mark(U43(x0, x1, x2))
   mark(s(x0))
   mark(U132(x0, x1, x2, x3))
   mark(U62(x0))
   mark(U92(x0, x1, x2))


----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__U102(tt, V1, V2) -> A__U103(a__isNatIListKind(V2), V1, V2)
   A__U103(tt, V1, V2) -> A__U104(a__isNatIListKind(V2), V1, V2)
   A__U104(tt, V1, V2) -> A__U105(a__isNat(V1), V2)
   A__U105(tt, V2) -> A__ISNATILIST(V2)
   A__ISNATILIST(V) -> A__U31(a__isNatIListKind(V), V)
   A__U31(tt, V) -> A__U32(a__isNatIListKind(V), V)
   A__U32(tt, V) -> A__ISNATLIST(V)
   A__ISNATLIST(cons(V1, V2)) -> A__U91(a__isNatKind(V1), V1, V2)
   A__U91(tt, V1, V2) -> A__U92(a__isNatKind(V1), V1, V2)
   A__U92(tt, V1, V2) -> A__U93(a__isNatIListKind(V2), V1, V2)
   A__U93(tt, V1, V2) -> A__U94(a__isNatIListKind(V2), V1, V2)
   A__U94(tt, V1, V2) -> A__U95(a__isNat(V1), V2)
   A__U95(tt, V2) -> A__ISNATLIST(V2)
   A__ISNATLIST(take(V1, V2)) -> A__U101(a__isNatKind(V1), V1, V2)
   A__U101(tt, V1, V2) -> A__U102(a__isNatKind(V1), V1, V2)
   A__U94(tt, V1, V2) -> A__ISNAT(V1)
   A__ISNAT(length(V1)) -> A__U11(a__isNatIListKind(V1), V1)
   A__U11(tt, V1) -> A__U12(a__isNatIListKind(V1), V1)
   A__U12(tt, V1) -> A__ISNATLIST(V1)
   A__ISNAT(s(V1)) -> A__U21(a__isNatKind(V1), V1)
   A__U21(tt, V1) -> A__U22(a__isNatKind(V1), V1)
   A__U22(tt, V1) -> A__ISNAT(V1)
   A__ISNATILIST(cons(V1, V2)) -> A__U41(a__isNatKind(V1), V1, V2)
   A__U41(tt, V1, V2) -> A__U42(a__isNatKind(V1), V1, V2)
   A__U42(tt, V1, V2) -> A__U43(a__isNatIListKind(V2), V1, V2)
   A__U43(tt, V1, V2) -> A__U44(a__isNatIListKind(V2), V1, V2)
   A__U44(tt, V1, V2) -> A__U45(a__isNat(V1), V2)
   A__U45(tt, V2) -> A__ISNATILIST(V2)
   A__U44(tt, V1, V2) -> A__ISNAT(V1)
   A__U104(tt, V1, V2) -> A__ISNAT(V1)

The TRS R consists of the following rules:

   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNat(X) -> isNat(X)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U71(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U81(a__isNatKind(V1))
   a__isNatKind(X) -> isNatKind(X)
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U22(X1, X2) -> U22(X1, X2)
   a__U23(tt) -> tt
   a__U23(X) -> U23(X)
   a__U81(tt) -> tt
   a__U81(X) -> U81(X)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatIListKind(take(V1, V2)) -> a__U61(a__isNatKind(V1), V2)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U71(tt) -> tt
   a__U71(X) -> U71(X)
   a__U61(tt, V2) -> a__U62(a__isNatIListKind(V2))
   a__U61(X1, X2) -> U61(X1, X2)
   a__U62(tt) -> tt
   a__U62(X) -> U62(X)
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(tt) -> tt
   a__U52(X) -> U52(X)
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U12(X1, X2) -> U12(X1, X2)
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U91(a__isNatKind(V1), V1, V2)
   a__isNatList(take(V1, V2)) -> a__U101(a__isNatKind(V1), V1, V2)
   a__isNatList(X) -> isNatList(X)
   a__U13(tt) -> tt
   a__U13(X) -> U13(X)
   a__U101(tt, V1, V2) -> a__U102(a__isNatKind(V1), V1, V2)
   a__U101(X1, X2, X3) -> U101(X1, X2, X3)
   a__U102(tt, V1, V2) -> a__U103(a__isNatIListKind(V2), V1, V2)
   a__U102(X1, X2, X3) -> U102(X1, X2, X3)
   a__U103(tt, V1, V2) -> a__U104(a__isNatIListKind(V2), V1, V2)
   a__U103(X1, X2, X3) -> U103(X1, X2, X3)
   a__U104(tt, V1, V2) -> a__U105(a__isNat(V1), V2)
   a__U104(X1, X2, X3) -> U104(X1, X2, X3)
   a__U105(tt, V2) -> a__U106(a__isNatIList(V2))
   a__U105(X1, X2) -> U105(X1, X2)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIList(X) -> isNatIList(X)
   a__U106(tt) -> tt
   a__U106(X) -> U106(X)
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(tt) -> tt
   a__U46(X) -> U46(X)
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(tt) -> tt
   a__U33(X) -> U33(X)
   a__U91(tt, V1, V2) -> a__U92(a__isNatKind(V1), V1, V2)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(tt, V1, V2) -> a__U93(a__isNatIListKind(V2), V1, V2)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(tt, V1, V2) -> a__U94(a__isNatIListKind(V2), V1, V2)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(tt, V1, V2) -> a__U95(a__isNat(V1), V2)
   a__U94(X1, X2, X3) -> U94(X1, X2, X3)
   a__U95(tt, V2) -> a__U96(a__isNatList(V2))
   a__U95(X1, X2) -> U95(X1, X2)
   a__U96(tt) -> tt
   a__U96(X) -> U96(X)

The set Q consists of the following terms:

   a__U62(x0)
   a__isNatList(x0)
   a__isNatKind(x0)
   a__U21(x0, x1)
   a__U101(x0, x1, x2)
   a__U71(x0)
   a__U45(x0, x1)
   a__U23(x0)
   a__U42(x0, x1, x2)
   a__U22(x0, x1)
   a__U46(x0)
   a__isNat(x0)
   a__U104(x0, x1, x2)
   a__U91(x0, x1, x2)
   a__U51(x0, x1)
   a__isNatIListKind(x0)
   a__U95(x0, x1)
   a__U103(x0, x1, x2)
   a__U11(x0, x1)
   a__U43(x0, x1, x2)
   a__U92(x0, x1, x2)
   a__isNatIList(x0)
   a__U52(x0)
   a__U31(x0, x1)
   a__U94(x0, x1, x2)
   a__U96(x0)
   a__U81(x0)
   a__U13(x0)
   a__U41(x0, x1, x2)
   a__U12(x0, x1)
   a__U106(x0)
   a__U93(x0, x1, x2)
   a__U61(x0, x1)
   a__U105(x0, x1)
   a__U33(x0)
   a__U102(x0, x1, x2)
   a__U32(x0, x1)
   a__U44(x0, x1, x2)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*A__U103(tt, V1, V2) -> A__U104(a__isNatIListKind(V2), V1, V2)
The graph contains the following edges 2 >= 2, 3 >= 3


*A__U101(tt, V1, V2) -> A__U102(a__isNatKind(V1), V1, V2)
The graph contains the following edges 2 >= 2, 3 >= 3


*A__U102(tt, V1, V2) -> A__U103(a__isNatIListKind(V2), V1, V2)
The graph contains the following edges 2 >= 2, 3 >= 3


*A__U105(tt, V2) -> A__ISNATILIST(V2)
The graph contains the following edges 2 >= 1


*A__U104(tt, V1, V2) -> A__U105(a__isNat(V1), V2)
The graph contains the following edges 3 >= 2


*A__U104(tt, V1, V2) -> A__ISNAT(V1)
The graph contains the following edges 2 >= 1


*A__U31(tt, V) -> A__U32(a__isNatIListKind(V), V)
The graph contains the following edges 2 >= 2


*A__U45(tt, V2) -> A__ISNATILIST(V2)
The graph contains the following edges 2 >= 1


*A__ISNATILIST(V) -> A__U31(a__isNatIListKind(V), V)
The graph contains the following edges 1 >= 2


*A__ISNATILIST(cons(V1, V2)) -> A__U41(a__isNatKind(V1), V1, V2)
The graph contains the following edges 1 > 2, 1 > 3


*A__U32(tt, V) -> A__ISNATLIST(V)
The graph contains the following edges 2 >= 1


*A__U91(tt, V1, V2) -> A__U92(a__isNatKind(V1), V1, V2)
The graph contains the following edges 2 >= 2, 3 >= 3


*A__ISNATLIST(cons(V1, V2)) -> A__U91(a__isNatKind(V1), V1, V2)
The graph contains the following edges 1 > 2, 1 > 3


*A__ISNATLIST(take(V1, V2)) -> A__U101(a__isNatKind(V1), V1, V2)
The graph contains the following edges 1 > 2, 1 > 3


*A__U92(tt, V1, V2) -> A__U93(a__isNatIListKind(V2), V1, V2)
The graph contains the following edges 2 >= 2, 3 >= 3


*A__U93(tt, V1, V2) -> A__U94(a__isNatIListKind(V2), V1, V2)
The graph contains the following edges 2 >= 2, 3 >= 3


*A__U95(tt, V2) -> A__ISNATLIST(V2)
The graph contains the following edges 2 >= 1


*A__U12(tt, V1) -> A__ISNATLIST(V1)
The graph contains the following edges 2 >= 1


*A__U94(tt, V1, V2) -> A__U95(a__isNat(V1), V2)
The graph contains the following edges 3 >= 2


*A__U94(tt, V1, V2) -> A__ISNAT(V1)
The graph contains the following edges 2 >= 1


*A__U11(tt, V1) -> A__U12(a__isNatIListKind(V1), V1)
The graph contains the following edges 2 >= 2


*A__ISNAT(length(V1)) -> A__U11(a__isNatIListKind(V1), V1)
The graph contains the following edges 1 > 2


*A__ISNAT(s(V1)) -> A__U21(a__isNatKind(V1), V1)
The graph contains the following edges 1 > 2


*A__U21(tt, V1) -> A__U22(a__isNatKind(V1), V1)
The graph contains the following edges 2 >= 2


*A__U22(tt, V1) -> A__ISNAT(V1)
The graph contains the following edges 2 >= 1


*A__U44(tt, V1, V2) -> A__ISNAT(V1)
The graph contains the following edges 2 >= 1


*A__U41(tt, V1, V2) -> A__U42(a__isNatKind(V1), V1, V2)
The graph contains the following edges 2 >= 2, 3 >= 3


*A__U42(tt, V1, V2) -> A__U43(a__isNatIListKind(V2), V1, V2)
The graph contains the following edges 2 >= 2, 3 >= 3


*A__U43(tt, V1, V2) -> A__U44(a__isNatIListKind(V2), V1, V2)
The graph contains the following edges 2 >= 2, 3 >= 3


*A__U44(tt, V1, V2) -> A__U45(a__isNat(V1), V2)
The graph contains the following edges 3 >= 2


----------------------------------------

(18)
YES

----------------------------------------

(19)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(U101(X1, X2, X3)) -> MARK(X1)
   MARK(U102(X1, X2, X3)) -> MARK(X1)
   MARK(U103(X1, X2, X3)) -> MARK(X1)
   MARK(U104(X1, X2, X3)) -> MARK(X1)
   MARK(U105(X1, X2)) -> MARK(X1)
   MARK(U106(X)) -> MARK(X)
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(U12(X1, X2)) -> MARK(X1)
   MARK(U111(X1, X2, X3)) -> A__U111(mark(X1), X2, X3)
   A__U111(tt, L, N) -> A__U112(a__isNatIListKind(L), L, N)
   A__U112(tt, L, N) -> A__U113(a__isNat(N), L, N)
   A__U113(tt, L, N) -> A__U114(a__isNatKind(N), L)
   A__U114(tt, L) -> A__LENGTH(mark(L))
   A__LENGTH(cons(N, L)) -> A__U111(a__isNatList(L), L, N)
   A__U114(tt, L) -> MARK(L)
   MARK(U111(X1, X2, X3)) -> MARK(X1)
   MARK(U112(X1, X2, X3)) -> A__U112(mark(X1), X2, X3)
   MARK(U112(X1, X2, X3)) -> MARK(X1)
   MARK(U113(X1, X2, X3)) -> A__U113(mark(X1), X2, X3)
   MARK(U113(X1, X2, X3)) -> MARK(X1)
   MARK(U114(X1, X2)) -> A__U114(mark(X1), X2)
   MARK(U114(X1, X2)) -> MARK(X1)
   MARK(length(X)) -> A__LENGTH(mark(X))
   MARK(length(X)) -> MARK(X)
   MARK(U13(X)) -> MARK(X)
   MARK(U121(X1, X2)) -> MARK(X1)
   MARK(U122(X)) -> MARK(X)
   MARK(U131(X1, X2, X3, X4)) -> A__U131(mark(X1), X2, X3, X4)
   A__U131(tt, IL, M, N) -> A__U132(a__isNatIListKind(IL), IL, M, N)
   A__U132(tt, IL, M, N) -> A__U133(a__isNat(M), IL, M, N)
   A__U133(tt, IL, M, N) -> A__U134(a__isNatKind(M), IL, M, N)
   A__U134(tt, IL, M, N) -> A__U135(a__isNat(N), IL, M, N)
   A__U135(tt, IL, M, N) -> A__U136(a__isNatKind(N), IL, M, N)
   A__U136(tt, IL, M, N) -> MARK(N)
   MARK(U131(X1, X2, X3, X4)) -> MARK(X1)
   MARK(U132(X1, X2, X3, X4)) -> A__U132(mark(X1), X2, X3, X4)
   MARK(U132(X1, X2, X3, X4)) -> MARK(X1)
   MARK(U133(X1, X2, X3, X4)) -> A__U133(mark(X1), X2, X3, X4)
   MARK(U133(X1, X2, X3, X4)) -> MARK(X1)
   MARK(U134(X1, X2, X3, X4)) -> A__U134(mark(X1), X2, X3, X4)
   MARK(U134(X1, X2, X3, X4)) -> MARK(X1)
   MARK(U135(X1, X2, X3, X4)) -> A__U135(mark(X1), X2, X3, X4)
   MARK(U135(X1, X2, X3, X4)) -> MARK(X1)
   MARK(U136(X1, X2, X3, X4)) -> A__U136(mark(X1), X2, X3, X4)
   MARK(U136(X1, X2, X3, X4)) -> MARK(X1)
   MARK(take(X1, X2)) -> A__TAKE(mark(X1), mark(X2))
   A__TAKE(s(M), cons(N, IL)) -> A__U131(a__isNatIList(IL), IL, M, N)
   MARK(take(X1, X2)) -> MARK(X1)
   MARK(take(X1, X2)) -> MARK(X2)
   MARK(U21(X1, X2)) -> MARK(X1)
   MARK(U22(X1, X2)) -> MARK(X1)
   MARK(U23(X)) -> MARK(X)
   MARK(U31(X1, X2)) -> MARK(X1)
   MARK(U32(X1, X2)) -> MARK(X1)
   MARK(U33(X)) -> MARK(X)
   MARK(U41(X1, X2, X3)) -> MARK(X1)
   MARK(U42(X1, X2, X3)) -> MARK(X1)
   MARK(U43(X1, X2, X3)) -> MARK(X1)
   MARK(U44(X1, X2, X3)) -> MARK(X1)
   MARK(U45(X1, X2)) -> MARK(X1)
   MARK(U46(X)) -> MARK(X)
   MARK(U51(X1, X2)) -> MARK(X1)
   MARK(U52(X)) -> MARK(X)
   MARK(U61(X1, X2)) -> MARK(X1)
   MARK(U62(X)) -> MARK(X)
   MARK(U71(X)) -> MARK(X)
   MARK(U81(X)) -> MARK(X)
   MARK(U91(X1, X2, X3)) -> MARK(X1)
   MARK(U92(X1, X2, X3)) -> MARK(X1)
   MARK(U93(X1, X2, X3)) -> MARK(X1)
   MARK(U94(X1, X2, X3)) -> MARK(X1)
   MARK(U95(X1, X2)) -> MARK(X1)
   MARK(U96(X)) -> MARK(X)
   MARK(cons(X1, X2)) -> MARK(X1)
   MARK(s(X)) -> MARK(X)

The TRS R consists of the following rules:

   a__zeros -> cons(0, zeros)
   a__U101(tt, V1, V2) -> a__U102(a__isNatKind(V1), V1, V2)
   a__U102(tt, V1, V2) -> a__U103(a__isNatIListKind(V2), V1, V2)
   a__U103(tt, V1, V2) -> a__U104(a__isNatIListKind(V2), V1, V2)
   a__U104(tt, V1, V2) -> a__U105(a__isNat(V1), V2)
   a__U105(tt, V2) -> a__U106(a__isNatIList(V2))
   a__U106(tt) -> tt
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U111(tt, L, N) -> a__U112(a__isNatIListKind(L), L, N)
   a__U112(tt, L, N) -> a__U113(a__isNat(N), L, N)
   a__U113(tt, L, N) -> a__U114(a__isNatKind(N), L)
   a__U114(tt, L) -> s(a__length(mark(L)))
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U121(tt, IL) -> a__U122(a__isNatIListKind(IL))
   a__U122(tt) -> nil
   a__U13(tt) -> tt
   a__U131(tt, IL, M, N) -> a__U132(a__isNatIListKind(IL), IL, M, N)
   a__U132(tt, IL, M, N) -> a__U133(a__isNat(M), IL, M, N)
   a__U133(tt, IL, M, N) -> a__U134(a__isNatKind(M), IL, M, N)
   a__U134(tt, IL, M, N) -> a__U135(a__isNat(N), IL, M, N)
   a__U135(tt, IL, M, N) -> a__U136(a__isNatKind(N), IL, M, N)
   a__U136(tt, IL, M, N) -> cons(mark(N), take(M, IL))
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U23(tt) -> tt
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U33(tt) -> tt
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U46(tt) -> tt
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U52(tt) -> tt
   a__U61(tt, V2) -> a__U62(a__isNatIListKind(V2))
   a__U62(tt) -> tt
   a__U71(tt) -> tt
   a__U81(tt) -> tt
   a__U91(tt, V1, V2) -> a__U92(a__isNatKind(V1), V1, V2)
   a__U92(tt, V1, V2) -> a__U93(a__isNatIListKind(V2), V1, V2)
   a__U93(tt, V1, V2) -> a__U94(a__isNatIListKind(V2), V1, V2)
   a__U94(tt, V1, V2) -> a__U95(a__isNat(V1), V2)
   a__U95(tt, V2) -> a__U96(a__isNatList(V2))
   a__U96(tt) -> tt
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatIListKind(take(V1, V2)) -> a__U61(a__isNatKind(V1), V2)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U71(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U81(a__isNatKind(V1))
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U91(a__isNatKind(V1), V1, V2)
   a__isNatList(take(V1, V2)) -> a__U101(a__isNatKind(V1), V1, V2)
   a__length(nil) -> 0
   a__length(cons(N, L)) -> a__U111(a__isNatList(L), L, N)
   a__take(0, IL) -> a__U121(a__isNatIList(IL), IL)
   a__take(s(M), cons(N, IL)) -> a__U131(a__isNatIList(IL), IL, M, N)
   mark(zeros) -> a__zeros
   mark(U101(X1, X2, X3)) -> a__U101(mark(X1), X2, X3)
   mark(U102(X1, X2, X3)) -> a__U102(mark(X1), X2, X3)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U103(X1, X2, X3)) -> a__U103(mark(X1), X2, X3)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U104(X1, X2, X3)) -> a__U104(mark(X1), X2, X3)
   mark(U105(X1, X2)) -> a__U105(mark(X1), X2)
   mark(isNat(X)) -> a__isNat(X)
   mark(U106(X)) -> a__U106(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(U111(X1, X2, X3)) -> a__U111(mark(X1), X2, X3)
   mark(U112(X1, X2, X3)) -> a__U112(mark(X1), X2, X3)
   mark(U113(X1, X2, X3)) -> a__U113(mark(X1), X2, X3)
   mark(U114(X1, X2)) -> a__U114(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U121(X1, X2)) -> a__U121(mark(X1), X2)
   mark(U122(X)) -> a__U122(mark(X))
   mark(U131(X1, X2, X3, X4)) -> a__U131(mark(X1), X2, X3, X4)
   mark(U132(X1, X2, X3, X4)) -> a__U132(mark(X1), X2, X3, X4)
   mark(U133(X1, X2, X3, X4)) -> a__U133(mark(X1), X2, X3, X4)
   mark(U134(X1, X2, X3, X4)) -> a__U134(mark(X1), X2, X3, X4)
   mark(U135(X1, X2, X3, X4)) -> a__U135(mark(X1), X2, X3, X4)
   mark(U136(X1, X2, X3, X4)) -> a__U136(mark(X1), X2, X3, X4)
   mark(take(X1, X2)) -> a__take(mark(X1), mark(X2))
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(U23(X)) -> a__U23(mark(X))
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X1, X2)) -> a__U61(mark(X1), X2)
   mark(U62(X)) -> a__U62(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X)) -> a__U81(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2, X3)) -> a__U94(mark(X1), X2, X3)
   mark(U95(X1, X2)) -> a__U95(mark(X1), X2)
   mark(U96(X)) -> a__U96(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__zeros -> zeros
   a__U101(X1, X2, X3) -> U101(X1, X2, X3)
   a__U102(X1, X2, X3) -> U102(X1, X2, X3)
   a__isNatKind(X) -> isNatKind(X)
   a__U103(X1, X2, X3) -> U103(X1, X2, X3)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U104(X1, X2, X3) -> U104(X1, X2, X3)
   a__U105(X1, X2) -> U105(X1, X2)
   a__isNat(X) -> isNat(X)
   a__U106(X) -> U106(X)
   a__isNatIList(X) -> isNatIList(X)
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(X1, X2) -> U12(X1, X2)
   a__U111(X1, X2, X3) -> U111(X1, X2, X3)
   a__U112(X1, X2, X3) -> U112(X1, X2, X3)
   a__U113(X1, X2, X3) -> U113(X1, X2, X3)
   a__U114(X1, X2) -> U114(X1, X2)
   a__length(X) -> length(X)
   a__U13(X) -> U13(X)
   a__isNatList(X) -> isNatList(X)
   a__U121(X1, X2) -> U121(X1, X2)
   a__U122(X) -> U122(X)
   a__U131(X1, X2, X3, X4) -> U131(X1, X2, X3, X4)
   a__U132(X1, X2, X3, X4) -> U132(X1, X2, X3, X4)
   a__U133(X1, X2, X3, X4) -> U133(X1, X2, X3, X4)
   a__U134(X1, X2, X3, X4) -> U134(X1, X2, X3, X4)
   a__U135(X1, X2, X3, X4) -> U135(X1, X2, X3, X4)
   a__U136(X1, X2, X3, X4) -> U136(X1, X2, X3, X4)
   a__take(X1, X2) -> take(X1, X2)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(X1, X2) -> U22(X1, X2)
   a__U23(X) -> U23(X)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(X) -> U33(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(X) -> U46(X)
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(X) -> U52(X)
   a__U61(X1, X2) -> U61(X1, X2)
   a__U62(X) -> U62(X)
   a__U71(X) -> U71(X)
   a__U81(X) -> U81(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2, X3) -> U94(X1, X2, X3)
   a__U95(X1, X2) -> U95(X1, X2)
   a__U96(X) -> U96(X)

The set Q consists of the following terms:

   mark(isNatIListKind(x0))
   a__U136(x0, x1, x2, x3)
   mark(U22(x0, x1))
   a__U135(x0, x1, x2, x3)
   mark(U42(x0, x1, x2))
   mark(U104(x0, x1, x2))
   a__length(x0)
   mark(U106(x0))
   mark(U96(x0))
   a__take(x0, x1)
   a__U62(x0)
   mark(zeros)
   mark(U23(x0))
   mark(0)
   mark(length(x0))
   a__isNatList(x0)
   mark(U71(x0))
   a__isNatKind(x0)
   a__U134(x0, x1, x2, x3)
   mark(cons(x0, x1))
   a__U121(x0, x1)
   mark(U95(x0, x1))
   a__U122(x0)
   a__U113(x0, x1, x2)
   mark(U94(x0, x1, x2))
   a__U21(x0, x1)
   mark(U113(x0, x1, x2))
   a__U112(x0, x1, x2)
   a__U101(x0, x1, x2)
   mark(U41(x0, x1, x2))
   a__U71(x0)
   mark(U105(x0, x1))
   a__U45(x0, x1)
   a__U23(x0)
   mark(U11(x0, x1))
   mark(take(x0, x1))
   mark(U135(x0, x1, x2, x3))
   mark(U111(x0, x1, x2))
   a__U42(x0, x1, x2)
   mark(U61(x0, x1))
   mark(U112(x0, x1, x2))
   a__U22(x0, x1)
   a__U46(x0)
   mark(U12(x0, x1))
   mark(U52(x0))
   mark(nil)
   a__U133(x0, x1, x2, x3)
   a__isNat(x0)
   mark(U136(x0, x1, x2, x3))
   mark(U32(x0, x1))
   mark(U133(x0, x1, x2, x3))
   a__U114(x0, x1)
   mark(U121(x0, x1))
   mark(U46(x0))
   mark(isNatIList(x0))
   mark(U45(x0, x1))
   a__U104(x0, x1, x2)
   mark(U102(x0, x1, x2))
   a__U91(x0, x1, x2)
   a__U51(x0, x1)
   a__isNatIListKind(x0)
   a__U95(x0, x1)
   mark(tt)
   a__U103(x0, x1, x2)
   a__U11(x0, x1)
   a__U43(x0, x1, x2)
   a__U92(x0, x1, x2)
   a__isNatIList(x0)
   mark(U81(x0))
   mark(U31(x0, x1))
   a__U52(x0)
   mark(U122(x0))
   a__U31(x0, x1)
   mark(U33(x0))
   a__U94(x0, x1, x2)
   mark(U134(x0, x1, x2, x3))
   mark(isNatKind(x0))
   a__U96(x0)
   mark(U114(x0, x1))
   a__U81(x0)
   mark(U103(x0, x1, x2))
   a__U131(x0, x1, x2, x3)
   mark(isNat(x0))
   mark(isNatList(x0))
   a__U13(x0)
   a__U111(x0, x1, x2)
   a__U132(x0, x1, x2, x3)
   mark(U21(x0, x1))
   mark(U44(x0, x1, x2))
   a__U41(x0, x1, x2)
   a__U12(x0, x1)
   mark(U93(x0, x1, x2))
   a__U106(x0)
   mark(U91(x0, x1, x2))
   a__U93(x0, x1, x2)
   mark(U51(x0, x1))
   a__U61(x0, x1)
   a__U105(x0, x1)
   a__U33(x0)
   a__zeros
   mark(U101(x0, x1, x2))
   mark(U13(x0))
   mark(U131(x0, x1, x2, x3))
   mark(U43(x0, x1, x2))
   mark(s(x0))
   mark(U132(x0, x1, x2, x3))
   a__U102(x0, x1, x2)
   mark(U62(x0))
   a__U32(x0, x1)
   a__U44(x0, x1, x2)
   mark(U92(x0, x1, x2))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(20) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   MARK(U121(X1, X2)) -> MARK(X1)
   MARK(U122(X)) -> MARK(X)
   A__U133(tt, IL, M, N) -> A__U134(a__isNatKind(M), IL, M, N)
   MARK(U131(X1, X2, X3, X4)) -> MARK(X1)
   MARK(U132(X1, X2, X3, X4)) -> MARK(X1)
   MARK(U133(X1, X2, X3, X4)) -> MARK(X1)
   MARK(U134(X1, X2, X3, X4)) -> A__U134(mark(X1), X2, X3, X4)
   MARK(U134(X1, X2, X3, X4)) -> MARK(X1)
   MARK(U135(X1, X2, X3, X4)) -> A__U135(mark(X1), X2, X3, X4)
   MARK(U135(X1, X2, X3, X4)) -> MARK(X1)
   MARK(U136(X1, X2, X3, X4)) -> A__U136(mark(X1), X2, X3, X4)
   MARK(U136(X1, X2, X3, X4)) -> MARK(X1)
   MARK(take(X1, X2)) -> MARK(X1)
   MARK(take(X1, X2)) -> MARK(X2)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( A__LENGTH_1(x_1) ) = x_1
POL( A__TAKE_2(x_1, x_2) ) = x_2 + 1
POL( A__U111_3(x_1, ..., x_3) ) = x_2 + x_3
POL( A__U112_3(x_1, ..., x_3) ) = x_2
POL( A__U113_3(x_1, ..., x_3) ) = x_2
POL( A__U114_2(x_1, x_2) ) = x_2
POL( A__U131_4(x_1, ..., x_4) ) = x_2 + 2x_4 + 1
POL( A__U132_4(x_1, ..., x_4) ) = x_2 + 2x_4 + 1
POL( A__U133_4(x_1, ..., x_4) ) = 2x_4 + 1
POL( A__U134_4(x_1, ..., x_4) ) = x_4
POL( A__U135_4(x_1, ..., x_4) ) = x_4
POL( A__U136_4(x_1, ..., x_4) ) = x_4
POL( mark_1(x_1) ) = x_1
POL( zeros ) = 0
POL( a__zeros ) = 0
POL( U101_3(x_1, ..., x_3) ) = 2x_1
POL( a__U101_3(x_1, ..., x_3) ) = 2x_1
POL( U102_3(x_1, ..., x_3) ) = x_1
POL( a__U102_3(x_1, ..., x_3) ) = x_1
POL( isNatKind_1(x_1) ) = 0
POL( a__isNatKind_1(x_1) ) = 0
POL( U103_3(x_1, ..., x_3) ) = x_1
POL( a__U103_3(x_1, ..., x_3) ) = x_1
POL( isNatIListKind_1(x_1) ) = 0
POL( a__isNatIListKind_1(x_1) ) = 0
POL( U104_3(x_1, ..., x_3) ) = 2x_1
POL( a__U104_3(x_1, ..., x_3) ) = 2x_1
POL( U105_2(x_1, x_2) ) = x_1
POL( a__U105_2(x_1, x_2) ) = x_1
POL( isNat_1(x_1) ) = 0
POL( a__isNat_1(x_1) ) = 0
POL( U106_1(x_1) ) = x_1
POL( a__U106_1(x_1) ) = x_1
POL( isNatIList_1(x_1) ) = 0
POL( a__isNatIList_1(x_1) ) = 0
POL( U11_2(x_1, x_2) ) = 2x_1
POL( a__U11_2(x_1, x_2) ) = 2x_1
POL( U12_2(x_1, x_2) ) = 2x_1
POL( a__U12_2(x_1, x_2) ) = 2x_1
POL( U111_3(x_1, ..., x_3) ) = 2x_1 + x_2 + x_3
POL( a__U111_3(x_1, ..., x_3) ) = 2x_1 + x_2 + x_3
POL( U112_3(x_1, ..., x_3) ) = 2x_1 + x_2
POL( a__U112_3(x_1, ..., x_3) ) = 2x_1 + x_2
POL( U113_3(x_1, ..., x_3) ) = x_1 + x_2
POL( a__U113_3(x_1, ..., x_3) ) = x_1 + x_2
POL( U114_2(x_1, x_2) ) = x_1 + x_2
POL( a__U114_2(x_1, x_2) ) = x_1 + x_2
POL( length_1(x_1) ) = x_1
POL( a__length_1(x_1) ) = x_1
POL( U13_1(x_1) ) = x_1
POL( a__U13_1(x_1) ) = x_1
POL( isNatList_1(x_1) ) = 0
POL( a__isNatList_1(x_1) ) = 0
POL( U121_2(x_1, x_2) ) = x_1 + 1
POL( a__U121_2(x_1, x_2) ) = x_1 + 1
POL( U122_1(x_1) ) = 2x_1 + 1
POL( a__U122_1(x_1) ) = 2x_1 + 1
POL( U131_4(x_1, ..., x_4) ) = 2x_1 + x_2 + x_3 + 2x_4 + 1
POL( a__U131_4(x_1, ..., x_4) ) = 2x_1 + x_2 + x_3 + 2x_4 + 1
POL( U132_4(x_1, ..., x_4) ) = 2x_1 + x_2 + x_3 + 2x_4 + 1
POL( a__U132_4(x_1, ..., x_4) ) = 2x_1 + x_2 + x_3 + 2x_4 + 1
POL( U133_4(x_1, ..., x_4) ) = 2x_1 + x_2 + x_3 + 2x_4 + 1
POL( a__U133_4(x_1, ..., x_4) ) = 2x_1 + x_2 + x_3 + 2x_4 + 1
POL( U134_4(x_1, ..., x_4) ) = 2x_1 + x_2 + x_3 + 2x_4 + 1
POL( a__U134_4(x_1, ..., x_4) ) = 2x_1 + x_2 + x_3 + 2x_4 + 1
POL( U135_4(x_1, ..., x_4) ) = x_1 + x_2 + x_3 + 2x_4 + 1
POL( a__U135_4(x_1, ..., x_4) ) = x_1 + x_2 + x_3 + 2x_4 + 1
POL( U136_4(x_1, ..., x_4) ) = x_1 + x_2 + x_3 + 2x_4 + 1
POL( a__U136_4(x_1, ..., x_4) ) = x_1 + x_2 + x_3 + 2x_4 + 1
POL( take_2(x_1, x_2) ) = x_1 + x_2 + 1
POL( a__take_2(x_1, x_2) ) = x_1 + x_2 + 1
POL( U21_2(x_1, x_2) ) = x_1
POL( a__U21_2(x_1, x_2) ) = x_1
POL( U22_2(x_1, x_2) ) = 2x_1
POL( a__U22_2(x_1, x_2) ) = 2x_1
POL( U23_1(x_1) ) = x_1
POL( a__U23_1(x_1) ) = x_1
POL( U31_2(x_1, x_2) ) = x_1
POL( a__U31_2(x_1, x_2) ) = x_1
POL( U32_2(x_1, x_2) ) = x_1
POL( a__U32_2(x_1, x_2) ) = x_1
POL( U33_1(x_1) ) = x_1
POL( a__U33_1(x_1) ) = x_1
POL( U41_3(x_1, ..., x_3) ) = 2x_1
POL( a__U41_3(x_1, ..., x_3) ) = 2x_1
POL( U42_3(x_1, ..., x_3) ) = x_1
POL( a__U42_3(x_1, ..., x_3) ) = x_1
POL( U43_3(x_1, ..., x_3) ) = x_1
POL( a__U43_3(x_1, ..., x_3) ) = x_1
POL( U44_3(x_1, ..., x_3) ) = x_1
POL( a__U44_3(x_1, ..., x_3) ) = x_1
POL( U45_2(x_1, x_2) ) = 2x_1
POL( a__U45_2(x_1, x_2) ) = 2x_1
POL( U46_1(x_1) ) = 2x_1
POL( a__U46_1(x_1) ) = 2x_1
POL( U51_2(x_1, x_2) ) = x_1
POL( a__U51_2(x_1, x_2) ) = x_1
POL( U52_1(x_1) ) = 2x_1
POL( a__U52_1(x_1) ) = 2x_1
POL( U61_2(x_1, x_2) ) = x_1
POL( a__U61_2(x_1, x_2) ) = x_1
POL( U62_1(x_1) ) = x_1
POL( a__U62_1(x_1) ) = x_1
POL( U71_1(x_1) ) = 2x_1
POL( a__U71_1(x_1) ) = 2x_1
POL( U81_1(x_1) ) = 2x_1
POL( a__U81_1(x_1) ) = 2x_1
POL( U91_3(x_1, ..., x_3) ) = x_1
POL( a__U91_3(x_1, ..., x_3) ) = x_1
POL( U92_3(x_1, ..., x_3) ) = x_1
POL( a__U92_3(x_1, ..., x_3) ) = x_1
POL( U93_3(x_1, ..., x_3) ) = 2x_1
POL( a__U93_3(x_1, ..., x_3) ) = 2x_1
POL( U94_3(x_1, ..., x_3) ) = 2x_1
POL( a__U94_3(x_1, ..., x_3) ) = 2x_1
POL( U95_2(x_1, x_2) ) = 2x_1
POL( a__U95_2(x_1, x_2) ) = 2x_1
POL( U96_1(x_1) ) = x_1
POL( a__U96_1(x_1) ) = x_1
POL( cons_2(x_1, x_2) ) = 2x_1 + x_2
POL( 0 ) = 0
POL( tt ) = 0
POL( s_1(x_1) ) = x_1
POL( nil ) = 0
POL( MARK_1(x_1) ) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   mark(zeros) -> a__zeros
   mark(U101(X1, X2, X3)) -> a__U101(mark(X1), X2, X3)
   mark(U102(X1, X2, X3)) -> a__U102(mark(X1), X2, X3)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U103(X1, X2, X3)) -> a__U103(mark(X1), X2, X3)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U104(X1, X2, X3)) -> a__U104(mark(X1), X2, X3)
   mark(U105(X1, X2)) -> a__U105(mark(X1), X2)
   mark(isNat(X)) -> a__isNat(X)
   mark(U106(X)) -> a__U106(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(U111(X1, X2, X3)) -> a__U111(mark(X1), X2, X3)
   mark(U112(X1, X2, X3)) -> a__U112(mark(X1), X2, X3)
   mark(U113(X1, X2, X3)) -> a__U113(mark(X1), X2, X3)
   mark(U114(X1, X2)) -> a__U114(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U121(X1, X2)) -> a__U121(mark(X1), X2)
   mark(U122(X)) -> a__U122(mark(X))
   mark(U131(X1, X2, X3, X4)) -> a__U131(mark(X1), X2, X3, X4)
   mark(U132(X1, X2, X3, X4)) -> a__U132(mark(X1), X2, X3, X4)
   mark(U133(X1, X2, X3, X4)) -> a__U133(mark(X1), X2, X3, X4)
   mark(U134(X1, X2, X3, X4)) -> a__U134(mark(X1), X2, X3, X4)
   mark(U135(X1, X2, X3, X4)) -> a__U135(mark(X1), X2, X3, X4)
   mark(U136(X1, X2, X3, X4)) -> a__U136(mark(X1), X2, X3, X4)
   mark(take(X1, X2)) -> a__take(mark(X1), mark(X2))
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(U23(X)) -> a__U23(mark(X))
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X1, X2)) -> a__U61(mark(X1), X2)
   mark(U62(X)) -> a__U62(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X)) -> a__U81(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2, X3)) -> a__U94(mark(X1), X2, X3)
   mark(U95(X1, X2)) -> a__U95(mark(X1), X2)
   mark(U96(X)) -> a__U96(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatIListKind(take(V1, V2)) -> a__U61(a__isNatKind(V1), V2)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNat(X) -> isNat(X)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U71(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U81(a__isNatKind(V1))
   a__isNatKind(X) -> isNatKind(X)
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U91(a__isNatKind(V1), V1, V2)
   a__isNatList(take(V1, V2)) -> a__U101(a__isNatKind(V1), V1, V2)
   a__isNatList(X) -> isNatList(X)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIList(X) -> isNatIList(X)
   a__U101(tt, V1, V2) -> a__U102(a__isNatKind(V1), V1, V2)
   a__U101(X1, X2, X3) -> U101(X1, X2, X3)
   a__U102(tt, V1, V2) -> a__U103(a__isNatIListKind(V2), V1, V2)
   a__U102(X1, X2, X3) -> U102(X1, X2, X3)
   a__U103(tt, V1, V2) -> a__U104(a__isNatIListKind(V2), V1, V2)
   a__U103(X1, X2, X3) -> U103(X1, X2, X3)
   a__U104(tt, V1, V2) -> a__U105(a__isNat(V1), V2)
   a__U104(X1, X2, X3) -> U104(X1, X2, X3)
   a__U105(tt, V2) -> a__U106(a__isNatIList(V2))
   a__U105(X1, X2) -> U105(X1, X2)
   a__U106(tt) -> tt
   a__U106(X) -> U106(X)
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U12(X1, X2) -> U12(X1, X2)
   a__U111(X1, X2, X3) -> U111(X1, X2, X3)
   a__U112(X1, X2, X3) -> U112(X1, X2, X3)
   a__U113(X1, X2, X3) -> U113(X1, X2, X3)
   a__U114(X1, X2) -> U114(X1, X2)
   a__length(nil) -> 0
   a__length(X) -> length(X)
   a__U13(tt) -> tt
   a__U13(X) -> U13(X)
   a__U121(tt, IL) -> a__U122(a__isNatIListKind(IL))
   a__U121(X1, X2) -> U121(X1, X2)
   a__U122(tt) -> nil
   a__U122(X) -> U122(X)
   a__U131(X1, X2, X3, X4) -> U131(X1, X2, X3, X4)
   a__U132(X1, X2, X3, X4) -> U132(X1, X2, X3, X4)
   a__U133(X1, X2, X3, X4) -> U133(X1, X2, X3, X4)
   a__U134(X1, X2, X3, X4) -> U134(X1, X2, X3, X4)
   a__U135(X1, X2, X3, X4) -> U135(X1, X2, X3, X4)
   a__U136(X1, X2, X3, X4) -> U136(X1, X2, X3, X4)
   a__take(0, IL) -> a__U121(a__isNatIList(IL), IL)
   a__take(X1, X2) -> take(X1, X2)
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U22(X1, X2) -> U22(X1, X2)
   a__U23(tt) -> tt
   a__U23(X) -> U23(X)
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(tt) -> tt
   a__U33(X) -> U33(X)
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(tt) -> tt
   a__U46(X) -> U46(X)
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(tt) -> tt
   a__U52(X) -> U52(X)
   a__U61(tt, V2) -> a__U62(a__isNatIListKind(V2))
   a__U61(X1, X2) -> U61(X1, X2)
   a__U62(tt) -> tt
   a__U62(X) -> U62(X)
   a__U71(tt) -> tt
   a__U71(X) -> U71(X)
   a__U81(tt) -> tt
   a__U81(X) -> U81(X)
   a__U91(tt, V1, V2) -> a__U92(a__isNatKind(V1), V1, V2)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(tt, V1, V2) -> a__U93(a__isNatIListKind(V2), V1, V2)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(tt, V1, V2) -> a__U94(a__isNatIListKind(V2), V1, V2)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(tt, V1, V2) -> a__U95(a__isNat(V1), V2)
   a__U94(X1, X2, X3) -> U94(X1, X2, X3)
   a__U95(tt, V2) -> a__U96(a__isNatList(V2))
   a__U95(X1, X2) -> U95(X1, X2)
   a__U96(tt) -> tt
   a__U96(X) -> U96(X)
   a__take(s(M), cons(N, IL)) -> a__U131(a__isNatIList(IL), IL, M, N)
   a__U131(tt, IL, M, N) -> a__U132(a__isNatIListKind(IL), IL, M, N)
   a__U132(tt, IL, M, N) -> a__U133(a__isNat(M), IL, M, N)
   a__U133(tt, IL, M, N) -> a__U134(a__isNatKind(M), IL, M, N)
   a__U134(tt, IL, M, N) -> a__U135(a__isNat(N), IL, M, N)
   a__U135(tt, IL, M, N) -> a__U136(a__isNatKind(N), IL, M, N)
   a__U136(tt, IL, M, N) -> cons(mark(N), take(M, IL))
   a__length(cons(N, L)) -> a__U111(a__isNatList(L), L, N)
   a__U111(tt, L, N) -> a__U112(a__isNatIListKind(L), L, N)
   a__U112(tt, L, N) -> a__U113(a__isNat(N), L, N)
   a__U113(tt, L, N) -> a__U114(a__isNatKind(N), L)
   a__U114(tt, L) -> s(a__length(mark(L)))
   a__zeros -> cons(0, zeros)
   a__zeros -> zeros


----------------------------------------

(21)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(U101(X1, X2, X3)) -> MARK(X1)
   MARK(U102(X1, X2, X3)) -> MARK(X1)
   MARK(U103(X1, X2, X3)) -> MARK(X1)
   MARK(U104(X1, X2, X3)) -> MARK(X1)
   MARK(U105(X1, X2)) -> MARK(X1)
   MARK(U106(X)) -> MARK(X)
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(U12(X1, X2)) -> MARK(X1)
   MARK(U111(X1, X2, X3)) -> A__U111(mark(X1), X2, X3)
   A__U111(tt, L, N) -> A__U112(a__isNatIListKind(L), L, N)
   A__U112(tt, L, N) -> A__U113(a__isNat(N), L, N)
   A__U113(tt, L, N) -> A__U114(a__isNatKind(N), L)
   A__U114(tt, L) -> A__LENGTH(mark(L))
   A__LENGTH(cons(N, L)) -> A__U111(a__isNatList(L), L, N)
   A__U114(tt, L) -> MARK(L)
   MARK(U111(X1, X2, X3)) -> MARK(X1)
   MARK(U112(X1, X2, X3)) -> A__U112(mark(X1), X2, X3)
   MARK(U112(X1, X2, X3)) -> MARK(X1)
   MARK(U113(X1, X2, X3)) -> A__U113(mark(X1), X2, X3)
   MARK(U113(X1, X2, X3)) -> MARK(X1)
   MARK(U114(X1, X2)) -> A__U114(mark(X1), X2)
   MARK(U114(X1, X2)) -> MARK(X1)
   MARK(length(X)) -> A__LENGTH(mark(X))
   MARK(length(X)) -> MARK(X)
   MARK(U13(X)) -> MARK(X)
   MARK(U131(X1, X2, X3, X4)) -> A__U131(mark(X1), X2, X3, X4)
   A__U131(tt, IL, M, N) -> A__U132(a__isNatIListKind(IL), IL, M, N)
   A__U132(tt, IL, M, N) -> A__U133(a__isNat(M), IL, M, N)
   A__U134(tt, IL, M, N) -> A__U135(a__isNat(N), IL, M, N)
   A__U135(tt, IL, M, N) -> A__U136(a__isNatKind(N), IL, M, N)
   A__U136(tt, IL, M, N) -> MARK(N)
   MARK(U132(X1, X2, X3, X4)) -> A__U132(mark(X1), X2, X3, X4)
   MARK(U133(X1, X2, X3, X4)) -> A__U133(mark(X1), X2, X3, X4)
   MARK(take(X1, X2)) -> A__TAKE(mark(X1), mark(X2))
   A__TAKE(s(M), cons(N, IL)) -> A__U131(a__isNatIList(IL), IL, M, N)
   MARK(U21(X1, X2)) -> MARK(X1)
   MARK(U22(X1, X2)) -> MARK(X1)
   MARK(U23(X)) -> MARK(X)
   MARK(U31(X1, X2)) -> MARK(X1)
   MARK(U32(X1, X2)) -> MARK(X1)
   MARK(U33(X)) -> MARK(X)
   MARK(U41(X1, X2, X3)) -> MARK(X1)
   MARK(U42(X1, X2, X3)) -> MARK(X1)
   MARK(U43(X1, X2, X3)) -> MARK(X1)
   MARK(U44(X1, X2, X3)) -> MARK(X1)
   MARK(U45(X1, X2)) -> MARK(X1)
   MARK(U46(X)) -> MARK(X)
   MARK(U51(X1, X2)) -> MARK(X1)
   MARK(U52(X)) -> MARK(X)
   MARK(U61(X1, X2)) -> MARK(X1)
   MARK(U62(X)) -> MARK(X)
   MARK(U71(X)) -> MARK(X)
   MARK(U81(X)) -> MARK(X)
   MARK(U91(X1, X2, X3)) -> MARK(X1)
   MARK(U92(X1, X2, X3)) -> MARK(X1)
   MARK(U93(X1, X2, X3)) -> MARK(X1)
   MARK(U94(X1, X2, X3)) -> MARK(X1)
   MARK(U95(X1, X2)) -> MARK(X1)
   MARK(U96(X)) -> MARK(X)
   MARK(cons(X1, X2)) -> MARK(X1)
   MARK(s(X)) -> MARK(X)

The TRS R consists of the following rules:

   a__zeros -> cons(0, zeros)
   a__U101(tt, V1, V2) -> a__U102(a__isNatKind(V1), V1, V2)
   a__U102(tt, V1, V2) -> a__U103(a__isNatIListKind(V2), V1, V2)
   a__U103(tt, V1, V2) -> a__U104(a__isNatIListKind(V2), V1, V2)
   a__U104(tt, V1, V2) -> a__U105(a__isNat(V1), V2)
   a__U105(tt, V2) -> a__U106(a__isNatIList(V2))
   a__U106(tt) -> tt
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U111(tt, L, N) -> a__U112(a__isNatIListKind(L), L, N)
   a__U112(tt, L, N) -> a__U113(a__isNat(N), L, N)
   a__U113(tt, L, N) -> a__U114(a__isNatKind(N), L)
   a__U114(tt, L) -> s(a__length(mark(L)))
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U121(tt, IL) -> a__U122(a__isNatIListKind(IL))
   a__U122(tt) -> nil
   a__U13(tt) -> tt
   a__U131(tt, IL, M, N) -> a__U132(a__isNatIListKind(IL), IL, M, N)
   a__U132(tt, IL, M, N) -> a__U133(a__isNat(M), IL, M, N)
   a__U133(tt, IL, M, N) -> a__U134(a__isNatKind(M), IL, M, N)
   a__U134(tt, IL, M, N) -> a__U135(a__isNat(N), IL, M, N)
   a__U135(tt, IL, M, N) -> a__U136(a__isNatKind(N), IL, M, N)
   a__U136(tt, IL, M, N) -> cons(mark(N), take(M, IL))
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U23(tt) -> tt
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U33(tt) -> tt
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U46(tt) -> tt
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U52(tt) -> tt
   a__U61(tt, V2) -> a__U62(a__isNatIListKind(V2))
   a__U62(tt) -> tt
   a__U71(tt) -> tt
   a__U81(tt) -> tt
   a__U91(tt, V1, V2) -> a__U92(a__isNatKind(V1), V1, V2)
   a__U92(tt, V1, V2) -> a__U93(a__isNatIListKind(V2), V1, V2)
   a__U93(tt, V1, V2) -> a__U94(a__isNatIListKind(V2), V1, V2)
   a__U94(tt, V1, V2) -> a__U95(a__isNat(V1), V2)
   a__U95(tt, V2) -> a__U96(a__isNatList(V2))
   a__U96(tt) -> tt
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatIListKind(take(V1, V2)) -> a__U61(a__isNatKind(V1), V2)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U71(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U81(a__isNatKind(V1))
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U91(a__isNatKind(V1), V1, V2)
   a__isNatList(take(V1, V2)) -> a__U101(a__isNatKind(V1), V1, V2)
   a__length(nil) -> 0
   a__length(cons(N, L)) -> a__U111(a__isNatList(L), L, N)
   a__take(0, IL) -> a__U121(a__isNatIList(IL), IL)
   a__take(s(M), cons(N, IL)) -> a__U131(a__isNatIList(IL), IL, M, N)
   mark(zeros) -> a__zeros
   mark(U101(X1, X2, X3)) -> a__U101(mark(X1), X2, X3)
   mark(U102(X1, X2, X3)) -> a__U102(mark(X1), X2, X3)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U103(X1, X2, X3)) -> a__U103(mark(X1), X2, X3)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U104(X1, X2, X3)) -> a__U104(mark(X1), X2, X3)
   mark(U105(X1, X2)) -> a__U105(mark(X1), X2)
   mark(isNat(X)) -> a__isNat(X)
   mark(U106(X)) -> a__U106(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(U111(X1, X2, X3)) -> a__U111(mark(X1), X2, X3)
   mark(U112(X1, X2, X3)) -> a__U112(mark(X1), X2, X3)
   mark(U113(X1, X2, X3)) -> a__U113(mark(X1), X2, X3)
   mark(U114(X1, X2)) -> a__U114(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U121(X1, X2)) -> a__U121(mark(X1), X2)
   mark(U122(X)) -> a__U122(mark(X))
   mark(U131(X1, X2, X3, X4)) -> a__U131(mark(X1), X2, X3, X4)
   mark(U132(X1, X2, X3, X4)) -> a__U132(mark(X1), X2, X3, X4)
   mark(U133(X1, X2, X3, X4)) -> a__U133(mark(X1), X2, X3, X4)
   mark(U134(X1, X2, X3, X4)) -> a__U134(mark(X1), X2, X3, X4)
   mark(U135(X1, X2, X3, X4)) -> a__U135(mark(X1), X2, X3, X4)
   mark(U136(X1, X2, X3, X4)) -> a__U136(mark(X1), X2, X3, X4)
   mark(take(X1, X2)) -> a__take(mark(X1), mark(X2))
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(U23(X)) -> a__U23(mark(X))
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X1, X2)) -> a__U61(mark(X1), X2)
   mark(U62(X)) -> a__U62(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X)) -> a__U81(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2, X3)) -> a__U94(mark(X1), X2, X3)
   mark(U95(X1, X2)) -> a__U95(mark(X1), X2)
   mark(U96(X)) -> a__U96(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__zeros -> zeros
   a__U101(X1, X2, X3) -> U101(X1, X2, X3)
   a__U102(X1, X2, X3) -> U102(X1, X2, X3)
   a__isNatKind(X) -> isNatKind(X)
   a__U103(X1, X2, X3) -> U103(X1, X2, X3)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U104(X1, X2, X3) -> U104(X1, X2, X3)
   a__U105(X1, X2) -> U105(X1, X2)
   a__isNat(X) -> isNat(X)
   a__U106(X) -> U106(X)
   a__isNatIList(X) -> isNatIList(X)
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(X1, X2) -> U12(X1, X2)
   a__U111(X1, X2, X3) -> U111(X1, X2, X3)
   a__U112(X1, X2, X3) -> U112(X1, X2, X3)
   a__U113(X1, X2, X3) -> U113(X1, X2, X3)
   a__U114(X1, X2) -> U114(X1, X2)
   a__length(X) -> length(X)
   a__U13(X) -> U13(X)
   a__isNatList(X) -> isNatList(X)
   a__U121(X1, X2) -> U121(X1, X2)
   a__U122(X) -> U122(X)
   a__U131(X1, X2, X3, X4) -> U131(X1, X2, X3, X4)
   a__U132(X1, X2, X3, X4) -> U132(X1, X2, X3, X4)
   a__U133(X1, X2, X3, X4) -> U133(X1, X2, X3, X4)
   a__U134(X1, X2, X3, X4) -> U134(X1, X2, X3, X4)
   a__U135(X1, X2, X3, X4) -> U135(X1, X2, X3, X4)
   a__U136(X1, X2, X3, X4) -> U136(X1, X2, X3, X4)
   a__take(X1, X2) -> take(X1, X2)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(X1, X2) -> U22(X1, X2)
   a__U23(X) -> U23(X)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(X) -> U33(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(X) -> U46(X)
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(X) -> U52(X)
   a__U61(X1, X2) -> U61(X1, X2)
   a__U62(X) -> U62(X)
   a__U71(X) -> U71(X)
   a__U81(X) -> U81(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2, X3) -> U94(X1, X2, X3)
   a__U95(X1, X2) -> U95(X1, X2)
   a__U96(X) -> U96(X)

The set Q consists of the following terms:

   mark(isNatIListKind(x0))
   a__U136(x0, x1, x2, x3)
   mark(U22(x0, x1))
   a__U135(x0, x1, x2, x3)
   mark(U42(x0, x1, x2))
   mark(U104(x0, x1, x2))
   a__length(x0)
   mark(U106(x0))
   mark(U96(x0))
   a__take(x0, x1)
   a__U62(x0)
   mark(zeros)
   mark(U23(x0))
   mark(0)
   mark(length(x0))
   a__isNatList(x0)
   mark(U71(x0))
   a__isNatKind(x0)
   a__U134(x0, x1, x2, x3)
   mark(cons(x0, x1))
   a__U121(x0, x1)
   mark(U95(x0, x1))
   a__U122(x0)
   a__U113(x0, x1, x2)
   mark(U94(x0, x1, x2))
   a__U21(x0, x1)
   mark(U113(x0, x1, x2))
   a__U112(x0, x1, x2)
   a__U101(x0, x1, x2)
   mark(U41(x0, x1, x2))
   a__U71(x0)
   mark(U105(x0, x1))
   a__U45(x0, x1)
   a__U23(x0)
   mark(U11(x0, x1))
   mark(take(x0, x1))
   mark(U135(x0, x1, x2, x3))
   mark(U111(x0, x1, x2))
   a__U42(x0, x1, x2)
   mark(U61(x0, x1))
   mark(U112(x0, x1, x2))
   a__U22(x0, x1)
   a__U46(x0)
   mark(U12(x0, x1))
   mark(U52(x0))
   mark(nil)
   a__U133(x0, x1, x2, x3)
   a__isNat(x0)
   mark(U136(x0, x1, x2, x3))
   mark(U32(x0, x1))
   mark(U133(x0, x1, x2, x3))
   a__U114(x0, x1)
   mark(U121(x0, x1))
   mark(U46(x0))
   mark(isNatIList(x0))
   mark(U45(x0, x1))
   a__U104(x0, x1, x2)
   mark(U102(x0, x1, x2))
   a__U91(x0, x1, x2)
   a__U51(x0, x1)
   a__isNatIListKind(x0)
   a__U95(x0, x1)
   mark(tt)
   a__U103(x0, x1, x2)
   a__U11(x0, x1)
   a__U43(x0, x1, x2)
   a__U92(x0, x1, x2)
   a__isNatIList(x0)
   mark(U81(x0))
   mark(U31(x0, x1))
   a__U52(x0)
   mark(U122(x0))
   a__U31(x0, x1)
   mark(U33(x0))
   a__U94(x0, x1, x2)
   mark(U134(x0, x1, x2, x3))
   mark(isNatKind(x0))
   a__U96(x0)
   mark(U114(x0, x1))
   a__U81(x0)
   mark(U103(x0, x1, x2))
   a__U131(x0, x1, x2, x3)
   mark(isNat(x0))
   mark(isNatList(x0))
   a__U13(x0)
   a__U111(x0, x1, x2)
   a__U132(x0, x1, x2, x3)
   mark(U21(x0, x1))
   mark(U44(x0, x1, x2))
   a__U41(x0, x1, x2)
   a__U12(x0, x1)
   mark(U93(x0, x1, x2))
   a__U106(x0)
   mark(U91(x0, x1, x2))
   a__U93(x0, x1, x2)
   mark(U51(x0, x1))
   a__U61(x0, x1)
   a__U105(x0, x1)
   a__U33(x0)
   a__zeros
   mark(U101(x0, x1, x2))
   mark(U13(x0))
   mark(U131(x0, x1, x2, x3))
   mark(U43(x0, x1, x2))
   mark(s(x0))
   mark(U132(x0, x1, x2, x3))
   a__U102(x0, x1, x2)
   mark(U62(x0))
   a__U32(x0, x1)
   a__U44(x0, x1, x2)
   mark(U92(x0, x1, x2))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(22) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 10 less nodes.
----------------------------------------

(23)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(U102(X1, X2, X3)) -> MARK(X1)
   MARK(U101(X1, X2, X3)) -> MARK(X1)
   MARK(U103(X1, X2, X3)) -> MARK(X1)
   MARK(U104(X1, X2, X3)) -> MARK(X1)
   MARK(U105(X1, X2)) -> MARK(X1)
   MARK(U106(X)) -> MARK(X)
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(U12(X1, X2)) -> MARK(X1)
   MARK(U111(X1, X2, X3)) -> A__U111(mark(X1), X2, X3)
   A__U111(tt, L, N) -> A__U112(a__isNatIListKind(L), L, N)
   A__U112(tt, L, N) -> A__U113(a__isNat(N), L, N)
   A__U113(tt, L, N) -> A__U114(a__isNatKind(N), L)
   A__U114(tt, L) -> A__LENGTH(mark(L))
   A__LENGTH(cons(N, L)) -> A__U111(a__isNatList(L), L, N)
   A__U114(tt, L) -> MARK(L)
   MARK(U111(X1, X2, X3)) -> MARK(X1)
   MARK(U112(X1, X2, X3)) -> A__U112(mark(X1), X2, X3)
   MARK(U112(X1, X2, X3)) -> MARK(X1)
   MARK(U113(X1, X2, X3)) -> A__U113(mark(X1), X2, X3)
   MARK(U113(X1, X2, X3)) -> MARK(X1)
   MARK(U114(X1, X2)) -> A__U114(mark(X1), X2)
   MARK(U114(X1, X2)) -> MARK(X1)
   MARK(length(X)) -> A__LENGTH(mark(X))
   MARK(length(X)) -> MARK(X)
   MARK(U13(X)) -> MARK(X)
   MARK(U21(X1, X2)) -> MARK(X1)
   MARK(U22(X1, X2)) -> MARK(X1)
   MARK(U23(X)) -> MARK(X)
   MARK(U31(X1, X2)) -> MARK(X1)
   MARK(U32(X1, X2)) -> MARK(X1)
   MARK(U33(X)) -> MARK(X)
   MARK(U41(X1, X2, X3)) -> MARK(X1)
   MARK(U42(X1, X2, X3)) -> MARK(X1)
   MARK(U43(X1, X2, X3)) -> MARK(X1)
   MARK(U44(X1, X2, X3)) -> MARK(X1)
   MARK(U45(X1, X2)) -> MARK(X1)
   MARK(U46(X)) -> MARK(X)
   MARK(U51(X1, X2)) -> MARK(X1)
   MARK(U52(X)) -> MARK(X)
   MARK(U61(X1, X2)) -> MARK(X1)
   MARK(U62(X)) -> MARK(X)
   MARK(U71(X)) -> MARK(X)
   MARK(U81(X)) -> MARK(X)
   MARK(U91(X1, X2, X3)) -> MARK(X1)
   MARK(U92(X1, X2, X3)) -> MARK(X1)
   MARK(U93(X1, X2, X3)) -> MARK(X1)
   MARK(U94(X1, X2, X3)) -> MARK(X1)
   MARK(U95(X1, X2)) -> MARK(X1)
   MARK(U96(X)) -> MARK(X)
   MARK(cons(X1, X2)) -> MARK(X1)
   MARK(s(X)) -> MARK(X)

The TRS R consists of the following rules:

   a__zeros -> cons(0, zeros)
   a__U101(tt, V1, V2) -> a__U102(a__isNatKind(V1), V1, V2)
   a__U102(tt, V1, V2) -> a__U103(a__isNatIListKind(V2), V1, V2)
   a__U103(tt, V1, V2) -> a__U104(a__isNatIListKind(V2), V1, V2)
   a__U104(tt, V1, V2) -> a__U105(a__isNat(V1), V2)
   a__U105(tt, V2) -> a__U106(a__isNatIList(V2))
   a__U106(tt) -> tt
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U111(tt, L, N) -> a__U112(a__isNatIListKind(L), L, N)
   a__U112(tt, L, N) -> a__U113(a__isNat(N), L, N)
   a__U113(tt, L, N) -> a__U114(a__isNatKind(N), L)
   a__U114(tt, L) -> s(a__length(mark(L)))
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U121(tt, IL) -> a__U122(a__isNatIListKind(IL))
   a__U122(tt) -> nil
   a__U13(tt) -> tt
   a__U131(tt, IL, M, N) -> a__U132(a__isNatIListKind(IL), IL, M, N)
   a__U132(tt, IL, M, N) -> a__U133(a__isNat(M), IL, M, N)
   a__U133(tt, IL, M, N) -> a__U134(a__isNatKind(M), IL, M, N)
   a__U134(tt, IL, M, N) -> a__U135(a__isNat(N), IL, M, N)
   a__U135(tt, IL, M, N) -> a__U136(a__isNatKind(N), IL, M, N)
   a__U136(tt, IL, M, N) -> cons(mark(N), take(M, IL))
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U23(tt) -> tt
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U33(tt) -> tt
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U46(tt) -> tt
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U52(tt) -> tt
   a__U61(tt, V2) -> a__U62(a__isNatIListKind(V2))
   a__U62(tt) -> tt
   a__U71(tt) -> tt
   a__U81(tt) -> tt
   a__U91(tt, V1, V2) -> a__U92(a__isNatKind(V1), V1, V2)
   a__U92(tt, V1, V2) -> a__U93(a__isNatIListKind(V2), V1, V2)
   a__U93(tt, V1, V2) -> a__U94(a__isNatIListKind(V2), V1, V2)
   a__U94(tt, V1, V2) -> a__U95(a__isNat(V1), V2)
   a__U95(tt, V2) -> a__U96(a__isNatList(V2))
   a__U96(tt) -> tt
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatIListKind(take(V1, V2)) -> a__U61(a__isNatKind(V1), V2)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U71(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U81(a__isNatKind(V1))
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U91(a__isNatKind(V1), V1, V2)
   a__isNatList(take(V1, V2)) -> a__U101(a__isNatKind(V1), V1, V2)
   a__length(nil) -> 0
   a__length(cons(N, L)) -> a__U111(a__isNatList(L), L, N)
   a__take(0, IL) -> a__U121(a__isNatIList(IL), IL)
   a__take(s(M), cons(N, IL)) -> a__U131(a__isNatIList(IL), IL, M, N)
   mark(zeros) -> a__zeros
   mark(U101(X1, X2, X3)) -> a__U101(mark(X1), X2, X3)
   mark(U102(X1, X2, X3)) -> a__U102(mark(X1), X2, X3)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U103(X1, X2, X3)) -> a__U103(mark(X1), X2, X3)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U104(X1, X2, X3)) -> a__U104(mark(X1), X2, X3)
   mark(U105(X1, X2)) -> a__U105(mark(X1), X2)
   mark(isNat(X)) -> a__isNat(X)
   mark(U106(X)) -> a__U106(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(U111(X1, X2, X3)) -> a__U111(mark(X1), X2, X3)
   mark(U112(X1, X2, X3)) -> a__U112(mark(X1), X2, X3)
   mark(U113(X1, X2, X3)) -> a__U113(mark(X1), X2, X3)
   mark(U114(X1, X2)) -> a__U114(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U121(X1, X2)) -> a__U121(mark(X1), X2)
   mark(U122(X)) -> a__U122(mark(X))
   mark(U131(X1, X2, X3, X4)) -> a__U131(mark(X1), X2, X3, X4)
   mark(U132(X1, X2, X3, X4)) -> a__U132(mark(X1), X2, X3, X4)
   mark(U133(X1, X2, X3, X4)) -> a__U133(mark(X1), X2, X3, X4)
   mark(U134(X1, X2, X3, X4)) -> a__U134(mark(X1), X2, X3, X4)
   mark(U135(X1, X2, X3, X4)) -> a__U135(mark(X1), X2, X3, X4)
   mark(U136(X1, X2, X3, X4)) -> a__U136(mark(X1), X2, X3, X4)
   mark(take(X1, X2)) -> a__take(mark(X1), mark(X2))
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(U23(X)) -> a__U23(mark(X))
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X1, X2)) -> a__U61(mark(X1), X2)
   mark(U62(X)) -> a__U62(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X)) -> a__U81(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2, X3)) -> a__U94(mark(X1), X2, X3)
   mark(U95(X1, X2)) -> a__U95(mark(X1), X2)
   mark(U96(X)) -> a__U96(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__zeros -> zeros
   a__U101(X1, X2, X3) -> U101(X1, X2, X3)
   a__U102(X1, X2, X3) -> U102(X1, X2, X3)
   a__isNatKind(X) -> isNatKind(X)
   a__U103(X1, X2, X3) -> U103(X1, X2, X3)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U104(X1, X2, X3) -> U104(X1, X2, X3)
   a__U105(X1, X2) -> U105(X1, X2)
   a__isNat(X) -> isNat(X)
   a__U106(X) -> U106(X)
   a__isNatIList(X) -> isNatIList(X)
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(X1, X2) -> U12(X1, X2)
   a__U111(X1, X2, X3) -> U111(X1, X2, X3)
   a__U112(X1, X2, X3) -> U112(X1, X2, X3)
   a__U113(X1, X2, X3) -> U113(X1, X2, X3)
   a__U114(X1, X2) -> U114(X1, X2)
   a__length(X) -> length(X)
   a__U13(X) -> U13(X)
   a__isNatList(X) -> isNatList(X)
   a__U121(X1, X2) -> U121(X1, X2)
   a__U122(X) -> U122(X)
   a__U131(X1, X2, X3, X4) -> U131(X1, X2, X3, X4)
   a__U132(X1, X2, X3, X4) -> U132(X1, X2, X3, X4)
   a__U133(X1, X2, X3, X4) -> U133(X1, X2, X3, X4)
   a__U134(X1, X2, X3, X4) -> U134(X1, X2, X3, X4)
   a__U135(X1, X2, X3, X4) -> U135(X1, X2, X3, X4)
   a__U136(X1, X2, X3, X4) -> U136(X1, X2, X3, X4)
   a__take(X1, X2) -> take(X1, X2)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(X1, X2) -> U22(X1, X2)
   a__U23(X) -> U23(X)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(X) -> U33(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(X) -> U46(X)
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(X) -> U52(X)
   a__U61(X1, X2) -> U61(X1, X2)
   a__U62(X) -> U62(X)
   a__U71(X) -> U71(X)
   a__U81(X) -> U81(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2, X3) -> U94(X1, X2, X3)
   a__U95(X1, X2) -> U95(X1, X2)
   a__U96(X) -> U96(X)

The set Q consists of the following terms:

   mark(isNatIListKind(x0))
   a__U136(x0, x1, x2, x3)
   mark(U22(x0, x1))
   a__U135(x0, x1, x2, x3)
   mark(U42(x0, x1, x2))
   mark(U104(x0, x1, x2))
   a__length(x0)
   mark(U106(x0))
   mark(U96(x0))
   a__take(x0, x1)
   a__U62(x0)
   mark(zeros)
   mark(U23(x0))
   mark(0)
   mark(length(x0))
   a__isNatList(x0)
   mark(U71(x0))
   a__isNatKind(x0)
   a__U134(x0, x1, x2, x3)
   mark(cons(x0, x1))
   a__U121(x0, x1)
   mark(U95(x0, x1))
   a__U122(x0)
   a__U113(x0, x1, x2)
   mark(U94(x0, x1, x2))
   a__U21(x0, x1)
   mark(U113(x0, x1, x2))
   a__U112(x0, x1, x2)
   a__U101(x0, x1, x2)
   mark(U41(x0, x1, x2))
   a__U71(x0)
   mark(U105(x0, x1))
   a__U45(x0, x1)
   a__U23(x0)
   mark(U11(x0, x1))
   mark(take(x0, x1))
   mark(U135(x0, x1, x2, x3))
   mark(U111(x0, x1, x2))
   a__U42(x0, x1, x2)
   mark(U61(x0, x1))
   mark(U112(x0, x1, x2))
   a__U22(x0, x1)
   a__U46(x0)
   mark(U12(x0, x1))
   mark(U52(x0))
   mark(nil)
   a__U133(x0, x1, x2, x3)
   a__isNat(x0)
   mark(U136(x0, x1, x2, x3))
   mark(U32(x0, x1))
   mark(U133(x0, x1, x2, x3))
   a__U114(x0, x1)
   mark(U121(x0, x1))
   mark(U46(x0))
   mark(isNatIList(x0))
   mark(U45(x0, x1))
   a__U104(x0, x1, x2)
   mark(U102(x0, x1, x2))
   a__U91(x0, x1, x2)
   a__U51(x0, x1)
   a__isNatIListKind(x0)
   a__U95(x0, x1)
   mark(tt)
   a__U103(x0, x1, x2)
   a__U11(x0, x1)
   a__U43(x0, x1, x2)
   a__U92(x0, x1, x2)
   a__isNatIList(x0)
   mark(U81(x0))
   mark(U31(x0, x1))
   a__U52(x0)
   mark(U122(x0))
   a__U31(x0, x1)
   mark(U33(x0))
   a__U94(x0, x1, x2)
   mark(U134(x0, x1, x2, x3))
   mark(isNatKind(x0))
   a__U96(x0)
   mark(U114(x0, x1))
   a__U81(x0)
   mark(U103(x0, x1, x2))
   a__U131(x0, x1, x2, x3)
   mark(isNat(x0))
   mark(isNatList(x0))
   a__U13(x0)
   a__U111(x0, x1, x2)
   a__U132(x0, x1, x2, x3)
   mark(U21(x0, x1))
   mark(U44(x0, x1, x2))
   a__U41(x0, x1, x2)
   a__U12(x0, x1)
   mark(U93(x0, x1, x2))
   a__U106(x0)
   mark(U91(x0, x1, x2))
   a__U93(x0, x1, x2)
   mark(U51(x0, x1))
   a__U61(x0, x1)
   a__U105(x0, x1)
   a__U33(x0)
   a__zeros
   mark(U101(x0, x1, x2))
   mark(U13(x0))
   mark(U131(x0, x1, x2, x3))
   mark(U43(x0, x1, x2))
   mark(s(x0))
   mark(U132(x0, x1, x2, x3))
   a__U102(x0, x1, x2)
   mark(U62(x0))
   a__U32(x0, x1)
   a__U44(x0, x1, x2)
   mark(U92(x0, x1, x2))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(24) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   MARK(U111(X1, X2, X3)) -> A__U111(mark(X1), X2, X3)
   MARK(U111(X1, X2, X3)) -> MARK(X1)
   MARK(U112(X1, X2, X3)) -> A__U112(mark(X1), X2, X3)
   MARK(U112(X1, X2, X3)) -> MARK(X1)
   MARK(U113(X1, X2, X3)) -> A__U113(mark(X1), X2, X3)
   MARK(U113(X1, X2, X3)) -> MARK(X1)
   MARK(U114(X1, X2)) -> A__U114(mark(X1), X2)
   MARK(U114(X1, X2)) -> MARK(X1)
   MARK(length(X)) -> A__LENGTH(mark(X))
   MARK(length(X)) -> MARK(X)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( A__LENGTH_1(x_1) ) = x_1
POL( A__U111_3(x_1, ..., x_3) ) = x_2 + 2x_3
POL( A__U112_3(x_1, ..., x_3) ) = x_2
POL( A__U113_3(x_1, ..., x_3) ) = x_2
POL( A__U114_2(x_1, x_2) ) = x_2
POL( mark_1(x_1) ) = x_1
POL( zeros ) = 0
POL( a__zeros ) = 0
POL( U101_3(x_1, ..., x_3) ) = x_1
POL( a__U101_3(x_1, ..., x_3) ) = x_1
POL( U102_3(x_1, ..., x_3) ) = x_1
POL( a__U102_3(x_1, ..., x_3) ) = x_1
POL( isNatKind_1(x_1) ) = 0
POL( a__isNatKind_1(x_1) ) = 0
POL( U103_3(x_1, ..., x_3) ) = 2x_1
POL( a__U103_3(x_1, ..., x_3) ) = 2x_1
POL( isNatIListKind_1(x_1) ) = 0
POL( a__isNatIListKind_1(x_1) ) = 0
POL( U104_3(x_1, ..., x_3) ) = 2x_1
POL( a__U104_3(x_1, ..., x_3) ) = 2x_1
POL( U105_2(x_1, x_2) ) = 2x_1
POL( a__U105_2(x_1, x_2) ) = 2x_1
POL( isNat_1(x_1) ) = 0
POL( a__isNat_1(x_1) ) = 0
POL( U106_1(x_1) ) = 2x_1
POL( a__U106_1(x_1) ) = 2x_1
POL( isNatIList_1(x_1) ) = 0
POL( a__isNatIList_1(x_1) ) = 0
POL( U11_2(x_1, x_2) ) = x_1
POL( a__U11_2(x_1, x_2) ) = x_1
POL( U12_2(x_1, x_2) ) = x_1
POL( a__U12_2(x_1, x_2) ) = x_1
POL( U111_3(x_1, ..., x_3) ) = 2x_1 + x_2 + 2x_3 + 2
POL( a__U111_3(x_1, ..., x_3) ) = 2x_1 + x_2 + 2x_3 + 2
POL( U112_3(x_1, ..., x_3) ) = x_1 + x_2 + x_3 + 2
POL( a__U112_3(x_1, ..., x_3) ) = x_1 + x_2 + x_3 + 2
POL( U113_3(x_1, ..., x_3) ) = x_1 + x_2 + x_3 + 2
POL( a__U113_3(x_1, ..., x_3) ) = x_1 + x_2 + x_3 + 2
POL( U114_2(x_1, x_2) ) = x_1 + x_2 + 2
POL( a__U114_2(x_1, x_2) ) = x_1 + x_2 + 2
POL( length_1(x_1) ) = x_1 + 2
POL( a__length_1(x_1) ) = x_1 + 2
POL( U13_1(x_1) ) = 2x_1
POL( a__U13_1(x_1) ) = 2x_1
POL( isNatList_1(x_1) ) = 0
POL( a__isNatList_1(x_1) ) = 0
POL( U121_2(x_1, x_2) ) = 0
POL( a__U121_2(x_1, x_2) ) = max{0, -2}
POL( U122_1(x_1) ) = 0
POL( a__U122_1(x_1) ) = max{0, -2}
POL( U131_4(x_1, ..., x_4) ) = x_2 + 2x_4 + 2
POL( a__U131_4(x_1, ..., x_4) ) = x_2 + 2x_4 + 2
POL( U132_4(x_1, ..., x_4) ) = x_2 + 2x_4 + 2
POL( a__U132_4(x_1, ..., x_4) ) = x_2 + 2x_4 + 2
POL( U133_4(x_1, ..., x_4) ) = x_2 + 2x_4 + 2
POL( a__U133_4(x_1, ..., x_4) ) = x_2 + 2x_4 + 2
POL( U134_4(x_1, ..., x_4) ) = x_2 + 2x_4 + 2
POL( a__U134_4(x_1, ..., x_4) ) = x_2 + 2x_4 + 2
POL( U135_4(x_1, ..., x_4) ) = x_2 + 2x_4 + 2
POL( a__U135_4(x_1, ..., x_4) ) = x_2 + 2x_4 + 2
POL( U136_4(x_1, ..., x_4) ) = x_2 + 2x_4 + 2
POL( a__U136_4(x_1, ..., x_4) ) = x_2 + 2x_4 + 2
POL( take_2(x_1, x_2) ) = x_2 + 2
POL( a__take_2(x_1, x_2) ) = x_2 + 2
POL( U21_2(x_1, x_2) ) = x_1
POL( a__U21_2(x_1, x_2) ) = x_1
POL( U22_2(x_1, x_2) ) = 2x_1
POL( a__U22_2(x_1, x_2) ) = 2x_1
POL( U23_1(x_1) ) = 2x_1
POL( a__U23_1(x_1) ) = 2x_1
POL( U31_2(x_1, x_2) ) = x_1
POL( a__U31_2(x_1, x_2) ) = x_1
POL( U32_2(x_1, x_2) ) = 2x_1
POL( a__U32_2(x_1, x_2) ) = 2x_1
POL( U33_1(x_1) ) = 2x_1
POL( a__U33_1(x_1) ) = 2x_1
POL( U41_3(x_1, ..., x_3) ) = x_1
POL( a__U41_3(x_1, ..., x_3) ) = x_1
POL( U42_3(x_1, ..., x_3) ) = x_1
POL( a__U42_3(x_1, ..., x_3) ) = x_1
POL( U43_3(x_1, ..., x_3) ) = 2x_1
POL( a__U43_3(x_1, ..., x_3) ) = 2x_1
POL( U44_3(x_1, ..., x_3) ) = 2x_1
POL( a__U44_3(x_1, ..., x_3) ) = 2x_1
POL( U45_2(x_1, x_2) ) = x_1
POL( a__U45_2(x_1, x_2) ) = x_1
POL( U46_1(x_1) ) = 2x_1
POL( a__U46_1(x_1) ) = 2x_1
POL( U51_2(x_1, x_2) ) = x_1
POL( a__U51_2(x_1, x_2) ) = x_1
POL( U52_1(x_1) ) = 2x_1
POL( a__U52_1(x_1) ) = 2x_1
POL( U61_2(x_1, x_2) ) = 2x_1
POL( a__U61_2(x_1, x_2) ) = 2x_1
POL( U62_1(x_1) ) = x_1
POL( a__U62_1(x_1) ) = x_1
POL( U71_1(x_1) ) = x_1
POL( a__U71_1(x_1) ) = x_1
POL( U81_1(x_1) ) = 2x_1
POL( a__U81_1(x_1) ) = 2x_1
POL( U91_3(x_1, ..., x_3) ) = 2x_1
POL( a__U91_3(x_1, ..., x_3) ) = 2x_1
POL( U92_3(x_1, ..., x_3) ) = 2x_1
POL( a__U92_3(x_1, ..., x_3) ) = 2x_1
POL( U93_3(x_1, ..., x_3) ) = x_1
POL( a__U93_3(x_1, ..., x_3) ) = x_1
POL( U94_3(x_1, ..., x_3) ) = x_1
POL( a__U94_3(x_1, ..., x_3) ) = x_1
POL( U95_2(x_1, x_2) ) = 2x_1
POL( a__U95_2(x_1, x_2) ) = 2x_1
POL( U96_1(x_1) ) = 2x_1
POL( a__U96_1(x_1) ) = 2x_1
POL( cons_2(x_1, x_2) ) = 2x_1 + x_2
POL( 0 ) = 0
POL( tt ) = 0
POL( s_1(x_1) ) = x_1
POL( nil ) = 0
POL( MARK_1(x_1) ) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   mark(zeros) -> a__zeros
   mark(U101(X1, X2, X3)) -> a__U101(mark(X1), X2, X3)
   mark(U102(X1, X2, X3)) -> a__U102(mark(X1), X2, X3)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U103(X1, X2, X3)) -> a__U103(mark(X1), X2, X3)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U104(X1, X2, X3)) -> a__U104(mark(X1), X2, X3)
   mark(U105(X1, X2)) -> a__U105(mark(X1), X2)
   mark(isNat(X)) -> a__isNat(X)
   mark(U106(X)) -> a__U106(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(U111(X1, X2, X3)) -> a__U111(mark(X1), X2, X3)
   mark(U112(X1, X2, X3)) -> a__U112(mark(X1), X2, X3)
   mark(U113(X1, X2, X3)) -> a__U113(mark(X1), X2, X3)
   mark(U114(X1, X2)) -> a__U114(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U121(X1, X2)) -> a__U121(mark(X1), X2)
   mark(U122(X)) -> a__U122(mark(X))
   mark(U131(X1, X2, X3, X4)) -> a__U131(mark(X1), X2, X3, X4)
   mark(U132(X1, X2, X3, X4)) -> a__U132(mark(X1), X2, X3, X4)
   mark(U133(X1, X2, X3, X4)) -> a__U133(mark(X1), X2, X3, X4)
   mark(U134(X1, X2, X3, X4)) -> a__U134(mark(X1), X2, X3, X4)
   mark(U135(X1, X2, X3, X4)) -> a__U135(mark(X1), X2, X3, X4)
   mark(U136(X1, X2, X3, X4)) -> a__U136(mark(X1), X2, X3, X4)
   mark(take(X1, X2)) -> a__take(mark(X1), mark(X2))
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(U23(X)) -> a__U23(mark(X))
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X1, X2)) -> a__U61(mark(X1), X2)
   mark(U62(X)) -> a__U62(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X)) -> a__U81(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2, X3)) -> a__U94(mark(X1), X2, X3)
   mark(U95(X1, X2)) -> a__U95(mark(X1), X2)
   mark(U96(X)) -> a__U96(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatIListKind(take(V1, V2)) -> a__U61(a__isNatKind(V1), V2)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNat(X) -> isNat(X)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U71(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U81(a__isNatKind(V1))
   a__isNatKind(X) -> isNatKind(X)
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U91(a__isNatKind(V1), V1, V2)
   a__isNatList(take(V1, V2)) -> a__U101(a__isNatKind(V1), V1, V2)
   a__isNatList(X) -> isNatList(X)
   a__U101(tt, V1, V2) -> a__U102(a__isNatKind(V1), V1, V2)
   a__U101(X1, X2, X3) -> U101(X1, X2, X3)
   a__U102(tt, V1, V2) -> a__U103(a__isNatIListKind(V2), V1, V2)
   a__U102(X1, X2, X3) -> U102(X1, X2, X3)
   a__U103(tt, V1, V2) -> a__U104(a__isNatIListKind(V2), V1, V2)
   a__U103(X1, X2, X3) -> U103(X1, X2, X3)
   a__U104(tt, V1, V2) -> a__U105(a__isNat(V1), V2)
   a__U104(X1, X2, X3) -> U104(X1, X2, X3)
   a__U105(tt, V2) -> a__U106(a__isNatIList(V2))
   a__U105(X1, X2) -> U105(X1, X2)
   a__U106(tt) -> tt
   a__U106(X) -> U106(X)
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U12(X1, X2) -> U12(X1, X2)
   a__U111(X1, X2, X3) -> U111(X1, X2, X3)
   a__U112(X1, X2, X3) -> U112(X1, X2, X3)
   a__U113(X1, X2, X3) -> U113(X1, X2, X3)
   a__U114(X1, X2) -> U114(X1, X2)
   a__length(nil) -> 0
   a__length(X) -> length(X)
   a__U13(tt) -> tt
   a__U13(X) -> U13(X)
   a__U121(tt, IL) -> a__U122(a__isNatIListKind(IL))
   a__U121(X1, X2) -> U121(X1, X2)
   a__U122(tt) -> nil
   a__U122(X) -> U122(X)
   a__U131(X1, X2, X3, X4) -> U131(X1, X2, X3, X4)
   a__U132(X1, X2, X3, X4) -> U132(X1, X2, X3, X4)
   a__U133(X1, X2, X3, X4) -> U133(X1, X2, X3, X4)
   a__U134(X1, X2, X3, X4) -> U134(X1, X2, X3, X4)
   a__U135(X1, X2, X3, X4) -> U135(X1, X2, X3, X4)
   a__U136(X1, X2, X3, X4) -> U136(X1, X2, X3, X4)
   a__take(0, IL) -> a__U121(a__isNatIList(IL), IL)
   a__take(X1, X2) -> take(X1, X2)
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U22(X1, X2) -> U22(X1, X2)
   a__U23(tt) -> tt
   a__U23(X) -> U23(X)
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(tt) -> tt
   a__U33(X) -> U33(X)
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(tt) -> tt
   a__U46(X) -> U46(X)
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(tt) -> tt
   a__U52(X) -> U52(X)
   a__U61(tt, V2) -> a__U62(a__isNatIListKind(V2))
   a__U61(X1, X2) -> U61(X1, X2)
   a__U62(tt) -> tt
   a__U62(X) -> U62(X)
   a__U71(tt) -> tt
   a__U71(X) -> U71(X)
   a__U81(tt) -> tt
   a__U81(X) -> U81(X)
   a__U91(tt, V1, V2) -> a__U92(a__isNatKind(V1), V1, V2)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(tt, V1, V2) -> a__U93(a__isNatIListKind(V2), V1, V2)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(tt, V1, V2) -> a__U94(a__isNatIListKind(V2), V1, V2)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(tt, V1, V2) -> a__U95(a__isNat(V1), V2)
   a__U94(X1, X2, X3) -> U94(X1, X2, X3)
   a__U95(tt, V2) -> a__U96(a__isNatList(V2))
   a__U95(X1, X2) -> U95(X1, X2)
   a__U96(tt) -> tt
   a__U96(X) -> U96(X)
   a__take(s(M), cons(N, IL)) -> a__U131(a__isNatIList(IL), IL, M, N)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIList(X) -> isNatIList(X)
   a__U131(tt, IL, M, N) -> a__U132(a__isNatIListKind(IL), IL, M, N)
   a__U132(tt, IL, M, N) -> a__U133(a__isNat(M), IL, M, N)
   a__U133(tt, IL, M, N) -> a__U134(a__isNatKind(M), IL, M, N)
   a__U134(tt, IL, M, N) -> a__U135(a__isNat(N), IL, M, N)
   a__U135(tt, IL, M, N) -> a__U136(a__isNatKind(N), IL, M, N)
   a__U136(tt, IL, M, N) -> cons(mark(N), take(M, IL))
   a__length(cons(N, L)) -> a__U111(a__isNatList(L), L, N)
   a__U111(tt, L, N) -> a__U112(a__isNatIListKind(L), L, N)
   a__U112(tt, L, N) -> a__U113(a__isNat(N), L, N)
   a__U113(tt, L, N) -> a__U114(a__isNatKind(N), L)
   a__U114(tt, L) -> s(a__length(mark(L)))
   a__zeros -> cons(0, zeros)
   a__zeros -> zeros


----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(U102(X1, X2, X3)) -> MARK(X1)
   MARK(U101(X1, X2, X3)) -> MARK(X1)
   MARK(U103(X1, X2, X3)) -> MARK(X1)
   MARK(U104(X1, X2, X3)) -> MARK(X1)
   MARK(U105(X1, X2)) -> MARK(X1)
   MARK(U106(X)) -> MARK(X)
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(U12(X1, X2)) -> MARK(X1)
   A__U111(tt, L, N) -> A__U112(a__isNatIListKind(L), L, N)
   A__U112(tt, L, N) -> A__U113(a__isNat(N), L, N)
   A__U113(tt, L, N) -> A__U114(a__isNatKind(N), L)
   A__U114(tt, L) -> A__LENGTH(mark(L))
   A__LENGTH(cons(N, L)) -> A__U111(a__isNatList(L), L, N)
   A__U114(tt, L) -> MARK(L)
   MARK(U13(X)) -> MARK(X)
   MARK(U21(X1, X2)) -> MARK(X1)
   MARK(U22(X1, X2)) -> MARK(X1)
   MARK(U23(X)) -> MARK(X)
   MARK(U31(X1, X2)) -> MARK(X1)
   MARK(U32(X1, X2)) -> MARK(X1)
   MARK(U33(X)) -> MARK(X)
   MARK(U41(X1, X2, X3)) -> MARK(X1)
   MARK(U42(X1, X2, X3)) -> MARK(X1)
   MARK(U43(X1, X2, X3)) -> MARK(X1)
   MARK(U44(X1, X2, X3)) -> MARK(X1)
   MARK(U45(X1, X2)) -> MARK(X1)
   MARK(U46(X)) -> MARK(X)
   MARK(U51(X1, X2)) -> MARK(X1)
   MARK(U52(X)) -> MARK(X)
   MARK(U61(X1, X2)) -> MARK(X1)
   MARK(U62(X)) -> MARK(X)
   MARK(U71(X)) -> MARK(X)
   MARK(U81(X)) -> MARK(X)
   MARK(U91(X1, X2, X3)) -> MARK(X1)
   MARK(U92(X1, X2, X3)) -> MARK(X1)
   MARK(U93(X1, X2, X3)) -> MARK(X1)
   MARK(U94(X1, X2, X3)) -> MARK(X1)
   MARK(U95(X1, X2)) -> MARK(X1)
   MARK(U96(X)) -> MARK(X)
   MARK(cons(X1, X2)) -> MARK(X1)
   MARK(s(X)) -> MARK(X)

The TRS R consists of the following rules:

   a__zeros -> cons(0, zeros)
   a__U101(tt, V1, V2) -> a__U102(a__isNatKind(V1), V1, V2)
   a__U102(tt, V1, V2) -> a__U103(a__isNatIListKind(V2), V1, V2)
   a__U103(tt, V1, V2) -> a__U104(a__isNatIListKind(V2), V1, V2)
   a__U104(tt, V1, V2) -> a__U105(a__isNat(V1), V2)
   a__U105(tt, V2) -> a__U106(a__isNatIList(V2))
   a__U106(tt) -> tt
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U111(tt, L, N) -> a__U112(a__isNatIListKind(L), L, N)
   a__U112(tt, L, N) -> a__U113(a__isNat(N), L, N)
   a__U113(tt, L, N) -> a__U114(a__isNatKind(N), L)
   a__U114(tt, L) -> s(a__length(mark(L)))
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U121(tt, IL) -> a__U122(a__isNatIListKind(IL))
   a__U122(tt) -> nil
   a__U13(tt) -> tt
   a__U131(tt, IL, M, N) -> a__U132(a__isNatIListKind(IL), IL, M, N)
   a__U132(tt, IL, M, N) -> a__U133(a__isNat(M), IL, M, N)
   a__U133(tt, IL, M, N) -> a__U134(a__isNatKind(M), IL, M, N)
   a__U134(tt, IL, M, N) -> a__U135(a__isNat(N), IL, M, N)
   a__U135(tt, IL, M, N) -> a__U136(a__isNatKind(N), IL, M, N)
   a__U136(tt, IL, M, N) -> cons(mark(N), take(M, IL))
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U23(tt) -> tt
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U33(tt) -> tt
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U46(tt) -> tt
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U52(tt) -> tt
   a__U61(tt, V2) -> a__U62(a__isNatIListKind(V2))
   a__U62(tt) -> tt
   a__U71(tt) -> tt
   a__U81(tt) -> tt
   a__U91(tt, V1, V2) -> a__U92(a__isNatKind(V1), V1, V2)
   a__U92(tt, V1, V2) -> a__U93(a__isNatIListKind(V2), V1, V2)
   a__U93(tt, V1, V2) -> a__U94(a__isNatIListKind(V2), V1, V2)
   a__U94(tt, V1, V2) -> a__U95(a__isNat(V1), V2)
   a__U95(tt, V2) -> a__U96(a__isNatList(V2))
   a__U96(tt) -> tt
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatIListKind(take(V1, V2)) -> a__U61(a__isNatKind(V1), V2)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U71(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U81(a__isNatKind(V1))
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U91(a__isNatKind(V1), V1, V2)
   a__isNatList(take(V1, V2)) -> a__U101(a__isNatKind(V1), V1, V2)
   a__length(nil) -> 0
   a__length(cons(N, L)) -> a__U111(a__isNatList(L), L, N)
   a__take(0, IL) -> a__U121(a__isNatIList(IL), IL)
   a__take(s(M), cons(N, IL)) -> a__U131(a__isNatIList(IL), IL, M, N)
   mark(zeros) -> a__zeros
   mark(U101(X1, X2, X3)) -> a__U101(mark(X1), X2, X3)
   mark(U102(X1, X2, X3)) -> a__U102(mark(X1), X2, X3)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U103(X1, X2, X3)) -> a__U103(mark(X1), X2, X3)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U104(X1, X2, X3)) -> a__U104(mark(X1), X2, X3)
   mark(U105(X1, X2)) -> a__U105(mark(X1), X2)
   mark(isNat(X)) -> a__isNat(X)
   mark(U106(X)) -> a__U106(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(U111(X1, X2, X3)) -> a__U111(mark(X1), X2, X3)
   mark(U112(X1, X2, X3)) -> a__U112(mark(X1), X2, X3)
   mark(U113(X1, X2, X3)) -> a__U113(mark(X1), X2, X3)
   mark(U114(X1, X2)) -> a__U114(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U121(X1, X2)) -> a__U121(mark(X1), X2)
   mark(U122(X)) -> a__U122(mark(X))
   mark(U131(X1, X2, X3, X4)) -> a__U131(mark(X1), X2, X3, X4)
   mark(U132(X1, X2, X3, X4)) -> a__U132(mark(X1), X2, X3, X4)
   mark(U133(X1, X2, X3, X4)) -> a__U133(mark(X1), X2, X3, X4)
   mark(U134(X1, X2, X3, X4)) -> a__U134(mark(X1), X2, X3, X4)
   mark(U135(X1, X2, X3, X4)) -> a__U135(mark(X1), X2, X3, X4)
   mark(U136(X1, X2, X3, X4)) -> a__U136(mark(X1), X2, X3, X4)
   mark(take(X1, X2)) -> a__take(mark(X1), mark(X2))
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(U23(X)) -> a__U23(mark(X))
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X1, X2)) -> a__U61(mark(X1), X2)
   mark(U62(X)) -> a__U62(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X)) -> a__U81(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2, X3)) -> a__U94(mark(X1), X2, X3)
   mark(U95(X1, X2)) -> a__U95(mark(X1), X2)
   mark(U96(X)) -> a__U96(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__zeros -> zeros
   a__U101(X1, X2, X3) -> U101(X1, X2, X3)
   a__U102(X1, X2, X3) -> U102(X1, X2, X3)
   a__isNatKind(X) -> isNatKind(X)
   a__U103(X1, X2, X3) -> U103(X1, X2, X3)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U104(X1, X2, X3) -> U104(X1, X2, X3)
   a__U105(X1, X2) -> U105(X1, X2)
   a__isNat(X) -> isNat(X)
   a__U106(X) -> U106(X)
   a__isNatIList(X) -> isNatIList(X)
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(X1, X2) -> U12(X1, X2)
   a__U111(X1, X2, X3) -> U111(X1, X2, X3)
   a__U112(X1, X2, X3) -> U112(X1, X2, X3)
   a__U113(X1, X2, X3) -> U113(X1, X2, X3)
   a__U114(X1, X2) -> U114(X1, X2)
   a__length(X) -> length(X)
   a__U13(X) -> U13(X)
   a__isNatList(X) -> isNatList(X)
   a__U121(X1, X2) -> U121(X1, X2)
   a__U122(X) -> U122(X)
   a__U131(X1, X2, X3, X4) -> U131(X1, X2, X3, X4)
   a__U132(X1, X2, X3, X4) -> U132(X1, X2, X3, X4)
   a__U133(X1, X2, X3, X4) -> U133(X1, X2, X3, X4)
   a__U134(X1, X2, X3, X4) -> U134(X1, X2, X3, X4)
   a__U135(X1, X2, X3, X4) -> U135(X1, X2, X3, X4)
   a__U136(X1, X2, X3, X4) -> U136(X1, X2, X3, X4)
   a__take(X1, X2) -> take(X1, X2)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(X1, X2) -> U22(X1, X2)
   a__U23(X) -> U23(X)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(X) -> U33(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(X) -> U46(X)
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(X) -> U52(X)
   a__U61(X1, X2) -> U61(X1, X2)
   a__U62(X) -> U62(X)
   a__U71(X) -> U71(X)
   a__U81(X) -> U81(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2, X3) -> U94(X1, X2, X3)
   a__U95(X1, X2) -> U95(X1, X2)
   a__U96(X) -> U96(X)

The set Q consists of the following terms:

   mark(isNatIListKind(x0))
   a__U136(x0, x1, x2, x3)
   mark(U22(x0, x1))
   a__U135(x0, x1, x2, x3)
   mark(U42(x0, x1, x2))
   mark(U104(x0, x1, x2))
   a__length(x0)
   mark(U106(x0))
   mark(U96(x0))
   a__take(x0, x1)
   a__U62(x0)
   mark(zeros)
   mark(U23(x0))
   mark(0)
   mark(length(x0))
   a__isNatList(x0)
   mark(U71(x0))
   a__isNatKind(x0)
   a__U134(x0, x1, x2, x3)
   mark(cons(x0, x1))
   a__U121(x0, x1)
   mark(U95(x0, x1))
   a__U122(x0)
   a__U113(x0, x1, x2)
   mark(U94(x0, x1, x2))
   a__U21(x0, x1)
   mark(U113(x0, x1, x2))
   a__U112(x0, x1, x2)
   a__U101(x0, x1, x2)
   mark(U41(x0, x1, x2))
   a__U71(x0)
   mark(U105(x0, x1))
   a__U45(x0, x1)
   a__U23(x0)
   mark(U11(x0, x1))
   mark(take(x0, x1))
   mark(U135(x0, x1, x2, x3))
   mark(U111(x0, x1, x2))
   a__U42(x0, x1, x2)
   mark(U61(x0, x1))
   mark(U112(x0, x1, x2))
   a__U22(x0, x1)
   a__U46(x0)
   mark(U12(x0, x1))
   mark(U52(x0))
   mark(nil)
   a__U133(x0, x1, x2, x3)
   a__isNat(x0)
   mark(U136(x0, x1, x2, x3))
   mark(U32(x0, x1))
   mark(U133(x0, x1, x2, x3))
   a__U114(x0, x1)
   mark(U121(x0, x1))
   mark(U46(x0))
   mark(isNatIList(x0))
   mark(U45(x0, x1))
   a__U104(x0, x1, x2)
   mark(U102(x0, x1, x2))
   a__U91(x0, x1, x2)
   a__U51(x0, x1)
   a__isNatIListKind(x0)
   a__U95(x0, x1)
   mark(tt)
   a__U103(x0, x1, x2)
   a__U11(x0, x1)
   a__U43(x0, x1, x2)
   a__U92(x0, x1, x2)
   a__isNatIList(x0)
   mark(U81(x0))
   mark(U31(x0, x1))
   a__U52(x0)
   mark(U122(x0))
   a__U31(x0, x1)
   mark(U33(x0))
   a__U94(x0, x1, x2)
   mark(U134(x0, x1, x2, x3))
   mark(isNatKind(x0))
   a__U96(x0)
   mark(U114(x0, x1))
   a__U81(x0)
   mark(U103(x0, x1, x2))
   a__U131(x0, x1, x2, x3)
   mark(isNat(x0))
   mark(isNatList(x0))
   a__U13(x0)
   a__U111(x0, x1, x2)
   a__U132(x0, x1, x2, x3)
   mark(U21(x0, x1))
   mark(U44(x0, x1, x2))
   a__U41(x0, x1, x2)
   a__U12(x0, x1)
   mark(U93(x0, x1, x2))
   a__U106(x0)
   mark(U91(x0, x1, x2))
   a__U93(x0, x1, x2)
   mark(U51(x0, x1))
   a__U61(x0, x1)
   a__U105(x0, x1)
   a__U33(x0)
   a__zeros
   mark(U101(x0, x1, x2))
   mark(U13(x0))
   mark(U131(x0, x1, x2, x3))
   mark(U43(x0, x1, x2))
   mark(s(x0))
   mark(U132(x0, x1, x2, x3))
   a__U102(x0, x1, x2)
   mark(U62(x0))
   a__U32(x0, x1)
   a__U44(x0, x1, x2)
   mark(U92(x0, x1, x2))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(26) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 1 less node.
----------------------------------------

(27)
Complex Obligation (AND)

----------------------------------------

(28)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(U101(X1, X2, X3)) -> MARK(X1)
   MARK(U102(X1, X2, X3)) -> MARK(X1)
   MARK(U103(X1, X2, X3)) -> MARK(X1)
   MARK(U104(X1, X2, X3)) -> MARK(X1)
   MARK(U105(X1, X2)) -> MARK(X1)
   MARK(U106(X)) -> MARK(X)
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(U12(X1, X2)) -> MARK(X1)
   MARK(U13(X)) -> MARK(X)
   MARK(U21(X1, X2)) -> MARK(X1)
   MARK(U22(X1, X2)) -> MARK(X1)
   MARK(U23(X)) -> MARK(X)
   MARK(U31(X1, X2)) -> MARK(X1)
   MARK(U32(X1, X2)) -> MARK(X1)
   MARK(U33(X)) -> MARK(X)
   MARK(U41(X1, X2, X3)) -> MARK(X1)
   MARK(U42(X1, X2, X3)) -> MARK(X1)
   MARK(U43(X1, X2, X3)) -> MARK(X1)
   MARK(U44(X1, X2, X3)) -> MARK(X1)
   MARK(U45(X1, X2)) -> MARK(X1)
   MARK(U46(X)) -> MARK(X)
   MARK(U51(X1, X2)) -> MARK(X1)
   MARK(U52(X)) -> MARK(X)
   MARK(U61(X1, X2)) -> MARK(X1)
   MARK(U62(X)) -> MARK(X)
   MARK(U71(X)) -> MARK(X)
   MARK(U81(X)) -> MARK(X)
   MARK(U91(X1, X2, X3)) -> MARK(X1)
   MARK(U92(X1, X2, X3)) -> MARK(X1)
   MARK(U93(X1, X2, X3)) -> MARK(X1)
   MARK(U94(X1, X2, X3)) -> MARK(X1)
   MARK(U95(X1, X2)) -> MARK(X1)
   MARK(U96(X)) -> MARK(X)
   MARK(cons(X1, X2)) -> MARK(X1)
   MARK(s(X)) -> MARK(X)

The TRS R consists of the following rules:

   a__zeros -> cons(0, zeros)
   a__U101(tt, V1, V2) -> a__U102(a__isNatKind(V1), V1, V2)
   a__U102(tt, V1, V2) -> a__U103(a__isNatIListKind(V2), V1, V2)
   a__U103(tt, V1, V2) -> a__U104(a__isNatIListKind(V2), V1, V2)
   a__U104(tt, V1, V2) -> a__U105(a__isNat(V1), V2)
   a__U105(tt, V2) -> a__U106(a__isNatIList(V2))
   a__U106(tt) -> tt
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U111(tt, L, N) -> a__U112(a__isNatIListKind(L), L, N)
   a__U112(tt, L, N) -> a__U113(a__isNat(N), L, N)
   a__U113(tt, L, N) -> a__U114(a__isNatKind(N), L)
   a__U114(tt, L) -> s(a__length(mark(L)))
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U121(tt, IL) -> a__U122(a__isNatIListKind(IL))
   a__U122(tt) -> nil
   a__U13(tt) -> tt
   a__U131(tt, IL, M, N) -> a__U132(a__isNatIListKind(IL), IL, M, N)
   a__U132(tt, IL, M, N) -> a__U133(a__isNat(M), IL, M, N)
   a__U133(tt, IL, M, N) -> a__U134(a__isNatKind(M), IL, M, N)
   a__U134(tt, IL, M, N) -> a__U135(a__isNat(N), IL, M, N)
   a__U135(tt, IL, M, N) -> a__U136(a__isNatKind(N), IL, M, N)
   a__U136(tt, IL, M, N) -> cons(mark(N), take(M, IL))
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U23(tt) -> tt
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U33(tt) -> tt
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U46(tt) -> tt
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U52(tt) -> tt
   a__U61(tt, V2) -> a__U62(a__isNatIListKind(V2))
   a__U62(tt) -> tt
   a__U71(tt) -> tt
   a__U81(tt) -> tt
   a__U91(tt, V1, V2) -> a__U92(a__isNatKind(V1), V1, V2)
   a__U92(tt, V1, V2) -> a__U93(a__isNatIListKind(V2), V1, V2)
   a__U93(tt, V1, V2) -> a__U94(a__isNatIListKind(V2), V1, V2)
   a__U94(tt, V1, V2) -> a__U95(a__isNat(V1), V2)
   a__U95(tt, V2) -> a__U96(a__isNatList(V2))
   a__U96(tt) -> tt
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatIListKind(take(V1, V2)) -> a__U61(a__isNatKind(V1), V2)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U71(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U81(a__isNatKind(V1))
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U91(a__isNatKind(V1), V1, V2)
   a__isNatList(take(V1, V2)) -> a__U101(a__isNatKind(V1), V1, V2)
   a__length(nil) -> 0
   a__length(cons(N, L)) -> a__U111(a__isNatList(L), L, N)
   a__take(0, IL) -> a__U121(a__isNatIList(IL), IL)
   a__take(s(M), cons(N, IL)) -> a__U131(a__isNatIList(IL), IL, M, N)
   mark(zeros) -> a__zeros
   mark(U101(X1, X2, X3)) -> a__U101(mark(X1), X2, X3)
   mark(U102(X1, X2, X3)) -> a__U102(mark(X1), X2, X3)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U103(X1, X2, X3)) -> a__U103(mark(X1), X2, X3)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U104(X1, X2, X3)) -> a__U104(mark(X1), X2, X3)
   mark(U105(X1, X2)) -> a__U105(mark(X1), X2)
   mark(isNat(X)) -> a__isNat(X)
   mark(U106(X)) -> a__U106(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(U111(X1, X2, X3)) -> a__U111(mark(X1), X2, X3)
   mark(U112(X1, X2, X3)) -> a__U112(mark(X1), X2, X3)
   mark(U113(X1, X2, X3)) -> a__U113(mark(X1), X2, X3)
   mark(U114(X1, X2)) -> a__U114(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U121(X1, X2)) -> a__U121(mark(X1), X2)
   mark(U122(X)) -> a__U122(mark(X))
   mark(U131(X1, X2, X3, X4)) -> a__U131(mark(X1), X2, X3, X4)
   mark(U132(X1, X2, X3, X4)) -> a__U132(mark(X1), X2, X3, X4)
   mark(U133(X1, X2, X3, X4)) -> a__U133(mark(X1), X2, X3, X4)
   mark(U134(X1, X2, X3, X4)) -> a__U134(mark(X1), X2, X3, X4)
   mark(U135(X1, X2, X3, X4)) -> a__U135(mark(X1), X2, X3, X4)
   mark(U136(X1, X2, X3, X4)) -> a__U136(mark(X1), X2, X3, X4)
   mark(take(X1, X2)) -> a__take(mark(X1), mark(X2))
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(U23(X)) -> a__U23(mark(X))
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X1, X2)) -> a__U61(mark(X1), X2)
   mark(U62(X)) -> a__U62(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X)) -> a__U81(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2, X3)) -> a__U94(mark(X1), X2, X3)
   mark(U95(X1, X2)) -> a__U95(mark(X1), X2)
   mark(U96(X)) -> a__U96(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__zeros -> zeros
   a__U101(X1, X2, X3) -> U101(X1, X2, X3)
   a__U102(X1, X2, X3) -> U102(X1, X2, X3)
   a__isNatKind(X) -> isNatKind(X)
   a__U103(X1, X2, X3) -> U103(X1, X2, X3)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U104(X1, X2, X3) -> U104(X1, X2, X3)
   a__U105(X1, X2) -> U105(X1, X2)
   a__isNat(X) -> isNat(X)
   a__U106(X) -> U106(X)
   a__isNatIList(X) -> isNatIList(X)
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(X1, X2) -> U12(X1, X2)
   a__U111(X1, X2, X3) -> U111(X1, X2, X3)
   a__U112(X1, X2, X3) -> U112(X1, X2, X3)
   a__U113(X1, X2, X3) -> U113(X1, X2, X3)
   a__U114(X1, X2) -> U114(X1, X2)
   a__length(X) -> length(X)
   a__U13(X) -> U13(X)
   a__isNatList(X) -> isNatList(X)
   a__U121(X1, X2) -> U121(X1, X2)
   a__U122(X) -> U122(X)
   a__U131(X1, X2, X3, X4) -> U131(X1, X2, X3, X4)
   a__U132(X1, X2, X3, X4) -> U132(X1, X2, X3, X4)
   a__U133(X1, X2, X3, X4) -> U133(X1, X2, X3, X4)
   a__U134(X1, X2, X3, X4) -> U134(X1, X2, X3, X4)
   a__U135(X1, X2, X3, X4) -> U135(X1, X2, X3, X4)
   a__U136(X1, X2, X3, X4) -> U136(X1, X2, X3, X4)
   a__take(X1, X2) -> take(X1, X2)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(X1, X2) -> U22(X1, X2)
   a__U23(X) -> U23(X)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(X) -> U33(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(X) -> U46(X)
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(X) -> U52(X)
   a__U61(X1, X2) -> U61(X1, X2)
   a__U62(X) -> U62(X)
   a__U71(X) -> U71(X)
   a__U81(X) -> U81(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2, X3) -> U94(X1, X2, X3)
   a__U95(X1, X2) -> U95(X1, X2)
   a__U96(X) -> U96(X)

The set Q consists of the following terms:

   mark(isNatIListKind(x0))
   a__U136(x0, x1, x2, x3)
   mark(U22(x0, x1))
   a__U135(x0, x1, x2, x3)
   mark(U42(x0, x1, x2))
   mark(U104(x0, x1, x2))
   a__length(x0)
   mark(U106(x0))
   mark(U96(x0))
   a__take(x0, x1)
   a__U62(x0)
   mark(zeros)
   mark(U23(x0))
   mark(0)
   mark(length(x0))
   a__isNatList(x0)
   mark(U71(x0))
   a__isNatKind(x0)
   a__U134(x0, x1, x2, x3)
   mark(cons(x0, x1))
   a__U121(x0, x1)
   mark(U95(x0, x1))
   a__U122(x0)
   a__U113(x0, x1, x2)
   mark(U94(x0, x1, x2))
   a__U21(x0, x1)
   mark(U113(x0, x1, x2))
   a__U112(x0, x1, x2)
   a__U101(x0, x1, x2)
   mark(U41(x0, x1, x2))
   a__U71(x0)
   mark(U105(x0, x1))
   a__U45(x0, x1)
   a__U23(x0)
   mark(U11(x0, x1))
   mark(take(x0, x1))
   mark(U135(x0, x1, x2, x3))
   mark(U111(x0, x1, x2))
   a__U42(x0, x1, x2)
   mark(U61(x0, x1))
   mark(U112(x0, x1, x2))
   a__U22(x0, x1)
   a__U46(x0)
   mark(U12(x0, x1))
   mark(U52(x0))
   mark(nil)
   a__U133(x0, x1, x2, x3)
   a__isNat(x0)
   mark(U136(x0, x1, x2, x3))
   mark(U32(x0, x1))
   mark(U133(x0, x1, x2, x3))
   a__U114(x0, x1)
   mark(U121(x0, x1))
   mark(U46(x0))
   mark(isNatIList(x0))
   mark(U45(x0, x1))
   a__U104(x0, x1, x2)
   mark(U102(x0, x1, x2))
   a__U91(x0, x1, x2)
   a__U51(x0, x1)
   a__isNatIListKind(x0)
   a__U95(x0, x1)
   mark(tt)
   a__U103(x0, x1, x2)
   a__U11(x0, x1)
   a__U43(x0, x1, x2)
   a__U92(x0, x1, x2)
   a__isNatIList(x0)
   mark(U81(x0))
   mark(U31(x0, x1))
   a__U52(x0)
   mark(U122(x0))
   a__U31(x0, x1)
   mark(U33(x0))
   a__U94(x0, x1, x2)
   mark(U134(x0, x1, x2, x3))
   mark(isNatKind(x0))
   a__U96(x0)
   mark(U114(x0, x1))
   a__U81(x0)
   mark(U103(x0, x1, x2))
   a__U131(x0, x1, x2, x3)
   mark(isNat(x0))
   mark(isNatList(x0))
   a__U13(x0)
   a__U111(x0, x1, x2)
   a__U132(x0, x1, x2, x3)
   mark(U21(x0, x1))
   mark(U44(x0, x1, x2))
   a__U41(x0, x1, x2)
   a__U12(x0, x1)
   mark(U93(x0, x1, x2))
   a__U106(x0)
   mark(U91(x0, x1, x2))
   a__U93(x0, x1, x2)
   mark(U51(x0, x1))
   a__U61(x0, x1)
   a__U105(x0, x1)
   a__U33(x0)
   a__zeros
   mark(U101(x0, x1, x2))
   mark(U13(x0))
   mark(U131(x0, x1, x2, x3))
   mark(U43(x0, x1, x2))
   mark(s(x0))
   mark(U132(x0, x1, x2, x3))
   a__U102(x0, x1, x2)
   mark(U62(x0))
   a__U32(x0, x1)
   a__U44(x0, x1, x2)
   mark(U92(x0, x1, x2))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(29) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(30)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(U101(X1, X2, X3)) -> MARK(X1)
   MARK(U102(X1, X2, X3)) -> MARK(X1)
   MARK(U103(X1, X2, X3)) -> MARK(X1)
   MARK(U104(X1, X2, X3)) -> MARK(X1)
   MARK(U105(X1, X2)) -> MARK(X1)
   MARK(U106(X)) -> MARK(X)
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(U12(X1, X2)) -> MARK(X1)
   MARK(U13(X)) -> MARK(X)
   MARK(U21(X1, X2)) -> MARK(X1)
   MARK(U22(X1, X2)) -> MARK(X1)
   MARK(U23(X)) -> MARK(X)
   MARK(U31(X1, X2)) -> MARK(X1)
   MARK(U32(X1, X2)) -> MARK(X1)
   MARK(U33(X)) -> MARK(X)
   MARK(U41(X1, X2, X3)) -> MARK(X1)
   MARK(U42(X1, X2, X3)) -> MARK(X1)
   MARK(U43(X1, X2, X3)) -> MARK(X1)
   MARK(U44(X1, X2, X3)) -> MARK(X1)
   MARK(U45(X1, X2)) -> MARK(X1)
   MARK(U46(X)) -> MARK(X)
   MARK(U51(X1, X2)) -> MARK(X1)
   MARK(U52(X)) -> MARK(X)
   MARK(U61(X1, X2)) -> MARK(X1)
   MARK(U62(X)) -> MARK(X)
   MARK(U71(X)) -> MARK(X)
   MARK(U81(X)) -> MARK(X)
   MARK(U91(X1, X2, X3)) -> MARK(X1)
   MARK(U92(X1, X2, X3)) -> MARK(X1)
   MARK(U93(X1, X2, X3)) -> MARK(X1)
   MARK(U94(X1, X2, X3)) -> MARK(X1)
   MARK(U95(X1, X2)) -> MARK(X1)
   MARK(U96(X)) -> MARK(X)
   MARK(cons(X1, X2)) -> MARK(X1)
   MARK(s(X)) -> MARK(X)

R is empty.
The set Q consists of the following terms:

   mark(isNatIListKind(x0))
   a__U136(x0, x1, x2, x3)
   mark(U22(x0, x1))
   a__U135(x0, x1, x2, x3)
   mark(U42(x0, x1, x2))
   mark(U104(x0, x1, x2))
   a__length(x0)
   mark(U106(x0))
   mark(U96(x0))
   a__take(x0, x1)
   a__U62(x0)
   mark(zeros)
   mark(U23(x0))
   mark(0)
   mark(length(x0))
   a__isNatList(x0)
   mark(U71(x0))
   a__isNatKind(x0)
   a__U134(x0, x1, x2, x3)
   mark(cons(x0, x1))
   a__U121(x0, x1)
   mark(U95(x0, x1))
   a__U122(x0)
   a__U113(x0, x1, x2)
   mark(U94(x0, x1, x2))
   a__U21(x0, x1)
   mark(U113(x0, x1, x2))
   a__U112(x0, x1, x2)
   a__U101(x0, x1, x2)
   mark(U41(x0, x1, x2))
   a__U71(x0)
   mark(U105(x0, x1))
   a__U45(x0, x1)
   a__U23(x0)
   mark(U11(x0, x1))
   mark(take(x0, x1))
   mark(U135(x0, x1, x2, x3))
   mark(U111(x0, x1, x2))
   a__U42(x0, x1, x2)
   mark(U61(x0, x1))
   mark(U112(x0, x1, x2))
   a__U22(x0, x1)
   a__U46(x0)
   mark(U12(x0, x1))
   mark(U52(x0))
   mark(nil)
   a__U133(x0, x1, x2, x3)
   a__isNat(x0)
   mark(U136(x0, x1, x2, x3))
   mark(U32(x0, x1))
   mark(U133(x0, x1, x2, x3))
   a__U114(x0, x1)
   mark(U121(x0, x1))
   mark(U46(x0))
   mark(isNatIList(x0))
   mark(U45(x0, x1))
   a__U104(x0, x1, x2)
   mark(U102(x0, x1, x2))
   a__U91(x0, x1, x2)
   a__U51(x0, x1)
   a__isNatIListKind(x0)
   a__U95(x0, x1)
   mark(tt)
   a__U103(x0, x1, x2)
   a__U11(x0, x1)
   a__U43(x0, x1, x2)
   a__U92(x0, x1, x2)
   a__isNatIList(x0)
   mark(U81(x0))
   mark(U31(x0, x1))
   a__U52(x0)
   mark(U122(x0))
   a__U31(x0, x1)
   mark(U33(x0))
   a__U94(x0, x1, x2)
   mark(U134(x0, x1, x2, x3))
   mark(isNatKind(x0))
   a__U96(x0)
   mark(U114(x0, x1))
   a__U81(x0)
   mark(U103(x0, x1, x2))
   a__U131(x0, x1, x2, x3)
   mark(isNat(x0))
   mark(isNatList(x0))
   a__U13(x0)
   a__U111(x0, x1, x2)
   a__U132(x0, x1, x2, x3)
   mark(U21(x0, x1))
   mark(U44(x0, x1, x2))
   a__U41(x0, x1, x2)
   a__U12(x0, x1)
   mark(U93(x0, x1, x2))
   a__U106(x0)
   mark(U91(x0, x1, x2))
   a__U93(x0, x1, x2)
   mark(U51(x0, x1))
   a__U61(x0, x1)
   a__U105(x0, x1)
   a__U33(x0)
   a__zeros
   mark(U101(x0, x1, x2))
   mark(U13(x0))
   mark(U131(x0, x1, x2, x3))
   mark(U43(x0, x1, x2))
   mark(s(x0))
   mark(U132(x0, x1, x2, x3))
   a__U102(x0, x1, x2)
   mark(U62(x0))
   a__U32(x0, x1)
   a__U44(x0, x1, x2)
   mark(U92(x0, x1, x2))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(31) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   mark(isNatIListKind(x0))
   a__U136(x0, x1, x2, x3)
   mark(U22(x0, x1))
   a__U135(x0, x1, x2, x3)
   mark(U42(x0, x1, x2))
   mark(U104(x0, x1, x2))
   a__length(x0)
   mark(U106(x0))
   mark(U96(x0))
   a__take(x0, x1)
   a__U62(x0)
   mark(zeros)
   mark(U23(x0))
   mark(0)
   mark(length(x0))
   a__isNatList(x0)
   mark(U71(x0))
   a__isNatKind(x0)
   a__U134(x0, x1, x2, x3)
   mark(cons(x0, x1))
   a__U121(x0, x1)
   mark(U95(x0, x1))
   a__U122(x0)
   a__U113(x0, x1, x2)
   mark(U94(x0, x1, x2))
   a__U21(x0, x1)
   mark(U113(x0, x1, x2))
   a__U112(x0, x1, x2)
   a__U101(x0, x1, x2)
   mark(U41(x0, x1, x2))
   a__U71(x0)
   mark(U105(x0, x1))
   a__U45(x0, x1)
   a__U23(x0)
   mark(U11(x0, x1))
   mark(take(x0, x1))
   mark(U135(x0, x1, x2, x3))
   mark(U111(x0, x1, x2))
   a__U42(x0, x1, x2)
   mark(U61(x0, x1))
   mark(U112(x0, x1, x2))
   a__U22(x0, x1)
   a__U46(x0)
   mark(U12(x0, x1))
   mark(U52(x0))
   mark(nil)
   a__U133(x0, x1, x2, x3)
   a__isNat(x0)
   mark(U136(x0, x1, x2, x3))
   mark(U32(x0, x1))
   mark(U133(x0, x1, x2, x3))
   a__U114(x0, x1)
   mark(U121(x0, x1))
   mark(U46(x0))
   mark(isNatIList(x0))
   mark(U45(x0, x1))
   a__U104(x0, x1, x2)
   mark(U102(x0, x1, x2))
   a__U91(x0, x1, x2)
   a__U51(x0, x1)
   a__isNatIListKind(x0)
   a__U95(x0, x1)
   mark(tt)
   a__U103(x0, x1, x2)
   a__U11(x0, x1)
   a__U43(x0, x1, x2)
   a__U92(x0, x1, x2)
   a__isNatIList(x0)
   mark(U81(x0))
   mark(U31(x0, x1))
   a__U52(x0)
   mark(U122(x0))
   a__U31(x0, x1)
   mark(U33(x0))
   a__U94(x0, x1, x2)
   mark(U134(x0, x1, x2, x3))
   mark(isNatKind(x0))
   a__U96(x0)
   mark(U114(x0, x1))
   a__U81(x0)
   mark(U103(x0, x1, x2))
   a__U131(x0, x1, x2, x3)
   mark(isNat(x0))
   mark(isNatList(x0))
   a__U13(x0)
   a__U111(x0, x1, x2)
   a__U132(x0, x1, x2, x3)
   mark(U21(x0, x1))
   mark(U44(x0, x1, x2))
   a__U41(x0, x1, x2)
   a__U12(x0, x1)
   mark(U93(x0, x1, x2))
   a__U106(x0)
   mark(U91(x0, x1, x2))
   a__U93(x0, x1, x2)
   mark(U51(x0, x1))
   a__U61(x0, x1)
   a__U105(x0, x1)
   a__U33(x0)
   a__zeros
   mark(U101(x0, x1, x2))
   mark(U13(x0))
   mark(U131(x0, x1, x2, x3))
   mark(U43(x0, x1, x2))
   mark(s(x0))
   mark(U132(x0, x1, x2, x3))
   a__U102(x0, x1, x2)
   mark(U62(x0))
   a__U32(x0, x1)
   a__U44(x0, x1, x2)
   mark(U92(x0, x1, x2))


----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(U101(X1, X2, X3)) -> MARK(X1)
   MARK(U102(X1, X2, X3)) -> MARK(X1)
   MARK(U103(X1, X2, X3)) -> MARK(X1)
   MARK(U104(X1, X2, X3)) -> MARK(X1)
   MARK(U105(X1, X2)) -> MARK(X1)
   MARK(U106(X)) -> MARK(X)
   MARK(U11(X1, X2)) -> MARK(X1)
   MARK(U12(X1, X2)) -> MARK(X1)
   MARK(U13(X)) -> MARK(X)
   MARK(U21(X1, X2)) -> MARK(X1)
   MARK(U22(X1, X2)) -> MARK(X1)
   MARK(U23(X)) -> MARK(X)
   MARK(U31(X1, X2)) -> MARK(X1)
   MARK(U32(X1, X2)) -> MARK(X1)
   MARK(U33(X)) -> MARK(X)
   MARK(U41(X1, X2, X3)) -> MARK(X1)
   MARK(U42(X1, X2, X3)) -> MARK(X1)
   MARK(U43(X1, X2, X3)) -> MARK(X1)
   MARK(U44(X1, X2, X3)) -> MARK(X1)
   MARK(U45(X1, X2)) -> MARK(X1)
   MARK(U46(X)) -> MARK(X)
   MARK(U51(X1, X2)) -> MARK(X1)
   MARK(U52(X)) -> MARK(X)
   MARK(U61(X1, X2)) -> MARK(X1)
   MARK(U62(X)) -> MARK(X)
   MARK(U71(X)) -> MARK(X)
   MARK(U81(X)) -> MARK(X)
   MARK(U91(X1, X2, X3)) -> MARK(X1)
   MARK(U92(X1, X2, X3)) -> MARK(X1)
   MARK(U93(X1, X2, X3)) -> MARK(X1)
   MARK(U94(X1, X2, X3)) -> MARK(X1)
   MARK(U95(X1, X2)) -> MARK(X1)
   MARK(U96(X)) -> MARK(X)
   MARK(cons(X1, X2)) -> MARK(X1)
   MARK(s(X)) -> MARK(X)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(33) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MARK(U101(X1, X2, X3)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U102(X1, X2, X3)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U103(X1, X2, X3)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U104(X1, X2, X3)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U105(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U106(X)) -> MARK(X)
The graph contains the following edges 1 > 1


*MARK(U11(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U12(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U13(X)) -> MARK(X)
The graph contains the following edges 1 > 1


*MARK(U21(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U22(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U23(X)) -> MARK(X)
The graph contains the following edges 1 > 1


*MARK(U31(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U32(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U33(X)) -> MARK(X)
The graph contains the following edges 1 > 1


*MARK(U41(X1, X2, X3)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U42(X1, X2, X3)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U43(X1, X2, X3)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U44(X1, X2, X3)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U45(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U46(X)) -> MARK(X)
The graph contains the following edges 1 > 1


*MARK(U51(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U52(X)) -> MARK(X)
The graph contains the following edges 1 > 1


*MARK(U61(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U62(X)) -> MARK(X)
The graph contains the following edges 1 > 1


*MARK(U71(X)) -> MARK(X)
The graph contains the following edges 1 > 1


*MARK(U81(X)) -> MARK(X)
The graph contains the following edges 1 > 1


*MARK(U91(X1, X2, X3)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U92(X1, X2, X3)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U93(X1, X2, X3)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U94(X1, X2, X3)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U95(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(U96(X)) -> MARK(X)
The graph contains the following edges 1 > 1


*MARK(cons(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


*MARK(s(X)) -> MARK(X)
The graph contains the following edges 1 > 1


----------------------------------------

(34)
YES

----------------------------------------

(35)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__U114(tt, L) -> A__LENGTH(mark(L))
   A__LENGTH(cons(N, L)) -> A__U111(a__isNatList(L), L, N)
   A__U111(tt, L, N) -> A__U112(a__isNatIListKind(L), L, N)
   A__U112(tt, L, N) -> A__U113(a__isNat(N), L, N)
   A__U113(tt, L, N) -> A__U114(a__isNatKind(N), L)

The TRS R consists of the following rules:

   a__zeros -> cons(0, zeros)
   a__U101(tt, V1, V2) -> a__U102(a__isNatKind(V1), V1, V2)
   a__U102(tt, V1, V2) -> a__U103(a__isNatIListKind(V2), V1, V2)
   a__U103(tt, V1, V2) -> a__U104(a__isNatIListKind(V2), V1, V2)
   a__U104(tt, V1, V2) -> a__U105(a__isNat(V1), V2)
   a__U105(tt, V2) -> a__U106(a__isNatIList(V2))
   a__U106(tt) -> tt
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U111(tt, L, N) -> a__U112(a__isNatIListKind(L), L, N)
   a__U112(tt, L, N) -> a__U113(a__isNat(N), L, N)
   a__U113(tt, L, N) -> a__U114(a__isNatKind(N), L)
   a__U114(tt, L) -> s(a__length(mark(L)))
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U121(tt, IL) -> a__U122(a__isNatIListKind(IL))
   a__U122(tt) -> nil
   a__U13(tt) -> tt
   a__U131(tt, IL, M, N) -> a__U132(a__isNatIListKind(IL), IL, M, N)
   a__U132(tt, IL, M, N) -> a__U133(a__isNat(M), IL, M, N)
   a__U133(tt, IL, M, N) -> a__U134(a__isNatKind(M), IL, M, N)
   a__U134(tt, IL, M, N) -> a__U135(a__isNat(N), IL, M, N)
   a__U135(tt, IL, M, N) -> a__U136(a__isNatKind(N), IL, M, N)
   a__U136(tt, IL, M, N) -> cons(mark(N), take(M, IL))
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U23(tt) -> tt
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U33(tt) -> tt
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U46(tt) -> tt
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U52(tt) -> tt
   a__U61(tt, V2) -> a__U62(a__isNatIListKind(V2))
   a__U62(tt) -> tt
   a__U71(tt) -> tt
   a__U81(tt) -> tt
   a__U91(tt, V1, V2) -> a__U92(a__isNatKind(V1), V1, V2)
   a__U92(tt, V1, V2) -> a__U93(a__isNatIListKind(V2), V1, V2)
   a__U93(tt, V1, V2) -> a__U94(a__isNatIListKind(V2), V1, V2)
   a__U94(tt, V1, V2) -> a__U95(a__isNat(V1), V2)
   a__U95(tt, V2) -> a__U96(a__isNatList(V2))
   a__U96(tt) -> tt
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatIListKind(take(V1, V2)) -> a__U61(a__isNatKind(V1), V2)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U71(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U81(a__isNatKind(V1))
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U91(a__isNatKind(V1), V1, V2)
   a__isNatList(take(V1, V2)) -> a__U101(a__isNatKind(V1), V1, V2)
   a__length(nil) -> 0
   a__length(cons(N, L)) -> a__U111(a__isNatList(L), L, N)
   a__take(0, IL) -> a__U121(a__isNatIList(IL), IL)
   a__take(s(M), cons(N, IL)) -> a__U131(a__isNatIList(IL), IL, M, N)
   mark(zeros) -> a__zeros
   mark(U101(X1, X2, X3)) -> a__U101(mark(X1), X2, X3)
   mark(U102(X1, X2, X3)) -> a__U102(mark(X1), X2, X3)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U103(X1, X2, X3)) -> a__U103(mark(X1), X2, X3)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U104(X1, X2, X3)) -> a__U104(mark(X1), X2, X3)
   mark(U105(X1, X2)) -> a__U105(mark(X1), X2)
   mark(isNat(X)) -> a__isNat(X)
   mark(U106(X)) -> a__U106(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(U111(X1, X2, X3)) -> a__U111(mark(X1), X2, X3)
   mark(U112(X1, X2, X3)) -> a__U112(mark(X1), X2, X3)
   mark(U113(X1, X2, X3)) -> a__U113(mark(X1), X2, X3)
   mark(U114(X1, X2)) -> a__U114(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U121(X1, X2)) -> a__U121(mark(X1), X2)
   mark(U122(X)) -> a__U122(mark(X))
   mark(U131(X1, X2, X3, X4)) -> a__U131(mark(X1), X2, X3, X4)
   mark(U132(X1, X2, X3, X4)) -> a__U132(mark(X1), X2, X3, X4)
   mark(U133(X1, X2, X3, X4)) -> a__U133(mark(X1), X2, X3, X4)
   mark(U134(X1, X2, X3, X4)) -> a__U134(mark(X1), X2, X3, X4)
   mark(U135(X1, X2, X3, X4)) -> a__U135(mark(X1), X2, X3, X4)
   mark(U136(X1, X2, X3, X4)) -> a__U136(mark(X1), X2, X3, X4)
   mark(take(X1, X2)) -> a__take(mark(X1), mark(X2))
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(U23(X)) -> a__U23(mark(X))
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X1, X2)) -> a__U61(mark(X1), X2)
   mark(U62(X)) -> a__U62(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X)) -> a__U81(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2, X3)) -> a__U94(mark(X1), X2, X3)
   mark(U95(X1, X2)) -> a__U95(mark(X1), X2)
   mark(U96(X)) -> a__U96(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__zeros -> zeros
   a__U101(X1, X2, X3) -> U101(X1, X2, X3)
   a__U102(X1, X2, X3) -> U102(X1, X2, X3)
   a__isNatKind(X) -> isNatKind(X)
   a__U103(X1, X2, X3) -> U103(X1, X2, X3)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U104(X1, X2, X3) -> U104(X1, X2, X3)
   a__U105(X1, X2) -> U105(X1, X2)
   a__isNat(X) -> isNat(X)
   a__U106(X) -> U106(X)
   a__isNatIList(X) -> isNatIList(X)
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(X1, X2) -> U12(X1, X2)
   a__U111(X1, X2, X3) -> U111(X1, X2, X3)
   a__U112(X1, X2, X3) -> U112(X1, X2, X3)
   a__U113(X1, X2, X3) -> U113(X1, X2, X3)
   a__U114(X1, X2) -> U114(X1, X2)
   a__length(X) -> length(X)
   a__U13(X) -> U13(X)
   a__isNatList(X) -> isNatList(X)
   a__U121(X1, X2) -> U121(X1, X2)
   a__U122(X) -> U122(X)
   a__U131(X1, X2, X3, X4) -> U131(X1, X2, X3, X4)
   a__U132(X1, X2, X3, X4) -> U132(X1, X2, X3, X4)
   a__U133(X1, X2, X3, X4) -> U133(X1, X2, X3, X4)
   a__U134(X1, X2, X3, X4) -> U134(X1, X2, X3, X4)
   a__U135(X1, X2, X3, X4) -> U135(X1, X2, X3, X4)
   a__U136(X1, X2, X3, X4) -> U136(X1, X2, X3, X4)
   a__take(X1, X2) -> take(X1, X2)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(X1, X2) -> U22(X1, X2)
   a__U23(X) -> U23(X)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(X) -> U33(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(X) -> U46(X)
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(X) -> U52(X)
   a__U61(X1, X2) -> U61(X1, X2)
   a__U62(X) -> U62(X)
   a__U71(X) -> U71(X)
   a__U81(X) -> U81(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2, X3) -> U94(X1, X2, X3)
   a__U95(X1, X2) -> U95(X1, X2)
   a__U96(X) -> U96(X)

The set Q consists of the following terms:

   mark(isNatIListKind(x0))
   a__U136(x0, x1, x2, x3)
   mark(U22(x0, x1))
   a__U135(x0, x1, x2, x3)
   mark(U42(x0, x1, x2))
   mark(U104(x0, x1, x2))
   a__length(x0)
   mark(U106(x0))
   mark(U96(x0))
   a__take(x0, x1)
   a__U62(x0)
   mark(zeros)
   mark(U23(x0))
   mark(0)
   mark(length(x0))
   a__isNatList(x0)
   mark(U71(x0))
   a__isNatKind(x0)
   a__U134(x0, x1, x2, x3)
   mark(cons(x0, x1))
   a__U121(x0, x1)
   mark(U95(x0, x1))
   a__U122(x0)
   a__U113(x0, x1, x2)
   mark(U94(x0, x1, x2))
   a__U21(x0, x1)
   mark(U113(x0, x1, x2))
   a__U112(x0, x1, x2)
   a__U101(x0, x1, x2)
   mark(U41(x0, x1, x2))
   a__U71(x0)
   mark(U105(x0, x1))
   a__U45(x0, x1)
   a__U23(x0)
   mark(U11(x0, x1))
   mark(take(x0, x1))
   mark(U135(x0, x1, x2, x3))
   mark(U111(x0, x1, x2))
   a__U42(x0, x1, x2)
   mark(U61(x0, x1))
   mark(U112(x0, x1, x2))
   a__U22(x0, x1)
   a__U46(x0)
   mark(U12(x0, x1))
   mark(U52(x0))
   mark(nil)
   a__U133(x0, x1, x2, x3)
   a__isNat(x0)
   mark(U136(x0, x1, x2, x3))
   mark(U32(x0, x1))
   mark(U133(x0, x1, x2, x3))
   a__U114(x0, x1)
   mark(U121(x0, x1))
   mark(U46(x0))
   mark(isNatIList(x0))
   mark(U45(x0, x1))
   a__U104(x0, x1, x2)
   mark(U102(x0, x1, x2))
   a__U91(x0, x1, x2)
   a__U51(x0, x1)
   a__isNatIListKind(x0)
   a__U95(x0, x1)
   mark(tt)
   a__U103(x0, x1, x2)
   a__U11(x0, x1)
   a__U43(x0, x1, x2)
   a__U92(x0, x1, x2)
   a__isNatIList(x0)
   mark(U81(x0))
   mark(U31(x0, x1))
   a__U52(x0)
   mark(U122(x0))
   a__U31(x0, x1)
   mark(U33(x0))
   a__U94(x0, x1, x2)
   mark(U134(x0, x1, x2, x3))
   mark(isNatKind(x0))
   a__U96(x0)
   mark(U114(x0, x1))
   a__U81(x0)
   mark(U103(x0, x1, x2))
   a__U131(x0, x1, x2, x3)
   mark(isNat(x0))
   mark(isNatList(x0))
   a__U13(x0)
   a__U111(x0, x1, x2)
   a__U132(x0, x1, x2, x3)
   mark(U21(x0, x1))
   mark(U44(x0, x1, x2))
   a__U41(x0, x1, x2)
   a__U12(x0, x1)
   mark(U93(x0, x1, x2))
   a__U106(x0)
   mark(U91(x0, x1, x2))
   a__U93(x0, x1, x2)
   mark(U51(x0, x1))
   a__U61(x0, x1)
   a__U105(x0, x1)
   a__U33(x0)
   a__zeros
   mark(U101(x0, x1, x2))
   mark(U13(x0))
   mark(U131(x0, x1, x2, x3))
   mark(U43(x0, x1, x2))
   mark(s(x0))
   mark(U132(x0, x1, x2, x3))
   a__U102(x0, x1, x2)
   mark(U62(x0))
   a__U32(x0, x1)
   a__U44(x0, x1, x2)
   mark(U92(x0, x1, x2))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(36) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   A__U111(tt, L, N) -> A__U112(a__isNatIListKind(L), L, N)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( A__LENGTH_1(x_1) ) = 2x_1
POL( mark_1(x_1) ) = x_1
POL( zeros ) = 0
POL( a__zeros ) = 0
POL( U101_3(x_1, ..., x_3) ) = 2x_2
POL( a__U101_3(x_1, ..., x_3) ) = 2x_2
POL( U102_3(x_1, ..., x_3) ) = 2x_2
POL( a__U102_3(x_1, ..., x_3) ) = 2x_2
POL( isNatKind_1(x_1) ) = 2
POL( a__isNatKind_1(x_1) ) = 2
POL( U103_3(x_1, ..., x_3) ) = 2x_2
POL( a__U103_3(x_1, ..., x_3) ) = 2x_2
POL( isNatIListKind_1(x_1) ) = 1
POL( a__isNatIListKind_1(x_1) ) = 1
POL( U104_3(x_1, ..., x_3) ) = 2x_2
POL( a__U104_3(x_1, ..., x_3) ) = 2x_2
POL( U105_2(x_1, x_2) ) = x_1
POL( a__U105_2(x_1, x_2) ) = x_1
POL( isNat_1(x_1) ) = 2x_1
POL( a__isNat_1(x_1) ) = 2x_1
POL( U106_1(x_1) ) = 1
POL( a__U106_1(x_1) ) = 1
POL( isNatIList_1(x_1) ) = 2
POL( a__isNatIList_1(x_1) ) = 2
POL( U11_2(x_1, x_2) ) = 2x_2
POL( a__U11_2(x_1, x_2) ) = 2x_2
POL( U12_2(x_1, x_2) ) = 2x_2
POL( a__U12_2(x_1, x_2) ) = 2x_2
POL( U111_3(x_1, ..., x_3) ) = 2x_2
POL( a__U111_3(x_1, ..., x_3) ) = 2x_2
POL( U112_3(x_1, ..., x_3) ) = 2x_2
POL( a__U112_3(x_1, ..., x_3) ) = 2x_2
POL( U113_3(x_1, ..., x_3) ) = 2x_2
POL( a__U113_3(x_1, ..., x_3) ) = 2x_2
POL( U114_2(x_1, x_2) ) = 2x_2
POL( a__U114_2(x_1, x_2) ) = 2x_2
POL( length_1(x_1) ) = x_1
POL( a__length_1(x_1) ) = x_1
POL( U13_1(x_1) ) = x_1
POL( a__U13_1(x_1) ) = x_1
POL( isNatList_1(x_1) ) = 2x_1
POL( a__isNatList_1(x_1) ) = 2x_1
POL( U121_2(x_1, x_2) ) = 2
POL( a__U121_2(x_1, x_2) ) = 2
POL( U122_1(x_1) ) = x_1 + 1
POL( a__U122_1(x_1) ) = x_1 + 1
POL( U131_4(x_1, ..., x_4) ) = 2x_3
POL( a__U131_4(x_1, ..., x_4) ) = 2x_3
POL( U132_4(x_1, ..., x_4) ) = 2x_3
POL( a__U132_4(x_1, ..., x_4) ) = 2x_3
POL( U133_4(x_1, ..., x_4) ) = 2x_3
POL( a__U133_4(x_1, ..., x_4) ) = 2x_3
POL( U134_4(x_1, ..., x_4) ) = 2x_3
POL( a__U134_4(x_1, ..., x_4) ) = 2x_3
POL( U135_4(x_1, ..., x_4) ) = 2x_3
POL( a__U135_4(x_1, ..., x_4) ) = 2x_3
POL( U136_4(x_1, ..., x_4) ) = 2x_3
POL( a__U136_4(x_1, ..., x_4) ) = 2x_3
POL( take_2(x_1, x_2) ) = x_1
POL( a__take_2(x_1, x_2) ) = x_1
POL( U21_2(x_1, x_2) ) = 2x_2
POL( a__U21_2(x_1, x_2) ) = 2x_2
POL( U22_2(x_1, x_2) ) = 2x_2
POL( a__U22_2(x_1, x_2) ) = 2x_2
POL( U23_1(x_1) ) = x_1
POL( a__U23_1(x_1) ) = x_1
POL( U31_2(x_1, x_2) ) = 1
POL( a__U31_2(x_1, x_2) ) = 1
POL( U32_2(x_1, x_2) ) = 1
POL( a__U32_2(x_1, x_2) ) = 1
POL( U33_1(x_1) ) = 1
POL( a__U33_1(x_1) ) = 1
POL( U41_3(x_1, ..., x_3) ) = 2
POL( a__U41_3(x_1, ..., x_3) ) = 2
POL( U42_3(x_1, ..., x_3) ) = 2
POL( a__U42_3(x_1, ..., x_3) ) = 2
POL( U43_3(x_1, ..., x_3) ) = 2
POL( a__U43_3(x_1, ..., x_3) ) = 2
POL( U44_3(x_1, ..., x_3) ) = 2
POL( a__U44_3(x_1, ..., x_3) ) = 2
POL( U45_2(x_1, x_2) ) = 2
POL( a__U45_2(x_1, x_2) ) = 2
POL( U46_1(x_1) ) = 2
POL( a__U46_1(x_1) ) = 2
POL( U51_2(x_1, x_2) ) = 1
POL( a__U51_2(x_1, x_2) ) = 1
POL( U52_1(x_1) ) = 1
POL( a__U52_1(x_1) ) = 1
POL( U61_2(x_1, x_2) ) = 1
POL( a__U61_2(x_1, x_2) ) = 1
POL( U62_1(x_1) ) = 1
POL( a__U62_1(x_1) ) = 1
POL( U71_1(x_1) ) = 1
POL( a__U71_1(x_1) ) = 1
POL( U81_1(x_1) ) = 1
POL( a__U81_1(x_1) ) = 1
POL( U91_3(x_1, ..., x_3) ) = 2x_3
POL( a__U91_3(x_1, ..., x_3) ) = 2x_3
POL( U92_3(x_1, ..., x_3) ) = 2x_3
POL( a__U92_3(x_1, ..., x_3) ) = 2x_3
POL( U93_3(x_1, ..., x_3) ) = 2x_3
POL( a__U93_3(x_1, ..., x_3) ) = 2x_3
POL( U94_3(x_1, ..., x_3) ) = 2x_3
POL( a__U94_3(x_1, ..., x_3) ) = 2x_3
POL( U95_2(x_1, x_2) ) = 2x_2
POL( a__U95_2(x_1, x_2) ) = 2x_2
POL( U96_1(x_1) ) = x_1
POL( a__U96_1(x_1) ) = x_1
POL( cons_2(x_1, x_2) ) = 2x_2
POL( 0 ) = 2
POL( tt ) = 1
POL( s_1(x_1) ) = 2x_1
POL( nil ) = 2
POL( A__U111_3(x_1, ..., x_3) ) = x_1 + 2x_2
POL( A__U113_3(x_1, ..., x_3) ) = 2x_2
POL( A__U112_3(x_1, ..., x_3) ) = 2x_2
POL( A__U114_2(x_1, x_2) ) = 2x_2

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   mark(zeros) -> a__zeros
   mark(U101(X1, X2, X3)) -> a__U101(mark(X1), X2, X3)
   mark(U102(X1, X2, X3)) -> a__U102(mark(X1), X2, X3)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U103(X1, X2, X3)) -> a__U103(mark(X1), X2, X3)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U104(X1, X2, X3)) -> a__U104(mark(X1), X2, X3)
   mark(U105(X1, X2)) -> a__U105(mark(X1), X2)
   mark(isNat(X)) -> a__isNat(X)
   mark(U106(X)) -> a__U106(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(U111(X1, X2, X3)) -> a__U111(mark(X1), X2, X3)
   mark(U112(X1, X2, X3)) -> a__U112(mark(X1), X2, X3)
   mark(U113(X1, X2, X3)) -> a__U113(mark(X1), X2, X3)
   mark(U114(X1, X2)) -> a__U114(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U121(X1, X2)) -> a__U121(mark(X1), X2)
   mark(U122(X)) -> a__U122(mark(X))
   mark(U131(X1, X2, X3, X4)) -> a__U131(mark(X1), X2, X3, X4)
   mark(U132(X1, X2, X3, X4)) -> a__U132(mark(X1), X2, X3, X4)
   mark(U133(X1, X2, X3, X4)) -> a__U133(mark(X1), X2, X3, X4)
   mark(U134(X1, X2, X3, X4)) -> a__U134(mark(X1), X2, X3, X4)
   mark(U135(X1, X2, X3, X4)) -> a__U135(mark(X1), X2, X3, X4)
   mark(U136(X1, X2, X3, X4)) -> a__U136(mark(X1), X2, X3, X4)
   mark(take(X1, X2)) -> a__take(mark(X1), mark(X2))
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(U23(X)) -> a__U23(mark(X))
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X1, X2)) -> a__U61(mark(X1), X2)
   mark(U62(X)) -> a__U62(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X)) -> a__U81(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2, X3)) -> a__U94(mark(X1), X2, X3)
   mark(U95(X1, X2)) -> a__U95(mark(X1), X2)
   mark(U96(X)) -> a__U96(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U91(a__isNatKind(V1), V1, V2)
   a__isNatList(take(V1, V2)) -> a__U101(a__isNatKind(V1), V1, V2)
   a__isNatList(X) -> isNatList(X)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatIListKind(take(V1, V2)) -> a__U61(a__isNatKind(V1), V2)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNat(X) -> isNat(X)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U71(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U81(a__isNatKind(V1))
   a__isNatKind(X) -> isNatKind(X)
   a__U101(tt, V1, V2) -> a__U102(a__isNatKind(V1), V1, V2)
   a__U101(X1, X2, X3) -> U101(X1, X2, X3)
   a__U102(tt, V1, V2) -> a__U103(a__isNatIListKind(V2), V1, V2)
   a__U102(X1, X2, X3) -> U102(X1, X2, X3)
   a__U103(tt, V1, V2) -> a__U104(a__isNatIListKind(V2), V1, V2)
   a__U103(X1, X2, X3) -> U103(X1, X2, X3)
   a__U104(tt, V1, V2) -> a__U105(a__isNat(V1), V2)
   a__U104(X1, X2, X3) -> U104(X1, X2, X3)
   a__U105(tt, V2) -> a__U106(a__isNatIList(V2))
   a__U105(X1, X2) -> U105(X1, X2)
   a__U106(tt) -> tt
   a__U106(X) -> U106(X)
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U12(X1, X2) -> U12(X1, X2)
   a__U111(X1, X2, X3) -> U111(X1, X2, X3)
   a__U112(X1, X2, X3) -> U112(X1, X2, X3)
   a__U113(X1, X2, X3) -> U113(X1, X2, X3)
   a__U114(X1, X2) -> U114(X1, X2)
   a__length(nil) -> 0
   a__length(X) -> length(X)
   a__U13(tt) -> tt
   a__U13(X) -> U13(X)
   a__U121(tt, IL) -> a__U122(a__isNatIListKind(IL))
   a__U121(X1, X2) -> U121(X1, X2)
   a__U122(tt) -> nil
   a__U122(X) -> U122(X)
   a__U131(X1, X2, X3, X4) -> U131(X1, X2, X3, X4)
   a__U132(X1, X2, X3, X4) -> U132(X1, X2, X3, X4)
   a__U133(X1, X2, X3, X4) -> U133(X1, X2, X3, X4)
   a__U134(X1, X2, X3, X4) -> U134(X1, X2, X3, X4)
   a__U135(X1, X2, X3, X4) -> U135(X1, X2, X3, X4)
   a__U136(X1, X2, X3, X4) -> U136(X1, X2, X3, X4)
   a__take(0, IL) -> a__U121(a__isNatIList(IL), IL)
   a__take(X1, X2) -> take(X1, X2)
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U22(X1, X2) -> U22(X1, X2)
   a__U23(tt) -> tt
   a__U23(X) -> U23(X)
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(tt) -> tt
   a__U33(X) -> U33(X)
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(tt) -> tt
   a__U46(X) -> U46(X)
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(tt) -> tt
   a__U52(X) -> U52(X)
   a__U61(tt, V2) -> a__U62(a__isNatIListKind(V2))
   a__U61(X1, X2) -> U61(X1, X2)
   a__U62(tt) -> tt
   a__U62(X) -> U62(X)
   a__U71(tt) -> tt
   a__U71(X) -> U71(X)
   a__U81(tt) -> tt
   a__U81(X) -> U81(X)
   a__U91(tt, V1, V2) -> a__U92(a__isNatKind(V1), V1, V2)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(tt, V1, V2) -> a__U93(a__isNatIListKind(V2), V1, V2)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(tt, V1, V2) -> a__U94(a__isNatIListKind(V2), V1, V2)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(tt, V1, V2) -> a__U95(a__isNat(V1), V2)
   a__U94(X1, X2, X3) -> U94(X1, X2, X3)
   a__U95(tt, V2) -> a__U96(a__isNatList(V2))
   a__U95(X1, X2) -> U95(X1, X2)
   a__U96(tt) -> tt
   a__U96(X) -> U96(X)
   a__take(s(M), cons(N, IL)) -> a__U131(a__isNatIList(IL), IL, M, N)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIList(X) -> isNatIList(X)
   a__U131(tt, IL, M, N) -> a__U132(a__isNatIListKind(IL), IL, M, N)
   a__U132(tt, IL, M, N) -> a__U133(a__isNat(M), IL, M, N)
   a__U133(tt, IL, M, N) -> a__U134(a__isNatKind(M), IL, M, N)
   a__U134(tt, IL, M, N) -> a__U135(a__isNat(N), IL, M, N)
   a__U135(tt, IL, M, N) -> a__U136(a__isNatKind(N), IL, M, N)
   a__U136(tt, IL, M, N) -> cons(mark(N), take(M, IL))
   a__length(cons(N, L)) -> a__U111(a__isNatList(L), L, N)
   a__U111(tt, L, N) -> a__U112(a__isNatIListKind(L), L, N)
   a__U112(tt, L, N) -> a__U113(a__isNat(N), L, N)
   a__U113(tt, L, N) -> a__U114(a__isNatKind(N), L)
   a__U114(tt, L) -> s(a__length(mark(L)))
   a__zeros -> cons(0, zeros)
   a__zeros -> zeros


----------------------------------------

(37)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__U114(tt, L) -> A__LENGTH(mark(L))
   A__LENGTH(cons(N, L)) -> A__U111(a__isNatList(L), L, N)
   A__U112(tt, L, N) -> A__U113(a__isNat(N), L, N)
   A__U113(tt, L, N) -> A__U114(a__isNatKind(N), L)

The TRS R consists of the following rules:

   a__zeros -> cons(0, zeros)
   a__U101(tt, V1, V2) -> a__U102(a__isNatKind(V1), V1, V2)
   a__U102(tt, V1, V2) -> a__U103(a__isNatIListKind(V2), V1, V2)
   a__U103(tt, V1, V2) -> a__U104(a__isNatIListKind(V2), V1, V2)
   a__U104(tt, V1, V2) -> a__U105(a__isNat(V1), V2)
   a__U105(tt, V2) -> a__U106(a__isNatIList(V2))
   a__U106(tt) -> tt
   a__U11(tt, V1) -> a__U12(a__isNatIListKind(V1), V1)
   a__U111(tt, L, N) -> a__U112(a__isNatIListKind(L), L, N)
   a__U112(tt, L, N) -> a__U113(a__isNat(N), L, N)
   a__U113(tt, L, N) -> a__U114(a__isNatKind(N), L)
   a__U114(tt, L) -> s(a__length(mark(L)))
   a__U12(tt, V1) -> a__U13(a__isNatList(V1))
   a__U121(tt, IL) -> a__U122(a__isNatIListKind(IL))
   a__U122(tt) -> nil
   a__U13(tt) -> tt
   a__U131(tt, IL, M, N) -> a__U132(a__isNatIListKind(IL), IL, M, N)
   a__U132(tt, IL, M, N) -> a__U133(a__isNat(M), IL, M, N)
   a__U133(tt, IL, M, N) -> a__U134(a__isNatKind(M), IL, M, N)
   a__U134(tt, IL, M, N) -> a__U135(a__isNat(N), IL, M, N)
   a__U135(tt, IL, M, N) -> a__U136(a__isNatKind(N), IL, M, N)
   a__U136(tt, IL, M, N) -> cons(mark(N), take(M, IL))
   a__U21(tt, V1) -> a__U22(a__isNatKind(V1), V1)
   a__U22(tt, V1) -> a__U23(a__isNat(V1))
   a__U23(tt) -> tt
   a__U31(tt, V) -> a__U32(a__isNatIListKind(V), V)
   a__U32(tt, V) -> a__U33(a__isNatList(V))
   a__U33(tt) -> tt
   a__U41(tt, V1, V2) -> a__U42(a__isNatKind(V1), V1, V2)
   a__U42(tt, V1, V2) -> a__U43(a__isNatIListKind(V2), V1, V2)
   a__U43(tt, V1, V2) -> a__U44(a__isNatIListKind(V2), V1, V2)
   a__U44(tt, V1, V2) -> a__U45(a__isNat(V1), V2)
   a__U45(tt, V2) -> a__U46(a__isNatIList(V2))
   a__U46(tt) -> tt
   a__U51(tt, V2) -> a__U52(a__isNatIListKind(V2))
   a__U52(tt) -> tt
   a__U61(tt, V2) -> a__U62(a__isNatIListKind(V2))
   a__U62(tt) -> tt
   a__U71(tt) -> tt
   a__U81(tt) -> tt
   a__U91(tt, V1, V2) -> a__U92(a__isNatKind(V1), V1, V2)
   a__U92(tt, V1, V2) -> a__U93(a__isNatIListKind(V2), V1, V2)
   a__U93(tt, V1, V2) -> a__U94(a__isNatIListKind(V2), V1, V2)
   a__U94(tt, V1, V2) -> a__U95(a__isNat(V1), V2)
   a__U95(tt, V2) -> a__U96(a__isNatList(V2))
   a__U96(tt) -> tt
   a__isNat(0) -> tt
   a__isNat(length(V1)) -> a__U11(a__isNatIListKind(V1), V1)
   a__isNat(s(V1)) -> a__U21(a__isNatKind(V1), V1)
   a__isNatIList(V) -> a__U31(a__isNatIListKind(V), V)
   a__isNatIList(zeros) -> tt
   a__isNatIList(cons(V1, V2)) -> a__U41(a__isNatKind(V1), V1, V2)
   a__isNatIListKind(nil) -> tt
   a__isNatIListKind(zeros) -> tt
   a__isNatIListKind(cons(V1, V2)) -> a__U51(a__isNatKind(V1), V2)
   a__isNatIListKind(take(V1, V2)) -> a__U61(a__isNatKind(V1), V2)
   a__isNatKind(0) -> tt
   a__isNatKind(length(V1)) -> a__U71(a__isNatIListKind(V1))
   a__isNatKind(s(V1)) -> a__U81(a__isNatKind(V1))
   a__isNatList(nil) -> tt
   a__isNatList(cons(V1, V2)) -> a__U91(a__isNatKind(V1), V1, V2)
   a__isNatList(take(V1, V2)) -> a__U101(a__isNatKind(V1), V1, V2)
   a__length(nil) -> 0
   a__length(cons(N, L)) -> a__U111(a__isNatList(L), L, N)
   a__take(0, IL) -> a__U121(a__isNatIList(IL), IL)
   a__take(s(M), cons(N, IL)) -> a__U131(a__isNatIList(IL), IL, M, N)
   mark(zeros) -> a__zeros
   mark(U101(X1, X2, X3)) -> a__U101(mark(X1), X2, X3)
   mark(U102(X1, X2, X3)) -> a__U102(mark(X1), X2, X3)
   mark(isNatKind(X)) -> a__isNatKind(X)
   mark(U103(X1, X2, X3)) -> a__U103(mark(X1), X2, X3)
   mark(isNatIListKind(X)) -> a__isNatIListKind(X)
   mark(U104(X1, X2, X3)) -> a__U104(mark(X1), X2, X3)
   mark(U105(X1, X2)) -> a__U105(mark(X1), X2)
   mark(isNat(X)) -> a__isNat(X)
   mark(U106(X)) -> a__U106(mark(X))
   mark(isNatIList(X)) -> a__isNatIList(X)
   mark(U11(X1, X2)) -> a__U11(mark(X1), X2)
   mark(U12(X1, X2)) -> a__U12(mark(X1), X2)
   mark(U111(X1, X2, X3)) -> a__U111(mark(X1), X2, X3)
   mark(U112(X1, X2, X3)) -> a__U112(mark(X1), X2, X3)
   mark(U113(X1, X2, X3)) -> a__U113(mark(X1), X2, X3)
   mark(U114(X1, X2)) -> a__U114(mark(X1), X2)
   mark(length(X)) -> a__length(mark(X))
   mark(U13(X)) -> a__U13(mark(X))
   mark(isNatList(X)) -> a__isNatList(X)
   mark(U121(X1, X2)) -> a__U121(mark(X1), X2)
   mark(U122(X)) -> a__U122(mark(X))
   mark(U131(X1, X2, X3, X4)) -> a__U131(mark(X1), X2, X3, X4)
   mark(U132(X1, X2, X3, X4)) -> a__U132(mark(X1), X2, X3, X4)
   mark(U133(X1, X2, X3, X4)) -> a__U133(mark(X1), X2, X3, X4)
   mark(U134(X1, X2, X3, X4)) -> a__U134(mark(X1), X2, X3, X4)
   mark(U135(X1, X2, X3, X4)) -> a__U135(mark(X1), X2, X3, X4)
   mark(U136(X1, X2, X3, X4)) -> a__U136(mark(X1), X2, X3, X4)
   mark(take(X1, X2)) -> a__take(mark(X1), mark(X2))
   mark(U21(X1, X2)) -> a__U21(mark(X1), X2)
   mark(U22(X1, X2)) -> a__U22(mark(X1), X2)
   mark(U23(X)) -> a__U23(mark(X))
   mark(U31(X1, X2)) -> a__U31(mark(X1), X2)
   mark(U32(X1, X2)) -> a__U32(mark(X1), X2)
   mark(U33(X)) -> a__U33(mark(X))
   mark(U41(X1, X2, X3)) -> a__U41(mark(X1), X2, X3)
   mark(U42(X1, X2, X3)) -> a__U42(mark(X1), X2, X3)
   mark(U43(X1, X2, X3)) -> a__U43(mark(X1), X2, X3)
   mark(U44(X1, X2, X3)) -> a__U44(mark(X1), X2, X3)
   mark(U45(X1, X2)) -> a__U45(mark(X1), X2)
   mark(U46(X)) -> a__U46(mark(X))
   mark(U51(X1, X2)) -> a__U51(mark(X1), X2)
   mark(U52(X)) -> a__U52(mark(X))
   mark(U61(X1, X2)) -> a__U61(mark(X1), X2)
   mark(U62(X)) -> a__U62(mark(X))
   mark(U71(X)) -> a__U71(mark(X))
   mark(U81(X)) -> a__U81(mark(X))
   mark(U91(X1, X2, X3)) -> a__U91(mark(X1), X2, X3)
   mark(U92(X1, X2, X3)) -> a__U92(mark(X1), X2, X3)
   mark(U93(X1, X2, X3)) -> a__U93(mark(X1), X2, X3)
   mark(U94(X1, X2, X3)) -> a__U94(mark(X1), X2, X3)
   mark(U95(X1, X2)) -> a__U95(mark(X1), X2)
   mark(U96(X)) -> a__U96(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   mark(0) -> 0
   mark(tt) -> tt
   mark(s(X)) -> s(mark(X))
   mark(nil) -> nil
   a__zeros -> zeros
   a__U101(X1, X2, X3) -> U101(X1, X2, X3)
   a__U102(X1, X2, X3) -> U102(X1, X2, X3)
   a__isNatKind(X) -> isNatKind(X)
   a__U103(X1, X2, X3) -> U103(X1, X2, X3)
   a__isNatIListKind(X) -> isNatIListKind(X)
   a__U104(X1, X2, X3) -> U104(X1, X2, X3)
   a__U105(X1, X2) -> U105(X1, X2)
   a__isNat(X) -> isNat(X)
   a__U106(X) -> U106(X)
   a__isNatIList(X) -> isNatIList(X)
   a__U11(X1, X2) -> U11(X1, X2)
   a__U12(X1, X2) -> U12(X1, X2)
   a__U111(X1, X2, X3) -> U111(X1, X2, X3)
   a__U112(X1, X2, X3) -> U112(X1, X2, X3)
   a__U113(X1, X2, X3) -> U113(X1, X2, X3)
   a__U114(X1, X2) -> U114(X1, X2)
   a__length(X) -> length(X)
   a__U13(X) -> U13(X)
   a__isNatList(X) -> isNatList(X)
   a__U121(X1, X2) -> U121(X1, X2)
   a__U122(X) -> U122(X)
   a__U131(X1, X2, X3, X4) -> U131(X1, X2, X3, X4)
   a__U132(X1, X2, X3, X4) -> U132(X1, X2, X3, X4)
   a__U133(X1, X2, X3, X4) -> U133(X1, X2, X3, X4)
   a__U134(X1, X2, X3, X4) -> U134(X1, X2, X3, X4)
   a__U135(X1, X2, X3, X4) -> U135(X1, X2, X3, X4)
   a__U136(X1, X2, X3, X4) -> U136(X1, X2, X3, X4)
   a__take(X1, X2) -> take(X1, X2)
   a__U21(X1, X2) -> U21(X1, X2)
   a__U22(X1, X2) -> U22(X1, X2)
   a__U23(X) -> U23(X)
   a__U31(X1, X2) -> U31(X1, X2)
   a__U32(X1, X2) -> U32(X1, X2)
   a__U33(X) -> U33(X)
   a__U41(X1, X2, X3) -> U41(X1, X2, X3)
   a__U42(X1, X2, X3) -> U42(X1, X2, X3)
   a__U43(X1, X2, X3) -> U43(X1, X2, X3)
   a__U44(X1, X2, X3) -> U44(X1, X2, X3)
   a__U45(X1, X2) -> U45(X1, X2)
   a__U46(X) -> U46(X)
   a__U51(X1, X2) -> U51(X1, X2)
   a__U52(X) -> U52(X)
   a__U61(X1, X2) -> U61(X1, X2)
   a__U62(X) -> U62(X)
   a__U71(X) -> U71(X)
   a__U81(X) -> U81(X)
   a__U91(X1, X2, X3) -> U91(X1, X2, X3)
   a__U92(X1, X2, X3) -> U92(X1, X2, X3)
   a__U93(X1, X2, X3) -> U93(X1, X2, X3)
   a__U94(X1, X2, X3) -> U94(X1, X2, X3)
   a__U95(X1, X2) -> U95(X1, X2)
   a__U96(X) -> U96(X)

The set Q consists of the following terms:

   mark(isNatIListKind(x0))
   a__U136(x0, x1, x2, x3)
   mark(U22(x0, x1))
   a__U135(x0, x1, x2, x3)
   mark(U42(x0, x1, x2))
   mark(U104(x0, x1, x2))
   a__length(x0)
   mark(U106(x0))
   mark(U96(x0))
   a__take(x0, x1)
   a__U62(x0)
   mark(zeros)
   mark(U23(x0))
   mark(0)
   mark(length(x0))
   a__isNatList(x0)
   mark(U71(x0))
   a__isNatKind(x0)
   a__U134(x0, x1, x2, x3)
   mark(cons(x0, x1))
   a__U121(x0, x1)
   mark(U95(x0, x1))
   a__U122(x0)
   a__U113(x0, x1, x2)
   mark(U94(x0, x1, x2))
   a__U21(x0, x1)
   mark(U113(x0, x1, x2))
   a__U112(x0, x1, x2)
   a__U101(x0, x1, x2)
   mark(U41(x0, x1, x2))
   a__U71(x0)
   mark(U105(x0, x1))
   a__U45(x0, x1)
   a__U23(x0)
   mark(U11(x0, x1))
   mark(take(x0, x1))
   mark(U135(x0, x1, x2, x3))
   mark(U111(x0, x1, x2))
   a__U42(x0, x1, x2)
   mark(U61(x0, x1))
   mark(U112(x0, x1, x2))
   a__U22(x0, x1)
   a__U46(x0)
   mark(U12(x0, x1))
   mark(U52(x0))
   mark(nil)
   a__U133(x0, x1, x2, x3)
   a__isNat(x0)
   mark(U136(x0, x1, x2, x3))
   mark(U32(x0, x1))
   mark(U133(x0, x1, x2, x3))
   a__U114(x0, x1)
   mark(U121(x0, x1))
   mark(U46(x0))
   mark(isNatIList(x0))
   mark(U45(x0, x1))
   a__U104(x0, x1, x2)
   mark(U102(x0, x1, x2))
   a__U91(x0, x1, x2)
   a__U51(x0, x1)
   a__isNatIListKind(x0)
   a__U95(x0, x1)
   mark(tt)
   a__U103(x0, x1, x2)
   a__U11(x0, x1)
   a__U43(x0, x1, x2)
   a__U92(x0, x1, x2)
   a__isNatIList(x0)
   mark(U81(x0))
   mark(U31(x0, x1))
   a__U52(x0)
   mark(U122(x0))
   a__U31(x0, x1)
   mark(U33(x0))
   a__U94(x0, x1, x2)
   mark(U134(x0, x1, x2, x3))
   mark(isNatKind(x0))
   a__U96(x0)
   mark(U114(x0, x1))
   a__U81(x0)
   mark(U103(x0, x1, x2))
   a__U131(x0, x1, x2, x3)
   mark(isNat(x0))
   mark(isNatList(x0))
   a__U13(x0)
   a__U111(x0, x1, x2)
   a__U132(x0, x1, x2, x3)
   mark(U21(x0, x1))
   mark(U44(x0, x1, x2))
   a__U41(x0, x1, x2)
   a__U12(x0, x1)
   mark(U93(x0, x1, x2))
   a__U106(x0)
   mark(U91(x0, x1, x2))
   a__U93(x0, x1, x2)
   mark(U51(x0, x1))
   a__U61(x0, x1)
   a__U105(x0, x1)
   a__U33(x0)
   a__zeros
   mark(U101(x0, x1, x2))
   mark(U13(x0))
   mark(U131(x0, x1, x2, x3))
   mark(U43(x0, x1, x2))
   mark(s(x0))
   mark(U132(x0, x1, x2, x3))
   a__U102(x0, x1, x2)
   mark(U62(x0))
   a__U32(x0, x1)
   a__U44(x0, x1, x2)
   mark(U92(x0, x1, x2))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(38) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 4 less nodes.
----------------------------------------

(39)
TRUE
