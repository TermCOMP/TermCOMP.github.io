YES

Problem 1: 

(VAR vu95NonEmpty X X1 X2 Y)
(RULES
au95u95from(X) -> cons(mark(X),from(s(X)))
au95u95from(X) -> from(X)
au95u95length(cons(X,Y)) -> s(au95u95length1(Y))
au95u95length(nil) -> num0
au95u95length(X) -> length(X)
au95u95length1(X) -> au95u95length(X)
au95u95length1(X) -> length1(X)
mark(num0) -> num0
mark(cons(X1,X2)) -> cons(mark(X1),X2)
mark(from(X)) -> au95u95from(mark(X))
mark(length(X)) -> au95u95length(X)
mark(length1(X)) -> au95u95length1(X)
mark(nil) -> nil
mark(s(X)) -> s(mark(X))
)
 
(STRATEGY INNERMOST)

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 AU95U95FROM(X) -> MARK(X)
 AU95U95LENGTH(cons(X,Y)) -> AU95U95LENGTH1(Y)
 AU95U95LENGTH1(X) -> AU95U95LENGTH(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(from(X)) -> AU95U95FROM(mark(X))
 MARK(from(X)) -> MARK(X)
 MARK(length(X)) -> AU95U95LENGTH(X)
 MARK(length1(X)) -> AU95U95LENGTH1(X)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95from(X) -> cons(mark(X),from(s(X)))
 au95u95from(X) -> from(X)
 au95u95length(cons(X,Y)) -> s(au95u95length1(Y))
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95length1(X) -> au95u95length(X)
 au95u95length1(X) -> length1(X)
 mark(num0) -> num0
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(from(X)) -> au95u95from(mark(X))
 mark(length(X)) -> au95u95length(X)
 mark(length1(X)) -> au95u95length1(X)
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95FROM(X) -> MARK(X)
 AU95U95LENGTH(cons(X,Y)) -> AU95U95LENGTH1(Y)
 AU95U95LENGTH1(X) -> AU95U95LENGTH(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(from(X)) -> AU95U95FROM(mark(X))
 MARK(from(X)) -> MARK(X)
 MARK(length(X)) -> AU95U95LENGTH(X)
 MARK(length1(X)) -> AU95U95LENGTH1(X)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95from(X) -> cons(mark(X),from(s(X)))
 au95u95from(X) -> from(X)
 au95u95length(cons(X,Y)) -> s(au95u95length1(Y))
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95length1(X) -> au95u95length(X)
 au95u95length1(X) -> length1(X)
 mark(num0) -> num0
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(from(X)) -> au95u95from(mark(X))
 mark(length(X)) -> au95u95length(X)
 mark(length1(X)) -> au95u95length1(X)
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95LENGTH(cons(X,Y)) -> AU95U95LENGTH1(Y)
 AU95U95LENGTH1(X) -> AU95U95LENGTH(X)
->->-> Rules:
 au95u95from(X) -> cons(mark(X),from(s(X)))
 au95u95from(X) -> from(X)
 au95u95length(cons(X,Y)) -> s(au95u95length1(Y))
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95length1(X) -> au95u95length(X)
 au95u95length1(X) -> length1(X)
 mark(num0) -> num0
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(from(X)) -> au95u95from(mark(X))
 mark(length(X)) -> au95u95length(X)
 mark(length1(X)) -> au95u95length1(X)
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
->->Cycle:
->->-> Pairs:
 AU95U95FROM(X) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(from(X)) -> AU95U95FROM(mark(X))
 MARK(from(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95from(X) -> cons(mark(X),from(s(X)))
 au95u95from(X) -> from(X)
 au95u95length(cons(X,Y)) -> s(au95u95length1(Y))
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95length1(X) -> au95u95length(X)
 au95u95length1(X) -> length1(X)
 mark(num0) -> num0
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(from(X)) -> au95u95from(mark(X))
 mark(length(X)) -> au95u95length(X)
 mark(length1(X)) -> au95u95length1(X)
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))


The problem is decomposed in 2 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 AU95U95LENGTH(cons(X,Y)) -> AU95U95LENGTH1(Y)
 AU95U95LENGTH1(X) -> AU95U95LENGTH(X)
-> Rules:
 au95u95from(X) -> cons(mark(X),from(s(X)))
 au95u95from(X) -> from(X)
 au95u95length(cons(X,Y)) -> s(au95u95length1(Y))
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95length1(X) -> au95u95length(X)
 au95u95length1(X) -> length1(X)
 mark(num0) -> num0
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(from(X)) -> au95u95from(mark(X))
 mark(length(X)) -> au95u95length(X)
 mark(length1(X)) -> au95u95length1(X)
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
->Projection:
 pi(AU95U95LENGTH) = 1
 pi(AU95U95LENGTH1) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 AU95U95LENGTH1(X) -> AU95U95LENGTH(X)
-> Rules:
 au95u95from(X) -> cons(mark(X),from(s(X)))
 au95u95from(X) -> from(X)
 au95u95length(cons(X,Y)) -> s(au95u95length1(Y))
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95length1(X) -> au95u95length(X)
 au95u95length1(X) -> length1(X)
 mark(num0) -> num0
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(from(X)) -> au95u95from(mark(X))
 mark(length(X)) -> au95u95length(X)
 mark(length1(X)) -> au95u95length1(X)
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95FROM(X) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(from(X)) -> AU95U95FROM(mark(X))
 MARK(from(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95from(X) -> cons(mark(X),from(s(X)))
 au95u95from(X) -> from(X)
 au95u95length(cons(X,Y)) -> s(au95u95length1(Y))
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95length1(X) -> au95u95length(X)
 au95u95length1(X) -> length1(X)
 mark(num0) -> num0
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(from(X)) -> au95u95from(mark(X))
 mark(length(X)) -> au95u95length(X)
 mark(length1(X)) -> au95u95length1(X)
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
-> Usable rules:
 au95u95from(X) -> cons(mark(X),from(s(X)))
 au95u95from(X) -> from(X)
 au95u95length(cons(X,Y)) -> s(au95u95length1(Y))
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95length1(X) -> au95u95length(X)
 au95u95length1(X) -> length1(X)
 mark(num0) -> num0
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(from(X)) -> au95u95from(mark(X))
 mark(length(X)) -> au95u95length(X)
 mark(length1(X)) -> au95u95length1(X)
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95from](X) = 2.X + 2
[au95u95length](X) = 0
[au95u95length1](X) = 0
[mark](X) = 2.X
[num0] = 0
[cons](X1,X2) = X1 + 2
[fSNonEmpty] = 0
[from](X) = 2.X + 2
[length](X) = 0
[length1](X) = 0
[nil] = 2
[s](X) = 2.X
[AU95U95FROM](X) = 2.X + 2
[AU95U95LENGTH](X) = 0
[AU95U95LENGTH1](X) = 0
[MARK](X) = 2.X

Problem 1.2: 

SCC Processor:
-> Pairs:
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(from(X)) -> AU95U95FROM(mark(X))
 MARK(from(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95from(X) -> cons(mark(X),from(s(X)))
 au95u95from(X) -> from(X)
 au95u95length(cons(X,Y)) -> s(au95u95length1(Y))
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95length1(X) -> au95u95length(X)
 au95u95length1(X) -> length1(X)
 mark(num0) -> num0
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(from(X)) -> au95u95from(mark(X))
 mark(length(X)) -> au95u95length(X)
 mark(length1(X)) -> au95u95length1(X)
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(from(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95from(X) -> cons(mark(X),from(s(X)))
 au95u95from(X) -> from(X)
 au95u95length(cons(X,Y)) -> s(au95u95length1(Y))
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95length1(X) -> au95u95length(X)
 au95u95length1(X) -> length1(X)
 mark(num0) -> num0
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(from(X)) -> au95u95from(mark(X))
 mark(length(X)) -> au95u95length(X)
 mark(length1(X)) -> au95u95length1(X)
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))

Problem 1.2: 

Subterm Processor:
-> Pairs:
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(from(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95from(X) -> cons(mark(X),from(s(X)))
 au95u95from(X) -> from(X)
 au95u95length(cons(X,Y)) -> s(au95u95length1(Y))
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95length1(X) -> au95u95length(X)
 au95u95length1(X) -> length1(X)
 mark(num0) -> num0
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(from(X)) -> au95u95from(mark(X))
 mark(length(X)) -> au95u95length(X)
 mark(length1(X)) -> au95u95length1(X)
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
->Projection:
 pi(MARK) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 au95u95from(X) -> cons(mark(X),from(s(X)))
 au95u95from(X) -> from(X)
 au95u95length(cons(X,Y)) -> s(au95u95length1(Y))
 au95u95length(nil) -> num0
 au95u95length(X) -> length(X)
 au95u95length1(X) -> au95u95length(X)
 au95u95length1(X) -> length1(X)
 mark(num0) -> num0
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(from(X)) -> au95u95from(mark(X))
 mark(length(X)) -> au95u95length(X)
 mark(length1(X)) -> au95u95length1(X)
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
