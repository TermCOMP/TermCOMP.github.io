YES
proof of /home/ff862203/input_CziNO2FQ3O.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) QDPOrderProof [EQUIVALENT, 0 ms]
(4) QDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) QDP
(7) UsableRulesProof [EQUIVALENT, 0 ms]
(8) QDP
(9) QReductionProof [EQUIVALENT, 0 ms]
(10) QDP
(11) QDPSizeChangeProof [EQUIVALENT, 0 ms]
(12) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__first(0, X) -> nil
   a__first(s(X), cons(Y, Z)) -> cons(mark(Y), first(X, Z))
   a__from(X) -> cons(mark(X), from(s(X)))
   mark(first(X1, X2)) -> a__first(mark(X1), mark(X2))
   mark(from(X)) -> a__from(mark(X))
   mark(0) -> 0
   mark(nil) -> nil
   mark(s(X)) -> s(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   a__first(X1, X2) -> first(X1, X2)
   a__from(X) -> from(X)

The set Q consists of the following terms:

   mark(cons(x0, x1))
   a__from(x0)
   mark(first(x0, x1))
   mark(nil)
   mark(from(x0))
   mark(0)
   mark(s(x0))
   a__first(x0, x1)


----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__FIRST(s(X), cons(Y, Z)) -> MARK(Y)
   A__FROM(X) -> MARK(X)
   MARK(first(X1, X2)) -> A__FIRST(mark(X1), mark(X2))
   MARK(first(X1, X2)) -> MARK(X1)
   MARK(first(X1, X2)) -> MARK(X2)
   MARK(from(X)) -> A__FROM(mark(X))
   MARK(from(X)) -> MARK(X)
   MARK(s(X)) -> MARK(X)
   MARK(cons(X1, X2)) -> MARK(X1)

The TRS R consists of the following rules:

   a__first(0, X) -> nil
   a__first(s(X), cons(Y, Z)) -> cons(mark(Y), first(X, Z))
   a__from(X) -> cons(mark(X), from(s(X)))
   mark(first(X1, X2)) -> a__first(mark(X1), mark(X2))
   mark(from(X)) -> a__from(mark(X))
   mark(0) -> 0
   mark(nil) -> nil
   mark(s(X)) -> s(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   a__first(X1, X2) -> first(X1, X2)
   a__from(X) -> from(X)

The set Q consists of the following terms:

   mark(cons(x0, x1))
   a__from(x0)
   mark(first(x0, x1))
   mark(nil)
   mark(from(x0))
   mark(0)
   mark(s(x0))
   a__first(x0, x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   A__FIRST(s(X), cons(Y, Z)) -> MARK(Y)
   MARK(from(X)) -> A__FROM(mark(X))
   MARK(from(X)) -> MARK(X)
   MARK(s(X)) -> MARK(X)
   MARK(cons(X1, X2)) -> MARK(X1)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( A__FIRST_2(x_1, x_2) ) = max{0, x_1 + x_2 - 1}
POL( A__FROM_1(x_1) ) = x_1
POL( mark_1(x_1) ) = 2x_1
POL( first_2(x_1, x_2) ) = 2x_1 + 2x_2
POL( a__first_2(x_1, x_2) ) = 2x_1 + 2x_2
POL( from_1(x_1) ) = 2x_1 + 2
POL( a__from_1(x_1) ) = 2x_1 + 2
POL( 0 ) = 1
POL( nil ) = 0
POL( s_1(x_1) ) = 2x_1 + 1
POL( cons_2(x_1, x_2) ) = x_1 + 1
POL( MARK_1(x_1) ) = x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   mark(first(X1, X2)) -> a__first(mark(X1), mark(X2))
   mark(from(X)) -> a__from(mark(X))
   mark(0) -> 0
   mark(nil) -> nil
   mark(s(X)) -> s(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   a__from(X) -> from(X)
   a__first(0, X) -> nil
   a__first(X1, X2) -> first(X1, X2)
   a__first(s(X), cons(Y, Z)) -> cons(mark(Y), first(X, Z))
   a__from(X) -> cons(mark(X), from(s(X)))


----------------------------------------

(4)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__FROM(X) -> MARK(X)
   MARK(first(X1, X2)) -> A__FIRST(mark(X1), mark(X2))
   MARK(first(X1, X2)) -> MARK(X1)
   MARK(first(X1, X2)) -> MARK(X2)

The TRS R consists of the following rules:

   a__first(0, X) -> nil
   a__first(s(X), cons(Y, Z)) -> cons(mark(Y), first(X, Z))
   a__from(X) -> cons(mark(X), from(s(X)))
   mark(first(X1, X2)) -> a__first(mark(X1), mark(X2))
   mark(from(X)) -> a__from(mark(X))
   mark(0) -> 0
   mark(nil) -> nil
   mark(s(X)) -> s(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   a__first(X1, X2) -> first(X1, X2)
   a__from(X) -> from(X)

The set Q consists of the following terms:

   mark(cons(x0, x1))
   a__from(x0)
   mark(first(x0, x1))
   mark(nil)
   mark(from(x0))
   mark(0)
   mark(s(x0))
   a__first(x0, x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(first(X1, X2)) -> MARK(X2)
   MARK(first(X1, X2)) -> MARK(X1)

The TRS R consists of the following rules:

   a__first(0, X) -> nil
   a__first(s(X), cons(Y, Z)) -> cons(mark(Y), first(X, Z))
   a__from(X) -> cons(mark(X), from(s(X)))
   mark(first(X1, X2)) -> a__first(mark(X1), mark(X2))
   mark(from(X)) -> a__from(mark(X))
   mark(0) -> 0
   mark(nil) -> nil
   mark(s(X)) -> s(mark(X))
   mark(cons(X1, X2)) -> cons(mark(X1), X2)
   a__first(X1, X2) -> first(X1, X2)
   a__from(X) -> from(X)

The set Q consists of the following terms:

   mark(cons(x0, x1))
   a__from(x0)
   mark(first(x0, x1))
   mark(nil)
   mark(from(x0))
   mark(0)
   mark(s(x0))
   a__first(x0, x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(first(X1, X2)) -> MARK(X2)
   MARK(first(X1, X2)) -> MARK(X1)

R is empty.
The set Q consists of the following terms:

   mark(cons(x0, x1))
   a__from(x0)
   mark(first(x0, x1))
   mark(nil)
   mark(from(x0))
   mark(0)
   mark(s(x0))
   a__first(x0, x1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   mark(cons(x0, x1))
   a__from(x0)
   mark(first(x0, x1))
   mark(nil)
   mark(from(x0))
   mark(0)
   mark(s(x0))
   a__first(x0, x1)


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   MARK(first(X1, X2)) -> MARK(X2)
   MARK(first(X1, X2)) -> MARK(X1)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*MARK(first(X1, X2)) -> MARK(X2)
The graph contains the following edges 1 > 1


*MARK(first(X1, X2)) -> MARK(X1)
The graph contains the following edges 1 > 1


----------------------------------------

(12)
YES
