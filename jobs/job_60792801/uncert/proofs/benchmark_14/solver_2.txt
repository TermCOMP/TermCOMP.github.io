YES

Problem 1: 

(VAR vu95NonEmpty x y)
(RULES
int(num0,num0) -> cons(num0,nil)
int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
int(s(x),num0) -> nil
int(s(x),s(y)) -> intlist(int(x,y))
intlist(cons(x,y)) -> cons(s(x),intlist(y))
intlist(nil) -> nil
)
 
(STRATEGY INNERMOST)

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 INT(num0,s(y)) -> INT(s(num0),s(y))
 INT(s(x),s(y)) -> INT(x,y)
 INT(s(x),s(y)) -> INTLIST(int(x,y))
 INTLIST(cons(x,y)) -> INTLIST(y)
-> Rules:
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil

Problem 1: 

SCC Processor:
-> Pairs:
 INT(num0,s(y)) -> INT(s(num0),s(y))
 INT(s(x),s(y)) -> INT(x,y)
 INT(s(x),s(y)) -> INTLIST(int(x,y))
 INTLIST(cons(x,y)) -> INTLIST(y)
-> Rules:
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 INTLIST(cons(x,y)) -> INTLIST(y)
->->-> Rules:
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
->->Cycle:
->->-> Pairs:
 INT(num0,s(y)) -> INT(s(num0),s(y))
 INT(s(x),s(y)) -> INT(x,y)
->->-> Rules:
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil


The problem is decomposed in 2 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 INTLIST(cons(x,y)) -> INTLIST(y)
-> Rules:
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
->Projection:
 pi(INTLIST) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 INT(num0,s(y)) -> INT(s(num0),s(y))
 INT(s(x),s(y)) -> INT(x,y)
-> Rules:
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
->Projection:
 pi(INT) = 2

Problem 1.2: 

SCC Processor:
-> Pairs:
 INT(num0,s(y)) -> INT(s(num0),s(y))
-> Rules:
 int(num0,num0) -> cons(num0,nil)
 int(num0,s(y)) -> cons(num0,int(s(num0),s(y)))
 int(s(x),num0) -> nil
 int(s(x),s(y)) -> intlist(int(x,y))
 intlist(cons(x,y)) -> cons(s(x),intlist(y))
 intlist(nil) -> nil
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
