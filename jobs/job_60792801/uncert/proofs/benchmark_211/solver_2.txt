YES

Problem 1: 

(VAR vu95NonEmpty X X1 X2 Y Z)
(RULES
active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
active(first(num0,X)) -> mark(nil)
active(from(X)) -> mark(cons(X,from(s(X))))
cons(active(X1),X2) -> cons(X1,X2)
cons(mark(X1),X2) -> cons(X1,X2)
cons(X1,active(X2)) -> cons(X1,X2)
cons(X1,mark(X2)) -> cons(X1,X2)
first(active(X1),X2) -> first(X1,X2)
first(mark(X1),X2) -> first(X1,X2)
first(X1,active(X2)) -> first(X1,X2)
first(X1,mark(X2)) -> first(X1,X2)
from(active(X)) -> from(X)
from(mark(X)) -> from(X)
mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
mark(from(X)) -> active(from(mark(X)))
mark(s(X)) -> active(s(mark(X)))
mark(num0) -> active(num0)
mark(nil) -> active(nil)
s(active(X)) -> s(X)
s(mark(X)) -> s(X)
)
 
(STRATEGY INNERMOST)

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ACTIVE(first(s(X),cons(Y,Z))) -> CONS(Y,first(X,Z))
 ACTIVE(first(s(X),cons(Y,Z))) -> FIRST(X,Z)
 ACTIVE(first(s(X),cons(Y,Z))) -> MARK(cons(Y,first(X,Z)))
 ACTIVE(first(num0,X)) -> MARK(nil)
 ACTIVE(from(X)) -> CONS(X,from(s(X)))
 ACTIVE(from(X)) -> FROM(s(X))
 ACTIVE(from(X)) -> MARK(cons(X,from(s(X))))
 ACTIVE(from(X)) -> S(X)
 CONS(active(X1),X2) -> CONS(X1,X2)
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(X1,active(X2)) -> CONS(X1,X2)
 CONS(X1,mark(X2)) -> CONS(X1,X2)
 FIRST(active(X1),X2) -> FIRST(X1,X2)
 FIRST(mark(X1),X2) -> FIRST(X1,X2)
 FIRST(X1,active(X2)) -> FIRST(X1,X2)
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
 FROM(active(X)) -> FROM(X)
 FROM(mark(X)) -> FROM(X)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> CONS(mark(X1),X2)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> FIRST(mark(X1),mark(X2))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(from(X)) -> ACTIVE(from(mark(X)))
 MARK(from(X)) -> FROM(mark(X))
 MARK(from(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
 MARK(s(X)) -> S(mark(X))
 S(active(X)) -> S(X)
 S(mark(X)) -> S(X)
-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVE(first(s(X),cons(Y,Z))) -> CONS(Y,first(X,Z))
 ACTIVE(first(s(X),cons(Y,Z))) -> FIRST(X,Z)
 ACTIVE(first(s(X),cons(Y,Z))) -> MARK(cons(Y,first(X,Z)))
 ACTIVE(first(num0,X)) -> MARK(nil)
 ACTIVE(from(X)) -> CONS(X,from(s(X)))
 ACTIVE(from(X)) -> FROM(s(X))
 ACTIVE(from(X)) -> MARK(cons(X,from(s(X))))
 ACTIVE(from(X)) -> S(X)
 CONS(active(X1),X2) -> CONS(X1,X2)
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(X1,active(X2)) -> CONS(X1,X2)
 CONS(X1,mark(X2)) -> CONS(X1,X2)
 FIRST(active(X1),X2) -> FIRST(X1,X2)
 FIRST(mark(X1),X2) -> FIRST(X1,X2)
 FIRST(X1,active(X2)) -> FIRST(X1,X2)
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
 FROM(active(X)) -> FROM(X)
 FROM(mark(X)) -> FROM(X)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> CONS(mark(X1),X2)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> FIRST(mark(X1),mark(X2))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(from(X)) -> ACTIVE(from(mark(X)))
 MARK(from(X)) -> FROM(mark(X))
 MARK(from(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
 MARK(s(X)) -> S(mark(X))
 S(active(X)) -> S(X)
 S(mark(X)) -> S(X)
-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 S(active(X)) -> S(X)
 S(mark(X)) -> S(X)
->->-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
->->Cycle:
->->-> Pairs:
 FROM(active(X)) -> FROM(X)
 FROM(mark(X)) -> FROM(X)
->->-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
->->Cycle:
->->-> Pairs:
 FIRST(active(X1),X2) -> FIRST(X1,X2)
 FIRST(mark(X1),X2) -> FIRST(X1,X2)
 FIRST(X1,active(X2)) -> FIRST(X1,X2)
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
->->-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
->->Cycle:
->->-> Pairs:
 CONS(active(X1),X2) -> CONS(X1,X2)
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(X1,active(X2)) -> CONS(X1,X2)
 CONS(X1,mark(X2)) -> CONS(X1,X2)
->->-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
->->Cycle:
->->-> Pairs:
 ACTIVE(first(s(X),cons(Y,Z))) -> MARK(cons(Y,first(X,Z)))
 ACTIVE(from(X)) -> MARK(cons(X,from(s(X))))
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(from(X)) -> ACTIVE(from(mark(X)))
 MARK(from(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)


The problem is decomposed in 5 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 S(active(X)) -> S(X)
 S(mark(X)) -> S(X)
-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
->Projection:
 pi(S) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 FROM(active(X)) -> FROM(X)
 FROM(mark(X)) -> FROM(X)
-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
->Projection:
 pi(FROM) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> Pairs:
 FIRST(active(X1),X2) -> FIRST(X1,X2)
 FIRST(mark(X1),X2) -> FIRST(X1,X2)
 FIRST(X1,active(X2)) -> FIRST(X1,X2)
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
->Projection:
 pi(FIRST) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 FIRST(X1,active(X2)) -> FIRST(X1,X2)
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 FIRST(X1,active(X2)) -> FIRST(X1,X2)
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
->->-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)

Problem 1.3: 

Subterm Processor:
-> Pairs:
 FIRST(X1,active(X2)) -> FIRST(X1,X2)
 FIRST(X1,mark(X2)) -> FIRST(X1,X2)
-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
->Projection:
 pi(FIRST) = 2

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Subterm Processor:
-> Pairs:
 CONS(active(X1),X2) -> CONS(X1,X2)
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(X1,active(X2)) -> CONS(X1,X2)
 CONS(X1,mark(X2)) -> CONS(X1,X2)
-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
->Projection:
 pi(CONS) = 1

Problem 1.4: 

SCC Processor:
-> Pairs:
 CONS(X1,active(X2)) -> CONS(X1,X2)
 CONS(X1,mark(X2)) -> CONS(X1,X2)
-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 CONS(X1,active(X2)) -> CONS(X1,X2)
 CONS(X1,mark(X2)) -> CONS(X1,X2)
->->-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)

Problem 1.4: 

Subterm Processor:
-> Pairs:
 CONS(X1,active(X2)) -> CONS(X1,X2)
 CONS(X1,mark(X2)) -> CONS(X1,X2)
-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
->Projection:
 pi(CONS) = 2

Problem 1.4: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.5: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(first(s(X),cons(Y,Z))) -> MARK(cons(Y,first(X,Z)))
 ACTIVE(from(X)) -> MARK(cons(X,from(s(X))))
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(from(X)) -> ACTIVE(from(mark(X)))
 MARK(from(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
-> Usable rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = X
[cons](X1,X2) = X1 + 1
[first](X1,X2) = 2.X1 + 2.X2
[from](X) = 2.X + 2
[mark](X) = 2.X
[s](X) = 2.X + 2
[num0] = 2
[fSNonEmpty] = 0
[nil] = 2
[ACTIVE](X) = X
[CONS](X1,X2) = 0
[FIRST](X1,X2) = 0
[FROM](X) = 0
[MARK](X) = 2.X
[S](X) = 0

Problem 1.5: 

SCC Processor:
-> Pairs:
 ACTIVE(from(X)) -> MARK(cons(X,from(s(X))))
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(from(X)) -> ACTIVE(from(mark(X)))
 MARK(from(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(from(X)) -> MARK(cons(X,from(s(X))))
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(from(X)) -> ACTIVE(from(mark(X)))
 MARK(from(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)

Problem 1.5: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(from(X)) -> MARK(cons(X,from(s(X))))
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(from(X)) -> ACTIVE(from(mark(X)))
 MARK(from(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
-> Usable rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = X
[cons](X1,X2) = 2.X1
[first](X1,X2) = X1 + 2.X2
[from](X) = 2.X + 1
[mark](X) = X
[s](X) = 2.X
[num0] = 2
[fSNonEmpty] = 0
[nil] = 2
[ACTIVE](X) = 2.X + 1
[CONS](X1,X2) = 0
[FIRST](X1,X2) = 0
[FROM](X) = 0
[MARK](X) = 2.X + 2
[S](X) = 0

Problem 1.5: 

SCC Processor:
-> Pairs:
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> ACTIVE(first(mark(X1),mark(X2)))
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(from(X)) -> ACTIVE(from(mark(X)))
 MARK(from(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(from(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)

Problem 1.5: 

Subterm Processor:
-> Pairs:
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X1)
 MARK(first(X1,X2)) -> MARK(X2)
 MARK(from(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
->Projection:
 pi(MARK) = 1

Problem 1.5: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(first(s(X),cons(Y,Z))) -> mark(cons(Y,first(X,Z)))
 active(first(num0,X)) -> mark(nil)
 active(from(X)) -> mark(cons(X,from(s(X))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 first(active(X1),X2) -> first(X1,X2)
 first(mark(X1),X2) -> first(X1,X2)
 first(X1,active(X2)) -> first(X1,X2)
 first(X1,mark(X2)) -> first(X1,X2)
 from(active(X)) -> from(X)
 from(mark(X)) -> from(X)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(first(X1,X2)) -> active(first(mark(X1),mark(X2)))
 mark(from(X)) -> active(from(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(num0) -> active(num0)
 mark(nil) -> active(nil)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
