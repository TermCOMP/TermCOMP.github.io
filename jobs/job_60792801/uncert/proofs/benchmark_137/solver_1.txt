YES
proof of /home/ff862203/input_16VxoHCA7s.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 26 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 0 ms]
(4) QTRS
(5) QTRSRRRProof [EQUIVALENT, 0 ms]
(6) QTRS
(7) DependencyPairsProof [EQUIVALENT, 0 ms]
(8) QDP
(9) DependencyGraphProof [EQUIVALENT, 0 ms]
(10) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__f(b, X, c) -> a__f(X, a__c, X)
   a__c -> b
   mark(f(X1, X2, X3)) -> a__f(X1, mark(X2), X3)
   mark(c) -> a__c
   mark(b) -> b
   a__f(X1, X2, X3) -> f(X1, X2, X3)
   a__c -> c

The set Q consists of the following terms:

   mark(c)
   mark(b)
   mark(f(x0, x1, x2))
   a__f(x0, x1, x2)
   a__c


----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a__c) = 0
   POL(a__f(x_1, x_2, x_3)) = 2 + x_1 + 2*x_2 + x_3
   POL(b) = 0
   POL(c) = 0
   POL(f(x_1, x_2, x_3)) = 2 + x_1 + 2*x_2 + x_3
   POL(mark(x_1)) = 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   mark(f(X1, X2, X3)) -> a__f(X1, mark(X2), X3)




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__f(b, X, c) -> a__f(X, a__c, X)
   a__c -> b
   mark(c) -> a__c
   mark(b) -> b
   a__f(X1, X2, X3) -> f(X1, X2, X3)
   a__c -> c

The set Q consists of the following terms:

   mark(c)
   mark(b)
   mark(f(x0, x1, x2))
   a__f(x0, x1, x2)
   a__c


----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a__c) = 0
   POL(a__f(x_1, x_2, x_3)) = 1 + x_1 + 2*x_2 + x_3
   POL(b) = 0
   POL(c) = 0
   POL(f(x_1, x_2, x_3)) = x_1 + 2*x_2 + x_3
   POL(mark(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   a__f(X1, X2, X3) -> f(X1, X2, X3)




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__f(b, X, c) -> a__f(X, a__c, X)
   a__c -> b
   mark(c) -> a__c
   mark(b) -> b
   a__c -> c

The set Q consists of the following terms:

   mark(c)
   mark(b)
   mark(f(x0, x1, x2))
   a__f(x0, x1, x2)
   a__c


----------------------------------------

(5) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a__c) = 0
   POL(a__f(x_1, x_2, x_3)) = x_1 + 2*x_2 + x_3
   POL(b) = 0
   POL(c) = 0
   POL(mark(x_1)) = 2 + 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   mark(c) -> a__c
   mark(b) -> b




----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__f(b, X, c) -> a__f(X, a__c, X)
   a__c -> b
   a__c -> c

The set Q consists of the following terms:

   mark(c)
   mark(b)
   mark(f(x0, x1, x2))
   a__f(x0, x1, x2)
   a__c


----------------------------------------

(7) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__F(b, X, c) -> A__F(X, a__c, X)
   A__F(b, X, c) -> A__C

The TRS R consists of the following rules:

   a__f(b, X, c) -> a__f(X, a__c, X)
   a__c -> b
   a__c -> c

The set Q consists of the following terms:

   mark(c)
   mark(b)
   mark(f(x0, x1, x2))
   a__f(x0, x1, x2)
   a__c

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 2 less nodes.
----------------------------------------

(10)
TRUE
