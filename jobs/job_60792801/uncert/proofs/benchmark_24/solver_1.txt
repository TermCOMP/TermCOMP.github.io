YES
proof of /home/ff862203/input_cAnCADp6E3.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [EQUIVALENT, 0 ms]
(2) QTRS
(3) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(4) QTRS
(5) DependencyPairsProof [EQUIVALENT, 0 ms]
(6) QDP
(7) QDPOrderProof [EQUIVALENT, 292 ms]
(8) QDP
(9) DependencyGraphProof [EQUIVALENT, 2 ms]
(10) AND
    (11) QDP
        (12) UsableRulesProof [EQUIVALENT, 0 ms]
        (13) QDP
        (14) QReductionProof [EQUIVALENT, 0 ms]
        (15) QDP
        (16) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (17) YES
    (18) QDP
        (19) UsableRulesProof [EQUIVALENT, 0 ms]
        (20) QDP
        (21) QReductionProof [EQUIVALENT, 0 ms]
        (22) QDP
        (23) QDPOrderProof [EQUIVALENT, 0 ms]
        (24) QDP
        (25) PisEmptyProof [EQUIVALENT, 0 ms]
        (26) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a(d(x)) -> d(c(b(a(x))))
   b(c(x)) -> c(d(a(b(x))))
   a(c(x)) -> x
   b(d(x)) -> x

The set Q consists of the following terms:

   b(c(x0))
   a(d(x0))
   b(d(x0))
   a(c(x0))


----------------------------------------

(1) QTRS Reverse (EQUIVALENT)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   d(a(x)) -> a(b(c(d(x))))
   c(b(x)) -> b(a(d(c(x))))
   c(a(x)) -> x
   d(b(x)) -> x

Q is empty.

----------------------------------------

(3) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   d(a(x)) -> a(b(c(d(x))))
   c(b(x)) -> b(a(d(c(x))))
   c(a(x)) -> x
   d(b(x)) -> x

The set Q consists of the following terms:

   d(a(x0))
   c(b(x0))
   c(a(x0))
   d(b(x0))


----------------------------------------

(5) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   D(a(x)) -> C(d(x))
   D(a(x)) -> D(x)
   C(b(x)) -> D(c(x))
   C(b(x)) -> C(x)

The TRS R consists of the following rules:

   d(a(x)) -> a(b(c(d(x))))
   c(b(x)) -> b(a(d(c(x))))
   c(a(x)) -> x
   d(b(x)) -> x

The set Q consists of the following terms:

   d(a(x0))
   c(b(x0))
   c(a(x0))
   d(b(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   C(b(x)) -> D(c(x))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(D(x_1)) =  	[[0A]] 	 +  	[[-I, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(a(x_1)) =  	[[1A], [0A], [0A]] 	 +  	[[1A, 0A, 0A], [0A, 0A, -I], [0A, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(C(x_1)) =  	[[0A]] 	 +  	[[0A, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(d(x_1)) =  	[[0A], [0A], [-I]] 	 +  	[[0A, -I, 0A], [-I, 0A, 0A], [0A, -I, -I]] 	* 	x_1
>>>

   <<<
 POL(b(x_1)) =  	[[0A], [0A], [1A]] 	 +  	[[0A, -I, 0A], [0A, 0A, 0A], [0A, 0A, 1A]] 	* 	x_1
>>>

   <<<
 POL(c(x_1)) =  	[[0A], [-I], [-I]] 	 +  	[[-I, -I, 0A], [-I, 0A, 0A], [-I, -I, 0A]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   d(a(x)) -> a(b(c(d(x))))
   d(b(x)) -> x
   c(b(x)) -> b(a(d(c(x))))
   c(a(x)) -> x


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   D(a(x)) -> C(d(x))
   D(a(x)) -> D(x)
   C(b(x)) -> C(x)

The TRS R consists of the following rules:

   d(a(x)) -> a(b(c(d(x))))
   c(b(x)) -> b(a(d(c(x))))
   c(a(x)) -> x
   d(b(x)) -> x

The set Q consists of the following terms:

   d(a(x0))
   c(b(x0))
   c(a(x0))
   d(b(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 1 less node.
----------------------------------------

(10)
Complex Obligation (AND)

----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(b(x)) -> C(x)

The TRS R consists of the following rules:

   d(a(x)) -> a(b(c(d(x))))
   c(b(x)) -> b(a(d(c(x))))
   c(a(x)) -> x
   d(b(x)) -> x

The set Q consists of the following terms:

   d(a(x0))
   c(b(x0))
   c(a(x0))
   d(b(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(b(x)) -> C(x)

R is empty.
The set Q consists of the following terms:

   d(a(x0))
   c(b(x0))
   c(a(x0))
   d(b(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   d(a(x0))
   c(b(x0))
   c(a(x0))
   d(b(x0))


----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   C(b(x)) -> C(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(16) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*C(b(x)) -> C(x)
The graph contains the following edges 1 > 1


----------------------------------------

(17)
YES

----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   D(a(x)) -> D(x)

The TRS R consists of the following rules:

   d(a(x)) -> a(b(c(d(x))))
   c(b(x)) -> b(a(d(c(x))))
   c(a(x)) -> x
   d(b(x)) -> x

The set Q consists of the following terms:

   d(a(x0))
   c(b(x0))
   c(a(x0))
   d(b(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   D(a(x)) -> D(x)

R is empty.
The set Q consists of the following terms:

   d(a(x0))
   c(b(x0))
   c(a(x0))
   d(b(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   d(a(x0))
   c(b(x0))
   c(a(x0))
   d(b(x0))


----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   D(a(x)) -> D(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   D(a(x)) -> D(x)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial interpretation [POLO]:

   POL(D(x_1)) = x_1
   POL(a(x_1)) = 1 + x_1

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:
none


----------------------------------------

(24)
Obligation:
Q DP problem:
P is empty.
R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(26)
YES
