YES
proof of /home/ff862203/input_Xjotd8M3Ta.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSToCSRProof [SOUND, 0 ms]
(2) CSR
(3) CSDependencyPairsProof [EQUIVALENT, 0 ms]
(4) QCSDP
(5) QCSDependencyGraphProof [EQUIVALENT, 0 ms]
(6) AND
    (7) QCSDP
        (8) QCSDPSubtermProof [EQUIVALENT, 0 ms]
        (9) QCSDP
        (10) PIsEmptyProof [EQUIVALENT, 0 ms]
        (11) YES
    (12) QCSDP
        (13) QCSDPSubtermProof [EQUIVALENT, 0 ms]
        (14) QCSDP
        (15) PIsEmptyProof [EQUIVALENT, 0 ms]
        (16) YES
    (17) QCSDP
        (18) QCSDPSubtermProof [EQUIVALENT, 0 ms]
        (19) QCSDP
        (20) PIsEmptyProof [EQUIVALENT, 0 ms]
        (21) YES
    (22) QCSDP
        (23) QCSDPSubtermProof [EQUIVALENT, 0 ms]
        (24) QCSDP
        (25) PIsEmptyProof [EQUIVALENT, 0 ms]
        (26) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(terms(N)) -> mark(cons(recip(sqr(N)), terms(s(N))))
   active(sqr(0)) -> mark(0)
   active(sqr(s(X))) -> mark(s(add(sqr(X), dbl(X))))
   active(dbl(0)) -> mark(0)
   active(dbl(s(X))) -> mark(s(s(dbl(X))))
   active(add(0, X)) -> mark(X)
   active(add(s(X), Y)) -> mark(s(add(X, Y)))
   active(first(0, X)) -> mark(nil)
   active(first(s(X), cons(Y, Z))) -> mark(cons(Y, first(X, Z)))
   active(half(0)) -> mark(0)
   active(half(s(0))) -> mark(0)
   active(half(s(s(X)))) -> mark(s(half(X)))
   active(half(dbl(X))) -> mark(X)
   active(terms(X)) -> terms(active(X))
   active(cons(X1, X2)) -> cons(active(X1), X2)
   active(recip(X)) -> recip(active(X))
   active(sqr(X)) -> sqr(active(X))
   active(s(X)) -> s(active(X))
   active(add(X1, X2)) -> add(active(X1), X2)
   active(add(X1, X2)) -> add(X1, active(X2))
   active(dbl(X)) -> dbl(active(X))
   active(first(X1, X2)) -> first(active(X1), X2)
   active(first(X1, X2)) -> first(X1, active(X2))
   active(half(X)) -> half(active(X))
   terms(mark(X)) -> mark(terms(X))
   cons(mark(X1), X2) -> mark(cons(X1, X2))
   recip(mark(X)) -> mark(recip(X))
   sqr(mark(X)) -> mark(sqr(X))
   s(mark(X)) -> mark(s(X))
   add(mark(X1), X2) -> mark(add(X1, X2))
   add(X1, mark(X2)) -> mark(add(X1, X2))
   dbl(mark(X)) -> mark(dbl(X))
   first(mark(X1), X2) -> mark(first(X1, X2))
   first(X1, mark(X2)) -> mark(first(X1, X2))
   half(mark(X)) -> mark(half(X))
   proper(terms(X)) -> terms(proper(X))
   proper(cons(X1, X2)) -> cons(proper(X1), proper(X2))
   proper(recip(X)) -> recip(proper(X))
   proper(sqr(X)) -> sqr(proper(X))
   proper(s(X)) -> s(proper(X))
   proper(0) -> ok(0)
   proper(add(X1, X2)) -> add(proper(X1), proper(X2))
   proper(dbl(X)) -> dbl(proper(X))
   proper(first(X1, X2)) -> first(proper(X1), proper(X2))
   proper(nil) -> ok(nil)
   proper(half(X)) -> half(proper(X))
   terms(ok(X)) -> ok(terms(X))
   cons(ok(X1), ok(X2)) -> ok(cons(X1, X2))
   recip(ok(X)) -> ok(recip(X))
   sqr(ok(X)) -> ok(sqr(X))
   s(ok(X)) -> ok(s(X))
   add(ok(X1), ok(X2)) -> ok(add(X1, X2))
   dbl(ok(X)) -> ok(dbl(X))
   first(ok(X1), ok(X2)) -> ok(first(X1, X2))
   half(ok(X)) -> ok(half(X))
   top(mark(X)) -> top(proper(X))
   top(ok(X)) -> top(active(X))

The set Q consists of the following terms:

   add(ok(x0), ok(x1))
   active(half(x0))
   sqr(mark(x0))
   half(mark(x0))
   sqr(ok(x0))
   half(ok(x0))
   dbl(ok(x0))
   proper(cons(x0, x1))
   proper(half(x0))
   active(sqr(x0))
   proper(0)
   s(ok(x0))
   active(recip(x0))
   recip(ok(x0))
   active(cons(x0, x1))
   proper(dbl(x0))
   add(mark(x0), x1)
   dbl(mark(x0))
   active(s(x0))
   cons(ok(x0), ok(x1))
   terms(mark(x0))
   proper(s(x0))
   active(add(x0, x1))
   proper(first(x0, x1))
   first(x0, mark(x1))
   top(mark(x0))
   proper(add(x0, x1))
   cons(mark(x0), x1)
   first(mark(x0), x1)
   active(dbl(x0))
   proper(nil)
   active(terms(x0))
   proper(recip(x0))
   first(ok(x0), ok(x1))
   recip(mark(x0))
   add(x0, mark(x1))
   proper(sqr(x0))
   s(mark(x0))
   terms(ok(x0))
   active(first(x0, x1))
   top(ok(x0))
   proper(terms(x0))


----------------------------------------

(1) QTRSToCSRProof (SOUND)
The following Q TRS is given: Q restricted rewrite system:
The TRS R consists of the following rules:

   active(terms(N)) -> mark(cons(recip(sqr(N)), terms(s(N))))
   active(sqr(0)) -> mark(0)
   active(sqr(s(X))) -> mark(s(add(sqr(X), dbl(X))))
   active(dbl(0)) -> mark(0)
   active(dbl(s(X))) -> mark(s(s(dbl(X))))
   active(add(0, X)) -> mark(X)
   active(add(s(X), Y)) -> mark(s(add(X, Y)))
   active(first(0, X)) -> mark(nil)
   active(first(s(X), cons(Y, Z))) -> mark(cons(Y, first(X, Z)))
   active(half(0)) -> mark(0)
   active(half(s(0))) -> mark(0)
   active(half(s(s(X)))) -> mark(s(half(X)))
   active(half(dbl(X))) -> mark(X)
   active(terms(X)) -> terms(active(X))
   active(cons(X1, X2)) -> cons(active(X1), X2)
   active(recip(X)) -> recip(active(X))
   active(sqr(X)) -> sqr(active(X))
   active(s(X)) -> s(active(X))
   active(add(X1, X2)) -> add(active(X1), X2)
   active(add(X1, X2)) -> add(X1, active(X2))
   active(dbl(X)) -> dbl(active(X))
   active(first(X1, X2)) -> first(active(X1), X2)
   active(first(X1, X2)) -> first(X1, active(X2))
   active(half(X)) -> half(active(X))
   terms(mark(X)) -> mark(terms(X))
   cons(mark(X1), X2) -> mark(cons(X1, X2))
   recip(mark(X)) -> mark(recip(X))
   sqr(mark(X)) -> mark(sqr(X))
   s(mark(X)) -> mark(s(X))
   add(mark(X1), X2) -> mark(add(X1, X2))
   add(X1, mark(X2)) -> mark(add(X1, X2))
   dbl(mark(X)) -> mark(dbl(X))
   first(mark(X1), X2) -> mark(first(X1, X2))
   first(X1, mark(X2)) -> mark(first(X1, X2))
   half(mark(X)) -> mark(half(X))
   proper(terms(X)) -> terms(proper(X))
   proper(cons(X1, X2)) -> cons(proper(X1), proper(X2))
   proper(recip(X)) -> recip(proper(X))
   proper(sqr(X)) -> sqr(proper(X))
   proper(s(X)) -> s(proper(X))
   proper(0) -> ok(0)
   proper(add(X1, X2)) -> add(proper(X1), proper(X2))
   proper(dbl(X)) -> dbl(proper(X))
   proper(first(X1, X2)) -> first(proper(X1), proper(X2))
   proper(nil) -> ok(nil)
   proper(half(X)) -> half(proper(X))
   terms(ok(X)) -> ok(terms(X))
   cons(ok(X1), ok(X2)) -> ok(cons(X1, X2))
   recip(ok(X)) -> ok(recip(X))
   sqr(ok(X)) -> ok(sqr(X))
   s(ok(X)) -> ok(s(X))
   add(ok(X1), ok(X2)) -> ok(add(X1, X2))
   dbl(ok(X)) -> ok(dbl(X))
   first(ok(X1), ok(X2)) -> ok(first(X1, X2))
   half(ok(X)) -> ok(half(X))
   top(mark(X)) -> top(proper(X))
   top(ok(X)) -> top(active(X))

The set Q consists of the following terms:

   add(ok(x0), ok(x1))
   active(half(x0))
   sqr(mark(x0))
   half(mark(x0))
   sqr(ok(x0))
   half(ok(x0))
   dbl(ok(x0))
   proper(cons(x0, x1))
   proper(half(x0))
   active(sqr(x0))
   proper(0)
   s(ok(x0))
   active(recip(x0))
   recip(ok(x0))
   active(cons(x0, x1))
   proper(dbl(x0))
   add(mark(x0), x1)
   dbl(mark(x0))
   active(s(x0))
   cons(ok(x0), ok(x1))
   terms(mark(x0))
   proper(s(x0))
   active(add(x0, x1))
   proper(first(x0, x1))
   first(x0, mark(x1))
   top(mark(x0))
   proper(add(x0, x1))
   cons(mark(x0), x1)
   first(mark(x0), x1)
   active(dbl(x0))
   proper(nil)
   active(terms(x0))
   proper(recip(x0))
   first(ok(x0), ok(x1))
   recip(mark(x0))
   add(x0, mark(x1))
   proper(sqr(x0))
   s(mark(x0))
   terms(ok(x0))
   active(first(x0, x1))
   top(ok(x0))
   proper(terms(x0))

Special symbols used for the transformation (see [GM04]):
top: top_1, active: active_1, mark: mark_1, ok: ok_1, proper: proper_1
The replacement map contains the following entries:

terms: {1}
cons: {1}
recip: {1}
sqr: {1}
s: {1}
0: empty set
add: {1, 2}
dbl: {1}
first: {1, 2}
nil: empty set
half: {1}
The QTRS contained just a subset of rules created by the complete Giesl-Middeldorp transformation. Therefore, the inverse transformation is sound, but not necessarily complete.
----------------------------------------

(2)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   terms(N) -> cons(recip(sqr(N)), terms(s(N)))
   sqr(0) -> 0
   sqr(s(X)) -> s(add(sqr(X), dbl(X)))
   dbl(0) -> 0
   dbl(s(X)) -> s(s(dbl(X)))
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   first(0, X) -> nil
   first(s(X), cons(Y, Z)) -> cons(Y, first(X, Z))
   half(0) -> 0
   half(s(0)) -> 0
   half(s(s(X))) -> s(half(X))
   half(dbl(X)) -> X

The replacement map contains the following entries:

terms: {1}
cons: {1}
recip: {1}
sqr: {1}
s: {1}
0: empty set
add: {1, 2}
dbl: {1}
first: {1, 2}
nil: empty set
half: {1}

----------------------------------------

(3) CSDependencyPairsProof (EQUIVALENT)
Using Improved CS-DPs [LPAR08] we result in the following initial Q-CSDP problem.
----------------------------------------

(4)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {terms_1, recip_1, sqr_1, s_1, add_2, dbl_1, first_2, half_1, SQR_1, TERMS_1, ADD_2, DBL_1, HALF_1} are replacing on all positions.
For all symbols f in {cons_2} we have mu(f) = {1}.

The ordinary context-sensitive dependency pairs DP_o are:
   TERMS(N) -> SQR(N)
   SQR(s(X)) -> ADD(sqr(X), dbl(X))
   SQR(s(X)) -> SQR(X)
   SQR(s(X)) -> DBL(X)
   DBL(s(X)) -> DBL(X)
   ADD(s(X), Y) -> ADD(X, Y)
   HALF(s(s(X))) -> HALF(X)

The TRS R consists of the following rules:

   terms(N) -> cons(recip(sqr(N)), terms(s(N)))
   sqr(0) -> 0
   sqr(s(X)) -> s(add(sqr(X), dbl(X)))
   dbl(0) -> 0
   dbl(s(X)) -> s(s(dbl(X)))
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   first(0, X) -> nil
   first(s(X), cons(Y, Z)) -> cons(Y, first(X, Z))
   half(0) -> 0
   half(s(0)) -> 0
   half(s(s(X))) -> s(half(X))
   half(dbl(X)) -> X

Q is empty.

----------------------------------------

(5) QCSDependencyGraphProof (EQUIVALENT)
The approximation of the Context-Sensitive Dependency Graph [LPAR08] contains 4 SCCs with 3 less nodes.

----------------------------------------

(6)
Complex Obligation (AND)

----------------------------------------

(7)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {terms_1, recip_1, sqr_1, s_1, add_2, dbl_1, first_2, half_1, HALF_1} are replacing on all positions.
For all symbols f in {cons_2} we have mu(f) = {1}.

The TRS P consists of the following rules:

   HALF(s(s(X))) -> HALF(X)

The TRS R consists of the following rules:

   terms(N) -> cons(recip(sqr(N)), terms(s(N)))
   sqr(0) -> 0
   sqr(s(X)) -> s(add(sqr(X), dbl(X)))
   dbl(0) -> 0
   dbl(s(X)) -> s(s(dbl(X)))
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   first(0, X) -> nil
   first(s(X), cons(Y, Z)) -> cons(Y, first(X, Z))
   half(0) -> 0
   half(s(0)) -> 0
   half(s(s(X))) -> s(half(X))
   half(dbl(X)) -> X

Q is empty.

----------------------------------------

(8) QCSDPSubtermProof (EQUIVALENT)
We use the subterm processor [DA_EMMES].


The following pairs can be oriented strictly and are deleted.

   HALF(s(s(X))) -> HALF(X)
The remaining pairs can at least be oriented weakly.
none
Used ordering:  Combined order from the following AFS and order.
HALF(x1)  =  x1


Subterm Order

----------------------------------------

(9)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {terms_1, recip_1, sqr_1, s_1, add_2, dbl_1, first_2, half_1} are replacing on all positions.
For all symbols f in {cons_2} we have mu(f) = {1}.

The TRS P consists of the following rules:
none

The TRS R consists of the following rules:

   terms(N) -> cons(recip(sqr(N)), terms(s(N)))
   sqr(0) -> 0
   sqr(s(X)) -> s(add(sqr(X), dbl(X)))
   dbl(0) -> 0
   dbl(s(X)) -> s(s(dbl(X)))
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   first(0, X) -> nil
   first(s(X), cons(Y, Z)) -> cons(Y, first(X, Z))
   half(0) -> 0
   half(s(0)) -> 0
   half(s(s(X))) -> s(half(X))
   half(dbl(X)) -> X

Q is empty.

----------------------------------------

(10) PIsEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R,mu)-chain.
----------------------------------------

(11)
YES

----------------------------------------

(12)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {terms_1, recip_1, sqr_1, s_1, add_2, dbl_1, first_2, half_1, DBL_1} are replacing on all positions.
For all symbols f in {cons_2} we have mu(f) = {1}.

The TRS P consists of the following rules:

   DBL(s(X)) -> DBL(X)

The TRS R consists of the following rules:

   terms(N) -> cons(recip(sqr(N)), terms(s(N)))
   sqr(0) -> 0
   sqr(s(X)) -> s(add(sqr(X), dbl(X)))
   dbl(0) -> 0
   dbl(s(X)) -> s(s(dbl(X)))
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   first(0, X) -> nil
   first(s(X), cons(Y, Z)) -> cons(Y, first(X, Z))
   half(0) -> 0
   half(s(0)) -> 0
   half(s(s(X))) -> s(half(X))
   half(dbl(X)) -> X

Q is empty.

----------------------------------------

(13) QCSDPSubtermProof (EQUIVALENT)
We use the subterm processor [DA_EMMES].


The following pairs can be oriented strictly and are deleted.

   DBL(s(X)) -> DBL(X)
The remaining pairs can at least be oriented weakly.
none
Used ordering:  Combined order from the following AFS and order.
DBL(x1)  =  x1


Subterm Order

----------------------------------------

(14)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {terms_1, recip_1, sqr_1, s_1, add_2, dbl_1, first_2, half_1} are replacing on all positions.
For all symbols f in {cons_2} we have mu(f) = {1}.

The TRS P consists of the following rules:
none

The TRS R consists of the following rules:

   terms(N) -> cons(recip(sqr(N)), terms(s(N)))
   sqr(0) -> 0
   sqr(s(X)) -> s(add(sqr(X), dbl(X)))
   dbl(0) -> 0
   dbl(s(X)) -> s(s(dbl(X)))
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   first(0, X) -> nil
   first(s(X), cons(Y, Z)) -> cons(Y, first(X, Z))
   half(0) -> 0
   half(s(0)) -> 0
   half(s(s(X))) -> s(half(X))
   half(dbl(X)) -> X

Q is empty.

----------------------------------------

(15) PIsEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R,mu)-chain.
----------------------------------------

(16)
YES

----------------------------------------

(17)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {terms_1, recip_1, sqr_1, s_1, add_2, dbl_1, first_2, half_1, ADD_2} are replacing on all positions.
For all symbols f in {cons_2} we have mu(f) = {1}.

The TRS P consists of the following rules:

   ADD(s(X), Y) -> ADD(X, Y)

The TRS R consists of the following rules:

   terms(N) -> cons(recip(sqr(N)), terms(s(N)))
   sqr(0) -> 0
   sqr(s(X)) -> s(add(sqr(X), dbl(X)))
   dbl(0) -> 0
   dbl(s(X)) -> s(s(dbl(X)))
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   first(0, X) -> nil
   first(s(X), cons(Y, Z)) -> cons(Y, first(X, Z))
   half(0) -> 0
   half(s(0)) -> 0
   half(s(s(X))) -> s(half(X))
   half(dbl(X)) -> X

Q is empty.

----------------------------------------

(18) QCSDPSubtermProof (EQUIVALENT)
We use the subterm processor [DA_EMMES].


The following pairs can be oriented strictly and are deleted.

   ADD(s(X), Y) -> ADD(X, Y)
The remaining pairs can at least be oriented weakly.
none
Used ordering:  Combined order from the following AFS and order.
ADD(x1, x2)  =  x1


Subterm Order

----------------------------------------

(19)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {terms_1, recip_1, sqr_1, s_1, add_2, dbl_1, first_2, half_1} are replacing on all positions.
For all symbols f in {cons_2} we have mu(f) = {1}.

The TRS P consists of the following rules:
none

The TRS R consists of the following rules:

   terms(N) -> cons(recip(sqr(N)), terms(s(N)))
   sqr(0) -> 0
   sqr(s(X)) -> s(add(sqr(X), dbl(X)))
   dbl(0) -> 0
   dbl(s(X)) -> s(s(dbl(X)))
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   first(0, X) -> nil
   first(s(X), cons(Y, Z)) -> cons(Y, first(X, Z))
   half(0) -> 0
   half(s(0)) -> 0
   half(s(s(X))) -> s(half(X))
   half(dbl(X)) -> X

Q is empty.

----------------------------------------

(20) PIsEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R,mu)-chain.
----------------------------------------

(21)
YES

----------------------------------------

(22)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {terms_1, recip_1, sqr_1, s_1, add_2, dbl_1, first_2, half_1, SQR_1} are replacing on all positions.
For all symbols f in {cons_2} we have mu(f) = {1}.

The TRS P consists of the following rules:

   SQR(s(X)) -> SQR(X)

The TRS R consists of the following rules:

   terms(N) -> cons(recip(sqr(N)), terms(s(N)))
   sqr(0) -> 0
   sqr(s(X)) -> s(add(sqr(X), dbl(X)))
   dbl(0) -> 0
   dbl(s(X)) -> s(s(dbl(X)))
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   first(0, X) -> nil
   first(s(X), cons(Y, Z)) -> cons(Y, first(X, Z))
   half(0) -> 0
   half(s(0)) -> 0
   half(s(s(X))) -> s(half(X))
   half(dbl(X)) -> X

Q is empty.

----------------------------------------

(23) QCSDPSubtermProof (EQUIVALENT)
We use the subterm processor [DA_EMMES].


The following pairs can be oriented strictly and are deleted.

   SQR(s(X)) -> SQR(X)
The remaining pairs can at least be oriented weakly.
none
Used ordering:  Combined order from the following AFS and order.
SQR(x1)  =  x1


Subterm Order

----------------------------------------

(24)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {terms_1, recip_1, sqr_1, s_1, add_2, dbl_1, first_2, half_1} are replacing on all positions.
For all symbols f in {cons_2} we have mu(f) = {1}.

The TRS P consists of the following rules:
none

The TRS R consists of the following rules:

   terms(N) -> cons(recip(sqr(N)), terms(s(N)))
   sqr(0) -> 0
   sqr(s(X)) -> s(add(sqr(X), dbl(X)))
   dbl(0) -> 0
   dbl(s(X)) -> s(s(dbl(X)))
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   first(0, X) -> nil
   first(s(X), cons(Y, Z)) -> cons(Y, first(X, Z))
   half(0) -> 0
   half(s(0)) -> 0
   half(s(s(X))) -> s(half(X))
   half(dbl(X)) -> X

Q is empty.

----------------------------------------

(25) PIsEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R,mu)-chain.
----------------------------------------

(26)
YES
