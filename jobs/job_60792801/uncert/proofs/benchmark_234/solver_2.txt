YES

Problem 1: 

(VAR vu95NonEmpty X)
(RULES
active(f(X)) -> mark(g(h(f(X))))
f(active(X)) -> f(X)
f(mark(X)) -> f(X)
g(active(X)) -> g(X)
g(mark(X)) -> g(X)
h(active(X)) -> h(X)
h(mark(X)) -> h(X)
mark(f(X)) -> active(f(mark(X)))
mark(g(X)) -> active(g(X))
mark(h(X)) -> active(h(mark(X)))
)
 
(STRATEGY INNERMOST)

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ACTIVE(f(X)) -> G(h(f(X)))
 ACTIVE(f(X)) -> H(f(X))
 ACTIVE(f(X)) -> MARK(g(h(f(X))))
 F(active(X)) -> F(X)
 F(mark(X)) -> F(X)
 G(active(X)) -> G(X)
 G(mark(X)) -> G(X)
 H(active(X)) -> H(X)
 H(mark(X)) -> H(X)
 MARK(f(X)) -> ACTIVE(f(mark(X)))
 MARK(f(X)) -> F(mark(X))
 MARK(f(X)) -> MARK(X)
 MARK(g(X)) -> ACTIVE(g(X))
 MARK(h(X)) -> ACTIVE(h(mark(X)))
 MARK(h(X)) -> H(mark(X))
 MARK(h(X)) -> MARK(X)
-> Rules:
 active(f(X)) -> mark(g(h(f(X))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVE(f(X)) -> G(h(f(X)))
 ACTIVE(f(X)) -> H(f(X))
 ACTIVE(f(X)) -> MARK(g(h(f(X))))
 F(active(X)) -> F(X)
 F(mark(X)) -> F(X)
 G(active(X)) -> G(X)
 G(mark(X)) -> G(X)
 H(active(X)) -> H(X)
 H(mark(X)) -> H(X)
 MARK(f(X)) -> ACTIVE(f(mark(X)))
 MARK(f(X)) -> F(mark(X))
 MARK(f(X)) -> MARK(X)
 MARK(g(X)) -> ACTIVE(g(X))
 MARK(h(X)) -> ACTIVE(h(mark(X)))
 MARK(h(X)) -> H(mark(X))
 MARK(h(X)) -> MARK(X)
-> Rules:
 active(f(X)) -> mark(g(h(f(X))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 H(active(X)) -> H(X)
 H(mark(X)) -> H(X)
->->-> Rules:
 active(f(X)) -> mark(g(h(f(X))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->->Cycle:
->->-> Pairs:
 G(active(X)) -> G(X)
 G(mark(X)) -> G(X)
->->-> Rules:
 active(f(X)) -> mark(g(h(f(X))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->->Cycle:
->->-> Pairs:
 F(active(X)) -> F(X)
 F(mark(X)) -> F(X)
->->-> Rules:
 active(f(X)) -> mark(g(h(f(X))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->->Cycle:
->->-> Pairs:
 MARK(f(X)) -> MARK(X)
 MARK(h(X)) -> MARK(X)
->->-> Rules:
 active(f(X)) -> mark(g(h(f(X))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))


The problem is decomposed in 4 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 H(active(X)) -> H(X)
 H(mark(X)) -> H(X)
-> Rules:
 active(f(X)) -> mark(g(h(f(X))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Projection:
 pi(H) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(f(X)) -> mark(g(h(f(X))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 G(active(X)) -> G(X)
 G(mark(X)) -> G(X)
-> Rules:
 active(f(X)) -> mark(g(h(f(X))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Projection:
 pi(G) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(f(X)) -> mark(g(h(f(X))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> Pairs:
 F(active(X)) -> F(X)
 F(mark(X)) -> F(X)
-> Rules:
 active(f(X)) -> mark(g(h(f(X))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Projection:
 pi(F) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(f(X)) -> mark(g(h(f(X))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Subterm Processor:
-> Pairs:
 MARK(f(X)) -> MARK(X)
 MARK(h(X)) -> MARK(X)
-> Rules:
 active(f(X)) -> mark(g(h(f(X))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Projection:
 pi(MARK) = 1

Problem 1.4: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(f(X)) -> mark(g(h(f(X))))
 f(active(X)) -> f(X)
 f(mark(X)) -> f(X)
 g(active(X)) -> g(X)
 g(mark(X)) -> g(X)
 h(active(X)) -> h(X)
 h(mark(X)) -> h(X)
 mark(f(X)) -> active(f(mark(X)))
 mark(g(X)) -> active(g(X))
 mark(h(X)) -> active(h(mark(X)))
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
