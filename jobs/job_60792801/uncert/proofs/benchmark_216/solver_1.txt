YES
proof of /home/ff862203/input_XcaYUFS50m.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSToCSRProof [SOUND, 0 ms]
(2) CSR
(3) CSRInnermostProof [EQUIVALENT, 0 ms]
(4) CSR
(5) CSDependencyPairsProof [EQUIVALENT, 0 ms]
(6) QCSDP
(7) QCSDependencyGraphProof [EQUIVALENT, 0 ms]
(8) AND
    (9) QCSDP
        (10) QCSDPSubtermProof [EQUIVALENT, 0 ms]
        (11) QCSDP
        (12) PIsEmptyProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QCSDP
        (15) QCSDPSubtermProof [EQUIVALENT, 0 ms]
        (16) QCSDP
        (17) PIsEmptyProof [EQUIVALENT, 0 ms]
        (18) YES
    (19) QCSDP
        (20) QCSDPSubtermProof [EQUIVALENT, 0 ms]
        (21) QCSDP
        (22) PIsEmptyProof [EQUIVALENT, 0 ms]
        (23) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   active(fib(N)) -> mark(sel(N, fib1(s(0), s(0))))
   active(fib1(X, Y)) -> mark(cons(X, fib1(Y, add(X, Y))))
   active(add(0, X)) -> mark(X)
   active(add(s(X), Y)) -> mark(s(add(X, Y)))
   active(sel(0, cons(X, XS))) -> mark(X)
   active(sel(s(N), cons(X, XS))) -> mark(sel(N, XS))
   active(fib(X)) -> fib(active(X))
   active(sel(X1, X2)) -> sel(active(X1), X2)
   active(sel(X1, X2)) -> sel(X1, active(X2))
   active(fib1(X1, X2)) -> fib1(active(X1), X2)
   active(fib1(X1, X2)) -> fib1(X1, active(X2))
   active(s(X)) -> s(active(X))
   active(cons(X1, X2)) -> cons(active(X1), X2)
   active(add(X1, X2)) -> add(active(X1), X2)
   active(add(X1, X2)) -> add(X1, active(X2))
   fib(mark(X)) -> mark(fib(X))
   sel(mark(X1), X2) -> mark(sel(X1, X2))
   sel(X1, mark(X2)) -> mark(sel(X1, X2))
   fib1(mark(X1), X2) -> mark(fib1(X1, X2))
   fib1(X1, mark(X2)) -> mark(fib1(X1, X2))
   s(mark(X)) -> mark(s(X))
   cons(mark(X1), X2) -> mark(cons(X1, X2))
   add(mark(X1), X2) -> mark(add(X1, X2))
   add(X1, mark(X2)) -> mark(add(X1, X2))
   proper(fib(X)) -> fib(proper(X))
   proper(sel(X1, X2)) -> sel(proper(X1), proper(X2))
   proper(fib1(X1, X2)) -> fib1(proper(X1), proper(X2))
   proper(s(X)) -> s(proper(X))
   proper(0) -> ok(0)
   proper(cons(X1, X2)) -> cons(proper(X1), proper(X2))
   proper(add(X1, X2)) -> add(proper(X1), proper(X2))
   fib(ok(X)) -> ok(fib(X))
   sel(ok(X1), ok(X2)) -> ok(sel(X1, X2))
   fib1(ok(X1), ok(X2)) -> ok(fib1(X1, X2))
   s(ok(X)) -> ok(s(X))
   cons(ok(X1), ok(X2)) -> ok(cons(X1, X2))
   add(ok(X1), ok(X2)) -> ok(add(X1, X2))
   top(mark(X)) -> top(proper(X))
   top(ok(X)) -> top(active(X))

The set Q consists of the following terms:

   add(ok(x0), ok(x1))
   active(add(x0, x1))
   fib1(ok(x0), ok(x1))
   proper(fib1(x0, x1))
   top(mark(x0))
   proper(cons(x0, x1))
   proper(add(x0, x1))
   cons(mark(x0), x1)
   active(fib(x0))
   active(sel(x0, x1))
   active(fib1(x0, x1))
   fib(mark(x0))
   proper(sel(x0, x1))
   proper(0)
   s(ok(x0))
   sel(ok(x0), ok(x1))
   fib1(x0, mark(x1))
   active(cons(x0, x1))
   add(x0, mark(x1))
   sel(mark(x0), x1)
   add(mark(x0), x1)
   fib1(mark(x0), x1)
   active(s(x0))
   fib(ok(x0))
   s(mark(x0))
   cons(ok(x0), ok(x1))
   proper(fib(x0))
   top(ok(x0))
   sel(x0, mark(x1))
   proper(s(x0))


----------------------------------------

(1) QTRSToCSRProof (SOUND)
The following Q TRS is given: Q restricted rewrite system:
The TRS R consists of the following rules:

   active(fib(N)) -> mark(sel(N, fib1(s(0), s(0))))
   active(fib1(X, Y)) -> mark(cons(X, fib1(Y, add(X, Y))))
   active(add(0, X)) -> mark(X)
   active(add(s(X), Y)) -> mark(s(add(X, Y)))
   active(sel(0, cons(X, XS))) -> mark(X)
   active(sel(s(N), cons(X, XS))) -> mark(sel(N, XS))
   active(fib(X)) -> fib(active(X))
   active(sel(X1, X2)) -> sel(active(X1), X2)
   active(sel(X1, X2)) -> sel(X1, active(X2))
   active(fib1(X1, X2)) -> fib1(active(X1), X2)
   active(fib1(X1, X2)) -> fib1(X1, active(X2))
   active(s(X)) -> s(active(X))
   active(cons(X1, X2)) -> cons(active(X1), X2)
   active(add(X1, X2)) -> add(active(X1), X2)
   active(add(X1, X2)) -> add(X1, active(X2))
   fib(mark(X)) -> mark(fib(X))
   sel(mark(X1), X2) -> mark(sel(X1, X2))
   sel(X1, mark(X2)) -> mark(sel(X1, X2))
   fib1(mark(X1), X2) -> mark(fib1(X1, X2))
   fib1(X1, mark(X2)) -> mark(fib1(X1, X2))
   s(mark(X)) -> mark(s(X))
   cons(mark(X1), X2) -> mark(cons(X1, X2))
   add(mark(X1), X2) -> mark(add(X1, X2))
   add(X1, mark(X2)) -> mark(add(X1, X2))
   proper(fib(X)) -> fib(proper(X))
   proper(sel(X1, X2)) -> sel(proper(X1), proper(X2))
   proper(fib1(X1, X2)) -> fib1(proper(X1), proper(X2))
   proper(s(X)) -> s(proper(X))
   proper(0) -> ok(0)
   proper(cons(X1, X2)) -> cons(proper(X1), proper(X2))
   proper(add(X1, X2)) -> add(proper(X1), proper(X2))
   fib(ok(X)) -> ok(fib(X))
   sel(ok(X1), ok(X2)) -> ok(sel(X1, X2))
   fib1(ok(X1), ok(X2)) -> ok(fib1(X1, X2))
   s(ok(X)) -> ok(s(X))
   cons(ok(X1), ok(X2)) -> ok(cons(X1, X2))
   add(ok(X1), ok(X2)) -> ok(add(X1, X2))
   top(mark(X)) -> top(proper(X))
   top(ok(X)) -> top(active(X))

The set Q consists of the following terms:

   add(ok(x0), ok(x1))
   active(add(x0, x1))
   fib1(ok(x0), ok(x1))
   proper(fib1(x0, x1))
   top(mark(x0))
   proper(cons(x0, x1))
   proper(add(x0, x1))
   cons(mark(x0), x1)
   active(fib(x0))
   active(sel(x0, x1))
   active(fib1(x0, x1))
   fib(mark(x0))
   proper(sel(x0, x1))
   proper(0)
   s(ok(x0))
   sel(ok(x0), ok(x1))
   fib1(x0, mark(x1))
   active(cons(x0, x1))
   add(x0, mark(x1))
   sel(mark(x0), x1)
   add(mark(x0), x1)
   fib1(mark(x0), x1)
   active(s(x0))
   fib(ok(x0))
   s(mark(x0))
   cons(ok(x0), ok(x1))
   proper(fib(x0))
   top(ok(x0))
   sel(x0, mark(x1))
   proper(s(x0))

Special symbols used for the transformation (see [GM04]):
top: top_1, active: active_1, mark: mark_1, ok: ok_1, proper: proper_1
The replacement map contains the following entries:

fib: {1}
sel: {1, 2}
fib1: {1, 2}
s: {1}
0: empty set
cons: {1}
add: {1, 2}
The QTRS contained just a subset of rules created by the complete Giesl-Middeldorp transformation. Therefore, the inverse transformation is sound, but not necessarily complete.
----------------------------------------

(2)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   fib(N) -> sel(N, fib1(s(0), s(0)))
   fib1(X, Y) -> cons(X, fib1(Y, add(X, Y)))
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   sel(0, cons(X, XS)) -> X
   sel(s(N), cons(X, XS)) -> sel(N, XS)

The replacement map contains the following entries:

fib: {1}
sel: {1, 2}
fib1: {1, 2}
s: {1}
0: empty set
cons: {1}
add: {1, 2}

----------------------------------------

(3) CSRInnermostProof (EQUIVALENT)
The CSR is orthogonal. By [CS_Inn] we can switch to innermost.
----------------------------------------

(4)
Obligation:
Context-sensitive rewrite system:
The TRS R consists of the following rules:

   fib(N) -> sel(N, fib1(s(0), s(0)))
   fib1(X, Y) -> cons(X, fib1(Y, add(X, Y)))
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   sel(0, cons(X, XS)) -> X
   sel(s(N), cons(X, XS)) -> sel(N, XS)

The replacement map contains the following entries:

fib: {1}
sel: {1, 2}
fib1: {1, 2}
s: {1}
0: empty set
cons: {1}
add: {1, 2}


Innermost Strategy.

----------------------------------------

(5) CSDependencyPairsProof (EQUIVALENT)
Using Improved CS-DPs [LPAR08] we result in the following initial Q-CSDP problem.
----------------------------------------

(6)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {fib_1, sel_2, fib1_2, s_1, add_2, SEL_2, FIB_1, FIB1_2, ADD_2} are replacing on all positions.
For all symbols f in {cons_2} we have mu(f) = {1}.
The symbols in {U_1} are not replacing on any position.

The ordinary context-sensitive dependency pairs DP_o are:
   FIB(N) -> SEL(N, fib1(s(0), s(0)))
   FIB(N) -> FIB1(s(0), s(0))
   ADD(s(X), Y) -> ADD(X, Y)
   SEL(s(N), cons(X, XS)) -> SEL(N, XS)

The collapsing dependency pairs are DP_c:
   SEL(s(N), cons(X, XS)) -> XS


The hidden terms of R are:

   fib1(x0, add(x1, x0))
   add(x0, x1)

Every hiding context is built from:
   aprove.DPFramework.CSDPProblem.QCSDPProblem$1@9a2912c
   aprove.DPFramework.CSDPProblem.QCSDPProblem$1@463f09f6

Hence, the new unhiding pairs DP_u are :
   SEL(s(N), cons(X, XS)) -> U(XS)
   U(add(x_0, x_1)) -> U(x_0)
   U(add(x_0, x_1)) -> U(x_1)
   U(fib1(x_0, x_1)) -> U(x_0)
   U(fib1(x_0, x_1)) -> U(x_1)
   U(fib1(x0, add(x1, x0))) -> FIB1(x0, add(x1, x0))
   U(add(x0, x1)) -> ADD(x0, x1)

The TRS R consists of the following rules:

   fib(N) -> sel(N, fib1(s(0), s(0)))
   fib1(X, Y) -> cons(X, fib1(Y, add(X, Y)))
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   sel(0, cons(X, XS)) -> X
   sel(s(N), cons(X, XS)) -> sel(N, XS)

The set Q consists of the following terms:

   fib(x0)
   fib1(x0, x1)
   add(0, x0)
   add(s(x0), x1)
   sel(0, cons(x0, x1))
   sel(s(x0), cons(x1, x2))


----------------------------------------

(7) QCSDependencyGraphProof (EQUIVALENT)
The approximation of the Context-Sensitive Dependency Graph [LPAR08] contains 3 SCCs with 4 less nodes.

----------------------------------------

(8)
Complex Obligation (AND)

----------------------------------------

(9)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {fib_1, sel_2, fib1_2, s_1, add_2, ADD_2} are replacing on all positions.
For all symbols f in {cons_2} we have mu(f) = {1}.

The TRS P consists of the following rules:

   ADD(s(X), Y) -> ADD(X, Y)

The TRS R consists of the following rules:

   fib(N) -> sel(N, fib1(s(0), s(0)))
   fib1(X, Y) -> cons(X, fib1(Y, add(X, Y)))
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   sel(0, cons(X, XS)) -> X
   sel(s(N), cons(X, XS)) -> sel(N, XS)

The set Q consists of the following terms:

   fib(x0)
   fib1(x0, x1)
   add(0, x0)
   add(s(x0), x1)
   sel(0, cons(x0, x1))
   sel(s(x0), cons(x1, x2))


----------------------------------------

(10) QCSDPSubtermProof (EQUIVALENT)
We use the subterm processor [DA_EMMES].


The following pairs can be oriented strictly and are deleted.

   ADD(s(X), Y) -> ADD(X, Y)
The remaining pairs can at least be oriented weakly.
none
Used ordering:  Combined order from the following AFS and order.
ADD(x1, x2)  =  x1


Subterm Order

----------------------------------------

(11)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {fib_1, sel_2, fib1_2, s_1, add_2} are replacing on all positions.
For all symbols f in {cons_2} we have mu(f) = {1}.

The TRS P consists of the following rules:
none

The TRS R consists of the following rules:

   fib(N) -> sel(N, fib1(s(0), s(0)))
   fib1(X, Y) -> cons(X, fib1(Y, add(X, Y)))
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   sel(0, cons(X, XS)) -> X
   sel(s(N), cons(X, XS)) -> sel(N, XS)

The set Q consists of the following terms:

   fib(x0)
   fib1(x0, x1)
   add(0, x0)
   add(s(x0), x1)
   sel(0, cons(x0, x1))
   sel(s(x0), cons(x1, x2))


----------------------------------------

(12) PIsEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R,mu)-chain.
----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {fib_1, sel_2, fib1_2, s_1, add_2} are replacing on all positions.
For all symbols f in {cons_2} we have mu(f) = {1}.
The symbols in {U_1} are not replacing on any position.

The TRS P consists of the following rules:

   U(add(x_0, x_1)) -> U(x_0)
   U(add(x_0, x_1)) -> U(x_1)
   U(fib1(x_0, x_1)) -> U(x_0)
   U(fib1(x_0, x_1)) -> U(x_1)

The TRS R consists of the following rules:

   fib(N) -> sel(N, fib1(s(0), s(0)))
   fib1(X, Y) -> cons(X, fib1(Y, add(X, Y)))
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   sel(0, cons(X, XS)) -> X
   sel(s(N), cons(X, XS)) -> sel(N, XS)

The set Q consists of the following terms:

   fib(x0)
   fib1(x0, x1)
   add(0, x0)
   add(s(x0), x1)
   sel(0, cons(x0, x1))
   sel(s(x0), cons(x1, x2))


----------------------------------------

(15) QCSDPSubtermProof (EQUIVALENT)
We use the subterm processor [DA_EMMES].


The following pairs can be oriented strictly and are deleted.

   U(add(x_0, x_1)) -> U(x_0)
   U(add(x_0, x_1)) -> U(x_1)
   U(fib1(x_0, x_1)) -> U(x_0)
   U(fib1(x_0, x_1)) -> U(x_1)
The remaining pairs can at least be oriented weakly.
none
Used ordering:  Combined order from the following AFS and order.
U(x1)  =  x1


Subterm Order

----------------------------------------

(16)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {fib_1, sel_2, fib1_2, s_1, add_2} are replacing on all positions.
For all symbols f in {cons_2} we have mu(f) = {1}.

The TRS P consists of the following rules:
none

The TRS R consists of the following rules:

   fib(N) -> sel(N, fib1(s(0), s(0)))
   fib1(X, Y) -> cons(X, fib1(Y, add(X, Y)))
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   sel(0, cons(X, XS)) -> X
   sel(s(N), cons(X, XS)) -> sel(N, XS)

The set Q consists of the following terms:

   fib(x0)
   fib1(x0, x1)
   add(0, x0)
   add(s(x0), x1)
   sel(0, cons(x0, x1))
   sel(s(x0), cons(x1, x2))


----------------------------------------

(17) PIsEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R,mu)-chain.
----------------------------------------

(18)
YES

----------------------------------------

(19)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {fib_1, sel_2, fib1_2, s_1, add_2, SEL_2} are replacing on all positions.
For all symbols f in {cons_2} we have mu(f) = {1}.

The TRS P consists of the following rules:

   SEL(s(N), cons(X, XS)) -> SEL(N, XS)

The TRS R consists of the following rules:

   fib(N) -> sel(N, fib1(s(0), s(0)))
   fib1(X, Y) -> cons(X, fib1(Y, add(X, Y)))
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   sel(0, cons(X, XS)) -> X
   sel(s(N), cons(X, XS)) -> sel(N, XS)

The set Q consists of the following terms:

   fib(x0)
   fib1(x0, x1)
   add(0, x0)
   add(s(x0), x1)
   sel(0, cons(x0, x1))
   sel(s(x0), cons(x1, x2))


----------------------------------------

(20) QCSDPSubtermProof (EQUIVALENT)
We use the subterm processor [DA_EMMES].


The following pairs can be oriented strictly and are deleted.

   SEL(s(N), cons(X, XS)) -> SEL(N, XS)
The remaining pairs can at least be oriented weakly.
none
Used ordering:  Combined order from the following AFS and order.
SEL(x1, x2)  =  x1


Subterm Order

----------------------------------------

(21)
Obligation:
Q-restricted context-sensitive dependency pair problem:
The symbols in {fib_1, sel_2, fib1_2, s_1, add_2} are replacing on all positions.
For all symbols f in {cons_2} we have mu(f) = {1}.

The TRS P consists of the following rules:
none

The TRS R consists of the following rules:

   fib(N) -> sel(N, fib1(s(0), s(0)))
   fib1(X, Y) -> cons(X, fib1(Y, add(X, Y)))
   add(0, X) -> X
   add(s(X), Y) -> s(add(X, Y))
   sel(0, cons(X, XS)) -> X
   sel(s(N), cons(X, XS)) -> sel(N, XS)

The set Q consists of the following terms:

   fib(x0)
   fib1(x0, x1)
   add(0, x0)
   add(s(x0), x1)
   sel(0, cons(x0, x1))
   sel(s(x0), cons(x1, x2))


----------------------------------------

(22) PIsEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R,mu)-chain.
----------------------------------------

(23)
YES
