YES

Problem 1: 

(VAR vu95NonEmpty I P V V1 V2 X X1 X2 Y Z)
(RULES
au95u95U11(tt) -> tt
au95u95U11(X) -> U11(X)
au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
au95u95U21(X1,X2) -> U21(X1,X2)
au95u95U22(tt) -> tt
au95u95U22(X) -> U22(X)
au95u95U31(tt) -> tt
au95u95U31(X) -> U31(X)
au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
au95u95U41(X1,X2) -> U41(X1,X2)
au95u95U42(tt) -> tt
au95u95U42(X) -> U42(X)
au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
au95u95U51(X1,X2) -> U51(X1,X2)
au95u95U52(tt) -> tt
au95u95U52(X) -> U52(X)
au95u95U61(tt) -> tt
au95u95U61(X) -> U61(X)
au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
au95u95U71(X1,X2) -> U71(X1,X2)
au95u95U72(tt) -> tt
au95u95U72(X) -> U72(X)
au95u95U81(tt) -> tt
au95u95U81(X) -> U81(X)
au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
au95u95u95u95(nil,X) -> mark(X)
au95u95u95u95(X,nil) -> mark(X)
au95u95u95u95(X1,X2) -> u95u95(X1,X2)
au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
au95u95isList(nil) -> tt
au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
au95u95isList(X) -> isList(X)
au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
au95u95isNeList(X) -> isNeList(X)
au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
au95u95isNePal(X) -> isNePal(X)
au95u95isPal(nil) -> tt
au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
au95u95isPal(X) -> isPal(X)
au95u95isQid(a) -> tt
au95u95isQid(e) -> tt
au95u95isQid(i) -> tt
au95u95isQid(o) -> tt
au95u95isQid(u) -> tt
au95u95isQid(X) -> isQid(X)
mark(U11(X)) -> au95u95U11(mark(X))
mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
mark(U22(X)) -> au95u95U22(mark(X))
mark(U31(X)) -> au95u95U31(mark(X))
mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
mark(U42(X)) -> au95u95U42(mark(X))
mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
mark(U52(X)) -> au95u95U52(mark(X))
mark(U61(X)) -> au95u95U61(mark(X))
mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
mark(U72(X)) -> au95u95U72(mark(X))
mark(U81(X)) -> au95u95U81(mark(X))
mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
mark(a) -> a
mark(e) -> e
mark(i) -> i
mark(isList(X)) -> au95u95isList(X)
mark(isNeList(X)) -> au95u95isNeList(X)
mark(isNePal(X)) -> au95u95isNePal(X)
mark(isPal(X)) -> au95u95isPal(X)
mark(isQid(X)) -> au95u95isQid(X)
mark(nil) -> nil
mark(o) -> o
mark(tt) -> tt
mark(u) -> u
)
 
(STRATEGY INNERMOST)

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 AU95U95U21(tt,V2) -> AU95U95U22(au95u95isList(V2))
 AU95U95U21(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U41(tt,V2) -> AU95U95U42(au95u95isNeList(V2))
 AU95U95U41(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V2) -> AU95U95U52(au95u95isList(V2))
 AU95U95U51(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,P) -> AU95U95U72(au95u95isPal(P))
 AU95U95U71(tt,P) -> AU95U95ISPAL(P)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95U21(au95u95isList(V1),V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISLIST(V1)
 AU95U95ISLIST(V) -> AU95U95U11(au95u95isNeList(V))
 AU95U95ISLIST(V) -> AU95U95ISNELIST(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95isList(V1),V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95isNeList(V1),V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISLIST(V1)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISNELIST(V1)
 AU95U95ISNELIST(V) -> AU95U95U31(au95u95isQid(V))
 AU95U95ISNELIST(V) -> AU95U95ISQID(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95U71(au95u95isQid(I),P)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95ISQID(I)
 AU95U95ISNEPAL(V) -> AU95U95U61(au95u95isQid(V))
 AU95U95ISNEPAL(V) -> AU95U95ISQID(V)
 AU95U95ISPAL(V) -> AU95U95U81(au95u95isNePal(V))
 AU95U95ISPAL(V) -> AU95U95ISNEPAL(V)
 MARK(U11(X)) -> AU95U95U11(mark(X))
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> AU95U95U22(mark(X))
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> AU95U95U31(mark(X))
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> AU95U95U41(mark(X1),X2)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> AU95U95U42(mark(X))
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> AU95U95U51(mark(X1),X2)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> AU95U95U52(mark(X))
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> AU95U95U61(mark(X))
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> AU95U95U72(mark(X))
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> AU95U95U81(mark(X))
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isQid(X)) -> AU95U95ISQID(X)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U21(tt,V2) -> AU95U95U22(au95u95isList(V2))
 AU95U95U21(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U41(tt,V2) -> AU95U95U42(au95u95isNeList(V2))
 AU95U95U41(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V2) -> AU95U95U52(au95u95isList(V2))
 AU95U95U51(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U71(tt,P) -> AU95U95U72(au95u95isPal(P))
 AU95U95U71(tt,P) -> AU95U95ISPAL(P)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95U21(au95u95isList(V1),V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISLIST(V1)
 AU95U95ISLIST(V) -> AU95U95U11(au95u95isNeList(V))
 AU95U95ISLIST(V) -> AU95U95ISNELIST(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95isList(V1),V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95isNeList(V1),V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISLIST(V1)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISNELIST(V1)
 AU95U95ISNELIST(V) -> AU95U95U31(au95u95isQid(V))
 AU95U95ISNELIST(V) -> AU95U95ISQID(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95U71(au95u95isQid(I),P)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95ISQID(I)
 AU95U95ISNEPAL(V) -> AU95U95U61(au95u95isQid(V))
 AU95U95ISNEPAL(V) -> AU95U95ISQID(V)
 AU95U95ISPAL(V) -> AU95U95U81(au95u95isNePal(V))
 AU95U95ISPAL(V) -> AU95U95ISNEPAL(V)
 MARK(U11(X)) -> AU95U95U11(mark(X))
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> AU95U95U21(mark(X1),X2)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> AU95U95U22(mark(X))
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> AU95U95U31(mark(X))
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> AU95U95U41(mark(X1),X2)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> AU95U95U42(mark(X))
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> AU95U95U51(mark(X1),X2)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> AU95U95U52(mark(X))
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> AU95U95U61(mark(X))
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> AU95U95U71(mark(X1),X2)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> AU95U95U72(mark(X))
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> AU95U95U81(mark(X))
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isQid(X)) -> AU95U95ISQID(X)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U71(tt,P) -> AU95U95ISPAL(P)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95U71(au95u95isQid(I),P)
 AU95U95ISPAL(V) -> AU95U95ISNEPAL(V)
->->-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->->Cycle:
->->-> Pairs:
 AU95U95U21(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U41(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95U21(au95u95isList(V1),V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISLIST(V1)
 AU95U95ISLIST(V) -> AU95U95ISNELIST(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95isList(V1),V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95isNeList(V1),V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISLIST(V1)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISNELIST(V1)
->->-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->->Cycle:
->->-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u


The problem is decomposed in 3 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 AU95U95U71(tt,P) -> AU95U95ISPAL(P)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95U71(au95u95isQid(I),P)
 AU95U95ISPAL(V) -> AU95U95ISNEPAL(V)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Projection:
 pi(AU95U95U71) = 2
 pi(AU95U95ISNEPAL) = 1
 pi(AU95U95ISPAL) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 AU95U95U71(tt,P) -> AU95U95ISPAL(P)
 AU95U95ISPAL(V) -> AU95U95ISNEPAL(V)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 AU95U95U21(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U41(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95U21(au95u95isList(V1),V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISLIST(V1)
 AU95U95ISLIST(V) -> AU95U95ISNELIST(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95isList(V1),V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95isNeList(V1),V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISLIST(V1)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISNELIST(V1)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Projection:
 pi(AU95U95U21) = 2
 pi(AU95U95U41) = 2
 pi(AU95U95U51) = 2
 pi(AU95U95ISLIST) = 1
 pi(AU95U95ISNELIST) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 AU95U95U21(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U41(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95ISLIST(V) -> AU95U95ISNELIST(V)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X) = 2.X
[au95u95U21](X1,X2) = 2.X1
[au95u95U22](X) = X
[au95u95U31](X) = 2.X
[au95u95U41](X1,X2) = 2.X1
[au95u95U42](X) = 2.X
[au95u95U51](X1,X2) = 2.X1
[au95u95U52](X) = 2.X
[au95u95U61](X) = 2.X + 1
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95U81](X) = 2.X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95isList](X) = 0
[au95u95isNeList](X) = 0
[au95u95isNePal](X) = X + 1
[au95u95isPal](X) = 2.X + 2
[au95u95isQid](X) = 0
[mark](X) = X
[U11](X) = 2.X
[U21](X1,X2) = 2.X1
[U22](X) = X
[U31](X) = 2.X
[U41](X1,X2) = 2.X1
[U42](X) = 2.X
[U51](X1,X2) = 2.X1
[U52](X) = 2.X
[U61](X) = 2.X + 1
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[U81](X) = 2.X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[e] = 1
[fSNonEmpty] = 0
[i] = 1
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = X + 1
[isPal](X) = 2.X + 2
[isQid](X) = 0
[nil] = 2
[o] = 1
[tt] = 0
[u] = 1
[AU95U95U11](X) = 0
[AU95U95U21](X1,X2) = 0
[AU95U95U22](X) = 0
[AU95U95U31](X) = 0
[AU95U95U41](X1,X2) = 0
[AU95U95U42](X) = 0
[AU95U95U51](X1,X2) = 0
[AU95U95U52](X) = 0
[AU95U95U61](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U81](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + X2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = X + 2

Problem 1.3: 

SCC Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1.3: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X) = X
[au95u95U21](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U22](X) = X + 2
[au95u95U31](X) = 2.X
[au95u95U41](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U42](X) = X
[au95u95U51](X1,X2) = X1 + 2.X2 + 2
[au95u95U52](X) = X + 1
[au95u95U61](X) = X
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X + 1
[au95u95U81](X) = 2.X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95isList](X) = 2.X + 2
[au95u95isNeList](X) = 2.X + 2
[au95u95isNePal](X) = X + 1
[au95u95isPal](X) = 2.X + 2
[au95u95isQid](X) = X + 1
[mark](X) = X
[U11](X) = X
[U21](X1,X2) = 2.X1 + 2.X2 + 2
[U22](X) = X + 2
[U31](X) = 2.X
[U41](X1,X2) = 2.X1 + 2.X2 + 2
[U42](X) = X
[U51](X1,X2) = X1 + 2.X2 + 2
[U52](X) = X + 1
[U61](X) = X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X + 1
[U81](X) = 2.X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[e] = 1
[fSNonEmpty] = 0
[i] = 1
[isList](X) = 2.X + 2
[isNeList](X) = 2.X + 2
[isNePal](X) = X + 1
[isPal](X) = 2.X + 2
[isQid](X) = X + 1
[nil] = 2
[o] = 1
[tt] = 2
[u] = 1
[AU95U95U11](X) = 0
[AU95U95U21](X1,X2) = 0
[AU95U95U22](X) = 0
[AU95U95U31](X) = 0
[AU95U95U41](X1,X2) = 0
[AU95U95U42](X) = 0
[AU95U95U51](X1,X2) = 0
[AU95U95U52](X) = 0
[AU95U95U61](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U81](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X

Problem 1.3: 

SCC Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1.3: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X) = X
[au95u95U21](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U22](X) = X + 1
[au95u95U31](X) = X
[au95u95U41](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U42](X) = X + 1
[au95u95U51](X1,X2) = X1 + 2.X2 + 2
[au95u95U52](X) = X + 2
[au95u95U61](X) = X
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X + 2
[au95u95U81](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95isList](X) = 2.X + 2
[au95u95isNeList](X) = 2.X + 2
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isQid](X) = 2.X + 2
[mark](X) = X
[U11](X) = X
[U21](X1,X2) = 2.X1 + 2.X2 + 2
[U22](X) = X + 1
[U31](X) = X
[U41](X1,X2) = 2.X1 + 2.X2 + 2
[U42](X) = X + 1
[U51](X1,X2) = X1 + 2.X2 + 2
[U52](X) = X + 2
[U61](X) = X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X + 2
[U81](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[e] = 1
[fSNonEmpty] = 0
[i] = 2
[isList](X) = 2.X + 2
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isQid](X) = 2.X + 2
[nil] = 2
[o] = 1
[tt] = 2
[u] = 1
[AU95U95U11](X) = 0
[AU95U95U21](X1,X2) = 0
[AU95U95U22](X) = 0
[AU95U95U31](X) = 0
[AU95U95U41](X1,X2) = 0
[AU95U95U42](X) = 0
[AU95U95U51](X1,X2) = 0
[AU95U95U52](X) = 0
[AU95U95U61](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U81](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.3: 

SCC Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1.3: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X) = 2.X
[au95u95U21](X1,X2) = 2.X1
[au95u95U22](X) = 2.X
[au95u95U31](X) = 2.X
[au95u95U41](X1,X2) = 2.X1
[au95u95U42](X) = 2.X
[au95u95U51](X1,X2) = 2.X1
[au95u95U52](X) = 2.X
[au95u95U61](X) = 2.X
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X
[au95u95U81](X) = 2.X + 2
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95isList](X) = 0
[au95u95isNeList](X) = 0
[au95u95isNePal](X) = X
[au95u95isPal](X) = 2.X + 2
[au95u95isQid](X) = 0
[mark](X) = X
[U11](X) = 2.X
[U21](X1,X2) = 2.X1
[U22](X) = 2.X
[U31](X) = 2.X
[U41](X1,X2) = 2.X1
[U42](X) = 2.X
[U51](X1,X2) = 2.X1
[U52](X) = 2.X
[U61](X) = 2.X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X
[U81](X) = 2.X + 2
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[e] = 1
[fSNonEmpty] = 0
[i] = 0
[isList](X) = 0
[isNeList](X) = 0
[isNePal](X) = X
[isPal](X) = 2.X + 2
[isQid](X) = 0
[nil] = 0
[o] = 0
[tt] = 0
[u] = 2
[AU95U95U11](X) = 0
[AU95U95U21](X1,X2) = 0
[AU95U95U22](X) = 0
[AU95U95U31](X) = 0
[AU95U95U41](X1,X2) = 0
[AU95U95U42](X) = 0
[AU95U95U51](X1,X2) = 0
[AU95U95U52](X) = 0
[AU95U95U61](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U81](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + 2.X2 + 1
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1.3: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X) = X
[au95u95U21](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U22](X) = X + 2
[au95u95U31](X) = X
[au95u95U41](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U42](X) = X + 2
[au95u95U51](X1,X2) = X1 + 2.X2 + 2
[au95u95U52](X) = X + 2
[au95u95U61](X) = 2.X + 1
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X + 2
[au95u95U81](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95isList](X) = 2.X
[au95u95isNeList](X) = 2.X
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isQid](X) = X
[mark](X) = X
[U11](X) = X
[U21](X1,X2) = 2.X1 + 2.X2 + 2
[U22](X) = X + 2
[U31](X) = X
[U41](X1,X2) = 2.X1 + 2.X2 + 1
[U42](X) = X + 2
[U51](X1,X2) = X1 + 2.X2 + 2
[U52](X) = X + 2
[U61](X) = 2.X + 1
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X + 2
[U81](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[isList](X) = 2.X
[isNeList](X) = 2.X
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isQid](X) = X
[nil] = 2
[o] = 2
[tt] = 2
[u] = 2
[AU95U95U11](X) = 0
[AU95U95U21](X1,X2) = 0
[AU95U95U22](X) = 0
[AU95U95U31](X) = 0
[AU95U95U41](X1,X2) = 0
[AU95U95U42](X) = 0
[AU95U95U51](X1,X2) = 0
[AU95U95U52](X) = 0
[AU95U95U61](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U81](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + 2.X2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.3: 

SCC Processor:
-> Pairs:
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1.3: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X) = X
[au95u95U21](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U22](X) = X + 2
[au95u95U31](X) = X
[au95u95U41](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U42](X) = X + 2
[au95u95U51](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U52](X) = X + 1
[au95u95U61](X) = X
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X + 2
[au95u95U81](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95isList](X) = 2.X + 2
[au95u95isNeList](X) = 2.X + 2
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isQid](X) = 2.X + 2
[mark](X) = X
[U11](X) = X
[U21](X1,X2) = 2.X1 + 2.X2 + 1
[U22](X) = X + 2
[U31](X) = X
[U41](X1,X2) = 2.X1 + 2.X2 + 2
[U42](X) = X + 2
[U51](X1,X2) = 2.X1 + 2.X2 + 2
[U52](X) = X + 1
[U61](X) = X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X + 2
[U81](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[isList](X) = 2.X + 2
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isQid](X) = 2.X + 2
[nil] = 2
[o] = 1
[tt] = 2
[u] = 1
[AU95U95U11](X) = 0
[AU95U95U21](X1,X2) = 0
[AU95U95U22](X) = 0
[AU95U95U31](X) = 0
[AU95U95U41](X1,X2) = 0
[AU95U95U42](X) = 0
[AU95U95U51](X1,X2) = 0
[AU95U95U52](X) = 0
[AU95U95U61](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U81](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + 2.X2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.3: 

SCC Processor:
-> Pairs:
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1.3: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X) = X
[au95u95U21](X1,X2) = X1 + 2.X2 + 1
[au95u95U22](X) = X
[au95u95U31](X) = X
[au95u95U41](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U42](X) = X + 2
[au95u95U51](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U52](X) = X + 2
[au95u95U61](X) = X
[au95u95U71](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U72](X) = X + 2
[au95u95U81](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95isList](X) = 2.X + 2
[au95u95isNeList](X) = 2.X + 2
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isQid](X) = 2
[mark](X) = X
[U11](X) = X
[U21](X1,X2) = X1 + 2.X2 + 1
[U22](X) = X
[U31](X) = X
[U41](X1,X2) = 2.X1 + 2.X2 + 2
[U42](X) = X + 2
[U51](X1,X2) = 2.X1 + 2.X2 + 1
[U52](X) = X + 2
[U61](X) = X
[U71](X1,X2) = 2.X1 + 2.X2 + 2
[U72](X) = X + 2
[U81](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 0
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[isList](X) = 2.X + 2
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isQid](X) = 2
[nil] = 2
[o] = 1
[tt] = 2
[u] = 1
[AU95U95U11](X) = 0
[AU95U95U21](X1,X2) = 0
[AU95U95U22](X) = 0
[AU95U95U31](X) = 0
[AU95U95U41](X1,X2) = 0
[AU95U95U42](X) = 0
[AU95U95U51](X1,X2) = 0
[AU95U95U52](X) = 0
[AU95U95U61](X) = 0
[AU95U95U71](X1,X2) = 0
[AU95U95U72](X) = 0
[AU95U95U81](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + X2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X

Problem 1.3: 

SCC Processor:
-> Pairs:
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1.3: 

Subterm Processor:
-> Pairs:
 MARK(U11(X)) -> MARK(X)
 MARK(U21(X1,X2)) -> MARK(X1)
 MARK(U22(X)) -> MARK(X)
 MARK(U31(X)) -> MARK(X)
 MARK(U41(X1,X2)) -> MARK(X1)
 MARK(U42(X)) -> MARK(X)
 MARK(U51(X1,X2)) -> MARK(X1)
 MARK(U52(X)) -> MARK(X)
 MARK(U61(X)) -> MARK(X)
 MARK(U71(X1,X2)) -> MARK(X1)
 MARK(U72(X)) -> MARK(X)
 MARK(U81(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Projection:
 pi(MARK) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 au95u95U11(tt) -> tt
 au95u95U11(X) -> U11(X)
 au95u95U21(tt,V2) -> au95u95U22(au95u95isList(V2))
 au95u95U21(X1,X2) -> U21(X1,X2)
 au95u95U22(tt) -> tt
 au95u95U22(X) -> U22(X)
 au95u95U31(tt) -> tt
 au95u95U31(X) -> U31(X)
 au95u95U41(tt,V2) -> au95u95U42(au95u95isNeList(V2))
 au95u95U41(X1,X2) -> U41(X1,X2)
 au95u95U42(tt) -> tt
 au95u95U42(X) -> U42(X)
 au95u95U51(tt,V2) -> au95u95U52(au95u95isList(V2))
 au95u95U51(X1,X2) -> U51(X1,X2)
 au95u95U52(tt) -> tt
 au95u95U52(X) -> U52(X)
 au95u95U61(tt) -> tt
 au95u95U61(X) -> U61(X)
 au95u95U71(tt,P) -> au95u95U72(au95u95isPal(P))
 au95u95U71(X1,X2) -> U71(X1,X2)
 au95u95U72(tt) -> tt
 au95u95U72(X) -> U72(X)
 au95u95U81(tt) -> tt
 au95u95U81(X) -> U81(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isList(V1),V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isNeList(V))
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isList(V1),V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isNeList(V1),V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isQid(V))
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),P)
 au95u95isNePal(V) -> au95u95U61(au95u95isQid(V))
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isNePal(V))
 au95u95isPal(X) -> isPal(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X)) -> au95u95U11(mark(X))
 mark(U21(X1,X2)) -> au95u95U21(mark(X1),X2)
 mark(U22(X)) -> au95u95U22(mark(X))
 mark(U31(X)) -> au95u95U31(mark(X))
 mark(U41(X1,X2)) -> au95u95U41(mark(X1),X2)
 mark(U42(X)) -> au95u95U42(mark(X))
 mark(U51(X1,X2)) -> au95u95U51(mark(X1),X2)
 mark(U52(X)) -> au95u95U52(mark(X))
 mark(U61(X)) -> au95u95U61(mark(X))
 mark(U71(X1,X2)) -> au95u95U71(mark(X1),X2)
 mark(U72(X)) -> au95u95U72(mark(X))
 mark(U81(X)) -> au95u95U81(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
