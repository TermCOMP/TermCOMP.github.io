YES
proof of /home/ff862203/input_afmoTI7XNf.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRSRRRProof [EQUIVALENT, 31 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 0 ms]
(4) QTRS
(5) QTRSRRRProof [EQUIVALENT, 0 ms]
(6) QTRS
(7) QTRSRRRProof [EQUIVALENT, 0 ms]
(8) QTRS
(9) DependencyPairsProof [EQUIVALENT, 0 ms]
(10) QDP
(11) DependencyGraphProof [EQUIVALENT, 0 ms]
(12) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__f(X, X) -> a__f(a, b)
   a__b -> a
   mark(f(X1, X2)) -> a__f(mark(X1), X2)
   mark(b) -> a__b
   mark(a) -> a
   a__f(X1, X2) -> f(X1, X2)
   a__b -> b

The set Q consists of the following terms:

   mark(b)
   mark(a)
   a__f(x0, x1)
   a__b
   mark(f(x0, x1))


----------------------------------------

(1) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a) = 0
   POL(a__b) = 0
   POL(a__f(x_1, x_2)) = 2 + 2*x_1 + 2*x_2
   POL(b) = 0
   POL(f(x_1, x_2)) = 1 + 2*x_1 + x_2
   POL(mark(x_1)) = 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   a__f(X1, X2) -> f(X1, X2)




----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__f(X, X) -> a__f(a, b)
   a__b -> a
   mark(f(X1, X2)) -> a__f(mark(X1), X2)
   mark(b) -> a__b
   mark(a) -> a
   a__b -> b

The set Q consists of the following terms:

   mark(b)
   mark(a)
   a__f(x0, x1)
   a__b
   mark(f(x0, x1))


----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a) = 0
   POL(a__b) = 0
   POL(a__f(x_1, x_2)) = x_1 + 2*x_2
   POL(b) = 0
   POL(f(x_1, x_2)) = 1 + 2*x_1 + x_2
   POL(mark(x_1)) = 2*x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   mark(f(X1, X2)) -> a__f(mark(X1), X2)




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__f(X, X) -> a__f(a, b)
   a__b -> a
   mark(b) -> a__b
   mark(a) -> a
   a__b -> b

The set Q consists of the following terms:

   mark(b)
   mark(a)
   a__f(x0, x1)
   a__b
   mark(f(x0, x1))


----------------------------------------

(5) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(a) = 0
   POL(a__b) = 2
   POL(a__f(x_1, x_2)) = x_1 + x_2
   POL(b) = 0
   POL(mark(x_1)) = 2 + x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   a__b -> a
   mark(a) -> a
   a__b -> b




----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__f(X, X) -> a__f(a, b)
   mark(b) -> a__b

The set Q consists of the following terms:

   mark(b)
   mark(a)
   a__f(x0, x1)
   a__b
   mark(f(x0, x1))


----------------------------------------

(7) QTRSRRRProof (EQUIVALENT)
Used ordering:
Quasi precedence:
a__f_2 > [a, b, a__b]
mark_1 > [a, b, a__b]


Status:
a__f_2: [2,1]
a: multiset status
b: multiset status
mark_1: multiset status
a__b: multiset status

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   mark(b) -> a__b




----------------------------------------

(8)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__f(X, X) -> a__f(a, b)

The set Q consists of the following terms:

   mark(b)
   mark(a)
   a__f(x0, x1)
   a__b
   mark(f(x0, x1))


----------------------------------------

(9) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A__F(X, X) -> A__F(a, b)

The TRS R consists of the following rules:

   a__f(X, X) -> a__f(a, b)

The set Q consists of the following terms:

   mark(b)
   mark(a)
   a__f(x0, x1)
   a__b
   mark(f(x0, x1))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(12)
TRUE
