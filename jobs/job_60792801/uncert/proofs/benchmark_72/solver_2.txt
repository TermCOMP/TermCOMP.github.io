YES

Problem 1: 

(VAR vu95NonEmpty X Y)
(RULES
u43(X,num0) -> X
u43(X,s(Y)) -> s(u43(X,Y))
double(X) -> u43(X,X)
f(num0,s(num0),X) -> f(X,double(X),X)
g(X,Y) -> X
g(X,Y) -> Y
)
 
(STRATEGY INNERMOST)

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 U43(X,s(Y)) -> U43(X,Y)
 DOUBLE(X) -> U43(X,X)
 F(num0,s(num0),X) -> DOUBLE(X)
 F(num0,s(num0),X) -> F(X,double(X),X)
-> Rules:
 u43(X,num0) -> X
 u43(X,s(Y)) -> s(u43(X,Y))
 double(X) -> u43(X,X)
 f(num0,s(num0),X) -> f(X,double(X),X)
 g(X,Y) -> X
 g(X,Y) -> Y

Problem 1: 

SCC Processor:
-> Pairs:
 U43(X,s(Y)) -> U43(X,Y)
 DOUBLE(X) -> U43(X,X)
 F(num0,s(num0),X) -> DOUBLE(X)
 F(num0,s(num0),X) -> F(X,double(X),X)
-> Rules:
 u43(X,num0) -> X
 u43(X,s(Y)) -> s(u43(X,Y))
 double(X) -> u43(X,X)
 f(num0,s(num0),X) -> f(X,double(X),X)
 g(X,Y) -> X
 g(X,Y) -> Y
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 U43(X,s(Y)) -> U43(X,Y)
->->-> Rules:
 u43(X,num0) -> X
 u43(X,s(Y)) -> s(u43(X,Y))
 double(X) -> u43(X,X)
 f(num0,s(num0),X) -> f(X,double(X),X)
 g(X,Y) -> X
 g(X,Y) -> Y
->->Cycle:
->->-> Pairs:
 F(num0,s(num0),X) -> F(X,double(X),X)
->->-> Rules:
 u43(X,num0) -> X
 u43(X,s(Y)) -> s(u43(X,Y))
 double(X) -> u43(X,X)
 f(num0,s(num0),X) -> f(X,double(X),X)
 g(X,Y) -> X
 g(X,Y) -> Y


The problem is decomposed in 2 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 U43(X,s(Y)) -> U43(X,Y)
-> Rules:
 u43(X,num0) -> X
 u43(X,s(Y)) -> s(u43(X,Y))
 double(X) -> u43(X,X)
 f(num0,s(num0),X) -> f(X,double(X),X)
 g(X,Y) -> X
 g(X,Y) -> Y
->Projection:
 pi(U43) = 2

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 u43(X,num0) -> X
 u43(X,s(Y)) -> s(u43(X,Y))
 double(X) -> u43(X,X)
 f(num0,s(num0),X) -> f(X,double(X),X)
 g(X,Y) -> X
 g(X,Y) -> Y
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Reduction Pair Processor:
-> Pairs:
 F(num0,s(num0),X) -> F(X,double(X),X)
-> Rules:
 u43(X,num0) -> X
 u43(X,s(Y)) -> s(u43(X,Y))
 double(X) -> u43(X,X)
 f(num0,s(num0),X) -> f(X,double(X),X)
 g(X,Y) -> X
 g(X,Y) -> Y
-> Usable rules:
 u43(X,num0) -> X
 u43(X,s(Y)) -> s(u43(X,Y))
 double(X) -> u43(X,X)
->Mace4 Output:
 ============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 91 was started by ff862203 on r23m0030.hpc.itc.rwth-aachen.de,
Wed Sep  3 16:03:49 2025
The command was "./mace4 -c -f /tmp/mace422-15.in".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /tmp/mace422-15.in

assign(max_seconds,20).

formulas(assumptions).
gtrsim_s0(x,y) & sqsupset_s0(y,z) -> sqsupset_s0(x,z) # label(compatibility).
succeq_s0(x,y) & sqsupset_s0(y,z) -> sqsupset_s0(x,z) # label(compatibility).
gtrsim_s0(x,y) & succeq_s0(y,z) -> gtrsim_s0(x,z) # label(compatibility).
arrow_s0(x1,y) -> arrow_s0(f2(x1,x2),f2(y,x2)) # label(congruence).
arrow_s0(x2,y) -> arrow_s0(f2(x1,x2),f2(x1,y)) # label(congruence).
arrow_s0(x1,y) -> arrow_s0(f3(x1),f3(y)) # label(congruence).
arrow_s0(x1,y) -> arrow_s0(f8(x1),f8(y)) # label(congruence).
arrow_s0(x1,y) -> arrow_s0(f12(x1,x2,x3),f12(y,x2,x3)) # label(congruence).
arrow_s0(x2,y) -> arrow_s0(f12(x1,x2,x3),f12(x1,y,x3)) # label(congruence).
arrow_s0(x3,y) -> arrow_s0(f12(x1,x2,x3),f12(x1,x2,y)) # label(congruence).
arrow_s0(f2(x1,f6),x1) # label(replacement).
arrow_s0(f2(x1,f8(x2)),f8(f2(x1,x2))) # label(replacement).
arrow_s0(f3(x1),f2(x1,x1)) # label(replacement).
arrow_s0(x,y) -> gtrsim_s0(x,y) # label(inclusion).
sqsupset_s0(f12(f6,f8(f6),x1),f12(x1,f3(x1),x1)) # label(replacement).
sqsupset_s0(x,y) -> sqsupsetStar_s0(x,y) # label(inclusion).
sqsupset_s0(x,y) & sqsupsetStar_s0(y,z) -> sqsupsetStar_s0(x,z) # label(compatibility).
end_of_list.

formulas(goals).
(exists x sqsupsetStar_s0(x,x)) # label(wellfoundedness).
end_of_list.

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 gtrsim_s0(x,y) & sqsupset_s0(y,z) -> sqsupset_s0(x,z) # label(compatibility) # label(non_clause).  [assumption].
2 succeq_s0(x,y) & sqsupset_s0(y,z) -> sqsupset_s0(x,z) # label(compatibility) # label(non_clause).  [assumption].
3 gtrsim_s0(x,y) & succeq_s0(y,z) -> gtrsim_s0(x,z) # label(compatibility) # label(non_clause).  [assumption].
4 arrow_s0(x1,y) -> arrow_s0(f2(x1,x2),f2(y,x2)) # label(congruence) # label(non_clause).  [assumption].
5 arrow_s0(x2,y) -> arrow_s0(f2(x1,x2),f2(x1,y)) # label(congruence) # label(non_clause).  [assumption].
6 arrow_s0(x1,y) -> arrow_s0(f3(x1),f3(y)) # label(congruence) # label(non_clause).  [assumption].
7 arrow_s0(x1,y) -> arrow_s0(f8(x1),f8(y)) # label(congruence) # label(non_clause).  [assumption].
8 arrow_s0(x1,y) -> arrow_s0(f12(x1,x2,x3),f12(y,x2,x3)) # label(congruence) # label(non_clause).  [assumption].
9 arrow_s0(x2,y) -> arrow_s0(f12(x1,x2,x3),f12(x1,y,x3)) # label(congruence) # label(non_clause).  [assumption].
10 arrow_s0(x3,y) -> arrow_s0(f12(x1,x2,x3),f12(x1,x2,y)) # label(congruence) # label(non_clause).  [assumption].
11 arrow_s0(x,y) -> gtrsim_s0(x,y) # label(inclusion) # label(non_clause).  [assumption].
12 sqsupset_s0(x,y) -> sqsupsetStar_s0(x,y) # label(inclusion) # label(non_clause).  [assumption].
13 sqsupset_s0(x,y) & sqsupsetStar_s0(y,z) -> sqsupsetStar_s0(x,z) # label(compatibility) # label(non_clause).  [assumption].
14 (exists x sqsupsetStar_s0(x,x)) # label(wellfoundedness) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-gtrsim_s0(x,y) | -sqsupset_s0(y,z) | sqsupset_s0(x,z) # label(compatibility).
-succeq_s0(x,y) | -sqsupset_s0(y,z) | sqsupset_s0(x,z) # label(compatibility).
-gtrsim_s0(x,y) | -succeq_s0(y,z) | gtrsim_s0(x,z) # label(compatibility).
-arrow_s0(x,y) | arrow_s0(f2(x,z),f2(y,z)) # label(congruence).
-arrow_s0(x,y) | arrow_s0(f2(z,x),f2(z,y)) # label(congruence).
-arrow_s0(x,y) | arrow_s0(f3(x),f3(y)) # label(congruence).
-arrow_s0(x,y) | arrow_s0(f8(x),f8(y)) # label(congruence).
-arrow_s0(x,y) | arrow_s0(f12(x,z,u),f12(y,z,u)) # label(congruence).
-arrow_s0(x,y) | arrow_s0(f12(z,x,u),f12(z,y,u)) # label(congruence).
-arrow_s0(x,y) | arrow_s0(f12(z,u,x),f12(z,u,y)) # label(congruence).
arrow_s0(f2(x,f6),x) # label(replacement).
arrow_s0(f2(x,f8(y)),f8(f2(x,y))) # label(replacement).
arrow_s0(f3(x),f2(x,x)) # label(replacement).
-arrow_s0(x,y) | gtrsim_s0(x,y) # label(inclusion).
sqsupset_s0(f12(f6,f8(f6),x),f12(x,f3(x),x)) # label(replacement).
-sqsupset_s0(x,y) | sqsupsetStar_s0(x,y) # label(inclusion).
-sqsupset_s0(x,y) | -sqsupsetStar_s0(y,z) | sqsupsetStar_s0(x,z) # label(compatibility).
-sqsupsetStar_s0(x,x) # label(wellfoundedness).
end_of_list.

============================== end of clauses for search =============

% There are no natural numbers in the input.

============================== DOMAIN SIZE 2 =========================

============================== MODEL =================================

interpretation( 2, [number=1, seconds=0], [

        function(f6, [ 0 ]),

        function(f3(_), [ 0, 0 ]),

        function(f8(_), [ 1, 0 ]),

        function(f2(_,_), [
			   0, 1,
			   1, 0 ]),

        function(f12(_,_,_), [
			   0, 0,
			   1, 1,
			   0, 0,
			   0, 0 ]),

        relation(arrow_s0(_,_), [
			   1, 0,
			   0, 1 ]),

        relation(gtrsim_s0(_,_), [
			   1, 0,
			   0, 1 ]),

        relation(sqsupsetStar_s0(_,_), [
			   0, 0,
			   1, 0 ]),

        relation(sqsupset_s0(_,_), [
			   0, 0,
			   1, 0 ]),

        relation(succeq_s0(_,_), [
			   0, 0,
			   0, 0 ])
]).

============================== end of model ==========================

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.00 seconds).
Ground clauses: seen=124, kept=124.
Selections=17, assignments=22, propagations=32, current_models=1.
Rewrite_terms=234, rewrite_bools=294, indexes=31.
Rules_from_neg_clauses=7, cross_offs=7.

============================== end of statistics =====================

User_CPU=0.00, System_CPU=0.00, Wall_clock=0.

Exiting with 1 model.

Process 91 exit (max_models) Wed Sep  3 16:03:49 2025
The process finished Wed Sep  3 16:03:49 2025


Mace4 cooked interpretation:

% number = 1
% seconds = 0

% Interpretation of size 2

f6 = 0.

f3(0) = 0.
f3(1) = 0.

f8(0) = 1.
f8(1) = 0.

f2(0,0) = 0.
f2(0,1) = 1.
f2(1,0) = 1.
f2(1,1) = 0.

f12(0,0,0) = 0.
f12(0,0,1) = 0.
f12(0,1,0) = 1.
f12(0,1,1) = 1.
f12(1,0,0) = 0.
f12(1,0,1) = 0.
f12(1,1,0) = 0.
f12(1,1,1) = 0.

  arrow_s0(0,0).
- arrow_s0(0,1).
- arrow_s0(1,0).
  arrow_s0(1,1).

  gtrsim_s0(0,0).
- gtrsim_s0(0,1).
- gtrsim_s0(1,0).
  gtrsim_s0(1,1).

- sqsupsetStar_s0(0,0).
- sqsupsetStar_s0(0,1).
  sqsupsetStar_s0(1,0).
- sqsupsetStar_s0(1,1).

- sqsupset_s0(0,0).
- sqsupset_s0(0,1).
  sqsupset_s0(1,0).
- sqsupset_s0(1,1).

- succeq_s0(0,0).
- succeq_s0(0,1).
- succeq_s0(1,0).
- succeq_s0(1,1).


Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 u43(X,num0) -> X
 u43(X,s(Y)) -> s(u43(X,Y))
 double(X) -> u43(X,X)
 f(num0,s(num0),X) -> f(X,double(X),X)
 g(X,Y) -> X
 g(X,Y) -> Y
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
