YES

Problem 1: 

(VAR vu95NonEmpty I P V V1 V2 X X1 X2 X3 Y Z)
(RULES
au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
au95u95U11(X1,X2) -> U11(X1,X2)
au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
au95u95U12(X1,X2) -> U12(X1,X2)
au95u95U13(tt) -> tt
au95u95U13(X) -> U13(X)
au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
au95u95U25(X1,X2) -> U25(X1,X2)
au95u95U26(tt) -> tt
au95u95U26(X) -> U26(X)
au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
au95u95U31(X1,X2) -> U31(X1,X2)
au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
au95u95U32(X1,X2) -> U32(X1,X2)
au95u95U33(tt) -> tt
au95u95U33(X) -> U33(X)
au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
au95u95U45(X1,X2) -> U45(X1,X2)
au95u95U46(tt) -> tt
au95u95U46(X) -> U46(X)
au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
au95u95U55(X1,X2) -> U55(X1,X2)
au95u95U56(tt) -> tt
au95u95U56(X) -> U56(X)
au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
au95u95U61(X1,X2) -> U61(X1,X2)
au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
au95u95U62(X1,X2) -> U62(X1,X2)
au95u95U63(tt) -> tt
au95u95U63(X) -> U63(X)
au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
au95u95U72(X1,X2) -> U72(X1,X2)
au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
au95u95U73(X1,X2) -> U73(X1,X2)
au95u95U74(tt) -> tt
au95u95U74(X) -> U74(X)
au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
au95u95U81(X1,X2) -> U81(X1,X2)
au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
au95u95U82(X1,X2) -> U82(X1,X2)
au95u95U83(tt) -> tt
au95u95U83(X) -> U83(X)
au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
au95u95U91(X1,X2) -> U91(X1,X2)
au95u95U92(tt) -> tt
au95u95U92(X) -> U92(X)
au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
au95u95u95u95(nil,X) -> mark(X)
au95u95u95u95(X,nil) -> mark(X)
au95u95u95u95(X1,X2) -> u95u95(X1,X2)
au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
au95u95isList(nil) -> tt
au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
au95u95isList(X) -> isList(X)
au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
au95u95isNeList(X) -> isNeList(X)
au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
au95u95isNePal(X) -> isNePal(X)
au95u95isPal(nil) -> tt
au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
au95u95isPal(X) -> isPal(X)
au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
au95u95isPalListKind(a) -> tt
au95u95isPalListKind(e) -> tt
au95u95isPalListKind(i) -> tt
au95u95isPalListKind(nil) -> tt
au95u95isPalListKind(o) -> tt
au95u95isPalListKind(u) -> tt
au95u95isPalListKind(X) -> isPalListKind(X)
au95u95isQid(a) -> tt
au95u95isQid(e) -> tt
au95u95isQid(i) -> tt
au95u95isQid(o) -> tt
au95u95isQid(u) -> tt
au95u95isQid(X) -> isQid(X)
mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
mark(U13(X)) -> au95u95U13(mark(X))
mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
mark(U26(X)) -> au95u95U26(mark(X))
mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
mark(U33(X)) -> au95u95U33(mark(X))
mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
mark(U46(X)) -> au95u95U46(mark(X))
mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
mark(U56(X)) -> au95u95U56(mark(X))
mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
mark(U63(X)) -> au95u95U63(mark(X))
mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
mark(U74(X)) -> au95u95U74(mark(X))
mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
mark(U83(X)) -> au95u95U83(mark(X))
mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
mark(U92(X)) -> au95u95U92(mark(X))
mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
mark(a) -> a
mark(e) -> e
mark(i) -> i
mark(isList(X)) -> au95u95isList(X)
mark(isNeList(X)) -> au95u95isNeList(X)
mark(isNePal(X)) -> au95u95isNePal(X)
mark(isPal(X)) -> au95u95isPal(X)
mark(isPalListKind(X)) -> au95u95isPalListKind(X)
mark(isQid(X)) -> au95u95isQid(X)
mark(nil) -> nil
mark(o) -> o
mark(tt) -> tt
mark(u) -> u
)
 
(STRATEGY INNERMOST)

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 AU95U95U11(tt,V) -> AU95U95U12(au95u95isPalListKind(V),V)
 AU95U95U11(tt,V) -> AU95U95ISPALLISTKIND(V)
 AU95U95U12(tt,V) -> AU95U95U13(au95u95isNeList(V))
 AU95U95U12(tt,V) -> AU95U95ISNELIST(V)
 AU95U95U21(tt,V1,V2) -> AU95U95U22(au95u95isPalListKind(V1),V1,V2)
 AU95U95U21(tt,V1,V2) -> AU95U95ISPALLISTKIND(V1)
 AU95U95U22(tt,V1,V2) -> AU95U95U23(au95u95isPalListKind(V2),V1,V2)
 AU95U95U22(tt,V1,V2) -> AU95U95ISPALLISTKIND(V2)
 AU95U95U23(tt,V1,V2) -> AU95U95U24(au95u95isPalListKind(V2),V1,V2)
 AU95U95U23(tt,V1,V2) -> AU95U95ISPALLISTKIND(V2)
 AU95U95U24(tt,V1,V2) -> AU95U95U25(au95u95isList(V1),V2)
 AU95U95U24(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U25(tt,V2) -> AU95U95U26(au95u95isList(V2))
 AU95U95U25(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U31(tt,V) -> AU95U95U32(au95u95isPalListKind(V),V)
 AU95U95U31(tt,V) -> AU95U95ISPALLISTKIND(V)
 AU95U95U32(tt,V) -> AU95U95U33(au95u95isQid(V))
 AU95U95U32(tt,V) -> AU95U95ISQID(V)
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isPalListKind(V1),V1,V2)
 AU95U95U41(tt,V1,V2) -> AU95U95ISPALLISTKIND(V1)
 AU95U95U42(tt,V1,V2) -> AU95U95U43(au95u95isPalListKind(V2),V1,V2)
 AU95U95U42(tt,V1,V2) -> AU95U95ISPALLISTKIND(V2)
 AU95U95U43(tt,V1,V2) -> AU95U95U44(au95u95isPalListKind(V2),V1,V2)
 AU95U95U43(tt,V1,V2) -> AU95U95ISPALLISTKIND(V2)
 AU95U95U44(tt,V1,V2) -> AU95U95U45(au95u95isList(V1),V2)
 AU95U95U44(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U45(tt,V2) -> AU95U95U46(au95u95isNeList(V2))
 AU95U95U45(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isPalListKind(V1),V1,V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISPALLISTKIND(V1)
 AU95U95U52(tt,V1,V2) -> AU95U95U53(au95u95isPalListKind(V2),V1,V2)
 AU95U95U52(tt,V1,V2) -> AU95U95ISPALLISTKIND(V2)
 AU95U95U53(tt,V1,V2) -> AU95U95U54(au95u95isPalListKind(V2),V1,V2)
 AU95U95U53(tt,V1,V2) -> AU95U95ISPALLISTKIND(V2)
 AU95U95U54(tt,V1,V2) -> AU95U95U55(au95u95isNeList(V1),V2)
 AU95U95U54(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U55(tt,V2) -> AU95U95U56(au95u95isList(V2))
 AU95U95U55(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U61(tt,V) -> AU95U95U62(au95u95isPalListKind(V),V)
 AU95U95U61(tt,V) -> AU95U95ISPALLISTKIND(V)
 AU95U95U62(tt,V) -> AU95U95U63(au95u95isQid(V))
 AU95U95U62(tt,V) -> AU95U95ISQID(V)
 AU95U95U71(tt,I,P) -> AU95U95U72(au95u95isPalListKind(I),P)
 AU95U95U71(tt,I,P) -> AU95U95ISPALLISTKIND(I)
 AU95U95U72(tt,P) -> AU95U95U73(au95u95isPal(P),P)
 AU95U95U72(tt,P) -> AU95U95ISPAL(P)
 AU95U95U73(tt,P) -> AU95U95U74(au95u95isPalListKind(P))
 AU95U95U73(tt,P) -> AU95U95ISPALLISTKIND(P)
 AU95U95U81(tt,V) -> AU95U95U82(au95u95isPalListKind(V),V)
 AU95U95U81(tt,V) -> AU95U95ISPALLISTKIND(V)
 AU95U95U82(tt,V) -> AU95U95U83(au95u95isNePal(V))
 AU95U95U82(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U91(tt,V2) -> AU95U95U92(au95u95isPalListKind(V2))
 AU95U95U91(tt,V2) -> AU95U95ISPALLISTKIND(V2)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95U21(au95u95isPalListKind(V1),V1,V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95U11(au95u95isPalListKind(V),V)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95isPalListKind(V1),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95isPalListKind(V1),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95U31(au95u95isPalListKind(V),V)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95U71(au95u95isQid(I),I,P)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95ISQID(I)
 AU95U95ISNEPAL(V) -> AU95U95U61(au95u95isPalListKind(V),V)
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U81(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95U91(au95u95isPalListKind(V1),V2)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> AU95U95U11(mark(X1),X2)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> AU95U95U13(mark(X))
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> AU95U95U21(mark(X1),X2,X3)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> AU95U95U22(mark(X1),X2,X3)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> AU95U95U23(mark(X1),X2,X3)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> AU95U95U24(mark(X1),X2,X3)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> AU95U95U25(mark(X1),X2)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> AU95U95U26(mark(X))
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> AU95U95U31(mark(X1),X2)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> AU95U95U32(mark(X1),X2)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> AU95U95U33(mark(X))
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> AU95U95U42(mark(X1),X2,X3)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> AU95U95U43(mark(X1),X2,X3)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> AU95U95U44(mark(X1),X2,X3)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> AU95U95U45(mark(X1),X2)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> AU95U95U46(mark(X))
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> AU95U95U52(mark(X1),X2,X3)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> AU95U95U53(mark(X1),X2,X3)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> AU95U95U54(mark(X1),X2,X3)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> AU95U95U55(mark(X1),X2)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> AU95U95U56(mark(X))
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> AU95U95U61(mark(X1),X2)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> AU95U95U62(mark(X1),X2)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> AU95U95U63(mark(X))
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> AU95U95U71(mark(X1),X2,X3)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> AU95U95U72(mark(X1),X2)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> AU95U95U73(mark(X1),X2)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> AU95U95U74(mark(X))
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> AU95U95U81(mark(X1),X2)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> AU95U95U82(mark(X1),X2)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> AU95U95U83(mark(X))
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> AU95U95U91(mark(X1),X2)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> AU95U95U92(mark(X))
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
 MARK(isQid(X)) -> AU95U95ISQID(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95U11(tt,V) -> AU95U95U12(au95u95isPalListKind(V),V)
 AU95U95U11(tt,V) -> AU95U95ISPALLISTKIND(V)
 AU95U95U12(tt,V) -> AU95U95U13(au95u95isNeList(V))
 AU95U95U12(tt,V) -> AU95U95ISNELIST(V)
 AU95U95U21(tt,V1,V2) -> AU95U95U22(au95u95isPalListKind(V1),V1,V2)
 AU95U95U21(tt,V1,V2) -> AU95U95ISPALLISTKIND(V1)
 AU95U95U22(tt,V1,V2) -> AU95U95U23(au95u95isPalListKind(V2),V1,V2)
 AU95U95U22(tt,V1,V2) -> AU95U95ISPALLISTKIND(V2)
 AU95U95U23(tt,V1,V2) -> AU95U95U24(au95u95isPalListKind(V2),V1,V2)
 AU95U95U23(tt,V1,V2) -> AU95U95ISPALLISTKIND(V2)
 AU95U95U24(tt,V1,V2) -> AU95U95U25(au95u95isList(V1),V2)
 AU95U95U24(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U25(tt,V2) -> AU95U95U26(au95u95isList(V2))
 AU95U95U25(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U31(tt,V) -> AU95U95U32(au95u95isPalListKind(V),V)
 AU95U95U31(tt,V) -> AU95U95ISPALLISTKIND(V)
 AU95U95U32(tt,V) -> AU95U95U33(au95u95isQid(V))
 AU95U95U32(tt,V) -> AU95U95ISQID(V)
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isPalListKind(V1),V1,V2)
 AU95U95U41(tt,V1,V2) -> AU95U95ISPALLISTKIND(V1)
 AU95U95U42(tt,V1,V2) -> AU95U95U43(au95u95isPalListKind(V2),V1,V2)
 AU95U95U42(tt,V1,V2) -> AU95U95ISPALLISTKIND(V2)
 AU95U95U43(tt,V1,V2) -> AU95U95U44(au95u95isPalListKind(V2),V1,V2)
 AU95U95U43(tt,V1,V2) -> AU95U95ISPALLISTKIND(V2)
 AU95U95U44(tt,V1,V2) -> AU95U95U45(au95u95isList(V1),V2)
 AU95U95U44(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U45(tt,V2) -> AU95U95U46(au95u95isNeList(V2))
 AU95U95U45(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isPalListKind(V1),V1,V2)
 AU95U95U51(tt,V1,V2) -> AU95U95ISPALLISTKIND(V1)
 AU95U95U52(tt,V1,V2) -> AU95U95U53(au95u95isPalListKind(V2),V1,V2)
 AU95U95U52(tt,V1,V2) -> AU95U95ISPALLISTKIND(V2)
 AU95U95U53(tt,V1,V2) -> AU95U95U54(au95u95isPalListKind(V2),V1,V2)
 AU95U95U53(tt,V1,V2) -> AU95U95ISPALLISTKIND(V2)
 AU95U95U54(tt,V1,V2) -> AU95U95U55(au95u95isNeList(V1),V2)
 AU95U95U54(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U55(tt,V2) -> AU95U95U56(au95u95isList(V2))
 AU95U95U55(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U61(tt,V) -> AU95U95U62(au95u95isPalListKind(V),V)
 AU95U95U61(tt,V) -> AU95U95ISPALLISTKIND(V)
 AU95U95U62(tt,V) -> AU95U95U63(au95u95isQid(V))
 AU95U95U62(tt,V) -> AU95U95ISQID(V)
 AU95U95U71(tt,I,P) -> AU95U95U72(au95u95isPalListKind(I),P)
 AU95U95U71(tt,I,P) -> AU95U95ISPALLISTKIND(I)
 AU95U95U72(tt,P) -> AU95U95U73(au95u95isPal(P),P)
 AU95U95U72(tt,P) -> AU95U95ISPAL(P)
 AU95U95U73(tt,P) -> AU95U95U74(au95u95isPalListKind(P))
 AU95U95U73(tt,P) -> AU95U95ISPALLISTKIND(P)
 AU95U95U81(tt,V) -> AU95U95U82(au95u95isPalListKind(V),V)
 AU95U95U81(tt,V) -> AU95U95ISPALLISTKIND(V)
 AU95U95U82(tt,V) -> AU95U95U83(au95u95isNePal(V))
 AU95U95U82(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95U91(tt,V2) -> AU95U95U92(au95u95isPalListKind(V2))
 AU95U95U91(tt,V2) -> AU95U95ISPALLISTKIND(V2)
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95U21(au95u95isPalListKind(V1),V1,V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISLIST(V) -> AU95U95U11(au95u95isPalListKind(V),V)
 AU95U95ISLIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95isPalListKind(V1),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95isPalListKind(V1),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 AU95U95ISNELIST(V) -> AU95U95U31(au95u95isPalListKind(V),V)
 AU95U95ISNELIST(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95U71(au95u95isQid(I),I,P)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95ISQID(I)
 AU95U95ISNEPAL(V) -> AU95U95U61(au95u95isPalListKind(V),V)
 AU95U95ISNEPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPAL(V) -> AU95U95U81(au95u95isPalListKind(V),V)
 AU95U95ISPAL(V) -> AU95U95ISPALLISTKIND(V)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95U91(au95u95isPalListKind(V1),V2)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
 MARK(U11(X1,X2)) -> AU95U95U11(mark(X1),X2)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> AU95U95U12(mark(X1),X2)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> AU95U95U13(mark(X))
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> AU95U95U21(mark(X1),X2,X3)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> AU95U95U22(mark(X1),X2,X3)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> AU95U95U23(mark(X1),X2,X3)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> AU95U95U24(mark(X1),X2,X3)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> AU95U95U25(mark(X1),X2)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> AU95U95U26(mark(X))
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> AU95U95U31(mark(X1),X2)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> AU95U95U32(mark(X1),X2)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> AU95U95U33(mark(X))
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> AU95U95U41(mark(X1),X2,X3)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> AU95U95U42(mark(X1),X2,X3)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> AU95U95U43(mark(X1),X2,X3)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> AU95U95U44(mark(X1),X2,X3)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> AU95U95U45(mark(X1),X2)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> AU95U95U46(mark(X))
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> AU95U95U51(mark(X1),X2,X3)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> AU95U95U52(mark(X1),X2,X3)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> AU95U95U53(mark(X1),X2,X3)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> AU95U95U54(mark(X1),X2,X3)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> AU95U95U55(mark(X1),X2)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> AU95U95U56(mark(X))
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> AU95U95U61(mark(X1),X2)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> AU95U95U62(mark(X1),X2)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> AU95U95U63(mark(X))
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> AU95U95U71(mark(X1),X2,X3)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> AU95U95U72(mark(X1),X2)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> AU95U95U73(mark(X1),X2)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> AU95U95U74(mark(X))
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> AU95U95U81(mark(X1),X2)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> AU95U95U82(mark(X1),X2)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> AU95U95U83(mark(X))
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> AU95U95U91(mark(X1),X2)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> AU95U95U92(mark(X))
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
 MARK(isList(X)) -> AU95U95ISLIST(X)
 MARK(isNeList(X)) -> AU95U95ISNELIST(X)
 MARK(isNePal(X)) -> AU95U95ISNEPAL(X)
 MARK(isPal(X)) -> AU95U95ISPAL(X)
 MARK(isPalListKind(X)) -> AU95U95ISPALLISTKIND(X)
 MARK(isQid(X)) -> AU95U95ISQID(X)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U91(tt,V2) -> AU95U95ISPALLISTKIND(V2)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95U91(au95u95isPalListKind(V1),V2)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->->Cycle:
->->-> Pairs:
 AU95U95U71(tt,I,P) -> AU95U95U72(au95u95isPalListKind(I),P)
 AU95U95U72(tt,P) -> AU95U95ISPAL(P)
 AU95U95U81(tt,V) -> AU95U95U82(au95u95isPalListKind(V),V)
 AU95U95U82(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95U71(au95u95isQid(I),I,P)
 AU95U95ISPAL(V) -> AU95U95U81(au95u95isPalListKind(V),V)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->->Cycle:
->->-> Pairs:
 AU95U95U11(tt,V) -> AU95U95U12(au95u95isPalListKind(V),V)
 AU95U95U12(tt,V) -> AU95U95ISNELIST(V)
 AU95U95U21(tt,V1,V2) -> AU95U95U22(au95u95isPalListKind(V1),V1,V2)
 AU95U95U22(tt,V1,V2) -> AU95U95U23(au95u95isPalListKind(V2),V1,V2)
 AU95U95U23(tt,V1,V2) -> AU95U95U24(au95u95isPalListKind(V2),V1,V2)
 AU95U95U24(tt,V1,V2) -> AU95U95U25(au95u95isList(V1),V2)
 AU95U95U24(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U25(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isPalListKind(V1),V1,V2)
 AU95U95U42(tt,V1,V2) -> AU95U95U43(au95u95isPalListKind(V2),V1,V2)
 AU95U95U43(tt,V1,V2) -> AU95U95U44(au95u95isPalListKind(V2),V1,V2)
 AU95U95U44(tt,V1,V2) -> AU95U95U45(au95u95isList(V1),V2)
 AU95U95U44(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U45(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isPalListKind(V1),V1,V2)
 AU95U95U52(tt,V1,V2) -> AU95U95U53(au95u95isPalListKind(V2),V1,V2)
 AU95U95U53(tt,V1,V2) -> AU95U95U54(au95u95isPalListKind(V2),V1,V2)
 AU95U95U54(tt,V1,V2) -> AU95U95U55(au95u95isNeList(V1),V2)
 AU95U95U54(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U55(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95U21(au95u95isPalListKind(V1),V1,V2)
 AU95U95ISLIST(V) -> AU95U95U11(au95u95isPalListKind(V),V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95isPalListKind(V1),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95isPalListKind(V1),V1,V2)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->->Cycle:
->->-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u


The problem is decomposed in 4 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 AU95U95U91(tt,V2) -> AU95U95ISPALLISTKIND(V2)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95U91(au95u95isPalListKind(V1),V2)
 AU95U95ISPALLISTKIND(u95u95(V1,V2)) -> AU95U95ISPALLISTKIND(V1)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Projection:
 pi(AU95U95U91) = 2
 pi(AU95U95ISPALLISTKIND) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 AU95U95U91(tt,V2) -> AU95U95ISPALLISTKIND(V2)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 AU95U95U71(tt,I,P) -> AU95U95U72(au95u95isPalListKind(I),P)
 AU95U95U72(tt,P) -> AU95U95ISPAL(P)
 AU95U95U81(tt,V) -> AU95U95U82(au95u95isPalListKind(V),V)
 AU95U95U82(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95ISNEPAL(u95u95(I,u95u95(P,I))) -> AU95U95U71(au95u95isQid(I),I,P)
 AU95U95ISPAL(V) -> AU95U95U81(au95u95isPalListKind(V),V)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Projection:
 pi(AU95U95U71) = 3
 pi(AU95U95U72) = 2
 pi(AU95U95U81) = 2
 pi(AU95U95U82) = 2
 pi(AU95U95ISNEPAL) = 1
 pi(AU95U95ISPAL) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 AU95U95U71(tt,I,P) -> AU95U95U72(au95u95isPalListKind(I),P)
 AU95U95U72(tt,P) -> AU95U95ISPAL(P)
 AU95U95U81(tt,V) -> AU95U95U82(au95u95isPalListKind(V),V)
 AU95U95U82(tt,V) -> AU95U95ISNEPAL(V)
 AU95U95ISPAL(V) -> AU95U95U81(au95u95isPalListKind(V),V)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95U11(tt,V) -> AU95U95U12(au95u95isPalListKind(V),V)
 AU95U95U12(tt,V) -> AU95U95ISNELIST(V)
 AU95U95U21(tt,V1,V2) -> AU95U95U22(au95u95isPalListKind(V1),V1,V2)
 AU95U95U22(tt,V1,V2) -> AU95U95U23(au95u95isPalListKind(V2),V1,V2)
 AU95U95U23(tt,V1,V2) -> AU95U95U24(au95u95isPalListKind(V2),V1,V2)
 AU95U95U24(tt,V1,V2) -> AU95U95U25(au95u95isList(V1),V2)
 AU95U95U24(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U25(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isPalListKind(V1),V1,V2)
 AU95U95U42(tt,V1,V2) -> AU95U95U43(au95u95isPalListKind(V2),V1,V2)
 AU95U95U43(tt,V1,V2) -> AU95U95U44(au95u95isPalListKind(V2),V1,V2)
 AU95U95U44(tt,V1,V2) -> AU95U95U45(au95u95isList(V1),V2)
 AU95U95U44(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U45(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isPalListKind(V1),V1,V2)
 AU95U95U52(tt,V1,V2) -> AU95U95U53(au95u95isPalListKind(V2),V1,V2)
 AU95U95U53(tt,V1,V2) -> AU95U95U54(au95u95isPalListKind(V2),V1,V2)
 AU95U95U54(tt,V1,V2) -> AU95U95U55(au95u95isNeList(V1),V2)
 AU95U95U54(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U55(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95U21(au95u95isPalListKind(V1),V1,V2)
 AU95U95ISLIST(V) -> AU95U95U11(au95u95isPalListKind(V),V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95isPalListKind(V1),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95isPalListKind(V1),V1,V2)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = 2.X2 + 2
[au95u95U12](X1,X2) = 2.X2 + 2
[au95u95U13](X) = 2
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2,X3) = 2.X1 + 2.X3 + 2
[au95u95U23](X1,X2,X3) = 2.X3 + 2
[au95u95U24](X1,X2,X3) = 2.X1 + 1
[au95u95U25](X1,X2) = 2
[au95u95U26](X) = 2
[au95u95U31](X1,X2) = 2.X1 + 2
[au95u95U32](X1,X2) = 2
[au95u95U33](X) = 2
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2,X3) = 2.X1 + 2.X3 + 2
[au95u95U43](X1,X2,X3) = X1 + X3 + 2
[au95u95U44](X1,X2,X3) = X3 + 2
[au95u95U45](X1,X2) = X2 + 2
[au95u95U46](X) = 2
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2,X3) = 2.X2 + 2.X3 + 2
[au95u95U53](X1,X2,X3) = 2.X1 + 2.X2 + 2
[au95u95U54](X1,X2,X3) = 2.X2 + 2
[au95u95U55](X1,X2) = 2
[au95u95U56](X) = 2
[au95u95U61](X1,X2) = 0
[au95u95U62](X1,X2) = 0
[au95u95U63](X) = 0
[au95u95U71](X1,X2,X3) = 0
[au95u95U72](X1,X2) = 0
[au95u95U73](X1,X2) = 0
[au95u95U74](X) = 0
[au95u95U81](X1,X2) = 0
[au95u95U82](X1,X2) = 0
[au95u95U83](X) = 0
[au95u95U91](X1,X2) = X1 + 2.X2 + 2
[au95u95U92](X) = 2.X + 2
[au95u95u95u95](X1,X2) = 0
[au95u95isList](X) = 2.X + 2
[au95u95isNeList](X) = 2.X + 2
[au95u95isNePal](X) = 0
[au95u95isPal](X) = 0
[au95u95isPalListKind](X) = X
[au95u95isQid](X) = 2.X
[mark](X) = 0
[U11](X1,X2) = 2.X2
[U12](X1,X2) = 2.X2 + 1
[U13](X) = 2
[U21](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 2
[U22](X1,X2,X3) = 2.X1 + 2.X3 + 2
[U23](X1,X2,X3) = 2
[U24](X1,X2,X3) = 1
[U25](X1,X2) = 0
[U26](X) = 2
[U31](X1,X2) = X1 + 1
[U32](X1,X2) = 1
[U33](X) = 2
[U41](X1,X2,X3) = 2.X1 + X2 + 2.X3 + 2
[U42](X1,X2,X3) = 2.X1 + 2.X3 + 1
[U43](X1,X2,X3) = X1 + 1
[U44](X1,X2,X3) = X3 + 2
[U45](X1,X2) = X2 + 1
[U46](X) = 1
[U51](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 1
[U52](X1,X2,X3) = 2.X2 + 2.X3
[U53](X1,X2,X3) = 2.X1 + 2
[U54](X1,X2,X3) = 2.X2
[U55](X1,X2) = 0
[U56](X) = 2
[U61](X1,X2) = 0
[U62](X1,X2) = 0
[U63](X) = 0
[U71](X1,X2,X3) = 0
[U72](X1,X2) = 0
[U73](X1,X2) = 0
[U74](X) = 0
[U81](X1,X2) = 0
[U82](X1,X2) = 0
[U83](X) = 0
[U91](X1,X2) = X1 + 2.X2 + 2
[U92](X) = 1
[u95u95](X1,X2) = 2.X1 + 2.X2 + 2
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[isList](X) = 2.X + 1
[isNeList](X) = X + 1
[isNePal](X) = 0
[isPal](X) = 0
[isPalListKind](X) = X
[isQid](X) = 2.X
[nil] = 2
[o] = 2
[tt] = 2
[u] = 2
[AU95U95U11](X1,X2) = X1 + X2 + 2
[AU95U95U12](X1,X2) = X2 + 2
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[AU95U95U22](X1,X2,X3) = 2.X2 + 2.X3 + 2
[AU95U95U23](X1,X2,X3) = 2.X2 + 2.X3 + 2
[AU95U95U24](X1,X2,X3) = 2.X2 + 2.X3 + 2
[AU95U95U25](X1,X2) = X1 + 2.X2
[AU95U95U26](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X1,X2) = 0
[AU95U95U33](X) = 0
[AU95U95U41](X1,X2,X3) = 2.X2 + 2.X3 + 2
[AU95U95U42](X1,X2,X3) = 2.X2 + 2.X3 + 2
[AU95U95U43](X1,X2,X3) = X1 + 2.X2 + X3 + 2
[AU95U95U44](X1,X2,X3) = 2.X2 + X3 + 2
[AU95U95U45](X1,X2) = X2 + 2
[AU95U95U46](X) = 0
[AU95U95U51](X1,X2,X3) = 2.X2 + 2.X3 + 2
[AU95U95U52](X1,X2,X3) = X1 + X2 + 2.X3 + 2
[AU95U95U53](X1,X2,X3) = X2 + 2.X3 + 2
[AU95U95U54](X1,X2,X3) = X2 + 2.X3 + 2
[AU95U95U55](X1,X2) = 2.X2 + 2
[AU95U95U56](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X1,X2) = 0
[AU95U95U63](X) = 0
[AU95U95U71](X1,X2,X3) = 0
[AU95U95U72](X1,X2) = 0
[AU95U95U73](X1,X2) = 0
[AU95U95U74](X) = 0
[AU95U95U81](X1,X2) = 0
[AU95U95U82](X1,X2) = 0
[AU95U95U83](X) = 0
[AU95U95U91](X1,X2) = 0
[AU95U95U92](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95ISLIST](X) = 2.X + 2
[AU95U95ISNELIST](X) = X + 2
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = 0

Problem 1.3: 

SCC Processor:
-> Pairs:
 AU95U95U12(tt,V) -> AU95U95ISNELIST(V)
 AU95U95U21(tt,V1,V2) -> AU95U95U22(au95u95isPalListKind(V1),V1,V2)
 AU95U95U22(tt,V1,V2) -> AU95U95U23(au95u95isPalListKind(V2),V1,V2)
 AU95U95U23(tt,V1,V2) -> AU95U95U24(au95u95isPalListKind(V2),V1,V2)
 AU95U95U24(tt,V1,V2) -> AU95U95U25(au95u95isList(V1),V2)
 AU95U95U24(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U25(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isPalListKind(V1),V1,V2)
 AU95U95U42(tt,V1,V2) -> AU95U95U43(au95u95isPalListKind(V2),V1,V2)
 AU95U95U43(tt,V1,V2) -> AU95U95U44(au95u95isPalListKind(V2),V1,V2)
 AU95U95U44(tt,V1,V2) -> AU95U95U45(au95u95isList(V1),V2)
 AU95U95U44(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U45(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isPalListKind(V1),V1,V2)
 AU95U95U52(tt,V1,V2) -> AU95U95U53(au95u95isPalListKind(V2),V1,V2)
 AU95U95U53(tt,V1,V2) -> AU95U95U54(au95u95isPalListKind(V2),V1,V2)
 AU95U95U54(tt,V1,V2) -> AU95U95U55(au95u95isNeList(V1),V2)
 AU95U95U54(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95U55(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95U21(au95u95isPalListKind(V1),V1,V2)
 AU95U95ISLIST(V) -> AU95U95U11(au95u95isPalListKind(V),V)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95isPalListKind(V1),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95isPalListKind(V1),V1,V2)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U21(tt,V1,V2) -> AU95U95U22(au95u95isPalListKind(V1),V1,V2)
 AU95U95U22(tt,V1,V2) -> AU95U95U23(au95u95isPalListKind(V2),V1,V2)
 AU95U95U23(tt,V1,V2) -> AU95U95U24(au95u95isPalListKind(V2),V1,V2)
 AU95U95U24(tt,V1,V2) -> AU95U95U25(au95u95isList(V1),V2)
 AU95U95U24(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U25(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95U21(au95u95isPalListKind(V1),V1,V2)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->->Cycle:
->->-> Pairs:
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isPalListKind(V1),V1,V2)
 AU95U95U42(tt,V1,V2) -> AU95U95U43(au95u95isPalListKind(V2),V1,V2)
 AU95U95U43(tt,V1,V2) -> AU95U95U44(au95u95isPalListKind(V2),V1,V2)
 AU95U95U44(tt,V1,V2) -> AU95U95U45(au95u95isList(V1),V2)
 AU95U95U45(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isPalListKind(V1),V1,V2)
 AU95U95U52(tt,V1,V2) -> AU95U95U53(au95u95isPalListKind(V2),V1,V2)
 AU95U95U53(tt,V1,V2) -> AU95U95U54(au95u95isPalListKind(V2),V1,V2)
 AU95U95U54(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95isPalListKind(V1),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95isPalListKind(V1),V1,V2)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u


The problem is decomposed in 2 subproblems.

Problem 1.3.1: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95U21(tt,V1,V2) -> AU95U95U22(au95u95isPalListKind(V1),V1,V2)
 AU95U95U22(tt,V1,V2) -> AU95U95U23(au95u95isPalListKind(V2),V1,V2)
 AU95U95U23(tt,V1,V2) -> AU95U95U24(au95u95isPalListKind(V2),V1,V2)
 AU95U95U24(tt,V1,V2) -> AU95U95U25(au95u95isList(V1),V2)
 AU95U95U24(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U25(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95U21(au95u95isPalListKind(V1),V1,V2)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = X1 + 2
[au95u95U12](X1,X2) = 2
[au95u95U13](X) = 2
[au95u95U21](X1,X2,X3) = X1 + X2 + 2.X3 + 1
[au95u95U22](X1,X2,X3) = X2 + 2.X3 + 2
[au95u95U23](X1,X2,X3) = X1 + X2 + X3 + 1
[au95u95U24](X1,X2,X3) = X1 + X2 + 2
[au95u95U25](X1,X2) = X1 + 2
[au95u95U26](X) = 2
[au95u95U31](X1,X2) = 2.X2
[au95u95U32](X1,X2) = 2.X1
[au95u95U33](X) = 2
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X3
[au95u95U42](X1,X2,X3) = 2.X3
[au95u95U43](X1,X2,X3) = X1 + X3
[au95u95U44](X1,X2,X3) = X1
[au95u95U45](X1,X2) = 2
[au95u95U46](X) = 2
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2,X3) = 2.X2 + 2.X3 + 2
[au95u95U53](X1,X2,X3) = 2.X2 + 2.X3 + 2
[au95u95U54](X1,X2,X3) = 2.X2 + 2.X3 + 2
[au95u95U55](X1,X2) = X1 + 2.X2 + 2
[au95u95U56](X) = 2.X
[au95u95U61](X1,X2) = 0
[au95u95U62](X1,X2) = 0
[au95u95U63](X) = 0
[au95u95U71](X1,X2,X3) = 0
[au95u95U72](X1,X2) = 0
[au95u95U73](X1,X2) = 0
[au95u95U74](X) = 0
[au95u95U81](X1,X2) = 0
[au95u95U82](X1,X2) = 0
[au95u95U83](X) = 0
[au95u95U91](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U92](X) = 2.X + 2
[au95u95u95u95](X1,X2) = 0
[au95u95isList](X) = X + 2
[au95u95isNeList](X) = 2.X
[au95u95isNePal](X) = 0
[au95u95isPal](X) = 0
[au95u95isPalListKind](X) = X
[au95u95isQid](X) = 2.X
[mark](X) = 0
[U11](X1,X2) = X1 + 2
[U12](X1,X2) = 2
[U13](X) = 2
[U21](X1,X2,X3) = X1 + X2 + 2.X3 + 1
[U22](X1,X2,X3) = 2.X3 + 2
[U23](X1,X2,X3) = X1 + X2 + X3 + 1
[U24](X1,X2,X3) = X1 + 2
[U25](X1,X2) = X1 + 2
[U26](X) = 2
[U31](X1,X2) = 2.X2
[U32](X1,X2) = 2.X1
[U33](X) = 2
[U41](X1,X2,X3) = 2.X1 + 2.X3
[U42](X1,X2,X3) = 2.X3
[U43](X1,X2,X3) = X1 + X3
[U44](X1,X2,X3) = X1
[U45](X1,X2) = 1
[U46](X) = 2
[U51](X1,X2,X3) = 2.X2 + 2.X3 + 2
[U52](X1,X2,X3) = 2.X2 + 1
[U53](X1,X2,X3) = X2 + X3 + 2
[U54](X1,X2,X3) = 2.X2 + 2.X3
[U55](X1,X2) = 2
[U56](X) = 2.X
[U61](X1,X2) = 0
[U62](X1,X2) = 0
[U63](X) = 0
[U71](X1,X2,X3) = 0
[U72](X1,X2) = 0
[U73](X1,X2) = 0
[U74](X) = 0
[U81](X1,X2) = 0
[U82](X1,X2) = 0
[U83](X) = 0
[U91](X1,X2) = 2.X1 + 2.X2 + 1
[U92](X) = 2.X + 2
[u95u95](X1,X2) = 2.X1 + 2.X2 + 2
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[isList](X) = X
[isNeList](X) = 0
[isNePal](X) = 0
[isPal](X) = 0
[isPalListKind](X) = X
[isQid](X) = 2.X
[nil] = 2
[o] = 2
[tt] = 2
[u] = 2
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X1,X2) = 0
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[AU95U95U22](X1,X2,X3) = 2.X2 + 2.X3 + 2
[AU95U95U23](X1,X2,X3) = 2.X2 + 2.X3 + 1
[AU95U95U24](X1,X2,X3) = 2.X2 + 2.X3 + 1
[AU95U95U25](X1,X2) = 2.X2 + 1
[AU95U95U26](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X1,X2) = 0
[AU95U95U33](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2,X3) = 0
[AU95U95U43](X1,X2,X3) = 0
[AU95U95U44](X1,X2,X3) = 0
[AU95U95U45](X1,X2) = 0
[AU95U95U46](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2,X3) = 0
[AU95U95U53](X1,X2,X3) = 0
[AU95U95U54](X1,X2,X3) = 0
[AU95U95U55](X1,X2) = 0
[AU95U95U56](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X1,X2) = 0
[AU95U95U63](X) = 0
[AU95U95U71](X1,X2,X3) = 0
[AU95U95U72](X1,X2) = 0
[AU95U95U73](X1,X2) = 0
[AU95U95U74](X) = 0
[AU95U95U81](X1,X2) = 0
[AU95U95U82](X1,X2) = 0
[AU95U95U83](X) = 0
[AU95U95U91](X1,X2) = 0
[AU95U95U92](X) = 0
[AU95U95U95U95](X1,X2) = 0
[AU95U95ISLIST](X) = 2.X + 1
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = 0

Problem 1.3.1: 

SCC Processor:
-> Pairs:
 AU95U95U22(tt,V1,V2) -> AU95U95U23(au95u95isPalListKind(V2),V1,V2)
 AU95U95U23(tt,V1,V2) -> AU95U95U24(au95u95isPalListKind(V2),V1,V2)
 AU95U95U24(tt,V1,V2) -> AU95U95U25(au95u95isList(V1),V2)
 AU95U95U24(tt,V1,V2) -> AU95U95ISLIST(V1)
 AU95U95U25(tt,V2) -> AU95U95ISLIST(V2)
 AU95U95ISLIST(u95u95(V1,V2)) -> AU95U95U21(au95u95isPalListKind(V1),V1,V2)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3.2: 

Subterm Processor:
-> Pairs:
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isPalListKind(V1),V1,V2)
 AU95U95U42(tt,V1,V2) -> AU95U95U43(au95u95isPalListKind(V2),V1,V2)
 AU95U95U43(tt,V1,V2) -> AU95U95U44(au95u95isPalListKind(V2),V1,V2)
 AU95U95U44(tt,V1,V2) -> AU95U95U45(au95u95isList(V1),V2)
 AU95U95U45(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isPalListKind(V1),V1,V2)
 AU95U95U52(tt,V1,V2) -> AU95U95U53(au95u95isPalListKind(V2),V1,V2)
 AU95U95U53(tt,V1,V2) -> AU95U95U54(au95u95isPalListKind(V2),V1,V2)
 AU95U95U54(tt,V1,V2) -> AU95U95ISNELIST(V1)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U41(au95u95isPalListKind(V1),V1,V2)
 AU95U95ISNELIST(u95u95(V1,V2)) -> AU95U95U51(au95u95isPalListKind(V1),V1,V2)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Projection:
 pi(AU95U95U41) = 3
 pi(AU95U95U42) = 3
 pi(AU95U95U43) = 3
 pi(AU95U95U44) = 3
 pi(AU95U95U45) = 2
 pi(AU95U95U51) = 2
 pi(AU95U95U52) = 2
 pi(AU95U95U53) = 2
 pi(AU95U95U54) = 2
 pi(AU95U95ISNELIST) = 1

Problem 1.3.2: 

SCC Processor:
-> Pairs:
 AU95U95U41(tt,V1,V2) -> AU95U95U42(au95u95isPalListKind(V1),V1,V2)
 AU95U95U42(tt,V1,V2) -> AU95U95U43(au95u95isPalListKind(V2),V1,V2)
 AU95U95U43(tt,V1,V2) -> AU95U95U44(au95u95isPalListKind(V2),V1,V2)
 AU95U95U44(tt,V1,V2) -> AU95U95U45(au95u95isList(V1),V2)
 AU95U95U45(tt,V2) -> AU95U95ISNELIST(V2)
 AU95U95U51(tt,V1,V2) -> AU95U95U52(au95u95isPalListKind(V1),V1,V2)
 AU95U95U52(tt,V1,V2) -> AU95U95U53(au95u95isPalListKind(V2),V1,V2)
 AU95U95U53(tt,V1,V2) -> AU95U95U54(au95u95isPalListKind(V2),V1,V2)
 AU95U95U54(tt,V1,V2) -> AU95U95ISNELIST(V1)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = X1 + 2.X2
[au95u95U12](X1,X2) = X1 + 2.X2
[au95u95U13](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U23](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U24](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U25](X1,X2) = X1 + 2.X2 + 2
[au95u95U26](X) = X + 2
[au95u95U31](X1,X2) = X1 + X2
[au95u95U32](X1,X2) = X1 + X2
[au95u95U33](X) = X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U43](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U44](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 1
[au95u95U45](X1,X2) = X1 + 2.X2 + 2
[au95u95U46](X) = X + 2
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U53](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U54](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U55](X1,X2) = X1 + 2.X2 + 2
[au95u95U56](X) = X + 2
[au95u95U61](X1,X2) = X1 + X2
[au95u95U62](X1,X2) = X1 + X2
[au95u95U63](X) = X
[au95u95U71](X1,X2,X3) = 2.X1 + X2 + 2.X3 + 2
[au95u95U72](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U73](X1,X2) = 2.X1 + 2
[au95u95U74](X) = X + 2
[au95u95U81](X1,X2) = X1 + X2
[au95u95U82](X1,X2) = X1 + X2
[au95u95U83](X) = X
[au95u95U91](X1,X2) = X1
[au95u95U92](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95isList](X) = 2.X + 2
[au95u95isNeList](X) = 2.X + 2
[au95u95isNePal](X) = X + 2
[au95u95isPal](X) = X + 2
[au95u95isPalListKind](X) = 2
[au95u95isQid](X) = X + 2
[mark](X) = X
[U11](X1,X2) = X1 + 2.X2
[U12](X1,X2) = X1 + 2.X2
[U13](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U23](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U24](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U25](X1,X2) = X1 + 2.X2 + 2
[U26](X) = X + 2
[U31](X1,X2) = X1 + X2
[U32](X1,X2) = X1 + X2
[U33](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U43](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U44](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 1
[U45](X1,X2) = X1 + 2.X2 + 2
[U46](X) = X + 2
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U53](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U54](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U55](X1,X2) = X1 + 2.X2 + 2
[U56](X) = X + 2
[U61](X1,X2) = X1 + X2
[U62](X1,X2) = X1 + X2
[U63](X) = X
[U71](X1,X2,X3) = 2.X1 + X2 + 2.X3 + 2
[U72](X1,X2) = 2.X1 + 2.X2 + 2
[U73](X1,X2) = 2.X1 + 2
[U74](X) = X + 2
[U81](X1,X2) = X1 + X2
[U82](X1,X2) = X1 + X2
[U83](X) = X
[U91](X1,X2) = X1
[U92](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[e] = 0
[fSNonEmpty] = 0
[i] = 1
[isList](X) = 2.X + 2
[isNeList](X) = 2.X + 2
[isNePal](X) = X + 2
[isPal](X) = X + 2
[isPalListKind](X) = 2
[isQid](X) = X + 2
[nil] = 2
[o] = 1
[tt] = 2
[u] = 1
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X1,X2) = 0
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2,X3) = 0
[AU95U95U23](X1,X2,X3) = 0
[AU95U95U24](X1,X2,X3) = 0
[AU95U95U25](X1,X2) = 0
[AU95U95U26](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X1,X2) = 0
[AU95U95U33](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2,X3) = 0
[AU95U95U43](X1,X2,X3) = 0
[AU95U95U44](X1,X2,X3) = 0
[AU95U95U45](X1,X2) = 0
[AU95U95U46](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2,X3) = 0
[AU95U95U53](X1,X2,X3) = 0
[AU95U95U54](X1,X2,X3) = 0
[AU95U95U55](X1,X2) = 0
[AU95U95U56](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X1,X2) = 0
[AU95U95U63](X) = 0
[AU95U95U71](X1,X2,X3) = 0
[AU95U95U72](X1,X2) = 0
[AU95U95U73](X1,X2) = 0
[AU95U95U74](X) = 0
[AU95U95U81](X1,X2) = 0
[AU95U95U82](X1,X2) = 0
[AU95U95U83](X) = 0
[AU95U95U91](X1,X2) = 0
[AU95U95U92](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = X + 2

Problem 1.4: 

SCC Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1.4: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> AU95U95U95U95(mark(Y),mark(Z))
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = X1 + 2.X2
[au95u95U12](X1,X2) = X1 + 2.X2
[au95u95U13](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U23](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U24](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U25](X1,X2) = X1 + 2.X2 + 2
[au95u95U26](X) = X + 1
[au95u95U31](X1,X2) = X1 + 2.X2
[au95u95U32](X1,X2) = X1 + 2.X2
[au95u95U33](X) = 2.X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U43](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U44](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U45](X1,X2) = X1 + 2.X2 + 2
[au95u95U46](X) = X + 1
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U53](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U54](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U55](X1,X2) = X1 + 2.X2 + 2
[au95u95U56](X) = X + 2
[au95u95U61](X1,X2) = X1 + 2.X2
[au95u95U62](X1,X2) = X1 + 2.X2
[au95u95U63](X) = 2.X
[au95u95U71](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U72](X1,X2) = X1 + 2.X2 + 2
[au95u95U73](X1,X2) = X1 + 2
[au95u95U74](X) = X + 1
[au95u95U81](X1,X2) = X1 + 2.X2
[au95u95U82](X1,X2) = X1 + 2.X2
[au95u95U83](X) = X
[au95u95U91](X1,X2) = X1
[au95u95U92](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95isList](X) = 2.X + 2
[au95u95isNeList](X) = 2.X + 2
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 2
[au95u95isQid](X) = X + 1
[mark](X) = X
[U11](X1,X2) = X1 + 2.X2
[U12](X1,X2) = X1 + 2.X2
[U13](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U23](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U24](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U25](X1,X2) = X1 + 2.X2 + 2
[U26](X) = X + 1
[U31](X1,X2) = X1 + 2.X2
[U32](X1,X2) = X1 + 2.X2
[U33](X) = 2.X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U43](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U44](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U45](X1,X2) = X1 + 2.X2 + 2
[U46](X) = X + 1
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U53](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U54](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U55](X1,X2) = X1 + 2.X2 + 2
[U56](X) = X + 2
[U61](X1,X2) = X1 + 2.X2
[U62](X1,X2) = X1 + 2.X2
[U63](X) = 2.X
[U71](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U72](X1,X2) = X1 + 2.X2 + 2
[U73](X1,X2) = X1 + 2
[U74](X) = X + 1
[U81](X1,X2) = X1 + 2.X2
[U82](X1,X2) = X1 + 2.X2
[U83](X) = X
[U91](X1,X2) = X1
[U92](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[e] = 1
[fSNonEmpty] = 0
[i] = 1
[isList](X) = 2.X + 2
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 2
[isQid](X) = X + 1
[nil] = 2
[o] = 2
[tt] = 2
[u] = 2
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X1,X2) = 0
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2,X3) = 0
[AU95U95U23](X1,X2,X3) = 0
[AU95U95U24](X1,X2,X3) = 0
[AU95U95U25](X1,X2) = 0
[AU95U95U26](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X1,X2) = 0
[AU95U95U33](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2,X3) = 0
[AU95U95U43](X1,X2,X3) = 0
[AU95U95U44](X1,X2,X3) = 0
[AU95U95U45](X1,X2) = 0
[AU95U95U46](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2,X3) = 0
[AU95U95U53](X1,X2,X3) = 0
[AU95U95U54](X1,X2,X3) = 0
[AU95U95U55](X1,X2) = 0
[AU95U95U56](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X1,X2) = 0
[AU95U95U63](X) = 0
[AU95U95U71](X1,X2,X3) = 0
[AU95U95U72](X1,X2) = 0
[AU95U95U73](X1,X2) = 0
[AU95U95U74](X) = 0
[AU95U95U81](X1,X2) = 0
[AU95U95U82](X1,X2) = 0
[AU95U95U83](X) = 0
[AU95U95U91](X1,X2) = 0
[AU95U95U92](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = X + 1

Problem 1.4: 

SCC Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1.4: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(X)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = X1 + 2.X2
[au95u95U12](X1,X2) = X1 + 2.X2
[au95u95U13](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U23](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U24](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U25](X1,X2) = X1 + 2.X2 + 2
[au95u95U26](X) = X + 2
[au95u95U31](X1,X2) = X1 + 2.X2
[au95u95U32](X1,X2) = X1 + 2.X2
[au95u95U33](X) = X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U43](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U44](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U45](X1,X2) = X1 + 2.X2 + 2
[au95u95U46](X) = X + 2
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U53](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U54](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U55](X1,X2) = X1 + 2.X2 + 1
[au95u95U56](X) = X + 1
[au95u95U61](X1,X2) = X1 + 2.X2
[au95u95U62](X1,X2) = X1 + 2.X2
[au95u95U63](X) = X
[au95u95U71](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[au95u95U72](X1,X2) = X1 + 2.X2 + 2
[au95u95U73](X1,X2) = X1 + 2
[au95u95U74](X) = 2.X
[au95u95U81](X1,X2) = X1 + 2.X2
[au95u95U82](X1,X2) = X1 + 2.X2
[au95u95U83](X) = X
[au95u95U91](X1,X2) = X1
[au95u95U92](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95isList](X) = 2.X + 2
[au95u95isNeList](X) = 2.X + 2
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 2
[au95u95isQid](X) = 2.X + 2
[mark](X) = X
[U11](X1,X2) = X1 + 2.X2
[U12](X1,X2) = X1 + 2.X2
[U13](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U23](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U24](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U25](X1,X2) = X1 + 2.X2 + 2
[U26](X) = X + 2
[U31](X1,X2) = X1 + 2.X2
[U32](X1,X2) = X1 + 2.X2
[U33](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U43](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U44](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U45](X1,X2) = X1 + 2.X2 + 2
[U46](X) = X + 2
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U53](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U54](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U55](X1,X2) = X1 + 2.X2 + 1
[U56](X) = X + 1
[U61](X1,X2) = X1 + 2.X2
[U62](X1,X2) = X1 + 2.X2
[U63](X) = X
[U71](X1,X2,X3) = X1 + 2.X2 + 2.X3 + 2
[U72](X1,X2) = X1 + 2.X2 + 2
[U73](X1,X2) = X1 + 2
[U74](X) = 2.X
[U81](X1,X2) = X1 + 2.X2
[U82](X1,X2) = X1 + 2.X2
[U83](X) = X
[U91](X1,X2) = X1
[U92](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[e] = 0
[fSNonEmpty] = 0
[i] = 1
[isList](X) = 2.X + 2
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 2
[isQid](X) = 2.X + 2
[nil] = 2
[o] = 0
[tt] = 2
[u] = 1
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X1,X2) = 0
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2,X3) = 0
[AU95U95U23](X1,X2,X3) = 0
[AU95U95U24](X1,X2,X3) = 0
[AU95U95U25](X1,X2) = 0
[AU95U95U26](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X1,X2) = 0
[AU95U95U33](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2,X3) = 0
[AU95U95U43](X1,X2,X3) = 0
[AU95U95U44](X1,X2,X3) = 0
[AU95U95U45](X1,X2) = 0
[AU95U95U46](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2,X3) = 0
[AU95U95U53](X1,X2,X3) = 0
[AU95U95U54](X1,X2,X3) = 0
[AU95U95U55](X1,X2) = 0
[AU95U95U56](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X1,X2) = 0
[AU95U95U63](X) = 0
[AU95U95U71](X1,X2,X3) = 0
[AU95U95U72](X1,X2) = 0
[AU95U95U73](X1,X2) = 0
[AU95U95U74](X) = 0
[AU95U95U81](X1,X2) = 0
[AU95U95U82](X1,X2) = 0
[AU95U95U83](X) = 0
[AU95U95U91](X1,X2) = 0
[AU95U95U92](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X

Problem 1.4: 

SCC Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1.4: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Y)
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = X1 + 2.X2
[au95u95U12](X1,X2) = X1 + 2.X2
[au95u95U13](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U23](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U24](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 1
[au95u95U25](X1,X2) = X1 + 2.X2 + 2
[au95u95U26](X) = X + 2
[au95u95U31](X1,X2) = X1 + 2.X2
[au95u95U32](X1,X2) = X1 + 2.X2
[au95u95U33](X) = X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U43](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U44](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U45](X1,X2) = X1 + 2.X2 + 2
[au95u95U46](X) = X + 2
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U53](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U54](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U55](X1,X2) = X1 + 2.X2 + 2
[au95u95U56](X) = X + 2
[au95u95U61](X1,X2) = X1 + 2.X2
[au95u95U62](X1,X2) = X1 + 2.X2
[au95u95U63](X) = X
[au95u95U71](X1,X2,X3) = X1 + 2.X3 + 2
[au95u95U72](X1,X2) = X1 + 2.X2 + 2
[au95u95U73](X1,X2) = X1 + 2
[au95u95U74](X) = 2.X
[au95u95U81](X1,X2) = X1 + 2.X2
[au95u95U82](X1,X2) = X1 + 2.X2
[au95u95U83](X) = X
[au95u95U91](X1,X2) = X1
[au95u95U92](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95isList](X) = 2.X + 2
[au95u95isNeList](X) = 2.X + 2
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 2
[au95u95isQid](X) = 2.X + 2
[mark](X) = X
[U11](X1,X2) = X1 + 2.X2
[U12](X1,X2) = X1 + 2.X2
[U13](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U23](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U24](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 1
[U25](X1,X2) = X1 + 2.X2 + 2
[U26](X) = X + 2
[U31](X1,X2) = X1 + 2.X2
[U32](X1,X2) = X1 + 2.X2
[U33](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U43](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U44](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U45](X1,X2) = X1 + 2.X2 + 2
[U46](X) = X + 2
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U53](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U54](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U55](X1,X2) = X1 + 2.X2 + 2
[U56](X) = X + 2
[U61](X1,X2) = X1 + 2.X2
[U62](X1,X2) = X1 + 2.X2
[U63](X) = X
[U71](X1,X2,X3) = X1 + 2.X3 + 2
[U72](X1,X2) = X1 + 2.X2 + 2
[U73](X1,X2) = X1 + 2
[U74](X) = 2.X
[U81](X1,X2) = X1 + 2.X2
[U82](X1,X2) = X1 + 2.X2
[U83](X) = X
[U91](X1,X2) = X1
[U92](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 1
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[isList](X) = 2.X + 2
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 2
[isQid](X) = 2.X + 2
[nil] = 0
[o] = 2
[tt] = 2
[u] = 2
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X1,X2) = 0
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2,X3) = 0
[AU95U95U23](X1,X2,X3) = 0
[AU95U95U24](X1,X2,X3) = 0
[AU95U95U25](X1,X2) = 0
[AU95U95U26](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X1,X2) = 0
[AU95U95U33](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2,X3) = 0
[AU95U95U43](X1,X2,X3) = 0
[AU95U95U44](X1,X2,X3) = 0
[AU95U95U45](X1,X2) = 0
[AU95U95U46](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2,X3) = 0
[AU95U95U53](X1,X2,X3) = 0
[AU95U95U54](X1,X2,X3) = 0
[AU95U95U55](X1,X2) = 0
[AU95U95U56](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X1,X2) = 0
[AU95U95U63](X) = 0
[AU95U95U71](X1,X2,X3) = 0
[AU95U95U72](X1,X2) = 0
[AU95U95U73](X1,X2) = 0
[AU95U95U74](X) = 0
[AU95U95U81](X1,X2) = 0
[AU95U95U82](X1,X2) = 0
[AU95U95U83](X) = 0
[AU95U95U91](X1,X2) = 0
[AU95U95U92](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + 2.X2 + 1
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X

Problem 1.4: 

SCC Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1.4: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95U95U95(u95u95(X,Y),Z) -> MARK(Z)
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = X1 + 2.X2
[au95u95U12](X1,X2) = X1 + 2.X2
[au95u95U13](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U23](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U24](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U25](X1,X2) = X1 + 2.X2 + 2
[au95u95U26](X) = X + 2
[au95u95U31](X1,X2) = X1 + 2.X2
[au95u95U32](X1,X2) = X1 + 2.X2
[au95u95U33](X) = X
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U43](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U44](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U45](X1,X2) = X1 + 2.X2 + 2
[au95u95U46](X) = X + 2
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U53](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U54](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U55](X1,X2) = X1 + 2.X2 + 2
[au95u95U56](X) = X + 1
[au95u95U61](X1,X2) = X1 + 2.X2
[au95u95U62](X1,X2) = X1 + 2.X2
[au95u95U63](X) = X
[au95u95U71](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U72](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U73](X1,X2) = X1 + 2
[au95u95U74](X) = X + 1
[au95u95U81](X1,X2) = X1 + 2.X2
[au95u95U82](X1,X2) = X1 + 2.X2
[au95u95U83](X) = X
[au95u95U91](X1,X2) = X1
[au95u95U92](X) = X
[au95u95u95u95](X1,X2) = 2.X1 + X2 + 2
[au95u95isList](X) = 2.X + 2
[au95u95isNeList](X) = 2.X + 2
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 2
[au95u95isQid](X) = 2
[mark](X) = X
[U11](X1,X2) = X1 + 2.X2
[U12](X1,X2) = X1 + 2.X2
[U13](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U23](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U24](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U25](X1,X2) = X1 + 2.X2 + 2
[U26](X) = X + 2
[U31](X1,X2) = X1 + 2.X2
[U32](X1,X2) = X1 + 2.X2
[U33](X) = X
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U43](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U44](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U45](X1,X2) = X1 + 2.X2 + 2
[U46](X) = X + 2
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U53](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U54](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U55](X1,X2) = X1 + 2.X2 + 2
[U56](X) = X + 1
[U61](X1,X2) = X1 + 2.X2
[U62](X1,X2) = X1 + 2.X2
[U63](X) = X
[U71](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U72](X1,X2) = 2.X1 + 2.X2 + 2
[U73](X1,X2) = X1 + 2
[U74](X) = X + 1
[U81](X1,X2) = X1 + 2.X2
[U82](X1,X2) = X1 + 2.X2
[U83](X) = X
[U91](X1,X2) = X1
[U92](X) = X
[u95u95](X1,X2) = 2.X1 + X2 + 2
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 0
[isList](X) = 2.X + 2
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 2
[isQid](X) = 2
[nil] = 0
[o] = 2
[tt] = 2
[u] = 1
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X1,X2) = 0
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2,X3) = 0
[AU95U95U23](X1,X2,X3) = 0
[AU95U95U24](X1,X2,X3) = 0
[AU95U95U25](X1,X2) = 0
[AU95U95U26](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X1,X2) = 0
[AU95U95U33](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2,X3) = 0
[AU95U95U43](X1,X2,X3) = 0
[AU95U95U44](X1,X2,X3) = 0
[AU95U95U45](X1,X2) = 0
[AU95U95U46](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2,X3) = 0
[AU95U95U53](X1,X2,X3) = 0
[AU95U95U54](X1,X2,X3) = 0
[AU95U95U55](X1,X2) = 0
[AU95U95U56](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X1,X2) = 0
[AU95U95U63](X) = 0
[AU95U95U71](X1,X2,X3) = 0
[AU95U95U72](X1,X2) = 0
[AU95U95U73](X1,X2) = 0
[AU95U95U74](X) = 0
[AU95U95U81](X1,X2) = 0
[AU95U95U82](X1,X2) = 0
[AU95U95U83](X) = 0
[AU95U95U91](X1,X2) = 0
[AU95U95U92](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.4: 

SCC Processor:
-> Pairs:
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1.4: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95U95U95(nil,X) -> MARK(X)
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = X1 + 2.X2
[au95u95U12](X1,X2) = X1 + 2.X2
[au95u95U13](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U23](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U24](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U25](X1,X2) = X1 + 2.X2 + 2
[au95u95U26](X) = X + 1
[au95u95U31](X1,X2) = X1 + 2.X2
[au95u95U32](X1,X2) = X1 + 2.X2
[au95u95U33](X) = 2.X + 2
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U43](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U44](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U45](X1,X2) = X1 + 2.X2 + 2
[au95u95U46](X) = X + 2
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U53](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 1
[au95u95U54](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3
[au95u95U55](X1,X2) = X1 + 2.X2 + 2
[au95u95U56](X) = X + 2
[au95u95U61](X1,X2) = X1 + 2.X2
[au95u95U62](X1,X2) = X1 + 2.X2
[au95u95U63](X) = 2.X + 1
[au95u95U71](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U72](X1,X2) = 2.X1 + 2.X2 + 2
[au95u95U73](X1,X2) = X1 + 2
[au95u95U74](X) = 2.X
[au95u95U81](X1,X2) = X1 + 2.X2
[au95u95U82](X1,X2) = X1 + 2.X2
[au95u95U83](X) = X
[au95u95U91](X1,X2) = X1
[au95u95U92](X) = X
[au95u95u95u95](X1,X2) = X1 + X2 + 2
[au95u95isList](X) = 2.X + 2
[au95u95isNeList](X) = 2.X + 2
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 2
[au95u95isQid](X) = X
[mark](X) = X
[U11](X1,X2) = X1 + 2.X2
[U12](X1,X2) = X1 + 2.X2
[U13](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U23](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U24](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U25](X1,X2) = X1 + 2.X2 + 2
[U26](X) = X + 1
[U31](X1,X2) = X1 + 2.X2
[U32](X1,X2) = X1 + 2.X2
[U33](X) = 2.X + 2
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U43](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U44](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U45](X1,X2) = X1 + 2.X2 + 2
[U46](X) = X + 2
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U53](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 1
[U54](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3
[U55](X1,X2) = X1 + 2.X2 + 2
[U56](X) = X + 2
[U61](X1,X2) = X1 + 2.X2
[U62](X1,X2) = X1 + 2.X2
[U63](X) = 2.X + 1
[U71](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U72](X1,X2) = 2.X1 + 2.X2 + 2
[U73](X1,X2) = X1 + 2
[U74](X) = 2.X
[U81](X1,X2) = X1 + 2.X2
[U82](X1,X2) = X1 + 2.X2
[U83](X) = X
[U91](X1,X2) = X1
[U92](X) = X
[u95u95](X1,X2) = X1 + X2 + 2
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[isList](X) = 2.X + 2
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 2
[isQid](X) = X
[nil] = 2
[o] = 2
[tt] = 2
[u] = 2
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X1,X2) = 0
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2,X3) = 0
[AU95U95U23](X1,X2,X3) = 0
[AU95U95U24](X1,X2,X3) = 0
[AU95U95U25](X1,X2) = 0
[AU95U95U26](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X1,X2) = 0
[AU95U95U33](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2,X3) = 0
[AU95U95U43](X1,X2,X3) = 0
[AU95U95U44](X1,X2,X3) = 0
[AU95U95U45](X1,X2) = 0
[AU95U95U46](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2,X3) = 0
[AU95U95U53](X1,X2,X3) = 0
[AU95U95U54](X1,X2,X3) = 0
[AU95U95U55](X1,X2) = 0
[AU95U95U56](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X1,X2) = 0
[AU95U95U63](X) = 0
[AU95U95U71](X1,X2,X3) = 0
[AU95U95U72](X1,X2) = 0
[AU95U95U73](X1,X2) = 0
[AU95U95U74](X) = 0
[AU95U95U81](X1,X2) = 0
[AU95U95U82](X1,X2) = 0
[AU95U95U83](X) = 0
[AU95U95U91](X1,X2) = 0
[AU95U95U92](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + 2.X2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 1

Problem 1.4: 

SCC Processor:
-> Pairs:
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1.4: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95U95U95(X,nil) -> MARK(X)
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
-> Usable rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95U11](X1,X2) = X1 + 2.X2
[au95u95U12](X1,X2) = X1 + 2.X2
[au95u95U13](X) = X
[au95u95U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U22](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U23](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U24](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U25](X1,X2) = X1 + 2.X2 + 2
[au95u95U26](X) = X + 2
[au95u95U31](X1,X2) = X1 + 2.X2
[au95u95U32](X1,X2) = X1 + 2.X2
[au95u95U33](X) = 2.X + 2
[au95u95U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U42](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U43](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U44](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U45](X1,X2) = X1 + 2.X2 + 2
[au95u95U46](X) = X
[au95u95U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U52](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U53](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U54](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[au95u95U55](X1,X2) = X1 + 2.X2
[au95u95U56](X) = X
[au95u95U61](X1,X2) = X1 + 2.X2
[au95u95U62](X1,X2) = X1 + 2.X2
[au95u95U63](X) = 2.X + 2
[au95u95U71](X1,X2,X3) = 2.X1 + 2.X3 + 2
[au95u95U72](X1,X2) = 2.X1 + 2.X2 + 1
[au95u95U73](X1,X2) = X1
[au95u95U74](X) = X
[au95u95U81](X1,X2) = X1 + 2.X2
[au95u95U82](X1,X2) = X1 + 2.X2
[au95u95U83](X) = X
[au95u95U91](X1,X2) = X1
[au95u95U92](X) = X
[au95u95u95u95](X1,X2) = X1 + X2 + 2
[au95u95isList](X) = 2.X + 2
[au95u95isNeList](X) = 2.X + 2
[au95u95isNePal](X) = 2.X + 2
[au95u95isPal](X) = 2.X + 2
[au95u95isPalListKind](X) = 2
[au95u95isQid](X) = X
[mark](X) = X
[U11](X1,X2) = X1 + 2.X2
[U12](X1,X2) = X1 + 2.X2
[U13](X) = X
[U21](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U22](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U23](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U24](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U25](X1,X2) = X1 + 2.X2 + 2
[U26](X) = X + 2
[U31](X1,X2) = X1 + 2.X2
[U32](X1,X2) = X1 + 2.X2
[U33](X) = 2.X + 2
[U41](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U42](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U43](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U44](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U45](X1,X2) = X1 + 2.X2 + 2
[U46](X) = X
[U51](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U52](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U53](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U54](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[U55](X1,X2) = X1 + 2.X2
[U56](X) = X
[U61](X1,X2) = X1 + 2.X2
[U62](X1,X2) = X1 + 2.X2
[U63](X) = 2.X + 2
[U71](X1,X2,X3) = 2.X1 + 2.X3 + 2
[U72](X1,X2) = 2.X1 + 2.X2 + 1
[U73](X1,X2) = X1
[U74](X) = X
[U81](X1,X2) = X1 + 2.X2
[U82](X1,X2) = X1 + 2.X2
[U83](X) = X
[U91](X1,X2) = X1
[U92](X) = X
[u95u95](X1,X2) = X1 + X2 + 2
[a] = 2
[e] = 2
[fSNonEmpty] = 0
[i] = 2
[isList](X) = 2.X + 2
[isNeList](X) = 2.X + 2
[isNePal](X) = 2.X + 2
[isPal](X) = 2.X + 2
[isPalListKind](X) = 2
[isQid](X) = X
[nil] = 2
[o] = 2
[tt] = 2
[u] = 2
[AU95U95U11](X1,X2) = 0
[AU95U95U12](X1,X2) = 0
[AU95U95U13](X) = 0
[AU95U95U21](X1,X2,X3) = 0
[AU95U95U22](X1,X2,X3) = 0
[AU95U95U23](X1,X2,X3) = 0
[AU95U95U24](X1,X2,X3) = 0
[AU95U95U25](X1,X2) = 0
[AU95U95U26](X) = 0
[AU95U95U31](X1,X2) = 0
[AU95U95U32](X1,X2) = 0
[AU95U95U33](X) = 0
[AU95U95U41](X1,X2,X3) = 0
[AU95U95U42](X1,X2,X3) = 0
[AU95U95U43](X1,X2,X3) = 0
[AU95U95U44](X1,X2,X3) = 0
[AU95U95U45](X1,X2) = 0
[AU95U95U46](X) = 0
[AU95U95U51](X1,X2,X3) = 0
[AU95U95U52](X1,X2,X3) = 0
[AU95U95U53](X1,X2,X3) = 0
[AU95U95U54](X1,X2,X3) = 0
[AU95U95U55](X1,X2) = 0
[AU95U95U56](X) = 0
[AU95U95U61](X1,X2) = 0
[AU95U95U62](X1,X2) = 0
[AU95U95U63](X) = 0
[AU95U95U71](X1,X2,X3) = 0
[AU95U95U72](X1,X2) = 0
[AU95U95U73](X1,X2) = 0
[AU95U95U74](X) = 0
[AU95U95U81](X1,X2) = 0
[AU95U95U82](X1,X2) = 0
[AU95U95U83](X) = 0
[AU95U95U91](X1,X2) = 0
[AU95U95U92](X) = 0
[AU95U95U95U95](X1,X2) = 2.X1 + 2.X2 + 2
[AU95U95ISLIST](X) = 0
[AU95U95ISNELIST](X) = 0
[AU95U95ISNEPAL](X) = 0
[AU95U95ISPAL](X) = 0
[AU95U95ISPALLISTKIND](X) = 0
[AU95U95ISQID](X) = 0
[MARK](X) = 2.X + 2

Problem 1.4: 

SCC Processor:
-> Pairs:
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> AU95U95U95U95(mark(X1),mark(X2))
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
->->-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u

Problem 1.4: 

Subterm Processor:
-> Pairs:
 MARK(U11(X1,X2)) -> MARK(X1)
 MARK(U12(X1,X2)) -> MARK(X1)
 MARK(U13(X)) -> MARK(X)
 MARK(U21(X1,X2,X3)) -> MARK(X1)
 MARK(U22(X1,X2,X3)) -> MARK(X1)
 MARK(U23(X1,X2,X3)) -> MARK(X1)
 MARK(U24(X1,X2,X3)) -> MARK(X1)
 MARK(U25(X1,X2)) -> MARK(X1)
 MARK(U26(X)) -> MARK(X)
 MARK(U31(X1,X2)) -> MARK(X1)
 MARK(U32(X1,X2)) -> MARK(X1)
 MARK(U33(X)) -> MARK(X)
 MARK(U41(X1,X2,X3)) -> MARK(X1)
 MARK(U42(X1,X2,X3)) -> MARK(X1)
 MARK(U43(X1,X2,X3)) -> MARK(X1)
 MARK(U44(X1,X2,X3)) -> MARK(X1)
 MARK(U45(X1,X2)) -> MARK(X1)
 MARK(U46(X)) -> MARK(X)
 MARK(U51(X1,X2,X3)) -> MARK(X1)
 MARK(U52(X1,X2,X3)) -> MARK(X1)
 MARK(U53(X1,X2,X3)) -> MARK(X1)
 MARK(U54(X1,X2,X3)) -> MARK(X1)
 MARK(U55(X1,X2)) -> MARK(X1)
 MARK(U56(X)) -> MARK(X)
 MARK(U61(X1,X2)) -> MARK(X1)
 MARK(U62(X1,X2)) -> MARK(X1)
 MARK(U63(X)) -> MARK(X)
 MARK(U71(X1,X2,X3)) -> MARK(X1)
 MARK(U72(X1,X2)) -> MARK(X1)
 MARK(U73(X1,X2)) -> MARK(X1)
 MARK(U74(X)) -> MARK(X)
 MARK(U81(X1,X2)) -> MARK(X1)
 MARK(U82(X1,X2)) -> MARK(X1)
 MARK(U83(X)) -> MARK(X)
 MARK(U91(X1,X2)) -> MARK(X1)
 MARK(U92(X)) -> MARK(X)
 MARK(u95u95(X1,X2)) -> MARK(X1)
 MARK(u95u95(X1,X2)) -> MARK(X2)
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Projection:
 pi(MARK) = 1

Problem 1.4: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 au95u95U11(tt,V) -> au95u95U12(au95u95isPalListKind(V),V)
 au95u95U11(X1,X2) -> U11(X1,X2)
 au95u95U12(tt,V) -> au95u95U13(au95u95isNeList(V))
 au95u95U12(X1,X2) -> U12(X1,X2)
 au95u95U13(tt) -> tt
 au95u95U13(X) -> U13(X)
 au95u95U21(tt,V1,V2) -> au95u95U22(au95u95isPalListKind(V1),V1,V2)
 au95u95U21(X1,X2,X3) -> U21(X1,X2,X3)
 au95u95U22(tt,V1,V2) -> au95u95U23(au95u95isPalListKind(V2),V1,V2)
 au95u95U22(X1,X2,X3) -> U22(X1,X2,X3)
 au95u95U23(tt,V1,V2) -> au95u95U24(au95u95isPalListKind(V2),V1,V2)
 au95u95U23(X1,X2,X3) -> U23(X1,X2,X3)
 au95u95U24(tt,V1,V2) -> au95u95U25(au95u95isList(V1),V2)
 au95u95U24(X1,X2,X3) -> U24(X1,X2,X3)
 au95u95U25(tt,V2) -> au95u95U26(au95u95isList(V2))
 au95u95U25(X1,X2) -> U25(X1,X2)
 au95u95U26(tt) -> tt
 au95u95U26(X) -> U26(X)
 au95u95U31(tt,V) -> au95u95U32(au95u95isPalListKind(V),V)
 au95u95U31(X1,X2) -> U31(X1,X2)
 au95u95U32(tt,V) -> au95u95U33(au95u95isQid(V))
 au95u95U32(X1,X2) -> U32(X1,X2)
 au95u95U33(tt) -> tt
 au95u95U33(X) -> U33(X)
 au95u95U41(tt,V1,V2) -> au95u95U42(au95u95isPalListKind(V1),V1,V2)
 au95u95U41(X1,X2,X3) -> U41(X1,X2,X3)
 au95u95U42(tt,V1,V2) -> au95u95U43(au95u95isPalListKind(V2),V1,V2)
 au95u95U42(X1,X2,X3) -> U42(X1,X2,X3)
 au95u95U43(tt,V1,V2) -> au95u95U44(au95u95isPalListKind(V2),V1,V2)
 au95u95U43(X1,X2,X3) -> U43(X1,X2,X3)
 au95u95U44(tt,V1,V2) -> au95u95U45(au95u95isList(V1),V2)
 au95u95U44(X1,X2,X3) -> U44(X1,X2,X3)
 au95u95U45(tt,V2) -> au95u95U46(au95u95isNeList(V2))
 au95u95U45(X1,X2) -> U45(X1,X2)
 au95u95U46(tt) -> tt
 au95u95U46(X) -> U46(X)
 au95u95U51(tt,V1,V2) -> au95u95U52(au95u95isPalListKind(V1),V1,V2)
 au95u95U51(X1,X2,X3) -> U51(X1,X2,X3)
 au95u95U52(tt,V1,V2) -> au95u95U53(au95u95isPalListKind(V2),V1,V2)
 au95u95U52(X1,X2,X3) -> U52(X1,X2,X3)
 au95u95U53(tt,V1,V2) -> au95u95U54(au95u95isPalListKind(V2),V1,V2)
 au95u95U53(X1,X2,X3) -> U53(X1,X2,X3)
 au95u95U54(tt,V1,V2) -> au95u95U55(au95u95isNeList(V1),V2)
 au95u95U54(X1,X2,X3) -> U54(X1,X2,X3)
 au95u95U55(tt,V2) -> au95u95U56(au95u95isList(V2))
 au95u95U55(X1,X2) -> U55(X1,X2)
 au95u95U56(tt) -> tt
 au95u95U56(X) -> U56(X)
 au95u95U61(tt,V) -> au95u95U62(au95u95isPalListKind(V),V)
 au95u95U61(X1,X2) -> U61(X1,X2)
 au95u95U62(tt,V) -> au95u95U63(au95u95isQid(V))
 au95u95U62(X1,X2) -> U62(X1,X2)
 au95u95U63(tt) -> tt
 au95u95U63(X) -> U63(X)
 au95u95U71(tt,I,P) -> au95u95U72(au95u95isPalListKind(I),P)
 au95u95U71(X1,X2,X3) -> U71(X1,X2,X3)
 au95u95U72(tt,P) -> au95u95U73(au95u95isPal(P),P)
 au95u95U72(X1,X2) -> U72(X1,X2)
 au95u95U73(tt,P) -> au95u95U74(au95u95isPalListKind(P))
 au95u95U73(X1,X2) -> U73(X1,X2)
 au95u95U74(tt) -> tt
 au95u95U74(X) -> U74(X)
 au95u95U81(tt,V) -> au95u95U82(au95u95isPalListKind(V),V)
 au95u95U81(X1,X2) -> U81(X1,X2)
 au95u95U82(tt,V) -> au95u95U83(au95u95isNePal(V))
 au95u95U82(X1,X2) -> U82(X1,X2)
 au95u95U83(tt) -> tt
 au95u95U83(X) -> U83(X)
 au95u95U91(tt,V2) -> au95u95U92(au95u95isPalListKind(V2))
 au95u95U91(X1,X2) -> U91(X1,X2)
 au95u95U92(tt) -> tt
 au95u95U92(X) -> U92(X)
 au95u95u95u95(u95u95(X,Y),Z) -> au95u95u95u95(mark(X),au95u95u95u95(mark(Y),mark(Z)))
 au95u95u95u95(nil,X) -> mark(X)
 au95u95u95u95(X,nil) -> mark(X)
 au95u95u95u95(X1,X2) -> u95u95(X1,X2)
 au95u95isList(u95u95(V1,V2)) -> au95u95U21(au95u95isPalListKind(V1),V1,V2)
 au95u95isList(nil) -> tt
 au95u95isList(V) -> au95u95U11(au95u95isPalListKind(V),V)
 au95u95isList(X) -> isList(X)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U41(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(u95u95(V1,V2)) -> au95u95U51(au95u95isPalListKind(V1),V1,V2)
 au95u95isNeList(V) -> au95u95U31(au95u95isPalListKind(V),V)
 au95u95isNeList(X) -> isNeList(X)
 au95u95isNePal(u95u95(I,u95u95(P,I))) -> au95u95U71(au95u95isQid(I),I,P)
 au95u95isNePal(V) -> au95u95U61(au95u95isPalListKind(V),V)
 au95u95isNePal(X) -> isNePal(X)
 au95u95isPal(nil) -> tt
 au95u95isPal(V) -> au95u95U81(au95u95isPalListKind(V),V)
 au95u95isPal(X) -> isPal(X)
 au95u95isPalListKind(u95u95(V1,V2)) -> au95u95U91(au95u95isPalListKind(V1),V2)
 au95u95isPalListKind(a) -> tt
 au95u95isPalListKind(e) -> tt
 au95u95isPalListKind(i) -> tt
 au95u95isPalListKind(nil) -> tt
 au95u95isPalListKind(o) -> tt
 au95u95isPalListKind(u) -> tt
 au95u95isPalListKind(X) -> isPalListKind(X)
 au95u95isQid(a) -> tt
 au95u95isQid(e) -> tt
 au95u95isQid(i) -> tt
 au95u95isQid(o) -> tt
 au95u95isQid(u) -> tt
 au95u95isQid(X) -> isQid(X)
 mark(U11(X1,X2)) -> au95u95U11(mark(X1),X2)
 mark(U12(X1,X2)) -> au95u95U12(mark(X1),X2)
 mark(U13(X)) -> au95u95U13(mark(X))
 mark(U21(X1,X2,X3)) -> au95u95U21(mark(X1),X2,X3)
 mark(U22(X1,X2,X3)) -> au95u95U22(mark(X1),X2,X3)
 mark(U23(X1,X2,X3)) -> au95u95U23(mark(X1),X2,X3)
 mark(U24(X1,X2,X3)) -> au95u95U24(mark(X1),X2,X3)
 mark(U25(X1,X2)) -> au95u95U25(mark(X1),X2)
 mark(U26(X)) -> au95u95U26(mark(X))
 mark(U31(X1,X2)) -> au95u95U31(mark(X1),X2)
 mark(U32(X1,X2)) -> au95u95U32(mark(X1),X2)
 mark(U33(X)) -> au95u95U33(mark(X))
 mark(U41(X1,X2,X3)) -> au95u95U41(mark(X1),X2,X3)
 mark(U42(X1,X2,X3)) -> au95u95U42(mark(X1),X2,X3)
 mark(U43(X1,X2,X3)) -> au95u95U43(mark(X1),X2,X3)
 mark(U44(X1,X2,X3)) -> au95u95U44(mark(X1),X2,X3)
 mark(U45(X1,X2)) -> au95u95U45(mark(X1),X2)
 mark(U46(X)) -> au95u95U46(mark(X))
 mark(U51(X1,X2,X3)) -> au95u95U51(mark(X1),X2,X3)
 mark(U52(X1,X2,X3)) -> au95u95U52(mark(X1),X2,X3)
 mark(U53(X1,X2,X3)) -> au95u95U53(mark(X1),X2,X3)
 mark(U54(X1,X2,X3)) -> au95u95U54(mark(X1),X2,X3)
 mark(U55(X1,X2)) -> au95u95U55(mark(X1),X2)
 mark(U56(X)) -> au95u95U56(mark(X))
 mark(U61(X1,X2)) -> au95u95U61(mark(X1),X2)
 mark(U62(X1,X2)) -> au95u95U62(mark(X1),X2)
 mark(U63(X)) -> au95u95U63(mark(X))
 mark(U71(X1,X2,X3)) -> au95u95U71(mark(X1),X2,X3)
 mark(U72(X1,X2)) -> au95u95U72(mark(X1),X2)
 mark(U73(X1,X2)) -> au95u95U73(mark(X1),X2)
 mark(U74(X)) -> au95u95U74(mark(X))
 mark(U81(X1,X2)) -> au95u95U81(mark(X1),X2)
 mark(U82(X1,X2)) -> au95u95U82(mark(X1),X2)
 mark(U83(X)) -> au95u95U83(mark(X))
 mark(U91(X1,X2)) -> au95u95U91(mark(X1),X2)
 mark(U92(X)) -> au95u95U92(mark(X))
 mark(u95u95(X1,X2)) -> au95u95u95u95(mark(X1),mark(X2))
 mark(a) -> a
 mark(e) -> e
 mark(i) -> i
 mark(isList(X)) -> au95u95isList(X)
 mark(isNeList(X)) -> au95u95isNeList(X)
 mark(isNePal(X)) -> au95u95isNePal(X)
 mark(isPal(X)) -> au95u95isPal(X)
 mark(isPalListKind(X)) -> au95u95isPalListKind(X)
 mark(isQid(X)) -> au95u95isQid(X)
 mark(nil) -> nil
 mark(o) -> o
 mark(tt) -> tt
 mark(u) -> u
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
