YES

Problem 1: 

(VAR vu95NonEmpty M N X X1 X2 X3 Y)
(RULES
active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
active(nats(N)) -> mark(cons(N,nats(s(N))))
active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
active(zprimes) -> mark(sieve(nats(s(s(num0)))))
cons(active(X1),X2) -> cons(X1,X2)
cons(mark(X1),X2) -> cons(X1,X2)
cons(X1,active(X2)) -> cons(X1,X2)
cons(X1,mark(X2)) -> cons(X1,X2)
filter(active(X1),X2,X3) -> filter(X1,X2,X3)
filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
filter(X1,active(X2),X3) -> filter(X1,X2,X3)
filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
mark(nats(X)) -> active(nats(mark(X)))
mark(s(X)) -> active(s(mark(X)))
mark(sieve(X)) -> active(sieve(mark(X)))
mark(num0) -> active(num0)
mark(zprimes) -> active(zprimes)
nats(active(X)) -> nats(X)
nats(mark(X)) -> nats(X)
s(active(X)) -> s(X)
s(mark(X)) -> s(X)
sieve(active(X)) -> sieve(X)
sieve(mark(X)) -> sieve(X)
)
 
(STRATEGY INNERMOST)

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 ACTIVE(filter(cons(X,Y),s(N),M)) -> CONS(X,filter(Y,N,M))
 ACTIVE(filter(cons(X,Y),s(N),M)) -> FILTER(Y,N,M)
 ACTIVE(filter(cons(X,Y),s(N),M)) -> MARK(cons(X,filter(Y,N,M)))
 ACTIVE(filter(cons(X,Y),num0,M)) -> CONS(num0,filter(Y,M,M))
 ACTIVE(filter(cons(X,Y),num0,M)) -> FILTER(Y,M,M)
 ACTIVE(filter(cons(X,Y),num0,M)) -> MARK(cons(num0,filter(Y,M,M)))
 ACTIVE(nats(N)) -> CONS(N,nats(s(N)))
 ACTIVE(nats(N)) -> MARK(cons(N,nats(s(N))))
 ACTIVE(nats(N)) -> NATS(s(N))
 ACTIVE(nats(N)) -> S(N)
 ACTIVE(sieve(cons(s(N),Y))) -> CONS(s(N),sieve(filter(Y,N,N)))
 ACTIVE(sieve(cons(s(N),Y))) -> FILTER(Y,N,N)
 ACTIVE(sieve(cons(s(N),Y))) -> MARK(cons(s(N),sieve(filter(Y,N,N))))
 ACTIVE(sieve(cons(s(N),Y))) -> SIEVE(filter(Y,N,N))
 ACTIVE(sieve(cons(num0,Y))) -> CONS(num0,sieve(Y))
 ACTIVE(sieve(cons(num0,Y))) -> MARK(cons(num0,sieve(Y)))
 ACTIVE(sieve(cons(num0,Y))) -> SIEVE(Y)
 ACTIVE(zprimes) -> MARK(sieve(nats(s(s(num0)))))
 CONS(active(X1),X2) -> CONS(X1,X2)
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(X1,active(X2)) -> CONS(X1,X2)
 CONS(X1,mark(X2)) -> CONS(X1,X2)
 FILTER(active(X1),X2,X3) -> FILTER(X1,X2,X3)
 FILTER(mark(X1),X2,X3) -> FILTER(X1,X2,X3)
 FILTER(X1,active(X2),X3) -> FILTER(X1,X2,X3)
 FILTER(X1,mark(X2),X3) -> FILTER(X1,X2,X3)
 FILTER(X1,X2,active(X3)) -> FILTER(X1,X2,X3)
 FILTER(X1,X2,mark(X3)) -> FILTER(X1,X2,X3)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> CONS(mark(X1),X2)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> ACTIVE(filter(mark(X1),mark(X2),mark(X3)))
 MARK(filter(X1,X2,X3)) -> FILTER(mark(X1),mark(X2),mark(X3))
 MARK(filter(X1,X2,X3)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X2)
 MARK(filter(X1,X2,X3)) -> MARK(X3)
 MARK(nats(X)) -> ACTIVE(nats(mark(X)))
 MARK(nats(X)) -> MARK(X)
 MARK(nats(X)) -> NATS(mark(X))
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
 MARK(s(X)) -> S(mark(X))
 MARK(sieve(X)) -> ACTIVE(sieve(mark(X)))
 MARK(sieve(X)) -> MARK(X)
 MARK(sieve(X)) -> SIEVE(mark(X))
 MARK(zprimes) -> ACTIVE(zprimes)
 NATS(active(X)) -> NATS(X)
 NATS(mark(X)) -> NATS(X)
 S(active(X)) -> S(X)
 S(mark(X)) -> S(X)
 SIEVE(active(X)) -> SIEVE(X)
 SIEVE(mark(X)) -> SIEVE(X)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)

Problem 1: 

SCC Processor:
-> Pairs:
 ACTIVE(filter(cons(X,Y),s(N),M)) -> CONS(X,filter(Y,N,M))
 ACTIVE(filter(cons(X,Y),s(N),M)) -> FILTER(Y,N,M)
 ACTIVE(filter(cons(X,Y),s(N),M)) -> MARK(cons(X,filter(Y,N,M)))
 ACTIVE(filter(cons(X,Y),num0,M)) -> CONS(num0,filter(Y,M,M))
 ACTIVE(filter(cons(X,Y),num0,M)) -> FILTER(Y,M,M)
 ACTIVE(filter(cons(X,Y),num0,M)) -> MARK(cons(num0,filter(Y,M,M)))
 ACTIVE(nats(N)) -> CONS(N,nats(s(N)))
 ACTIVE(nats(N)) -> MARK(cons(N,nats(s(N))))
 ACTIVE(nats(N)) -> NATS(s(N))
 ACTIVE(nats(N)) -> S(N)
 ACTIVE(sieve(cons(s(N),Y))) -> CONS(s(N),sieve(filter(Y,N,N)))
 ACTIVE(sieve(cons(s(N),Y))) -> FILTER(Y,N,N)
 ACTIVE(sieve(cons(s(N),Y))) -> MARK(cons(s(N),sieve(filter(Y,N,N))))
 ACTIVE(sieve(cons(s(N),Y))) -> SIEVE(filter(Y,N,N))
 ACTIVE(sieve(cons(num0,Y))) -> CONS(num0,sieve(Y))
 ACTIVE(sieve(cons(num0,Y))) -> MARK(cons(num0,sieve(Y)))
 ACTIVE(sieve(cons(num0,Y))) -> SIEVE(Y)
 ACTIVE(zprimes) -> MARK(sieve(nats(s(s(num0)))))
 CONS(active(X1),X2) -> CONS(X1,X2)
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(X1,active(X2)) -> CONS(X1,X2)
 CONS(X1,mark(X2)) -> CONS(X1,X2)
 FILTER(active(X1),X2,X3) -> FILTER(X1,X2,X3)
 FILTER(mark(X1),X2,X3) -> FILTER(X1,X2,X3)
 FILTER(X1,active(X2),X3) -> FILTER(X1,X2,X3)
 FILTER(X1,mark(X2),X3) -> FILTER(X1,X2,X3)
 FILTER(X1,X2,active(X3)) -> FILTER(X1,X2,X3)
 FILTER(X1,X2,mark(X3)) -> FILTER(X1,X2,X3)
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> CONS(mark(X1),X2)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> ACTIVE(filter(mark(X1),mark(X2),mark(X3)))
 MARK(filter(X1,X2,X3)) -> FILTER(mark(X1),mark(X2),mark(X3))
 MARK(filter(X1,X2,X3)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X2)
 MARK(filter(X1,X2,X3)) -> MARK(X3)
 MARK(nats(X)) -> ACTIVE(nats(mark(X)))
 MARK(nats(X)) -> MARK(X)
 MARK(nats(X)) -> NATS(mark(X))
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
 MARK(s(X)) -> S(mark(X))
 MARK(sieve(X)) -> ACTIVE(sieve(mark(X)))
 MARK(sieve(X)) -> MARK(X)
 MARK(sieve(X)) -> SIEVE(mark(X))
 MARK(zprimes) -> ACTIVE(zprimes)
 NATS(active(X)) -> NATS(X)
 NATS(mark(X)) -> NATS(X)
 S(active(X)) -> S(X)
 S(mark(X)) -> S(X)
 SIEVE(active(X)) -> SIEVE(X)
 SIEVE(mark(X)) -> SIEVE(X)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 SIEVE(active(X)) -> SIEVE(X)
 SIEVE(mark(X)) -> SIEVE(X)
->->-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->->Cycle:
->->-> Pairs:
 S(active(X)) -> S(X)
 S(mark(X)) -> S(X)
->->-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->->Cycle:
->->-> Pairs:
 NATS(active(X)) -> NATS(X)
 NATS(mark(X)) -> NATS(X)
->->-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->->Cycle:
->->-> Pairs:
 FILTER(active(X1),X2,X3) -> FILTER(X1,X2,X3)
 FILTER(mark(X1),X2,X3) -> FILTER(X1,X2,X3)
 FILTER(X1,active(X2),X3) -> FILTER(X1,X2,X3)
 FILTER(X1,mark(X2),X3) -> FILTER(X1,X2,X3)
 FILTER(X1,X2,active(X3)) -> FILTER(X1,X2,X3)
 FILTER(X1,X2,mark(X3)) -> FILTER(X1,X2,X3)
->->-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->->Cycle:
->->-> Pairs:
 CONS(active(X1),X2) -> CONS(X1,X2)
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(X1,active(X2)) -> CONS(X1,X2)
 CONS(X1,mark(X2)) -> CONS(X1,X2)
->->-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->->Cycle:
->->-> Pairs:
 ACTIVE(filter(cons(X,Y),s(N),M)) -> MARK(cons(X,filter(Y,N,M)))
 ACTIVE(filter(cons(X,Y),num0,M)) -> MARK(cons(num0,filter(Y,M,M)))
 ACTIVE(nats(N)) -> MARK(cons(N,nats(s(N))))
 ACTIVE(sieve(cons(s(N),Y))) -> MARK(cons(s(N),sieve(filter(Y,N,N))))
 ACTIVE(sieve(cons(num0,Y))) -> MARK(cons(num0,sieve(Y)))
 ACTIVE(zprimes) -> MARK(sieve(nats(s(s(num0)))))
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> ACTIVE(filter(mark(X1),mark(X2),mark(X3)))
 MARK(filter(X1,X2,X3)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X2)
 MARK(filter(X1,X2,X3)) -> MARK(X3)
 MARK(nats(X)) -> ACTIVE(nats(mark(X)))
 MARK(nats(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
 MARK(sieve(X)) -> ACTIVE(sieve(mark(X)))
 MARK(sieve(X)) -> MARK(X)
 MARK(zprimes) -> ACTIVE(zprimes)
->->-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)


The problem is decomposed in 6 subproblems.

Problem 1.1: 

Subterm Processor:
-> Pairs:
 SIEVE(active(X)) -> SIEVE(X)
 SIEVE(mark(X)) -> SIEVE(X)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Projection:
 pi(SIEVE) = 1

Problem 1.1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.2: 

Subterm Processor:
-> Pairs:
 S(active(X)) -> S(X)
 S(mark(X)) -> S(X)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Projection:
 pi(S) = 1

Problem 1.2: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.3: 

Subterm Processor:
-> Pairs:
 NATS(active(X)) -> NATS(X)
 NATS(mark(X)) -> NATS(X)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Projection:
 pi(NATS) = 1

Problem 1.3: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.4: 

Subterm Processor:
-> Pairs:
 FILTER(active(X1),X2,X3) -> FILTER(X1,X2,X3)
 FILTER(mark(X1),X2,X3) -> FILTER(X1,X2,X3)
 FILTER(X1,active(X2),X3) -> FILTER(X1,X2,X3)
 FILTER(X1,mark(X2),X3) -> FILTER(X1,X2,X3)
 FILTER(X1,X2,active(X3)) -> FILTER(X1,X2,X3)
 FILTER(X1,X2,mark(X3)) -> FILTER(X1,X2,X3)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Projection:
 pi(FILTER) = 1

Problem 1.4: 

SCC Processor:
-> Pairs:
 FILTER(X1,active(X2),X3) -> FILTER(X1,X2,X3)
 FILTER(X1,mark(X2),X3) -> FILTER(X1,X2,X3)
 FILTER(X1,X2,active(X3)) -> FILTER(X1,X2,X3)
 FILTER(X1,X2,mark(X3)) -> FILTER(X1,X2,X3)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 FILTER(X1,active(X2),X3) -> FILTER(X1,X2,X3)
 FILTER(X1,mark(X2),X3) -> FILTER(X1,X2,X3)
 FILTER(X1,X2,active(X3)) -> FILTER(X1,X2,X3)
 FILTER(X1,X2,mark(X3)) -> FILTER(X1,X2,X3)
->->-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)

Problem 1.4: 

Subterm Processor:
-> Pairs:
 FILTER(X1,active(X2),X3) -> FILTER(X1,X2,X3)
 FILTER(X1,mark(X2),X3) -> FILTER(X1,X2,X3)
 FILTER(X1,X2,active(X3)) -> FILTER(X1,X2,X3)
 FILTER(X1,X2,mark(X3)) -> FILTER(X1,X2,X3)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Projection:
 pi(FILTER) = 2

Problem 1.4: 

SCC Processor:
-> Pairs:
 FILTER(X1,X2,active(X3)) -> FILTER(X1,X2,X3)
 FILTER(X1,X2,mark(X3)) -> FILTER(X1,X2,X3)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 FILTER(X1,X2,active(X3)) -> FILTER(X1,X2,X3)
 FILTER(X1,X2,mark(X3)) -> FILTER(X1,X2,X3)
->->-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)

Problem 1.4: 

Subterm Processor:
-> Pairs:
 FILTER(X1,X2,active(X3)) -> FILTER(X1,X2,X3)
 FILTER(X1,X2,mark(X3)) -> FILTER(X1,X2,X3)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Projection:
 pi(FILTER) = 3

Problem 1.4: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.5: 

Subterm Processor:
-> Pairs:
 CONS(active(X1),X2) -> CONS(X1,X2)
 CONS(mark(X1),X2) -> CONS(X1,X2)
 CONS(X1,active(X2)) -> CONS(X1,X2)
 CONS(X1,mark(X2)) -> CONS(X1,X2)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Projection:
 pi(CONS) = 1

Problem 1.5: 

SCC Processor:
-> Pairs:
 CONS(X1,active(X2)) -> CONS(X1,X2)
 CONS(X1,mark(X2)) -> CONS(X1,X2)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 CONS(X1,active(X2)) -> CONS(X1,X2)
 CONS(X1,mark(X2)) -> CONS(X1,X2)
->->-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)

Problem 1.5: 

Subterm Processor:
-> Pairs:
 CONS(X1,active(X2)) -> CONS(X1,X2)
 CONS(X1,mark(X2)) -> CONS(X1,X2)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Projection:
 pi(CONS) = 2

Problem 1.5: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.

Problem 1.6: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(filter(cons(X,Y),s(N),M)) -> MARK(cons(X,filter(Y,N,M)))
 ACTIVE(filter(cons(X,Y),num0,M)) -> MARK(cons(num0,filter(Y,M,M)))
 ACTIVE(nats(N)) -> MARK(cons(N,nats(s(N))))
 ACTIVE(sieve(cons(s(N),Y))) -> MARK(cons(s(N),sieve(filter(Y,N,N))))
 ACTIVE(sieve(cons(num0,Y))) -> MARK(cons(num0,sieve(Y)))
 ACTIVE(zprimes) -> MARK(sieve(nats(s(s(num0)))))
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> ACTIVE(filter(mark(X1),mark(X2),mark(X3)))
 MARK(filter(X1,X2,X3)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X2)
 MARK(filter(X1,X2,X3)) -> MARK(X3)
 MARK(nats(X)) -> ACTIVE(nats(mark(X)))
 MARK(nats(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
 MARK(sieve(X)) -> ACTIVE(sieve(mark(X)))
 MARK(sieve(X)) -> MARK(X)
 MARK(zprimes) -> ACTIVE(zprimes)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
-> Usable rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = X
[cons](X1,X2) = X1
[filter](X1,X2,X3) = 2.X1 + X2 + 2.X3
[mark](X) = X
[nats](X) = X
[s](X) = X + 1
[sieve](X) = X
[num0] = 0
[fSNonEmpty] = 0
[zprimes] = 2
[ACTIVE](X) = 2.X + 2
[CONS](X1,X2) = 0
[FILTER](X1,X2,X3) = 0
[MARK](X) = 2.X + 2
[NATS](X) = 0
[S](X) = 0
[SIEVE](X) = 0

Problem 1.6: 

SCC Processor:
-> Pairs:
 ACTIVE(filter(cons(X,Y),num0,M)) -> MARK(cons(num0,filter(Y,M,M)))
 ACTIVE(nats(N)) -> MARK(cons(N,nats(s(N))))
 ACTIVE(sieve(cons(s(N),Y))) -> MARK(cons(s(N),sieve(filter(Y,N,N))))
 ACTIVE(sieve(cons(num0,Y))) -> MARK(cons(num0,sieve(Y)))
 ACTIVE(zprimes) -> MARK(sieve(nats(s(s(num0)))))
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> ACTIVE(filter(mark(X1),mark(X2),mark(X3)))
 MARK(filter(X1,X2,X3)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X2)
 MARK(filter(X1,X2,X3)) -> MARK(X3)
 MARK(nats(X)) -> ACTIVE(nats(mark(X)))
 MARK(nats(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
 MARK(sieve(X)) -> ACTIVE(sieve(mark(X)))
 MARK(sieve(X)) -> MARK(X)
 MARK(zprimes) -> ACTIVE(zprimes)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(filter(cons(X,Y),num0,M)) -> MARK(cons(num0,filter(Y,M,M)))
 ACTIVE(nats(N)) -> MARK(cons(N,nats(s(N))))
 ACTIVE(sieve(cons(s(N),Y))) -> MARK(cons(s(N),sieve(filter(Y,N,N))))
 ACTIVE(sieve(cons(num0,Y))) -> MARK(cons(num0,sieve(Y)))
 ACTIVE(zprimes) -> MARK(sieve(nats(s(s(num0)))))
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> ACTIVE(filter(mark(X1),mark(X2),mark(X3)))
 MARK(filter(X1,X2,X3)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X2)
 MARK(filter(X1,X2,X3)) -> MARK(X3)
 MARK(nats(X)) -> ACTIVE(nats(mark(X)))
 MARK(nats(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
 MARK(sieve(X)) -> ACTIVE(sieve(mark(X)))
 MARK(sieve(X)) -> MARK(X)
 MARK(zprimes) -> ACTIVE(zprimes)
->->-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)

Problem 1.6: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(filter(cons(X,Y),num0,M)) -> MARK(cons(num0,filter(Y,M,M)))
 ACTIVE(nats(N)) -> MARK(cons(N,nats(s(N))))
 ACTIVE(sieve(cons(s(N),Y))) -> MARK(cons(s(N),sieve(filter(Y,N,N))))
 ACTIVE(sieve(cons(num0,Y))) -> MARK(cons(num0,sieve(Y)))
 ACTIVE(zprimes) -> MARK(sieve(nats(s(s(num0)))))
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> ACTIVE(filter(mark(X1),mark(X2),mark(X3)))
 MARK(filter(X1,X2,X3)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X2)
 MARK(filter(X1,X2,X3)) -> MARK(X3)
 MARK(nats(X)) -> ACTIVE(nats(mark(X)))
 MARK(nats(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
 MARK(sieve(X)) -> ACTIVE(sieve(mark(X)))
 MARK(sieve(X)) -> MARK(X)
 MARK(zprimes) -> ACTIVE(zprimes)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
-> Usable rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = X
[cons](X1,X2) = 2.X1
[filter](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3 + 2
[mark](X) = X
[nats](X) = 2.X
[s](X) = X
[sieve](X) = 2.X
[num0] = 0
[fSNonEmpty] = 0
[zprimes] = 0
[ACTIVE](X) = 2.X + 1
[CONS](X1,X2) = 0
[FILTER](X1,X2,X3) = 0
[MARK](X) = 2.X + 1
[NATS](X) = 0
[S](X) = 0
[SIEVE](X) = 0

Problem 1.6: 

SCC Processor:
-> Pairs:
 ACTIVE(nats(N)) -> MARK(cons(N,nats(s(N))))
 ACTIVE(sieve(cons(s(N),Y))) -> MARK(cons(s(N),sieve(filter(Y,N,N))))
 ACTIVE(sieve(cons(num0,Y))) -> MARK(cons(num0,sieve(Y)))
 ACTIVE(zprimes) -> MARK(sieve(nats(s(s(num0)))))
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> ACTIVE(filter(mark(X1),mark(X2),mark(X3)))
 MARK(filter(X1,X2,X3)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X2)
 MARK(filter(X1,X2,X3)) -> MARK(X3)
 MARK(nats(X)) -> ACTIVE(nats(mark(X)))
 MARK(nats(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
 MARK(sieve(X)) -> ACTIVE(sieve(mark(X)))
 MARK(sieve(X)) -> MARK(X)
 MARK(zprimes) -> ACTIVE(zprimes)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(nats(N)) -> MARK(cons(N,nats(s(N))))
 ACTIVE(sieve(cons(s(N),Y))) -> MARK(cons(s(N),sieve(filter(Y,N,N))))
 ACTIVE(sieve(cons(num0,Y))) -> MARK(cons(num0,sieve(Y)))
 ACTIVE(zprimes) -> MARK(sieve(nats(s(s(num0)))))
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> ACTIVE(filter(mark(X1),mark(X2),mark(X3)))
 MARK(filter(X1,X2,X3)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X2)
 MARK(filter(X1,X2,X3)) -> MARK(X3)
 MARK(nats(X)) -> ACTIVE(nats(mark(X)))
 MARK(nats(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
 MARK(sieve(X)) -> ACTIVE(sieve(mark(X)))
 MARK(sieve(X)) -> MARK(X)
 MARK(zprimes) -> ACTIVE(zprimes)
->->-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)

Problem 1.6: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(nats(N)) -> MARK(cons(N,nats(s(N))))
 ACTIVE(sieve(cons(s(N),Y))) -> MARK(cons(s(N),sieve(filter(Y,N,N))))
 ACTIVE(sieve(cons(num0,Y))) -> MARK(cons(num0,sieve(Y)))
 ACTIVE(zprimes) -> MARK(sieve(nats(s(s(num0)))))
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> ACTIVE(filter(mark(X1),mark(X2),mark(X3)))
 MARK(filter(X1,X2,X3)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X2)
 MARK(filter(X1,X2,X3)) -> MARK(X3)
 MARK(nats(X)) -> ACTIVE(nats(mark(X)))
 MARK(nats(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
 MARK(sieve(X)) -> ACTIVE(sieve(mark(X)))
 MARK(sieve(X)) -> MARK(X)
 MARK(zprimes) -> ACTIVE(zprimes)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
-> Usable rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = X
[cons](X1,X2) = 2.X1 + 1
[filter](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3
[mark](X) = X
[nats](X) = 2.X + 2
[s](X) = 2.X
[sieve](X) = X
[num0] = 0
[fSNonEmpty] = 0
[zprimes] = 2
[ACTIVE](X) = 2.X
[CONS](X1,X2) = 0
[FILTER](X1,X2,X3) = 0
[MARK](X) = 2.X
[NATS](X) = 0
[S](X) = 0
[SIEVE](X) = 0

Problem 1.6: 

SCC Processor:
-> Pairs:
 ACTIVE(sieve(cons(s(N),Y))) -> MARK(cons(s(N),sieve(filter(Y,N,N))))
 ACTIVE(sieve(cons(num0,Y))) -> MARK(cons(num0,sieve(Y)))
 ACTIVE(zprimes) -> MARK(sieve(nats(s(s(num0)))))
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> ACTIVE(filter(mark(X1),mark(X2),mark(X3)))
 MARK(filter(X1,X2,X3)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X2)
 MARK(filter(X1,X2,X3)) -> MARK(X3)
 MARK(nats(X)) -> ACTIVE(nats(mark(X)))
 MARK(nats(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
 MARK(sieve(X)) -> ACTIVE(sieve(mark(X)))
 MARK(sieve(X)) -> MARK(X)
 MARK(zprimes) -> ACTIVE(zprimes)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(sieve(cons(s(N),Y))) -> MARK(cons(s(N),sieve(filter(Y,N,N))))
 ACTIVE(sieve(cons(num0,Y))) -> MARK(cons(num0,sieve(Y)))
 ACTIVE(zprimes) -> MARK(sieve(nats(s(s(num0)))))
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> ACTIVE(filter(mark(X1),mark(X2),mark(X3)))
 MARK(filter(X1,X2,X3)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X2)
 MARK(filter(X1,X2,X3)) -> MARK(X3)
 MARK(nats(X)) -> ACTIVE(nats(mark(X)))
 MARK(nats(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
 MARK(sieve(X)) -> ACTIVE(sieve(mark(X)))
 MARK(sieve(X)) -> MARK(X)
 MARK(zprimes) -> ACTIVE(zprimes)
->->-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)

Problem 1.6: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(sieve(cons(s(N),Y))) -> MARK(cons(s(N),sieve(filter(Y,N,N))))
 ACTIVE(sieve(cons(num0,Y))) -> MARK(cons(num0,sieve(Y)))
 ACTIVE(zprimes) -> MARK(sieve(nats(s(s(num0)))))
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> ACTIVE(filter(mark(X1),mark(X2),mark(X3)))
 MARK(filter(X1,X2,X3)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X2)
 MARK(filter(X1,X2,X3)) -> MARK(X3)
 MARK(nats(X)) -> ACTIVE(nats(mark(X)))
 MARK(nats(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
 MARK(sieve(X)) -> ACTIVE(sieve(mark(X)))
 MARK(sieve(X)) -> MARK(X)
 MARK(zprimes) -> ACTIVE(zprimes)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
-> Usable rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = X
[cons](X1,X2) = X1
[filter](X1,X2,X3) = 2.X1 + 2.X2 + 2.X3
[mark](X) = 2.X
[nats](X) = 2.X
[s](X) = 2.X
[sieve](X) = 2.X + 1
[num0] = 0
[fSNonEmpty] = 0
[zprimes] = 2
[ACTIVE](X) = X + 2
[CONS](X1,X2) = 0
[FILTER](X1,X2,X3) = 0
[MARK](X) = 2.X + 2
[NATS](X) = 0
[S](X) = 0
[SIEVE](X) = 0

Problem 1.6: 

SCC Processor:
-> Pairs:
 ACTIVE(sieve(cons(num0,Y))) -> MARK(cons(num0,sieve(Y)))
 ACTIVE(zprimes) -> MARK(sieve(nats(s(s(num0)))))
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> ACTIVE(filter(mark(X1),mark(X2),mark(X3)))
 MARK(filter(X1,X2,X3)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X2)
 MARK(filter(X1,X2,X3)) -> MARK(X3)
 MARK(nats(X)) -> ACTIVE(nats(mark(X)))
 MARK(nats(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
 MARK(sieve(X)) -> ACTIVE(sieve(mark(X)))
 MARK(sieve(X)) -> MARK(X)
 MARK(zprimes) -> ACTIVE(zprimes)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(sieve(cons(num0,Y))) -> MARK(cons(num0,sieve(Y)))
 ACTIVE(zprimes) -> MARK(sieve(nats(s(s(num0)))))
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> ACTIVE(filter(mark(X1),mark(X2),mark(X3)))
 MARK(filter(X1,X2,X3)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X2)
 MARK(filter(X1,X2,X3)) -> MARK(X3)
 MARK(nats(X)) -> ACTIVE(nats(mark(X)))
 MARK(nats(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
 MARK(sieve(X)) -> ACTIVE(sieve(mark(X)))
 MARK(sieve(X)) -> MARK(X)
 MARK(zprimes) -> ACTIVE(zprimes)
->->-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)

Problem 1.6: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(sieve(cons(num0,Y))) -> MARK(cons(num0,sieve(Y)))
 ACTIVE(zprimes) -> MARK(sieve(nats(s(s(num0)))))
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> ACTIVE(filter(mark(X1),mark(X2),mark(X3)))
 MARK(filter(X1,X2,X3)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X2)
 MARK(filter(X1,X2,X3)) -> MARK(X3)
 MARK(nats(X)) -> ACTIVE(nats(mark(X)))
 MARK(nats(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
 MARK(sieve(X)) -> ACTIVE(sieve(mark(X)))
 MARK(sieve(X)) -> MARK(X)
 MARK(zprimes) -> ACTIVE(zprimes)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
-> Usable rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = X
[cons](X1,X2) = X1
[filter](X1,X2,X3) = 2.X1 + X2 + 2.X3
[mark](X) = X
[nats](X) = X
[s](X) = X
[sieve](X) = X + 1
[num0] = 1
[fSNonEmpty] = 0
[zprimes] = 2
[ACTIVE](X) = 2.X + 2
[CONS](X1,X2) = 0
[FILTER](X1,X2,X3) = 0
[MARK](X) = 2.X + 2
[NATS](X) = 0
[S](X) = 0
[SIEVE](X) = 0

Problem 1.6: 

SCC Processor:
-> Pairs:
 ACTIVE(zprimes) -> MARK(sieve(nats(s(s(num0)))))
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> ACTIVE(filter(mark(X1),mark(X2),mark(X3)))
 MARK(filter(X1,X2,X3)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X2)
 MARK(filter(X1,X2,X3)) -> MARK(X3)
 MARK(nats(X)) -> ACTIVE(nats(mark(X)))
 MARK(nats(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
 MARK(sieve(X)) -> ACTIVE(sieve(mark(X)))
 MARK(sieve(X)) -> MARK(X)
 MARK(zprimes) -> ACTIVE(zprimes)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 ACTIVE(zprimes) -> MARK(sieve(nats(s(s(num0)))))
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> ACTIVE(filter(mark(X1),mark(X2),mark(X3)))
 MARK(filter(X1,X2,X3)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X2)
 MARK(filter(X1,X2,X3)) -> MARK(X3)
 MARK(nats(X)) -> ACTIVE(nats(mark(X)))
 MARK(nats(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
 MARK(sieve(X)) -> ACTIVE(sieve(mark(X)))
 MARK(sieve(X)) -> MARK(X)
 MARK(zprimes) -> ACTIVE(zprimes)
->->-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)

Problem 1.6: 

Reduction Pairs Processor:
-> Pairs:
 ACTIVE(zprimes) -> MARK(sieve(nats(s(s(num0)))))
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> ACTIVE(filter(mark(X1),mark(X2),mark(X3)))
 MARK(filter(X1,X2,X3)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X2)
 MARK(filter(X1,X2,X3)) -> MARK(X3)
 MARK(nats(X)) -> ACTIVE(nats(mark(X)))
 MARK(nats(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
 MARK(sieve(X)) -> ACTIVE(sieve(mark(X)))
 MARK(sieve(X)) -> MARK(X)
 MARK(zprimes) -> ACTIVE(zprimes)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
-> Usable rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[active](X) = X
[cons](X1,X2) = X1
[filter](X1,X2,X3) = 2.X1 + 2.X2 + X3 + 1
[mark](X) = 2.X
[nats](X) = 2.X
[s](X) = 2.X
[sieve](X) = 2.X
[num0] = 0
[fSNonEmpty] = 0
[zprimes] = 2
[ACTIVE](X) = X
[CONS](X1,X2) = 0
[FILTER](X1,X2,X3) = 0
[MARK](X) = 2.X
[NATS](X) = 0
[S](X) = 0
[SIEVE](X) = 0

Problem 1.6: 

SCC Processor:
-> Pairs:
 MARK(cons(X1,X2)) -> ACTIVE(cons(mark(X1),X2))
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> ACTIVE(filter(mark(X1),mark(X2),mark(X3)))
 MARK(filter(X1,X2,X3)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X2)
 MARK(filter(X1,X2,X3)) -> MARK(X3)
 MARK(nats(X)) -> ACTIVE(nats(mark(X)))
 MARK(nats(X)) -> MARK(X)
 MARK(s(X)) -> ACTIVE(s(mark(X)))
 MARK(s(X)) -> MARK(X)
 MARK(sieve(X)) -> ACTIVE(sieve(mark(X)))
 MARK(sieve(X)) -> MARK(X)
 MARK(zprimes) -> ACTIVE(zprimes)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X2)
 MARK(filter(X1,X2,X3)) -> MARK(X3)
 MARK(nats(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(sieve(X)) -> MARK(X)
->->-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)

Problem 1.6: 

Subterm Processor:
-> Pairs:
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X1)
 MARK(filter(X1,X2,X3)) -> MARK(X2)
 MARK(filter(X1,X2,X3)) -> MARK(X3)
 MARK(nats(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(sieve(X)) -> MARK(X)
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Projection:
 pi(MARK) = 1

Problem 1.6: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 active(filter(cons(X,Y),s(N),M)) -> mark(cons(X,filter(Y,N,M)))
 active(filter(cons(X,Y),num0,M)) -> mark(cons(num0,filter(Y,M,M)))
 active(nats(N)) -> mark(cons(N,nats(s(N))))
 active(sieve(cons(s(N),Y))) -> mark(cons(s(N),sieve(filter(Y,N,N))))
 active(sieve(cons(num0,Y))) -> mark(cons(num0,sieve(Y)))
 active(zprimes) -> mark(sieve(nats(s(s(num0)))))
 cons(active(X1),X2) -> cons(X1,X2)
 cons(mark(X1),X2) -> cons(X1,X2)
 cons(X1,active(X2)) -> cons(X1,X2)
 cons(X1,mark(X2)) -> cons(X1,X2)
 filter(active(X1),X2,X3) -> filter(X1,X2,X3)
 filter(mark(X1),X2,X3) -> filter(X1,X2,X3)
 filter(X1,active(X2),X3) -> filter(X1,X2,X3)
 filter(X1,mark(X2),X3) -> filter(X1,X2,X3)
 filter(X1,X2,active(X3)) -> filter(X1,X2,X3)
 filter(X1,X2,mark(X3)) -> filter(X1,X2,X3)
 mark(cons(X1,X2)) -> active(cons(mark(X1),X2))
 mark(filter(X1,X2,X3)) -> active(filter(mark(X1),mark(X2),mark(X3)))
 mark(nats(X)) -> active(nats(mark(X)))
 mark(s(X)) -> active(s(mark(X)))
 mark(sieve(X)) -> active(sieve(mark(X)))
 mark(num0) -> active(num0)
 mark(zprimes) -> active(zprimes)
 nats(active(X)) -> nats(X)
 nats(mark(X)) -> nats(X)
 s(active(X)) -> s(X)
 s(mark(X)) -> s(X)
 sieve(active(X)) -> sieve(X)
 sieve(mark(X)) -> sieve(X)
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
