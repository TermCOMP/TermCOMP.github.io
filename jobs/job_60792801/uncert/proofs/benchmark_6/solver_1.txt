YES
proof of /home/ff862203/input_0X5jRNitNh.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) DependencyPairsProof [EQUIVALENT, 0 ms]
(2) QDP
(3) DependencyGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) QDP
        (6) UsableRulesProof [EQUIVALENT, 0 ms]
        (7) QDP
        (8) QReductionProof [EQUIVALENT, 1 ms]
        (9) QDP
        (10) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (11) YES
    (12) QDP
        (13) UsableRulesProof [EQUIVALENT, 0 ms]
        (14) QDP
        (15) QReductionProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) TransformationProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) DependencyGraphProof [EQUIVALENT, 0 ms]
        (20) TRUE


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(g(x), s(0), y) -> f(g(s(0)), y, g(x))
   g(s(x)) -> s(g(x))
   g(0) -> 0

The set Q consists of the following terms:

   g(s(x0))
   f(g(x0), s(0), x1)
   g(0)


----------------------------------------

(1) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(2)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(g(x), s(0), y) -> F(g(s(0)), y, g(x))
   F(g(x), s(0), y) -> G(s(0))
   G(s(x)) -> G(x)

The TRS R consists of the following rules:

   f(g(x), s(0), y) -> f(g(s(0)), y, g(x))
   g(s(x)) -> s(g(x))
   g(0) -> 0

The set Q consists of the following terms:

   g(s(x0))
   f(g(x0), s(0), x1)
   g(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(3) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 1 less node.
----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(s(x)) -> G(x)

The TRS R consists of the following rules:

   f(g(x), s(0), y) -> f(g(s(0)), y, g(x))
   g(s(x)) -> s(g(x))
   g(0) -> 0

The set Q consists of the following terms:

   g(s(x0))
   f(g(x0), s(0), x1)
   g(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(6) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(7)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(s(x)) -> G(x)

R is empty.
The set Q consists of the following terms:

   g(s(x0))
   f(g(x0), s(0), x1)
   g(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(8) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   g(s(x0))
   f(g(x0), s(0), x1)
   g(0)


----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(s(x)) -> G(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*G(s(x)) -> G(x)
The graph contains the following edges 1 > 1


----------------------------------------

(11)
YES

----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(g(x), s(0), y) -> F(g(s(0)), y, g(x))

The TRS R consists of the following rules:

   f(g(x), s(0), y) -> f(g(s(0)), y, g(x))
   g(s(x)) -> s(g(x))
   g(0) -> 0

The set Q consists of the following terms:

   g(s(x0))
   f(g(x0), s(0), x1)
   g(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(g(x), s(0), y) -> F(g(s(0)), y, g(x))

The TRS R consists of the following rules:

   g(s(x)) -> s(g(x))
   g(0) -> 0

The set Q consists of the following terms:

   g(s(x0))
   f(g(x0), s(0), x1)
   g(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(g(x0), s(0), x1)


----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(g(x), s(0), y) -> F(g(s(0)), y, g(x))

The TRS R consists of the following rules:

   g(s(x)) -> s(g(x))
   g(0) -> 0

The set Q consists of the following terms:

   g(s(x0))
   g(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(g(x), s(0), y) -> F(g(s(0)), y, g(x)) at position [0] we obtained the following new rules [LPAR04]:

   (F(g(x), s(0), y) -> F(s(g(0)), y, g(x)),F(g(x), s(0), y) -> F(s(g(0)), y, g(x)))


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(g(x), s(0), y) -> F(s(g(0)), y, g(x))

The TRS R consists of the following rules:

   g(s(x)) -> s(g(x))
   g(0) -> 0

The set Q consists of the following terms:

   g(s(x0))
   g(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(20)
TRUE
