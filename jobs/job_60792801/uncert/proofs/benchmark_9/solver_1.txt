YES
proof of /home/ff862203/input_e6ARu6mPdY.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [SOUND, 0 ms]
(2) QTRS
(3) RFCMatchBoundsTRSProof [EQUIVALENT, 0 ms]
(4) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(f(x)) -> f(x)
   f(s(x)) -> f(x)
   g(s(0)) -> g(f(s(0)))

The set Q consists of the following terms:

   g(s(0))
   f(f(x0))
   f(s(x0))


----------------------------------------

(1) QTRS Reverse (SOUND)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(f(x)) -> f(x)
   s(f(x)) -> f(x)
   0'(s(g(x))) -> 0'(s(f(g(x))))

Q is empty.

----------------------------------------

(3) RFCMatchBoundsTRSProof (EQUIVALENT)
Termination of the TRS R could be shown with a Match Bound [MATCHBOUNDS1,MATCHBOUNDS2] of 1. This implies Q-termination of R.
The following rules were used to construct the certificate:

   f(f(x)) -> f(x)
   s(f(x)) -> f(x)
   0'(s(g(x))) -> 0'(s(f(g(x))))

The certificate found is represented by the following graph.
The certificate consists of the following enumerated nodes:
3, 4, 6, 9, 10

Node 3 is start node and node 4 is final node.

Those nodes are connected through the following edges:

* 3 to 4 labelled f_1(0), f_1(1)* 3 to 6 labelled 0'_1(0)* 4 to 4 labelled #_1(0)* 6 to 9 labelled s_1(0)* 6 to 10 labelled f_1(1)* 9 to 10 labelled f_1(0)* 10 to 4 labelled g_1(0)


----------------------------------------

(4)
YES
