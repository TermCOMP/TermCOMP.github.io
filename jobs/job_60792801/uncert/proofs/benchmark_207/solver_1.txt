YES
proof of /home/ff862203/input_OVcH7m6TK3.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination w.r.t. Q of the given QTRS could be proven:

(0) QTRS
(1) QTRS Reverse [SOUND, 0 ms]
(2) QTRS
(3) RFCMatchBoundsTRSProof [EQUIVALENT, 0 ms]
(4) YES


----------------------------------------

(0)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__c -> a__f(g(c))
   a__f(g(X)) -> g(X)
   mark(c) -> a__c
   mark(f(X)) -> a__f(X)
   mark(g(X)) -> g(X)
   a__c -> c
   a__f(X) -> f(X)

The set Q consists of the following terms:

   mark(c)
   a__f(x0)
   a__c
   mark(g(x0))
   mark(f(x0))


----------------------------------------

(1) QTRS Reverse (SOUND)
We applied the QTRS Reverse Processor [REVERSE].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a__c'(x) -> c'(g(a__f(x)))
   g(a__f(X)) -> g(X)
   c'(mark(x)) -> a__c'(x)
   f(mark(X)) -> a__f(X)
   g(mark(X)) -> g(X)
   a__c'(x) -> c'(x)
   a__f(X) -> f(X)

Q is empty.

----------------------------------------

(3) RFCMatchBoundsTRSProof (EQUIVALENT)
Termination of the TRS R could be shown with a Match Bound [MATCHBOUNDS1,MATCHBOUNDS2] of 3. This implies Q-termination of R.
The following rules were used to construct the certificate:

   a__c'(x) -> c'(g(a__f(x)))
   g(a__f(X)) -> g(X)
   c'(mark(x)) -> a__c'(x)
   f(mark(X)) -> a__f(X)
   g(mark(X)) -> g(X)
   a__c'(x) -> c'(x)
   a__f(X) -> f(X)

The certificate found is represented by the following graph.
The certificate consists of the following enumerated nodes:
5, 6, 7, 8, 9, 10, 11, 12

Node 5 is start node and node 6 is final node.

Those nodes are connected through the following edges:

* 5 to 7 labelled c'_1(0)* 5 to 6 labelled g_1(0), a__c'_1(0), a__f_1(0), c'_1(0), f_1(0), c'_1(1), f_1(1), g_1(1), a__c'_1(1), a__f_1(1), c'_1(2), f_1(2)* 5 to 9 labelled c'_1(1)* 5 to 11 labelled c'_1(2)* 6 to 6 labelled #_1(0)* 7 to 8 labelled g_1(0)* 7 to 6 labelled g_1(1)* 8 to 6 labelled a__f_1(0), f_1(1), a__f_1(1), f_1(2)* 9 to 10 labelled g_1(1)* 9 to 6 labelled g_1(2), g_1(1)* 10 to 6 labelled a__f_1(1), f_1(2)* 11 to 12 labelled g_1(2)* 11 to 6 labelled g_1(3), g_1(1), g_1(2)* 12 to 6 labelled a__f_1(2), f_1(3), a__f_1(1), f_1(2)


----------------------------------------

(4)
YES
