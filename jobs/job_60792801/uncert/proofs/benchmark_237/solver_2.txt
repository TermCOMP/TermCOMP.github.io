YES

Problem 1: 

(VAR vu95NonEmpty L X X1 X2)
(RULES
au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
au95u95adx(nil) -> nil
au95u95adx(X) -> adx(X)
au95u95head(cons(X,L)) -> mark(X)
au95u95head(X) -> head(X)
au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
au95u95incr(nil) -> nil
au95u95incr(X) -> incr(X)
au95u95nats -> au95u95adx(au95u95zeros)
au95u95nats -> nats
au95u95tail(cons(X,L)) -> mark(L)
au95u95tail(X) -> tail(X)
au95u95zeros -> cons(num0,zeros)
au95u95zeros -> zeros
mark(num0) -> num0
mark(adx(X)) -> au95u95adx(mark(X))
mark(cons(X1,X2)) -> cons(mark(X1),X2)
mark(head(X)) -> au95u95head(mark(X))
mark(incr(X)) -> au95u95incr(mark(X))
mark(nats) -> au95u95nats
mark(nil) -> nil
mark(s(X)) -> s(mark(X))
mark(tail(X)) -> au95u95tail(mark(X))
mark(zeros) -> au95u95zeros
)
 
(STRATEGY INNERMOST)

Problem 1: 

Dependency Pairs Processor:
-> Pairs:
 AU95U95ADX(cons(X,L)) -> AU95U95INCR(cons(mark(X),adx(L)))
 AU95U95ADX(cons(X,L)) -> MARK(X)
 AU95U95HEAD(cons(X,L)) -> MARK(X)
 AU95U95INCR(cons(X,L)) -> MARK(X)
 AU95U95NATS -> AU95U95ADX(au95u95zeros)
 AU95U95NATS -> AU95U95ZEROS
 AU95U95TAIL(cons(X,L)) -> MARK(L)
 MARK(adx(X)) -> AU95U95ADX(mark(X))
 MARK(adx(X)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(head(X)) -> AU95U95HEAD(mark(X))
 MARK(head(X)) -> MARK(X)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(nats) -> AU95U95NATS
 MARK(s(X)) -> MARK(X)
 MARK(tail(X)) -> AU95U95TAIL(mark(X))
 MARK(tail(X)) -> MARK(X)
 MARK(zeros) -> AU95U95ZEROS
-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95ADX(cons(X,L)) -> AU95U95INCR(cons(mark(X),adx(L)))
 AU95U95ADX(cons(X,L)) -> MARK(X)
 AU95U95HEAD(cons(X,L)) -> MARK(X)
 AU95U95INCR(cons(X,L)) -> MARK(X)
 AU95U95NATS -> AU95U95ADX(au95u95zeros)
 AU95U95NATS -> AU95U95ZEROS
 AU95U95TAIL(cons(X,L)) -> MARK(L)
 MARK(adx(X)) -> AU95U95ADX(mark(X))
 MARK(adx(X)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(head(X)) -> AU95U95HEAD(mark(X))
 MARK(head(X)) -> MARK(X)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(nats) -> AU95U95NATS
 MARK(s(X)) -> MARK(X)
 MARK(tail(X)) -> AU95U95TAIL(mark(X))
 MARK(tail(X)) -> MARK(X)
 MARK(zeros) -> AU95U95ZEROS
-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95ADX(cons(X,L)) -> AU95U95INCR(cons(mark(X),adx(L)))
 AU95U95ADX(cons(X,L)) -> MARK(X)
 AU95U95HEAD(cons(X,L)) -> MARK(X)
 AU95U95INCR(cons(X,L)) -> MARK(X)
 AU95U95NATS -> AU95U95ADX(au95u95zeros)
 AU95U95TAIL(cons(X,L)) -> MARK(L)
 MARK(adx(X)) -> AU95U95ADX(mark(X))
 MARK(adx(X)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(head(X)) -> AU95U95HEAD(mark(X))
 MARK(head(X)) -> MARK(X)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(nats) -> AU95U95NATS
 MARK(s(X)) -> MARK(X)
 MARK(tail(X)) -> AU95U95TAIL(mark(X))
 MARK(tail(X)) -> MARK(X)
->->-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros

Problem 1: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95ADX(cons(X,L)) -> AU95U95INCR(cons(mark(X),adx(L)))
 AU95U95ADX(cons(X,L)) -> MARK(X)
 AU95U95HEAD(cons(X,L)) -> MARK(X)
 AU95U95INCR(cons(X,L)) -> MARK(X)
 AU95U95NATS -> AU95U95ADX(au95u95zeros)
 AU95U95TAIL(cons(X,L)) -> MARK(L)
 MARK(adx(X)) -> AU95U95ADX(mark(X))
 MARK(adx(X)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(head(X)) -> AU95U95HEAD(mark(X))
 MARK(head(X)) -> MARK(X)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(nats) -> AU95U95NATS
 MARK(s(X)) -> MARK(X)
 MARK(tail(X)) -> AU95U95TAIL(mark(X))
 MARK(tail(X)) -> MARK(X)
-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
-> Usable rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95adx](X) = 2.X + 1
[au95u95head](X) = X + 2
[au95u95incr](X) = X
[au95u95nats] = 2
[au95u95tail](X) = 2.X + 2
[au95u95zeros] = 0
[mark](X) = X
[num0] = 0
[adx](X) = 2.X + 1
[cons](X1,X2) = 2.X1 + X2
[fSNonEmpty] = 0
[head](X) = X + 2
[incr](X) = X
[nats] = 2
[nil] = 1
[s](X) = X
[tail](X) = 2.X + 2
[zeros] = 0
[AU95U95ADX](X) = 2.X + 2
[AU95U95HEAD](X) = X
[AU95U95INCR](X) = X
[AU95U95NATS] = 2
[AU95U95TAIL](X) = 2.X + 1
[AU95U95ZEROS] = 0
[MARK](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95ADX(cons(X,L)) -> MARK(X)
 AU95U95HEAD(cons(X,L)) -> MARK(X)
 AU95U95INCR(cons(X,L)) -> MARK(X)
 AU95U95NATS -> AU95U95ADX(au95u95zeros)
 AU95U95TAIL(cons(X,L)) -> MARK(L)
 MARK(adx(X)) -> AU95U95ADX(mark(X))
 MARK(adx(X)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(head(X)) -> AU95U95HEAD(mark(X))
 MARK(head(X)) -> MARK(X)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(nats) -> AU95U95NATS
 MARK(s(X)) -> MARK(X)
 MARK(tail(X)) -> AU95U95TAIL(mark(X))
 MARK(tail(X)) -> MARK(X)
-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95ADX(cons(X,L)) -> MARK(X)
 AU95U95HEAD(cons(X,L)) -> MARK(X)
 AU95U95INCR(cons(X,L)) -> MARK(X)
 AU95U95NATS -> AU95U95ADX(au95u95zeros)
 AU95U95TAIL(cons(X,L)) -> MARK(L)
 MARK(adx(X)) -> AU95U95ADX(mark(X))
 MARK(adx(X)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(head(X)) -> AU95U95HEAD(mark(X))
 MARK(head(X)) -> MARK(X)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(nats) -> AU95U95NATS
 MARK(s(X)) -> MARK(X)
 MARK(tail(X)) -> AU95U95TAIL(mark(X))
 MARK(tail(X)) -> MARK(X)
->->-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros

Problem 1: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95ADX(cons(X,L)) -> MARK(X)
 AU95U95HEAD(cons(X,L)) -> MARK(X)
 AU95U95INCR(cons(X,L)) -> MARK(X)
 AU95U95NATS -> AU95U95ADX(au95u95zeros)
 AU95U95TAIL(cons(X,L)) -> MARK(L)
 MARK(adx(X)) -> AU95U95ADX(mark(X))
 MARK(adx(X)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(head(X)) -> AU95U95HEAD(mark(X))
 MARK(head(X)) -> MARK(X)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(nats) -> AU95U95NATS
 MARK(s(X)) -> MARK(X)
 MARK(tail(X)) -> AU95U95TAIL(mark(X))
 MARK(tail(X)) -> MARK(X)
-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
-> Usable rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95adx](X) = 2.X + 2
[au95u95head](X) = 2.X + 2
[au95u95incr](X) = X
[au95u95nats] = 2
[au95u95tail](X) = 2.X + 2
[au95u95zeros] = 0
[mark](X) = X
[num0] = 0
[adx](X) = 2.X + 2
[cons](X1,X2) = 2.X1 + X2
[fSNonEmpty] = 0
[head](X) = 2.X + 2
[incr](X) = X
[nats] = 2
[nil] = 2
[s](X) = X
[tail](X) = 2.X + 2
[zeros] = 0
[AU95U95ADX](X) = 2.X + 2
[AU95U95HEAD](X) = 2.X + 2
[AU95U95INCR](X) = X + 1
[AU95U95NATS] = 2
[AU95U95TAIL](X) = 2.X + 1
[AU95U95ZEROS] = 0
[MARK](X) = 2.X + 1

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95HEAD(cons(X,L)) -> MARK(X)
 AU95U95INCR(cons(X,L)) -> MARK(X)
 AU95U95NATS -> AU95U95ADX(au95u95zeros)
 AU95U95TAIL(cons(X,L)) -> MARK(L)
 MARK(adx(X)) -> AU95U95ADX(mark(X))
 MARK(adx(X)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(head(X)) -> AU95U95HEAD(mark(X))
 MARK(head(X)) -> MARK(X)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(nats) -> AU95U95NATS
 MARK(s(X)) -> MARK(X)
 MARK(tail(X)) -> AU95U95TAIL(mark(X))
 MARK(tail(X)) -> MARK(X)
-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95HEAD(cons(X,L)) -> MARK(X)
 AU95U95INCR(cons(X,L)) -> MARK(X)
 AU95U95TAIL(cons(X,L)) -> MARK(L)
 MARK(adx(X)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(head(X)) -> AU95U95HEAD(mark(X))
 MARK(head(X)) -> MARK(X)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(tail(X)) -> AU95U95TAIL(mark(X))
 MARK(tail(X)) -> MARK(X)
->->-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros

Problem 1: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95HEAD(cons(X,L)) -> MARK(X)
 AU95U95INCR(cons(X,L)) -> MARK(X)
 AU95U95TAIL(cons(X,L)) -> MARK(L)
 MARK(adx(X)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(head(X)) -> AU95U95HEAD(mark(X))
 MARK(head(X)) -> MARK(X)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(tail(X)) -> AU95U95TAIL(mark(X))
 MARK(tail(X)) -> MARK(X)
-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
-> Usable rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95adx](X) = 2.X + 2
[au95u95head](X) = 2.X + 2
[au95u95incr](X) = X
[au95u95nats] = 2
[au95u95tail](X) = 2.X + 2
[au95u95zeros] = 0
[mark](X) = X
[num0] = 0
[adx](X) = 2.X + 2
[cons](X1,X2) = 2.X1 + X2
[fSNonEmpty] = 0
[head](X) = 2.X + 2
[incr](X) = X
[nats] = 2
[nil] = 2
[s](X) = X
[tail](X) = 2.X + 2
[zeros] = 0
[AU95U95ADX](X) = 0
[AU95U95HEAD](X) = X + 2
[AU95U95INCR](X) = X + 1
[AU95U95NATS] = 0
[AU95U95TAIL](X) = 2.X + 2
[AU95U95ZEROS] = 0
[MARK](X) = 2.X + 1

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95INCR(cons(X,L)) -> MARK(X)
 AU95U95TAIL(cons(X,L)) -> MARK(L)
 MARK(adx(X)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(head(X)) -> AU95U95HEAD(mark(X))
 MARK(head(X)) -> MARK(X)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(tail(X)) -> AU95U95TAIL(mark(X))
 MARK(tail(X)) -> MARK(X)
-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95INCR(cons(X,L)) -> MARK(X)
 AU95U95TAIL(cons(X,L)) -> MARK(L)
 MARK(adx(X)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(head(X)) -> MARK(X)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(tail(X)) -> AU95U95TAIL(mark(X))
 MARK(tail(X)) -> MARK(X)
->->-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros

Problem 1: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95INCR(cons(X,L)) -> MARK(X)
 AU95U95TAIL(cons(X,L)) -> MARK(L)
 MARK(adx(X)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(head(X)) -> MARK(X)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(tail(X)) -> AU95U95TAIL(mark(X))
 MARK(tail(X)) -> MARK(X)
-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
-> Usable rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95adx](X) = 2.X
[au95u95head](X) = 2.X + 2
[au95u95incr](X) = X
[au95u95nats] = 2
[au95u95tail](X) = 2.X + 1
[au95u95zeros] = 0
[mark](X) = X
[num0] = 0
[adx](X) = 2.X
[cons](X1,X2) = X1 + 2.X2
[fSNonEmpty] = 0
[head](X) = 2.X + 2
[incr](X) = X
[nats] = 2
[nil] = 1
[s](X) = X
[tail](X) = 2.X + 1
[zeros] = 0
[AU95U95ADX](X) = 0
[AU95U95HEAD](X) = 0
[AU95U95INCR](X) = 2.X + 1
[AU95U95NATS] = 0
[AU95U95TAIL](X) = X + 2
[AU95U95ZEROS] = 0
[MARK](X) = 2.X + 1

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95INCR(cons(X,L)) -> MARK(X)
 MARK(adx(X)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(head(X)) -> MARK(X)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(tail(X)) -> AU95U95TAIL(mark(X))
 MARK(tail(X)) -> MARK(X)
-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95INCR(cons(X,L)) -> MARK(X)
 MARK(adx(X)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(head(X)) -> MARK(X)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(tail(X)) -> MARK(X)
->->-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros

Problem 1: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95INCR(cons(X,L)) -> MARK(X)
 MARK(adx(X)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(head(X)) -> MARK(X)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(tail(X)) -> MARK(X)
-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
-> Usable rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95adx](X) = 2.X + 2
[au95u95head](X) = 2.X + 2
[au95u95incr](X) = X
[au95u95nats] = 2
[au95u95tail](X) = X + 1
[au95u95zeros] = 0
[mark](X) = X
[num0] = 0
[adx](X) = 2.X + 2
[cons](X1,X2) = 2.X1 + X2
[fSNonEmpty] = 0
[head](X) = 2.X + 2
[incr](X) = X
[nats] = 2
[nil] = 1
[s](X) = X
[tail](X) = X + 1
[zeros] = 0
[AU95U95ADX](X) = 0
[AU95U95HEAD](X) = 0
[AU95U95INCR](X) = 2.X + 2
[AU95U95NATS] = 0
[AU95U95TAIL](X) = 0
[AU95U95ZEROS] = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95INCR(cons(X,L)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(head(X)) -> MARK(X)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(tail(X)) -> MARK(X)
-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95INCR(cons(X,L)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(head(X)) -> MARK(X)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(tail(X)) -> MARK(X)
->->-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros

Problem 1: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95INCR(cons(X,L)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(head(X)) -> MARK(X)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(tail(X)) -> MARK(X)
-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
-> Usable rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95adx](X) = X
[au95u95head](X) = X + 2
[au95u95incr](X) = X
[au95u95nats] = 2
[au95u95tail](X) = X + 1
[au95u95zeros] = 2
[mark](X) = X
[num0] = 0
[adx](X) = X
[cons](X1,X2) = X1 + X2
[fSNonEmpty] = 0
[head](X) = X + 2
[incr](X) = X
[nats] = 2
[nil] = 1
[s](X) = X
[tail](X) = X + 1
[zeros] = 2
[AU95U95ADX](X) = 0
[AU95U95HEAD](X) = 0
[AU95U95INCR](X) = 2.X + 2
[AU95U95NATS] = 0
[AU95U95TAIL](X) = 0
[AU95U95ZEROS] = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95INCR(cons(X,L)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(tail(X)) -> MARK(X)
-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95INCR(cons(X,L)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(tail(X)) -> MARK(X)
->->-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros

Problem 1: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95INCR(cons(X,L)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
 MARK(tail(X)) -> MARK(X)
-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
-> Usable rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
->Interpretation type:
 Linear
->Coefficients:
 Natural Numbers
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95adx](X) = X + 1
[au95u95head](X) = 2.X + 1
[au95u95incr](X) = X
[au95u95nats] = 2
[au95u95tail](X) = 2.X + 2
[au95u95zeros] = 1
[mark](X) = X
[num0] = 0
[adx](X) = X + 1
[cons](X1,X2) = 2.X1 + X2
[fSNonEmpty] = 0
[head](X) = 2.X + 1
[incr](X) = X
[nats] = 2
[nil] = 0
[s](X) = X
[tail](X) = 2.X + 2
[zeros] = 1
[AU95U95ADX](X) = 0
[AU95U95HEAD](X) = 0
[AU95U95INCR](X) = 2.X + 2
[AU95U95NATS] = 0
[AU95U95TAIL](X) = 0
[AU95U95ZEROS] = 0
[MARK](X) = 2.X + 2

Problem 1: 

SCC Processor:
-> Pairs:
 AU95U95INCR(cons(X,L)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 AU95U95INCR(cons(X,L)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros

Problem 1: 

Reduction Pairs Processor:
-> Pairs:
 AU95U95INCR(cons(X,L)) -> MARK(X)
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
-> Usable rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
->Interpretation type:
 Linear
->Coefficients:
 All rationals
->Dimension:
 1
->Bound:
 2
->Interpretation:
 
[au95u95adx](X) = 2.X
[au95u95head](X) = 2.X + 2
[au95u95incr](X) = X + 1/2
[au95u95nats] = 2
[au95u95tail](X) = 2.X
[au95u95zeros] = 1
[mark](X) = X
[num0] = 0
[adx](X) = 2.X
[cons](X1,X2) = 2.X1 + 1/2.X2 + 1/2
[fSNonEmpty] = 0
[head](X) = 2.X + 2
[incr](X) = X + 1/2
[nats] = 2
[nil] = 2
[s](X) = X
[tail](X) = 2.X
[zeros] = 1
[AU95U95ADX](X) = 0
[AU95U95HEAD](X) = 0
[AU95U95INCR](X) = X
[AU95U95NATS] = 0
[AU95U95TAIL](X) = 0
[AU95U95ZEROS] = 0
[MARK](X) = 2.X

Problem 1: 

SCC Processor:
-> Pairs:
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(incr(X)) -> AU95U95INCR(mark(X))
 MARK(incr(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
->Strongly Connected Components:
->->Cycle:
->->-> Pairs:
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(incr(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
->->-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros

Problem 1: 

Subterm Processor:
-> Pairs:
 MARK(cons(X1,X2)) -> MARK(X1)
 MARK(incr(X)) -> MARK(X)
 MARK(s(X)) -> MARK(X)
-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
->Projection:
 pi(MARK) = 1

Problem 1: 

SCC Processor:
-> Pairs:
 Empty
-> Rules:
 au95u95adx(cons(X,L)) -> au95u95incr(cons(mark(X),adx(L)))
 au95u95adx(nil) -> nil
 au95u95adx(X) -> adx(X)
 au95u95head(cons(X,L)) -> mark(X)
 au95u95head(X) -> head(X)
 au95u95incr(cons(X,L)) -> cons(s(mark(X)),incr(L))
 au95u95incr(nil) -> nil
 au95u95incr(X) -> incr(X)
 au95u95nats -> au95u95adx(au95u95zeros)
 au95u95nats -> nats
 au95u95tail(cons(X,L)) -> mark(L)
 au95u95tail(X) -> tail(X)
 au95u95zeros -> cons(num0,zeros)
 au95u95zeros -> zeros
 mark(num0) -> num0
 mark(adx(X)) -> au95u95adx(mark(X))
 mark(cons(X1,X2)) -> cons(mark(X1),X2)
 mark(head(X)) -> au95u95head(mark(X))
 mark(incr(X)) -> au95u95incr(mark(X))
 mark(nats) -> au95u95nats
 mark(nil) -> nil
 mark(s(X)) -> s(mark(X))
 mark(tail(X)) -> au95u95tail(mark(X))
 mark(zeros) -> au95u95zeros
->Strongly Connected Components:
 There is no strongly connected component

The problem is finite.
