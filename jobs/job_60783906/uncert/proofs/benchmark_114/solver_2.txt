YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/jUWzE.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Quasi decreasingness of the given CTRS could be proven:

(0) CTRS
(1) CTRSToQTRSProof [SOUND, 0 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 33 ms]
(4) QTRS
(5) DependencyPairsProof [EQUIVALENT, 0 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) QDP
(9) UsableRulesReductionPairsProof [EQUIVALENT, 7 ms]
(10) QDP
(11) TransformationProof [EQUIVALENT, 0 ms]
(12) QDP
(13) TransformationProof [EQUIVALENT, 0 ms]
(14) QDP
(15) DependencyGraphProof [EQUIVALENT, 0 ms]
(16) QDP
(17) TransformationProof [EQUIVALENT, 0 ms]
(18) QDP
(19) DependencyGraphProof [EQUIVALENT, 0 ms]
(20) QDP
(21) TransformationProof [EQUIVALENT, 0 ms]
(22) QDP
(23) DependencyGraphProof [EQUIVALENT, 0 ms]
(24) QDP
(25) TransformationProof [EQUIVALENT, 0 ms]
(26) QDP
(27) DependencyGraphProof [EQUIVALENT, 0 ms]
(28) QDP
(29) TransformationProof [EQUIVALENT, 0 ms]
(30) QDP
(31) DependencyGraphProof [EQUIVALENT, 0 ms]
(32) QDP
(33) TransformationProof [EQUIVALENT, 0 ms]
(34) QDP
(35) DependencyGraphProof [EQUIVALENT, 0 ms]
(36) QDP
(37) TransformationProof [EQUIVALENT, 0 ms]
(38) QDP
(39) DependencyGraphProof [EQUIVALENT, 0 ms]
(40) QDP
(41) TransformationProof [EQUIVALENT, 0 ms]
(42) QDP
(43) DependencyGraphProof [EQUIVALENT, 0 ms]
(44) QDP
(45) TransformationProof [EQUIVALENT, 0 ms]
(46) QDP
(47) DependencyGraphProof [EQUIVALENT, 0 ms]
(48) QDP
(49) TransformationProof [EQUIVALENT, 0 ms]
(50) QDP
(51) TransformationProof [EQUIVALENT, 0 ms]
(52) QDP
(53) DependencyGraphProof [EQUIVALENT, 0 ms]
(54) QDP
(55) TransformationProof [EQUIVALENT, 0 ms]
(56) QDP
(57) DependencyGraphProof [EQUIVALENT, 0 ms]
(58) QDP
(59) TransformationProof [EQUIVALENT, 0 ms]
(60) QDP
(61) DependencyGraphProof [EQUIVALENT, 0 ms]
(62) QDP
(63) TransformationProof [EQUIVALENT, 0 ms]
(64) QDP
(65) DependencyGraphProof [EQUIVALENT, 0 ms]
(66) QDP
(67) TransformationProof [EQUIVALENT, 0 ms]
(68) QDP
(69) TransformationProof [EQUIVALENT, 0 ms]
(70) QDP
(71) DependencyGraphProof [EQUIVALENT, 0 ms]
(72) QDP
(73) TransformationProof [EQUIVALENT, 0 ms]
(74) QDP
(75) DependencyGraphProof [EQUIVALENT, 0 ms]
(76) QDP
(77) TransformationProof [EQUIVALENT, 0 ms]
(78) QDP
(79) DependencyGraphProof [EQUIVALENT, 0 ms]
(80) QDP
(81) TransformationProof [EQUIVALENT, 0 ms]
(82) QDP
(83) DependencyGraphProof [EQUIVALENT, 0 ms]
(84) QDP
(85) TransformationProof [EQUIVALENT, 0 ms]
(86) QDP
(87) DependencyGraphProof [EQUIVALENT, 0 ms]
(88) QDP
(89) TransformationProof [EQUIVALENT, 0 ms]
(90) QDP
(91) DependencyGraphProof [EQUIVALENT, 0 ms]
(92) QDP
(93) TransformationProof [EQUIVALENT, 0 ms]
(94) QDP
(95) DependencyGraphProof [EQUIVALENT, 0 ms]
(96) QDP
(97) TransformationProof [EQUIVALENT, 0 ms]
(98) QDP
(99) DependencyGraphProof [EQUIVALENT, 0 ms]
(100) QDP
(101) TransformationProof [EQUIVALENT, 0 ms]
(102) QDP
(103) DependencyGraphProof [EQUIVALENT, 0 ms]
(104) QDP
(105) TransformationProof [EQUIVALENT, 0 ms]
(106) QDP
(107) DependencyGraphProof [EQUIVALENT, 0 ms]
(108) QDP
(109) TransformationProof [EQUIVALENT, 0 ms]
(110) QDP
(111) DependencyGraphProof [EQUIVALENT, 0 ms]
(112) QDP
(113) TransformationProof [EQUIVALENT, 0 ms]
(114) QDP
(115) DependencyGraphProof [EQUIVALENT, 0 ms]
(116) QDP
(117) TransformationProof [EQUIVALENT, 0 ms]
(118) QDP
(119) DependencyGraphProof [EQUIVALENT, 0 ms]
(120) QDP
(121) TransformationProof [EQUIVALENT, 0 ms]
(122) QDP
(123) TransformationProof [EQUIVALENT, 0 ms]
(124) QDP
(125) TransformationProof [EQUIVALENT, 0 ms]
(126) QDP
(127) TransformationProof [EQUIVALENT, 0 ms]
(128) QDP
(129) DependencyGraphProof [EQUIVALENT, 0 ms]
(130) QDP
(131) TransformationProof [EQUIVALENT, 0 ms]
(132) QDP
(133) TransformationProof [EQUIVALENT, 0 ms]
(134) QDP
(135) TransformationProof [EQUIVALENT, 0 ms]
(136) QDP
(137) TransformationProof [EQUIVALENT, 0 ms]
(138) QDP
(139) DependencyGraphProof [EQUIVALENT, 0 ms]
(140) QDP
(141) TransformationProof [EQUIVALENT, 0 ms]
(142) QDP
(143) DependencyGraphProof [EQUIVALENT, 0 ms]
(144) QDP
(145) TransformationProof [EQUIVALENT, 0 ms]
(146) QDP
(147) DependencyGraphProof [EQUIVALENT, 0 ms]
(148) QDP
(149) TransformationProof [EQUIVALENT, 0 ms]
(150) QDP
(151) DependencyGraphProof [EQUIVALENT, 0 ms]
(152) QDP
(153) TransformationProof [EQUIVALENT, 0 ms]
(154) QDP
(155) DependencyGraphProof [EQUIVALENT, 0 ms]
(156) QDP
(157) TransformationProof [EQUIVALENT, 0 ms]
(158) QDP
(159) DependencyGraphProof [EQUIVALENT, 0 ms]
(160) QDP
(161) TransformationProof [EQUIVALENT, 0 ms]
(162) QDP
(163) DependencyGraphProof [EQUIVALENT, 0 ms]
(164) QDP
(165) TransformationProof [EQUIVALENT, 0 ms]
(166) QDP
(167) DependencyGraphProof [EQUIVALENT, 0 ms]
(168) QDP
(169) TransformationProof [EQUIVALENT, 0 ms]
(170) QDP
(171) TransformationProof [EQUIVALENT, 0 ms]
(172) QDP
(173) TransformationProof [EQUIVALENT, 0 ms]
(174) QDP
(175) TransformationProof [EQUIVALENT, 0 ms]
(176) QDP
(177) DependencyGraphProof [EQUIVALENT, 0 ms]
(178) QDP
(179) TransformationProof [EQUIVALENT, 0 ms]
(180) QDP
(181) TransformationProof [EQUIVALENT, 0 ms]
(182) QDP
(183) TransformationProof [EQUIVALENT, 0 ms]
(184) QDP
(185) TransformationProof [EQUIVALENT, 0 ms]
(186) QDP
(187) TransformationProof [EQUIVALENT, 0 ms]
(188) QDP
(189) DependencyGraphProof [EQUIVALENT, 0 ms]
(190) QDP
(191) TransformationProof [EQUIVALENT, 0 ms]
(192) QDP
(193) DependencyGraphProof [EQUIVALENT, 0 ms]
(194) QDP
(195) TransformationProof [EQUIVALENT, 0 ms]
(196) QDP
(197) DependencyGraphProof [EQUIVALENT, 0 ms]
(198) QDP
(199) TransformationProof [EQUIVALENT, 0 ms]
(200) QDP
(201) DependencyGraphProof [EQUIVALENT, 0 ms]
(202) QDP
(203) TransformationProof [EQUIVALENT, 0 ms]
(204) QDP
(205) DependencyGraphProof [EQUIVALENT, 0 ms]
(206) QDP
(207) TransformationProof [EQUIVALENT, 0 ms]
(208) QDP
(209) DependencyGraphProof [EQUIVALENT, 0 ms]
(210) QDP
(211) TransformationProof [EQUIVALENT, 0 ms]
(212) QDP
(213) TransformationProof [EQUIVALENT, 0 ms]
(214) QDP
(215) DependencyGraphProof [EQUIVALENT, 0 ms]
(216) QDP
(217) TransformationProof [EQUIVALENT, 0 ms]
(218) QDP
(219) TransformationProof [EQUIVALENT, 0 ms]
(220) QDP
(221) TransformationProof [EQUIVALENT, 0 ms]
(222) QDP
(223) DependencyGraphProof [EQUIVALENT, 0 ms]
(224) QDP
(225) TransformationProof [EQUIVALENT, 0 ms]
(226) QDP
(227) TransformationProof [EQUIVALENT, 0 ms]
(228) QDP
(229) TransformationProof [EQUIVALENT, 0 ms]
(230) QDP
(231) TransformationProof [EQUIVALENT, 0 ms]
(232) QDP
(233) TransformationProof [EQUIVALENT, 0 ms]
(234) QDP
(235) DependencyGraphProof [EQUIVALENT, 0 ms]
(236) QDP
(237) TransformationProof [EQUIVALENT, 0 ms]
(238) QDP
(239) DependencyGraphProof [EQUIVALENT, 0 ms]
(240) QDP
(241) TransformationProof [EQUIVALENT, 0 ms]
(242) QDP
(243) DependencyGraphProof [EQUIVALENT, 0 ms]
(244) QDP
(245) TransformationProof [EQUIVALENT, 0 ms]
(246) QDP
(247) TransformationProof [EQUIVALENT, 0 ms]
(248) QDP
(249) DependencyGraphProof [EQUIVALENT, 0 ms]
(250) QDP
(251) TransformationProof [EQUIVALENT, 0 ms]
(252) QDP
(253) TransformationProof [EQUIVALENT, 0 ms]
(254) QDP
(255) TransformationProof [EQUIVALENT, 0 ms]
(256) QDP
(257) DependencyGraphProof [EQUIVALENT, 0 ms]
(258) QDP
(259) UsableRulesProof [EQUIVALENT, 0 ms]
(260) QDP
(261) MNOCProof [EQUIVALENT, 0 ms]
(262) QDP
(263) DependencyGraphProof [EQUIVALENT, 0 ms]
(264) QDP
(265) UsableRulesProof [EQUIVALENT, 0 ms]
(266) QDP
(267) QReductionProof [EQUIVALENT, 0 ms]
(268) QDP
(269) TransformationProof [EQUIVALENT, 0 ms]
(270) QDP
(271) DependencyGraphProof [EQUIVALENT, 0 ms]
(272) TRUE


----------------------------------------

(0)
Obligation:
Conditional term rewrite system:
The TRS R consists of the following rules:

   or(0, x) -> x
   or(x, 0) -> x
   or(1, x) -> 1
   or(x, 1) -> 1
   or(x, not(x)) -> 1
   or(not(x), x) -> 1
   and(0, x) -> 0
   and(x, 0) -> 0
   and(1, x) -> x
   and(x, 1) -> x
   and(x, not(x)) -> 0
   and(not(x), x) -> 0
   not(1) -> 0
   not(0) -> 1

The conditional TRS C consists of the following conditional rules:

   implies(x, y) -> 1 <= not(x) -> 1
   implies(x, y) -> 1 <= y -> 1
   implies(x, y) -> 0 <= x -> 1, y -> 0
   f(x) -> f(0) <= implies(implies(x, implies(x, 0)), 0) -> 1


----------------------------------------

(1) CTRSToQTRSProof (SOUND)
The conditional rules have been transormed into unconditional rules according to [CTRS,AAECCNOC].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   U1(1) -> 1
   implies(x, y) -> U2(y)
   U2(1) -> 1
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   f(x) -> U5(implies(implies(x, implies(x, 0)), 0))
   U5(1) -> f(0)
   or(0, x) -> x
   or(x, 0) -> x
   or(1, x) -> 1
   or(x, 1) -> 1
   or(x, not(x)) -> 1
   or(not(x), x) -> 1
   and(0, x) -> 0
   and(x, 0) -> 0
   and(1, x) -> x
   and(x, 1) -> x
   and(x, not(x)) -> 0
   and(not(x), x) -> 0
   not(1) -> 0
   not(0) -> 1

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(1) = 0
   POL(U1(x_1)) = x_1
   POL(U2(x_1)) = x_1
   POL(U3(x_1, x_2)) = x_1 + x_2
   POL(U4(x_1)) = x_1
   POL(U5(x_1)) = x_1
   POL(and(x_1, x_2)) = 2 + x_1 + 2*x_2
   POL(f(x_1)) = 2*x_1
   POL(implies(x_1, x_2)) = x_1 + x_2
   POL(not(x_1)) = x_1
   POL(or(x_1, x_2)) = 1 + x_1 + x_2
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   or(0, x) -> x
   or(x, 0) -> x
   or(1, x) -> 1
   or(x, 1) -> 1
   or(x, not(x)) -> 1
   or(not(x), x) -> 1
   and(0, x) -> 0
   and(x, 0) -> 0
   and(1, x) -> x
   and(x, 1) -> x
   and(x, not(x)) -> 0
   and(not(x), x) -> 0




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   U1(1) -> 1
   implies(x, y) -> U2(y)
   U2(1) -> 1
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   f(x) -> U5(implies(implies(x, implies(x, 0)), 0))
   U5(1) -> f(0)
   not(1) -> 0
   not(0) -> 1

Q is empty.

----------------------------------------

(5) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   IMPLIES(x, y) -> U1^1(not(x))
   IMPLIES(x, y) -> NOT(x)
   IMPLIES(x, y) -> U2^1(y)
   IMPLIES(x, y) -> U3^1(x, y)
   U3^1(1, y) -> U4^1(y)
   F(x) -> U5^1(implies(implies(x, implies(x, 0)), 0))
   F(x) -> IMPLIES(implies(x, implies(x, 0)), 0)
   F(x) -> IMPLIES(x, implies(x, 0))
   F(x) -> IMPLIES(x, 0)
   U5^1(1) -> F(0)

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   U1(1) -> 1
   implies(x, y) -> U2(y)
   U2(1) -> 1
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   f(x) -> U5(implies(implies(x, implies(x, 0)), 0))
   U5(1) -> f(0)
   not(1) -> 0
   not(0) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 8 less nodes.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x) -> U5^1(implies(implies(x, implies(x, 0)), 0))
   U5^1(1) -> F(0)

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   U1(1) -> 1
   implies(x, y) -> U2(y)
   U2(1) -> 1
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   f(x) -> U5(implies(implies(x, implies(x, 0)), 0))
   U5(1) -> f(0)
   not(1) -> 0
   not(0) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) UsableRulesReductionPairsProof (EQUIVALENT)
By using the usable rules with reduction pair processor [LPAR04] with a polynomial ordering [POLO], all dependency pairs and the corresponding usable rules [FROCOS05] can be oriented non-strictly. All non-usable rules are removed, and those dependency pairs and usable rules that have been oriented strictly or contain non-usable symbols in their left-hand side are removed as well.

No dependency pairs are removed.

The following rules are removed from R:

   f(x) -> U5(implies(implies(x, implies(x, 0)), 0))
   U5(1) -> f(0)
Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(1) = 0
   POL(F(x_1)) = 2*x_1
   POL(U1(x_1)) = x_1
   POL(U2(x_1)) = x_1
   POL(U3(x_1, x_2)) = x_1 + x_2
   POL(U4(x_1)) = x_1
   POL(U5^1(x_1)) = x_1
   POL(implies(x_1, x_2)) = x_1 + x_2
   POL(not(x_1)) = x_1


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x) -> U5^1(implies(implies(x, implies(x, 0)), 0))
   U5^1(1) -> F(0)

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule F(x) -> U5^1(implies(implies(x, implies(x, 0)), 0)) we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(implies(implies(0, implies(0, 0)), 0)),F(0) -> U5^1(implies(implies(0, implies(0, 0)), 0)))


----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(implies(0, implies(0, 0)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(implies(0, implies(0, 0)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(implies(0, implies(0, 0))))),F(0) -> U5^1(U1(not(implies(0, implies(0, 0))))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(implies(0, implies(0, 0)), 0)),F(0) -> U5^1(U3(implies(0, implies(0, 0)), 0)))
   (F(0) -> U5^1(implies(U1(not(0)), 0)),F(0) -> U5^1(implies(U1(not(0)), 0)))
   (F(0) -> U5^1(implies(U2(implies(0, 0)), 0)),F(0) -> U5^1(implies(U2(implies(0, 0)), 0)))
   (F(0) -> U5^1(implies(U3(0, implies(0, 0)), 0)),F(0) -> U5^1(implies(U3(0, implies(0, 0)), 0)))
   (F(0) -> U5^1(implies(implies(0, U1(not(0))), 0)),F(0) -> U5^1(implies(implies(0, U1(not(0))), 0)))
   (F(0) -> U5^1(implies(implies(0, U2(0)), 0)),F(0) -> U5^1(implies(implies(0, U2(0)), 0)))
   (F(0) -> U5^1(implies(implies(0, U3(0, 0)), 0)),F(0) -> U5^1(implies(implies(0, U3(0, 0)), 0)))


----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(implies(0, implies(0, 0)))))
   F(0) -> U5^1(U2(0))
   F(0) -> U5^1(U3(implies(0, implies(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(U2(implies(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, implies(0, 0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(implies(0, U2(0)), 0))
   F(0) -> U5^1(implies(implies(0, U3(0, 0)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U1(not(implies(0, implies(0, 0)))))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(implies(0, implies(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(U2(implies(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, implies(0, 0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(implies(0, U2(0)), 0))
   F(0) -> U5^1(implies(implies(0, U3(0, 0)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U1(not(implies(0, implies(0, 0))))) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U1(not(0))))),F(0) -> U5^1(U1(not(U1(not(0))))))
   (F(0) -> U5^1(U1(not(U2(implies(0, 0))))),F(0) -> U5^1(U1(not(U2(implies(0, 0))))))
   (F(0) -> U5^1(U1(not(U3(0, implies(0, 0))))),F(0) -> U5^1(U1(not(U3(0, implies(0, 0))))))
   (F(0) -> U5^1(U1(not(implies(0, U1(not(0)))))),F(0) -> U5^1(U1(not(implies(0, U1(not(0)))))))
   (F(0) -> U5^1(U1(not(implies(0, U2(0))))),F(0) -> U5^1(U1(not(implies(0, U2(0))))))
   (F(0) -> U5^1(U1(not(implies(0, U3(0, 0))))),F(0) -> U5^1(U1(not(implies(0, U3(0, 0))))))


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(implies(0, implies(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(U2(implies(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, implies(0, 0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(implies(0, U2(0)), 0))
   F(0) -> U5^1(implies(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(U2(implies(0, 0)))))
   F(0) -> U5^1(U1(not(U3(0, implies(0, 0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(not(0))))))
   F(0) -> U5^1(U1(not(implies(0, U2(0)))))
   F(0) -> U5^1(U1(not(implies(0, U3(0, 0)))))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U3(implies(0, implies(0, 0)), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(U2(implies(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, implies(0, 0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(implies(0, U2(0)), 0))
   F(0) -> U5^1(implies(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(U2(implies(0, 0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(not(0))))))
   F(0) -> U5^1(U1(not(implies(0, U2(0)))))
   F(0) -> U5^1(U1(not(implies(0, U3(0, 0)))))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U3(implies(0, implies(0, 0)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U3(U1(not(0)), 0)),F(0) -> U5^1(U3(U1(not(0)), 0)))
   (F(0) -> U5^1(U3(U2(implies(0, 0)), 0)),F(0) -> U5^1(U3(U2(implies(0, 0)), 0)))
   (F(0) -> U5^1(U3(U3(0, implies(0, 0)), 0)),F(0) -> U5^1(U3(U3(0, implies(0, 0)), 0)))
   (F(0) -> U5^1(U3(implies(0, U1(not(0))), 0)),F(0) -> U5^1(U3(implies(0, U1(not(0))), 0)))
   (F(0) -> U5^1(U3(implies(0, U2(0)), 0)),F(0) -> U5^1(U3(implies(0, U2(0)), 0)))
   (F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0)),F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0)))


----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(U2(implies(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, implies(0, 0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(implies(0, U2(0)), 0))
   F(0) -> U5^1(implies(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(U2(implies(0, 0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(not(0))))))
   F(0) -> U5^1(U1(not(implies(0, U2(0)))))
   F(0) -> U5^1(U1(not(implies(0, U3(0, 0)))))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(U3(0, implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(U1(not(0)), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U2(implies(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, implies(0, 0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(implies(0, U2(0)), 0))
   F(0) -> U5^1(implies(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(U2(implies(0, 0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(not(0))))))
   F(0) -> U5^1(U1(not(implies(0, U2(0)))))
   F(0) -> U5^1(U1(not(implies(0, U3(0, 0)))))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(U1(not(0)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U1(not(0))))),F(0) -> U5^1(U1(not(U1(not(0))))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(U1(not(0)), 0)),F(0) -> U5^1(U3(U1(not(0)), 0)))
   (F(0) -> U5^1(implies(U1(1), 0)),F(0) -> U5^1(implies(U1(1), 0)))


----------------------------------------

(26)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U2(implies(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, implies(0, 0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(implies(0, U2(0)), 0))
   F(0) -> U5^1(implies(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(U2(implies(0, 0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(not(0))))))
   F(0) -> U5^1(U1(not(implies(0, U2(0)))))
   F(0) -> U5^1(U1(not(implies(0, U3(0, 0)))))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(U2(0))
   F(0) -> U5^1(implies(U1(1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(27) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(28)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(U2(implies(0, 0)), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U3(0, implies(0, 0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(implies(0, U2(0)), 0))
   F(0) -> U5^1(implies(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(U2(implies(0, 0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(not(0))))))
   F(0) -> U5^1(U1(not(implies(0, U2(0)))))
   F(0) -> U5^1(U1(not(implies(0, U3(0, 0)))))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(29) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(U2(implies(0, 0)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U2(implies(0, 0))))),F(0) -> U5^1(U1(not(U2(implies(0, 0))))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(U2(implies(0, 0)), 0)),F(0) -> U5^1(U3(U2(implies(0, 0)), 0)))
   (F(0) -> U5^1(implies(U2(U1(not(0))), 0)),F(0) -> U5^1(implies(U2(U1(not(0))), 0)))
   (F(0) -> U5^1(implies(U2(U2(0)), 0)),F(0) -> U5^1(implies(U2(U2(0)), 0)))
   (F(0) -> U5^1(implies(U2(U3(0, 0)), 0)),F(0) -> U5^1(implies(U2(U3(0, 0)), 0)))


----------------------------------------

(30)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U3(0, implies(0, 0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(implies(0, U2(0)), 0))
   F(0) -> U5^1(implies(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(U2(implies(0, 0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(not(0))))))
   F(0) -> U5^1(U1(not(implies(0, U2(0)))))
   F(0) -> U5^1(U1(not(implies(0, U3(0, 0)))))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(U2(0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(31) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(U3(0, implies(0, 0)), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(implies(0, U2(0)), 0))
   F(0) -> U5^1(implies(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(U2(implies(0, 0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(not(0))))))
   F(0) -> U5^1(U1(not(implies(0, U2(0)))))
   F(0) -> U5^1(U1(not(implies(0, U3(0, 0)))))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(33) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(U3(0, implies(0, 0)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U3(0, implies(0, 0))))),F(0) -> U5^1(U1(not(U3(0, implies(0, 0))))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(U3(0, implies(0, 0)), 0)),F(0) -> U5^1(U3(U3(0, implies(0, 0)), 0)))
   (F(0) -> U5^1(implies(U3(0, U1(not(0))), 0)),F(0) -> U5^1(implies(U3(0, U1(not(0))), 0)))
   (F(0) -> U5^1(implies(U3(0, U2(0)), 0)),F(0) -> U5^1(implies(U3(0, U2(0)), 0)))
   (F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0)),F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0)))


----------------------------------------

(34)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(implies(0, U2(0)), 0))
   F(0) -> U5^1(implies(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(U2(implies(0, 0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(not(0))))))
   F(0) -> U5^1(U1(not(implies(0, U2(0)))))
   F(0) -> U5^1(U1(not(implies(0, U3(0, 0)))))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(U1(not(U3(0, implies(0, 0)))))
   F(0) -> U5^1(U2(0))
   F(0) -> U5^1(U3(U3(0, implies(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(35) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 3 less nodes.
----------------------------------------

(36)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(implies(0, U1(not(0))), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(implies(0, U2(0)), 0))
   F(0) -> U5^1(implies(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(U2(implies(0, 0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(not(0))))))
   F(0) -> U5^1(U1(not(implies(0, U2(0)))))
   F(0) -> U5^1(U1(not(implies(0, U3(0, 0)))))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(37) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(implies(0, U1(not(0))), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(implies(0, U1(not(0)))))),F(0) -> U5^1(U1(not(implies(0, U1(not(0)))))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(implies(0, U1(not(0))), 0)),F(0) -> U5^1(U3(implies(0, U1(not(0))), 0)))
   (F(0) -> U5^1(implies(U1(not(0)), 0)),F(0) -> U5^1(implies(U1(not(0)), 0)))
   (F(0) -> U5^1(implies(U2(U1(not(0))), 0)),F(0) -> U5^1(implies(U2(U1(not(0))), 0)))
   (F(0) -> U5^1(implies(U3(0, U1(not(0))), 0)),F(0) -> U5^1(implies(U3(0, U1(not(0))), 0)))
   (F(0) -> U5^1(implies(implies(0, U1(1)), 0)),F(0) -> U5^1(implies(implies(0, U1(1)), 0)))


----------------------------------------

(38)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(implies(0, U2(0)), 0))
   F(0) -> U5^1(implies(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(U2(implies(0, 0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(not(0))))))
   F(0) -> U5^1(U1(not(implies(0, U2(0)))))
   F(0) -> U5^1(U1(not(implies(0, U3(0, 0)))))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(U2(0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(39) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(40)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(implies(0, U2(0)), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(U2(implies(0, 0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(not(0))))))
   F(0) -> U5^1(U1(not(implies(0, U2(0)))))
   F(0) -> U5^1(U1(not(implies(0, U3(0, 0)))))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(41) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(implies(0, U2(0)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(implies(0, U2(0))))),F(0) -> U5^1(U1(not(implies(0, U2(0))))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(implies(0, U2(0)), 0)),F(0) -> U5^1(U3(implies(0, U2(0)), 0)))
   (F(0) -> U5^1(implies(U1(not(0)), 0)),F(0) -> U5^1(implies(U1(not(0)), 0)))
   (F(0) -> U5^1(implies(U2(U2(0)), 0)),F(0) -> U5^1(implies(U2(U2(0)), 0)))
   (F(0) -> U5^1(implies(U3(0, U2(0)), 0)),F(0) -> U5^1(implies(U3(0, U2(0)), 0)))


----------------------------------------

(42)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(U2(implies(0, 0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(not(0))))))
   F(0) -> U5^1(U1(not(implies(0, U2(0)))))
   F(0) -> U5^1(U1(not(implies(0, U3(0, 0)))))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U2(0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(43) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(44)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(implies(0, U3(0, 0)), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(U2(implies(0, 0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(not(0))))))
   F(0) -> U5^1(U1(not(implies(0, U2(0)))))
   F(0) -> U5^1(U1(not(implies(0, U3(0, 0)))))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(45) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(implies(0, U3(0, 0)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(implies(0, U3(0, 0))))),F(0) -> U5^1(U1(not(implies(0, U3(0, 0))))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0)),F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0)))
   (F(0) -> U5^1(implies(U1(not(0)), 0)),F(0) -> U5^1(implies(U1(not(0)), 0)))
   (F(0) -> U5^1(implies(U2(U3(0, 0)), 0)),F(0) -> U5^1(implies(U2(U3(0, 0)), 0)))
   (F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0)),F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0)))


----------------------------------------

(46)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(U2(implies(0, 0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(not(0))))))
   F(0) -> U5^1(U1(not(implies(0, U2(0)))))
   F(0) -> U5^1(U1(not(implies(0, U3(0, 0)))))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U2(0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(47) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(48)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U1(not(U1(not(0)))))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(U2(implies(0, 0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(not(0))))))
   F(0) -> U5^1(U1(not(implies(0, U2(0)))))
   F(0) -> U5^1(U1(not(implies(0, U3(0, 0)))))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(49) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U1(not(U1(not(0))))) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U1(1)))),F(0) -> U5^1(U1(not(U1(1)))))


----------------------------------------

(50)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(U2(implies(0, 0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(not(0))))))
   F(0) -> U5^1(U1(not(implies(0, U2(0)))))
   F(0) -> U5^1(U1(not(implies(0, U3(0, 0)))))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(51) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U1(not(U2(implies(0, 0))))) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U2(U1(not(0)))))),F(0) -> U5^1(U1(not(U2(U1(not(0)))))))
   (F(0) -> U5^1(U1(not(U2(U2(0))))),F(0) -> U5^1(U1(not(U2(U2(0))))))
   (F(0) -> U5^1(U1(not(U2(U3(0, 0))))),F(0) -> U5^1(U1(not(U2(U3(0, 0))))))


----------------------------------------

(52)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(implies(0, U1(not(0))))))
   F(0) -> U5^1(U1(not(implies(0, U2(0)))))
   F(0) -> U5^1(U1(not(implies(0, U3(0, 0)))))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U2(U2(0)))))
   F(0) -> U5^1(U1(not(U2(U3(0, 0)))))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(53) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(54)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U1(not(implies(0, U1(not(0))))))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(implies(0, U2(0)))))
   F(0) -> U5^1(U1(not(implies(0, U3(0, 0)))))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(55) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U1(not(implies(0, U1(not(0)))))) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U1(not(0))))),F(0) -> U5^1(U1(not(U1(not(0))))))
   (F(0) -> U5^1(U1(not(U2(U1(not(0)))))),F(0) -> U5^1(U1(not(U2(U1(not(0)))))))
   (F(0) -> U5^1(U1(not(U3(0, U1(not(0)))))),F(0) -> U5^1(U1(not(U3(0, U1(not(0)))))))
   (F(0) -> U5^1(U1(not(implies(0, U1(1))))),F(0) -> U5^1(U1(not(implies(0, U1(1))))))


----------------------------------------

(56)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(implies(0, U2(0)))))
   F(0) -> U5^1(U1(not(implies(0, U3(0, 0)))))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(U3(0, U1(not(0))))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(57) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(58)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U1(not(implies(0, U2(0)))))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(implies(0, U3(0, 0)))))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(59) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U1(not(implies(0, U2(0))))) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U1(not(0))))),F(0) -> U5^1(U1(not(U1(not(0))))))
   (F(0) -> U5^1(U1(not(U2(U2(0))))),F(0) -> U5^1(U1(not(U2(U2(0))))))
   (F(0) -> U5^1(U1(not(U3(0, U2(0))))),F(0) -> U5^1(U1(not(U3(0, U2(0))))))


----------------------------------------

(60)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(implies(0, U3(0, 0)))))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U1(not(U2(U2(0)))))
   F(0) -> U5^1(U1(not(U3(0, U2(0)))))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(61) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(62)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U1(not(implies(0, U3(0, 0)))))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(63) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U1(not(implies(0, U3(0, 0))))) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U1(not(0))))),F(0) -> U5^1(U1(not(U1(not(0))))))
   (F(0) -> U5^1(U1(not(U2(U3(0, 0))))),F(0) -> U5^1(U1(not(U2(U3(0, 0))))))
   (F(0) -> U5^1(U1(not(U3(0, U3(0, 0))))),F(0) -> U5^1(U1(not(U3(0, U3(0, 0))))))


----------------------------------------

(64)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U1(not(U2(U3(0, 0)))))
   F(0) -> U5^1(U1(not(U3(0, U3(0, 0)))))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(65) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(66)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U3(U1(not(0)), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(67) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U3(U1(not(0)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U3(U1(1), 0)),F(0) -> U5^1(U3(U1(1), 0)))


----------------------------------------

(68)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(U2(implies(0, 0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(69) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U3(U2(implies(0, 0)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U3(U2(U1(not(0))), 0)),F(0) -> U5^1(U3(U2(U1(not(0))), 0)))
   (F(0) -> U5^1(U3(U2(U2(0)), 0)),F(0) -> U5^1(U3(U2(U2(0)), 0)))
   (F(0) -> U5^1(U3(U2(U3(0, 0)), 0)),F(0) -> U5^1(U3(U2(U3(0, 0)), 0)))


----------------------------------------

(70)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U2(U2(0)), 0))
   F(0) -> U5^1(U3(U2(U3(0, 0)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(71) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(72)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U3(implies(0, U1(not(0))), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(73) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U3(implies(0, U1(not(0))), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U3(U1(not(0)), 0)),F(0) -> U5^1(U3(U1(not(0)), 0)))
   (F(0) -> U5^1(U3(U2(U1(not(0))), 0)),F(0) -> U5^1(U3(U2(U1(not(0))), 0)))
   (F(0) -> U5^1(U3(U3(0, U1(not(0))), 0)),F(0) -> U5^1(U3(U3(0, U1(not(0))), 0)))
   (F(0) -> U5^1(U3(implies(0, U1(1)), 0)),F(0) -> U5^1(U3(implies(0, U1(1)), 0)))


----------------------------------------

(74)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(75) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(76)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U3(implies(0, U2(0)), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(77) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U3(implies(0, U2(0)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U3(U1(not(0)), 0)),F(0) -> U5^1(U3(U1(not(0)), 0)))
   (F(0) -> U5^1(U3(U2(U2(0)), 0)),F(0) -> U5^1(U3(U2(U2(0)), 0)))
   (F(0) -> U5^1(U3(U3(0, U2(0)), 0)),F(0) -> U5^1(U3(U3(0, U2(0)), 0)))


----------------------------------------

(78)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(U3(U2(U2(0)), 0))
   F(0) -> U5^1(U3(U3(0, U2(0)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(79) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(80)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(81) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U3(implies(0, U3(0, 0)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U3(U1(not(0)), 0)),F(0) -> U5^1(U3(U1(not(0)), 0)))
   (F(0) -> U5^1(U3(U2(U3(0, 0)), 0)),F(0) -> U5^1(U3(U2(U3(0, 0)), 0)))
   (F(0) -> U5^1(U3(U3(0, U3(0, 0)), 0)),F(0) -> U5^1(U3(U3(0, U3(0, 0)), 0)))


----------------------------------------

(82)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(U3(U2(U3(0, 0)), 0))
   F(0) -> U5^1(U3(U3(0, U3(0, 0)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(83) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(84)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(U1(1), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(85) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(U1(1), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U1(1)))),F(0) -> U5^1(U1(not(U1(1)))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(U1(1), 0)),F(0) -> U5^1(U3(U1(1), 0)))
   (F(0) -> U5^1(implies(1, 0)),F(0) -> U5^1(implies(1, 0)))


----------------------------------------

(86)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(U2(0))
   F(0) -> U5^1(implies(1, 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(87) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(88)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(U2(U1(not(0))), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(89) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(U2(U1(not(0))), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U2(U1(not(0)))))),F(0) -> U5^1(U1(not(U2(U1(not(0)))))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(U2(U1(not(0))), 0)),F(0) -> U5^1(U3(U2(U1(not(0))), 0)))
   (F(0) -> U5^1(implies(U2(U1(1)), 0)),F(0) -> U5^1(implies(U2(U1(1)), 0)))


----------------------------------------

(90)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U2(U2(0)), 0))
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(U2(0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(91) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(92)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(U2(U2(0)), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(93) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(U2(U2(0)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U2(U2(0))))),F(0) -> U5^1(U1(not(U2(U2(0))))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(U2(U2(0)), 0)),F(0) -> U5^1(U3(U2(U2(0)), 0)))


----------------------------------------

(94)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))
   F(0) -> U5^1(U1(not(U2(U2(0)))))
   F(0) -> U5^1(U2(0))
   F(0) -> U5^1(U3(U2(U2(0)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(95) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 3 less nodes.
----------------------------------------

(96)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(U2(U3(0, 0)), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(97) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(U2(U3(0, 0)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U2(U3(0, 0))))),F(0) -> U5^1(U1(not(U2(U3(0, 0))))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(U2(U3(0, 0)), 0)),F(0) -> U5^1(U3(U2(U3(0, 0)), 0)))


----------------------------------------

(98)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))
   F(0) -> U5^1(U1(not(U2(U3(0, 0)))))
   F(0) -> U5^1(U2(0))
   F(0) -> U5^1(U3(U2(U3(0, 0)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(99) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 3 less nodes.
----------------------------------------

(100)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(U3(0, U1(not(0))), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(101) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(U3(0, U1(not(0))), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U3(0, U1(not(0)))))),F(0) -> U5^1(U1(not(U3(0, U1(not(0)))))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(U3(0, U1(not(0))), 0)),F(0) -> U5^1(U3(U3(0, U1(not(0))), 0)))
   (F(0) -> U5^1(implies(U3(0, U1(1)), 0)),F(0) -> U5^1(implies(U3(0, U1(1)), 0)))


----------------------------------------

(102)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))
   F(0) -> U5^1(U1(not(U3(0, U1(not(0))))))
   F(0) -> U5^1(U2(0))
   F(0) -> U5^1(U3(U3(0, U1(not(0))), 0))
   F(0) -> U5^1(implies(U3(0, U1(1)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(103) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 3 less nodes.
----------------------------------------

(104)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(U3(0, U2(0)), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))
   F(0) -> U5^1(implies(U3(0, U1(1)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(105) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(U3(0, U2(0)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U3(0, U2(0))))),F(0) -> U5^1(U1(not(U3(0, U2(0))))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(U3(0, U2(0)), 0)),F(0) -> U5^1(U3(U3(0, U2(0)), 0)))


----------------------------------------

(106)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))
   F(0) -> U5^1(implies(U3(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U3(0, U2(0)))))
   F(0) -> U5^1(U2(0))
   F(0) -> U5^1(U3(U3(0, U2(0)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(107) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 3 less nodes.
----------------------------------------

(108)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))
   F(0) -> U5^1(implies(U3(0, U1(1)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(109) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(U3(0, U3(0, 0)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U3(0, U3(0, 0))))),F(0) -> U5^1(U1(not(U3(0, U3(0, 0))))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(U3(0, U3(0, 0)), 0)),F(0) -> U5^1(U3(U3(0, U3(0, 0)), 0)))


----------------------------------------

(110)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))
   F(0) -> U5^1(implies(U3(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U3(0, U3(0, 0)))))
   F(0) -> U5^1(U2(0))
   F(0) -> U5^1(U3(U3(0, U3(0, 0)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(111) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 3 less nodes.
----------------------------------------

(112)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(U1(not(0)), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))
   F(0) -> U5^1(implies(U3(0, U1(1)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(113) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(U1(not(0)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U1(not(0))))),F(0) -> U5^1(U1(not(U1(not(0))))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(U1(not(0)), 0)),F(0) -> U5^1(U3(U1(not(0)), 0)))
   (F(0) -> U5^1(implies(U1(1), 0)),F(0) -> U5^1(implies(U1(1), 0)))


----------------------------------------

(114)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))
   F(0) -> U5^1(implies(U3(0, U1(1)), 0))
   F(0) -> U5^1(U2(0))
   F(0) -> U5^1(implies(U1(1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(115) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(116)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(implies(0, U1(1)), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))
   F(0) -> U5^1(implies(U3(0, U1(1)), 0))
   F(0) -> U5^1(implies(U1(1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(117) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(implies(0, U1(1)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(implies(0, U1(1))))),F(0) -> U5^1(U1(not(implies(0, U1(1))))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(implies(0, U1(1)), 0)),F(0) -> U5^1(U3(implies(0, U1(1)), 0)))
   (F(0) -> U5^1(implies(U1(not(0)), 0)),F(0) -> U5^1(implies(U1(not(0)), 0)))
   (F(0) -> U5^1(implies(U2(U1(1)), 0)),F(0) -> U5^1(implies(U2(U1(1)), 0)))
   (F(0) -> U5^1(implies(U3(0, U1(1)), 0)),F(0) -> U5^1(implies(U3(0, U1(1)), 0)))
   (F(0) -> U5^1(implies(implies(0, 1), 0)),F(0) -> U5^1(implies(implies(0, 1), 0)))


----------------------------------------

(118)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))
   F(0) -> U5^1(implies(U3(0, U1(1)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(U2(0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, 1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(119) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(120)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U1(not(U1(1))))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))
   F(0) -> U5^1(implies(U3(0, U1(1)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, 1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(121) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U1(not(U1(1)))) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(1))),F(0) -> U5^1(U1(not(1))))


----------------------------------------

(122)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(U2(U1(not(0))))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))
   F(0) -> U5^1(implies(U3(0, U1(1)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, 1), 0))
   F(0) -> U5^1(U1(not(1)))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(123) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U1(not(U2(U1(not(0)))))) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U2(U1(1))))),F(0) -> U5^1(U1(not(U2(U1(1))))))


----------------------------------------

(124)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))
   F(0) -> U5^1(implies(U3(0, U1(1)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, 1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U2(U1(1)))))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(125) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U1(not(U1(not(0))))) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U1(1)))),F(0) -> U5^1(U1(not(U1(1)))))


----------------------------------------

(126)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(implies(0, U1(1)))))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))
   F(0) -> U5^1(implies(U3(0, U1(1)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, 1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U2(U1(1)))))
   F(0) -> U5^1(U1(not(U1(1))))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(127) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U1(not(implies(0, U1(1))))) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U1(not(0))))),F(0) -> U5^1(U1(not(U1(not(0))))))
   (F(0) -> U5^1(U1(not(U2(U1(1))))),F(0) -> U5^1(U1(not(U2(U1(1))))))
   (F(0) -> U5^1(U1(not(U3(0, U1(1))))),F(0) -> U5^1(U1(not(U3(0, U1(1))))))
   (F(0) -> U5^1(U1(not(implies(0, 1)))),F(0) -> U5^1(U1(not(implies(0, 1)))))


----------------------------------------

(128)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))
   F(0) -> U5^1(implies(U3(0, U1(1)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, 1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U2(U1(1)))))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(U3(0, U1(1)))))
   F(0) -> U5^1(U1(not(implies(0, 1))))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(129) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(130)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U3(U1(1), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))
   F(0) -> U5^1(implies(U3(0, U1(1)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, 1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U2(U1(1)))))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, 1))))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(131) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U3(U1(1), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U3(1, 0)),F(0) -> U5^1(U3(1, 0)))


----------------------------------------

(132)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(U2(U1(not(0))), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))
   F(0) -> U5^1(implies(U3(0, U1(1)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, 1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U2(U1(1)))))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, 1))))
   F(0) -> U5^1(U3(1, 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(133) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U3(U2(U1(not(0))), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U3(U2(U1(1)), 0)),F(0) -> U5^1(U3(U2(U1(1)), 0)))


----------------------------------------

(134)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))
   F(0) -> U5^1(implies(U3(0, U1(1)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, 1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U2(U1(1)))))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, 1))))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U2(U1(1)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(135) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U3(U1(not(0)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U3(U1(1), 0)),F(0) -> U5^1(U3(U1(1), 0)))


----------------------------------------

(136)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(implies(0, U1(1)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))
   F(0) -> U5^1(implies(U3(0, U1(1)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, 1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U2(U1(1)))))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, 1))))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U2(U1(1)), 0))
   F(0) -> U5^1(U3(U1(1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(137) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U3(implies(0, U1(1)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U3(U1(not(0)), 0)),F(0) -> U5^1(U3(U1(not(0)), 0)))
   (F(0) -> U5^1(U3(U2(U1(1)), 0)),F(0) -> U5^1(U3(U2(U1(1)), 0)))
   (F(0) -> U5^1(U3(U3(0, U1(1)), 0)),F(0) -> U5^1(U3(U3(0, U1(1)), 0)))
   (F(0) -> U5^1(U3(implies(0, 1), 0)),F(0) -> U5^1(U3(implies(0, 1), 0)))


----------------------------------------

(138)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U2(U1(1)), 0))
   F(0) -> U5^1(implies(U3(0, U1(1)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, 1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U2(U1(1)))))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, 1))))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U2(U1(1)), 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U3(0, U1(1)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(139) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(140)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(1, 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U2(U1(1)), 0))
   F(0) -> U5^1(implies(U3(0, U1(1)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, 1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U2(U1(1)))))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, 1))))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U2(U1(1)), 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(141) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(1, 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(1))),F(0) -> U5^1(U1(not(1))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(1, 0)),F(0) -> U5^1(U3(1, 0)))


----------------------------------------

(142)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U2(U1(1)), 0))
   F(0) -> U5^1(implies(U3(0, U1(1)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, 1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U2(U1(1)))))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, 1))))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U2(U1(1)), 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))
   F(0) -> U5^1(U2(0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(143) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(144)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(U2(U1(1)), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U3(0, U1(1)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, 1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U2(U1(1)))))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, 1))))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U2(U1(1)), 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(145) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(U2(U1(1)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U2(U1(1))))),F(0) -> U5^1(U1(not(U2(U1(1))))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(U2(U1(1)), 0)),F(0) -> U5^1(U3(U2(U1(1)), 0)))
   (F(0) -> U5^1(implies(U2(1), 0)),F(0) -> U5^1(implies(U2(1), 0)))


----------------------------------------

(146)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U3(0, U1(1)), 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, 1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U2(U1(1)))))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, 1))))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U2(U1(1)), 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))
   F(0) -> U5^1(U2(0))
   F(0) -> U5^1(implies(U2(1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(147) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(148)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(U3(0, U1(1)), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, 1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U2(U1(1)))))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, 1))))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U2(U1(1)), 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))
   F(0) -> U5^1(implies(U2(1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(149) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(U3(0, U1(1)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U3(0, U1(1))))),F(0) -> U5^1(U1(not(U3(0, U1(1))))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(U3(0, U1(1)), 0)),F(0) -> U5^1(U3(U3(0, U1(1)), 0)))
   (F(0) -> U5^1(implies(U3(0, 1), 0)),F(0) -> U5^1(implies(U3(0, 1), 0)))


----------------------------------------

(150)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, 1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U2(U1(1)))))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, 1))))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U2(U1(1)), 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))
   F(0) -> U5^1(implies(U2(1), 0))
   F(0) -> U5^1(U1(not(U3(0, U1(1)))))
   F(0) -> U5^1(U2(0))
   F(0) -> U5^1(U3(U3(0, U1(1)), 0))
   F(0) -> U5^1(implies(U3(0, 1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(151) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 3 less nodes.
----------------------------------------

(152)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(U1(1), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, 1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U2(U1(1)))))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, 1))))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U2(U1(1)), 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))
   F(0) -> U5^1(implies(U2(1), 0))
   F(0) -> U5^1(implies(U3(0, 1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(153) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(U1(1), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U1(1)))),F(0) -> U5^1(U1(not(U1(1)))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(U1(1), 0)),F(0) -> U5^1(U3(U1(1), 0)))
   (F(0) -> U5^1(implies(1, 0)),F(0) -> U5^1(implies(1, 0)))


----------------------------------------

(154)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(implies(implies(0, 1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U2(U1(1)))))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, 1))))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U2(U1(1)), 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))
   F(0) -> U5^1(implies(U2(1), 0))
   F(0) -> U5^1(implies(U3(0, 1), 0))
   F(0) -> U5^1(U2(0))
   F(0) -> U5^1(implies(1, 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(155) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(156)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(U1(not(0)), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(implies(0, 1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U2(U1(1)))))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, 1))))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U2(U1(1)), 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))
   F(0) -> U5^1(implies(U2(1), 0))
   F(0) -> U5^1(implies(U3(0, 1), 0))
   F(0) -> U5^1(implies(1, 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(157) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(U1(not(0)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U1(not(0))))),F(0) -> U5^1(U1(not(U1(not(0))))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(U1(not(0)), 0)),F(0) -> U5^1(U3(U1(not(0)), 0)))
   (F(0) -> U5^1(implies(U1(1), 0)),F(0) -> U5^1(implies(U1(1), 0)))


----------------------------------------

(158)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(implies(0, 1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U2(U1(1)))))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, 1))))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U2(U1(1)), 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))
   F(0) -> U5^1(implies(U2(1), 0))
   F(0) -> U5^1(implies(U3(0, 1), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(U2(0))
   F(0) -> U5^1(implies(U1(1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(159) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(160)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(implies(0, 1), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U2(U1(1)))))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, 1))))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U2(U1(1)), 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))
   F(0) -> U5^1(implies(U2(1), 0))
   F(0) -> U5^1(implies(U3(0, 1), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(161) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(implies(0, 1), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(implies(0, 1)))),F(0) -> U5^1(U1(not(implies(0, 1)))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(implies(0, 1), 0)),F(0) -> U5^1(U3(implies(0, 1), 0)))
   (F(0) -> U5^1(implies(U1(not(0)), 0)),F(0) -> U5^1(implies(U1(not(0)), 0)))
   (F(0) -> U5^1(implies(U2(1), 0)),F(0) -> U5^1(implies(U2(1), 0)))
   (F(0) -> U5^1(implies(U3(0, 1), 0)),F(0) -> U5^1(implies(U3(0, 1), 0)))


----------------------------------------

(162)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U2(U1(1)))))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, 1))))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U2(U1(1)), 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))
   F(0) -> U5^1(implies(U2(1), 0))
   F(0) -> U5^1(implies(U3(0, 1), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(U2(0))
   F(0) -> U5^1(implies(U1(not(0)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(163) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(164)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U1(not(1)))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(U2(U1(1)))))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, 1))))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U2(U1(1)), 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))
   F(0) -> U5^1(implies(U2(1), 0))
   F(0) -> U5^1(implies(U3(0, 1), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(165) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U1(not(1))) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(0)),F(0) -> U5^1(U1(0)))


----------------------------------------

(166)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(U2(U1(1)))))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, 1))))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U2(U1(1)), 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))
   F(0) -> U5^1(implies(U2(1), 0))
   F(0) -> U5^1(implies(U3(0, 1), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(U1(0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(167) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(168)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U1(not(U2(U1(1)))))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, 1))))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U2(U1(1)), 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))
   F(0) -> U5^1(implies(U2(1), 0))
   F(0) -> U5^1(implies(U3(0, 1), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(169) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U1(not(U2(U1(1))))) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U2(1)))),F(0) -> U5^1(U1(not(U2(1)))))


----------------------------------------

(170)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, 1))))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U2(U1(1)), 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))
   F(0) -> U5^1(implies(U2(1), 0))
   F(0) -> U5^1(implies(U3(0, 1), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(U1(not(U2(1))))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(171) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U1(not(U1(1)))) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(1))),F(0) -> U5^1(U1(not(1))))


----------------------------------------

(172)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(implies(0, 1))))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U2(U1(1)), 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))
   F(0) -> U5^1(implies(U2(1), 0))
   F(0) -> U5^1(implies(U3(0, 1), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(U1(not(U2(1))))
   F(0) -> U5^1(U1(not(1)))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(173) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U1(not(U1(not(0))))) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U1(1)))),F(0) -> U5^1(U1(not(U1(1)))))


----------------------------------------

(174)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(implies(0, 1))))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U2(U1(1)), 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))
   F(0) -> U5^1(implies(U2(1), 0))
   F(0) -> U5^1(implies(U3(0, 1), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(U1(not(U2(1))))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(175) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U1(not(implies(0, 1)))) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U1(not(0))))),F(0) -> U5^1(U1(not(U1(not(0))))))
   (F(0) -> U5^1(U1(not(U2(1)))),F(0) -> U5^1(U1(not(U2(1)))))
   (F(0) -> U5^1(U1(not(U3(0, 1)))),F(0) -> U5^1(U1(not(U3(0, 1)))))


----------------------------------------

(176)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U2(U1(1)), 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))
   F(0) -> U5^1(implies(U2(1), 0))
   F(0) -> U5^1(implies(U3(0, 1), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(U1(not(U2(1))))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U1(not(U3(0, 1))))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(177) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(178)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U3(1, 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(U2(U1(1)), 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))
   F(0) -> U5^1(implies(U2(1), 0))
   F(0) -> U5^1(implies(U3(0, 1), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(U1(not(U2(1))))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(179) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U3(1, 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U4(0)),F(0) -> U5^1(U4(0)))


----------------------------------------

(180)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(U2(U1(1)), 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))
   F(0) -> U5^1(implies(U2(1), 0))
   F(0) -> U5^1(implies(U3(0, 1), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(U1(not(U2(1))))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U4(0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(181) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U3(U2(U1(1)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U3(U2(1), 0)),F(0) -> U5^1(U3(U2(1), 0)))


----------------------------------------

(182)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))
   F(0) -> U5^1(implies(U2(1), 0))
   F(0) -> U5^1(implies(U3(0, 1), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(U1(not(U2(1))))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(U2(1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(183) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U3(U1(1), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U3(1, 0)),F(0) -> U5^1(U3(1, 0)))


----------------------------------------

(184)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(implies(0, 1), 0))
   F(0) -> U5^1(implies(U2(1), 0))
   F(0) -> U5^1(implies(U3(0, 1), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(U1(not(U2(1))))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(U2(1), 0))
   F(0) -> U5^1(U3(1, 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(185) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U3(U1(not(0)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U3(U1(1), 0)),F(0) -> U5^1(U3(U1(1), 0)))


----------------------------------------

(186)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(implies(0, 1), 0))
   F(0) -> U5^1(implies(U2(1), 0))
   F(0) -> U5^1(implies(U3(0, 1), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(U1(not(U2(1))))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(U2(1), 0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(187) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U3(implies(0, 1), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U3(U1(not(0)), 0)),F(0) -> U5^1(U3(U1(not(0)), 0)))
   (F(0) -> U5^1(U3(U2(1), 0)),F(0) -> U5^1(U3(U2(1), 0)))
   (F(0) -> U5^1(U3(U3(0, 1), 0)),F(0) -> U5^1(U3(U3(0, 1), 0)))


----------------------------------------

(188)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U2(1), 0))
   F(0) -> U5^1(implies(U3(0, 1), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(U1(not(U2(1))))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(U2(1), 0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U3(U3(0, 1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(189) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(190)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(U2(1), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U3(0, 1), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(U1(not(U2(1))))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(U2(1), 0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(191) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(U2(1), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U2(1)))),F(0) -> U5^1(U1(not(U2(1)))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(U2(1), 0)),F(0) -> U5^1(U3(U2(1), 0)))
   (F(0) -> U5^1(implies(1, 0)),F(0) -> U5^1(implies(1, 0)))


----------------------------------------

(192)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U3(0, 1), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(U1(not(U2(1))))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(U2(1), 0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U2(0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(193) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(194)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(U3(0, 1), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(U1(not(U2(1))))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(U2(1), 0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(195) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(U3(0, 1), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U3(0, 1)))),F(0) -> U5^1(U1(not(U3(0, 1)))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(U3(0, 1), 0)),F(0) -> U5^1(U3(U3(0, 1), 0)))


----------------------------------------

(196)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(U1(not(U2(1))))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(U2(1), 0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U1(not(U3(0, 1))))
   F(0) -> U5^1(U2(0))
   F(0) -> U5^1(U3(U3(0, 1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(197) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 3 less nodes.
----------------------------------------

(198)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(1, 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(U1(not(U2(1))))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(U2(1), 0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(199) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(1, 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(1))),F(0) -> U5^1(U1(not(1))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(1, 0)),F(0) -> U5^1(U3(1, 0)))


----------------------------------------

(200)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(U1(not(U2(1))))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(U2(1), 0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U2(0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(201) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(202)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(U1(1), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(U1(not(U2(1))))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(U2(1), 0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(203) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(U1(1), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U1(1)))),F(0) -> U5^1(U1(not(U1(1)))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(U1(1), 0)),F(0) -> U5^1(U3(U1(1), 0)))
   (F(0) -> U5^1(implies(1, 0)),F(0) -> U5^1(implies(1, 0)))


----------------------------------------

(204)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U1(not(0)), 0))
   F(0) -> U5^1(U1(not(U2(1))))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(U2(1), 0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(U2(0))
   F(0) -> U5^1(implies(1, 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(205) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(206)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(U1(not(0)), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(U2(1))))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(U2(1), 0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(implies(1, 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(207) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(U1(not(0)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U1(not(0))))),F(0) -> U5^1(U1(not(U1(not(0))))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(U1(not(0)), 0)),F(0) -> U5^1(U3(U1(not(0)), 0)))
   (F(0) -> U5^1(implies(U1(1), 0)),F(0) -> U5^1(implies(U1(1), 0)))


----------------------------------------

(208)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(U2(1))))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(U2(1), 0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(U2(0))
   F(0) -> U5^1(implies(U1(1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(209) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(210)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U1(not(U2(1))))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(U2(1), 0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(211) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U1(not(U2(1)))) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(1))),F(0) -> U5^1(U1(not(1))))


----------------------------------------

(212)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(U2(1), 0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(213) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U1(not(1))) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(0)),F(0) -> U5^1(U1(0)))


----------------------------------------

(214)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(U2(1), 0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(U1(0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(215) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(216)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U1(not(U1(1))))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(U2(1), 0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(217) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U1(not(U1(1)))) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(1))),F(0) -> U5^1(U1(not(1))))


----------------------------------------

(218)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(U1(not(0)))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(U2(1), 0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(U1(not(1)))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(219) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U1(not(U1(not(0))))) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U1(1)))),F(0) -> U5^1(U1(not(U1(1)))))


----------------------------------------

(220)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(U2(1), 0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(221) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U4(0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(0),F(0) -> U5^1(0))


----------------------------------------

(222)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(U2(1), 0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(0)

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(223) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(224)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U3(U2(1), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(225) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U3(U2(1), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U3(1, 0)),F(0) -> U5^1(U3(1, 0)))


----------------------------------------

(226)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(227) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U3(1, 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U4(0)),F(0) -> U5^1(U4(0)))


----------------------------------------

(228)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U4(0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(229) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U3(U1(1), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U3(1, 0)),F(0) -> U5^1(U3(1, 0)))


----------------------------------------

(230)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(U1(not(0)), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(1, 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(231) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U3(U1(not(0)), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U3(U1(1), 0)),F(0) -> U5^1(U3(U1(1), 0)))


----------------------------------------

(232)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(233) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(1, 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(1))),F(0) -> U5^1(U1(not(1))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(1, 0)),F(0) -> U5^1(U3(1, 0)))


----------------------------------------

(234)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(U1(1), 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U2(0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(235) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(236)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(implies(U1(1), 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(237) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(U1(1), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(U1(1)))),F(0) -> U5^1(U1(not(U1(1)))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(U1(1), 0)),F(0) -> U5^1(U3(U1(1), 0)))
   (F(0) -> U5^1(implies(1, 0)),F(0) -> U5^1(implies(1, 0)))


----------------------------------------

(238)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(U2(0))
   F(0) -> U5^1(implies(1, 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(239) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(240)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U1(not(1)))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(implies(1, 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(241) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U1(not(1))) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(0)),F(0) -> U5^1(U1(0)))


----------------------------------------

(242)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(U1(1))))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(U1(0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(243) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(244)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U1(not(U1(1))))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(implies(1, 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(245) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U1(not(U1(1)))) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(1))),F(0) -> U5^1(U1(not(1))))


----------------------------------------

(246)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(U1(not(1)))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(247) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U4(0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(0),F(0) -> U5^1(0))


----------------------------------------

(248)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(0)

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(249) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(250)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U3(1, 0))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(U1(not(1)))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(251) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U3(1, 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U4(0)),F(0) -> U5^1(U4(0)))


----------------------------------------

(252)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U3(U1(1), 0))
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U4(0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(253) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(U3(U1(1), 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U3(1, 0)),F(0) -> U5^1(U3(1, 0)))


----------------------------------------

(254)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(implies(1, 0))
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(1, 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(255) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F(0) -> U5^1(implies(1, 0)) at position [0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(not(1))),F(0) -> U5^1(U1(not(1))))
   (F(0) -> U5^1(U2(0)),F(0) -> U5^1(U2(0)))
   (F(0) -> U5^1(U3(1, 0)),F(0) -> U5^1(U3(1, 0)))


----------------------------------------

(256)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(1)))
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(1, 0))
   F(0) -> U5^1(U2(0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(257) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(258)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U1(not(1)))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(1, 0))

The TRS R consists of the following rules:

   implies(x, y) -> U1(not(x))
   implies(x, y) -> U2(y)
   implies(x, y) -> U3(x, y)
   U3(1, y) -> U4(y)
   U4(0) -> 0
   U2(1) -> 1
   not(1) -> 0
   not(0) -> 1
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(259) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(260)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U1(not(1)))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(1, 0))

The TRS R consists of the following rules:

   U3(1, y) -> U4(y)
   U4(0) -> 0
   not(1) -> 0
   U1(1) -> 1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(261) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [LPAR04] to enlarge Q to all left-hand sides of R.
----------------------------------------

(262)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(0) -> U5^1(U1(not(1)))
   U5^1(1) -> F(0)
   F(0) -> U5^1(U4(0))
   F(0) -> U5^1(U3(1, 0))

The TRS R consists of the following rules:

   U3(1, y) -> U4(y)
   U4(0) -> 0
   not(1) -> 0
   U1(1) -> 1

The set Q consists of the following terms:

   U3(1, x0)
   U4(0)
   not(1)
   U1(1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(263) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 2 less nodes.
----------------------------------------

(264)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(1)))

The TRS R consists of the following rules:

   U3(1, y) -> U4(y)
   U4(0) -> 0
   not(1) -> 0
   U1(1) -> 1

The set Q consists of the following terms:

   U3(1, x0)
   U4(0)
   not(1)
   U1(1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(265) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(266)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(1)))

The TRS R consists of the following rules:

   not(1) -> 0
   U1(1) -> 1

The set Q consists of the following terms:

   U3(1, x0)
   U4(0)
   not(1)
   U1(1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(267) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   U3(1, x0)
   U4(0)


----------------------------------------

(268)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(not(1)))

The TRS R consists of the following rules:

   not(1) -> 0
   U1(1) -> 1

The set Q consists of the following terms:

   not(1)
   U1(1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(269) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(0) -> U5^1(U1(not(1))) at position [0,0] we obtained the following new rules [LPAR04]:

   (F(0) -> U5^1(U1(0)),F(0) -> U5^1(U1(0)))


----------------------------------------

(270)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5^1(1) -> F(0)
   F(0) -> U5^1(U1(0))

The TRS R consists of the following rules:

   not(1) -> 0
   U1(1) -> 1

The set Q consists of the following terms:

   not(1)
   U1(1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(271) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 2 less nodes.
----------------------------------------

(272)
TRUE
