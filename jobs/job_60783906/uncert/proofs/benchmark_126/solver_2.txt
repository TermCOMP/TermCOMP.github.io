MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/1DFu8.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Quasi decreasingness of the given CTRS could not be shown:

(0) CTRS
(1) CTRSToQTRSProof [SOUND, 0 ms]
(2) QTRS
(3) AAECC Innermost [EQUIVALENT, 0 ms]
(4) QTRS
(5) DependencyPairsProof [EQUIVALENT, 0 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) QDP
(9) UsableRulesProof [EQUIVALENT, 0 ms]
(10) QDP
(11) QReductionProof [EQUIVALENT, 0 ms]
(12) QDP
(13) TransformationProof [EQUIVALENT, 0 ms]
(14) QDP
(15) UsableRulesProof [EQUIVALENT, 0 ms]
(16) QDP
(17) QReductionProof [EQUIVALENT, 0 ms]
(18) QDP
(19) TransformationProof [EQUIVALENT, 0 ms]
(20) QDP
(21) UsableRulesProof [EQUIVALENT, 0 ms]
(22) QDP
(23) QReductionProof [EQUIVALENT, 0 ms]
(24) QDP
(25) TransformationProof [EQUIVALENT, 0 ms]
(26) QDP
(27) UsableRulesProof [EQUIVALENT, 0 ms]
(28) QDP
(29) QReductionProof [EQUIVALENT, 0 ms]
(30) QDP
(31) NonTerminationLoopProof [COMPLETE, 0 ms]
(32) NO


----------------------------------------

(0)
Obligation:
Conditional term rewrite system:
The TRS R consists of the following rules:

   b -> g(d)
   f(d) -> f(a)

The conditional TRS C consists of the following conditional rules:

   a -> x <= b -> g(x)


----------------------------------------

(1) CTRSToQTRSProof (SOUND)
The conditional rules have been transormed into unconditional rules according to [CTRS,AAECCNOC].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a -> U1(b)
   U1(g(x)) -> x
   b -> g(d)
   f(d) -> f(a)

Q is empty.

----------------------------------------

(3) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is 
   U1(g(x)) -> x
   b -> g(d)
   a -> U1(b)

The TRS R 2 is 
   f(d) -> f(a)

The signature Sigma is {f_1}
----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   a -> U1(b)
   U1(g(x)) -> x
   b -> g(d)
   f(d) -> f(a)

The set Q consists of the following terms:

   a
   U1(g(x0))
   b
   f(d)


----------------------------------------

(5) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   A -> U1^1(b)
   A -> B
   F(d) -> F(a)
   F(d) -> A

The TRS R consists of the following rules:

   a -> U1(b)
   U1(g(x)) -> x
   b -> g(d)
   f(d) -> f(a)

The set Q consists of the following terms:

   a
   U1(g(x0))
   b
   f(d)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 3 less nodes.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(d) -> F(a)

The TRS R consists of the following rules:

   a -> U1(b)
   U1(g(x)) -> x
   b -> g(d)
   f(d) -> f(a)

The set Q consists of the following terms:

   a
   U1(g(x0))
   b
   f(d)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(d) -> F(a)

The TRS R consists of the following rules:

   a -> U1(b)
   b -> g(d)
   U1(g(x)) -> x

The set Q consists of the following terms:

   a
   U1(g(x0))
   b
   f(d)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(d)


----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(d) -> F(a)

The TRS R consists of the following rules:

   a -> U1(b)
   b -> g(d)
   U1(g(x)) -> x

The set Q consists of the following terms:

   a
   U1(g(x0))
   b

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(d) -> F(a) at position [0] we obtained the following new rules [LPAR04]:

   (F(d) -> F(U1(b)),F(d) -> F(U1(b)))


----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(d) -> F(U1(b))

The TRS R consists of the following rules:

   a -> U1(b)
   b -> g(d)
   U1(g(x)) -> x

The set Q consists of the following terms:

   a
   U1(g(x0))
   b

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(d) -> F(U1(b))

The TRS R consists of the following rules:

   b -> g(d)
   U1(g(x)) -> x

The set Q consists of the following terms:

   a
   U1(g(x0))
   b

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   a


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(d) -> F(U1(b))

The TRS R consists of the following rules:

   b -> g(d)
   U1(g(x)) -> x

The set Q consists of the following terms:

   U1(g(x0))
   b

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(d) -> F(U1(b)) at position [0,0] we obtained the following new rules [LPAR04]:

   (F(d) -> F(U1(g(d))),F(d) -> F(U1(g(d))))


----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(d) -> F(U1(g(d)))

The TRS R consists of the following rules:

   b -> g(d)
   U1(g(x)) -> x

The set Q consists of the following terms:

   U1(g(x0))
   b

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(d) -> F(U1(g(d)))

The TRS R consists of the following rules:

   U1(g(x)) -> x

The set Q consists of the following terms:

   U1(g(x0))
   b

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   b


----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(d) -> F(U1(g(d)))

The TRS R consists of the following rules:

   U1(g(x)) -> x

The set Q consists of the following terms:

   U1(g(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(25) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule F(d) -> F(U1(g(d))) at position [0] we obtained the following new rules [LPAR04]:

   (F(d) -> F(d),F(d) -> F(d))


----------------------------------------

(26)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(d) -> F(d)

The TRS R consists of the following rules:

   U1(g(x)) -> x

The set Q consists of the following terms:

   U1(g(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(27) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(28)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(d) -> F(d)

R is empty.
The set Q consists of the following terms:

   U1(g(x0))

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(29) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   U1(g(x0))


----------------------------------------

(30)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(d) -> F(d)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(31) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = F(d) evaluates to  t =F(d)

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from F(d) to F(d).




----------------------------------------

(32)
NO
