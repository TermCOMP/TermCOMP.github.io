MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/v8oqO.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Quasi decreasingness of the given CTRS could not be shown:

(0) CTRS
(1) CTRSToQTRSProof [SOUND, 0 ms]
(2) QTRS
(3) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(4) QTRS
(5) DependencyPairsProof [EQUIVALENT, 0 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) QDP
(9) UsableRulesProof [EQUIVALENT, 0 ms]
(10) QDP
(11) QReductionProof [EQUIVALENT, 0 ms]
(12) QDP
(13) TransformationProof [EQUIVALENT, 0 ms]
(14) QDP
(15) NonTerminationLoopProof [COMPLETE, 0 ms]
(16) NO


----------------------------------------

(0)
Obligation:
Conditional term rewrite system:
The TRS R consists of the following rules:

   g(a) -> c(b)
   b -> f(a)

The conditional TRS C consists of the following conditional rules:

   f(x) -> x <= g(x) -> c(y)


----------------------------------------

(1) CTRSToQTRSProof (SOUND)
The conditional rules have been transormed into unconditional rules according to [CTRS,AAECCNOC].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x) -> U1(g(x), x)
   U1(c(y), x) -> x
   g(a) -> c(b)
   b -> f(a)

Q is empty.

----------------------------------------

(3) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x) -> U1(g(x), x)
   U1(c(y), x) -> x
   g(a) -> c(b)
   b -> f(a)

The set Q consists of the following terms:

   f(x0)
   U1(c(x0), x1)
   g(a)
   b


----------------------------------------

(5) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x) -> U1^1(g(x), x)
   F(x) -> G(x)
   G(a) -> B
   B -> F(a)

The TRS R consists of the following rules:

   f(x) -> U1(g(x), x)
   U1(c(y), x) -> x
   g(a) -> c(b)
   b -> f(a)

The set Q consists of the following terms:

   f(x0)
   U1(c(x0), x1)
   g(a)
   b

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x) -> G(x)
   G(a) -> B
   B -> F(a)

The TRS R consists of the following rules:

   f(x) -> U1(g(x), x)
   U1(c(y), x) -> x
   g(a) -> c(b)
   b -> f(a)

The set Q consists of the following terms:

   f(x0)
   U1(c(x0), x1)
   g(a)
   b

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x) -> G(x)
   G(a) -> B
   B -> F(a)

R is empty.
The set Q consists of the following terms:

   f(x0)
   U1(c(x0), x1)
   g(a)
   b

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(x0)
   U1(c(x0), x1)
   g(a)
   b


----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x) -> G(x)
   G(a) -> B
   B -> F(a)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule F(x) -> G(x) we obtained the following new rules [LPAR04]:

   (F(a) -> G(a),F(a) -> G(a))


----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(a) -> B
   B -> F(a)
   F(a) -> G(a)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by narrowing to the left:

s = B evaluates to  t =B

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

B -> F(a)
with rule B -> F(a) at position [] and matcher [ ]

F(a) -> G(a)
with rule F(a) -> G(a) at position [] and matcher [ ]

G(a) -> B
with rule G(a) -> B

Now applying the matcher to the start term leads to a term which is equal to the last term in the rewriting sequence


All these steps are and every following step will be a correct step w.r.t to Q.




----------------------------------------

(16)
NO
