YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/UW4Yd.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Quasi decreasingness of the given CTRS could be proven:

(0) CTRS
(1) CTRSToQTRSProof [SOUND, 0 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 31 ms]
(4) QTRS
(5) QTRSRRRProof [EQUIVALENT, 0 ms]
(6) QTRS
(7) QTRSRRRProof [EQUIVALENT, 0 ms]
(8) QTRS
(9) RisEmptyProof [EQUIVALENT, 0 ms]
(10) YES


----------------------------------------

(0)
Obligation:
Conditional term rewrite system:
The TRS R consists of the following rules:

   size(empty) -> 0
   size(push(x, y)) -> s(size(x))
   m -> s(s(s(s(0))))
   pop(empty) -> empty
   top(empty) -> eentry
   le(x, 0) -> false
   le(0, s(x)) -> true
   le(s(x), s(y)) -> le(x, y)

The conditional TRS C consists of the following conditional rules:

   pop(push(x, y)) -> x <= le(size(x), m) -> true
   top(push(x, y)) -> y <= le(size(x), m) -> true


----------------------------------------

(1) CTRSToQTRSProof (SOUND)
The conditional rules have been transormed into unconditional rules according to [CTRS,AAECCNOC].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   pop(push(x, y)) -> U1(le(size(x), m), x)
   U1(true, x) -> x
   top(push(x, y)) -> U2(le(size(x), m), y)
   U2(true, y) -> y
   size(empty) -> 0
   size(push(x, y)) -> s(size(x))
   m -> s(s(s(s(0))))
   pop(empty) -> empty
   top(empty) -> eentry
   le(x, 0) -> false
   le(0, s(x)) -> true
   le(s(x), s(y)) -> le(x, y)

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 1
   POL(U1(x_1, x_2)) = x_1 + x_2
   POL(U2(x_1, x_2)) = x_1 + 2*x_2
   POL(eentry) = 1
   POL(empty) = 2
   POL(false) = 0
   POL(le(x_1, x_2)) = 2*x_1 + x_2
   POL(m) = 1
   POL(pop(x_1)) = 1 + 2*x_1
   POL(push(x_1, x_2)) = 2*x_1 + x_2
   POL(s(x_1)) = x_1
   POL(size(x_1)) = x_1
   POL(top(x_1)) = 2 + 2*x_1
   POL(true) = 1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   U1(true, x) -> x
   top(push(x, y)) -> U2(le(size(x), m), y)
   U2(true, y) -> y
   size(empty) -> 0
   pop(empty) -> empty
   top(empty) -> eentry
   le(x, 0) -> false
   le(0, s(x)) -> true




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   pop(push(x, y)) -> U1(le(size(x), m), x)
   size(push(x, y)) -> s(size(x))
   m -> s(s(s(s(0))))
   le(s(x), s(y)) -> le(x, y)

Q is empty.

----------------------------------------

(5) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(U1(x_1, x_2)) = x_1 + 2*x_2
   POL(le(x_1, x_2)) = 2*x_1 + x_2
   POL(m) = 1
   POL(pop(x_1)) = 2 + 2*x_1
   POL(push(x_1, x_2)) = 1 + 2*x_1 + x_2
   POL(s(x_1)) = x_1
   POL(size(x_1)) = 1 + x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   pop(push(x, y)) -> U1(le(size(x), m), x)
   size(push(x, y)) -> s(size(x))
   m -> s(s(s(s(0))))




----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   le(s(x), s(y)) -> le(x, y)

Q is empty.

----------------------------------------

(7) QTRSRRRProof (EQUIVALENT)
Used ordering:
Knuth-Bendix order [KBO] with precedence:s_1 > le_2

and weight map:

   s_1=0
   le_2=0

The variable weight is 1With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   le(s(x), s(y)) -> le(x, y)




----------------------------------------

(8)
Obligation:
Q restricted rewrite system:
R is empty.
Q is empty.

----------------------------------------

(9) RisEmptyProof (EQUIVALENT)
The TRS R is empty. Hence, termination is trivially proven.
----------------------------------------

(10)
YES
