MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/8CuMu.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Quasi decreasingness of the given CTRS could not be shown:

(0) CTRS
(1) CTRSToQTRSProof [SOUND, 0 ms]
(2) QTRS
(3) AAECC Innermost [EQUIVALENT, 0 ms]
(4) QTRS
(5) DependencyPairsProof [EQUIVALENT, 0 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) QDP
(9) UsableRulesProof [EQUIVALENT, 0 ms]
(10) QDP
(11) QReductionProof [EQUIVALENT, 0 ms]
(12) QDP
(13) TransformationProof [EQUIVALENT, 0 ms]
(14) QDP
(15) TransformationProof [EQUIVALENT, 0 ms]
(16) QDP
(17) UsableRulesProof [EQUIVALENT, 0 ms]
(18) QDP
(19) QReductionProof [EQUIVALENT, 0 ms]
(20) QDP
(21) TransformationProof [EQUIVALENT, 0 ms]
(22) QDP
(23) QReductionProof [EQUIVALENT, 0 ms]
(24) QDP
(25) NonTerminationLoopProof [COMPLETE, 0 ms]
(26) NO


----------------------------------------

(0)
Obligation:
Conditional term rewrite system:
The TRS R consists of the following rules:

   g(x, x) -> g(f(a), f(b))

The conditional TRS C consists of the following conditional rules:

   f(x) -> c <= a -> b


----------------------------------------

(1) CTRSToQTRSProof (SOUND)
The conditional rules have been transormed into unconditional rules according to [CTRS,AAECCNOC].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x) -> U1(a)
   U1(b) -> c
   g(x, x) -> g(f(a), f(b))

Q is empty.

----------------------------------------

(3) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is 
   f(x) -> U1(a)
   U1(b) -> c

The TRS R 2 is 
   g(x, x) -> g(f(a), f(b))

The signature Sigma is {g_2}
----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x) -> U1(a)
   U1(b) -> c
   g(x, x) -> g(f(a), f(b))

The set Q consists of the following terms:

   f(x0)
   U1(b)
   g(x0, x0)


----------------------------------------

(5) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F(x) -> U1^1(a)
   G(x, x) -> G(f(a), f(b))
   G(x, x) -> F(a)
   G(x, x) -> F(b)

The TRS R consists of the following rules:

   f(x) -> U1(a)
   U1(b) -> c
   g(x, x) -> g(f(a), f(b))

The set Q consists of the following terms:

   f(x0)
   U1(b)
   g(x0, x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 3 less nodes.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(x, x) -> G(f(a), f(b))

The TRS R consists of the following rules:

   f(x) -> U1(a)
   U1(b) -> c
   g(x, x) -> g(f(a), f(b))

The set Q consists of the following terms:

   f(x0)
   U1(b)
   g(x0, x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(x, x) -> G(f(a), f(b))

The TRS R consists of the following rules:

   f(x) -> U1(a)

The set Q consists of the following terms:

   f(x0)
   U1(b)
   g(x0, x0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   g(x0, x0)


----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(x, x) -> G(f(a), f(b))

The TRS R consists of the following rules:

   f(x) -> U1(a)

The set Q consists of the following terms:

   f(x0)
   U1(b)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule G(x, x) -> G(f(a), f(b)) at position [0] we obtained the following new rules [LPAR04]:

   (G(x, x) -> G(U1(a), f(b)),G(x, x) -> G(U1(a), f(b)))


----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(x, x) -> G(U1(a), f(b))

The TRS R consists of the following rules:

   f(x) -> U1(a)

The set Q consists of the following terms:

   f(x0)
   U1(b)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule G(x, x) -> G(U1(a), f(b)) at position [1] we obtained the following new rules [LPAR04]:

   (G(x, x) -> G(U1(a), U1(a)),G(x, x) -> G(U1(a), U1(a)))


----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(x, x) -> G(U1(a), U1(a))

The TRS R consists of the following rules:

   f(x) -> U1(a)

The set Q consists of the following terms:

   f(x0)
   U1(b)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(x, x) -> G(U1(a), U1(a))

R is empty.
The set Q consists of the following terms:

   f(x0)
   U1(b)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f(x0)


----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(x, x) -> G(U1(a), U1(a))

R is empty.
The set Q consists of the following terms:

   U1(b)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule G(x, x) -> G(U1(a), U1(a)) we obtained the following new rules [LPAR04]:

   (G(U1(a), U1(a)) -> G(U1(a), U1(a)),G(U1(a), U1(a)) -> G(U1(a), U1(a)))


----------------------------------------

(22)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(U1(a), U1(a)) -> G(U1(a), U1(a))

R is empty.
The set Q consists of the following terms:

   U1(b)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(23) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as they contain symbols which do neither occur in P nor in R.[THIEMANN].

   U1(b)


----------------------------------------

(24)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   G(U1(a), U1(a)) -> G(U1(a), U1(a))

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(25) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = G(U1(a), U1(a)) evaluates to  t =G(U1(a), U1(a))

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from G(U1(a), U1(a)) to G(U1(a), U1(a)).




----------------------------------------

(26)
NO
