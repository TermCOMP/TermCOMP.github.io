MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/y1BAg.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Quasi decreasingness of the given CTRS could not be shown:

(0) CTRS
(1) CTRSToQTRSProof [SOUND, 0 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 28 ms]
(4) QTRS
(5) QTRSRRRProof [EQUIVALENT, 0 ms]
(6) QTRS
(7) AAECC Innermost [EQUIVALENT, 0 ms]
(8) QTRS
(9) DependencyPairsProof [EQUIVALENT, 0 ms]
(10) QDP
(11) UsableRulesProof [EQUIVALENT, 0 ms]
(12) QDP
(13) QReductionProof [EQUIVALENT, 0 ms]
(14) QDP
(15) NonTerminationLoopProof [COMPLETE, 0 ms]
(16) NO


----------------------------------------

(0)
Obligation:
Conditional term rewrite system:
The TRS R consists of the following rules:

   g(s(x)) -> x
   h(s(x)) -> x
   b -> b

The conditional TRS C consists of the following conditional rules:

   f(x, y) -> g(x) <= c(g(x)) -> c(a)
   f(x, y) -> h(x) <= c(h(x)) -> c(a)


----------------------------------------

(1) CTRSToQTRSProof (SOUND)
The conditional rules have been transormed into unconditional rules according to [CTRS,AAECCNOC].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x, y) -> U1(c(g(x)), x)
   U1(c(a), x) -> g(x)
   f(x, y) -> U2(c(h(x)), x)
   U2(c(a), x) -> h(x)
   g(s(x)) -> x
   h(s(x)) -> x
   b -> b

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(U1(x_1, x_2)) = x_1 + x_2
   POL(U2(x_1, x_2)) = x_1 + x_2
   POL(a) = 0
   POL(b) = 0
   POL(c(x_1)) = x_1
   POL(f(x_1, x_2)) = 1 + 2*x_1 + x_2
   POL(g(x_1)) = x_1
   POL(h(x_1)) = x_1
   POL(s(x_1)) = 2 + x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   f(x, y) -> U1(c(g(x)), x)
   f(x, y) -> U2(c(h(x)), x)
   g(s(x)) -> x
   h(s(x)) -> x




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   U1(c(a), x) -> g(x)
   U2(c(a), x) -> h(x)
   b -> b

Q is empty.

----------------------------------------

(5) QTRSRRRProof (EQUIVALENT)
Used ordering:
Knuth-Bendix order [KBO] with precedence:b > U2_2 > h_1 > U1_2 > g_1 > a > c_1

and weight map:

   a=1
   b=1
   c_1=1
   g_1=2
   h_1=2
   U1_2=0
   U2_2=0

The variable weight is 1With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   U1(c(a), x) -> g(x)
   U2(c(a), x) -> h(x)




----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b -> b

Q is empty.

----------------------------------------

(7) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is none

The TRS R 2 is 
   b -> b

The signature Sigma is {b}
----------------------------------------

(8)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b -> b

The set Q consists of the following terms:

   b


----------------------------------------

(9) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B -> B

The TRS R consists of the following rules:

   b -> b

The set Q consists of the following terms:

   b

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B -> B

R is empty.
The set Q consists of the following terms:

   b

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   b


----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B -> B

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = B evaluates to  t =B

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from B to B.




----------------------------------------

(16)
NO
