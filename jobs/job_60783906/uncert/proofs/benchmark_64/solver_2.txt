YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/nkjfm.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Quasi decreasingness of the given CTRS could be proven:

(0) CTRS
(1) CTRSToQTRSProof [SOUND, 0 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 31 ms]
(4) QTRS
(5) DependencyPairsProof [EQUIVALENT, 0 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) AND
    (9) QDP
        (10) UsableRulesProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (13) YES
    (14) QDP
        (15) MRRProof [EQUIVALENT, 0 ms]
        (16) QDP
        (17) QDPOrderProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) DependencyGraphProof [EQUIVALENT, 0 ms]
        (20) TRUE


----------------------------------------

(0)
Obligation:
Conditional term rewrite system:
The TRS R consists of the following rules:

   cons(x, cons(x, rest)) -> cons(x, rest)
   orient(s(x), 0) -> pair(0, s(x))

The conditional TRS C consists of the following conditional rules:

   cons(x, cons(y, rest)) -> cons(z1, cons(z2, rest)) <= orient(x, y) -> pair(z1, z2)
   orient(s(x), s(y)) -> pair(s(z1), s(z2)) <= orient(x, y) -> pair(z1, z2)


----------------------------------------

(1) CTRSToQTRSProof (SOUND)
The conditional rules have been transormed into unconditional rules according to [CTRS,AAECCNOC].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   cons(x, cons(y, rest)) -> U1(orient(x, y), rest)
   U1(pair(z1, z2), rest) -> cons(z1, cons(z2, rest))
   orient(s(x), s(y)) -> U2(orient(x, y))
   U2(pair(z1, z2)) -> pair(s(z1), s(z2))
   cons(x, cons(x, rest)) -> cons(x, rest)
   orient(s(x), 0) -> pair(0, s(x))

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(U1(x_1, x_2)) = 2 + x_1 + x_2
   POL(U2(x_1)) = x_1
   POL(cons(x_1, x_2)) = 1 + x_1 + x_2
   POL(orient(x_1, x_2)) = x_1 + x_2
   POL(pair(x_1, x_2)) = 2*x_1 + x_2
   POL(s(x_1)) = x_1
With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   cons(x, cons(x, rest)) -> cons(x, rest)




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   cons(x, cons(y, rest)) -> U1(orient(x, y), rest)
   U1(pair(z1, z2), rest) -> cons(z1, cons(z2, rest))
   orient(s(x), s(y)) -> U2(orient(x, y))
   U2(pair(z1, z2)) -> pair(s(z1), s(z2))
   orient(s(x), 0) -> pair(0, s(x))

Q is empty.

----------------------------------------

(5) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   CONS(x, cons(y, rest)) -> U1^1(orient(x, y), rest)
   CONS(x, cons(y, rest)) -> ORIENT(x, y)
   U1^1(pair(z1, z2), rest) -> CONS(z1, cons(z2, rest))
   U1^1(pair(z1, z2), rest) -> CONS(z2, rest)
   ORIENT(s(x), s(y)) -> U2^1(orient(x, y))
   ORIENT(s(x), s(y)) -> ORIENT(x, y)

The TRS R consists of the following rules:

   cons(x, cons(y, rest)) -> U1(orient(x, y), rest)
   U1(pair(z1, z2), rest) -> cons(z1, cons(z2, rest))
   orient(s(x), s(y)) -> U2(orient(x, y))
   U2(pair(z1, z2)) -> pair(s(z1), s(z2))
   orient(s(x), 0) -> pair(0, s(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 2 less nodes.
----------------------------------------

(8)
Complex Obligation (AND)

----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ORIENT(s(x), s(y)) -> ORIENT(x, y)

The TRS R consists of the following rules:

   cons(x, cons(y, rest)) -> U1(orient(x, y), rest)
   U1(pair(z1, z2), rest) -> cons(z1, cons(z2, rest))
   orient(s(x), s(y)) -> U2(orient(x, y))
   U2(pair(z1, z2)) -> pair(s(z1), s(z2))
   orient(s(x), 0) -> pair(0, s(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   ORIENT(s(x), s(y)) -> ORIENT(x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*ORIENT(s(x), s(y)) -> ORIENT(x, y)
The graph contains the following edges 1 > 1, 2 > 2


----------------------------------------

(13)
YES

----------------------------------------

(14)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U1^1(pair(z1, z2), rest) -> CONS(z1, cons(z2, rest))
   CONS(x, cons(y, rest)) -> U1^1(orient(x, y), rest)
   U1^1(pair(z1, z2), rest) -> CONS(z2, rest)

The TRS R consists of the following rules:

   cons(x, cons(y, rest)) -> U1(orient(x, y), rest)
   U1(pair(z1, z2), rest) -> cons(z1, cons(z2, rest))
   orient(s(x), s(y)) -> U2(orient(x, y))
   U2(pair(z1, z2)) -> pair(s(z1), s(z2))
   orient(s(x), 0) -> pair(0, s(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(15) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   U1^1(pair(z1, z2), rest) -> CONS(z2, rest)


Used ordering: Polynomial interpretation [POLO]:

   POL(0) = 0
   POL(CONS(x_1, x_2)) = 1 + x_1 + x_2
   POL(U1(x_1, x_2)) = 2 + x_1 + x_2
   POL(U1^1(x_1, x_2)) = 2 + x_1 + x_2
   POL(U2(x_1)) = 2*x_1
   POL(cons(x_1, x_2)) = 1 + x_1 + x_2
   POL(orient(x_1, x_2)) = x_1 + x_2
   POL(pair(x_1, x_2)) = 2*x_1 + x_2
   POL(s(x_1)) = 2*x_1


----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U1^1(pair(z1, z2), rest) -> CONS(z1, cons(z2, rest))
   CONS(x, cons(y, rest)) -> U1^1(orient(x, y), rest)

The TRS R consists of the following rules:

   cons(x, cons(y, rest)) -> U1(orient(x, y), rest)
   U1(pair(z1, z2), rest) -> cons(z1, cons(z2, rest))
   orient(s(x), s(y)) -> U2(orient(x, y))
   U2(pair(z1, z2)) -> pair(s(z1), s(z2))
   orient(s(x), 0) -> pair(0, s(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   CONS(x, cons(y, rest)) -> U1^1(orient(x, y), rest)
The remaining pairs can at least be oriented weakly.
Used ordering:  Polynomial Order [NEGPOLO,POLO] with Interpretation:

POL( CONS_2(x_1, x_2) ) = 2x_1 + 2x_2 + 2
POL( U1_2(x_1, x_2) ) = 2
POL( pair_2(x_1, x_2) ) = 2x_1 + 2
POL( cons_2(x_1, x_2) ) = 2
POL( orient_2(x_1, x_2) ) = x_1 + 1
POL( U1^1_2(x_1, x_2) ) = 2x_1 + 2
POL( s_1(x_1) ) = 2x_1 + 1
POL( U2_1(x_1) ) = 2x_1
POL( 0 ) = 0

The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   U1(pair(z1, z2), rest) -> cons(z1, cons(z2, rest))
   cons(x, cons(y, rest)) -> U1(orient(x, y), rest)
   orient(s(x), s(y)) -> U2(orient(x, y))
   orient(s(x), 0) -> pair(0, s(x))
   U2(pair(z1, z2)) -> pair(s(z1), s(z2))


----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U1^1(pair(z1, z2), rest) -> CONS(z1, cons(z2, rest))

The TRS R consists of the following rules:

   cons(x, cons(y, rest)) -> U1(orient(x, y), rest)
   U1(pair(z1, z2), rest) -> cons(z1, cons(z2, rest))
   orient(s(x), s(y)) -> U2(orient(x, y))
   U2(pair(z1, z2)) -> pair(s(z1), s(z2))
   orient(s(x), 0) -> pair(0, s(x))

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 0 SCCs with 1 less node.
----------------------------------------

(20)
TRUE
