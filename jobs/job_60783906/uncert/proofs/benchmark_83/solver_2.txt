MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/p8Coa.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Quasi decreasingness of the given CTRS could not be shown:

(0) CTRS
(1) CTRSToQTRSProof [SOUND, 0 ms]
(2) QTRS
(3) QTRSRRRProof [EQUIVALENT, 12 ms]
(4) QTRS
(5) AAECC Innermost [EQUIVALENT, 0 ms]
(6) QTRS
(7) DependencyPairsProof [EQUIVALENT, 0 ms]
(8) QDP
(9) UsableRulesProof [EQUIVALENT, 0 ms]
(10) QDP
(11) QReductionProof [EQUIVALENT, 0 ms]
(12) QDP
(13) NonTerminationLoopProof [COMPLETE, 0 ms]
(14) NO


----------------------------------------

(0)
Obligation:
Conditional term rewrite system:
The TRS R consists of the following rules:

   g(s(x)) -> x
   h(s(x)) -> x
   b -> b

The conditional TRS C consists of the following conditional rules:

   f(x, y) -> g(s(x)) <= c(g(x)) -> c(a)
   f(x, y) -> h(s(x)) <= c(h(x)) -> c(a)


----------------------------------------

(1) CTRSToQTRSProof (SOUND)
The conditional rules have been transormed into unconditional rules according to [CTRS,AAECCNOC].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f(x, y) -> U1(c(g(x)), x)
   U1(c(a), x) -> g(s(x))
   f(x, y) -> U2(c(h(x)), x)
   U2(c(a), x) -> h(s(x))
   g(s(x)) -> x
   h(s(x)) -> x
   b -> b

Q is empty.

----------------------------------------

(3) QTRSRRRProof (EQUIVALENT)
Used ordering:
f/2(YES,YES)
U1/2(YES,YES)
c/1(YES)
g/1)YES(
a/0)
s/1(YES)
U2/2(YES,YES)
h/1)YES(
b/0)

Quasi precedence:
[f_2, c_1] > U1_2 > s_1
[f_2, c_1] > U2_2 > s_1


Status:
f_2: multiset status
U1_2: multiset status
c_1: multiset status
a: multiset status
s_1: multiset status
U2_2: multiset status
b: multiset status

With this ordering the following rules can be removed by the rule removal processor [LPAR04] because they are oriented strictly:

   f(x, y) -> U1(c(g(x)), x)
   U1(c(a), x) -> g(s(x))
   f(x, y) -> U2(c(h(x)), x)
   U2(c(a), x) -> h(s(x))
   g(s(x)) -> x
   h(s(x)) -> x




----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b -> b

Q is empty.

----------------------------------------

(5) AAECC Innermost (EQUIVALENT)
We have applied [NOC,AAECCNOC] to switch to innermost. The TRS R 1 is none

The TRS R 2 is 
   b -> b

The signature Sigma is {b}
----------------------------------------

(6)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   b -> b

The set Q consists of the following terms:

   b


----------------------------------------

(7) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B -> B

The TRS R consists of the following rules:

   b -> b

The set Q consists of the following terms:

   b

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(9) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B -> B

R is empty.
The set Q consists of the following terms:

   b

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(11) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   b


----------------------------------------

(12)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B -> B

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(13) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = B evaluates to  t =B

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from B to B.




----------------------------------------

(14)
NO
