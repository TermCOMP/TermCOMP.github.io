YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/Zk2Xo.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Quasi decreasingness of the given CTRS could be proven:

(0) CTRS
(1) CTRSToQTRSProof [SOUND, 0 ms]
(2) QTRS
(3) Overlay + Local Confluence [EQUIVALENT, 0 ms]
(4) QTRS
(5) DependencyPairsProof [EQUIVALENT, 0 ms]
(6) QDP
(7) DependencyGraphProof [EQUIVALENT, 0 ms]
(8) AND
    (9) QDP
        (10) UsableRulesProof [EQUIVALENT, 0 ms]
        (11) QDP
        (12) QReductionProof [EQUIVALENT, 0 ms]
        (13) QDP
        (14) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (15) YES
    (16) QDP
        (17) UsableRulesProof [EQUIVALENT, 0 ms]
        (18) QDP
        (19) QReductionProof [EQUIVALENT, 0 ms]
        (20) QDP
        (21) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (22) YES


----------------------------------------

(0)
Obligation:
Conditional term rewrite system:
The TRS R consists of the following rules:

   fib(0) -> pair(0, s(0))

The conditional TRS C consists of the following conditional rules:

   plus(x, y) -> y' <= x -> 0, y -> y'
   plus(x, y) -> s(plus(x', y')) <= x -> s(x'), y -> y'
   fib(s(x)) -> pair(z, plus(y, z)) <= fib(x) -> pair(y, z)


----------------------------------------

(1) CTRSToQTRSProof (SOUND)
The conditional rules have been transormed into unconditional rules according to [CTRS,AAECCNOC].
----------------------------------------

(2)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   plus(x, y) -> U1(x, y)
   U1(s(x'), y) -> U3(y, x')
   U3(y', x') -> s(plus(x', y'))
   U1(0, y) -> U2(y)
   U2(y') -> y'
   fib(s(x)) -> U4(fib(x))
   U4(pair(y, z)) -> pair(z, plus(y, z))
   fib(0) -> pair(0, s(0))

Q is empty.

----------------------------------------

(3) Overlay + Local Confluence (EQUIVALENT)
The TRS is overlay and locally confluent. By [NOC] we can switch to innermost.
----------------------------------------

(4)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   plus(x, y) -> U1(x, y)
   U1(s(x'), y) -> U3(y, x')
   U3(y', x') -> s(plus(x', y'))
   U1(0, y) -> U2(y)
   U2(y') -> y'
   fib(s(x)) -> U4(fib(x))
   U4(pair(y, z)) -> pair(z, plus(y, z))
   fib(0) -> pair(0, s(0))

The set Q consists of the following terms:

   plus(x0, x1)
   U1(s(x0), x1)
   U3(x0, x1)
   U1(0, x0)
   U2(x0)
   fib(s(x0))
   U4(pair(x0, x1))
   fib(0)


----------------------------------------

(5) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PLUS(x, y) -> U1^1(x, y)
   U1^1(s(x'), y) -> U3^1(y, x')
   U3^1(y', x') -> PLUS(x', y')
   U1^1(0, y) -> U2^1(y)
   FIB(s(x)) -> U4^1(fib(x))
   FIB(s(x)) -> FIB(x)
   U4^1(pair(y, z)) -> PLUS(y, z)

The TRS R consists of the following rules:

   plus(x, y) -> U1(x, y)
   U1(s(x'), y) -> U3(y, x')
   U3(y', x') -> s(plus(x', y'))
   U1(0, y) -> U2(y)
   U2(y') -> y'
   fib(s(x)) -> U4(fib(x))
   U4(pair(y, z)) -> pair(z, plus(y, z))
   fib(0) -> pair(0, s(0))

The set Q consists of the following terms:

   plus(x0, x1)
   U1(s(x0), x1)
   U3(x0, x1)
   U1(0, x0)
   U2(x0)
   fib(s(x0))
   U4(pair(x0, x1))
   fib(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 2 SCCs with 3 less nodes.
----------------------------------------

(8)
Complex Obligation (AND)

----------------------------------------

(9)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U1^1(s(x'), y) -> U3^1(y, x')
   U3^1(y', x') -> PLUS(x', y')
   PLUS(x, y) -> U1^1(x, y)

The TRS R consists of the following rules:

   plus(x, y) -> U1(x, y)
   U1(s(x'), y) -> U3(y, x')
   U3(y', x') -> s(plus(x', y'))
   U1(0, y) -> U2(y)
   U2(y') -> y'
   fib(s(x)) -> U4(fib(x))
   U4(pair(y, z)) -> pair(z, plus(y, z))
   fib(0) -> pair(0, s(0))

The set Q consists of the following terms:

   plus(x0, x1)
   U1(s(x0), x1)
   U3(x0, x1)
   U1(0, x0)
   U2(x0)
   fib(s(x0))
   U4(pair(x0, x1))
   fib(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(10) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(11)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U1^1(s(x'), y) -> U3^1(y, x')
   U3^1(y', x') -> PLUS(x', y')
   PLUS(x, y) -> U1^1(x, y)

R is empty.
The set Q consists of the following terms:

   plus(x0, x1)
   U1(s(x0), x1)
   U3(x0, x1)
   U1(0, x0)
   U2(x0)
   fib(s(x0))
   U4(pair(x0, x1))
   fib(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(12) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   plus(x0, x1)
   U1(s(x0), x1)
   U3(x0, x1)
   U1(0, x0)
   U2(x0)
   fib(s(x0))
   U4(pair(x0, x1))
   fib(0)


----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U1^1(s(x'), y) -> U3^1(y, x')
   U3^1(y', x') -> PLUS(x', y')
   PLUS(x, y) -> U1^1(x, y)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(14) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*U3^1(y', x') -> PLUS(x', y')
The graph contains the following edges 2 >= 1, 1 >= 2


*PLUS(x, y) -> U1^1(x, y)
The graph contains the following edges 1 >= 1, 2 >= 2


*U1^1(s(x'), y) -> U3^1(y, x')
The graph contains the following edges 2 >= 1, 1 > 2


----------------------------------------

(15)
YES

----------------------------------------

(16)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FIB(s(x)) -> FIB(x)

The TRS R consists of the following rules:

   plus(x, y) -> U1(x, y)
   U1(s(x'), y) -> U3(y, x')
   U3(y', x') -> s(plus(x', y'))
   U1(0, y) -> U2(y)
   U2(y') -> y'
   fib(s(x)) -> U4(fib(x))
   U4(pair(y, z)) -> pair(z, plus(y, z))
   fib(0) -> pair(0, s(0))

The set Q consists of the following terms:

   plus(x0, x1)
   U1(s(x0), x1)
   U3(x0, x1)
   U1(0, x0)
   U2(x0)
   fib(s(x0))
   U4(pair(x0, x1))
   fib(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(17) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(18)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FIB(s(x)) -> FIB(x)

R is empty.
The set Q consists of the following terms:

   plus(x0, x1)
   U1(s(x0), x1)
   U3(x0, x1)
   U1(0, x0)
   U2(x0)
   fib(s(x0))
   U4(pair(x0, x1))
   fib(0)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(19) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   plus(x0, x1)
   U1(s(x0), x1)
   U3(x0, x1)
   U1(0, x0)
   U2(x0)
   fib(s(x0))
   U4(pair(x0, x1))
   fib(0)


----------------------------------------

(20)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   FIB(s(x)) -> FIB(x)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(21) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*FIB(s(x)) -> FIB(x)
The graph contains the following edges 1 > 1


----------------------------------------

(22)
YES
