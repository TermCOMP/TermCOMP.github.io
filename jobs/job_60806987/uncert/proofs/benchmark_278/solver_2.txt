YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/VxtSr.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination of the given RelTRS could be proven:

(0) RelTRS
(1) RelTRStoRelADPProof [EQUIVALENT, 0 ms]
(2) RelADPP
(3) RelADPDepGraphProof [EQUIVALENT, 0 ms]
(4) AND
    (5) RelADPP
        (6) RelADPRuleRemovalProof [EQUIVALENT, 3 ms]
        (7) RelADPP
        (8) DAbsisEmptyProof [EQUIVALENT, 0 ms]
        (9) YES
    (10) RelADPP
        (11) RelADPRuleRemovalProof [EQUIVALENT, 0 ms]
        (12) RelADPP
        (13) DAbsisEmptyProof [EQUIVALENT, 0 ms]
        (14) YES
    (15) RelADPP
        (16) RelADPRuleRemovalProof [EQUIVALENT, 7 ms]
        (17) RelADPP
        (18) DAbsisEmptyProof [EQUIVALENT, 0 ms]
        (19) YES
    (20) RelADPP
        (21) RelADPRuleRemovalProof [EQUIVALENT, 6 ms]
        (22) RelADPP
        (23) DAbsisEmptyProof [EQUIVALENT, 0 ms]
        (24) YES
    (25) RelADPP
        (26) RelADPRuleRemovalProof [EQUIVALENT, 6 ms]
        (27) RelADPP
        (28) DAbsisEmptyProof [EQUIVALENT, 0 ms]
        (29) YES
    (30) RelADPP
        (31) RelADPRuleRemovalProof [EQUIVALENT, 7 ms]
        (32) RelADPP
        (33) DAbsisEmptyProof [EQUIVALENT, 0 ms]
        (34) YES
    (35) RelADPP
        (36) RelADPRuleRemovalProof [EQUIVALENT, 6 ms]
        (37) RelADPP
        (38) DAbsisEmptyProof [EQUIVALENT, 0 ms]
        (39) YES
    (40) RelADPP
        (41) RelADPRuleRemovalProof [EQUIVALENT, 7 ms]
        (42) RelADPP
        (43) DAbsisEmptyProof [EQUIVALENT, 0 ms]
        (44) YES
    (45) RelADPP
        (46) RelADPRuleRemovalProof [EQUIVALENT, 6 ms]
        (47) RelADPP
        (48) DAbsisEmptyProof [EQUIVALENT, 0 ms]
        (49) YES
    (50) RelADPP
        (51) RelADPRuleRemovalProof [EQUIVALENT, 0 ms]
        (52) RelADPP
        (53) DAbsisEmptyProof [EQUIVALENT, 0 ms]
        (54) YES


----------------------------------------

(0)
Obligation:
Relative term rewrite system:
The relative TRS consists of the following R rules:

   b(b(c(x1))) -> c(a(c(x1)))
   a(c(b(x1))) -> b(c(c(x1)))
   b(b(b(x1))) -> b(c(a(x1)))

The relative TRS consists of the following S rules:

   c(a(b(x1))) -> b(b(a(x1)))
   a(a(b(x1))) -> b(a(a(x1)))
   b(a(a(x1))) -> c(c(b(x1)))
   b(a(a(x1))) -> c(c(c(x1)))


----------------------------------------

(1) RelTRStoRelADPProof (EQUIVALENT)


We upgrade the RelTRS problem to an equivalent Relative ADP Problem [IJCAR24].

----------------------------------------

(2)
Obligation:
Relative ADP Problem with
absolute ADPs:

   b(b(c(x1))) -> C(a(c(x1)))
   b(b(c(x1))) -> c(A(c(x1)))
   b(b(c(x1))) -> c(a(C(x1)))
   a(c(b(x1))) -> B(c(c(x1)))
   a(c(b(x1))) -> b(C(c(x1)))
   a(c(b(x1))) -> b(c(C(x1)))
   b(b(b(x1))) -> B(c(a(x1)))
   b(b(b(x1))) -> b(C(a(x1)))
   b(b(b(x1))) -> b(c(A(x1)))

and relative ADPs:

   c(a(b(x1))) -> B(B(a(x1)))
   c(a(b(x1))) -> B(b(A(x1)))
   c(a(b(x1))) -> b(B(A(x1)))
   a(a(b(x1))) -> B(A(a(x1)))
   a(a(b(x1))) -> B(a(A(x1)))
   a(a(b(x1))) -> b(A(A(x1)))
   b(a(a(x1))) -> C(C(b(x1)))
   b(a(a(x1))) -> C(c(B(x1)))
   b(a(a(x1))) -> c(C(B(x1)))
   b(a(a(x1))) -> C(C(c(x1)))
   b(a(a(x1))) -> C(c(C(x1)))
   b(a(a(x1))) -> c(C(C(x1)))


----------------------------------------

(3) RelADPDepGraphProof (EQUIVALENT)


We use the relative dependency graph processor [IJCAR24].
The approximation of the Relative Dependency Graph contains:
  1 SCC with nodes from P_abs,
  9 Lassos,
Result: This relative DT problem is equivalent to 10 subproblems.

----------------------------------------

(4)
Complex Obligation (AND)

----------------------------------------

(5)
Obligation:
Relative ADP Problem with
absolute ADPs:

   b(b(b(x1))) -> b(c(A(x1)))
   b(b(c(x1))) -> C(a(c(x1)))
   b(b(b(x1))) -> B(c(a(x1)))
   b(b(c(x1))) -> c(a(C(x1)))
   a(c(b(x1))) -> B(c(c(x1)))
   b(b(b(x1))) -> b(C(a(x1)))
   a(c(b(x1))) -> b(c(C(x1)))
   b(b(c(x1))) -> c(A(c(x1)))

and relative ADPs:

   b(a(a(x1))) -> c(C(C(x1)))
   c(a(b(x1))) -> B(B(a(x1)))
   a(c(b(x1))) -> b(c(c(x1)))
   b(a(a(x1))) -> c(c(c(x1)))
   a(a(b(x1))) -> b(A(A(x1)))
   b(a(a(x1))) -> C(c(C(x1)))
   c(a(b(x1))) -> B(b(A(x1)))
   a(a(b(x1))) -> B(a(A(x1)))
   c(a(b(x1))) -> b(B(A(x1)))
   b(a(a(x1))) -> c(c(b(x1)))
   b(a(a(x1))) -> C(c(B(x1)))
   a(a(b(x1))) -> B(A(a(x1)))
   b(a(a(x1))) -> c(C(B(x1)))


----------------------------------------

(6) RelADPRuleRemovalProof (EQUIVALENT)


We use the rule removal processor [IJCAR24].
The following rules can be ordered strictly and therefore removed:

   b(b(b(x1))) -> b(c(A(x1)))
   b(b(c(x1))) -> C(a(c(x1)))
   b(b(b(x1))) -> B(c(a(x1)))
   b(b(c(x1))) -> c(a(C(x1)))
   a(c(b(x1))) -> B(c(c(x1)))
   b(b(b(x1))) -> b(C(a(x1)))
   a(c(b(x1))) -> b(c(C(x1)))
   b(b(c(x1))) -> c(A(c(x1)))

   a(a(b(x1))) -> B(a(A(x1)))
   b(a(a(x1))) -> c(C(C(x1)))
   a(c(b(x1))) -> b(c(c(x1)))
   b(a(a(x1))) -> c(c(c(x1)))
   a(a(b(x1))) -> B(A(a(x1)))
   a(a(b(x1))) -> b(A(A(x1)))
   b(a(a(x1))) -> C(c(C(x1)))

c:

Ordered with Polynomial interpretation [POLO]:

   POL(A(x_1)) = x_1
   POL(B(x_1)) = x_1
   POL(C(x_1)) = x_1
   POL(a(x_1)) = 1 + 2*x_1
   POL(b(x_1)) = 2 + 2*x_1
   POL(c(x_1)) = 2*x_1

----------------------------------------

(7)
Obligation:
Relative ADP Problem with
No absolute ADPs, and relative ADPs:

   c(a(b(x1))) -> B(b(A(x1)))
   c(a(b(x1))) -> b(B(A(x1)))
   b(a(a(x1))) -> c(c(b(x1)))
   c(a(b(x1))) -> B(B(a(x1)))
   b(a(a(x1))) -> C(c(B(x1)))
   b(a(a(x1))) -> c(C(B(x1)))


----------------------------------------

(8) DAbsisEmptyProof (EQUIVALENT)
The relative ADP Problem has an empty P_abs. Hence, no infinite chain exists.
----------------------------------------

(9)
YES

----------------------------------------

(10)
Obligation:
Relative ADP Problem with
absolute ADPs:

   b(b(b(x1))) -> b(c(A(x1)))

and relative ADPs:

   b(b(c(x1))) -> c(a(c(x1)))
   b(a(a(x1))) -> c(C(C(x1)))
   c(a(b(x1))) -> B(B(a(x1)))
   a(c(b(x1))) -> b(c(c(x1)))
   b(a(a(x1))) -> c(c(c(x1)))
   a(a(b(x1))) -> b(A(A(x1)))
   b(a(a(x1))) -> C(c(C(x1)))
   c(a(b(x1))) -> B(b(A(x1)))
   a(a(b(x1))) -> B(a(A(x1)))
   c(a(b(x1))) -> b(B(A(x1)))
   b(a(a(x1))) -> c(c(b(x1)))
   b(b(b(x1))) -> b(c(a(x1)))
   b(a(a(x1))) -> C(c(B(x1)))
   a(a(b(x1))) -> B(A(a(x1)))
   b(a(a(x1))) -> c(C(B(x1)))


----------------------------------------

(11) RelADPRuleRemovalProof (EQUIVALENT)


We use the rule removal processor [IJCAR24].
The following rules can be ordered strictly and therefore removed:

   b(b(b(x1))) -> b(c(A(x1)))

   a(a(b(x1))) -> B(a(A(x1)))
   b(b(c(x1))) -> c(a(c(x1)))
   b(a(a(x1))) -> c(C(C(x1)))
   b(b(b(x1))) -> b(c(a(x1)))
   a(c(b(x1))) -> b(c(c(x1)))
   b(a(a(x1))) -> c(c(c(x1)))
   a(a(b(x1))) -> B(A(a(x1)))
   a(a(b(x1))) -> b(A(A(x1)))
   b(a(a(x1))) -> C(c(C(x1)))

c:

Ordered with Polynomial interpretation [POLO]:

   POL(A(x_1)) = x_1
   POL(B(x_1)) = x_1
   POL(C(x_1)) = x_1
   POL(a(x_1)) = 1 + 2*x_1
   POL(b(x_1)) = 2 + 2*x_1
   POL(c(x_1)) = 2*x_1

----------------------------------------

(12)
Obligation:
Relative ADP Problem with
No absolute ADPs, and relative ADPs:

   c(a(b(x1))) -> B(b(A(x1)))
   c(a(b(x1))) -> b(B(A(x1)))
   b(a(a(x1))) -> c(c(b(x1)))
   c(a(b(x1))) -> B(B(a(x1)))
   b(a(a(x1))) -> C(c(B(x1)))
   b(a(a(x1))) -> c(C(B(x1)))


----------------------------------------

(13) DAbsisEmptyProof (EQUIVALENT)
The relative ADP Problem has an empty P_abs. Hence, no infinite chain exists.
----------------------------------------

(14)
YES

----------------------------------------

(15)
Obligation:
Relative ADP Problem with
absolute ADPs:

   b(b(c(x1))) -> c(a(C(x1)))

and relative ADPs:

   b(b(c(x1))) -> c(a(c(x1)))
   b(a(a(x1))) -> c(C(C(x1)))
   c(a(b(x1))) -> B(B(a(x1)))
   a(c(b(x1))) -> b(c(c(x1)))
   b(a(a(x1))) -> c(c(c(x1)))
   a(a(b(x1))) -> b(A(A(x1)))
   b(a(a(x1))) -> C(c(C(x1)))
   c(a(b(x1))) -> B(b(A(x1)))
   a(a(b(x1))) -> B(a(A(x1)))
   c(a(b(x1))) -> b(B(A(x1)))
   b(a(a(x1))) -> c(c(b(x1)))
   b(b(b(x1))) -> b(c(a(x1)))
   b(a(a(x1))) -> C(c(B(x1)))
   a(a(b(x1))) -> B(A(a(x1)))
   b(a(a(x1))) -> c(C(B(x1)))


----------------------------------------

(16) RelADPRuleRemovalProof (EQUIVALENT)


We use the rule removal processor [IJCAR24].
The following rules can be ordered strictly and therefore removed:

   b(b(c(x1))) -> c(a(C(x1)))

   a(a(b(x1))) -> B(a(A(x1)))
   b(b(c(x1))) -> c(a(c(x1)))
   b(a(a(x1))) -> c(C(C(x1)))
   b(b(b(x1))) -> b(c(a(x1)))
   a(c(b(x1))) -> b(c(c(x1)))
   b(a(a(x1))) -> c(c(c(x1)))
   a(a(b(x1))) -> B(A(a(x1)))
   a(a(b(x1))) -> b(A(A(x1)))
   b(a(a(x1))) -> C(c(C(x1)))

c:

Ordered with Polynomial interpretation [POLO]:

   POL(A(x_1)) = x_1
   POL(B(x_1)) = x_1
   POL(C(x_1)) = x_1
   POL(a(x_1)) = 1 + 2*x_1
   POL(b(x_1)) = 2 + 2*x_1
   POL(c(x_1)) = 2*x_1

----------------------------------------

(17)
Obligation:
Relative ADP Problem with
No absolute ADPs, and relative ADPs:

   c(a(b(x1))) -> B(b(A(x1)))
   c(a(b(x1))) -> b(B(A(x1)))
   b(a(a(x1))) -> c(c(b(x1)))
   c(a(b(x1))) -> B(B(a(x1)))
   b(a(a(x1))) -> C(c(B(x1)))
   b(a(a(x1))) -> c(C(B(x1)))


----------------------------------------

(18) DAbsisEmptyProof (EQUIVALENT)
The relative ADP Problem has an empty P_abs. Hence, no infinite chain exists.
----------------------------------------

(19)
YES

----------------------------------------

(20)
Obligation:
Relative ADP Problem with
absolute ADPs:

   a(c(b(x1))) -> b(C(c(x1)))

and relative ADPs:

   b(b(c(x1))) -> c(a(c(x1)))
   b(a(a(x1))) -> c(C(C(x1)))
   c(a(b(x1))) -> B(B(a(x1)))
   a(c(b(x1))) -> b(c(c(x1)))
   b(a(a(x1))) -> c(c(c(x1)))
   a(a(b(x1))) -> b(A(A(x1)))
   b(a(a(x1))) -> C(c(C(x1)))
   c(a(b(x1))) -> B(b(A(x1)))
   a(a(b(x1))) -> B(a(A(x1)))
   c(a(b(x1))) -> b(B(A(x1)))
   b(a(a(x1))) -> c(c(b(x1)))
   b(b(b(x1))) -> b(c(a(x1)))
   b(a(a(x1))) -> C(c(B(x1)))
   a(a(b(x1))) -> B(A(a(x1)))
   b(a(a(x1))) -> c(C(B(x1)))


----------------------------------------

(21) RelADPRuleRemovalProof (EQUIVALENT)


We use the rule removal processor [IJCAR24].
The following rules can be ordered strictly and therefore removed:

   a(c(b(x1))) -> b(C(c(x1)))

   a(a(b(x1))) -> B(a(A(x1)))
   b(b(c(x1))) -> c(a(c(x1)))
   b(a(a(x1))) -> c(C(C(x1)))
   b(b(b(x1))) -> b(c(a(x1)))
   a(c(b(x1))) -> b(c(c(x1)))
   b(a(a(x1))) -> c(c(c(x1)))
   a(a(b(x1))) -> B(A(a(x1)))
   a(a(b(x1))) -> b(A(A(x1)))
   b(a(a(x1))) -> C(c(C(x1)))

c:

Ordered with Polynomial interpretation [POLO]:

   POL(A(x_1)) = x_1
   POL(B(x_1)) = x_1
   POL(C(x_1)) = x_1
   POL(a(x_1)) = 1 + 2*x_1
   POL(b(x_1)) = 2 + 2*x_1
   POL(c(x_1)) = 2*x_1

----------------------------------------

(22)
Obligation:
Relative ADP Problem with
No absolute ADPs, and relative ADPs:

   c(a(b(x1))) -> B(b(A(x1)))
   c(a(b(x1))) -> b(B(A(x1)))
   b(a(a(x1))) -> c(c(b(x1)))
   c(a(b(x1))) -> B(B(a(x1)))
   b(a(a(x1))) -> C(c(B(x1)))
   b(a(a(x1))) -> c(C(B(x1)))


----------------------------------------

(23) DAbsisEmptyProof (EQUIVALENT)
The relative ADP Problem has an empty P_abs. Hence, no infinite chain exists.
----------------------------------------

(24)
YES

----------------------------------------

(25)
Obligation:
Relative ADP Problem with
absolute ADPs:

   a(c(b(x1))) -> B(c(c(x1)))

and relative ADPs:

   b(b(c(x1))) -> c(a(c(x1)))
   b(a(a(x1))) -> c(C(C(x1)))
   c(a(b(x1))) -> B(B(a(x1)))
   a(c(b(x1))) -> b(c(c(x1)))
   b(a(a(x1))) -> c(c(c(x1)))
   a(a(b(x1))) -> b(A(A(x1)))
   b(a(a(x1))) -> C(c(C(x1)))
   c(a(b(x1))) -> B(b(A(x1)))
   a(a(b(x1))) -> B(a(A(x1)))
   c(a(b(x1))) -> b(B(A(x1)))
   b(a(a(x1))) -> c(c(b(x1)))
   b(b(b(x1))) -> b(c(a(x1)))
   b(a(a(x1))) -> C(c(B(x1)))
   a(a(b(x1))) -> B(A(a(x1)))
   b(a(a(x1))) -> c(C(B(x1)))


----------------------------------------

(26) RelADPRuleRemovalProof (EQUIVALENT)


We use the rule removal processor [IJCAR24].
The following rules can be ordered strictly and therefore removed:

   a(c(b(x1))) -> B(c(c(x1)))

   a(a(b(x1))) -> B(a(A(x1)))
   b(b(c(x1))) -> c(a(c(x1)))
   b(a(a(x1))) -> c(C(C(x1)))
   b(b(b(x1))) -> b(c(a(x1)))
   a(c(b(x1))) -> b(c(c(x1)))
   b(a(a(x1))) -> c(c(c(x1)))
   a(a(b(x1))) -> B(A(a(x1)))
   a(a(b(x1))) -> b(A(A(x1)))
   b(a(a(x1))) -> C(c(C(x1)))

c:

Ordered with Polynomial interpretation [POLO]:

   POL(A(x_1)) = x_1
   POL(B(x_1)) = x_1
   POL(C(x_1)) = x_1
   POL(a(x_1)) = 1 + 2*x_1
   POL(b(x_1)) = 2 + 2*x_1
   POL(c(x_1)) = 2*x_1

----------------------------------------

(27)
Obligation:
Relative ADP Problem with
No absolute ADPs, and relative ADPs:

   c(a(b(x1))) -> B(b(A(x1)))
   c(a(b(x1))) -> b(B(A(x1)))
   b(a(a(x1))) -> c(c(b(x1)))
   c(a(b(x1))) -> B(B(a(x1)))
   b(a(a(x1))) -> C(c(B(x1)))
   b(a(a(x1))) -> c(C(B(x1)))


----------------------------------------

(28) DAbsisEmptyProof (EQUIVALENT)
The relative ADP Problem has an empty P_abs. Hence, no infinite chain exists.
----------------------------------------

(29)
YES

----------------------------------------

(30)
Obligation:
Relative ADP Problem with
absolute ADPs:

   a(c(b(x1))) -> b(c(C(x1)))

and relative ADPs:

   b(b(c(x1))) -> c(a(c(x1)))
   b(a(a(x1))) -> c(C(C(x1)))
   c(a(b(x1))) -> B(B(a(x1)))
   a(c(b(x1))) -> b(c(c(x1)))
   b(a(a(x1))) -> c(c(c(x1)))
   a(a(b(x1))) -> b(A(A(x1)))
   b(a(a(x1))) -> C(c(C(x1)))
   c(a(b(x1))) -> B(b(A(x1)))
   a(a(b(x1))) -> B(a(A(x1)))
   c(a(b(x1))) -> b(B(A(x1)))
   b(a(a(x1))) -> c(c(b(x1)))
   b(b(b(x1))) -> b(c(a(x1)))
   b(a(a(x1))) -> C(c(B(x1)))
   a(a(b(x1))) -> B(A(a(x1)))
   b(a(a(x1))) -> c(C(B(x1)))


----------------------------------------

(31) RelADPRuleRemovalProof (EQUIVALENT)


We use the rule removal processor [IJCAR24].
The following rules can be ordered strictly and therefore removed:

   a(c(b(x1))) -> b(c(C(x1)))

   a(a(b(x1))) -> B(a(A(x1)))
   b(b(c(x1))) -> c(a(c(x1)))
   b(a(a(x1))) -> c(C(C(x1)))
   b(b(b(x1))) -> b(c(a(x1)))
   a(c(b(x1))) -> b(c(c(x1)))
   b(a(a(x1))) -> c(c(c(x1)))
   a(a(b(x1))) -> B(A(a(x1)))
   a(a(b(x1))) -> b(A(A(x1)))
   b(a(a(x1))) -> C(c(C(x1)))

c:

Ordered with Polynomial interpretation [POLO]:

   POL(A(x_1)) = x_1
   POL(B(x_1)) = x_1
   POL(C(x_1)) = x_1
   POL(a(x_1)) = 1 + 2*x_1
   POL(b(x_1)) = 2 + 2*x_1
   POL(c(x_1)) = 2*x_1

----------------------------------------

(32)
Obligation:
Relative ADP Problem with
No absolute ADPs, and relative ADPs:

   c(a(b(x1))) -> B(b(A(x1)))
   c(a(b(x1))) -> b(B(A(x1)))
   b(a(a(x1))) -> c(c(b(x1)))
   c(a(b(x1))) -> B(B(a(x1)))
   b(a(a(x1))) -> C(c(B(x1)))
   b(a(a(x1))) -> c(C(B(x1)))


----------------------------------------

(33) DAbsisEmptyProof (EQUIVALENT)
The relative ADP Problem has an empty P_abs. Hence, no infinite chain exists.
----------------------------------------

(34)
YES

----------------------------------------

(35)
Obligation:
Relative ADP Problem with
absolute ADPs:

   b(b(c(x1))) -> C(a(c(x1)))

and relative ADPs:

   b(b(c(x1))) -> c(a(c(x1)))
   b(a(a(x1))) -> c(C(C(x1)))
   c(a(b(x1))) -> B(B(a(x1)))
   a(c(b(x1))) -> b(c(c(x1)))
   b(a(a(x1))) -> c(c(c(x1)))
   a(a(b(x1))) -> b(A(A(x1)))
   b(a(a(x1))) -> C(c(C(x1)))
   c(a(b(x1))) -> B(b(A(x1)))
   a(a(b(x1))) -> B(a(A(x1)))
   c(a(b(x1))) -> b(B(A(x1)))
   b(a(a(x1))) -> c(c(b(x1)))
   b(b(b(x1))) -> b(c(a(x1)))
   b(a(a(x1))) -> C(c(B(x1)))
   a(a(b(x1))) -> B(A(a(x1)))
   b(a(a(x1))) -> c(C(B(x1)))


----------------------------------------

(36) RelADPRuleRemovalProof (EQUIVALENT)


We use the rule removal processor [IJCAR24].
The following rules can be ordered strictly and therefore removed:

   b(b(c(x1))) -> C(a(c(x1)))

   a(a(b(x1))) -> B(a(A(x1)))
   b(b(c(x1))) -> c(a(c(x1)))
   b(a(a(x1))) -> c(C(C(x1)))
   b(b(b(x1))) -> b(c(a(x1)))
   a(c(b(x1))) -> b(c(c(x1)))
   b(a(a(x1))) -> c(c(c(x1)))
   a(a(b(x1))) -> B(A(a(x1)))
   a(a(b(x1))) -> b(A(A(x1)))
   b(a(a(x1))) -> C(c(C(x1)))

c:

Ordered with Polynomial interpretation [POLO]:

   POL(A(x_1)) = x_1
   POL(B(x_1)) = x_1
   POL(C(x_1)) = x_1
   POL(a(x_1)) = 1 + 2*x_1
   POL(b(x_1)) = 2 + 2*x_1
   POL(c(x_1)) = 2*x_1

----------------------------------------

(37)
Obligation:
Relative ADP Problem with
No absolute ADPs, and relative ADPs:

   c(a(b(x1))) -> B(b(A(x1)))
   c(a(b(x1))) -> b(B(A(x1)))
   b(a(a(x1))) -> c(c(b(x1)))
   c(a(b(x1))) -> B(B(a(x1)))
   b(a(a(x1))) -> C(c(B(x1)))
   b(a(a(x1))) -> c(C(B(x1)))


----------------------------------------

(38) DAbsisEmptyProof (EQUIVALENT)
The relative ADP Problem has an empty P_abs. Hence, no infinite chain exists.
----------------------------------------

(39)
YES

----------------------------------------

(40)
Obligation:
Relative ADP Problem with
absolute ADPs:

   b(b(b(x1))) -> b(C(a(x1)))

and relative ADPs:

   b(b(c(x1))) -> c(a(c(x1)))
   b(a(a(x1))) -> c(C(C(x1)))
   c(a(b(x1))) -> B(B(a(x1)))
   a(c(b(x1))) -> b(c(c(x1)))
   b(a(a(x1))) -> c(c(c(x1)))
   a(a(b(x1))) -> b(A(A(x1)))
   b(a(a(x1))) -> C(c(C(x1)))
   c(a(b(x1))) -> B(b(A(x1)))
   a(a(b(x1))) -> B(a(A(x1)))
   c(a(b(x1))) -> b(B(A(x1)))
   b(a(a(x1))) -> c(c(b(x1)))
   b(b(b(x1))) -> b(c(a(x1)))
   b(a(a(x1))) -> C(c(B(x1)))
   a(a(b(x1))) -> B(A(a(x1)))
   b(a(a(x1))) -> c(C(B(x1)))


----------------------------------------

(41) RelADPRuleRemovalProof (EQUIVALENT)


We use the rule removal processor [IJCAR24].
The following rules can be ordered strictly and therefore removed:

   b(b(b(x1))) -> b(C(a(x1)))

   a(a(b(x1))) -> B(a(A(x1)))
   b(b(c(x1))) -> c(a(c(x1)))
   b(a(a(x1))) -> c(C(C(x1)))
   b(b(b(x1))) -> b(c(a(x1)))
   a(c(b(x1))) -> b(c(c(x1)))
   b(a(a(x1))) -> c(c(c(x1)))
   a(a(b(x1))) -> B(A(a(x1)))
   a(a(b(x1))) -> b(A(A(x1)))
   b(a(a(x1))) -> C(c(C(x1)))

c:

Ordered with Polynomial interpretation [POLO]:

   POL(A(x_1)) = x_1
   POL(B(x_1)) = x_1
   POL(C(x_1)) = x_1
   POL(a(x_1)) = 1 + 2*x_1
   POL(b(x_1)) = 2 + 2*x_1
   POL(c(x_1)) = 2*x_1

----------------------------------------

(42)
Obligation:
Relative ADP Problem with
No absolute ADPs, and relative ADPs:

   c(a(b(x1))) -> B(b(A(x1)))
   c(a(b(x1))) -> b(B(A(x1)))
   b(a(a(x1))) -> c(c(b(x1)))
   c(a(b(x1))) -> B(B(a(x1)))
   b(a(a(x1))) -> C(c(B(x1)))
   b(a(a(x1))) -> c(C(B(x1)))


----------------------------------------

(43) DAbsisEmptyProof (EQUIVALENT)
The relative ADP Problem has an empty P_abs. Hence, no infinite chain exists.
----------------------------------------

(44)
YES

----------------------------------------

(45)
Obligation:
Relative ADP Problem with
absolute ADPs:

   b(b(b(x1))) -> B(c(a(x1)))

and relative ADPs:

   b(b(c(x1))) -> c(a(c(x1)))
   b(a(a(x1))) -> c(C(C(x1)))
   c(a(b(x1))) -> B(B(a(x1)))
   a(c(b(x1))) -> b(c(c(x1)))
   b(a(a(x1))) -> c(c(c(x1)))
   a(a(b(x1))) -> b(A(A(x1)))
   b(a(a(x1))) -> C(c(C(x1)))
   c(a(b(x1))) -> B(b(A(x1)))
   a(a(b(x1))) -> B(a(A(x1)))
   c(a(b(x1))) -> b(B(A(x1)))
   b(a(a(x1))) -> c(c(b(x1)))
   b(b(b(x1))) -> b(c(a(x1)))
   b(a(a(x1))) -> C(c(B(x1)))
   a(a(b(x1))) -> B(A(a(x1)))
   b(a(a(x1))) -> c(C(B(x1)))


----------------------------------------

(46) RelADPRuleRemovalProof (EQUIVALENT)


We use the rule removal processor [IJCAR24].
The following rules can be ordered strictly and therefore removed:

   b(b(b(x1))) -> B(c(a(x1)))

   a(a(b(x1))) -> B(a(A(x1)))
   b(b(c(x1))) -> c(a(c(x1)))
   b(a(a(x1))) -> c(C(C(x1)))
   b(b(b(x1))) -> b(c(a(x1)))
   a(c(b(x1))) -> b(c(c(x1)))
   b(a(a(x1))) -> c(c(c(x1)))
   a(a(b(x1))) -> B(A(a(x1)))
   a(a(b(x1))) -> b(A(A(x1)))
   b(a(a(x1))) -> C(c(C(x1)))

c:

Ordered with Polynomial interpretation [POLO]:

   POL(A(x_1)) = x_1
   POL(B(x_1)) = x_1
   POL(C(x_1)) = x_1
   POL(a(x_1)) = 2 + 2*x_1
   POL(b(x_1)) = 3 + 2*x_1
   POL(c(x_1)) = 1 + 2*x_1

----------------------------------------

(47)
Obligation:
Relative ADP Problem with
No absolute ADPs, and relative ADPs:

   c(a(b(x1))) -> B(b(A(x1)))
   c(a(b(x1))) -> b(B(A(x1)))
   b(a(a(x1))) -> c(c(b(x1)))
   c(a(b(x1))) -> B(B(a(x1)))
   b(a(a(x1))) -> C(c(B(x1)))
   b(a(a(x1))) -> c(C(B(x1)))


----------------------------------------

(48) DAbsisEmptyProof (EQUIVALENT)
The relative ADP Problem has an empty P_abs. Hence, no infinite chain exists.
----------------------------------------

(49)
YES

----------------------------------------

(50)
Obligation:
Relative ADP Problem with
absolute ADPs:

   b(b(c(x1))) -> c(A(c(x1)))

and relative ADPs:

   b(b(c(x1))) -> c(a(c(x1)))
   b(a(a(x1))) -> c(C(C(x1)))
   c(a(b(x1))) -> B(B(a(x1)))
   a(c(b(x1))) -> b(c(c(x1)))
   b(a(a(x1))) -> c(c(c(x1)))
   a(a(b(x1))) -> b(A(A(x1)))
   b(a(a(x1))) -> C(c(C(x1)))
   c(a(b(x1))) -> B(b(A(x1)))
   a(a(b(x1))) -> B(a(A(x1)))
   c(a(b(x1))) -> b(B(A(x1)))
   b(a(a(x1))) -> c(c(b(x1)))
   b(b(b(x1))) -> b(c(a(x1)))
   b(a(a(x1))) -> C(c(B(x1)))
   a(a(b(x1))) -> B(A(a(x1)))
   b(a(a(x1))) -> c(C(B(x1)))


----------------------------------------

(51) RelADPRuleRemovalProof (EQUIVALENT)


We use the rule removal processor [IJCAR24].
The following rules can be ordered strictly and therefore removed:

   b(b(c(x1))) -> c(A(c(x1)))

   a(a(b(x1))) -> B(a(A(x1)))
   b(b(c(x1))) -> c(a(c(x1)))
   b(a(a(x1))) -> c(C(C(x1)))
   b(b(b(x1))) -> b(c(a(x1)))
   a(c(b(x1))) -> b(c(c(x1)))
   b(a(a(x1))) -> c(c(c(x1)))
   a(a(b(x1))) -> B(A(a(x1)))
   a(a(b(x1))) -> b(A(A(x1)))
   b(a(a(x1))) -> C(c(C(x1)))

c:

Ordered with Polynomial interpretation [POLO]:

   POL(A(x_1)) = x_1
   POL(B(x_1)) = x_1
   POL(C(x_1)) = x_1
   POL(a(x_1)) = 1 + 2*x_1
   POL(b(x_1)) = 2 + 2*x_1
   POL(c(x_1)) = 2*x_1

----------------------------------------

(52)
Obligation:
Relative ADP Problem with
No absolute ADPs, and relative ADPs:

   c(a(b(x1))) -> B(b(A(x1)))
   c(a(b(x1))) -> b(B(A(x1)))
   b(a(a(x1))) -> c(c(b(x1)))
   c(a(b(x1))) -> B(B(a(x1)))
   b(a(a(x1))) -> C(c(B(x1)))
   b(a(a(x1))) -> c(C(B(x1)))


----------------------------------------

(53) DAbsisEmptyProof (EQUIVALENT)
The relative ADP Problem has an empty P_abs. Hence, no infinite chain exists.
----------------------------------------

(54)
YES
