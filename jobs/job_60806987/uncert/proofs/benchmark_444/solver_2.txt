YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/IUaAj.ari
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Termination of the given RelTRS could be proven:

(0) RelTRS
(1) RelTRStoRelADPProof [EQUIVALENT, 0 ms]
(2) RelADPP
(3) RelADPDepGraphProof [EQUIVALENT, 0 ms]
(4) RelADPP
(5) RelADPCleverAfsProof [SOUND, 39 ms]
(6) QDP
(7) MRRProof [EQUIVALENT, 26 ms]
(8) QDP
(9) TransformationProof [EQUIVALENT, 0 ms]
(10) QDP
(11) QDPOrderProof [EQUIVALENT, 500 ms]
(12) QDP
(13) PisEmptyProof [EQUIVALENT, 0 ms]
(14) YES


----------------------------------------

(0)
Obligation:
Relative term rewrite system:
The relative TRS consists of the following R rules:

   b(p(b(x1))) -> a(b(a(p(b(a(x1))))))

The relative TRS consists of the following S rules:

   p(x1) -> a(p(a(x1)))
   a(p(a(x1))) -> p(x1)


----------------------------------------

(1) RelTRStoRelADPProof (EQUIVALENT)


We upgrade the RelTRS problem to an equivalent Relative ADP Problem [IJCAR24].

----------------------------------------

(2)
Obligation:
Relative ADP Problem with
absolute ADPs:

   b(p(b(x1))) -> A(b(a(p(b(a(x1))))))
   b(p(b(x1))) -> a(B(a(p(b(a(x1))))))
   b(p(b(x1))) -> a(b(A(p(b(a(x1))))))
   b(p(b(x1))) -> a(b(a(P(b(a(x1))))))
   b(p(b(x1))) -> a(b(a(p(B(a(x1))))))
   b(p(b(x1))) -> a(b(a(p(b(A(x1))))))

and relative ADPs:

   p(x1) -> A(P(a(x1)))
   p(x1) -> A(p(A(x1)))
   p(x1) -> a(P(A(x1)))
   a(p(a(x1))) -> P(x1)


----------------------------------------

(3) RelADPDepGraphProof (EQUIVALENT)


We use the relative dependency graph processor [IJCAR24].
The approximation of the Relative Dependency Graph contains:
  1 SCC with nodes from P_abs,
  0 Lassos,
Result: This relative DT problem is equivalent to 1 subproblem.

----------------------------------------

(4)
Obligation:
Relative ADP Problem with
absolute ADPs:

   b(p(b(x1))) -> a(B(a(p(b(a(x1))))))
   b(p(b(x1))) -> a(b(a(p(B(a(x1))))))

and relative ADPs:

   p(x1) -> a(p(a(x1)))
   a(p(a(x1))) -> p(x1)
   b(p(b(x1))) -> a(b(a(p(b(a(x1))))))


----------------------------------------

(5) RelADPCleverAfsProof (SOUND)
We use the first derelatifying processor [IJCAR24].
There are no annotations in relative ADPs, so the relative ADP problem can be transformed into a non-relative DP problem.

Furthermore, We use an argument filter [LPAR04].
Filtering:a_1 = 
b_1 = 
p_1 = 
B_1 = 

Found this filtering by looking at the following order that orders at least one DP strictly:Combined order from the following AFS and order.
B(x1)  =  x1

p(x1)  =  x1

b(x1)  =  b(x1)

a(x1)  =  x1


Recursive path order with status [RPO].
Quasi-Precedence: trivial

Status: b_1: multiset status


----------------------------------------

(6)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B0(p0(b0(x1))) -> B0(a0(p0(b0(a0(x1)))))
   B0(p0(b0(x1))) -> B0(a0(x1))

The TRS R consists of the following rules:

   p0(x1) -> a0(p0(a0(x1)))
   a0(p0(a0(x1))) -> p0(x1)
   b0(p0(b0(x1))) -> a0(b0(a0(p0(b0(a0(x1))))))

Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(7) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.

Strictly oriented dependency pairs:

   B0(p0(b0(x1))) -> B0(a0(x1))


Used ordering: Polynomial interpretation [POLO]:

   POL(B0(x_1)) = 2*x_1
   POL(a0(x_1)) = x_1
   POL(b0(x_1)) = 2 + 2*x_1
   POL(p0(x_1)) = 2*x_1


----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B0(p0(b0(x1))) -> B0(a0(p0(b0(a0(x1)))))

The TRS R consists of the following rules:

   p0(x1) -> a0(p0(a0(x1)))
   a0(p0(a0(x1))) -> p0(x1)
   b0(p0(b0(x1))) -> a0(b0(a0(p0(b0(a0(x1))))))

Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(9) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule B0(p0(b0(x1))) -> B0(a0(p0(b0(a0(x1))))) at position [0] we obtained the following new rules [LPAR04]:

   (B0(p0(b0(y0))) -> B0(a0(a0(p0(a0(b0(a0(y0))))))),B0(p0(b0(y0))) -> B0(a0(a0(p0(a0(b0(a0(y0))))))))
   (B0(p0(b0(p0(a0(x0))))) -> B0(a0(p0(b0(p0(x0))))),B0(p0(b0(p0(a0(x0))))) -> B0(a0(p0(b0(p0(x0))))))


----------------------------------------

(10)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   B0(p0(b0(y0))) -> B0(a0(a0(p0(a0(b0(a0(y0)))))))
   B0(p0(b0(p0(a0(x0))))) -> B0(a0(p0(b0(p0(x0)))))

The TRS R consists of the following rules:

   p0(x1) -> a0(p0(a0(x1)))
   a0(p0(a0(x1))) -> p0(x1)
   b0(p0(b0(x1))) -> a0(b0(a0(p0(b0(a0(x1))))))

Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(11) QDPOrderProof (EQUIVALENT)
We use the reduction pair processor [LPAR04,JAR06].


The following pairs can be oriented strictly and are deleted.

   B0(p0(b0(y0))) -> B0(a0(a0(p0(a0(b0(a0(y0)))))))
   B0(p0(b0(p0(a0(x0))))) -> B0(a0(p0(b0(p0(x0)))))
The remaining pairs can at least be oriented weakly.
Used ordering:  Matrix interpretation [MATRO] with arctic natural numbers [ARCTIC]:

   <<<
 POL(B0(x_1)) =  	[[0A]] 	 +  	[[-I, 0A, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(p0(x_1)) =  	[[0A], [0A], [0A], [0A]] 	 +  	[[-I, -I, 0A, -I], [0A, -I, -I, 0A], [0A, -I, -I, -I], [-I, -I, -I, 0A]] 	* 	x_1
>>>

   <<<
 POL(b0(x_1)) =  	[[1A], [0A], [-I], [0A]] 	 +  	[[-I, 0A, 0A, 1A], [0A, 0A, -I, 0A], [-I, -I, 0A, -I], [-I, -I, 0A, -I]] 	* 	x_1
>>>

   <<<
 POL(a0(x_1)) =  	[[0A], [0A], [-I], [-I]] 	 +  	[[-I, -I, 0A, -I], [0A, -I, -I, 0A], [-I, -I, -I, 0A], [0A, -I, -I, -I]] 	* 	x_1
>>>


The following usable rules [FROCOS05] with respect to the argument filtering of the ordering [JAR06] were oriented:

   p0(x1) -> a0(p0(a0(x1)))
   a0(p0(a0(x1))) -> p0(x1)
   b0(p0(b0(x1))) -> a0(b0(a0(p0(b0(a0(x1))))))


----------------------------------------

(12)
Obligation:
Q DP problem:
P is empty.
The TRS R consists of the following rules:

   p0(x1) -> a0(p0(a0(x1)))
   a0(p0(a0(x1))) -> p0(x1)
   b0(p0(b0(x1))) -> a0(b0(a0(p0(b0(a0(x1))))))

Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(13) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(14)
YES
