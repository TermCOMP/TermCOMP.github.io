[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 386 length 1654
CNF 386 vars 1654 clauses
last 496 length 2081
CNF 496 vars 2081 clauses
last 672 length 2801
last 446 length 1902
CNF 446 vars 1902 clauses
CNF 672 vars 2801 clauses
last 504 length 2183
last 772 length 3321
CNF 772 vars 3321 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2265, clauses: 8150
last 2265 length 8150
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2298, clauses: 8336
last 2298 length 8336
CNF 2265 vars 8150 clauses
CNF 504 vars 2183 clauses
CNF 2298 vars 8336 clauses
last 1464 length 6387
last 1182 length 5063
last 455 length 1849
last 365 length 1506
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5322, clauses: 21935
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2265, clauses: 8150, status: Unsatisfied, time: 0.060932049s
last 10235 length 44638
last 2231 length 9141
last 2633 length 10968
last 2231 length 9141
last 2633 length 10968
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2298, clauses: 8336, status: Unsatisfied, time: 0.231262637s
last 10618 length 49296
CNF 1464 vars 6387 clauses
CNF 1182 vars 5063 clauses
CNF 455 vars 1849 clauses
last 5322 length 21935
CNF 365 vars 1506 clauses
CNF 10235 vars 44638 clauses
CNF 2633 vars 10968 clauses
CNF 2633 vars 10968 clauses
CNF 2231 vars 9141 clauses
CNF 2231 vars 9141 clauses
CNF 10618 vars 49296 clauses
CNF 5322 vars 21935 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1947, clauses: 7394
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12567, clauses: 51983
last 1947 length 7394
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7982, clauses: 30852
last 12567 length 51983
last 7982 length 30852
CNF 1947 vars 7394 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5322, clauses: 21935, status: Unsatisfied, time: 0.322937733s
CNF 7982 vars 30852 clauses
CNF 12567 vars 51983 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1947, clauses: 7394, status: Unsatisfied, time: 0.044197634s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12567, clauses: 51983, status: Satisfied, time: 0.144080034s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 3 letters       mirror
SRS with 1 strict rules and 2 weak rules on 3 letters       context
SRS with 1 strict rules and 6 weak rules on 3 letters       mirror
SRS with 1 strict rules and 6 weak rules on 3 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, c] -> [c] {- Input 0 -}
  [] ->= [a, b] {- Input 1 -}
  [a, a, b] ->= [] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [c, a] -> [c] {- Mirror (Input 0) -}
  [] ->= [b, a] {- Mirror (Input 1) -}
  [b, a, a] ->= [] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [c, a] -> [c] {- Mirror (Input 0) -}
  [a] ->= [a, b, a] {- Mirror (Input 1) -}
  [b] ->= [b, b, a] {- Mirror (Input 1) -}
  [c] ->= [c, b, a] {- Mirror (Input 1) -}
  [a, b, a, a] ->= [a] {- Mirror (Input 2) -}
  [b, b, a, a] ->= [b] {- Mirror (Input 2) -}
  [c, b, a, a] ->= [c] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, c] -> [c] {- Input 0 -}
  [a] ->= [a, b, a] {- Input 1 -}
  [b] ->= [a, b, b] {- Input 1 -}
  [c] ->= [a, b, c] {- Input 1 -}
  [a, a, b, a] ->= [a] {- Input 2 -}
  [a, a, b, b] ->= [b] {- Input 2 -}
  [a, a, b, c] ->= [c] {- Input 2 -}
reason
  ( a
  , St  / 0A -2A 0A \
        | 1A -1A 1A |
        \ -  -   1A / )
  ( b
  , St  / 0A -1A -1A \
        | 1A 0A  0A  |
        \ -  -   -2A / )
  ( c
  , St  / 0A -2A - \
        | 1A -1A - |
        \ 1A -1A - / )
   property Termination
has value Just True
for SRS
  [a] ->= [a, b, a] {- Input 1 -}
  [b] ->= [a, b, b] {- Input 1 -}
  [c] ->= [a, b, c] {- Input 1 -}
  [a, a, b, a] ->= [a] {- Input 2 -}
  [a, a, b, b] ->= [b] {- Input 2 -}
  [a, a, b, c] ->= [c] {- Input 2 -}
reason
  no strict rules

**************************************************
skeleton: \Mirror(1/2,3)\Context\Mirror(1/6,3)\Matrix{\ArcticBZ}{3}(0/6,3)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.451156535000
  min duration 0.009236039000
  total durat. 2.092130208000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.521018857000
  min duration 0.009229965000
  total durat. 2.126259397000
**************************************************
F                              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                              , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                              = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                              Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                              8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                              = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                              ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                              1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                              = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 1 ,
F                              num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 3 , total_length
F                              = 8} , self = 115 , parent = Nothing , duration = 0.572347183000 , status
F                              = Fail , start = 2025-09-04 08:26:13.392156535 UTC , finish = 2025-09-04
F                              08:26:13.964503718 UTC , thread_cap_info = ("ThreadId 122", 2, False)}
F                              
| F                            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                            = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| F                            = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| F                            = 36} , self = 97 , parent = Nothing , duration = 0.126727513000 , status
| F                            = Fail , start = 2025-09-04 08:26:13.395579214 UTC , finish = 2025-09-04
| F                            08:26:13.522306727 UTC , thread_cap_info = ("ThreadId 103", 3, False)}
| F                            
| | F                          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F                          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F                          = 10 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 ,
| | F                          alphabet_size = 4 , total_length = 36} , self = 105 , parent = Nothing
| | F                          , duration = 0.378426287000 , status = Fail , start = 2025-09-04 08:26:13.401593168
| | F                          UTC , finish = 2025-09-04 08:26:13.780019455 UTC , thread_cap_info = ("ThreadId
| | F                          133", 1, False)}
| | F                          
| | | F                        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F                        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F                        = 10 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 ,
| | | F                        alphabet_size = 4 , total_length = 36} , self = 106 , parent = Nothing
| | | F                        , duration = 0.381991282000 , status = Fail , start = 2025-09-04 08:26:13.401989917
| | | F                        UTC , finish = 2025-09-04 08:26:13.783981199 UTC , thread_cap_info = ("ThreadId
| | | F                        134", 3, False)}
| | | F                        
| | | | F                      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F                      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F                      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F                      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F                      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F                      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | F                      , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size
| | | | F                      = 4 , total_length = 36} , self = 118 , parent = Nothing , duration = 0.687939871000
| | | | F                      , status = Fail , start = 2025-09-04 08:26:13.417316704 UTC , finish =
| | | | F                      2025-09-04 08:26:14.105256575 UTC , thread_cap_info = ("ThreadId 139",
| | | | F                      1, False)}
| | | | F                      
| | | | | F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | | | F                    = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | | F                    = 82} , self = 108 , parent = Nothing , duration = 0.388300907000 , status
| | | | | F                    = Fail , start = 2025-09-04 08:26:13.421529404 UTC , finish = 2025-09-04
| | | | | F                    08:26:13.809830311 UTC , thread_cap_info = ("ThreadId 140", 2, False)}
| | | | | F                    
| | | | | | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | | | | F                  = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | | | F                  = 82} , self = 109 , parent = Nothing , duration = 0.396642186000 , status
| | | | | | F                  = Fail , start = 2025-09-04 08:26:13.42153113 UTC , finish = 2025-09-04
| | | | | | F                  08:26:13.818173316 UTC , thread_cap_info = ("ThreadId 141", 2, False)}
| | | | | | F                  
| | | | | | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | F                = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 3 , total_length
| | | | | | | F                = 30} , self = 107 , parent = Nothing , duration = 0.363071812000 , status
| | | | | | | F                = Fail , start = 2025-09-04 08:26:13.446748625 UTC , finish = 2025-09-04
| | | | | | | F                08:26:13.809820437 UTC , thread_cap_info = ("ThreadId 153", 2, False)}
| | | | | | | F                
| | | | | | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | | F              = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 3 , total_length
| | | | | | | | F              = 30} , self = 110 , parent = Nothing , duration = 0.368253354000 , status
| | | | | | | | F              = Fail , start = 2025-09-04 08:26:13.450385693 UTC , finish = 2025-09-04
| | | | | | | | F              08:26:13.818639047 UTC , thread_cap_info = ("ThreadId 154", 3, False)}
| | | | | | | | F              
| | | | | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 63 , num_strict_rules
| | | | | | | | | F            = 9 , num_top_rules = 0 , num_weak_rules = 54 , alphabet_size = 9 , total_length
| | | | | | | | | F            = 396} , self = 111 , parent = Nothing , duration = 0.451156535000 , status
| | | | | | | | | F            = Fail , start = 2025-09-04 08:26:13.452049842 UTC , finish = 2025-09-04
| | | | | | | | | F            08:26:13.903206377 UTC , thread_cap_info = ("ThreadId 160", 3, False)}
| | | | | | | | | F            
| | | | | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 63 , num_strict_rules
| | | | | | | | | | F          = 9 , num_top_rules = 0 , num_weak_rules = 54 , alphabet_size = 9 , total_length
| | | | | | | | | | F          = 396} , self = 117 , parent = Nothing , duration = 0.521018857000 , status
| | | | | | | | | | F          = Fail , start = 2025-09-04 08:26:13.460423339 UTC , finish = 2025-09-04
| | | | | | | | | | F          08:26:13.981442196 UTC , thread_cap_info = ("ThreadId 162", 2, False)}
| | | | | | | | | | F          
| F | | | | | | | | |          
| F | | | | | | | | |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | | | | | | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | | | | | | |          = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| F | | | | | | | | |          = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| F | | | | | | | | |          = 126} , self = 114 , parent = Nothing , duration = 0.408720168000 , status
| F | | | | | | | | |          = Fail , start = 2025-09-04 08:26:13.535550251 UTC , finish = 2025-09-04
| F | | | | | | | | |          08:26:13.944270419 UTC , thread_cap_info = ("ThreadId 172", 0, False)}
| F | | | | | | | | |          
| | | | | | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | | | | F        = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | | | | | | F        = 126} , self = 113 , parent = Nothing , duration = 0.373016893000 , status
| | | | | | | | | | | F        = Fail , start = 2025-09-04 08:26:13.540419369 UTC , finish = 2025-09-04
| | | | | | | | | | | F        08:26:13.913436262 UTC , thread_cap_info = ("ThreadId 173", 0, False)}
| | | | | | | | | | | F        
| | | | | | | | | | | | S      Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | | | | | | | | | | S      , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | | | | | | | | | | S      , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | | | | | | | | | | S      = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | | | | | | | | | | S      , cpf = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | | | | | S      = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | | | | | | | S      = 126} , self = 100 , parent = Nothing , duration = 0.100714644000 , status
| | | | | | | | | | | | S      = Success , start = 2025-09-04 08:26:13.560414484 UTC , finish = 2025-09-04
| | | | | | | | | | | | S      08:26:13.661129128 UTC , thread_cap_info = ("ThreadId 174", 0, False)}
| | | | | | | | | | | | S      
| | | | | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | | | | | | F    = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | | | | | | | | F    = 126} , self = 116 , parent = Nothing , duration = 0.420875306000 , status
| | | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:26:13.560437669 UTC , finish = 2025-09-04
| | | | | | | | | | | | | F    08:26:13.981312975 UTC , thread_cap_info = ("ThreadId 177", 1, False)}
| | | | | | | | | | | | | F    
| | | | | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | | | | | | | F  = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | | | | | | | | | F  = 126} , self = 112 , parent = Nothing , duration = 0.331370629000 , status
| | | | | | | | | | | | | | F  = Fail , start = 2025-09-04 08:26:13.58046062 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | F  08:26:13.911831249 UTC , thread_cap_info = ("ThreadId 179", 1, False)}
| | | | | | | | | | | | | | F  
| | | | | | | | | | | | S | |  
| | F | | | | | | | | |   | |  
| |   F | | | | | | | |   | |  
| |     | | | F | | | |   | |  
| |     | F |   | | | |   | |  
| | S   |   |   | | | |   | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | S   |   |   | | | |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S   |   |   | | | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S   |   |   | | | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S   |   |   | | | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S   |   |   | | | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | S   |   |   | | | |   | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | S   |   |   | | | |   | |  = 3 , total_length = 30} , self = 120 , parent = Nothing , duration = 0.421702225000
| | S   |   |   | | | |   | |  , status = Success , start = 2025-09-04 08:26:13.809859845 UTC , finish
| | S   |   |   | | | |   | |  = 2025-09-04 08:26:14.23156207 UTC , thread_cap_info = ("ThreadId 195",
| | S   |   |   | | | |   | |  2, False)}
| | S   |   |   | | | |   | |  
| | |   |   F   | | | |   | |  
| | |   |       F | | |   | |  
| | | F |         | | |   | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | F |         | | |   | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F |         | | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F |         | | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F |         | | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F |         | | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | F |         | | |   | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | F |         | | |   | |  = 3 , total_length = 30} , self = 119 , parent = Nothing , duration = 0.324668453000
| | | F |         | | |   | |  , status = Fail , start = 2025-09-04 08:26:13.81866851 UTC , finish = 2025-09-04
| | | F |         | | |   | |  08:26:14.143336963 UTC , thread_cap_info = ("ThreadId 197", 2, False)}
| | | F |         | | |   | |  
| | | | |         F | |   | |  
| | | | |           | |   | F  
| | | | |           | F   |    
| F | | |           |     |    
F   | | |           |     |    
    | | |           |     F    
    | | |           F          
    | | F                      
    | F                        
    S                          
