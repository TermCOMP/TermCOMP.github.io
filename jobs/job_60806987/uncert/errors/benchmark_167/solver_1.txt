[Info] pool sizes (success) 11 seen 11 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 11 seen 11 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 512 length 1986
CNF 512 vars 1986 clauses
last 567 length 2208
last 12 length 33
CNF 567 vars 2208 clauses
CNF 12 vars 33 clauses
last 12 length 33
CNF 12 vars 33 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 197, clauses: 663
last 197 length 663
CNF 197 vars 663 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 81, clauses: 235
last 81 length 235
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 197, clauses: 663, status: Unsatisfied, time: 0.018849701s
CNF 81 vars 235 clauses
last 593 length 2300
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 81, clauses: 235, status: Unsatisfied, time: 0.017479487s
CNF 593 vars 2300 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2788, clauses: 9817
last 2788 length 9817
last 545 length 2105
CNF 545 vars 2105 clauses
CNF 2788 vars 9817 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2788, clauses: 9817, status: Unsatisfied, time: 0.073443223s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3537, clauses: 12943
last 3537 length 12943
CNF 3537 vars 12943 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3537, clauses: 12943, status: Satisfied, time: 0.535747351s
**************************************************
summary
**************************************************
SRS with 3 strict rules and 12 weak rules on 7 letters       weights
SRS with 1 strict rules and 11 weak rules on 7 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 11 weak rules on 6 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [n, s] -> [s] {- Input 0 -}
  [o, s] -> [s] {- Input 1 -}
  [n, o, p] -> [o, n] {- Input 2 -}
  [t] ->= [t, c, n] {- Input 3 -}
  [p, s] ->= [s] {- Input 4 -}
  [o, n] ->= [n, o] {- Input 5 -}
  [p, n] ->= [m, p] {- Input 6 -}
  [p, m] ->= [m, p] {- Input 7 -}
  [o, m] ->= [n, o] {- Input 8 -}
  [n, p] ->= [p, n] {- Input 9 -}
  [c, p] ->= [p, c] {- Input 10 -}
  [c, m] ->= [m, c] {- Input 11 -}
  [c, n] ->= [n, c] {- Input 12 -}
  [c, o] ->= [o, c] {- Input 13 -}
  [c, o] ->= [o] {- Input 14 -}
reason
  (s, 0/1)
  (t, 0/1)
  (n, 0/1)
  (p, 1/1)
  (o, 1/1)
  (c, 0/1)
  (m, 0/1)
   property Termination
has value Just True
for SRS
  [n, s] -> [s] {- Input 0 -}
  [t] ->= [t, c, n] {- Input 3 -}
  [o, n] ->= [n, o] {- Input 5 -}
  [p, n] ->= [m, p] {- Input 6 -}
  [p, m] ->= [m, p] {- Input 7 -}
  [o, m] ->= [n, o] {- Input 8 -}
  [n, p] ->= [p, n] {- Input 9 -}
  [c, p] ->= [p, c] {- Input 10 -}
  [c, m] ->= [m, c] {- Input 11 -}
  [c, n] ->= [n, c] {- Input 12 -}
  [c, o] ->= [o, c] {- Input 13 -}
  [c, o] ->= [o] {- Input 14 -}
reason
  ( s
  , St (Corner  / 1 7 6 \
                | 0 0 1 |
                \ 0 0 1 /) )
  ( t
  , St (Corner  / 1 2 4 \
                | 0 0 1 |
                \ 0 0 1 /) )
  ( n
  , St (Corner  / 1 1 0 \
                | 0 3 0 |
                \ 0 0 1 /) )
  ( p
  , St (Corner  / 1 0 4 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( o
  , St (Corner  / 1 3 2 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( c
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( m
  , St (Corner  / 1 0 0 \
                | 0 2 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [t] ->= [t, c, n] {- Input 3 -}
  [o, n] ->= [n, o] {- Input 5 -}
  [p, n] ->= [m, p] {- Input 6 -}
  [p, m] ->= [m, p] {- Input 7 -}
  [o, m] ->= [n, o] {- Input 8 -}
  [n, p] ->= [p, n] {- Input 9 -}
  [c, p] ->= [p, c] {- Input 10 -}
  [c, m] ->= [m, c] {- Input 11 -}
  [c, n] ->= [n, c] {- Input 12 -}
  [c, o] ->= [o, c] {- Input 13 -}
  [c, o] ->= [o] {- Input 14 -}
reason
  no strict rules

**************************************************
skeleton: (3/12,7)\Weight(1/11,7)\Matrix{\Natural}{3}(0/11,6)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.226970549000
  min duration 1.226970549000
  total durat. 1.226970549000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 11
      , alphabet_size = 7
      , total_length = 46}
    , self = 71
    , parent = Nothing
    , duration = 1.226970549000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:41.8770094 UTC
    , finish = 2025-09-04 07:31:43.103979949 UTC
    , thread_cap_info = ("ThreadId 119", 3, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 6
  max duration 1.201595533000
  min duration 0.000113588000
  total durat. 2.220446221000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 588
      , num_strict_rules = 49
      , num_top_rules = 0
      , num_weak_rules = 539
      , alphabet_size = 49
      , total_length = 3430}
    , self = 70
    , parent = Nothing
    , duration = 1.201595533000
    , status = Success
    , start = 2025-09-04 07:31:41.882091132 UTC
    , finish = 2025-09-04 07:31:43.083686665 UTC
    , thread_cap_info = ("ThreadId 120", 3, False)}
**************************************************
E            Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E            , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E            = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E            , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E            = False}" , input_size = Size { num_rules = 11 , num_strict_rules = 11
E            , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 6 , total_length
E            = 43} , self = 45 , parent = Nothing , duration = 0.147557787000 , status
E            = Except "AsyncCancelled" , start = 2025-09-04 07:31:41.657235821 UTC ,
E            finish = 2025-09-04 07:31:41.804793608 UTC , thread_cap_info = ("ThreadId
E            20", 2, False)}
E            
| E          Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| E          epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| E          = Size { num_rules = 396 , num_strict_rules = 396 , num_top_rules = 0 ,
| E          num_weak_rules = 0 , alphabet_size = 36 , total_length = 2340} , self =
| E          53 , parent = Nothing , duration = 0.178431580000 , status = Except "AsyncCancelled"
| E          , start = 2025-09-04 07:31:41.670006448 UTC , finish = 2025-09-04 07:31:41.848438028
| E          UTC , thread_cap_info = ("ThreadId 51", 0, False)}
| E          
| | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F        = 11 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 10 ,
| | F        alphabet_size = 6 , total_length = 43} , self = 57 , parent = Nothing ,
| | F        duration = 0.176408412000 , status = Fail , start = 2025-09-04 07:31:41.763986806
| | F        UTC , finish = 2025-09-04 07:31:41.940395218 UTC , thread_cap_info = ("ThreadId
| | F        95", 3, False)}
| | F        
E | |        
F | |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | |        = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
F | |        = 1 , num_top_rules = 0 , num_weak_rules = 11 , alphabet_size = 7 , total_length
F | |        = 46} , self = 58 , parent = Nothing , duration = 0.167764388000 , status
F | |        = Fail , start = 2025-09-04 07:31:41.818764034 UTC , finish = 2025-09-04
F | |        07:31:41.986528422 UTC , thread_cap_info = ("ThreadId 111", 3, False)}
F | |        
| | | S      Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | S      epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | S      = Size { num_rules = 588 , num_strict_rules = 49 , num_top_rules = 0 ,
| | | S      num_weak_rules = 539 , alphabet_size = 49 , total_length = 3430} , self
| | | S      = 59 , parent = Nothing , duration = 0.395462523000 , status = Success
| | | S      , start = 2025-09-04 07:31:41.823680789 UTC , finish = 2025-09-04 07:31:42.219143312
| | | S      UTC , thread_cap_info = ("ThreadId 113", 0, False)}
| | | S      
| E | |      
| E | |      Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| E | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| E | |      , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 11 , alphabet_size
| E | |      = 7 , total_length = 46} , self = 71 , parent = Nothing , duration = 1.226970549000
| E | |      , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:41.8770094
| E | |      UTC , finish = 2025-09-04 07:31:43.103979949 UTC , thread_cap_info = ("ThreadId
| E | |      119", 3, False)}
| E | |      
| | | | S    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | S    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | S    = Size { num_rules = 588 , num_strict_rules = 49 , num_top_rules = 0 ,
| | | | S    num_weak_rules = 539 , alphabet_size = 49 , total_length = 3430} , self
| | | | S    = 70 , parent = Nothing , duration = 1.201595533000 , status = Success
| | | | S    , start = 2025-09-04 07:31:41.882091132 UTC , finish = 2025-09-04 07:31:43.083686665
| | | | S    UTC , thread_cap_info = ("ThreadId 120", 3, False)}
| | | | S    
| | | | | S  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | S  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | S  = Size { num_rules = 588 , num_strict_rules = 49 , num_top_rules = 0 ,
| | | | | S  num_weak_rules = 539 , alphabet_size = 49 , total_length = 3430} , self
| | | | | S  = 61 , parent = Nothing , duration = 0.596954080000 , status = Success
| | | | | S  , start = 2025-09-04 07:31:41.882096431 UTC , finish = 2025-09-04 07:31:42.479050511
| | | | | S  UTC , thread_cap_info = ("ThreadId 116", 0, False)}
| | | | | S  
| | F | | |  
F |   | | |  
S |   | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
S |   | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
S |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
S |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
S |   | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 11 , alphabet_size
S |   | | |  = 7 , total_length = 46} , self = 68 , parent = Nothing , duration = 0.951769658000
S |   | | |  , status = Success , start = 2025-09-04 07:31:42.109923312 UTC , finish
S |   | | |  = 2025-09-04 07:31:43.06169297 UTC , thread_cap_info = ("ThreadId 121",
S |   | | |  3, False)}
S |   | | |  
| |   S | |  
| | F   | |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | F   | |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | F   | |  = Size { num_rules = 412 , num_strict_rules = 28 , num_top_rules = 0 ,
| | F   | |  num_weak_rules = 384 , alphabet_size = 48 , total_length = 2402} , self
| | F   | |  = 63 , parent = Nothing , duration = 0.113344862000 , status = Fail , start
| | F   | |  = 2025-09-04 07:31:42.45488256 UTC , finish = 2025-09-04 07:31:42.568227422
| | F   | |  UTC , thread_cap_info = ("ThreadId 123", 0, False)}
| | F   | |  
| | |   | S  
| | F   |    
| | F   |    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | F   |    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | F   |    = Size { num_rules = 412 , num_strict_rules = 28 , num_top_rules = 0 ,
| | F   |    num_weak_rules = 384 , alphabet_size = 48 , total_length = 2402} , self
| | F   |    = 66 , parent = Nothing , duration = 0.419736792000 , status = Fail , start
| | F   |    = 2025-09-04 07:31:42.56825112 UTC , finish = 2025-09-04 07:31:42.987987912
| | F   |    UTC , thread_cap_info = ("ThreadId 126", 0, False)}
| | F   |    
| | F   |    
S |     |    
  |     S    
  E          
