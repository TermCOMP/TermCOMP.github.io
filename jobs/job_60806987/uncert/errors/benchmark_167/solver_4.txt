Input TRS:
    1: n(s(x1)) -> s(x1)
    2: o(s(x1)) -> s(x1)
    3: n(o(p(x1))) -> o(n(x1))
    4: t(x1) ->= t(c(n(x1)))
    5: p(s(x1)) ->= s(x1)
    6: o(n(x1)) ->= n(o(x1))
    7: p(n(x1)) ->= m(p(x1))
    8: p(m(x1)) ->= m(p(x1))
    9: o(m(x1)) ->= n(o(x1))
    10: n(p(x1)) ->= p(n(x1))
    11: c(p(x1)) ->= p(c(x1))
    12: c(m(x1)) ->= m(c(x1))
    13: c(n(x1)) ->= n(c(x1))
    14: c(o(x1)) ->= o(c(x1))
    15: c(o(x1)) ->= o(x1)
Number of strict rules: 3
Direct Order(PosReal,>,Poly) ... removes: 3 5 2
     s(x1)	weight: (/ 1 8) + x1
     n(x1)	weight: x1
     t(x1)	weight: x1
     c(x1)	weight: x1
     o(x1)	weight: (/ 1 8) + x1
     p(x1)	weight: (/ 1 8) + x1
     m(x1)	weight: x1
Number of strict rules: 1
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #o(n(x1)) ->? #n(o(x1))
   #2: #o(n(x1)) ->? #o(x1)
   #3: #c(n(x1)) ->? #n(c(x1))
   #4: #c(n(x1)) ->? #c(x1)
   #5: #o(m(x1)) ->? #n(o(x1))
   #6: #o(m(x1)) ->? #o(x1)
   #7: #c(p(x1)) ->? #c(x1)
   #8: #c(m(x1)) ->? #c(x1)
   #9: #c(o(x1)) ->? #o(c(x1))
   #10: #c(o(x1)) ->? #c(x1)
   #11: #n(p(x1)) ->? #n(x1)
   #12: #t(x1) ->? #t(c(n(x1)))
   #13: #t(x1) ->? #c(n(x1))
   #14: #t(x1) ->? #n(x1)
Number of SCCs: 4, DPs: 8, edges: 22
	SCC { #11 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     s(x1)	weight: 0
     n(x1)	weight: 0
     t(x1)	weight: 0
     c(x1)	weight: 0
     o(x1)	weight: 0
     p(x1)	weight: (/ 1 2) + x1
   #o(x1)	weight: 0
   #c(x1)	weight: 0
   #t(x1)	weight: 0
   #n(x1)	weight: x1
     m(x1)	weight: 0
    Usable rules: { }
    Removed DPs: #11
Number of SCCs: 3, DPs: 7, edges: 21
	SCC { #12 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
