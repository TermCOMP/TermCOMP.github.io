[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 507 length 2262
last 631 length 3799
CNF 631 vars 3799 clauses
CNF 507 vars 2262 clauses
last 539 length 2763
last 757 length 3722
CNF 539 vars 2763 clauses
last 685 length 3336
CNF 685 vars 3336 clauses
last 527 length 2373
CNF 757 vars 3722 clauses
last 681 length 3373
CNF 681 vars 3373 clauses
last 868 length 4784
CNF 527 vars 2373 clauses
last 681 length 3373
last 868 length 4784
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3203, clauses: 12039
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6680, clauses: 27677
CNF 868 vars 4784 clauses
last 1672 length 7705
last 1362 length 6389
last 10753 length 62939
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1749, clauses: 6917
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12204, clauses: 50947
CNF 681 vars 3373 clauses
CNF 868 vars 4784 clauses
last 3203 length 12039
last 11691 length 85385
last 6680 length 27677
CNF 1672 vars 7705 clauses
CNF 1362 vars 6389 clauses
last 1749 length 6917
CNF 10753 vars 62939 clauses
last 12204 length 50947
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2052, clauses: 7917
CNF 6680 vars 27677 clauses
CNF 11691 vars 85385 clauses
CNF 3203 vars 12039 clauses
CNF 1749 vars 6917 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14906, clauses: 61759
CNF 12204 vars 50947 clauses
last 2052 length 7917
last 14906 length 61759
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6680, clauses: 27677, status: Unsatisfied, time: 0.350130185s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1749, clauses: 6917, status: Unsatisfied, time: 0.331705975s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3203, clauses: 12039, status: Unsatisfied, time: 0.355059984s
CNF 2052 vars 7917 clauses
CNF 14906 vars 61759 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12204, clauses: 50947, status: Satisfied, time: 0.374156633s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2052, clauses: 7917, status: Satisfied, time: 0.135673408s
last 409 length 1834
last 352 length 1637
CNF 409 vars 1834 clauses
CNF 352 vars 1637 clauses
last 1362 length 6389
last 1672 length 7705
CNF 1362 vars 6389 clauses
CNF 1672 vars 7705 clauses
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 8 weak rules on 4 letters       weights
SRS with 1 strict rules and 4 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 4 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, a, b] -> [] {- Input 0 -}
  [a] ->= [b] {- Input 1 -}
  [] ->= [b, a, b, b] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[b, b], [b, a], [a, a], [a, b], [b, b]] -> [ [ b , b ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[b, b], [b, a], [a, a], [a, b], [b, a]] -> [ [ b , a ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, b], [b, a], [a, a], [a, b], [b, b]] -> [ [ a , b ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[a, b], [b, a], [a, a], [a, b], [b, a]] -> [ [ a , a ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, b]] ->= [[b, b], [b, b]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, a], [a, a]] ->= [[b, b], [b, a]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, b]] ->= [[a, b], [b, b]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, a], [a, a]] ->= [[a, b], [b, a]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, a] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[a, a]] ->= [ [a, b] , [b, a] , [a, b] , [b, b] , [b, a] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  ([a, a], 1/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
   property Termination
has value Just True
for SRS
  [[a, b], [b, a], [a, a], [a, b], [b, a]] -> [ [ a , a ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, b]] ->= [[b, b], [b, b]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, a] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 1 (Concon 0 (Input 2)) -}
reason
  ( [a, a]
  , St (Corner  / 1 2 1 \
                | 0 0 4 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 0 0 \
                | 0 4 0 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 2 0 \
                | 0 5 0 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[b, a], [a, b]] ->= [[b, b], [b, b]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, a] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 1 (Concon 0 (Input 2)) -}
reason
  no strict rules

**************************************************
skeleton: (1/2,2)\TileAllAll{2}(4/8,4)\Weight(1/4,4)\Matrix{\Natural}{3}(0/4,3)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.584266240000
  min duration 0.007418087000
  total durat. 1.636485549000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.635093839000
  min duration 0.013868471000
  total durat. 2.178050294000
**************************************************
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1381, clauses: 5374
last 1381 length 5374
F                      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                      = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
F                      = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 2 , total_length
F                      = 26} , self = 94 , parent = Nothing , duration = 0.186191924000 , status
F                      = Fail , start = 2025-09-04 08:23:49.734009051 UTC , finish = 2025-09-04
F                      08:23:49.920200975 UTC , thread_cap_info = ("ThreadId 114", 1, False)}
F                      
| F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| F                    = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| F                    = 28} , self = 95 , parent = Nothing , duration = 0.337974295000 , status
| F                    = Fail , start = 2025-09-04 08:23:49.748551772 UTC , finish = 2025-09-04
| F                    08:23:50.086526067 UTC , thread_cap_info = ("ThreadId 132", 1, False)}
| F                    
| | F                  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F                  = 14 , num_strict_rules = 11 , num_top_rules = 11 , num_weak_rules = 3
| | F                  , alphabet_size = 4 , total_length = 56} , self = 104 , parent = Nothing
| | F                  , duration = 0.725778003000 , status = Fail , start = 2025-09-04 08:23:49.752608976
| | F                  UTC , finish = 2025-09-04 08:23:50.478386979 UTC , thread_cap_info = ("ThreadId
| | F                  143", 0, False)}
| | F                  
| | | F                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | | F                , num_strict_rules = 11 , num_top_rules = 11 , num_weak_rules = 3 , alphabet_size
| | | F                = 4 , total_length = 56} , self = 102 , parent = Nothing , duration = 0.702885729000
| | | F                , status = Fail , start = 2025-09-04 08:23:49.759136139 UTC , finish =
| | | F                2025-09-04 08:23:50.462021868 UTC , thread_cap_info = ("ThreadId 144",
| | | F                0, False)}
| | | F                
| | | | F              CNF 1381 vars 5374 clauses
Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | F              = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | F              = 28} , self = 96 , parent = Nothing , duration = 0.346179035000 , status
| | | | F              = Fail , start = 2025-09-04 08:23:49.765752172 UTC , finish = 2025-09-04
| | | | F              08:23:50.111931207 UTC , thread_cap_info = ("ThreadId 161", 3, False)}
| | | | F              
| | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | F            = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | F            = 28} , self = 97 , parent = Nothing , duration = 0.340282784000 , status
| | | | | F            = Fail , start = 2025-09-04 08:23:49.772312799 UTC , finish = 2025-09-04
| | | | | F            08:23:50.112595583 UTC , thread_cap_info = ("ThreadId 162", 3, False)}
| | | | | F            
| | | | | | S          Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | S          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | S          , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | | | | | S          = 2 , total_length = 26} , self = 105 , parent = Nothing , duration = 0.792315278000
| | | | | | S          , status = Success , start = 2025-09-04 08:23:49.778796276 UTC , finish
| | | | | | S          = 2025-09-04 08:23:50.571111554 UTC , thread_cap_info = ("ThreadId 149",
| | | | | | S          1, False)}
| | | | | | S          
| | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 37 , num_strict_rules
| | | | | | | F        = 1 , num_top_rules = 0 , num_weak_rules = 36 , alphabet_size = 13 , total_length
| | | | | | | F        = 288} , self = 101 , parent = Nothing , duration = 0.635093839000 , status
| | | | | | | F        = Fail , start = 2025-09-04 08:23:49.7913716 UTC , finish = 2025-09-04
| | | | | | | F        08:23:50.426465439 UTC , thread_cap_info = ("ThreadId 168", 3, False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 37 , num_strict_rules
| | | | | | | | F      = 1 , num_top_rules = 0 , num_weak_rules = 36 , alphabet_size = 13 , total_length
| | | | | | | | F      = 288} , self = 100 , parent = Nothing , duration = 0.584266240000 , status
| | | | | | | | F      = Fail , start = 2025-09-04 08:23:49.79137735 UTC , finish = 2025-09-04
| | | | | | | | F      08:23:50.37564359 UTC , thread_cap_info = ("ThreadId 166", 0, False)}
| | | | | | | | F      
| | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | | | | | F    = 2 , num_top_rules = 0 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | | | | | | F    = 68} , self = 98 , parent = Nothing , duration = 0.398759668000 , status
| | | | | | | | | F    = Fail , start = 2025-09-04 08:23:49.804535423 UTC , finish = 2025-09-04
| | | | | | | | | F    08:23:50.203295091 UTC , thread_cap_info = ("ThreadId 170", 1, False)}
| | | | | | | | | F    
| | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | | | | | | F  = 2 , num_top_rules = 0 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | | | | | | | F  = 68} , self = 99 , parent = Nothing , duration = 0.459593547000 , status
| | | | | | | | | | F  = Fail , start = 2025-09-04 08:23:49.868140852 UTC , finish = 2025-09-04
| | | | | | | | | | F  08:23:50.327734399 UTC , thread_cap_info = ("ThreadId 174", 2, False)}
| | | | | | | | | | F  
F | | | | | | | | | |  
F | | | | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
F | | | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F | | | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F | | | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
F | | | | | | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
F | | | | | | | | | |  = 2 , total_length = 26} , self = 103 , parent = Nothing , duration = 0.484059746000
F | | | | | | | | | |  , status = Fail , start = 2025-09-04 08:23:49.978396025 UTC , finish =
F | | | | | | | | | |  2025-09-04 08:23:50.462455771 UTC , thread_cap_info = ("ThreadId 176",
F | | | | | | | | | |  1, False)}
F | | | | | | | | | |  
| F | | | | | | | | |  
|   | | F | | | | | |  
| E | |   | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| E | |   | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | |   | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | |   | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | |   | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | |   | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| E | |   | | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| E | |   | | | | | |  = 4 , total_length = 28} , self = 119 , parent = Nothing , duration = 0.465985242000
| E | |   | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:23:50.111978356
| E | |   | | | | | |  UTC , finish = 2025-09-04 08:23:50.577963598 UTC , thread_cap_info = ("ThreadId
| E | |   | | | | | |  183", 3, False)}
| E | |   | | | | | |  
| | | |   F | | | | |  
| | | | S   | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | S   | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | S   | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | S   | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S   | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S   | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | S   | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | | | S   | | | | |  = 4 , total_length = 28} , self = 107 , parent = Nothing , duration = 0.461647138000
| | | | S   | | | | |  , status = Success , start = 2025-09-04 08:23:50.112605664 UTC , finish
| | | | S   | | | | |  = 2025-09-04 08:23:50.574252802 UTC , thread_cap_info = ("ThreadId 184",
| | | | S   | | | | |  3, False)}
| | | | S   | | | | |  
| | | | |   | | | F |  
| | | | |   | | |   F  
| | | | |   | | F      
| | | | |   | F        
| | | F |   |          
F | |   |   |          
E | |   |   |          Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E | |   |   |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | |   |   |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | |   |   |          , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | |   |   |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | |   |   |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
E | |   |   |          , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
E | |   |   |          = 2 , total_length = 26} , self = 109 , parent = Nothing , duration = 0.112458898000
E | |   |   |          , status = Except "AsyncCancelled" , start = 2025-09-04 08:23:50.462515207
E | |   |   |          UTC , finish = 2025-09-04 08:23:50.574974105 UTC , thread_cap_info = ("ThreadId
E | |   |   |          194", 1, False)}
E | |   |   |          
| | F   |   |          
| |     |   S          
| |     S              
E |                    
F |                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |                    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
F |                    = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 2 , total_length
F |                    = 20} , self = 123 , parent = Nothing , duration = 0.108202301000 , status
F |                    = Fail , start = 2025-09-04 08:23:50.575086971 UTC , finish = 2025-09-04
F |                    08:23:50.683289272 UTC , thread_cap_info = ("ThreadId 207", 3, False)}
F |                    
| | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | F                  = 2 , num_top_rules = 0 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | F                  = 68} , self = 125 , parent = Nothing , duration = 0.111645337000 , status
| | F                  = Fail , start = 2025-09-04 08:23:50.575406051 UTC , finish = 2025-09-04
| | F                  08:23:50.687051388 UTC , thread_cap_info = ("ThreadId 213", 1, False)}
| | F                  
| E |                  
| F |                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F |                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F |                  = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| F |                  = 2 , num_top_rules = 0 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| F |                  = 68} , self = 124 , parent = Nothing , duration = 0.108650742000 , status
| F |                  = Fail , start = 2025-09-04 08:23:50.578386029 UTC , finish = 2025-09-04
| F |                  08:23:50.687036771 UTC , thread_cap_info = ("ThreadId 215", 1, False)}
| F |                  
F | |                  
  F |                  
    F                  
