[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 582 length 2547
last 502 length 2293
CNF 502 vars 2293 clauses
last 504 length 2263
CNF 504 vars 2263 clauses
last 435 length 1866
CNF 435 vars 1866 clauses
last 403 length 1717
CNF 403 vars 1717 clauses
last 1071 length 4547
CNF 1071 vars 4547 clauses
last 1258 length 5689
CNF 1258 vars 5689 clauses
last 1071 length 4547
CNF 1071 vars 4547 clauses
last 1258 length 5689
CNF 1258 vars 5689 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2079, clauses: 7890
last 2079 length 7890
CNF 2079 vars 7890 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2079, clauses: 7890, status: Unsatisfied, time: 0.55549344s
last 4056 length 17575
CNF 4056 vars 17575 clauses
last 5404 length 24034
CNF 5404 vars 24034 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5116, clauses: 19399
last 5116 length 19399
CNF 5116 vars 19399 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13827, clauses: 57266
last 13827 length 57266
CNF 13827 vars 57266 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5116, clauses: 19399, status: Unsatisfied, time: 0.641630558s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13827, clauses: 57266, status: Satisfied, time: 0.436709913s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 3 letters       mirror
SRS with 1 strict rules and 2 weak rules on 3 letters       context
SRS with 1 strict rules and 6 weak rules on 3 letters       mirror
SRS with 1 strict rules and 6 weak rules on 3 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, c] -> [c] {- Input 0 -}
  [a, b] ->= [] {- Input 1 -}
  [] ->= [b, a, a] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [c, b] -> [c] {- Mirror (Input 0) -}
  [b, a] ->= [] {- Mirror (Input 1) -}
  [] ->= [a, a, b] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [c, b] -> [c] {- Mirror (Input 0) -}
  [a, b, a] ->= [a] {- Mirror (Input 1) -}
  [b, b, a] ->= [b] {- Mirror (Input 1) -}
  [c, b, a] ->= [c] {- Mirror (Input 1) -}
  [a] ->= [a, a, a, b] {- Mirror (Input 2) -}
  [b] ->= [b, a, a, b] {- Mirror (Input 2) -}
  [c] ->= [c, a, a, b] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, c] -> [c] {- Input 0 -}
  [a, b, a] ->= [a] {- Input 1 -}
  [a, b, b] ->= [b] {- Input 1 -}
  [a, b, c] ->= [c] {- Input 1 -}
  [a] ->= [b, a, a, a] {- Input 2 -}
  [b] ->= [b, a, a, b] {- Input 2 -}
  [c] ->= [b, a, a, c] {- Input 2 -}
reason
  ( a
  , St  / 0A -2A -1A \
        | -  -1A -   |
        \ -  -2A -   / )
  ( b
  , St  / 0A 0A 2A  \
        | -  1A 0A  |
        \ -  0A -1A / )
  ( c
  , St  / 0A  - -2A \
        | 0A  - -1A |
        \ -1A - -2A / )
   property Termination
has value Just True
for SRS
  [a, b, a] ->= [a] {- Input 1 -}
  [a, b, b] ->= [b] {- Input 1 -}
  [a, b, c] ->= [c] {- Input 1 -}
  [a] ->= [b, a, a, a] {- Input 2 -}
  [b] ->= [b, a, a, b] {- Input 2 -}
  [c] ->= [b, a, a, c] {- Input 2 -}
reason
  no strict rules

**************************************************
skeleton: \Mirror(1/2,3)\Context\Mirror(1/6,3)\Matrix{\ArcticBZ}{3}(0/6,3)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 2.428190817000
  min duration 0.027326672000
  total durat. 3.720488451000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 39
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 36
      , alphabet_size = 9
      , total_length = 249}
    , self = 92
    , parent = Nothing
    , duration = 2.428190817000
    , status = Fail
    , start = 2025-09-04 08:25:52.112022597 UTC
    , finish = 2025-09-04 08:25:54.540213414 UTC
    , thread_cap_info = ("ThreadId 148", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.972545222000
  min duration 0.054951862000
  total durat. 3.675431004000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 39
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 36
      , alphabet_size = 9
      , total_length = 249}
    , self = 90
    , parent = Nothing
    , duration = 1.972545222000
    , status = Fail
    , start = 2025-09-04 08:25:52.133358825 UTC
    , finish = 2025-09-04 08:25:54.105904047 UTC
    , thread_cap_info = ("ThreadId 150", 1, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 4.342966315000
  min duration 4.342966315000
  total durat. 4.342966315000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 30}
    , self = 96
    , parent = Nothing
    , duration = 4.342966315000
    , status = Success
    , start = 2025-09-04 08:25:51.87532883 UTC
    , finish = 2025-09-04 08:25:56.218295145 UTC
    , thread_cap_info = ("ThreadId 140", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.979993490000
  min duration 2.979993490000
  total durat. 2.979993490000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 30}
    , self = 98
    , parent = Nothing
    , duration = 2.979993490000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:25:53.271010897 UTC
    , finish = 2025-09-04 08:25:56.251004387 UTC
    , thread_cap_info = ("ThreadId 164", 1, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.389899428000
  min duration 1.250929059000
  total durat. 3.640828487000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 30}
    , self = 88
    , parent = Nothing
    , duration = 1.250929059000
    , status = Fail
    , start = 2025-09-04 08:25:51.951212821 UTC
    , finish = 2025-09-04 08:25:53.20214188 UTC
    , thread_cap_info = ("ThreadId 144", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 69}
    , self = 95
    , parent = Nothing
    , duration = 2.389899428000
    , status = Fail
    , start = 2025-09-04 08:25:52.614149889 UTC
    , finish = 2025-09-04 08:25:55.004049317 UTC
    , thread_cap_info = ("ThreadId 161", 2, False)}
Fail : "Unlabel\n { accept_null_strict = True\n , produce_null_strict = False\n , verbose = False\n , tracing = False}"
  total number 4
  max duration 1.068570876000
  min duration 0.000006165000
  total durat. 1.133714343000
  Info
    { what = "Unlabel\n  { accept_null_strict = True\n  , produce_null_strict = False\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 438
      , num_strict_rules = 81
      , num_top_rules = 0
      , num_weak_rules = 357
      , alphabet_size = 81
      , total_length = 2886}
    , self = 91
    , parent = Nothing
    , duration = 1.068570876000
    , status = Fail
    , start = 2025-09-04 08:25:53.435666018 UTC
    , finish = 2025-09-04 08:25:54.504236894 UTC
    , thread_cap_info = ("ThreadId 166", 2, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 4
  max duration 1.123821499000
  min duration 0.000236049000
  total durat. 1.124827199000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 1215
      , num_strict_rules = 243
      , num_top_rules = 0
      , num_weak_rules = 972
      , alphabet_size = 81
      , total_length = 8019}
    , self = 89
    , parent = Nothing
    , duration = 1.123821499000
    , status = Success
    , start = 2025-09-04 08:25:52.212761329 UTC
    , finish = 2025-09-04 08:25:53.336582828 UTC
    , thread_cap_info = ("ThreadId 157", 2, False)}
**************************************************
E                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                  = False}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
E                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
E                  = 5} , self = 65 , parent = Nothing , duration = 0.136908060000 , status
E                  = Except "AsyncCancelled" , start = 2025-09-04 08:25:51.695208412 UTC ,
E                  finish = 2025-09-04 08:25:51.832116472 UTC , thread_cap_info = ("ThreadId
E                  20", 3, False)}
E                  
E                  
F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                  = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
F                  = 3 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 9 , total_length
F                  = 69} , self = 84 , parent = Nothing , duration = 0.358622647000 , status
F                  = Fail , start = 2025-09-04 08:25:51.85411686 UTC , finish = 2025-09-04
F                  08:25:52.212739507 UTC , thread_cap_info = ("ThreadId 134", 2, False)}
F                  
| F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| F                = 3 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| F                = 69} , self = 85 , parent = Nothing , duration = 0.644461874000 , status
| F                = Fail , start = 2025-09-04 08:25:51.875326213 UTC , finish = 2025-09-04
| F                08:25:52.519788087 UTC , thread_cap_info = ("ThreadId 135", 2, False)}
| F                
| | S              Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | S              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | S              , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | S              = 3 , total_length = 30} , self = 96 , parent = Nothing , duration = 4.342966315000
| | S              , status = Success , start = 2025-09-04 08:25:51.87532883 UTC , finish
| | S              = 2025-09-04 08:25:56.218295145 UTC , thread_cap_info = ("ThreadId 140",
| | S              1, False)}
| | S              
| | | S            Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | S            , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | S            , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | S            = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | S            , cpf = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | S            = 3 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | S            = 69} , self = 83 , parent = Nothing , duration = 0.278605071000 , status
| | | S            = Success , start = 2025-09-04 08:25:51.9235079 UTC , finish = 2025-09-04
| | | S            08:25:52.202112971 UTC , thread_cap_info = ("ThreadId 136", 2, False)}
| | | S            
| | | | F          Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | F          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | F          , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | | F          = 3 , total_length = 30} , self = 88 , parent = Nothing , duration = 1.250929059000
| | | | F          , status = Fail , start = 2025-09-04 08:25:51.951212821 UTC , finish =
| | | | F          2025-09-04 08:25:53.20214188 UTC , thread_cap_info = ("ThreadId 144", 1,
| | | | F          False)}
| | | | F          
| | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 39 , num_strict_rules
| | | | | F        = 3 , num_top_rules = 0 , num_weak_rules = 36 , alphabet_size = 9 , total_length
| | | | | F        = 249} , self = 92 , parent = Nothing , duration = 2.428190817000 , status
| | | | | F        = Fail , start = 2025-09-04 08:25:52.112022597 UTC , finish = 2025-09-04
| | | | | F        08:25:54.540213414 UTC , thread_cap_info = ("ThreadId 148", 1, False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 39 , num_strict_rules
| | | | | | F      = 3 , num_top_rules = 0 , num_weak_rules = 36 , alphabet_size = 9 , total_length
| | | | | | F      = 249} , self = 90 , parent = Nothing , duration = 1.972545222000 , status
| | | | | | F      = Fail , start = 2025-09-04 08:25:52.133358825 UTC , finish = 2025-09-04
| | | | | | F      08:25:54.105904047 UTC , thread_cap_info = ("ThreadId 150", 1, False)}
| | | | | | F      
| | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | | | | | F    = 3 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | | | F    = 69} , self = 86 , parent = Nothing , duration = 0.845436641000 , status
| | | | | | | F    = Fail , start = 2025-09-04 08:25:52.154446606 UTC , finish = 2025-09-04
| | | | | | | F    08:25:52.999883247 UTC , thread_cap_info = ("ThreadId 152", 1, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | | | | | | F  = 3 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | | | | F  = 69} , self = 87 , parent = Nothing , duration = 0.907290772000 , status
| | | | | | | | F  = Fail , start = 2025-09-04 08:25:52.170995674 UTC , finish = 2025-09-04
| | | | | | | | F  08:25:53.078286446 UTC , thread_cap_info = ("ThreadId 154", 1, False)}
| | | | | | | | F  
| | | S | | | | |  
F | |   | | | | |  
S | |   | | | | |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
S | |   | | | | |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
S | |   | | | | |  = Size { num_rules = 1215 , num_strict_rules = 243 , num_top_rules = 0
S | |   | | | | |  , num_weak_rules = 972 , alphabet_size = 81 , total_length = 8019} , self
S | |   | | | | |  = 89 , parent = Nothing , duration = 1.123821499000 , status = Success
S | |   | | | | |  , start = 2025-09-04 08:25:52.212761329 UTC , finish = 2025-09-04 08:25:53.336582828
S | |   | | | | |  UTC , thread_cap_info = ("ThreadId 157", 2, False)}
S | |   | | | | |  
| F |   | | | | |  
| F |   | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| F |   | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F |   | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F |   | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F |   | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F |   | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 15
| F |   | | | | |  , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size
| F |   | | | | |  = 9 , total_length = 69} , self = 95 , parent = Nothing , duration = 2.389899428000
| F |   | | | | |  , status = Fail , start = 2025-09-04 08:25:52.614149889 UTC , finish =
| F |   | | | | |  2025-09-04 08:25:55.004049317 UTC , thread_cap_info = ("ThreadId 161",
| F |   | | | | |  2, False)}
| F |   | | | | |  
| | |   | | | F |  
| | |   | | |   F  
| | |   F | |      
| | | E   | |      Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | E   | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E   | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E   | |      , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E   | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E   | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | E   | |      , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | E   | |      = 3 , total_length = 30} , self = 98 , parent = Nothing , duration = 2.979993490000
| | | E   | |      , status = Except "AsyncCancelled" , start = 2025-09-04 08:25:53.271010897
| | | E   | |      UTC , finish = 2025-09-04 08:25:56.251004387 UTC , thread_cap_info = ("ThreadId
| | | E   | |      164", 1, False)}
| | | E   | |      
S | | |   | |      
F | | |   | |      Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
F | | |   | |      = False\n , verbose = False\n , tracing = False}" , input_size = Size {
F | | |   | |      num_rules = 438 , num_strict_rules = 81 , num_top_rules = 0 , num_weak_rules
F | | |   | |      = 357 , alphabet_size = 81 , total_length = 2886} , self = 91 , parent
F | | |   | |      = Nothing , duration = 1.068570876000 , status = Fail , start = 2025-09-04
F | | |   | |      08:25:53.435666018 UTC , finish = 2025-09-04 08:25:54.504236894 UTC , thread_cap_info
F | | |   | |      = ("ThreadId 166", 2, False)}
F | | |   | |      
| | | |   | F      
F | | |   |        
  | | |   F        
  F | |            
    S |            
      E            
