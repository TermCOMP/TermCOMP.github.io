last 12436 length 53056
CNF 12436 vars 53056 clauses
last 15211 length 64392
CNF 15211 vars 64392 clauses
last 1823 length 7493
last 1671 length 6755
CNF 1823 vars 7493 clauses
CNF 1671 vars 6755 clauses
last 1536 length 6225
last 1422 length 5789
CNF 1422 vars 5789 clauses
CNF 1536 vars 6225 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4839, clauses: 18002
last 4839 length 18002
CNF 4839 vars 18002 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4839, clauses: 18002, status: Satisfied, time: 0.136574196s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4248, clauses: 15752
last 4248 length 15752
CNF 4248 vars 15752 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4248, clauses: 15752, status: Satisfied, time: 0.049298291s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14236, clauses: 59738
last 1598 length 6437
CNF 1598 vars 6437 clauses
last 1662 length 6849
CNF 1662 vars 6849 clauses
last 1436 length 5793
last 1252 length 5113
CNF 1436 vars 5793 clauses
CNF 1252 vars 5113 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4637, clauses: 17145
last 4637 length 17145
CNF 4637 vars 17145 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3851, clauses: 14250
last 3851 length 14250
CNF 3851 vars 14250 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4637, clauses: 17145, status: Satisfied, time: 0.188447173s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3851, clauses: 14250, status: Satisfied, time: 0.072526415s
last 1256 length 5095
CNF 1256 vars 5095 clauses
last 1462 length 5881
CNF 1462 vars 5881 clauses
last 1226 length 4957
last 1508 length 6175
CNF 1508 vars 6175 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3724, clauses: 13573
last 3724 length 13573
CNF 1226 vars 4957 clauses
CNF 3724 vars 13573 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4333, clauses: 15940
last 4333 length 15940
CNF 4333 vars 15940 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4333, clauses: 15940, status: Satisfied, time: 0.104199582s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14562, clauses: 61035
last 14562 length 61035
CNF 14562 vars 61035 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3724, clauses: 13573, status: Unsatisfied, time: 0.420641152s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13561, clauses: 56879
last 13561 length 56879
CNF 13561 vars 56879 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8277, clauses: 33773
last 8277 length 33773
last 1164 length 4673
CNF 8277 vars 33773 clauses
CNF 1164 vars 4673 clauses
last 1266 length 5139
CNF 1266 vars 5139 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3622, clauses: 13216
last 3622 length 13216
CNF 3622 vars 13216 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3622, clauses: 13216, status: Satisfied, time: 0.081207752s
last 958 length 3817
last 1138 length 4551
CNF 958 vars 3817 clauses
CNF 1138 vars 4551 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3222, clauses: 11702
last 3222 length 11702
CNF 3222 vars 11702 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3222, clauses: 11702, status: Unsatisfied, time: 0.105412814s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7358, clauses: 30009
last 7358 length 30009
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12057, clauses: 50503
last 12057 length 50503
CNF 12057 vars 50503 clauses
CNF 7358 vars 30009 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7358, clauses: 30009, status: Satisfied, time: 0.533646168s
**************************************************
summary
**************************************************
SRS with 3 strict rules and 4 weak rules on 3 letters       strictify
SRS with 7 rules on 3 letters       mirror
SRS with 7 rules on 3 letters       DP
SRS with 17 strict rules and 7 weak rules on 6 letters       weights
SRS with 7 strict rules and 7 weak rules on 6 letters       EDG
SRS with 7 strict rules and 7 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 6 strict rules and 7 weak rules on 6 letters       EDG
SRS with 6 strict rules and 7 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 5 strict rules and 7 weak rules on 6 letters       EDG
SRS with 5 strict rules and 7 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 7 weak rules on 6 letters       weights
SRS with 3 strict rules and 7 weak rules on 5 letters       EDG
SRS with 3 strict rules and 7 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 7 weak rules on 5 letters       EDG
SRS with 2 strict rules and 7 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 7 weak rules on 5 letters       weights
SRS with 0 strict rules and 7 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, c, b] -> [a, b, b] {- Input 0 -}
  [a, c, c] -> [c, a, a] {- Input 1 -}
  [b, c, a] -> [a, b, a] {- Input 2 -}
  [b, c, b] ->= [b, c, c] {- Input 3 -}
  [a, b, c] ->= [b, b, b] {- Input 4 -}
  [c, a, c] ->= [c, b, a] {- Input 5 -}
  [a, a, a] ->= [a, c, c] {- Input 6 -}
reason
  strictify
   property Termination
has value Just True
for SRS
  [b, c, b] -> [a, b, b] {- Input 0 -}
  [a, c, c] -> [c, a, a] {- Input 1 -}
  [b, c, a] -> [a, b, a] {- Input 2 -}
  [b, c, b] -> [b, c, c] {- Strictified (Input 3) -}
  [a, b, c] -> [b, b, b] {- Strictified (Input 4) -}
  [c, a, c] -> [c, b, a] {- Strictified (Input 5) -}
  [a, a, a] -> [a, c, c] {- Strictified (Input 6) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, c, b] -> [b, b, a] {- Mirror (Input 0) -}
  [c, c, a] -> [a, a, c] {- Mirror (Input 1) -}
  [a, c, b] -> [a, b, a] {- Mirror (Input 2) -}
  [b, c, b] -> [c, c, b] {- Mirror (Strictified (Input 3)) -}
  [c, b, a] -> [b, b, b] {- Mirror (Strictified (Input 4)) -}
  [c, a, c] -> [a, b, c] {- Mirror (Strictified (Input 5)) -}
  [a, a, a] -> [c, c, a] {- Mirror (Strictified (Input 6)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, c, b] ->= [b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, c, a] ->= [a, a, c] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, c, b] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [c, b, a] ->= [b, b, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [c, a, c] ->= [a, b, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 6))) -}
  [a#, a, a] |-> [c#, a] {- DP (Top 1) (Mirror (Strictified (Input 6))) -}
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 6))) -}
  [a#, c, b] |-> [a#] {- DP (Top 2) (Mirror (Input 2)) -}
  [a#, c, b] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [a#, c, b] |-> [b#, a] {- DP (Top 1) (Mirror (Input 2)) -}
  [b#, c, b] |-> [a#] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, c, b] |-> [b#, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, c, b] |-> [b#, b, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, c, b] |-> [c#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [c#, a, c] |-> [a#, b, c] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [c#, a, c] |-> [b#, c] {- DP (Top 1) (Mirror (Strictified (Input 5))) -}
  [c#, b, a] |-> [b#] {- DP (Top 2) (Mirror (Strictified (Input 4))) -}
  [c#, b, a] |-> [b#, b] {- DP (Top 1) (Mirror (Strictified (Input 4))) -}
  [c#, b, a] |-> [b#, b, b] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [c#, c, a] |-> [a#, a, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, c, a] |-> [a#, c] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, c, a] |-> [c#] {- DP (Top 2) (Mirror (Input 1)) -}
reason
  (a, 1/1)
  (b, 1/1)
  (c, 1/1)
  (a#, 0/1)
  (b#, 0/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [b, c, b] ->= [b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, c, a] ->= [a, a, c] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, c, b] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [c, b, a] ->= [b, b, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [c, a, c] ->= [a, b, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 6))) -}
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 6))) -}
  [a#, c, b] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, c, b] |-> [b#, b, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, c, b] |-> [c#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [c#, a, c] |-> [a#, b, c] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [c#, b, a] |-> [b#, b, b] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [c#, c, a] |-> [a#, a, c] {- DP (Top 0) (Mirror (Input 1)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 6))) -}
  [c#, a, c] |-> [a#, b, c] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [a#, c, b] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, b, a] |-> [b#, b, b] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [b#, c, b] |-> [b#, b, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, c, b] |-> [c#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [c#, c, a] |-> [a#, a, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [b, c, b] ->= [b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, c, a] ->= [a, a, c] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, c, b] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [c, b, a] ->= [b, b, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [c, a, c] ->= [a, b, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 6))) -}
reason
  ( a
  , Wk  / 3A 6A 6A - \
        | 3A 6A 6A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 6A 6A 9A - \
        | 3A 6A 6A - |
        | 3A 6A 6A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 6A 6A 9A - \
        | 3A 6A 6A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 9A 12A 12A - \
        | 9A 12A 12A - |
        | 9A 12A 12A - |
        \ -  -   -   - / )
  ( b#
  , Wk  / 9A 10A 11A - \
        | 9A 10A 11A - |
        | 9A 10A 11A - |
        \ -  -   -   - / )
  ( c#
  , Wk  / 9A 12A 12A - \
        | 9A 12A 12A - |
        | 9A 12A 12A - |
        \ -  -   -   - / )
   property Termination
has value Just True
for SRS
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 6))) -}
  [c#, a, c] |-> [a#, b, c] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [a#, c, b] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, b, a] |-> [b#, b, b] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [b#, c, b] |-> [c#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [c#, c, a] |-> [a#, a, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [b, c, b] ->= [b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, c, a] ->= [a, a, c] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, c, b] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [c, b, a] ->= [b, b, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [c, a, c] ->= [a, b, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 6))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 6))) -}
  [c#, a, c] |-> [a#, b, c] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [a#, c, b] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, b, a] |-> [b#, b, b] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [b#, c, b] |-> [c#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [c#, c, a] |-> [a#, a, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [b, c, b] ->= [b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, c, a] ->= [a, a, c] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, c, b] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [c, b, a] ->= [b, b, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [c, a, c] ->= [a, b, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 6))) -}
reason
  ( a
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( c
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( a#
  , Wk  / 10A 10A 11A - \
        | 10A 10A 11A - |
        | 10A 10A 11A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 6A 9A 9A - \
        | 6A 9A 9A - |
        | 6A 9A 9A - |
        \ -  -  -  - / )
  ( c#
  , Wk  / 9A 9A 11A - \
        | 9A 9A 11A - |
        | 9A 9A 11A - |
        \ -  -  -   - / )
   property Termination
has value Just True
for SRS
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 6))) -}
  [a#, c, b] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, b, a] |-> [b#, b, b] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [b#, c, b] |-> [c#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [c#, c, a] |-> [a#, a, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [b, c, b] ->= [b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, c, a] ->= [a, a, c] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, c, b] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [c, b, a] ->= [b, b, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [c, a, c] ->= [a, b, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 6))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 6))) -}
  [c#, b, a] |-> [b#, b, b] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [b#, c, b] |-> [c#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [c#, c, a] |-> [a#, a, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [a#, c, b] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b, c, b] ->= [b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, c, a] ->= [a, a, c] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, c, b] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [c, b, a] ->= [b, b, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [c, a, c] ->= [a, b, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 6))) -}
reason
  ( a
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( c
  , Wk  / 0A  0A  0A - \
        | -3A -3A 0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( a#
  , Wk  / 22A 22A 24A - \
        | 22A 22A 24A - |
        | 22A 22A 24A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 24A 24A 24A - \
        | 24A 24A 24A - |
        | 24A 24A 24A - |
        \ -   -   -   - / )
  ( c#
  , Wk  / 21A 24A 24A - \
        | 21A 24A 24A - |
        | 21A 24A 24A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 6))) -}
  [c#, b, a] |-> [b#, b, b] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [c#, c, a] |-> [a#, a, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [a#, c, b] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b, c, b] ->= [b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, c, a] ->= [a, a, c] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, c, b] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [c, b, a] ->= [b, b, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [c, a, c] ->= [a, b, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 6))) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 6))) -}
  [c#, c, a] |-> [a#, a, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [a#, c, b] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b, c, b] ->= [b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, c, a] ->= [a, a, c] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, c, b] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [c, b, a] ->= [b, b, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [c, a, c] ->= [a, b, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 6))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 6))) -}
  [c#, c, a] |-> [a#, a, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [a#, c, b] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b, c, b] ->= [b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, c, a] ->= [a, a, c] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, c, b] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [c, b, a] ->= [b, b, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [c, a, c] ->= [a, b, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 6))) -}
reason
  ( a
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( b
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( c
  , Wk  / 0A  0A 0A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( a#
  , Wk  / 3A 4A 6A - \
        | 3A 4A 6A - |
        | 3A 4A 6A - |
        \ -  -  -  - / )
  ( c#
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 6))) -}
  [c#, c, a] |-> [a#, a, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [b, c, b] ->= [b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, c, a] ->= [a, a, c] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, c, b] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [c, b, a] ->= [b, b, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [c, a, c] ->= [a, b, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 6))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, a] |-> [c#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 6))) -}
  [c#, c, a] |-> [a#, a, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [b, c, b] ->= [b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, c, a] ->= [a, a, c] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, c, b] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [c, b, a] ->= [b, b, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [c, a, c] ->= [a, b, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 6))) -}
reason
  ( a
  , Wk  / 0 1 1 \
        | 1 1 1 |
        \ 0 0 1 / )
  ( b
  , Wk  / 0 0 0 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( c
  , Wk  / 0 1 0 \
        | 1 1 0 |
        \ 0 0 1 / )
  ( a#
  , Wk  / 1 1 5 \
        | 0 0 0 |
        \ 0 0 1 / )
  ( c#
  , Wk  / 1 1 4 \
        | 0 0 0 |
        \ 0 0 1 / )
   property Termination
has value Just True
for SRS
  [c#, c, a] |-> [a#, a, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [b, c, b] ->= [b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, c, a] ->= [a, a, c] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, c, b] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [c, b, a] ->= [b, b, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [c, a, c] ->= [a, b, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 6))) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [b, c, b] ->= [b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, c, a] ->= [a, a, c] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, b] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, c, b] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [c, b, a] ->= [b, b, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [c, a, c] ->= [a, b, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a, a, a] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 6))) -}
reason
  EDG

**************************************************
skeleton: (3/4,3)\Strictify\Mirror(7,3)\Deepee(17/7,6)\Weight\EDG(7/7,6)\Matrix{\Arctic}{3}\EDG(6/7,6)\Matrix{\Arctic}{3}\EDG(5/7,6)\Matrix{\Arctic}{3}(4/7,6)\Weight\EDG(3/7,5)\Matrix{\Arctic}{3}\EDG(2/7,5)\Matrix{\Natural}{3}(1/7,5)\Weight(0/7,3)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.479936003000
  min duration 0.042570861000
  total durat. 1.147651362000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.403146563000
  min duration 0.030374581000
  total durat. 1.202435572000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 7
  max duration 1.037007589000
  min duration 0.240218935000
  total durat. 3.168538304000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 7
      , alphabet_size = 5
      , total_length = 54}
    , self = 154
    , parent = Nothing
    , duration = 1.037007589000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:20:58.269886442 UTC
    , finish = 2025-09-04 08:20:59.306894031 UTC
    , thread_cap_info = ("ThreadId 234", 1, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.398431533000
  min duration 0.205059853000
  total durat. 1.726186093000
**************************************************
F          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F          = False}" , input_size = Size { num_rules = 7 , num_strict_rules = 7 ,
F          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F          = 42} , self = 69 , parent = Nothing , duration = 0.109424960000 , status
F          = Fail , start = 2025-09-04 08:20:55.555084962 UTC , finish = 2025-09-04
F          08:20:55.664509922 UTC , thread_cap_info = ("ThreadId 74", 3, False)}
F          
| F        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F        = Size { num_rules = 7 , num_strict_rules = 7 , num_top_rules = 0 , num_weak_rules
| F        = 0 , alphabet_size = 3 , total_length = 42} , self = 74 , parent = Nothing
| F        , duration = 0.448269169000 , status = Fail , start = 2025-09-04 08:20:55.576763995
| F        UTC , finish = 2025-09-04 08:20:56.025033164 UTC , thread_cap_info = ("ThreadId
| F        108", 2, False)}
| F        
| | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F      = False\n , verbose = False}" , input_size = Size { num_rules = 63 , num_strict_rules
| | F      = 63 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F      = 504} , self = 86 , parent = Nothing , duration = 0.479936003000 , status
| | F      = Fail , start = 2025-09-04 08:20:55.583227325 UTC , finish = 2025-09-04
| | F      08:20:56.063163328 UTC , thread_cap_info = ("ThreadId 121", 1, False)}
| | F      
| | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 63 , num_strict_rules
| | | F    = 63 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F    = 504} , self = 73 , parent = Nothing , duration = 0.403146563000 , status
| | | F    = Fail , start = 2025-09-04 08:20:55.583233006 UTC , finish = 2025-09-04
| | | F    08:20:55.986379569 UTC , thread_cap_info = ("ThreadId 123", 1, False)}
| | | F    
| | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | | | F  { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | | | F  = MSB_First}\n , max_size = Nothing\n , max_height = Just 5\n , initial
| | | | F  = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | | | F  = False}" , input_size = Size { num_rules = 7 , num_strict_rules = 7 ,
| | | | F  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | | F  = 42} , self = 70 , parent = Nothing , duration = 0.123208443000 , status
| | | | F  = Fail , start = 2025-09-04 08:20:55.62335964 UTC , finish = 2025-09-04
| | | | F  08:20:55.746568083 UTC , thread_cap_info = ("ThreadId 132", 3, False)}
| | | | F  
F | | | |  
  | | | F  
F | | |    Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
F | | |    { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
F | | |    = MSB_First}\n , max_size = Nothing\n , max_height = Just 5\n , initial
F | | |    = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
F | | |    = False}" , input_size = Size { num_rules = 7 , num_strict_rules = 7 ,
F | | |    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F | | |    = 42} , self = 72 , parent = Nothing , duration = 0.127071574000 , status
F | | |    = Fail , start = 2025-09-04 08:20:55.823180605 UTC , finish = 2025-09-04
F | | |    08:20:55.950252179 UTC , thread_cap_info = ("ThreadId 133", 3, False)}
F | | |    
F | | |    
  | | F    
  F |      
    F      
F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F          = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
F          = 5 , num_top_rules = 5 , num_weak_rules = 7 , alphabet_size = 5 , total_length
F          = 72} , self = 94 , parent = Nothing , duration = 0.109417800000 , status
F          = Fail , start = 2025-09-04 08:20:56.074994804 UTC , finish = 2025-09-04
F          08:20:56.184412604 UTC , thread_cap_info = ("ThreadId 153", 1, False)}
F          
| F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F        = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| F        = 5 , num_top_rules = 5 , num_weak_rules = 7 , alphabet_size = 5 , total_length
| F        = 72} , self = 95 , parent = Nothing , duration = 0.126562323000 , status
| F        = Fail , start = 2025-09-04 08:20:56.076725739 UTC , finish = 2025-09-04
| F        08:20:56.203288062 UTC , thread_cap_info = ("ThreadId 154", 1, False)}
| F        
| | S      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S      = 14 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 7 ,
| | S      alphabet_size = 6 , total_length = 84} , self = 96 , parent = Nothing ,
| | S      duration = 0.205059853000 , status = Success , start = 2025-09-04 08:20:56.137954715
| | S      UTC , finish = 2025-09-04 08:20:56.343014568 UTC , thread_cap_info = ("ThreadId
| | S      157", 1, False)}
| | S      
| | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | | E    , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 7 , alphabet_size
| | | E    = 6 , total_length = 84} , self = 98 , parent = Nothing , duration = 0.281073703000
| | | E    , status = Except "AsyncCancelled" , start = 2025-09-04 08:20:56.163180938
| | | E    UTC , finish = 2025-09-04 08:20:56.444254641 UTC , thread_cap_info = ("ThreadId
| | | E    160", 1, False)}
| | | E    
F | | |    
  F | |    
S   | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S   | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S   | |    = 12 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 7 ,
S   | |    alphabet_size = 5 , total_length = 72} , self = 99 , parent = Nothing ,
S   | |    duration = 0.246703555000 , status = Success , start = 2025-09-04 08:20:56.20330815
S   | |    UTC , finish = 2025-09-04 08:20:56.450011705 UTC , thread_cap_info = ("ThreadId
S   | |    162", 1, False)}
S   | |    
| E | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| E | |    , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 7 , alphabet_size
| E | |    = 5 , total_length = 72} , self = 105 , parent = Nothing , duration = 0.254652277000
| E | |    , status = Except "AsyncCancelled" , start = 2025-09-04 08:20:56.243198893
| E | |    UTC , finish = 2025-09-04 08:20:56.49785117 UTC , thread_cap_info = ("ThreadId
| E | |    164", 1, False)}
| E | |    
| | S |    
| |   E    
S |        
  E        
F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F          = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
F          = 4 , num_top_rules = 4 , num_weak_rules = 7 , alphabet_size = 5 , total_length
F          = 66} , self = 112 , parent = Nothing , duration = 0.161676997000 , status
F          = Fail , start = 2025-09-04 08:20:56.53116225 UTC , finish = 2025-09-04
F          08:20:56.692839247 UTC , thread_cap_info = ("ThreadId 177", 1, False)}
F          
| F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F        = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| F        = 4 , num_top_rules = 4 , num_weak_rules = 7 , alphabet_size = 5 , total_length
| F        = 66} , self = 113 , parent = Nothing , duration = 0.165671555000 , status
| F        = Fail , start = 2025-09-04 08:20:56.532922321 UTC , finish = 2025-09-04
| F        08:20:56.698593876 UTC , thread_cap_info = ("ThreadId 179", 1, False)}
| F        
| | S      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S      = 13 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 7 ,
| | S      alphabet_size = 6 , total_length = 78} , self = 114 , parent = Nothing
| | S      , duration = 0.348013618000 , status = Success , start = 2025-09-04 08:20:56.556771955
| | S      UTC , finish = 2025-09-04 08:20:56.904785573 UTC , thread_cap_info = ("ThreadId
| | S      180", 1, False)}
| | S      
| | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 13
| | | E    , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 7 , alphabet_size
| | | E    = 6 , total_length = 78} , self = 118 , parent = Nothing , duration = 0.399949828000
| | | E    , status = Except "AsyncCancelled" , start = 2025-09-04 08:20:56.563443145
| | | E    UTC , finish = 2025-09-04 08:20:56.963392973 UTC , thread_cap_info = ("ThreadId
| | | E    182", 1, False)}
| | | E    
F | | |    
  F | |    
S   | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S   | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S   | |    = 11 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 7 ,
S   | |    alphabet_size = 5 , total_length = 66} , self = 116 , parent = Nothing
S   | |    , duration = 0.226984216000 , status = Success , start = 2025-09-04 08:20:56.720778022
S   | |    UTC , finish = 2025-09-04 08:20:56.947762238 UTC , thread_cap_info = ("ThreadId
S   | |    184", 1, False)}
S   | |    
| E | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| E | |    , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 7 , alphabet_size
| E | |    = 5 , total_length = 66} , self = 120 , parent = Nothing , duration = 0.240218935000
| E | |    , status = Except "AsyncCancelled" , start = 2025-09-04 08:20:56.743492383
| E | |    UTC , finish = 2025-09-04 08:20:56.983711318 UTC , thread_cap_info = ("ThreadId
| E | |    186", 1, False)}
| E | |    
| | S |    
S |   |    
  |   E    
  E        
F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F          = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
F          = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size = 5 , total_length
F          = 60} , self = 131 , parent = Nothing , duration = 0.251137307000 , status
F          = Fail , start = 2025-09-04 08:20:56.994338102 UTC , finish = 2025-09-04
F          08:20:57.245475409 UTC , thread_cap_info = ("ThreadId 198", 1, False)}
F          
| F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F        = 10 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 ,
| F        alphabet_size = 5 , total_length = 60} , self = 134 , parent = Nothing
| F        , duration = 0.454375408000 , status = Fail , start = 2025-09-04 08:20:57.041748627
| F        UTC , finish = 2025-09-04 08:20:57.496124035 UTC , thread_cap_info = ("ThreadId
| F        203", 1, False)}
| F        
| | S      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S      = 12 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 7 ,
| | S      alphabet_size = 6 , total_length = 72} , self = 132 , parent = Nothing
| | S      , duration = 0.300993318000 , status = Success , start = 2025-09-04 08:20:57.072588874
| | S      UTC , finish = 2025-09-04 08:20:57.373582192 UTC , thread_cap_info = ("ThreadId
| | S      205", 1, False)}
| | S      
| | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | E    , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 7 , alphabet_size
| | | E    = 6 , total_length = 72} , self = 135 , parent = Nothing , duration = 0.506376459000
| | | E    , status = Except "AsyncCancelled" , start = 2025-09-04 08:20:57.07952169
| | | E    UTC , finish = 2025-09-04 08:20:57.585898149 UTC , thread_cap_info = ("ThreadId
| | | E    207", 1, False)}
| | | E    
F | | |    
  | S |    
  F   |    
      E    
S          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S          = 10 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 ,
S          alphabet_size = 5 , total_length = 60} , self = 142 , parent = Nothing
S          , duration = 0.398431533000 , status = Success , start = 2025-09-04 08:20:57.746523229
S          UTC , finish = 2025-09-04 08:20:58.144954762 UTC , thread_cap_info = ("ThreadId
S          222", 1, False)}
S          
| E        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| E        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size
| E        = 5 , total_length = 60} , self = 144 , parent = Nothing , duration = 0.449259513000
| E        , status = Except "AsyncCancelled" , start = 2025-09-04 08:20:57.746531501
| E        UTC , finish = 2025-09-04 08:20:58.195791014 UTC , thread_cap_info = ("ThreadId
| E        223", 1, False)}
| E        
S |        
  E        
F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F          = 9 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
F          = 5 , total_length = 54} , self = 151 , parent = Nothing , duration = 0.162664615000
F          , status = Fail , start = 2025-09-04 08:20:58.238077491 UTC , finish =
F          2025-09-04 08:20:58.400742106 UTC , thread_cap_info = ("ThreadId 233",
F          1, False)}
F          
| E        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| E        , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
| E        = 5 , total_length = 54} , self = 154 , parent = Nothing , duration = 1.037007589000
| E        , status = Except "AsyncCancelled" , start = 2025-09-04 08:20:58.269886442
| E        UTC , finish = 2025-09-04 08:20:59.306894031 UTC , thread_cap_info = ("ThreadId
| E        234", 1, False)}
| E        
F |        
S |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
S |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
S |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
S |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
S |        , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 7 , alphabet_size
S |        = 5 , total_length = 54} , self = 152 , parent = Nothing , duration = 0.781240085000
S |        , status = Success , start = 2025-09-04 08:20:58.407798633 UTC , finish
S |        = 2025-09-04 08:20:59.189038718 UTC , thread_cap_info = ("ThreadId 236",
S |        1, False)}
S |        
S |        
  E        
