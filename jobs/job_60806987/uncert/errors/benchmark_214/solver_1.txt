last 8476 length 35690
CNF 8476 vars 35690 clauses
last 9687 length 41384
CNF 9687 vars 41384 clauses
last 786 length 3171
last 770 length 3181
CNF 770 vars 3181 clauses
CNF 786 vars 3171 clauses
last 1300 length 5345
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2264, clauses: 8121
last 2264 length 8121
CNF 1300 vars 5345 clauses
CNF 2264 vars 8121 clauses
last 1312 length 5297
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8666, clauses: 36223
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3790, clauses: 13963
last 8666 length 36223
CNF 1312 vars 5297 clauses
last 3790 length 13963
CNF 3790 vars 13963 clauses
CNF 8666 vars 36223 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2264, clauses: 8121, status: Satisfied, time: 0.197145556s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3790, clauses: 13963, status: Satisfied, time: 0.104340974s
last 1180 length 4827
last 1164 length 4693
last 821 length 3309
last 909 length 3715
CNF 1180 vars 4827 clauses
CNF 1164 vars 4693 clauses
last 10366 length 44347
CNF 821 vars 3309 clauses
CNF 909 vars 3715 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3486, clauses: 12758
last 13164 length 56333
CNF 10366 vars 44347 clauses
last 9370 length 39855
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2486, clauses: 9054
last 13704 length 58483
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11215, clauses: 46836
last 3486 length 12758
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9008, clauses: 37659
last 2486 length 9054
CNF 13164 vars 56333 clauses
CNF 9370 vars 39855 clauses
last 11215 length 46836
CNF 13704 vars 58483 clauses
CNF 3486 vars 12758 clauses
last 9008 length 37659
CNF 2486 vars 9054 clauses
CNF 11215 vars 46836 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15702, clauses: 59318
CNF 9008 vars 37659 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3486, clauses: 12758, status: Satisfied, time: 0.304622106s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2486, clauses: 9054, status: Satisfied, time: 0.354633046s
last 15702 length 59318
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9008, clauses: 37659, status: Satisfied, time: 0.763145686s
CNF 15702 vars 59318 clauses
last 948 length 3819
CNF 948 vars 3819 clauses
last 892 length 3651
CNF 892 vars 3651 clauses
**************************************************
summary
**************************************************
SRS with 2 strict rules and 3 weak rules on 3 letters       strictify
SRS with 5 rules on 3 letters       DP
SRS with 9 strict rules and 5 weak rules on 5 letters       weights
SRS with 3 strict rules and 5 weak rules on 5 letters       EDG
2 sub-proofs
  1 SRS with 1 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

  2 SRS with 2 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 1 strict rules and 5 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, c, b] -> [b, a, c] {- Input 0 -}
  [b, a, c] -> [b, c, a] {- Input 1 -}
  [a, c, c] ->= [c, c, b] {- Input 2 -}
  [a, c, a] ->= [a, b, b] {- Input 3 -}
  [b, b, b] ->= [c, c, a] {- Input 4 -}
reason
  strictify
   property Termination
has value Just True
for SRS
  [b, c, b] -> [b, a, c] {- Input 0 -}
  [b, a, c] -> [b, c, a] {- Input 1 -}
  [a, c, c] -> [c, c, b] {- Strictified (Input 2) -}
  [a, c, a] -> [a, b, b] {- Strictified (Input 3) -}
  [b, b, b] -> [c, c, a] {- Strictified (Input 4) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, c, b] ->= [b, a, c] {- DP Nontop (Input 0) -}
  [b, a, c] ->= [b, c, a] {- DP Nontop (Input 1) -}
  [a, c, c] ->= [c, c, b] {- DP Nontop (Strictified (Input 2)) -}
  [a, c, a] ->= [a, b, b] {- DP Nontop (Strictified (Input 3)) -}
  [b, b, b] ->= [c, c, a] {- DP Nontop (Strictified (Input 4)) -}
  [a#, c, a] |-> [a#, b, b] {- DP (Top 0) (Strictified (Input 3)) -}
  [a#, c, a] |-> [b#] {- DP (Top 2) (Strictified (Input 3)) -}
  [a#, c, a] |-> [b#, b] {- DP (Top 1) (Strictified (Input 3)) -}
  [a#, c, c] |-> [b#] {- DP (Top 2) (Strictified (Input 2)) -}
  [b#, a, c] |-> [a#] {- DP (Top 2) (Input 1) -}
  [b#, a, c] |-> [b#, c, a] {- DP (Top 0) (Input 1) -}
  [b#, b, b] |-> [a#] {- DP (Top 2) (Strictified (Input 4)) -}
  [b#, c, b] |-> [a#, c] {- DP (Top 1) (Input 0) -}
  [b#, c, b] |-> [b#, a, c] {- DP (Top 0) (Input 0) -}
reason
  (a, 1/1)
  (b, 1/1)
  (c, 1/1)
  (a#, 0/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [b, c, b] ->= [b, a, c] {- DP Nontop (Input 0) -}
  [b, a, c] ->= [b, c, a] {- DP Nontop (Input 1) -}
  [a, c, c] ->= [c, c, b] {- DP Nontop (Strictified (Input 2)) -}
  [a, c, a] ->= [a, b, b] {- DP Nontop (Strictified (Input 3)) -}
  [b, b, b] ->= [c, c, a] {- DP Nontop (Strictified (Input 4)) -}
  [a#, c, a] |-> [a#, b, b] {- DP (Top 0) (Strictified (Input 3)) -}
  [b#, a, c] |-> [b#, c, a] {- DP (Top 0) (Input 1) -}
  [b#, c, b] |-> [b#, a, c] {- DP (Top 0) (Input 0) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, c, a] |-> [a#, b, b] {- DP (Top 0) (Strictified (Input 3)) -}
  [b, c, b] ->= [b, a, c] {- DP Nontop (Input 0) -}
  [b, a, c] ->= [b, c, a] {- DP Nontop (Input 1) -}
  [a, c, c] ->= [c, c, b] {- DP Nontop (Strictified (Input 2)) -}
  [a, c, a] ->= [a, b, b] {- DP Nontop (Strictified (Input 3)) -}
  [b, b, b] ->= [c, c, a] {- DP Nontop (Strictified (Input 4)) -}
reason
  ( a
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( c
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( a#
  , Wk  / 7A 8A 10A - \
        | 7A 8A 10A - |
        | 7A 8A 10A - |
        \ -  -  -   - / )
   property Termination
has value Just True
for SRS
  [b, c, b] ->= [b, a, c] {- DP Nontop (Input 0) -}
  [b, a, c] ->= [b, c, a] {- DP Nontop (Input 1) -}
  [a, c, c] ->= [c, c, b] {- DP Nontop (Strictified (Input 2)) -}
  [a, c, a] ->= [a, b, b] {- DP Nontop (Strictified (Input 3)) -}
  [b, b, b] ->= [c, c, a] {- DP Nontop (Strictified (Input 4)) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [b#, a, c] |-> [b#, c, a] {- DP (Top 0) (Input 1) -}
  [b#, c, b] |-> [b#, a, c] {- DP (Top 0) (Input 0) -}
  [b, c, b] ->= [b, a, c] {- DP Nontop (Input 0) -}
  [b, a, c] ->= [b, c, a] {- DP Nontop (Input 1) -}
  [a, c, c] ->= [c, c, b] {- DP Nontop (Strictified (Input 2)) -}
  [a, c, a] ->= [a, b, b] {- DP Nontop (Strictified (Input 3)) -}
  [b, b, b] ->= [c, c, a] {- DP Nontop (Strictified (Input 4)) -}
reason
  ( a
  , Wk  / 3A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 3A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 11A 12A 13A - \
        | 11A 12A 13A - |
        | 11A 12A 13A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [b#, a, c] |-> [b#, c, a] {- DP (Top 0) (Input 1) -}
  [b, c, b] ->= [b, a, c] {- DP Nontop (Input 0) -}
  [b, a, c] ->= [b, c, a] {- DP Nontop (Input 1) -}
  [a, c, c] ->= [c, c, b] {- DP Nontop (Strictified (Input 2)) -}
  [a, c, a] ->= [a, b, b] {- DP Nontop (Strictified (Input 3)) -}
  [b, b, b] ->= [c, c, a] {- DP Nontop (Strictified (Input 4)) -}
reason
  EDG

**************************************************
skeleton: (2/3,3)\Strictify(5,3)\Deepee(9/5,5)\Weight(3/5,5)\EDG[(1/5,4)\Matrix{\Arctic}{3}(0/5,3)\EDG[],(2/5,4)\Matrix{\Arctic}{3}(1/5,4)\EDG[]]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.922554725000
  min duration 0.013862727000
  total durat. 2.870433151000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.855950087000
  min duration 0.030076577000
  total durat. 3.150600601000
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 0.761980909000
  min duration 0.055386767000
  total durat. 1.887593065000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.200672026000
  min duration 0.047989021000
  total durat. 1.490057721000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 5
      , alphabet_size = 6
      , total_length = 54}
    , self = 106
    , parent = Nothing
    , duration = 1.200672026000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:20:57.636562759 UTC
    , finish = 2025-09-04 08:20:58.837234785 UTC
    , thread_cap_info = ("ThreadId 146", 1, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.041426518000
  min duration 0.135900235000
  total durat. 2.388108343000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 5
      , alphabet_size = 6
      , total_length = 54}
    , self = 104
    , parent = Nothing
    , duration = 1.041426518000
    , status = Success
    , start = 2025-09-04 08:20:57.515860702 UTC
    , finish = 2025-09-04 08:20:58.55728722 UTC
    , thread_cap_info = ("ThreadId 145", 1, False)}
**************************************************
F                Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F                , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F                = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F                False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F                = Size { num_rules = 5 , num_strict_rules = 5 , num_top_rules = 0 , num_weak_rules
F                = 0 , alphabet_size = 3 , total_length = 30} , self = 50 , parent = Nothing
F                , duration = 0.650064536000 , status = Fail , start = 2025-09-04 08:20:56.340896572
F                UTC , finish = 2025-09-04 08:20:56.990961108 UTC , thread_cap_info = ("ThreadId
F                49", 1, False)}
F                
| F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
| F              = 45 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F              = 360} , self = 47 , parent = Nothing , duration = 0.326376250000 , status
| F              = Fail , start = 2025-09-04 08:20:56.359983829 UTC , finish = 2025-09-04
| F              08:20:56.686360079 UTC , thread_cap_info = ("ThreadId 60", 3, False)}
| F              
| | F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F            = Size { num_rules = 45 , num_strict_rules = 45 , num_top_rules = 0 , num_weak_rules
| | F            = 0 , alphabet_size = 9 , total_length = 360} , self = 49 , parent = Nothing
| | F            , duration = 0.420160853000 , status = Fail , start = 2025-09-04 08:20:56.372923039
| | F            UTC , finish = 2025-09-04 08:20:56.793083892 UTC , thread_cap_info = ("ThreadId
| | F            71", 0, False)}
| | F            
| | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
| | | F          = 45 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F          = 360} , self = 42 , parent = Nothing , duration = 0.242333136000 , status
| | | F          = Fail , start = 2025-09-04 08:20:56.374473931 UTC , finish = 2025-09-04
| | | F          08:20:56.616807067 UTC , thread_cap_info = ("ThreadId 62", 3, False)}
| | | F          
| | | | F        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F        = Size { num_rules = 45 , num_strict_rules = 45 , num_top_rules = 0 , num_weak_rules
| | | | F        = 0 , alphabet_size = 9 , total_length = 360} , self = 67 , parent = Nothing
| | | | F        , duration = 0.761980909000 , status = Fail , start = 2025-09-04 08:20:56.374475463
| | | | F        UTC , finish = 2025-09-04 08:20:57.136456372 UTC , thread_cap_info = ("ThreadId
| | | | F        73", 0, False)}
| | | | F        
| | | F |        
| F |   |        
|   F   |        
F       |        
S       |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S       |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S       |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S       |        = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
S       |        = 4 , total_length = 36} , self = 72 , parent = Nothing , duration = 0.230921899000
S       |        , status = Success , start = 2025-09-04 08:20:57.006616175 UTC , finish
S       |        = 2025-09-04 08:20:57.237538074 UTC , thread_cap_info = ("ThreadId 102",
S       |        1, False)}
S       |        
| F     |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F     |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F     |        = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| F     |        = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size = 6 , total_length
| F     |        = 60} , self = 68 , parent = Nothing , duration = 0.202943568000 , status
| F     |        = Fail , start = 2025-09-04 08:20:57.024582088 UTC , finish = 2025-09-04
| F     |        08:20:57.227525656 UTC , thread_cap_info = ("ThreadId 104", 1, False)}
| F     |        
| | E   |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E   |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E   |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E   |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E   |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E   |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | E   |        , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | E   |        = 4 , total_length = 36} , self = 83 , parent = Nothing , duration = 0.241396674000
| | E   |        , status = Except "AsyncCancelled" , start = 2025-09-04 08:20:57.03454872
| | E   |        UTC , finish = 2025-09-04 08:20:57.275945394 UTC , thread_cap_info = ("ThreadId
| | E   |        106", 1, False)}
| | E   |        
| | | S |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S |        = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
| | | S |        alphabet_size = 6 , total_length = 60} , self = 73 , parent = Nothing ,
| | | S |        duration = 0.135900235000 , status = Success , start = 2025-09-04 08:20:57.102131315
| | | S |        UTC , finish = 2025-09-04 08:20:57.23803155 UTC , thread_cap_info = ("ThreadId
| | | S |        108", 1, False)}
| | | S |        
| | | | F        
| F | |          
S   | |          
    | S          
    E            
F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
F                = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 6 , total_length
F                = 54} , self = 97 , parent = Nothing , duration = 0.340586933000 , status
F                = Fail , start = 2025-09-04 08:20:57.276119158 UTC , finish = 2025-09-04
F                08:20:57.616706091 UTC , thread_cap_info = ("ThreadId 130", 1, False)}
F                
| F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| F              = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size = 6 , total_length
| F              = 54} , self = 96 , parent = Nothing , duration = 0.202165669000 , status
| F              = Fail , start = 2025-09-04 08:20:57.276159163 UTC , finish = 2025-09-04
| F              08:20:57.478324832 UTC , thread_cap_info = ("ThreadId 129", 1, False)}
| F              
| | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | F            = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | F            = 42} , self = 99 , parent = Nothing , duration = 0.587474132000 , status
| | F            = Fail , start = 2025-09-04 08:20:57.287596343 UTC , finish = 2025-09-04
| | F            08:20:57.875070475 UTC , thread_cap_info = ("ThreadId 132", 1, False)}
| | F            
| | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | F          = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | F          = 42} , self = 98 , parent = Nothing , duration = 0.578763110000 , status
| | | F          = Fail , start = 2025-09-04 08:20:57.28760858 UTC , finish = 2025-09-04
| | | F          08:20:57.86637169 UTC , thread_cap_info = ("ThreadId 133", 3, False)}
| | | F          
| | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 48 , num_strict_rules
| | | | F        = 3 , num_top_rules = 3 , num_weak_rules = 45 , alphabet_size = 10 , total_length
| | | | F        = 384} , self = 100 , parent = Nothing , duration = 0.733511380000 , status
| | | | F        = Fail , start = 2025-09-04 08:20:57.295269923 UTC , finish = 2025-09-04
| | | | F        08:20:58.028781303 UTC , thread_cap_info = ("ThreadId 135", 3, False)}
| | | | F        
| | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 48 , num_strict_rules
| | | | | F      = 3 , num_top_rules = 3 , num_weak_rules = 45 , alphabet_size = 10 , total_length
| | | | | F      = 384} , self = 102 , parent = Nothing , duration = 0.855950087000 , status
| | | | | F      = Fail , start = 2025-09-04 08:20:57.306275456 UTC , finish = 2025-09-04
| | | | | F      08:20:58.162225543 UTC , thread_cap_info = ("ThreadId 136", 0, False)}
| | | | | F      
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | | | | F    = 15 , num_top_rules = 15 , num_weak_rules = 45 , alphabet_size = 12 ,
| | | | | | F    total_length = 480} , self = 101 , parent = Nothing , duration = 0.845007498000
| | | | | | F    , status = Fail , start = 2025-09-04 08:20:57.315600888 UTC , finish =
| | | | | | F    2025-09-04 08:20:58.160608386 UTC , thread_cap_info = ("ThreadId 141",
| | | | | | F    0, False)}
| | | | | | F    
| | | | | | | F  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | | | | | F  = 15 , num_top_rules = 15 , num_weak_rules = 45 , alphabet_size = 12 ,
| | | | | | | F  total_length = 480} , self = 103 , parent = Nothing , duration = 0.922554725000
| | | | | | | F  , status = Fail , start = 2025-09-04 08:20:57.355846883 UTC , finish =
| | | | | | | F  2025-09-04 08:20:58.278401608 UTC , thread_cap_info = ("ThreadId 140",
| | | | | | | F  0, False)}
| | | | | | | F  
| F | | | | | |  
| S | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | | | |  = 9 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
| S | | | | | |  = 6 , total_length = 54} , self = 104 , parent = Nothing , duration = 1.041426518000
| S | | | | | |  , status = Success , start = 2025-09-04 08:20:57.515860702 UTC , finish
| S | | | | | |  = 2025-09-04 08:20:58.55728722 UTC , thread_cap_info = ("ThreadId 145",
| S | | | | | |  1, False)}
| S | | | | | |  
F | | | | | | |  
E | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
E | | | | | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 5 , alphabet_size
E | | | | | | |  = 6 , total_length = 54} , self = 106 , parent = Nothing , duration = 1.200672026000
E | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:20:57.636562759
E | | | | | | |  UTC , finish = 2025-09-04 08:20:58.837234785 UTC , thread_cap_info = ("ThreadId
E | | | | | | |  146", 1, False)}
E | | | | | | |  
| | | F | | | |  
| | F   | | | |  
| | S   | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S   | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S   | | | |  = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | S   | | | |  = 4 , total_length = 42} , self = 108 , parent = Nothing , duration = 0.979859691000
| | S   | | | |  , status = Success , start = 2025-09-04 08:20:57.87510266 UTC , finish
| | S   | | | |  = 2025-09-04 08:20:58.854962351 UTC , thread_cap_info = ("ThreadId 148",
| | S   | | | |  1, False)}
| | S   | | | |  
| | | S | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | S | | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | S | | | |  = 4 , total_length = 42} , self = 110 , parent = Nothing , duration = 0.975892838000
| | | S | | | |  , status = Success , start = 2025-09-04 08:20:57.901424066 UTC , finish
| | | S | | | |  = 2025-09-04 08:20:58.877316904 UTC , thread_cap_info = ("ThreadId 149",
| | | S | | | |  1, False)}
| | | S | | | |  
| | | | F | | |  
| | | |   | F |  
| | | |   F   |  
| | | |       F  
| S | |          
E   | |          
    S |          
      S          
