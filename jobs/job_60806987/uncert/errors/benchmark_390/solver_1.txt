[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 216 length 895
last 315 length 1290
CNF 216 vars 895 clauses
CNF 315 vars 1290 clauses
last 1594 length 6713
CNF 1594 vars 6713 clauses
last 1450 length 6003
CNF 1450 vars 6003 clauses
last 1594 length 6713
last 1450 length 6003
CNF 1594 vars 6713 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 906, clauses: 3433
last 1450 length 6003
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3686, clauses: 14927
last 1594 length 6713
CNF 1450 vars 6003 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6756, clauses: 27937
last 906 length 3433
CNF 1450 vars 6003 clauses
last 3686 length 14927
CNF 1594 vars 6713 clauses
last 6756 length 27937
CNF 906 vars 3433 clauses
CNF 3686 vars 14927 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 27914, clauses: 116962
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 906, clauses: 3433, status: Unsatisfied, time: 0.728676782s
CNF 6756 vars 27937 clauses
last 27914 length 116962
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3686, clauses: 14927, status: Unsatisfied, time: 0.824718119s
last 19452 length 91676
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6756, clauses: 27937, status: Unsatisfied, time: 1.339782912s
CNF 19452 vars 91676 clauses
CNF 27914 vars 116962 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3251, clauses: 12989
last 3251 length 12989
CNF 3251 vars 12989 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3251, clauses: 12989, status: Unsatisfied, time: 0.404911632s
last 1038 length 4419
CNF 1038 vars 4419 clauses
last 1092 length 4621
CNF 1092 vars 4621 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16086, clauses: 67427
last 16086 length 67427
CNF 16086 vars 67427 clauses
Matrix {monotone = Strict, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11231, clauses: 52017
last 11231 length 52017
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2822, clauses: 11286
last 2822 length 11286
CNF 11231 vars 52017 clauses
CNF 2822 vars 11286 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2822, clauses: 11286, status: Satisfied, time: 0.299647016s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 1 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 4 weak rules on 4 letters       split
2 sub-proofs
  1 SRS with 2 strict rules and 6 weak rules on 4 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
  SRS with 32 strict rules and 96 weak rules on 16 letters       weights
  SRS with 3 strict rules and 52 weak rules on 14 letters       Matrix   { monotone = Strict, domain = Natural, method = KBO, shape = Full, bits = 1, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 2, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 52 weak rules on 14 letters       no strict rules

  2 SRS with 2 strict rules and 4 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 2 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a] ->= [a, b, a] {- Input 0 -}
  [a, b, b, a] -> [b, b] {- Input 1 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[b, b], [b, a], [a, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[b, b], [b, a], [a, a]] ->= [ [b, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, b], [b, a], [a, b]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[a, b], [b, a], [a, a]] ->= [ [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [b, b] , [b, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] -> [ [b, b] , [b, b] , [ b , a ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [a, b] , [b, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, a]] -> [ [a, b] , [b, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  split
   property Termination
has value Just True
for SRS
  [[b, b], [b, a], [a, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[b, b], [b, a], [a, a]] ->= [ [b, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, b], [b, a], [a, b]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[a, b], [b, a], [a, a]] ->= [ [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [b, b] , [b, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] -> [ [b, b] , [b, b] , [ b , a ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] ->= [ [a, b] , [b, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, a]] ->= [ [a, b] , [b, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] ->= [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] ->= [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] ->= [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] ->= [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] ->= [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] ->= [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  ([[a, a], [a, a]], 0/1)
  ([[a, a], [a, b]], 0/1)
  ([[a, a], [b, a]], 1/1)
  ([[a, a], [b, b]], 1/1)
  ([[a, b], [a, a]], 0/1)
  ([[a, b], [a, b]], 0/1)
  ([[a, b], [b, a]], 0/1)
  ([[a, b], [b, b]], 1/1)
  ([[b, a], [a, a]], 0/1)
  ([[b, a], [a, b]], 0/1)
  ([[b, a], [b, a]], 0/1)
  ([[b, a], [b, b]], 0/1)
  ([[b, b], [a, a]], 0/1)
  ([[b, b], [a, b]], 0/1)
  ([[b, b], [b, a]], 1/1)
  ([[b, b], [b, b]], 0/1)
   property Termination
has value Just True
for SRS
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  ( [[a, a], [a, a]]
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( [[a, a], [a, b]]
  , Ek 2  / 2 0 \
          \ 0 1 / )
  ( [[a, a], [b, a]]
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( [[a, a], [b, b]]
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( [[a, b], [a, a]]
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( [[a, b], [a, b]]
  , Ek 2  / 2 0 \
          \ 0 1 / )
  ( [[a, b], [b, a]]
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( [[a, b], [b, b]]
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( [[b, a], [a, a]]
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( [[b, a], [a, b]]
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( [[b, b], [a, a]]
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( [[b, b], [a, b]]
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( [[b, b], [b, a]]
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( [[b, b], [b, b]]
  , Ek 2  / 2 1 \
          \ 0 1 / )
   property Termination
has value Just True
for SRS
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  no strict rules

property Termination
has value Just True
for SRS
  [[b, b], [b, a], [a, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[b, b], [b, a], [a, a]] ->= [ [b, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, b], [b, a], [a, b]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[a, b], [b, a], [a, a]] ->= [ [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [a, b] , [b, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, a]] -> [ [a, b] , [b, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  ( [a, a]
  , St (Corner  / 1 1 0 \
                | 0 4 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 1 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 0 2 \
                | 0 0 4 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[a, b], [b, a], [a, b]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[a, b], [b, a], [a, a]] ->= [ [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 1 (Input 0)) -}
reason
  no strict rules

**************************************************
skeleton: (1/1,2)\TileAllAll{2}(4/4,4)\Split[(2/6,4)\TileAllAll{2}(32/96,16)\Weight(3/52,14)\Matrix{\Natural}{2}(0/52,14)[],(2/4,4)\Matrix{\Natural}{3}(0/2,3)[]]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Success : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 2.333351526000
  min duration 2.333351526000
  total durat. 2.333351526000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 55
      , num_strict_rules = 15
      , num_top_rules = 0
      , num_weak_rules = 40
      , alphabet_size = 14
      , total_length = 510}
    , self = 73
    , parent = Nothing
    , duration = 2.333351526000
    , status = Success
    , start = 2025-09-04 08:27:28.097027865 UTC
    , finish = 2025-09-04 08:27:30.430379391 UTC
    , thread_cap_info = ("ThreadId 107", 0, False)}
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.208854574000
  min duration 0.007119333000
  total durat. 3.191615892000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 60}
    , self = 68
    , parent = Nothing
    , duration = 1.057632353000
    , status = Fail
    , start = 2025-09-04 08:27:28.244113795 UTC
    , finish = 2025-09-04 08:27:29.301746148 UTC
    , thread_cap_info = ("ThreadId 129", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 44}
    , self = 86
    , parent = Nothing
    , duration = 1.208854574000
    , status = Fail
    , start = 2025-09-04 08:27:30.783469062 UTC
    , finish = 2025-09-04 08:27:31.992323636 UTC
    , thread_cap_info = ("ThreadId 162", 2, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.625474540000
  min duration 1.625474540000
  total durat. 1.625474540000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 52
      , num_strict_rules = 12
      , num_top_rules = 0
      , num_weak_rules = 40
      , alphabet_size = 14
      , total_length = 480}
    , self = 93
    , parent = Nothing
    , duration = 1.625474540000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:27:32.03135197 UTC
    , finish = 2025-09-04 08:27:33.65682651 UTC
    , thread_cap_info = ("ThreadId 173", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.109524950000
  min duration 0.022715331000
  total durat. 2.839893351000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 44}
    , self = 84
    , parent = Nothing
    , duration = 1.081010799000
    , status = Fail
    , start = 2025-09-04 08:27:30.802142828 UTC
    , finish = 2025-09-04 08:27:31.883153627 UTC
    , thread_cap_info = ("ThreadId 163", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 60}
    , self = 69
    , parent = Nothing
    , duration = 1.109524950000
    , status = Fail
    , start = 2025-09-04 08:27:28.259765961 UTC
    , finish = 2025-09-04 08:27:29.369290911 UTC
    , thread_cap_info = ("ThreadId 131", 3, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 2.364924697000
  min duration 2.364924697000
  total durat. 2.364924697000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 55
      , num_strict_rules = 15
      , num_top_rules = 0
      , num_weak_rules = 40
      , alphabet_size = 14
      , total_length = 510}
    , self = 75
    , parent = Nothing
    , duration = 2.364924697000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:27:28.09989482 UTC
    , finish = 2025-09-04 08:27:30.464819517 UTC
    , thread_cap_info = ("ThreadId 109", 0, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.107231819000
  min duration 2.107231819000
  total durat. 2.107231819000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 1
      , alphabet_size = 2
      , total_length = 11}
    , self = 72
    , parent = Nothing
    , duration = 2.107231819000
    , status = Fail
    , start = 2025-09-04 08:27:28.15339199 UTC
    , finish = 2025-09-04 08:27:30.260623809 UTC
    , thread_cap_info = ("ThreadId 119", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.582087831000
  min duration 1.582087831000
  total durat. 1.582087831000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 44}
    , self = 90
    , parent = Nothing
    , duration = 1.582087831000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:27:31.945041102 UTC
    , finish = 2025-09-04 08:27:33.527128933 UTC
    , thread_cap_info = ("ThreadId 171", 2, False)}
Success : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.284378734000
  min duration 1.284378734000
  total durat. 1.284378734000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 44}
    , self = 88
    , parent = Nothing
    , duration = 1.284378734000
    , status = Success
    , start = 2025-09-04 08:27:32.045388251 UTC
    , finish = 2025-09-04 08:27:33.329766985 UTC
    , thread_cap_info = ("ThreadId 175", 2, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.442042711000
  min duration 1.441679159000
  total durat. 2.883721870000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 60}
    , self = 71
    , parent = Nothing
    , duration = 1.441679159000
    , status = Fail
    , start = 2025-09-04 08:27:28.244116881 UTC
    , finish = 2025-09-04 08:27:29.68579604 UTC
    , thread_cap_info = ("ThreadId 135", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 1
      , alphabet_size = 2
      , total_length = 11}
    , self = 70
    , parent = Nothing
    , duration = 1.442042711000
    , status = Fail
    , start = 2025-09-04 08:27:28.182453573 UTC
    , finish = 2025-09-04 08:27:29.624496284 UTC
    , thread_cap_info = ("ThreadId 126", 3, False)}
**************************************************
F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
F                  = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
F                  = 60} , self = 62 , parent = Nothing , duration = 0.150600015000 , status
F                  = Fail , start = 2025-09-04 08:27:28.077386066 UTC , finish = 2025-09-04
F                  08:27:28.227986081 UTC , thread_cap_info = ("ThreadId 92", 2, False)}
F                  
| S                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| S                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| S                = False\n , verbose = False}" , input_size = Size { num_rules = 55 , num_strict_rules
| S                = 15 , num_top_rules = 0 , num_weak_rules = 40 , alphabet_size = 14 , total_length
| S                = 510} , self = 73 , parent = Nothing , duration = 2.333351526000 , status
| S                = Success , start = 2025-09-04 08:27:28.097027865 UTC , finish = 2025-09-04
| S                08:27:30.430379391 UTC , thread_cap_info = ("ThreadId 107", 0, False)}
| S                
| | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F              = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | F              = 60} , self = 67 , parent = Nothing , duration = 0.767409617000 , status
| | F              = Fail , start = 2025-09-04 08:27:28.098355122 UTC , finish = 2025-09-04
| | F              08:27:28.865764739 UTC , thread_cap_info = ("ThreadId 104", 3, False)}
| | F              
| | | E            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E            = False\n , verbose = False}" , input_size = Size { num_rules = 55 , num_strict_rules
| | | E            = 15 , num_top_rules = 0 , num_weak_rules = 40 , alphabet_size = 14 , total_length
| | | E            = 510} , self = 75 , parent = Nothing , duration = 2.364924697000 , status
| | | E            = Except "AsyncCancelled" , start = 2025-09-04 08:27:28.09989482 UTC ,
| | | E            finish = 2025-09-04 08:27:30.464819517 UTC , thread_cap_info = ("ThreadId
| | | E            109", 0, False)}
| | | E            
| | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | F          = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | F          = 60} , self = 66 , parent = Nothing , duration = 0.561498423000 , status
| | | | F          = Fail , start = 2025-09-04 08:27:28.099944195 UTC , finish = 2025-09-04
| | | | F          08:27:28.661442618 UTC , thread_cap_info = ("ThreadId 111", 3, False)}
| | | | F          
| | | | | F        Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | F        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | F        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | F        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 2
| | | | | F        , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| | | | | F        = 2 , total_length = 11} , self = 72 , parent = Nothing , duration = 2.107231819000
| | | | | F        , status = Fail , start = 2025-09-04 08:27:28.15339199 UTC , finish = 2025-09-04
| | | | | F        08:27:30.260623809 UTC , thread_cap_info = ("ThreadId 119", 3, False)}
| | | | | F        
| | | | | | F      Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | F      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | F      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | F      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | F      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | F      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 2
| | | | | | F      , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| | | | | | F      = 2 , total_length = 11} , self = 70 , parent = Nothing , duration = 1.442042711000
| | | | | | F      , status = Fail , start = 2025-09-04 08:27:28.182453573 UTC , finish =
| | | | | | F      2025-09-04 08:27:29.624496284 UTC , thread_cap_info = ("ThreadId 126",
| | | | | | F      3, False)}
| | | | | | F      
F | | | | | |      
F | | | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
F | | | | | |      = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
F | | | | | |      = 60} , self = 68 , parent = Nothing , duration = 1.057632353000 , status
F | | | | | |      = Fail , start = 2025-09-04 08:27:28.244113795 UTC , finish = 2025-09-04
F | | | | | |      08:27:29.301746148 UTC , thread_cap_info = ("ThreadId 129", 3, False)}
F | | | | | |      
| | | | | | | F    Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | | F    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | F    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | F    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | | F    , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | | | | | | F    = 4 , total_length = 60} , self = 71 , parent = Nothing , duration = 1.441679159000
| | | | | | | F    , status = Fail , start = 2025-09-04 08:27:28.244116881 UTC , finish =
| | | | | | | F    2025-09-04 08:27:29.68579604 UTC , thread_cap_info = ("ThreadId 135", 2,
| | | | | | | F    False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | F  = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | | F  = 60} , self = 69 , parent = Nothing , duration = 1.109524950000 , status
| | | | | | | | F  = Fail , start = 2025-09-04 08:27:28.259765961 UTC , finish = 2025-09-04
| | | | | | | | F  08:27:29.369290911 UTC , thread_cap_info = ("ThreadId 131", 3, False)}
| | | | | | | | F  
| | | | F | | | |  
| | F |   | | | |  
F |   |   | | | |  
  |   |   | | | F  
  |   |   | F |    
  |   |   |   F    
  |   |   F        
F |   |            Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
F |   |            = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F |   |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F |   |            , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F |   |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F |   |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 2
F |   |            , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
F |   |            = 2 , total_length = 11} , self = 81 , parent = Nothing , duration = 0.622252606000
F |   |            , status = Fail , start = 2025-09-04 08:27:30.321124286 UTC , finish =
F |   |            2025-09-04 08:27:30.943376892 UTC , thread_cap_info = ("ThreadId 149",
F |   |            3, False)}
F |   |            
| S   |            
|     E            
| F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| F                = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| F                = 44} , self = 86 , parent = Nothing , duration = 1.208854574000 , status
| F                = Fail , start = 2025-09-04 08:27:30.783469062 UTC , finish = 2025-09-04
| F                08:27:31.992323636 UTC , thread_cap_info = ("ThreadId 162", 2, False)}
| F                
| | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | F              = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | F              = 44} , self = 84 , parent = Nothing , duration = 1.081010799000 , status
| | F              = Fail , start = 2025-09-04 08:27:30.802142828 UTC , finish = 2025-09-04
| | F              08:27:31.883153627 UTC , thread_cap_info = ("ThreadId 163", 2, False)}
| | F              
F | |              
S | |              Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
S | |              epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
S | |              = Size { num_rules = 96 , num_strict_rules = 32 , num_top_rules = 0 , num_weak_rules
S | |              = 64 , alphabet_size = 16 , total_length = 896} , self = 82 , parent =
S | |              Nothing , duration = 0.789432280000 , status = Success , start = 2025-09-04
S | |              08:27:30.980655787 UTC , finish = 2025-09-04 08:27:31.770088067 UTC , thread_cap_info
S | |              = ("ThreadId 165", 2, False)}
S | |              
S | |              
  | F              
E |                Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E |                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E |                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E |                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E |                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E |                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
E |                , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
E |                = 4 , total_length = 44} , self = 90 , parent = Nothing , duration = 1.582087831000
E |                , status = Except "AsyncCancelled" , start = 2025-09-04 08:27:31.945041102
E |                UTC , finish = 2025-09-04 08:27:33.527128933 UTC , thread_cap_info = ("ThreadId
E |                171", 2, False)}
E |                
| F                
| E                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E                = False\n , verbose = False}" , input_size = Size { num_rules = 52 , num_strict_rules
| E                = 12 , num_top_rules = 0 , num_weak_rules = 40 , alphabet_size = 14 , total_length
| E                = 480} , self = 93 , parent = Nothing , duration = 1.625474540000 , status
| E                = Except "AsyncCancelled" , start = 2025-09-04 08:27:32.03135197 UTC ,
| E                finish = 2025-09-04 08:27:33.65682651 UTC , thread_cap_info = ("ThreadId
| E                173", 2, False)}
| E                
| | S              Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | S              = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | S              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | S              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | S              , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | S              = 4 , total_length = 44} , self = 88 , parent = Nothing , duration = 1.284378734000
| | S              , status = Success , start = 2025-09-04 08:27:32.045388251 UTC , finish
| | S              = 2025-09-04 08:27:33.329766985 UTC , thread_cap_info = ("ThreadId 175",
| | S              2, False)}
| | S              
| | S              
E |                
  E                
