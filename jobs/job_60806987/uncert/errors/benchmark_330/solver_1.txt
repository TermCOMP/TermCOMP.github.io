[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 878 length 3993
last 994 length 4437
CNF 878 vars 3993 clauses
CNF 994 vars 4437 clauses
last 326 length 1459
CNF 326 vars 1459 clauses
last 595 length 2778
CNF 595 vars 2778 clauses
last 1072 length 4733
last 1032 length 4611
last 1146 length 5298
last 1434 length 6212
CNF 1434 vars 6212 clauses
last 1146 length 5298
CNF 1146 vars 5298 clauses
CNF 1072 vars 4733 clauses
last 1434 length 6212
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1280, clauses: 4997
CNF 1146 vars 5298 clauses
CNF 1032 vars 4611 clauses
**************************************************last 2344 length 13808

last 1280 length 4997
CNF 1434 vars 6212 clauses
last 2827 length 21544
CNF 2344 vars 13808 clauses
summary
CNF 1280 vars 4997 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9412, clauses: 39189
**************************************************last 9412 length 39189

SRS with 1 strict rules and 1 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 4 weak rules on 4 letters       split
2 sub-proofs
  1 SRS with 4 strict rules and 4 weak rules on 4 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
  SRS with 64 strict rules and 64 weak rules on 16 letters       weights
  SRS with 0 strict rules and 16 weak rules on 11 letters       no strict rules

  2 SRS with 0 strict rules and 4 weak rules on 4 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a] -> [] {- Input 0 -}
  [a, b] ->= [b, b, a, a, b] {- Input 1 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a], [a, b], [b, a]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, b], [b, b]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a], [a, b], [b, a]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, b]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  split
   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, a], [a, a]] -> [[a, a]] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, a], [a, b]] -> [[a, b]] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, a], [a, a]] -> [[b, a]] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, a], [a, b]] -> [[b, b]] {- Semlab 1 (Concon 1 (Input 0)) -}Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1280, clauses: 4997, status: Unsatisfied, time: 0.019798042s

  [[a, a], [a, b], [b, a]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, b], [b, b]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a], [a, b], [b, a]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}CNF 2827 vars 21544 clauses

  [[b, a], [a, b], [b, b]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] -> [ [[a, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] -> [ [[a, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] -> [ [[a, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] -> [ [[a, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] -> [ [[a, b], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 1 (Concon 0 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] -> [ [[a, b], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 1 (Concon 1 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] -> [ [[a, b], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 1 (Concon 2 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] -> [ [[a, b], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 1 (Concon 3 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] -> [ [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] -> [ [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] -> [ [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] -> [ [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] -> [ [[b, b], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 3 (Concon 0 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] -> [ [[b, b], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 3 (Concon 1 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] -> [ [[b, b], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 3 (Concon 2 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] -> [ [[b, b], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 3 (Concon 3 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] -> [ [[a, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] -> [ [[a, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] -> [ [[a, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] -> [ [[a, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] -> [ [[a, b], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 1 (Concon 0 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] -> [ [[a, b], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 1 (Concon 1 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] -> [ [[a, b], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 1 (Concon 2 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] -> [ [[a, b], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 1 (Concon 3 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] -> [ [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] -> [ [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] -> [ [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] -> [ [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] -> [ [[b, b], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 3 (Concon 0 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] -> [ [[b, b], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 3 (Concon 1 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] -> [ [[b, b], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 3 (Concon 2 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] -> [ [[b, b], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 3 (Concon 3 (Semlab 0 (Concon 1 (Input 0)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] -> [ [[a, a], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] -> [ [[a, a], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] -> [ [[a, a], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] -> [ [[a, a], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] -> [ [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] -> [ [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] -> [ [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] -> [ [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] -> [ [[b, a], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] -> [ [[b, a], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] -> [ [[b, a], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] -> [ [[b, a], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, a]] ] -> [ [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] ] -> [ [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, a]] ] -> [ [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [b, b]] ] -> [ [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] -> [ [[a, a], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] -> [ [[a, a], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] -> [ [[a, a], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] -> [ [[a, a], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] -> [ [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] -> [ [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] -> [ [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] -> [ [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] -> [ [[b, a], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] -> [ [[b, a], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] -> [ [[b, a], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] -> [ [[b, a], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] -> [ [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] -> [ [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] -> [ [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] -> [ [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 1 (Input 0)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 1 (Concon 0 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 1 (Concon 1 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 1 (Concon 2 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 1 (Concon 3 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 3 (Concon 0 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 3 (Concon 1 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 3 (Concon 2 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 3 (Concon 3 (Semlab 0 (Concon 0 (Input 1)))) -}CNF 9412 vars 39189 clauses

  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 1 (Concon 0 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 1 (Concon 1 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 1 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 1 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 3 (Concon 0 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 3 (Concon 1 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 3 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, b], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 3 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, a], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  ([[a, a], [a, a]], 2/1)
  ([[a, a], [a, b]], 0/1)
  ([[a, a], [b, a]], 2/1)
  ([[a, a], [b, b]], 0/1)
  ([[a, b], [a, a]], 2/1)
  ([[a, b], [a, b]], 0/1)
  ([[a, b], [b, a]], 2/1)
  ([[a, b], [b, b]], 0/1)
  ([[b, a], [a, a]], 0/1)
  ([[b, a], [a, b]], 0/1)
  ([[b, a], [b, a]], 1/1)
  ([[b, a], [b, b]], 0/1)
  ([[b, b], [a, a]], 1/1)
  ([[b, b], [a, b]], 0/1)
  ([[b, b], [b, a]], 0/1)
  ([[b, b], [b, b]], 0/1)
   property Termination
has value Just True
for SRS
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  no strict rules

property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, a]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, b], [b, b]] ->= [ [a, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a], [a, b], [b, a]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, b]] ->= [ [b, b] , [b, b] , [b, a] , [a, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  no strict rules

**************************************************
skeleton: (1/1,2)\TileAllAll{2}(4/4,4)\Split[(4/4,4)\TileAllAll{2}(64/64,16)\Weight(0/16,11)[],(0/4,4)[]]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************

**************************************************
E      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E      = False}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 ,
E      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
E      = 7} , self = 65 , parent = Nothing , duration = 0.111670338000 , status
E      = Except "AsyncCancelled" , start = 2025-09-04 08:23:51.52438552 UTC ,
E      finish = 2025-09-04 08:23:51.636055858 UTC , thread_cap_info = ("ThreadId
E      20", 2, False)}
E      
| E    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| E    = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| E    = 36} , self = 68 , parent = Nothing , duration = 0.106732226000 , status
| E    = Except "AsyncCancelled" , start = 2025-09-04 08:23:51.529647179 UTC ,
| E    finish = 2025-09-04 08:23:51.636379405 UTC , thread_cap_info = ("ThreadId
| E    58", 1, False)}
| E    
| | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | E  = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | E  = 36} , self = 69 , parent = Nothing , duration = 0.101027249000 , status
| | E  = Except "AsyncCancelled" , start = 2025-09-04 08:23:51.542307015 UTC ,
| | E  finish = 2025-09-04 08:23:51.643334264 UTC , thread_cap_info = ("ThreadId
| | E  60", 1, False)}
| | E  
E | |  
  E |  
    E  
