[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 234 length 923
last 238 length 999
last 570 length 2315
CNF 234 vars 923 clauses
CNF 238 vars 999 clauses
CNF 570 vars 2315 clauses
last 238 length 999
last 412 length 1691
last 412 length 1691
CNF 238 vars 999 clauses
last 562 length 2265
last 1002 length 4231
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2076, clauses: 7559
last 1002 length 4231
last 562 length 2265
CNF 412 vars 1691 clauses
CNF 412 vars 1691 clauses
last 1709 length 6837
last 2325 length 9489
CNF 562 vars 2265 clauses
last 2076 length 7559
CNF 1002 vars 4231 clauses
CNF 562 vars 2265 clauses
CNF 1002 vars 4231 clauses
CNF 1709 vars 6837 clauses
CNF 2325 vars 9489 clauses
CNF 2076 vars 7559 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3930, clauses: 14471
last 3930 length 14471
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2076, clauses: 7559, status: Unsatisfied, time: 0.070251189s
last 468 length 1895
CNF 3930 vars 14471 clauses
last 230 length 909
CNF 468 vars 1895 clauses
CNF 230 vars 909 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3930, clauses: 14471, status: Unsatisfied, time: 0.121422967s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1544, clauses: 5667
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3930, clauses: 14471
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7470, clauses: 28743
last 1544 length 5667
last 7418 length 30135
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6638, clauses: 26839
last 4298 length 17143
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8787, clauses: 35972
last 3930 length 14471
last 2325 length 9489
last 1709 length 6837
last 7470 length 28743
CNF 1544 vars 5667 clauses
last 6638 length 26839
CNF 7418 vars 30135 clauses
CNF 4298 vars 17143 clauses
last 8787 length 35972
CNF 3930 vars 14471 clauses
CNF 2325 vars 9489 clauses
CNF 1709 vars 6837 clauses
CNF 7470 vars 28743 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1544, clauses: 5667, status: Unsatisfied, time: 1.438938097s
CNF 8787 vars 35972 clauses
CNF 6638 vars 26839 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3930, clauses: 14471, status: Unsatisfied, time: 1.507717251s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 48593, clauses: 201783
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7470, clauses: 28743, status: Unsatisfied, time: 2.255285924s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6638, clauses: 26839, status: Unsatisfied, time: 1.880290664s
last 48593 length 201783
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8787, clauses: 35972, status: Satisfied, time: 1.910291796s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 3 letters       mirror
SRS with 1 strict rules and 2 weak rules on 3 letters       context
SRS with 1 strict rules and 6 weak rules on 3 letters       mirror
SRS with 1 strict rules and 6 weak rules on 3 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, c] -> [c, c] {- Input 0 -}
  [] ->= [a, b] {- Input 1 -}
  [a, b] ->= [] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [c, a] -> [c, c] {- Mirror (Input 0) -}
  [] ->= [b, a] {- Mirror (Input 1) -}
  [b, a] ->= [] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [c, a] -> [c, c] {- Mirror (Input 0) -}
  [a] ->= [a, b, a] {- Mirror (Input 1) -}
  [b] ->= [b, b, a] {- Mirror (Input 1) -}
  [c] ->= [c, b, a] {- Mirror (Input 1) -}
  [a, b, a] ->= [a] {- Mirror (Input 2) -}
  [b, b, a] ->= [b] {- Mirror (Input 2) -}
  [c, b, a] ->= [c] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, c] -> [c, c] {- Input 0 -}
  [a] ->= [a, b, a] {- Input 1 -}
  [b] ->= [a, b, b] {- Input 1 -}
  [c] ->= [a, b, c] {- Input 1 -}
  [a, b, a] ->= [a] {- Input 2 -}
  [a, b, b] ->= [b] {- Input 2 -}
  [a, b, c] ->= [c] {- Input 2 -}
reason
  ( a
  , St  / 0A 1A  - \
        | -  1A  - |
        \ -  -1A - / )
  ( b
  , St  / 0A - 2A  \
        | -  - 1A  |
        \ -  - -1A / )
  ( c
  , St  / 0A  0A  1A  \
        | 0A  0A  1A  |
        \ -2A -2A -1A / )
   property Termination
has value Just True
for SRS
  [a] ->= [a, b, a] {- Input 1 -}
  [b] ->= [a, b, b] {- Input 1 -}
  [c] ->= [a, b, c] {- Input 1 -}
  [a, b, a] ->= [a] {- Input 2 -}
  [a, b, b] ->= [b] {- Input 2 -}
  [a, b, c] ->= [c] {- Input 2 -}
reason
  no strict rules

**************************************************
skeleton: \Mirror(1/2,3)\Context\Mirror(1/6,3)\Matrix{\ArcticBZ}{3}(0/6,3)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 48593 vars 201783 clauses

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 1.828306392000
  min duration 0.042388102000
  total durat. 4.122408937000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 126}
    , self = 119
    , parent = Nothing
    , duration = 1.538074426000
    , status = Fail
    , start = 2025-09-04 08:26:20.162055713 UTC
    , finish = 2025-09-04 08:26:21.700130139 UTC
    , thread_cap_info = ("ThreadId 199", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 63
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 54
      , alphabet_size = 9
      , total_length = 378}
    , self = 118
    , parent = Nothing
    , duration = 1.828306392000
    , status = Fail
    , start = 2025-09-04 08:26:19.859695339 UTC
    , finish = 2025-09-04 08:26:21.688001731 UTC
    , thread_cap_info = ("ThreadId 190", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 1.760435710000
  min duration 0.034030415000
  total durat. 3.866439911000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 126}
    , self = 120
    , parent = Nothing
    , duration = 1.603707477000
    , status = Fail
    , start = 2025-09-04 08:26:20.179852005 UTC
    , finish = 2025-09-04 08:26:21.783559482 UTC
    , thread_cap_info = ("ThreadId 201", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 63
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 54
      , alphabet_size = 9
      , total_length = 378}
    , self = 117
    , parent = Nothing
    , duration = 1.760435710000
    , status = Fail
    , start = 2025-09-04 08:26:19.859920705 UTC
    , finish = 2025-09-04 08:26:21.620356415 UTC
    , thread_cap_info = ("ThreadId 192", 2, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.041176319000
  min duration 3.041176319000
  total durat. 3.041176319000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 28}
    , self = 125
    , parent = Nothing
    , duration = 3.041176319000
    , status = Success
    , start = 2025-09-04 08:26:19.779288869 UTC
    , finish = 2025-09-04 08:26:22.820465188 UTC
    , thread_cap_info = ("ThreadId 186", 2, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.960893844000
  min duration 2.059374103000
  total durat. 5.020267947000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 28}
    , self = 121
    , parent = Nothing
    , duration = 2.059374103000
    , status = Fail
    , start = 2025-09-04 08:26:19.780481453 UTC
    , finish = 2025-09-04 08:26:21.839855556 UTC
    , thread_cap_info = ("ThreadId 187", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 126}
    , self = 123
    , parent = Nothing
    , duration = 2.960893844000
    , status = Fail
    , start = 2025-09-04 08:26:19.783756122 UTC
    , finish = 2025-09-04 08:26:22.744649966 UTC
    , thread_cap_info = ("ThreadId 189", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.005311630000
  min duration 3.005311630000
  total durat. 3.005311630000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 76}
    , self = 124
    , parent = Nothing
    , duration = 3.005311630000
    , status = Fail
    , start = 2025-09-04 08:26:19.759858002 UTC
    , finish = 2025-09-04 08:26:22.765169632 UTC
    , thread_cap_info = ("ThreadId 173", 0, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 2.819368412000
  min duration 0.166268211000
  total durat. 3.164383287000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 76}
    , self = 122
    , parent = Nothing
    , duration = 2.819368412000
    , status = Fail
    , start = 2025-09-04 08:26:19.740493435 UTC
    , finish = 2025-09-04 08:26:22.559861847 UTC
    , thread_cap_info = ("ThreadId 172", 0, False)}
**************************************************
F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                  = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
F                  = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 4 , total_length
F                  = 34} , self = 90 , parent = Nothing , duration = 0.159318833000 , status
F                  = Fail , start = 2025-09-04 08:26:19.515509433 UTC , finish = 2025-09-04
F                  08:26:19.674828266 UTC , thread_cap_info = ("ThreadId 98", 1, False)}
F                  
| F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F                , closure = Backward\n , start_strict_only = True\n , max_closure_length
| F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F                = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 1 ,
| F                num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 3 , total_length
| F                = 8} , self = 105 , parent = Nothing , duration = 0.237730134000 , status
| F                = Fail , start = 2025-09-04 08:26:19.541486946 UTC , finish = 2025-09-04
| F                08:26:19.77921708 UTC , thread_cap_info = ("ThreadId 120", 0, False)}
| F                
| | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | F              = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | F              = 34} , self = 89 , parent = Nothing , duration = 0.132021449000 , status
| | F              = Fail , start = 2025-09-04 08:26:19.541973917 UTC , finish = 2025-09-04
| | F              08:26:19.673995366 UTC , thread_cap_info = ("ThreadId 126", 1, False)}
| | F              
| | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | F            = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | F            = 34} , self = 88 , parent = Nothing , duration = 0.107410286000 , status
| | | F            = Fail , start = 2025-09-04 08:26:19.560840848 UTC , finish = 2025-09-04
| | | F            08:26:19.668251134 UTC , thread_cap_info = ("ThreadId 127", 1, False)}
| | | F            
| | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | | F          = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | F          = 76} , self = 93 , parent = Nothing , duration = 0.120953461000 , status
| | | | F          = Fail , start = 2025-09-04 08:26:19.560859488 UTC , finish = 2025-09-04
| | | | F          08:26:19.681812949 UTC , thread_cap_info = ("ThreadId 122", 2, False)}
| | | | F          
| | | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F        = 10 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 ,
| | | | | F        alphabet_size = 4 , total_length = 34} , self = 100 , parent = Nothing
| | | | | F        , duration = 0.166268211000 , status = Fail , start = 2025-09-04 08:26:19.576816438
| | | | | F        UTC , finish = 2025-09-04 08:26:19.743084649 UTC , thread_cap_info = ("ThreadId
| | | | | F        135", 1, False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | F      = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | F      = 126} , self = 98 , parent = Nothing , duration = 0.121670237000 , status
| | | | | | F      = Fail , start = 2025-09-04 08:26:19.618761817 UTC , finish = 2025-09-04
| | | | | | F      08:26:19.740432054 UTC , thread_cap_info = ("ThreadId 151", 1, False)}
| | | | | | F      
| | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | F    = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | | F    = 126} , self = 97 , parent = Nothing , duration = 0.106036894000 , status
| | | | | | | F    = Fail , start = 2025-09-04 08:26:19.620605663 UTC , finish = 2025-09-04
| | | | | | | F    08:26:19.726642557 UTC , thread_cap_info = ("ThreadId 152", 1, False)}
| | | | | | | F    
| | | F | | | |    
| | F   | | | |    
F |     | | | |    
  |     F | | |    
F |       | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F |       | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F |       | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F |       | | |    = 22 , num_strict_rules = 14 , num_top_rules = 14 , num_weak_rules = 8
F |       | | |    , alphabet_size = 8 , total_length = 76} , self = 111 , parent = Nothing
F |       | | |    , duration = 0.178746664000 , status = Fail , start = 2025-09-04 08:26:19.68383654
F |       | | |    UTC , finish = 2025-09-04 08:26:19.862583204 UTC , thread_cap_info = ("ThreadId
F |       | | |    171", 1, False)}
F |       | | |    
| |       | | F    
| |       | F      
| | F     |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F     |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F     |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F     |        = 22 , num_strict_rules = 14 , num_top_rules = 14 , num_weak_rules = 8
| | F     |        , alphabet_size = 8 , total_length = 76} , self = 122 , parent = Nothing
| | F     |        , duration = 2.819368412000 , status = Fail , start = 2025-09-04 08:26:19.740493435
| | F     |        UTC , finish = 2025-09-04 08:26:22.559861847 UTC , thread_cap_info = ("ThreadId
| | F     |        172", 0, False)}
| | F     |        
| | |     F        
| | | F            Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | F            epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | F            = Size { num_rules = 2187 , num_strict_rules = 729 , num_top_rules = 0
| | | F            , num_weak_rules = 1458 , alphabet_size = 81 , total_length = 14580} ,
| | | F            self = 112 , parent = Nothing , duration = 0.123862045000 , status = Fail
| | | F            , start = 2025-09-04 08:26:19.743471022 UTC , finish = 2025-09-04 08:26:19.867333067
| | | F            UTC , thread_cap_info = ("ThreadId 180", 3, False)}
| | | F            
| | | | F          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 22
| | | | F          , num_strict_rules = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size
| | | | F          = 8 , total_length = 76} , self = 124 , parent = Nothing , duration = 3.005311630000
| | | | F          , status = Fail , start = 2025-09-04 08:26:19.759858002 UTC , finish =
| | | | F          2025-09-04 08:26:22.765169632 UTC , thread_cap_info = ("ThreadId 173",
| | | | F          0, False)}
| | | | F          
| F | | |          
| S | | |          Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| S | | |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S | | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S | | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| S | | |          , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| S | | |          = 3 , total_length = 28} , self = 125 , parent = Nothing , duration = 3.041176319000
| S | | |          , status = Success , start = 2025-09-04 08:26:19.779288869 UTC , finish
| S | | |          = 2025-09-04 08:26:22.820465188 UTC , thread_cap_info = ("ThreadId 186",
| S | | |          2, False)}
| S | | |          
| | | | | F        Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | F        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | F        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | F        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | F        , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | | | F        = 3 , total_length = 28} , self = 121 , parent = Nothing , duration = 2.059374103000
| | | | | F        , status = Fail , start = 2025-09-04 08:26:19.780481453 UTC , finish =
| | | | | F        2025-09-04 08:26:21.839855556 UTC , thread_cap_info = ("ThreadId 187",
| | | | | F        2, False)}
| | | | | F        
| | | | | | F      Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | F      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | F      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | F      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | F      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | F      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 27
| | | | | | F      , num_strict_rules = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size
| | | | | | F      = 9 , total_length = 126} , self = 123 , parent = Nothing , duration =
| | | | | | F      2.960893844000 , status = Fail , start = 2025-09-04 08:26:19.783756122
| | | | | | F      UTC , finish = 2025-09-04 08:26:22.744649966 UTC , thread_cap_info = ("ThreadId
| | | | | | F      189", 1, False)}
| | | | | | F      
| | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 63 , num_strict_rules
| | | | | | | F    = 9 , num_top_rules = 0 , num_weak_rules = 54 , alphabet_size = 9 , total_length
| | | | | | | F    = 378} , self = 118 , parent = Nothing , duration = 1.828306392000 , status
| | | | | | | F    = Fail , start = 2025-09-04 08:26:19.859695339 UTC , finish = 2025-09-04
| | | | | | | F    08:26:21.688001731 UTC , thread_cap_info = ("ThreadId 190", 2, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 63 , num_strict_rules
| | | | | | | | F  = 9 , num_top_rules = 0 , num_weak_rules = 54 , alphabet_size = 9 , total_length
| | | | | | | | F  = 378} , self = 117 , parent = Nothing , duration = 1.760435710000 , status
| | | | | | | | F  = Fail , start = 2025-09-04 08:26:19.859920705 UTC , finish = 2025-09-04
| | | | | | | | F  08:26:21.620356415 UTC , thread_cap_info = ("ThreadId 192", 2, False)}
| | | | | | | | F  
F | | | | | | | |  
  | | F | | | | |  
F | |   | | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | |   | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | |   | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
F | |   | | | | |  = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
F | |   | | | | |  = 126} , self = 119 , parent = Nothing , duration = 1.538074426000 , status
F | |   | | | | |  = Fail , start = 2025-09-04 08:26:20.162055713 UTC , finish = 2025-09-04
F | |   | | | | |  08:26:21.700130139 UTC , thread_cap_info = ("ThreadId 199", 1, False)}
F | |   | | | | |  
| | | F | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | F | | | | |  = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | F | | | | |  = 126} , self = 120 , parent = Nothing , duration = 1.603707477000 , status
| | | F | | | | |  = Fail , start = 2025-09-04 08:26:20.179852005 UTC , finish = 2025-09-04
| | | F | | | | |  08:26:21.783559482 UTC , thread_cap_info = ("ThreadId 201", 2, False)}
| | | F | | | | |  
| | | | | | | | F  
| | | | | | | F    
F | | | | | |      
  | | F | | |      
  | |   | F |      
E | |   |   |      Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E | |   |   |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | |   |   |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | |   |   |      , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | |   |   |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | |   |   |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
E | |   |   |      , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
E | |   |   |      = 3 , total_length = 28} , self = 127 , parent = Nothing , duration = 0.997241923000
E | |   |   |      , status = Except "AsyncCancelled" , start = 2025-09-04 08:26:21.864343699
E | |   |   |      UTC , finish = 2025-09-04 08:26:22.861585622 UTC , thread_cap_info = ("ThreadId
E | |   |   |      214", 2, False)}
E | |   |   |      
| | F   |   |      
| |     |   F      
| |     F          
| S                
E                  
