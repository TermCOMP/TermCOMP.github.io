[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 425 length 1822
CNF 425 vars 1822 clauses
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 196 length 801
CNF 196 vars 801 clauses
last 264 length 1076
CNF 264 vars 1076 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1286, clauses: 4753
last 1286 length 4753
CNF 1286 vars 4753 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1286, clauses: 4753, status: Unsatisfied, time: 0.20338028s
last 2236 length 9437
last 2283 length 9717
CNF 2236 vars 9437 clauses
CNF 2283 vars 9717 clauses
last 2283 length 9717
**************************************************
summary
**************************************************
SRS with 2 strict rules and 1 weak rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 18 strict rules and 9 weak rules on 9 letters       weights
SRS with 9 strict rules and 9 weak rules on 8 letters       Matrix   { monotone = Strict, domain = Natural, method = KBO, shape = Full, bits = 1, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 2, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 6 strict rules and 9 weak rules on 8 letters       weights
SRS with 0 strict rules and 9 weak rules on 5 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, b] -> [b, a] {- Input 0 -}
  [c, b] -> [b, c, a] {- Input 1 -}
  [a] ->= [a, c, a] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, b], [b, a]] -> [ [a, b] , [b, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, a], [a, b], [b, b]] -> [ [a, b] , [b, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, a], [a, b], [b, c]] -> [ [a, b] , [b, a] , [ a , c ] ] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, a], [a, b], [b, a]] -> [ [b, b] , [b, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, a], [a, b], [b, b]] -> [ [b, b] , [b, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, a], [a, b], [b, c]] -> [ [b, b] , [b, a] , [ a , c ] ] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, a], [a, b], [b, a]] -> [ [c, b] , [b, a] , [ a , a ] ] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, a], [a, b], [b, b]] -> [ [c, b] , [b, a] , [ a , b ] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, a], [a, b], [b, c]] -> [ [c, b] , [b, a] , [ a , c ] ] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, c], [c, b], [b, a]] -> [ [a, b] , [b, c] , [c, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, c], [c, b], [b, b]] -> [ [a, b] , [b, c] , [c, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, c], [c, b], [b, c]] -> [ [a, b] , [b, c] , [c, a] , [a, c] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, c], [c, b], [b, a]] -> [ [b, b] , [b, c] , [c, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, c], [c, b], [b, b]] -> [ [b, b] , [b, c] , [c, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, c], [c, b], [b, c]] -> [ [b, b] , [b, c] , [c, a] , [a, c] ] {- Semlab 1 (Concon 2 (Input 1)) -}last 2236 length 9437

  [[c, c], [c, b], [b, a]] -> [ [c, b] , [b, c] , [c, a] , [a, a] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, c], [c, b], [b, b]] -> [ [c, b] , [b, c] , [c, a] , [a, b] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, c], [c, b], [b, c]] -> [ [c, b] , [b, c] , [c, a] , [a, c] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, a], [a, a]] ->= [ [a, a] , [a, c] , [c, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, a], [a, b]] ->= [ [a, a] , [a, c] , [c, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, a], [a, c]] ->= [ [a, a] , [a, c] , [c, a] , [a, c] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, a], [a, a]] ->= [ [b, a] , [a, c] , [c, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, a], [a, b]] ->= [ [b, a] , [a, c] , [c, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, a], [a, c]] ->= [ [b, a] , [a, c] , [c, a] , [a, c] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, a], [a, a]] ->= [ [c, a] , [a, c] , [c, a] , [a, a] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, a], [a, b]] ->= [ [c, a] , [a, c] , [c, a] , [a, b] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, a], [a, c]] ->= [ [c, a] , [a, c] , [c, a] , [a, c] ] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  ([a, a], 1/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 1/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 1/1)
   property Termination
has value Just True
for SRS
  [[c, a], [a, a], [a, b], [b, a]] -> [ [c, b] , [b, a] , [ a , a ] ] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, a], [a, b], [b, b]] -> [ [c, b] , [b, a] , [ a , b ] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, a], [a, b], [b, c]] -> [ [c, b] , [b, a] , [ a , c ] ] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, c], [c, b], [b, a]] -> [ [a, b] , [b, c] , [c, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, c], [c, b], [b, b]] -> [ [a, b] , [b, c] , [c, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, c], [c, b], [b, c]] -> [ [a, b] , [b, c] , [c, a] , [a, c] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, c], [c, b], [b, a]] -> [ [b, b] , [b, c] , [c, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, c], [c, b], [b, b]] -> [ [b, b] , [b, c] , [c, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, c], [c, b], [b, c]] -> [ [b, b] , [b, c] , [c, a] , [a, c] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[a, a], [a, a]] ->= [ [a, a] , [a, c] , [c, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, a], [a, b]] ->= [ [a, a] , [a, c] , [c, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, a], [a, c]] ->= [ [a, a] , [a, c] , [c, a] , [a, c] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, a], [a, a]] ->= [ [b, a] , [a, c] , [c, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, a], [a, b]] ->= [ [b, a] , [a, c] , [c, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, a], [a, c]] ->= [ [b, a] , [a, c] , [c, a] , [a, c] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, a], [a, a]] ->= [ [c, a] , [a, c] , [c, a] , [a, a] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, a], [a, b]] ->= [ [c, a] , [a, c] , [c, a] , [a, b] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, a], [a, c]] ->= [ [c, a] , [a, c] , [c, a] , [a, c] ] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  ( [a, a]
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( [a, b]
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( [a, c]
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( [b, a]
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( [b, b]
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( [b, c]
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( [c, a]
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( [c, b]
  , Ek 2  / 1 1 \
          \ 0 1 / )
   property Termination
has value Just True
for SRS
  [[a, c], [c, b], [b, a]] -> [ [a, b] , [b, c] , [c, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, c], [c, b], [b, b]] -> [ [a, b] , [b, c] , [c, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, c], [c, b], [b, c]] -> [ [a, b] , [b, c] , [c, a] , [a, c] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, c], [c, b], [b, a]] -> [ [b, b] , [b, c] , [c, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, c], [c, b], [b, b]] -> [ [b, b] , [b, c] , [c, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, c], [c, b], [b, c]] -> [ [b, b] , [b, c] , [c, a] , [a, c] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[a, a], [a, a]] ->= [ [a, a] , [a, c] , [c, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, a], [a, b]] ->= [ [a, a] , [a, c] , [c, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, a], [a, c]] ->= [ [a, a] , [a, c] , [c, a] , [a, c] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, a], [a, a]] ->= [ [b, a] , [a, c] , [c, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, a], [a, b]] ->= [ [b, a] , [a, c] , [c, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, a], [a, c]] ->= [ [b, a] , [a, c] , [c, a] , [a, c] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, a], [a, a]] ->= [ [c, a] , [a, c] , [c, a] , [a, a] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, a], [a, b]] ->= [ [c, a] , [a, c] , [c, a] , [a, b] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, a], [a, c]] ->= [ [c, a] , [a, c] , [c, a] , [a, c] ] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  last 2283 length 9717
CNF 2283 vars 9717 clauses
([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 1/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 1/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, a]] ->= [ [a, a] , [a, c] , [c, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, a], [a, b]] ->= [ [a, a] , [a, c] , [c, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, a], [a, c]] ->= [ [a, a] , [a, c] , [c, a] , [a, c] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, a], [a, a]] ->= [ [b, a] , [a, c] , [c, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, a], [a, b]] ->= [ [b, a] , [a, c] , [c, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, a], [a, c]] ->= [ [b, a] , [a, c] , [c, a] , [a, c] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, a], [a, a]] ->= [ [c, a] , [a, c] , [c, a] , [a, a] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, a], [a, b]] ->= [ [c, a] , [a, c] , [c, a] , [a, b] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, a], [a, c]] ->= [ [c, a] , [a, c] , [c, a] , [a, c] ] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  no strict rules

**************************************************
skeleton: (2/1,3)\TileAllAll{2}(18/9,9)\Weight(9/9,8)\Matrix{\Natural}{2}(6/9,8)\Weight(0/9,5)[]
**************************************************
let {slowdown = 1.0}
in let last 2236 length 9437
{verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 2236 vars 9437 clauses
CNF 2283 vars 9717 clauses


**************************************************
CNF 2236 vars 9437 clauses
S        Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
S        , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
S        , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
S        = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
S        , cpf = False}" , input_size = Size { num_rules = 18 , num_strict_rules
S        = 9 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 8 , total_length
S        = 117} , self = 70 , parent = Nothing , duration = 0.363090299000 , status
S        = Success , start = 2025-09-04 08:29:16.892523535 UTC , finish = 2025-09-04
S        08:29:17.255613834 UTC , thread_cap_info = ("ThreadId 118", 2, False)}
S        
| S      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| S      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| S      = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| S      = 9 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 8 , total_length
| S      = 117} , self = 72 , parent = Nothing , duration = 0.663591179000 , status
| S      = Success , start = 2025-09-04 08:29:16.910615902 UTC , finish = 2025-09-04
| S      08:29:17.574207081 UTC , thread_cap_info = ("ThreadId 119", 2, False)}
| S      
| | S    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | S    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | S    = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | S    = 9 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 8 , total_length
| | S    = 117} , self = 73 , parent = Nothing , duration = 0.636160265000 , status
| | S    = Success , start = 2025-09-04 08:29:16.938336806 UTC , finish = 2025-09-04
| | S    08:29:17.574497071 UTC , thread_cap_info = ("ThreadId 120", 2, False)}
| | S    
| | | F  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | F  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | F  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| | | F  = 3 , total_length = 14} , self = 71 , parent = Nothing , duration = 0.282681312000
| | | F  , status = Fail , start = 2025-09-04 08:29:17.006032507 UTC , finish =
| | | F  2025-09-04 08:29:17.288713819 UTC , thread_cap_info = ("ThreadId 139",
| | | F  1, False)}
| | | F  
S | | |  
  | | F  
E | |    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
E | |    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
E | |    = Size { num_rules = 1152 , num_strict_rules = 576 , num_top_rules = 0
E | |    , num_weak_rules = 576 , alphabet_size = 64 , total_length = 9792} , self
E | |    = 78 , parent = Nothing , duration = 0.382945248000 , status = Except "AsyncCancelled"
E | |    , start = 2025-09-04 08:29:17.288924847 UTC , finish = 2025-09-04 08:29:17.671870095
E | |    UTC , thread_cap_info = ("ThreadId 152", 2, False)}
E | |    
| S |    
|   S    
E        
