[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 310 length 1465
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
CNF 310 vars 1465 clauses
last 425 length 2175
CNF 425 vars 2175 clauses
last 1150 length 5557
CNF 1150 vars 5557 clauses
last 1040 length 5437
CNF 1040 vars 5437 clauses
last 310 length 1429
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4259, clauses: 16104
last 4259 length 16104
last 302 length 1353
CNF 310 vars 1429 clauses
CNF 4259 vars 16104 clauses
CNF 302 vars 1353 clauses
last 958 length 4525
last 931 length 4944
last 958 length 4525
last 931 length 4944
last 1626 length 9321
last 1394 length 7230
last 1764 length 8348
last 1724 length 9169
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4259, clauses: 16104, status: Unsatisfied, time: 0.211835574s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1280, clauses: 5010
CNF 958 vars 4525 clauses
CNF 931 vars 4944 clauses
CNF 958 vars 4525 clauses
CNF 931 vars 4944 clauses
CNF 1626 vars 9321 clauses
CNF 1394 vars 7230 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9412, clauses: 39189
last 14114 length 82443
CNF 1764 vars 8348 clauses
CNF 1724 vars 9169 clauses
last 1280 length 5010
last 17546 length 122128
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2198, clauses: 8686
last 9412 length 39189
CNF 14114 vars 82443 clauses
CNF 1280 vars 5010 clauses
last 2198 length 8686
CNF 17546 vars 122128 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16166, clauses: 67240
CNF 9412 vars 39189 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1280, clauses: 5010, status: Unsatisfied, time: 0.358338338s
CNF 2198 vars 8686 clauses
last 16166 length 67240
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9412, clauses: 39189, status: Satisfied, time: 0.353830861s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2198, clauses: 8686, status: Satisfied, time: 0.261861992s
CNF 16166 vars 67240 clauses
**************************************************
summary
**************************************************
SRS with 1 strict rules and 1 weak rules on 2 letters       mirror
SRS with 1 strict rules and 1 weak rules on 2 letters       context
SRS with 1 strict rules and 2 weak rules on 2 letters       mirror
SRS with 1 strict rules and 2 weak rules on 2 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 2 weak rules on 2 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, a] -> [a, b] {- Input 0 -}
  [] ->= [a, a, b, a] {- Input 1 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, b, b, a] -> [b, a] {- Mirror (Input 0) -}
  [] ->= [a, b, a, a] {- Mirror (Input 1) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, b, b, a] -> [b, a] {- Mirror (Input 0) -}
  [a] ->= [a, a, b, a, a] {- Mirror (Input 1) -}
  [b] ->= [b, a, b, a, a] {- Mirror (Input 1) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, b, b, a] -> [a, b] {- Input 0 -}
  [a] ->= [a, a, b, a, a] {- Input 1 -}
  [b] ->= [a, a, b, a, b] {- Input 1 -}
reason
  ( a
  , St  / 0A  -   -   \
        | -1A -1A -1A |
        \ -1A -   -   / )
  ( b
  , St  / 0A -  0A  \
        | 0A 1A 2A  |
        \ 1A 2A -1A / )
   property Termination
has value Just True
for SRS
  [a] ->= [a, a, b, a, a] {- Input 1 -}
  [b] ->= [a, a, b, a, b] {- Input 1 -}
reason
  no strict rules

**************************************************
skeleton: \Mirror(1/1,2)\Context\Mirror(1/2,2)\Matrix{\ArcticBZ}{3}(0/2,2)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.949916150000
  min duration 0.006867386000
  total durat. 3.819269023000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.054279930000
  min duration 0.019357705000
  total durat. 4.037008697000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 40
      , num_strict_rules = 8
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 13
      , total_length = 336}
    , self = 113
    , parent = Nothing
    , duration = 1.054279930000
    , status = Fail
    , start = 2025-09-04 08:23:26.325607375 UTC
    , finish = 2025-09-04 08:23:27.379887305 UTC
    , thread_cap_info = ("ThreadId 184", 1, False)}
**************************************************
F                          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                          = False}" , input_size = Size { num_rules = 2 , num_strict_rules = 1 ,
F                          num_top_rules = 0 , num_weak_rules = 1 , alphabet_size = 2 , total_length
F                          = 10} , self = 92 , parent = Nothing , duration = 0.155019707000 , status
F                          = Fail , start = 2025-09-04 08:23:26.165825035 UTC , finish = 2025-09-04
F                          08:23:26.320844742 UTC , thread_cap_info = ("ThreadId 112", 3, False)}
F                          
| F                        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F                        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F                        = 18 , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 3
| F                        , alphabet_size = 6 , total_length = 78} , self = 98 , parent = Nothing
| F                        , duration = 0.714423874000 , status = Fail , start = 2025-09-04 08:23:26.188678543
| F                        UTC , finish = 2025-09-04 08:23:26.903102417 UTC , thread_cap_info = ("ThreadId
| F                        132", 1, False)}
| F                        
| | F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | F                      = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | F                      = 34} , self = 100 , parent = Nothing , duration = 0.679667975000 , status
| | F                      = Fail , start = 2025-09-04 08:23:26.246329363 UTC , finish = 2025-09-04
| | F                      08:23:26.925997338 UTC , thread_cap_info = ("ThreadId 156", 2, False)}
| | F                      
| | | F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | F                    = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 2 , total_length
| | | F                    = 18} , self = 97 , parent = Nothing , duration = 0.212567698000 , status
| | | F                    = Fail , start = 2025-09-04 08:23:26.251832495 UTC , finish = 2025-09-04
| | | F                    08:23:26.464400193 UTC , thread_cap_info = ("ThreadId 162", 0, False)}
| | | F                    
| | | | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | F                  = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | F                  = 34} , self = 103 , parent = Nothing , duration = 0.674179960000 , status
| | | | F                  = Fail , start = 2025-09-04 08:23:26.263757887 UTC , finish = 2025-09-04
| | | | F                  08:23:26.937937847 UTC , thread_cap_info = ("ThreadId 157", 2, False)}
| | | | F                  
| | | | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | F                = 15 , num_top_rules = 15 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | | F                = 78} , self = 102 , parent = Nothing , duration = 0.672315879000 , status
| | | | | F                = Fail , start = 2025-09-04 08:23:26.263784782 UTC , finish = 2025-09-04
| | | | | F                08:23:26.936100661 UTC , thread_cap_info = ("ThreadId 160", 2, False)}
| | | | | F                
| | | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | F              = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | F              = 34} , self = 99 , parent = Nothing , duration = 0.654617333000 , status
| | | | | | F              = Fail , start = 2025-09-04 08:23:26.263789291 UTC , finish = 2025-09-04
| | | | | | F              08:23:26.918406624 UTC , thread_cap_info = ("ThreadId 170", 3, False)}
| | | | | | F              
| | | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | | | F            = 15 , num_top_rules = 15 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | | | | F            = 78} , self = 104 , parent = Nothing , duration = 0.703468303000 , status
| | | | | | | F            = Fail , start = 2025-09-04 08:23:26.264530282 UTC , finish = 2025-09-04
| | | | | | | F            08:23:26.967998585 UTC , thread_cap_info = ("ThreadId 159", 1, False)}
| | | | | | | F            
| | | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | F          = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | F          = 34} , self = 101 , parent = Nothing , duration = 0.656984599000 , status
| | | | | | | | F          = Fail , start = 2025-09-04 08:23:26.27692435 UTC , finish = 2025-09-04
| | | | | | | | F          08:23:26.933908949 UTC , thread_cap_info = ("ThreadId 172", 3, False)}
| | | | | | | | F          
F | | | | | | | |          
F | | | | | | | |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | | | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | | | |          = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
F | | | | | | | |          = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
F | | | | | | | |          = 64} , self = 105 , parent = Nothing , duration = 0.717123876000 , status
F | | | | | | | |          = Fail , start = 2025-09-04 08:23:26.323361139 UTC , finish = 2025-09-04
F | | | | | | | |          08:23:27.040485015 UTC , thread_cap_info = ("ThreadId 177", 1, False)}
F | | | | | | | |          
| | | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 40 , num_strict_rules
| | | | | | | | | F        = 8 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 13 , total_length
| | | | | | | | | F        = 336} , self = 107 , parent = Nothing , duration = 0.949916150000 , status
| | | | | | | | | F        = Fail , start = 2025-09-04 08:23:26.325603713 UTC , finish = 2025-09-04
| | | | | | | | | F        08:23:27.275519863 UTC , thread_cap_info = ("ThreadId 182", 1, False)}
| | | | | | | | | F        
| | | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 40 , num_strict_rules
| | | | | | | | | | F      = 8 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 13 , total_length
| | | | | | | | | | F      = 336} , self = 113 , parent = Nothing , duration = 1.054279930000 , status
| | | | | | | | | | F      = Fail , start = 2025-09-04 08:23:26.325607375 UTC , finish = 2025-09-04
| | | | | | | | | | F      08:23:27.379887305 UTC , thread_cap_info = ("ThreadId 184", 1, False)}
| | | | | | | | | | F      
| | | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | | | F    = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | | | | F    = 64} , self = 106 , parent = Nothing , duration = 0.747322926000 , status
| | | | | | | | | | | F    = Fail , start = 2025-09-04 08:23:26.343926656 UTC , finish = 2025-09-04
| | | | | | | | | | | F    08:23:27.091249582 UTC , thread_cap_info = ("ThreadId 186", 0, False)}
| | | | | | | | | | | F    
| | | | | | | | | | | | S  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | | | | | | | S  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | | | | S  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | | | | S  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | | | | S  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | | | | S  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | | | | | | | | S  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | | | | | | | | | | | S  = 2 , total_length = 18} , self = 109 , parent = Nothing , duration = 0.965824466000
| | | | | | | | | | | | S  , status = Success , start = 2025-09-04 08:23:26.382934173 UTC , finish
| | | | | | | | | | | | S  = 2025-09-04 08:23:27.348758639 UTC , thread_cap_info = ("ThreadId 188",
| | | | | | | | | | | | S  0, False)}
| | | | | | | | | | | | S  
| | | F | | | | | | | | |  
| | | F | | | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | F | | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F | | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F | | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F | | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F | | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | F | | | | | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | | F | | | | | | | | |  = 2 , total_length = 18} , self = 108 , parent = Nothing , duration = 0.798807404000
| | | F | | | | | | | | |  , status = Fail , start = 2025-09-04 08:23:26.524485937 UTC , finish =
| | | F | | | | | | | | |  2025-09-04 08:23:27.323293341 UTC , thread_cap_info = ("ThreadId 189",
| | | F | | | | | | | | |  0, False)}
| | | F | | | | | | | | |  
| F | | | | | | | | | | |  
|   | | | | F | | | | | |  
|   F | | |   | | | | | |  
|     | | |   | F | | | |  
|     | | F   |   | | | |  
|     | F     |   | | | |  
| S   |       |   | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| S   |       |   | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S   |       |   | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| S   |       |   | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S   |       |   | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S   |       |   | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| S   |       |   | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| S   |       |   | | | |  = 4 , total_length = 34} , self = 111 , parent = Nothing , duration = 0.419552629000
| S   |       |   | | | |  , status = Success , start = 2025-09-04 08:23:26.94449004 UTC , finish
| S   |       |   | | | |  = 2025-09-04 08:23:27.364042669 UTC , thread_cap_info = ("ThreadId 200",
| S   |       |   | | | |  3, False)}
| S   |       |   | | | |  
| |   |       F   | | | |  
F |   |           | | | |  
  |   |           | | F |  
  |   |           F |   |  
  |   F             |   |  
  |                 |   S  
  S                 |      
                    F      
