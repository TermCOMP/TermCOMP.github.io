[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 606 length 3694
CNF 606 vars 3694 clauses
last 717 length 3460
CNF 717 vars 3460 clauses
last 803 length 3900
CNF 803 vars 3900 clauses
last 1048 length 5392
CNF 1048 vars 5392 clauses
last 1160 length 6944
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3340, clauses: 12517
CNF 1160 vars 6944 clauses
last 3340 length 12517
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3445, clauses: 12715
last 1442 length 7414
last 547 length 2416
last 661 length 3295
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7844, clauses: 32617
last 581 length 2581
last 1688 length 9559
last 843 length 4679
last 1551 length 8163
last 661 length 3295
last 843 length 4679
last 1703 length 9995
last 1793 length 8158
last 1449 length 6718
CNF 3340 vars 12517 clauses
last 12127 length 73389
last 3445 length 12715
CNF 1442 vars 7414 clauses
CNF 547 vars 2416 clauses
CNF 661 vars 3295 clauses
last 7844 length 32617
last 13303 length 104405
CNF 581 vars 2581 clauses
CNF 843 vars 4679 clauses
CNF 1688 vars 9559 clauses
CNF 843 vars 4679 clauses
CNF 1551 vars 8163 clauses
CNF 1793 vars 8158 clauses
CNF 661 vars 3295 clauses
CNF 1703 vars 9995 clauses
CNF 1449 vars 6718 clauses
CNF 12127 vars 73389 clauses
CNF 3445 vars 12715 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3340, clauses: 12517, status: Unsatisfied, time: 0.493796306s
CNF 7844 vars 32617 clauses
CNF 13303 vars 104405 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13646, clauses: 56458
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1924, clauses: 7398
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2102, clauses: 8285
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14860, clauses: 62055
last 13646 length 56458
last 1924 length 7398
last 2102 length 8285
last 14860 length 62055
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3445, clauses: 12715, status: Unsatisfied, time: 0.542982831s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7844, clauses: 32617, status: Unsatisfied, time: 0.523307937s
CNF 1924 vars 7398 clauses
CNF 13646 vars 56458 clauses
CNF 2102 vars 8285 clauses
CNF 14860 vars 62055 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2102, clauses: 8285, status: Unsatisfied, time: 0.152289262s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1924, clauses: 7398, status: Satisfied, time: 0.152281556s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 8 weak rules on 4 letters       weights
SRS with 1 strict rules and 4 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 4 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, a, b] -> [] {- Input 0 -}
  [a] ->= [] {- Input 1 -}
  [] ->= [b, a, b, b] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[b, b], [b, a], [a, a], [a, b], [b, b]] -> [ [ b , b ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[b, b], [b, a], [a, a], [a, b], [b, a]] -> [ [ b , a ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, b], [b, a], [a, a], [a, b], [b, b]] -> [ [ a , b ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[a, b], [b, a], [a, a], [a, b], [b, a]] -> [ [ a , a ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, b]] ->= [[b, b]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, a], [a, a]] ->= [[b, a]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, b]] ->= [[a, b]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, a], [a, a]] ->= [[a, a]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, a] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[a, a]] ->= [ [a, b] , [b, a] , [a, b] , [b, b] , [b, a] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  ([a, a], 1/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
   property Termination
has value Just True
for SRS
  [[a, b], [b, a], [a, a], [a, b], [b, a]] -> [ [ a , a ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, b]] ->= [[b, b]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, a] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 1 (Concon 0 (Input 2)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 7 \
                | 0 2 1 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 1 0 \
                | 0 2 0 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[b, a], [a, b]] ->= [[b, b]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, a] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 1 (Concon 0 (Input 2)) -}
reason
  no strict rules

**************************************************
skeleton: (1/2,2)\TileAllAll{2}(4/8,4)\Weight(1/4,4)\Matrix{\Natural}{3}(0/4,3)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.859461672000
  min duration 0.013457179000
  total durat. 4.613443234000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 0.925252752000
  min duration 0.009719764000
  total durat. 5.714592976000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.050168935000
  min duration 1.050168935000
  total durat. 1.050168935000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 58}
    , self = 122
    , parent = Nothing
    , duration = 1.050168935000
    , status = Fail
    , start = 2025-09-04 08:27:27.47773987 UTC
    , finish = 2025-09-04 08:27:28.527908805 UTC
    , thread_cap_info = ("ThreadId 123", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.026858451000
  min duration 0.975777743000
  total durat. 2.002636194000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 58}
    , self = 120
    , parent = Nothing
    , duration = 1.026858451000
    , status = Fail
    , start = 2025-09-04 08:27:27.489507747 UTC
    , finish = 2025-09-04 08:27:28.516366198 UTC
    , thread_cap_info = ("ThreadId 135", 3, False)}
**************************************************
F                                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F                                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                                  = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
F                                  = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size = 4 , total_length
F                                  = 58} , self = 103 , parent = Nothing , duration = 0.149495899000 , status
F                                  = Fail , start = 2025-09-04 08:27:27.458875372 UTC , finish = 2025-09-04
F                                  08:27:27.608371271 UTC , thread_cap_info = ("ThreadId 95", 3, False)}
F                                  
| F                                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F                                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F                                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F                                = 14 , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 4
| F                                , alphabet_size = 4 , total_length = 58} , self = 118 , parent = Nothing
| F                                , duration = 0.975777743000 , status = Fail , start = 2025-09-04 08:27:27.473125182
| F                                UTC , finish = 2025-09-04 08:27:28.448902925 UTC , thread_cap_info = ("ThreadId
| F                                121", 2, False)}
| F                                
| | F                              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F                              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F                              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F                              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F                              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F                              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | F                              , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size
| | F                              = 4 , total_length = 58} , self = 122 , parent = Nothing , duration = 1.050168935000
| | F                              , status = Fail , start = 2025-09-04 08:27:27.47773987 UTC , finish = 2025-09-04
| | F                              08:27:28.527908805 UTC , thread_cap_info = ("ThreadId 123", 2, False)}
| | F                              
| | | F                            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F                            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F                            = 14 , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 4
| | | F                            , alphabet_size = 4 , total_length = 58} , self = 120 , parent = Nothing
| | | F                            , duration = 1.026858451000 , status = Fail , start = 2025-09-04 08:27:27.489507747
| | | F                            UTC , finish = 2025-09-04 08:27:28.516366198 UTC , thread_cap_info = ("ThreadId
| | | F                            135", 3, False)}
| | | F                            
| | | | F                          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                          = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | F                          = 16 , num_top_rules = 16 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | F                          = 84} , self = 108 , parent = Nothing , duration = 0.497771204000 , status
| | | | F                          = Fail , start = 2025-09-04 08:27:27.53226959 UTC , finish = 2025-09-04
| | | | F                          08:27:28.030040794 UTC , thread_cap_info = ("ThreadId 143", 3, False)}
| | | | F                          
| | | | | F                        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                        = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | | F                        = 16 , num_top_rules = 16 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | F                        = 84} , self = 111 , parent = Nothing , duration = 0.802368541000 , status
| | | | | F                        = Fail , start = 2025-09-04 08:27:27.546877042 UTC , finish = 2025-09-04
| | | | | F                        08:27:28.349245583 UTC , thread_cap_info = ("ThreadId 144", 3, False)}
| | | | | F                        
| | | | | | F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | F                      = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 2 , total_length
| | | | | | F                      = 30} , self = 106 , parent = Nothing , duration = 0.477672076000 , status
| | | | | | F                      = Fail , start = 2025-09-04 08:27:27.548916455 UTC , finish = 2025-09-04
| | | | | | F                      08:27:28.026588531 UTC , thread_cap_info = ("ThreadId 156", 0, False)}
| | | | | | F                      
| | | | | | | F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | | | | F                    = 16 , num_top_rules = 16 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | | | F                    = 84} , self = 112 , parent = Nothing , duration = 0.800945702000 , status
| | | | | | | F                    = Fail , start = 2025-09-04 08:27:27.548936621 UTC , finish = 2025-09-04
| | | | | | | F                    08:27:28.349882323 UTC , thread_cap_info = ("ThreadId 159", 1, False)}
| | | | | | | F                    
| | | | | | | | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | | | | | F                  = 16 , num_top_rules = 16 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | | | | F                  = 84} , self = 116 , parent = Nothing , duration = 0.866728582000 , status
| | | | | | | | F                  = Fail , start = 2025-09-04 08:27:27.548938872 UTC , finish = 2025-09-04
| | | | | | | | F                  08:27:28.415667454 UTC , thread_cap_info = ("ThreadId 160", 1, False)}
| | | | | | | | F                  
| | | | | | | | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | | | F                = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 2 , total_length
| | | | | | | | | F                = 30} , self = 109 , parent = Nothing , duration = 0.727316997000 , status
| | | | | | | | | F                = Fail , start = 2025-09-04 08:27:27.566834179 UTC , finish = 2025-09-04
| | | | | | | | | F                08:27:28.294151176 UTC , thread_cap_info = ("ThreadId 157", 0, False)}
| | | | | | | | | F                
| | | | | | | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | | | F              = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | | | | F              = 27} , self = 107 , parent = Nothing , duration = 0.458770620000 , status
| | | | | | | | | | F              = Fail , start = 2025-09-04 08:27:27.56796166 UTC , finish = 2025-09-04
| | | | | | | | | | F              08:27:28.02673228 UTC , thread_cap_info = ("ThreadId 167", 3, False)}
| | | | | | | | | | F              
| | | | | | | | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | | | | F            = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | | | | | F            = 27} , self = 110 , parent = Nothing , duration = 0.731430136000 , status
| | | | | | | | | | | F            = Fail , start = 2025-09-04 08:27:27.57830384 UTC , finish = 2025-09-04
| | | | | | | | | | | F            08:27:28.309733976 UTC , thread_cap_info = ("ThreadId 168", 3, False)}
| | | | | | | | | | | F            
| | | | | | | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 37 , num_strict_rules
| | | | | | | | | | | | F          = 1 , num_top_rules = 0 , num_weak_rules = 36 , alphabet_size = 13 , total_length
| | | | | | | | | | | | F          = 284} , self = 121 , parent = Nothing , duration = 0.925252752000 , status
| | | | | | | | | | | | F          = Fail , start = 2025-09-04 08:27:27.594449634 UTC , finish = 2025-09-04
| | | | | | | | | | | | F          08:27:28.519702386 UTC , thread_cap_info = ("ThreadId 181", 2, False)}
| | | | | | | | | | | | F          
| | | | | | | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 37 , num_strict_rules
| | | | | | | | | | | | | F        = 1 , num_top_rules = 0 , num_weak_rules = 36 , alphabet_size = 13 , total_length
| | | | | | | | | | | | | F        = 284} , self = 119 , parent = Nothing , duration = 0.859461672000 , statusMatrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14860, clauses: 62055, status: Satisfied, time: 0.19508219s

| | | | | | | | | | | | | F        = Fail , start = 2025-09-04 08:27:27.607912193 UTC , finish = 2025-09-04
| | | | | | | | | | | | | F        08:27:28.467373865 UTC , thread_cap_info = ("ThreadId 179", 2, False)}
| | | | | | | | | | | | | F        
F | | | | | | | | | | | | |        
F | | | | | | | | | | | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | | | | | | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | | | | | | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
F | | | | | | | | | | | | |        = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
F | | | | | | | | | | | | |        = 27} , self = 115 , parent = Nothing , duration = 0.762706863000 , status
F | | | | | | | | | | | | |        = Fail , start = 2025-09-04 08:27:27.628325103 UTC , finish = 2025-09-04
F | | | | | | | | | | | | |        08:27:28.391031966 UTC , thread_cap_info = ("ThreadId 171", 3, False)}
F | | | | | | | | | | | | |        
| | | | | | | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | | | | | | | F      = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | F      = 27} , self = 113 , parent = Nothing , duration = 0.721555286000 , status
| | | | | | | | | | | | | | F      = Fail , start = 2025-09-04 08:27:27.62834752 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | F      08:27:28.349902806 UTC , thread_cap_info = ("ThreadId 173", 3, False)}
| | | | | | | | | | | | | | F      
| | | | | | | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | | | | | | | | | F    = 2 , num_top_rules = 0 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | | F    = 74} , self = 114 , parent = Nothing , duration = 0.711916776000 , status
| | | | | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:27:27.661418032 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | F    08:27:28.373334808 UTC , thread_cap_info = ("ThreadId 186", 0, False)}
| | | | | | | | | | | | | | | F    
| | | | | | | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | | | | | | | | | | F  = 2 , num_top_rules = 0 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | | | F  = 74} , self = 117 , parent = Nothing , duration = 0.762737211000 , status
| | | | | | | | | | | | | | | | F  = Fail , start = 2025-09-04 08:27:27.667914108 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | | F  08:27:28.430651319 UTC , thread_cap_info = ("ThreadId 188", 0, False)}
| | | | | | | | | | | | | | | | F  
| | | | | | F | | | | | | | | | |  
| | | | | |   | | | F | | | | | |  
| | | | | | E | | |   | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | E | | |   | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E | | |   | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E | | |   | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E | | |   | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E | | |   | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | E | | |   | | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | | | | | E | | |   | | | | | |  = 4 , total_length = 27} , self = 126 , parent = Nothing , duration = 0.626143369000
| | | | | | E | | |   | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:27:28.026752803
| | | | | | E | | |   | | | | | |  UTC , finish = 2025-09-04 08:27:28.652896172 UTC , thread_cap_info = ("ThreadId
| | | | | | E | | |   | | | | | |  206", 3, False)}
| | | | | | E | | |   | | | | | |  
| | | | F | | | | |   | | | | | |  
| | | |   | | | | F   | | | | | |  
| | | |   | | | |     F | | | | |  
| | | | S | | | |       | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | S | | | |       | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | S | | | |       | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | S | | | |       | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S | | | |       | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S | | | |       | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | S | | | |       | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | | | S | | | |       | | | | |  = 4 , total_length = 27} , self = 124 , parent = Nothing , duration = 0.342829753000
| | | | S | | | |       | | | | |  , status = Success , start = 2025-09-04 08:27:28.309765156 UTC , finish
| | | | S | | | |       | | | | |  = 2025-09-04 08:27:28.652594909 UTC , thread_cap_info = ("ThreadId 209",
| | | | S | | | |       | | | | |  3, False)}
| | | | S | | | |       | | | | |  
| | | | | | | | | F     | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | | | | F     | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | | | F     | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | | | F     | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | F     | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | F     | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | | | | F     | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | | | | | | | | F     | | | | |  = 2 , total_length = 30} , self = 123 , parent = Nothing , duration = 0.342150958000
| | | | | | | | | F     | | | | |  , status = Fail , start = 2025-09-04 08:27:28.309767795 UTC , finish =
| | | | | | | | | F     | | | | |  2025-09-04 08:27:28.651918753 UTC , thread_cap_info = ("ThreadId 210",
| | | | | | | | | F     | | | | |  0, False)}
| | | | | | | | | F     | | | | |  
| | | | | F | | | |     | | | | |  
| | | | |   | F | |     | | | | |  
| | | | |   |   | |     | | F | |  
| | | | |   |   | |     | |   F |  
F | | | |   |   | |     | |     |  
  | | | |   |   F |     | |     |  
  | | | |   |     |     | |     F  
  F | | |   |     |     | |        
    | | |   |     |     | F        
    | F |   |     |     |          
    |   |   |     |     F          
    F   |   |     |                
        |   |     F                
        S   |                      
            E                      
