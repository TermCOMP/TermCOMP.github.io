[Info] pool sizes (success) 13 seen 13 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 13 seen 13 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 644 length 2541
last 562 length 2171
CNF 562 vars 2171 clauses
CNF 644 vars 2541 clauses
last 12 length 33
CNF 12 vars 33 clauses
last 12 length 33
CNF 12 vars 33 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3714, clauses: 13055
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 197, clauses: 663
last 197 length 663
CNF 197 vars 663 clauses
last 3714 length 13055
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 197, clauses: 663, status: Unsatisfied, time: 0.005153436s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 81, clauses: 235
CNF 3714 vars 13055 clauses
last 618 length 2413
last 683 length 2714
last 81 length 235
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12728, clauses: 52507
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3714, clauses: 13055, status: Satisfied, time: 0.213588588s
CNF 618 vars 2413 clauses
CNF 81 vars 235 clauses
CNF 683 vars 2714 clauses
last 12728 length 52507
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 81, clauses: 235, status: Unsatisfied, time: 1.099950969s
CNF 12728 vars 52507 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12728, clauses: 52507, status: Satisfied, time: 1.002791288s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4404, clauses: 16172
last 4404 length 16172
CNF 4404 vars 16172 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4404, clauses: 16172, status: Satisfied, time: 0.552562118s
last 487 length 1886
CNF 487 vars 1886 clauses
last 545 length 2151
CNF 545 vars 2151 clauses
last 443 length 1712
last 487 length 1919
CNF 443 vars 1712 clauses
CNF 487 vars 1919 clauses
last 399 length 1538
last 429 length 1687
CNF 399 vars 1538 clauses
CNF 429 vars 1687 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2959, clauses: 10641
last 2959 length 10641
CNF 2959 vars 10641 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2959, clauses: 10641, status: Satisfied, time: 0.136859037s
**************************************************
summary
**************************************************
SRS with 3 strict rules and 13 weak rules on 8 letters       weights
SRS with 1 strict rules and 13 weak rules on 8 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 11 weak rules on 7 letters       Matrix   { monotone = Strict, domain = Natural, method = KBO, shape = Full, bits = 1, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 2, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 10 weak rules on 7 letters       Matrix   { monotone = Strict, domain = Natural, method = KBO, shape = Full, bits = 1, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 2, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 9 weak rules on 7 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 9 weak rules on 7 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [d, n] -> [d] {- Input 0 -}
  [d, o] -> [d] {- Input 1 -}
  [o, u] -> [u] {- Input 2 -}
  [t, u] ->= [t, c, d] {- Input 3 -}
  [d, f] ->= [f, d] {- Input 4 -}
  [d, g] ->= [u, g] {- Input 5 -}
  [f, u] ->= [u, f] {- Input 6 -}
  [n, u] ->= [u] {- Input 7 -}
  [f] ->= [f, n] {- Input 8 -}
  [t] ->= [t, c, n] {- Input 9 -}
  [c, n] ->= [n, c] {- Input 10 -}
  [c, o] ->= [o, c] {- Input 11 -}
  [c, o] ->= [o] {- Input 12 -}
  [c, f] ->= [f, c] {- Input 13 -}
  [c, u] ->= [u, c] {- Input 14 -}
  [c, d] ->= [d, c] {- Input 15 -}
reason
  (d, 0/1)
  (t, 0/1)
  (n, 0/1)
  (g, 0/1)
  (f, 0/1)
  (o, 1/1)
  (u, 0/1)
  (c, 0/1)
   property Termination
has value Just True
for SRS
  [d, n] -> [d] {- Input 0 -}
  [t, u] ->= [t, c, d] {- Input 3 -}
  [d, f] ->= [f, d] {- Input 4 -}
  [d, g] ->= [u, g] {- Input 5 -}
  [f, u] ->= [u, f] {- Input 6 -}
  [n, u] ->= [u] {- Input 7 -}
  [f] ->= [f, n] {- Input 8 -}
  [t] ->= [t, c, n] {- Input 9 -}
  [c, n] ->= [n, c] {- Input 10 -}
  [c, o] ->= [o, c] {- Input 11 -}
  [c, o] ->= [o] {- Input 12 -}
  [c, f] ->= [f, c] {- Input 13 -}
  [c, u] ->= [u, c] {- Input 14 -}
  [c, d] ->= [d, c] {- Input 15 -}
reason
  ( d
  , St (Corner  / 1 2 4 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( t
  , St (Corner  / 1 6 0 \
                | 0 0 1 |
                \ 0 0 1 /) )
  ( n
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( g
  , St (Corner  / 1 5 0 \
                | 0 6 2 |
                \ 0 0 1 /) )
  ( f
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( o
  , St (Corner  / 1 5 7 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( u
  , St (Corner  / 1 0 7 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( c
  , St (Corner  / 1 4 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [d, n] -> [d] {- Input 0 -}
  [d, f] ->= [f, d] {- Input 4 -}
  [f, u] ->= [u, f] {- Input 6 -}
  [n, u] ->= [u] {- Input 7 -}
  [f] ->= [f, n] {- Input 8 -}
  [t] ->= [t, c, n] {- Input 9 -}
  [c, n] ->= [n, c] {- Input 10 -}
  [c, o] ->= [o, c] {- Input 11 -}
  [c, o] ->= [o] {- Input 12 -}
  [c, f] ->= [f, c] {- Input 13 -}
  [c, u] ->= [u, c] {- Input 14 -}
  [c, d] ->= [d, c] {- Input 15 -}
reason
  ( d
  , Ek 2  / 2 0 \
          \ 0 1 / )
  ( t
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( n
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( f
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( o
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( u
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( c
  , Ek 2  / 1 0 \
          \ 0 1 / )
   property Termination
has value Just True
for SRS
  [d, n] -> [d] {- Input 0 -}
  [f, u] ->= [u, f] {- Input 6 -}
  [n, u] ->= [u] {- Input 7 -}
  [f] ->= [f, n] {- Input 8 -}
  [t] ->= [t, c, n] {- Input 9 -}
  [c, n] ->= [n, c] {- Input 10 -}
  [c, o] ->= [o, c] {- Input 11 -}
  [c, o] ->= [o] {- Input 12 -}
  [c, f] ->= [f, c] {- Input 13 -}
  [c, u] ->= [u, c] {- Input 14 -}
  [c, d] ->= [d, c] {- Input 15 -}
reason
  ( d
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( t
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( n
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( f
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( o
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( u
  , Ek 2  / 1 0 \
          \ 0 2 / )
  ( c
  , Ek 2  / 1 0 \
          \ 0 1 / )
   property Termination
has value Just True
for SRS
  [d, n] -> [d] {- Input 0 -}
  [n, u] ->= [u] {- Input 7 -}
  [f] ->= [f, n] {- Input 8 -}
  [t] ->= [t, c, n] {- Input 9 -}
  [c, n] ->= [n, c] {- Input 10 -}
  [c, o] ->= [o, c] {- Input 11 -}
  [c, o] ->= [o] {- Input 12 -}
  [c, f] ->= [f, c] {- Input 13 -}
  [c, u] ->= [u, c] {- Input 14 -}
  [c, d] ->= [d, c] {- Input 15 -}
reason
  ( d
  , St (Corner  / 1 2 5 \
                | 0 0 4 |
                \ 0 0 1 /) )
  ( t
  , St (Corner  / 1 0 4 \
                | 0 0 1 |
                \ 0 0 1 /) )
  ( n
  , St (Corner  / 1 0 0 \
                | 0 4 2 |
                \ 0 0 1 /) )
  ( f
  , St (Corner  / 1 0 4 \
                | 0 0 2 |
                \ 0 0 1 /) )
  ( o
  , St (Corner  / 1 0 5 \
                | 0 0 2 |
                \ 0 0 1 /) )
  ( u
  , St (Corner  / 1 0 5 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( c
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [n, u] ->= [u] {- Input 7 -}
  [f] ->= [f, n] {- Input 8 -}
  [t] ->= [t, c, n] {- Input 9 -}
  [c, n] ->= [n, c] {- Input 10 -}
  [c, o] ->= [o, c] {- Input 11 -}
  [c, o] ->= [o] {- Input 12 -}
  [c, f] ->= [f, c] {- Input 13 -}
  [c, u] ->= [u, c] {- Input 14 -}
  [c, d] ->= [d, c] {- Input 15 -}
reason
  no strict rules

**************************************************
skeleton: (3/13,8)\Weight(1/13,8)\Matrix{\Natural}{3}(1/11,7)\Matrix{\Natural}{2}(1/10,7)\Matrix{\Natural}{2}(1/9,7)\Matrix{\Natural}{3}(0/9,7)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.108198851000
  min duration 0.040604096000
  total durat. 1.348579113000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 13
      , alphabet_size = 8
      , total_length = 53}
    , self = 70
    , parent = Nothing
    , duration = 1.108198851000
    , status = Fail
    , start = 2025-09-04 07:31:42.622927332 UTC
    , finish = 2025-09-04 07:31:43.731126183 UTC
    , thread_cap_info = ("ThreadId 110", 0, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.038912646000
  min duration 3.038912646000
  total durat. 3.038912646000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 3984}
    , self = 80
    , parent = Nothing
    , duration = 3.038912646000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:42.803984606 UTC
    , finish = 2025-09-04 07:31:45.842897252 UTC
    , thread_cap_info = ("ThreadId 125", 0, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 3.377980180000
  min duration 0.281068205000
  total durat. 6.519187203000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 3984}
    , self = 82
    , parent = Nothing
    , duration = 2.860138818000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:43.043907539 UTC
    , finish = 2025-09-04 07:31:45.904046357 UTC
    , thread_cap_info = ("ThreadId 133", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 3984}
    , self = 93
    , parent = Nothing
    , duration = 3.377980180000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:43.304920246 UTC
    , finish = 2025-09-04 07:31:46.682900426 UTC
    , thread_cap_info = ("ThreadId 141", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.315382572000
  min duration 0.047584692000
  total durat. 1.632943978000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 13
      , alphabet_size = 8
      , total_length = 53}
    , self = 72
    , parent = Nothing
    , duration = 1.315382572000
    , status = Fail
    , start = 2025-09-04 07:31:42.628493433 UTC
    , finish = 2025-09-04 07:31:43.943876005 UTC
    , thread_cap_info = ("ThreadId 111", 0, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.041115411000
  min duration 3.041115411000
  total durat. 3.041115411000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 3984}
    , self = 81
    , parent = Nothing
    , duration = 3.041115411000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:42.862916332 UTC
    , finish = 2025-09-04 07:31:45.904031743 UTC
    , thread_cap_info = ("ThreadId 127", 0, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 3.399888468000
  min duration 0.300028131000
  total durat. 6.564320693000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 3984}
    , self = 83
    , parent = Nothing
    , duration = 2.864404094000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:43.063393595 UTC
    , finish = 2025-09-04 07:31:45.927797689 UTC
    , thread_cap_info = ("ThreadId 135", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 3984}
    , self = 96
    , parent = Nothing
    , duration = 3.399888468000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:43.323012988 UTC
    , finish = 2025-09-04 07:31:46.722901456 UTC
    , thread_cap_info = ("ThreadId 143", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.363647275000
  min duration 0.539989002000
  total durat. 1.903636277000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 13
      , alphabet_size = 8
      , total_length = 53}
    , self = 77
    , parent = Nothing
    , duration = 1.363647275000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:43.903168818 UTC
    , finish = 2025-09-04 07:31:45.266816093 UTC
    , thread_cap_info = ("ThreadId 146", 0, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.652046308000
  min duration 1.652046308000
  total durat. 1.652046308000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 13
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 11
      , alphabet_size = 8
      , total_length = 50}
    , self = 73
    , parent = Nothing
    , duration = 1.652046308000
    , status = Success
    , start = 2025-09-04 07:31:42.465334051 UTC
    , finish = 2025-09-04 07:31:44.117380359 UTC
    , thread_cap_info = ("ThreadId 100", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.281033726000
  min duration 1.281033726000
  total durat. 1.281033726000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 0
      , alphabet_size = 1
      , total_length = 2}
    , self = 71
    , parent = Nothing
    , duration = 1.281033726000
    , status = Fail
    , start = 2025-09-04 07:31:42.60570808 UTC
    , finish = 2025-09-04 07:31:43.886741806 UTC
    , thread_cap_info = ("ThreadId 115", 3, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 12
  max duration 0.592922822000
  min duration 0.000078779000
  total durat. 1.439407870000
**************************************************
E                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                    = False}" , input_size = Size { num_rules = 13 , num_strict_rules = 13
E                    , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 8 , total_length
E                    = 50} , self = 48 , parent = Nothing , duration = 0.197220263000 , status
E                    = Except "AsyncCancelled" , start = 2025-09-04 07:31:42.349365977 UTC ,
E                    finish = 2025-09-04 07:31:42.54658624 UTC , thread_cap_info = ("ThreadId
E                    20", 2, False)}
E                    
| E                  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| E                  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| E                  = Size { num_rules = 832 , num_strict_rules = 832 , num_top_rules = 0 ,
| E                  num_weak_rules = 0 , alphabet_size = 64 , total_length = 4864} , self =
| E                  50 , parent = Nothing , duration = 0.196008534000 , status = Except "AsyncCancelled"
| E                  , start = 2025-09-04 07:31:42.386902587 UTC , finish = 2025-09-04 07:31:42.582911121
| E                  UTC , thread_cap_info = ("ThreadId 86", 2, False)}
| E                  
| | S                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S                = 13 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 11 ,
| | S                alphabet_size = 8 , total_length = 50} , self = 68 , parent = Nothing ,
| | S                duration = 0.877006907000 , status = Success , start = 2025-09-04 07:31:42.406473437
| | S                UTC , finish = 2025-09-04 07:31:43.283480344 UTC , thread_cap_info = ("ThreadId
| | S                92", 3, False)}
| | S                
| | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 1 , num_strict_rules
| | | F              = 1 , num_top_rules = 1 , num_weak_rules = 0 , alphabet_size = 1 , total_length
| | | F              = 2} , self = 47 , parent = Nothing , duration = 0.139472287000 , status
| | | F              = Fail , start = 2025-09-04 07:31:42.407039761 UTC , finish = 2025-09-04
| | | F              07:31:42.546512048 UTC , thread_cap_info = ("ThreadId 94", 3, False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 1 , num_strict_rules
| | | | F            = 1 , num_top_rules = 1 , num_weak_rules = 0 , alphabet_size = 1 , total_length
| | | | F            = 2} , self = 51 , parent = Nothing , duration = 0.164609942000 , status
| | | | F            = Fail , start = 2025-09-04 07:31:42.429788169 UTC , finish = 2025-09-04
| | | | F            07:31:42.594398111 UTC , thread_cap_info = ("ThreadId 95", 3, False)}
| | | | F            
| | | | | S          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | S          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | S          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | S          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 13
| | | | | S          , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 11 , alphabet_size
| | | | | S          = 8 , total_length = 50} , self = 73 , parent = Nothing , duration = 1.652046308000
| | | | | S          , status = Success , start = 2025-09-04 07:31:42.465334051 UTC , finish
| | | | | S          = 2025-09-04 07:31:44.117380359 UTC , thread_cap_info = ("ThreadId 100",
| | | | | S          3, False)}
| | | | | S          
| | | | | | S        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | S        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | S        = Size { num_rules = 896 , num_strict_rules = 64 , num_top_rules = 0 ,
| | | | | | S        num_weak_rules = 832 , alphabet_size = 64 , total_length = 5184} , self
| | | | | | S        = 54 , parent = Nothing , duration = 0.176005021000 , status = Success
| | | | | | S        , start = 2025-09-04 07:31:42.482896438 UTC , finish = 2025-09-04 07:31:42.658901459
| | | | | | S        UTC , thread_cap_info = ("ThreadId 90", 0, False)}
| | | | | | S        
| | | | | | | S      Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | | | | | S      , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | | | | | S      , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | | | | | S      = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | | | | | S      , cpf = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | S      = 1 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size = 8 , total_length
| | | | | | | S      = 53} , self = 53 , parent = Nothing , duration = 0.164464990000 , status
| | | | | | | S      = Success , start = 2025-09-04 07:31:42.482907784 UTC , finish = 2025-09-04
| | | | | | | S      07:31:42.647372774 UTC , thread_cap_info = ("ThreadId 103", 0, False)}
| | | | | | | S      
| | | F | | | |      
E | |   | | | |      
  E |   | | | |      
    |   F | | |      
F   |     | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
F   |     | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
F   |     | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
F   |     | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F   |     | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F   |     | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 1
F   |     | | |      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 0 , alphabet_size
F   |     | | |      = 1 , total_length = 2} , self = 71 , parent = Nothing , duration = 1.281033726000
F   |     | | |      , status = Fail , start = 2025-09-04 07:31:42.60570808 UTC , finish = 2025-09-04
F   |     | | |      07:31:43.886741806 UTC , thread_cap_info = ("ThreadId 115", 3, False)}
F   |     | | |      
| F |     | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F |     | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F |     | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| F |     | | |      = 1 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size = 8 , total_length
| F |     | | |      = 53} , self = 70 , parent = Nothing , duration = 1.108198851000 , status
| F |     | | |      = Fail , start = 2025-09-04 07:31:42.622927332 UTC , finish = 2025-09-04
| F |     | | |      07:31:43.731126183 UTC , thread_cap_info = ("ThreadId 110", 0, False)}
| F |     | | |      
| | | F   | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F   | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F   | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | F   | | |      = 1 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size = 8 , total_length
| | | F   | | |      = 53} , self = 72 , parent = Nothing , duration = 1.315382572000 , status
| | | F   | | |      = Fail , start = 2025-09-04 07:31:42.628493433 UTC , finish = 2025-09-04
| | | F   | | |      07:31:43.943876005 UTC , thread_cap_info = ("ThreadId 111", 0, False)}
| | | F   | | |      
| | | |   | | S      
| | | |   | S        
| | | | S |          Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | S |          epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | S |          = Size { num_rules = 896 , num_strict_rules = 64 , num_top_rules = 0 ,
| | | | S |          num_weak_rules = 832 , alphabet_size = 64 , total_length = 5184} , self
| | | | S |          = 61 , parent = Nothing , duration = 0.254062241000 , status = Success
| | | | S |          , start = 2025-09-04 07:31:42.659136917 UTC , finish = 2025-09-04 07:31:42.913199158
| | | | S |          UTC , thread_cap_info = ("ThreadId 116", 2, False)}
| | | | S |          
| | | | | | S        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | S        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | S        = Size { num_rules = 896 , num_strict_rules = 64 , num_top_rules = 0 ,
| | | | | | S        num_weak_rules = 832 , alphabet_size = 64 , total_length = 5184} , self
| | | | | | S        = 59 , parent = Nothing , duration = 0.221904759000 , status = Success
| | | | | | S        , start = 2025-09-04 07:31:42.659137487 UTC , finish = 2025-09-04 07:31:42.881042246
| | | | | | S        UTC , thread_cap_info = ("ThreadId 117", 2, False)}
| | | | | | S        
| | | | | | | E      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | | | | | | E      = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| | | | | | | E      total_length = 3984} , self = 80 , parent = Nothing , duration = 3.038912646000
| | | | | | | E      , status = Except "<<timeout>>" , start = 2025-09-04 07:31:42.803984606
| | | | | | | E      UTC , finish = 2025-09-04 07:31:45.842897252 UTC , thread_cap_info = ("ThreadId
| | | | | | | E      125", 0, False)}
| | | | | | | E      
| | | | | | | | E    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | | | | | | | E    = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| | | | | | | | E    total_length = 3984} , self = 81 , parent = Nothing , duration = 3.041115411000
| | | | | | | | E    , status = Except "<<timeout>>" , start = 2025-09-04 07:31:42.862916332
| | | | | | | | E    UTC , finish = 2025-09-04 07:31:45.904031743 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E    127", 0, False)}
| | | | | | | | E    
| | | | | | S | |    
| | | | S |   | |    
| | | | F |   | |    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | F |   | |    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | F |   | |    = Size { num_rules = 692 , num_strict_rules = 56 , num_top_rules = 0 ,
| | | | F |   | |    num_weak_rules = 636 , alphabet_size = 62 , total_length = 3984} , self
| | | | F |   | |    = 63 , parent = Nothing , duration = 0.128523687000 , status = Fail , start
| | | | F |   | |    = 2025-09-04 07:31:42.91526108 UTC , finish = 2025-09-04 07:31:43.043784767
| | | | F |   | |    UTC , thread_cap_info = ("ThreadId 129", 2, False)}
| | | | F |   | |    
| | | | F |   | |    
| | | | E |   | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E |   | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E |   | |    = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | | | E |   | |    = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| | | | E |   | |    total_length = 3984} , self = 82 , parent = Nothing , duration = 2.860138818000
| | | | E |   | |    , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:43.043907539
| | | | E |   | |    UTC , finish = 2025-09-04 07:31:45.904046357 UTC , thread_cap_info = ("ThreadId
| | | | E |   | |    133", 2, False)}
| | | | E |   | |    
| | | | | | E | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | E | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | E | |    = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | | | | | E | |    = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| | | | | | E | |    total_length = 3984} , self = 83 , parent = Nothing , duration = 2.864404094000
| | | | | | E | |    , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:43.063393595
| | | | | | E | |    UTC , finish = 2025-09-04 07:31:45.927797689 UTC , thread_cap_info = ("ThreadId
| | | | | | E | |    135", 2, False)}
| | | | | | E | |    
| | S | | | | | |    
| | E | | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | E | | | | | |    = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| | E | | | | | |    total_length = 3984} , self = 93 , parent = Nothing , duration = 3.377980180000
| | E | | | | | |    , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:43.304920246
| | E | | | | | |    UTC , finish = 2025-09-04 07:31:46.682900426 UTC , thread_cap_info = ("ThreadId
| | E | | | | | |    141", 0, False)}
| | E | | | | | |    
| | | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | | | | | | | | E  = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| | | | | | | | | E  total_length = 3984} , self = 96 , parent = Nothing , duration = 3.399888468000
| | | | | | | | | E  , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:43.323012988
| | | | | | | | | E  UTC , finish = 2025-09-04 07:31:46.722901456 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E  143", 0, False)}
| | | | | | | | | E  
| F | | | | | | | |  
F   | | | | | | | |  
E   | | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E   | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E   | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E   | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E   | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E   | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
E   | | | | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size
E   | | | | | | | |  = 8 , total_length = 53} , self = 77 , parent = Nothing , duration = 1.363647275000
E   | | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:43.903168818
E   | | | | | | | |  UTC , finish = 2025-09-04 07:31:45.266816093 UTC , thread_cap_info = ("ThreadId
E   | | | | | | | |  146", 0, False)}
E   | | | | | | | |  
|   | F | | | | | |  
|   |   | S | | | |  
| S |   |   | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| S |   |   | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S |   |   | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| S |   |   | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S |   |   | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S |   |   | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| S |   |   | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size
| S |   |   | | | |  = 8 , total_length = 53} , self = 75 , parent = Nothing , duration = 0.705292817000
| S |   |   | | | |  , status = Success , start = 2025-09-04 07:31:44.162917638 UTC , finish
| S |   |   | | | |  = 2025-09-04 07:31:44.868210455 UTC , thread_cap_info = ("ThreadId 148",
| S |   |   | | | |  0, False)}
| S |   |   | | | |  
| S |   |   | | | |  
E   |   |   | | | |  
    |   |   | E | |  
    |   |   |   E |  
    |   E   |     |  
    |       E     |  
S   |             |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
S   |             |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
S   |             |  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
S   |             |  = 1 , num_top_rules = 0 , num_weak_rules = 11 , alphabet_size = 7 , total_length
S   |             |  = 44} , self = 89 , parent = Nothing , duration = 0.571398206000 , status
S   |             |  = Success , start = 2025-09-04 07:31:45.999095173 UTC , finish = 2025-09-04
S   |             |  07:31:46.570493379 UTC , thread_cap_info = ("ThreadId 168", 0, False)}
S   |             |  
| S |             |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| S |             |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| S |             |  = Size { num_rules = 588 , num_strict_rules = 49 , num_top_rules = 0 ,
| S |             |  num_weak_rules = 539 , alphabet_size = 49 , total_length = 3332} , self
| S |             |  = 90 , parent = Nothing , duration = 0.592922822000 , status = Success
| S |             |  , start = 2025-09-04 07:31:46.023764927 UTC , finish = 2025-09-04 07:31:46.616687749
| S |             |  UTC , thread_cap_info = ("ThreadId 170", 0, False)}
| S |             |  
S | |             |  
  S |             |  
    E             |  
                  E  
E                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E                    = False\n , verbose = False}" , input_size = Size { num_rules = 518 , num_strict_rules
E                    = 42 , num_top_rules = 0 , num_weak_rules = 476 , alphabet_size = 49 ,
E                    total_length = 2926} , self = 100 , parent = Nothing , duration = 0.281068205000
E                    , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:46.763346975
E                    UTC , finish = 2025-09-04 07:31:47.04441518 UTC , thread_cap_info = ("ThreadId
E                    181", 0, False)}
E                    
| E                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| E                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E                  = False\n , verbose = False}" , input_size = Size { num_rules = 518 , num_strict_rules
| E                  = 42 , num_top_rules = 0 , num_weak_rules = 476 , alphabet_size = 49 ,
| E                  total_length = 2926} , self = 101 , parent = Nothing , duration = 0.300028131000
| E                  , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:46.78289954
| E                  UTC , finish = 2025-09-04 07:31:47.082927671 UTC , thread_cap_info = ("ThreadId
| E                  183", 0, False)}
| E                  
E |                  
  E                  
F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                    = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
F                    = 1 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 7 , total_length
F                    = 36} , self = 117 , parent = Nothing , duration = 0.105366772000 , status
F                    = Fail , start = 2025-09-04 07:31:47.667730768 UTC , finish = 2025-09-04
F                    07:31:47.77309754 UTC , thread_cap_info = ("ThreadId 213", 0, False)}
F                    
F                    
E                    Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E                    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E                    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E                    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E                    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E                    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
E                    , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size
E                    = 7 , total_length = 36} , self = 124 , parent = Nothing , duration = 0.539989002000
E                    , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:47.822907305
E                    UTC , finish = 2025-09-04 07:31:48.362896307 UTC , thread_cap_info = ("ThreadId
E                    218", 0, False)}
E                    
| S                  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| S                  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| S                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| S                  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size
| S                  = 7 , total_length = 36} , self = 122 , parent = Nothing , duration = 0.228091434000
| S                  , status = Success , start = 2025-09-04 07:31:47.843337964 UTC , finish
| S                  = 2025-09-04 07:31:48.071429398 UTC , thread_cap_info = ("ThreadId 219",
| S                  0, False)}
| S                  
| S                  
E                    
