[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 425 length 2175
CNF 425 vars 2175 clauses
last 780 length 3611
CNF 780 vars 3611 clauses
last 592 length 2736
CNF 592 vars 2736 clauses
last 1394 length 7230
CNF 1394 vars 7230 clauses
last 1306 length 6261
CNF 1306 vars 6261 clauses
last 1150 length 5557
last 1626 length 9321
last 1908 length 9465
CNF 1908 vars 9465 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1656, clauses: 6734
last 1656 length 6734
CNF 1626 vars 9321 clauses
CNF 1656 vars 6734 clauses
CNF 1150 vars 5557 clauses
last 1040 length 5437
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1656, clauses: 6734, status: Unsatisfied, time: 0.017792585s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4259, clauses: 16233
CNF 1040 vars 5437 clauses
last 4259 length 16233
CNF 4259 vars 16233 clauses
last 540 length 2655
CNF 540 vars 2655 clauses
last 872 length 4028
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12068, clauses: 50486
last 12068 length 50486
CNF 872 vars 4028 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4259, clauses: 16233, status: Unsatisfied, time: 0.130962722s
CNF 12068 vars 50486 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12068, clauses: 50486, status: Satisfied, time: 0.060148048s
last 540 length 2655
last 711 length 3211
last 452 length 2261
CNF 711 vars 3211 clauses
CNF 452 vars 2261 clauses
CNF 540 vars 2655 clauses
last 872 length 4028
last 1908 length 9465
last 1306 length 6261
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1973, clauses: 7728
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1418, clauses: 5660
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10672, clauses: 44544
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14770, clauses: 61397
CNF 872 vars 4028 clauses
last 11623 length 71984
CNF 1306 vars 6261 clauses
CNF 1908 vars 9465 clauses
last 1973 length 7728
last 1418 length 5660
last 13705 length 103895
last 10672 length 44544
last 14770 length 61397
CNF 1973 vars 7728 clauses
CNF 11623 vars 71984 clauses
CNF 1418 vars 5660 clauses
CNF 10672 vars 44544 clauses
CNF 13705 vars 103895 clauses
CNF 14770 vars 61397 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1973, clauses: 7728, status: Satisfied, time: 0.195836798s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1418, clauses: 5660, status: Unsatisfied, time: 0.195619659s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10672, clauses: 44544, status: Satisfied, time: 0.156991262s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 1 weak rules on 2 letters       mirror
SRS with 1 strict rules and 1 weak rules on 2 letters       context
SRS with 2 strict rules and 2 weak rules on 2 letters       mirror
SRS with 2 strict rules and 2 weak rules on 2 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 2 weak rules on 2 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 2 weak rules on 2 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, a, b, b, a] -> [] {- Input 0 -}
  [] ->= [a, a, b, a] {- Input 1 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, b, b, a, a, a] -> [] {- Mirror (Input 0) -}
  [] ->= [a, b, a, a] {- Mirror (Input 1) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a, b, b, a, a, a] -> [a] {- Mirror (Input 0) -}
  [b, a, b, b, a, a, a] -> [b] {- Mirror (Input 0) -}
  [a] ->= [a, a, b, a, a] {- Mirror (Input 1) -}
  [b] ->= [b, a, b, a, a] {- Mirror (Input 1) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a, a, b, b, a, a] -> [a] {- Input 0 -}
  [a, a, a, b, b, a, b] -> [b] {- Input 0 -}
  [a] ->= [a, a, b, a, a] {- Input 1 -}
  [b] ->= [a, a, b, a, b] {- Input 1 -}
reason
  ( a
  , St  / 0A -2A - \
        | -  -   - |
        \ 0A -2A - / )
  ( b
  , St  / 0A -2A 0A \
        | -  -   -  |
        \ 2A 0A  2A / )
   property Termination
has value Just True
for SRS
  [a, a, a, b, b, a, b] -> [b] {- Input 0 -}
  [a] ->= [a, a, b, a, a] {- Input 1 -}
  [b] ->= [a, a, b, a, b] {- Input 1 -}
reason
  ( a
  , St  / 0A  - -  \
        | -1A - 0A |
        \ -1A - -  / )
  ( b
  , St  / 0A  -  1A \
        | -1A -  0A |
        \ -1A 1A 0A / )
   property Termination
has value Just True
for SRS
  [a] ->= [a, a, b, a, a] {- Input 1 -}
  [b] ->= [a, a, b, a, b] {- Input 1 -}
reason
  no strict rules

**************************************************
skeleton: \Mirror(1/1,2)\Context\Mirror(2/2,2)\Matrix{\ArcticBZ}{3}(1/2,2)\Matrix{\ArcticBZ}{3}(0/2,2)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.583330008000
  min duration 0.015959375000
  total durat. 1.475773141000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.595301707000
  min duration 0.023227913000
  total durat. 1.865443092000
**************************************************
S                    Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
S                    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
S                    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S                    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S                    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S                    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
S                    , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
S                    = 2 , total_length = 28} , self = 106 , parent = Nothing , duration = 0.283053279000
S                    , status = Success , start = 2025-09-04 08:23:52.7008373 UTC , finish =
S                    2025-09-04 08:23:52.983890579 UTC , thread_cap_info = ("ThreadId 149",
S                    0, False)}
S                    
| F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| F                  = 15 , num_top_rules = 15 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| F                  = 78} , self = 94 , parent = Nothing , duration = 0.101835997000 , status
| F                  = Fail , start = 2025-09-04 08:23:52.742548025 UTC , finish = 2025-09-04
| F                  08:23:52.844384022 UTC , thread_cap_info = ("ThreadId 161", 2, False)}
| F                  
| | F                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F                = 18 , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 3
| | F                , alphabet_size = 6 , total_length = 78} , self = 104 , parent = Nothing
| | F                , duration = 0.207111575000 , status = Fail , start = 2025-09-04 08:23:52.749190569
| | F                UTC , finish = 2025-09-04 08:23:52.956302144 UTC , thread_cap_info = ("ThreadId
| | F                164", 2, False)}
| | F                
| | | E              Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | E              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E              , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | E              , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | | E              = 2 , total_length = 28} , self = 108 , parent = Nothing , duration = 0.161275891000
| | | E              , status = Except "AsyncCancelled" , start = 2025-09-04 08:23:52.822677456
| | | E              UTC , finish = 2025-09-04 08:23:52.983953347 UTC , thread_cap_info = ("ThreadId
| | | E              173", 0, False)}
| | | E              
| F | |              
| E | |              Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| E | |              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | |              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | |              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | |              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | |              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| E | |              , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| E | |              = 4 , total_length = 26} , self = 129 , parent = Nothing , duration = 0.726974675000
| E | |              , status = Except "AsyncCancelled" , start = 2025-09-04 08:23:52.899941975
| E | |              UTC , finish = 2025-09-04 08:23:53.62691665 UTC , thread_cap_info = ("ThreadId
| E | |              186", 3, False)}
| E | |              
| | F |              
| | S |              Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | S |              = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | S |              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | S |              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S |              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S |              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | S |              , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | S |              = 4 , total_length = 26} , self = 125 , parent = Nothing , duration = 0.649234633000
| | S |              , status = Success , start = 2025-09-04 08:23:52.963190333 UTC , finish
| | S |              = 2025-09-04 08:23:53.612424966 UTC , thread_cap_info = ("ThreadId 194",
| | S |              3, False)}
| | S |              
| | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F            = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | F            = 26} , self = 120 , parent = Nothing , duration = 0.160781352000 , status
| | | | F            = Fail , start = 2025-09-04 08:23:52.983166865 UTC , finish = 2025-09-04
| | | | F            08:23:53.143948217 UTC , thread_cap_info = ("ThreadId 190", 1, False)}
| | | | F            
S | | | |            
  | | E |            
F | |   |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | |   |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | |   |            = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
F | |   |            = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
F | |   |            = 68} , self = 123 , parent = Nothing , duration = 0.473718903000 , status
F | |   |            = Fail , start = 2025-09-04 08:23:52.984410307 UTC , finish = 2025-09-04
F | |   |            08:23:53.45812921 UTC , thread_cap_info = ("ThreadId 217", 0, False)}
F | |   |            
| | | F |            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |            = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F |            = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | F |            = 26} , self = 121 , parent = Nothing , duration = 0.462142315000 , status
| | | F |            = Fail , start = 2025-09-04 08:23:52.987810197 UTC , finish = 2025-09-04
| | | F |            08:23:53.449952512 UTC , thread_cap_info = ("ThreadId 192", 1, False)}
| | | F |            
| | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | F          = 1 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 13 , total_length
| | | | | F          = 266} , self = 124 , parent = Nothing , duration = 0.583330008000 , status
| | | | | F          = Fail , start = 2025-09-04 08:23:53.003607238 UTC , finish = 2025-09-04
| | | | | F          08:23:53.586937246 UTC , thread_cap_info = ("ThreadId 196", 3, False)}
| | | | | F          
| | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | F        = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | F        = 68} , self = 122 , parent = Nothing , duration = 0.449659606000 , status
| | | | | | F        = Fail , start = 2025-09-04 08:23:53.003608463 UTC , finish = 2025-09-04
| | | | | | F        08:23:53.453268069 UTC , thread_cap_info = ("ThreadId 219", 0, False)}
| | | | | | F        
| | | | | | | S      Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | | S      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | S      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | S      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | S      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | S      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | | | S      , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | | | | | | S      = 2 , total_length = 20} , self = 131 , parent = Nothing , duration = 0.620208045000
| | | | | | | S      , status = Success , start = 2025-09-04 08:23:53.007371805 UTC , finish
| | | | | | | S      = 2025-09-04 08:23:53.62757985 UTC , thread_cap_info = ("ThreadId 225",
| | | | | | | S      2, False)}
| | | | | | | S      
| | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | | F    = 1 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 13 , total_length
| | | | | | | | F    = 266} , self = 127 , parent = Nothing , duration = 0.595301707000 , status
| | | | | | | | F    = Fail , start = 2025-09-04 08:23:53.023171276 UTC , finish = 2025-09-04
| | | | | | | | F    08:23:53.618472983 UTC , thread_cap_info = ("ThreadId 198", 3, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | | | | F  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | | | | | F  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | | | | | | | | F  = 2 , total_length = 20} , self = 128 , parent = Nothing , duration = 0.600195618000
| | | | | | | | | F  , status = Fail , start = 2025-09-04 08:23:53.023175587 UTC , finish =
| | | | | | | | | F  2025-09-04 08:23:53.623371205 UTC , thread_cap_info = ("ThreadId 226",
| | | | | | | | | F  2, False)}
| | | | | | | | | F  
| | | | F | | | | |  
| | | F   | | | | |  
| | |     | F | | |  
F | |     |   | | |  
  | |     F   | | |  
  | S         | | |  
  |           | F |  
  |           |   F  
  E           |      
              S      
