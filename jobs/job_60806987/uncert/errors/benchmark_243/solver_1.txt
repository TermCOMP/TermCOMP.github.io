last 831 length 3391
CNF 831 vars 3391 clauses
last 963 length 3875
CNF 963 vars 3875 clauses
last 12735 length 55294
CNF 12735 vars 55294 clauses
last 11318 length 47771
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2837, clauses: 10149
last 925 length 3725
last 797 length 3201
CNF 11318 vars 47771 clauses
last 2837 length 10149
CNF 925 vars 3725 clauses
CNF 797 vars 3201 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11634, clauses: 48815
CNF 2837 vars 10149 clauses
last 11634 length 48815
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2855, clauses: 10221
last 2855 length 10221
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11638, clauses: 48827
last 11638 length 48827
CNF 11638 vars 48827 clauses
CNF 11634 vars 48815 clauses
CNF 2855 vars 10221 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2837, clauses: 10149, status: Unsatisfied, time: 0.480641482s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2855, clauses: 10221, status: Unsatisfied, time: 0.248174836s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7022, clauses: 28640
last 7022 length 28640
CNF 7022 vars 28640 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7030, clauses: 28664
last 7030 length 28664
CNF 7030 vars 28664 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11638, clauses: 48827, status: Unsatisfied, time: 1.600540141s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4701, clauses: 17745
last 4701 length 17745
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7030, clauses: 28664, status: Unsatisfied, time: 1.482392883s
CNF 4701 vars 17745 clauses
last 12242 length 52057
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11634, clauses: 48815, status: Unsatisfied, time: 2.144130337s
CNF 12242 vars 52057 clauses
last 13386 length 59582
last 13068 length 56775
last 11807 length 50038
CNF 13386 vars 59582 clauses
CNF 13068 vars 56775 clauses
CNF 11807 vars 50038 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4669, clauses: 17601
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7022, clauses: 28640, status: Unsatisfied, time: 1.934455875s
last 4669 length 17601
CNF 4669 vars 17601 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4701, clauses: 17745, status: Unsatisfied, time: 0.751308358s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20719, clauses: 87377
last 20719 length 87377
CNF 20719 vars 87377 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19887, clauses: 74393
last 19887 length 74393
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8900, clauses: 33430
last 8900 length 33430
CNF 8900 vars 33430 clauses
CNF 19887 vars 74393 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4669, clauses: 17601, status: Unsatisfied, time: 1.200767805s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19902, clauses: 74408
last 19902 length 74408
CNF 19902 vars 74408 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20707, clauses: 87347
last 20707 length 87347
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8850, clauses: 33190
last 8850 length 33190
CNF 20707 vars 87347 clauses
CNF 8850 vars 33190 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19902, clauses: 74408, status: Satisfied, time: 1.872287535s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 89622, clauses: 380287
last 89622 length 380287
last 12022 length 51109
last 13068 length 58164
CNF 12022 vars 51109 clauses
CNF 13068 vars 58164 clauses
CNF 89622 vars 380287 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19598, clauses: 73095
last 19598 length 73095
CNF 19598 vars 73095 clauses
[Info] <<timeout>> @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
[Info] pool sizes (success) 237259 seen 139253 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
**************************************************
summary
**************************************************
SRS with 3 strict rules and 3 weak rules on 3 letters       strictify
SRS with 6 rules on 3 letters       looping derivation
from
  [a, c, a, b, a, c, c, a, c, a, b, b]
to
  [a, c, a, b, a, c, c, a, c, a, b, b]
via 34 steps

**************************************************
proof
**************************************************
property Termination
has value Just False
for SRS
  [a, a, b] -> [c, b, a] {- Input 0 -}
  [a, b, c] -> [c, c, b] {- Input 1 -}
  [b, a, c] -> [a, a, a] {- Input 2 -}
  [b, a, b] ->= [c, a, b] {- Input 3 -}
  [b, b, c] ->= [c, c, a] {- Input 4 -}
  [a, c, a] ->= [a, b, b] {- Input 5 -}
reason
  strictify
   property Termination
has value Just False
for SRS
  [a, a, b] -> [c, b, a] {- Input 0 -}
  [a, b, c] -> [c, c, b] {- Input 1 -}
  [b, a, c] -> [a, a, a] {- Input 2 -}
  [b, a, b] -> [c, a, b] {- Strictified (Input 3) -}
  [b, b, c] -> [c, c, a] {- Strictified (Input 4) -}
  [a, c, a] -> [a, b, b] {- Strictified (Input 5) -}
reason
  Nontermination
    Derive   { from = [a, c, a, b, a, c, c, a, c, a, b, b], via = [(Step   { rule = 2, position = 3}, [a, c, a, a, a, a, c, a, c, a, b, b]), (Step   { rule = 5, position = 5}, [a, c, a, a, a, a, b, b, c, a, b, b]), (Step   { rule = 0, position = 4}, [a, c, a, a, c, b, a, b, c, a, b, b]), (Step   { rule = 3, position = 5}, [a, c, a, a, c, c, a, b, c, a, b, b]), (Step   { rule = 5, position = 0}, [a, b, b, a, c, c, a, b, c, a, b, b]), (Step   { rule = 2, position = 2}, [a, b, a, a, a, c, a, b, c, a, b, b]), (Step   { rule = 5, position = 4}, [a, b, a, a, a, b, b, b, c, a, b, b]), (Step   { rule = 4, position = 6}, [a, b, a, a, a, b, c, c, a, a, b, b]), (Step   { rule = 0, position = 3}, [a, b, a, c, b, a, c, c, a, a, b, b]), (Step   { rule = 2, position = 4}, [a, b, a, c, a, a, a, c, a, a, b, b]), (Step   { rule = 5, position = 6}, [a, b, a, c, a, a, a, b, b, a, b, b]), (Step   { rule = 3, position = 8}, [a, b, a, c, a, a, a, b, c, a, b, b]), (Step   { rule = 0, position = 5}, [a, b, a, c, a, c, b, a, c, a, b, b]), (Step   { rule = 2, position = 6}, [a, b, a, c, a, c, a, a, a, a, b, b]), (Step   { rule = 0, position = 8}, [a, b, a, c, a, c, a, a, c, b, a, b]), (Step   { rule = 3, position = 9}, [a, b, a, c, a, c, a, a, c, c, a, b]), (Step   { rule = 5, position = 4}, [a, b, a, c, a, b, b, a, c, c, a, b]), (Step   { rule = 2, position = 6}, [a, b, a, c, a, b, a, a, a, c, a, b]), (Step   { rule = 5, position = 8}, [a, b, a, c, a, b, a, a, a, b, b, b]), (Step   { rule = 0, position = 7}, [a, b, a, c, a, b, a, c, b, a, b, b]), (Step   { rule = 2, position = 5}, [a, b, a, c, a, a, a, a, b, a, b, b]), (Step   { rule = 0, position = 6}, [a, b, a, c, a, a, c, b, a, a, b, b]), (Step   { rule = 0, position = 8}, [a, b, a, c, a, a, c, b, c, b, a, b]), (Step   { rule = 3, position = 9}, [a, b, a, c, a, a, c, b, c, c, a, b]), (Step   { rule = 5, position = 2}, [a, b, a, b, b, a, c, b, c, c, a, b]), (Step   { rule = 2, position = 4}, [a, b, a, b, a, a, a, b, c, c, a, b]), (Step   { rule = 0, position = 5}, [a, b, a, b, a, c, b, a, c, c, a, b]), (Step   { rule = 2, position = 6}, [a, b, a, b, a, c, a, a, a, c, a, b]), (Step   { rule = 5, position = 8}, [a, b, a, b, a, c, a, a, a, b, b, b]), (Step   { rule = 0, position = 7}, [a, b, a, b, a, c, a, c, b, a, b, b]), (Step   { rule = 3, position = 8}, [a, b, a, b, a, c, a, c, c, a, b, b]), (Step   { rule = 5, position = 4}, [a, b, a, b, a, b, b, c, c, a, b, b]), (Step   { rule = 4, position = 5}, [a, b, a, b, a, c, c, a, c, a, b, b]), (Step   { rule = 3, position = 1}, [a, c, a, b, a, c, c, a, c, a, b, b])], to = [a, c, a, b, a, c, c, a, c, a, b, b]}

**************************************************
skeleton: (3/3,3)\Strictify(6,3)\Loop{34}[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 1.980102910000
  min duration 0.048317884000
  total durat. 5.309809590000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 57
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 54
      , alphabet_size = 10
      , total_length = 456}
    , self = 115
    , parent = Nothing
    , duration = 1.227693555000
    , status = Fail
    , start = 2025-09-04 08:20:57.159015099 UTC
    , finish = 2025-09-04 08:20:58.386708654 UTC
    , thread_cap_info = ("ThreadId 183", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 57
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 54
      , alphabet_size = 10
      , total_length = 456}
    , self = 117
    , parent = Nothing
    , duration = 1.283058683000
    , status = Fail
    , start = 2025-09-04 08:20:57.218900901 UTC
    , finish = 2025-09-04 08:20:58.501959584 UTC
    , thread_cap_info = ("ThreadId 187", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 56
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 54
      , alphabet_size = 10
      , total_length = 448}
    , self = 129
    , parent = Nothing
    , duration = 1.980102910000
    , status = Fail
    , start = 2025-09-04 08:21:01.871209051 UTC
    , finish = 2025-09-04 08:21:03.851311961 UTC
    , thread_cap_info = ("ThreadId 215", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 2.099113973000
  min duration 0.079652309000
  total durat. 5.321917314000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 57
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 54
      , alphabet_size = 10
      , total_length = 456}
    , self = 116
    , parent = Nothing
    , duration = 1.259642645000
    , status = Fail
    , start = 2025-09-04 08:20:57.218905299 UTC
    , finish = 2025-09-04 08:20:58.478547944 UTC
    , thread_cap_info = ("ThreadId 188", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 57
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 54
      , alphabet_size = 10
      , total_length = 456}
    , self = 118
    , parent = Nothing
    , duration = 1.342960256000
    , status = Fail
    , start = 2025-09-04 08:20:57.159017198 UTC
    , finish = 2025-09-04 08:20:58.501977454 UTC
    , thread_cap_info = ("ThreadId 184", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 56
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 54
      , alphabet_size = 10
      , total_length = 448}
    , self = 131
    , parent = Nothing
    , duration = 2.099113973000
    , status = Fail
    , start = 2025-09-04 08:21:01.847685083 UTC
    , finish = 2025-09-04 08:21:03.946799056 UTC
    , thread_cap_info = ("ThreadId 216", 0, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 6
  max duration 1.438975897000
  min duration 0.004421326000
  total durat. 1.990069625000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 54
      , num_strict_rules = 54
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 432}
    , self = 98
    , parent = Nothing
    , duration = 1.438975897000
    , status = Fail
    , start = 2025-09-04 08:20:55.696669544 UTC
    , finish = 2025-09-04 08:20:57.135645441 UTC
    , thread_cap_info = ("ThreadId 137", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.429350287000
  min duration 1.698970969000
  total durat. 4.128321256000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 42}
    , self = 112
    , parent = Nothing
    , duration = 1.698970969000
    , status = Fail
    , start = 2025-09-04 08:20:56.140003425 UTC
    , finish = 2025-09-04 08:20:57.838974394 UTC
    , thread_cap_info = ("ThreadId 165", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 42}
    , self = 114
    , parent = Nothing
    , duration = 2.429350287000
    , status = Fail
    , start = 2025-09-04 08:20:55.855582373 UTC
    , finish = 2025-09-04 08:20:58.28493266 UTC
    , thread_cap_info = ("ThreadId 155", 0, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 9.299518275000
  min duration 9.299518275000
  total durat. 9.299518275000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 57
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 54
      , alphabet_size = 10
      , total_length = 456}
    , self = 133
    , parent = Nothing
    , duration = 9.299518275000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 08:20:58.518339841 UTC
    , finish = 2025-09-04 08:21:07.817858116 UTC
    , thread_cap_info = ("ThreadId 199", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.327366118000
  min duration 3.327366118000
  total durat. 3.327366118000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 57
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 54
      , alphabet_size = 10
      , total_length = 456}
    , self = 124
    , parent = Nothing
    , duration = 3.327366118000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:20:58.518361226 UTC
    , finish = 2025-09-04 08:21:01.845727344 UTC
    , thread_cap_info = ("ThreadId 200", 0, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.311252096000
  min duration 1.649231195000
  total durat. 3.960483291000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 42}
    , self = 113
    , parent = Nothing
    , duration = 1.649231195000
    , status = Fail
    , start = 2025-09-04 08:20:56.496975396 UTC
    , finish = 2025-09-04 08:20:58.146206591 UTC
    , thread_cap_info = ("ThreadId 170", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 42}
    , self = 119
    , parent = Nothing
    , duration = 2.311252096000
    , status = Fail
    , start = 2025-09-04 08:20:56.385444607 UTC
    , finish = 2025-09-04 08:20:58.696696703 UTC
    , thread_cap_info = ("ThreadId 169", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.378388052000
  min duration 3.378388052000
  total durat. 3.378388052000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 57
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 54
      , alphabet_size = 10
      , total_length = 456}
    , self = 122
    , parent = Nothing
    , duration = 3.378388052000
    , status = Success
    , start = 2025-09-04 08:20:58.386754349 UTC
    , finish = 2025-09-04 08:21:01.765142401 UTC
    , thread_cap_info = ("ThreadId 197", 0, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 9.285066204000
  min duration 0.366222642000
  total durat. 10.219484021000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 57
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 54
      , alphabet_size = 10
      , total_length = 456}
    , self = 132
    , parent = Nothing
    , duration = 9.285066204000
    , status = Fail
    , start = 2025-09-04 08:20:58.499463007 UTC
    , finish = 2025-09-04 08:21:07.784529211 UTC
    , thread_cap_info = ("ThreadId 198", 3, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.404006266000
  min duration 1.025496358000
  total durat. 2.429502624000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 42}
    , self = 120
    , parent = Nothing
    , duration = 1.025496358000
    , status = Fail
    , start = 2025-09-04 08:20:57.857651889 UTC
    , finish = 2025-09-04 08:20:58.883148247 UTC
    , thread_cap_info = ("ThreadId 189", 1, False)}
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 42}
    , self = 121
    , parent = Nothing
    , duration = 1.404006266000
    , status = Fail
    , start = 2025-09-04 08:20:58.300175643 UTC
    , finish = 2025-09-04 08:20:59.704181909 UTC
    , thread_cap_info = ("ThreadId 193", 0, False)}
Success : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 12.898484784000
  min duration 12.898484784000
  total durat. 12.898484784000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 36}
    , self = 134
    , parent = Nothing
    , duration = 12.898484784000
    , status = Success
    , start = 2025-09-04 08:20:55.537337239 UTC
    , finish = 2025-09-04 08:21:08.435822023 UTC
    , thread_cap_info = ("ThreadId 92", 3, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 2
  max duration 8.407018276000
  min duration 0.003183242000
  total durat. 8.410201518000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 36}
    , self = 130
    , parent = Nothing
    , duration = 8.407018276000
    , status = Fail
    , start = 2025-09-04 08:20:55.5180396 UTC
    , finish = 2025-09-04 08:21:03.925057876 UTC
    , thread_cap_info = ("ThreadId 91", 3, False)}
**************************************************
E                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E                    , closure = Forward\n , start_strict_only = True\n , max_closure_length
E                    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
E                    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
E                    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
E                    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
E                    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
E                    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E                    = True})" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
E                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E                    = 12} , self = 39 , parent = Nothing , duration = 0.130917127000 , status
E                    = Except "AsyncCancelled" , start = 2025-09-04 08:20:55.430999715 UTC ,
E                    finish = 2025-09-04 08:20:55.561916842 UTC , thread_cap_info = ("ThreadId
E                    56", 0, False)}
E                    
| E                  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| E                  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| E                  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| E                  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| E                  = Size { num_rules = 8 , num_strict_rules = 8 , num_top_rules = 0 , num_weak_rules
| E                  = 0 , alphabet_size = 8 , total_length = 64} , self = 50 , parent = Nothing
| E                  , duration = 0.142272846000 , status = Except "AsyncCancelled" , start
| E                  = 2025-09-04 08:20:55.436669031 UTC , finish = 2025-09-04 08:20:55.578941877
| E                  UTC , thread_cap_info = ("ThreadId 52", 1, False)}
| E                  
| | E                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | E                , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | E                = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| | E                , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| | E                max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| | E                [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| | E                string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| | E                , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | E                = True})" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
| | E                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | E                = 12} , self = 42 , parent = Nothing , duration = 0.139763062000 , status
| | E                = Except "AsyncCancelled" , start = 2025-09-04 08:20:55.438124804 UTC ,
| | E                finish = 2025-09-04 08:20:55.577887866 UTC , thread_cap_info = ("ThreadId
| | E                60", 2, False)}
| | E                
| | | F              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | F              , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | F              = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | F              Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | F              8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | F              = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | F              ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | F              1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | F              = True})" , input_size = Size { num_rules = 6 , num_strict_rules = 6 ,
| | | F              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | F              = 36} , self = 130 , parent = Nothing , duration = 8.407018276000 , status
| | | F              = Fail , start = 2025-09-04 08:20:55.5180396 UTC , finish = 2025-09-04
| | | F              08:21:03.925057876 UTC , thread_cap_info = ("ThreadId 91", 3, False)}
| | | F              
| | | | S            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | S            , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | S            = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | S            Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | S            8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | S            = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | S            ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | S            1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | S            = True})" , input_size = Size { num_rules = 6 , num_strict_rules = 6 ,
| | | | S            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | | S            = 36} , self = 134 , parent = Nothing , duration = 12.898484784000 , status
| | | | S            = Success , start = 2025-09-04 08:20:55.537337239 UTC , finish = 2025-09-04
| | | | S            08:21:08.435822023 UTC , thread_cap_info = ("ThreadId 92", 3, False)}
| | | | S            
E | | | |            
  | E | |            
  E   | |            
F     | |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F     | |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F     | |            = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
F     | |            = 54 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
F     | |            = 432} , self = 92 , parent = Nothing , duration = 0.471864418000 , status
F     | |            = Fail , start = 2025-09-04 08:20:55.585679397 UTC , finish = 2025-09-04
F     | |            08:20:56.057543815 UTC , thread_cap_info = ("ThreadId 116", 1, False)}
F     | |            
| F   | |            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F   | |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   | |            = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| F   | |            = 54 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F   | |            = 432} , self = 85 , parent = Nothing , duration = 0.266886944000 , status
| F   | |            = Fail , start = 2025-09-04 08:20:55.585686893 UTC , finish = 2025-09-04
| F   | |            08:20:55.852573837 UTC , thread_cap_info = ("ThreadId 118", 1, False)}
| F   | |            
| | F | |            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F | |            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F | |            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F | |            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F | |            = Size { num_rules = 54 , num_strict_rules = 54 , num_top_rules = 0 , num_weak_rules
| | F | |            = 0 , alphabet_size = 9 , total_length = 432} , self = 93 , parent = Nothing
| | F | |            , duration = 0.421110792000 , status = Fail , start = 2025-09-04 08:20:55.676674712
| | F | |            UTC , finish = 2025-09-04 08:20:56.097785504 UTC , thread_cap_info = ("ThreadId
| | F | |            135", 3, False)}
| | F | |            
| | | | | F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | F          = Size { num_rules = 54 , num_strict_rules = 54 , num_top_rules = 0 , num_weak_rules
| | | | | F          = 0 , alphabet_size = 9 , total_length = 432} , self = 98 , parent = Nothing
| | | | | F          , duration = 1.438975897000 , status = Fail , start = 2025-09-04 08:20:55.696669544
| | | | | F          UTC , finish = 2025-09-04 08:20:57.135645441 UTC , thread_cap_info = ("ThreadId
| | | | | F          137", 3, False)}
| | | | | F          
| | | | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F        = 7 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| | | | | | F        = 4 , total_length = 42} , self = 96 , parent = Nothing , duration = 0.568195175000
| | | | | | F        , status = Fail , start = 2025-09-04 08:20:55.817196663 UTC , finish =
| | | | | | F        2025-09-04 08:20:56.385391838 UTC , thread_cap_info = ("ThreadId 150",
| | | | | | F        1, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | F      = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | F      = 42} , self = 95 , parent = Nothing , duration = 0.298772140000 , status
| | | | | | | F      = Fail , start = 2025-09-04 08:20:55.83937727 UTC , finish = 2025-09-04
| | | | | | | F      08:20:56.13814941 UTC , thread_cap_info = ("ThreadId 152", 0, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | | F    = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | F    = 42} , self = 94 , parent = Nothing , duration = 0.273661187000 , status
| | | | | | | | F    = Fail , start = 2025-09-04 08:20:55.845475956 UTC , finish = 2025-09-04
| | | | | | | | F    08:20:56.119137143 UTC , thread_cap_info = ("ThreadId 153", 0, False)}
| | | | | | | | F    
| F | | | | | | |    
| F | | | | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| F | | | | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| F | | | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| F | | | | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| F | | | | | | |    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| F | | | | | | |    = 4 , total_length = 42} , self = 114 , parent = Nothing , duration = 2.429350287000
| F | | | | | | |    , status = Fail , start = 2025-09-04 08:20:55.855582373 UTC , finish =
| F | | | | | | |    2025-09-04 08:20:58.28493266 UTC , thread_cap_info = ("ThreadId 155", 0,
| F | | | | | | |    False)}
| F | | | | | | |    
F | | | | | | | |    
  | F | | | | | |    
  |   | | | | | F    
F |   | | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F |   | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F |   | | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F |   | | | | |      = 7 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
F |   | | | | |      = 4 , total_length = 42} , self = 97 , parent = Nothing , duration = 0.366222642000
F |   | | | | |      , status = Fail , start = 2025-09-04 08:20:56.12027124 UTC , finish = 2025-09-04
F |   | | | | |      08:20:56.486493882 UTC , thread_cap_info = ("ThreadId 164", 1, False)}
F |   | | | | |      
| |   | | | | F      
| | F | | | |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F | | | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F | | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F | | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | F | | | |        , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| | F | | | |        = 4 , total_length = 42} , self = 112 , parent = Nothing , duration = 1.698970969000
| | F | | | |        , status = Fail , start = 2025-09-04 08:20:56.140003425 UTC , finish =
| | F | | | |        2025-09-04 08:20:57.838974394 UTC , thread_cap_info = ("ThreadId 165",
| | F | | | |        1, False)}
| | F | | | |        
| | | | | | F        
| | | | | | F        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | | F        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | F        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | F        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | F        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | F        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | F        , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| | | | | | F        = 4 , total_length = 42} , self = 119 , parent = Nothing , duration = 2.311252096000
| | | | | | F        , status = Fail , start = 2025-09-04 08:20:56.385444607 UTC , finish =
| | | | | | F        2025-09-04 08:20:58.696696703 UTC , thread_cap_info = ("ThreadId 169",
| | | | | | F        0, False)}
| | | | | | F        
F | | | | | |        
F | | | | | |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F | | | | | |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F | | | | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F | | | | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | | | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | | | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
F | | | | | |        , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
F | | | | | |        = 4 , total_length = 42} , self = 113 , parent = Nothing , duration = 1.649231195000
F | | | | | |        , status = Fail , start = 2025-09-04 08:20:56.496975396 UTC , finish =
F | | | | | |        2025-09-04 08:20:58.146206591 UTC , thread_cap_info = ("ThreadId 170",
F | | | | | |        1, False)}
F | | | | | |        
| | | | | F |        
| | | | | F |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |        = False\n , verbose = False}" , input_size = Size { num_rules = 57 , num_strict_rules
| | | | | F |        = 3 , num_top_rules = 3 , num_weak_rules = 54 , alphabet_size = 10 , total_length
| | | | | F |        = 456} , self = 115 , parent = Nothing , duration = 1.227693555000 , status
| | | | | F |        = Fail , start = 2025-09-04 08:20:57.159015099 UTC , finish = 2025-09-04
| | | | | F |        08:20:58.386708654 UTC , thread_cap_info = ("ThreadId 183", 0, False)}
| | | | | F |        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 57 , num_strict_rules
| | | | | | | F      = 3 , num_top_rules = 3 , num_weak_rules = 54 , alphabet_size = 10 , total_length
| | | | | | | F      = 456} , self = 118 , parent = Nothing , duration = 1.342960256000 , status
| | | | | | | F      = Fail , start = 2025-09-04 08:20:57.159017198 UTC , finish = 2025-09-04
| | | | | | | F      08:20:58.501977454 UTC , thread_cap_info = ("ThreadId 184", 0, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 57 , num_strict_rules
| | | | | | | | F    = 3 , num_top_rules = 3 , num_weak_rules = 54 , alphabet_size = 10 , total_length
| | | | | | | | F    = 456} , self = 117 , parent = Nothing , duration = 1.283058683000 , status
| | | | | | | | F    = Fail , start = 2025-09-04 08:20:57.218900901 UTC , finish = 2025-09-04
| | | | | | | | F    08:20:58.501959584 UTC , thread_cap_info = ("ThreadId 187", 3, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 57 , num_strict_rules
| | | | | | | | | F  = 3 , num_top_rules = 3 , num_weak_rules = 54 , alphabet_size = 10 , total_length
| | | | | | | | | F  = 456} , self = 116 , parent = Nothing , duration = 1.259642645000 , status
| | | | | | | | | F  = Fail , start = 2025-09-04 08:20:57.218905299 UTC , finish = 2025-09-04
| | | | | | | | | F  08:20:58.478547944 UTC , thread_cap_info = ("ThreadId 188", 3, False)}
| | | | | | | | | F  
| | F | | | | | | |  
| | F | | | | | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | | | | | |  = 7 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| | F | | | | | | |  = 4 , total_length = 42} , self = 120 , parent = Nothing , duration = 1.025496358000
| | F | | | | | | |  , status = Fail , start = 2025-09-04 08:20:57.857651889 UTC , finish =
| | F | | | | | | |  2025-09-04 08:20:58.883148247 UTC , thread_cap_info = ("ThreadId 189",
| | F | | | | | | |  1, False)}
| | F | | | | | | |  
F | | | | | | | | |  
  F | | | | | | | |  
F   | | | | | | | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F   | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F   | | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F   | | | | | | | |  = 7 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
F   | | | | | | | |  = 4 , total_length = 42} , self = 121 , parent = Nothing , duration = 1.404006266000
F   | | | | | | | |  , status = Fail , start = 2025-09-04 08:20:58.300175643 UTC , finish =
F   | | | | | | | |  2025-09-04 08:20:59.704181909 UTC , thread_cap_info = ("ThreadId 193",
F   | | | | | | | |  0, False)}
F   | | | | | | | |  
|   | | | F | | | |  
| S | | |   | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | |   | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | |   | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | |   | | | |  = 57 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 54 ,
| S | | |   | | | |  alphabet_size = 10 , total_length = 456} , self = 122 , parent = Nothing
| S | | |   | | | |  , duration = 3.378388052000 , status = Success , start = 2025-09-04 08:20:58.386754349
| S | | |   | | | |  UTC , finish = 2025-09-04 08:21:01.765142401 UTC , thread_cap_info = ("ThreadId
| S | | |   | | | |  197", 0, False)}
| S | | |   | | | |  
| | | | |   | | | F  
| | | | | F | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F | | |    = 57 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 54 ,
| | | | | F | | |    alphabet_size = 10 , total_length = 456} , self = 132 , parent = Nothing
| | | | | F | | |    , duration = 9.285066204000 , status = Fail , start = 2025-09-04 08:20:58.499463007
| | | | | F | | |    UTC , finish = 2025-09-04 08:21:07.784529211 UTC , thread_cap_info = ("ThreadId
| | | | | F | | |    198", 3, False)}
| | | | | F | | |    
| | | | | | | | F    
| | | | | | | F      
| | | | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 57
| | | | | | | E      , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 54 , alphabet_size
| | | | | | | E      = 10 , total_length = 456} , self = 133 , parent = Nothing , duration =
| | | | | | | E      9.299518275000 , status = Except "<<timeout>>" , start = 2025-09-04 08:20:58.518339841
| | | | | | | E      UTC , finish = 2025-09-04 08:21:07.817858116 UTC , thread_cap_info = ("ThreadId
| | | | | | | E      199", 3, False)}
| | | | | | | E      
| | | | | | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 57
| | | | | | | | E    , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 54 , alphabet_size
| | | | | | | | E    = 10 , total_length = 456} , self = 124 , parent = Nothing , duration =
| | | | | | | | E    3.327366118000 , status = Except "AsyncCancelled" , start = 2025-09-04
| | | | | | | | E    08:20:58.518361226 UTC , finish = 2025-09-04 08:21:01.845727344 UTC , thread_cap_info
| | | | | | | | E    = ("ThreadId 200", 0, False)}
| | | | | | | | E    
| | | | | | F | |    
| | F | | |   | |    
F |   | | |   | |    
  S   | | |   | |    
      | | |   | E    
F     | | |   |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F     | | |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F     | | |   |      = False\n , verbose = False}" , input_size = Size { num_rules = 56 , num_strict_rules
F     | | |   |      = 2 , num_top_rules = 2 , num_weak_rules = 54 , alphabet_size = 10 , total_length
F     | | |   |      = 448} , self = 131 , parent = Nothing , duration = 2.099113973000 , status
F     | | |   |      = Fail , start = 2025-09-04 08:21:01.847685083 UTC , finish = 2025-09-04
F     | | |   |      08:21:03.946799056 UTC , thread_cap_info = ("ThreadId 216", 0, False)}
F     | | |   |      
| F   | | |   |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   | | |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   | | |   |      = False\n , verbose = False}" , input_size = Size { num_rules = 56 , num_strict_rules
| F   | | |   |      = 2 , num_top_rules = 2 , num_weak_rules = 54 , alphabet_size = 10 , total_length
| F   | | |   |      = 448} , self = 129 , parent = Nothing , duration = 1.980102910000 , status
| F   | | |   |      = Fail , start = 2025-09-04 08:21:01.871209051 UTC , finish = 2025-09-04
| F   | | |   |      08:21:03.851311961 UTC , thread_cap_info = ("ThreadId 215", 0, False)}
| F   | | |   |      
| F   | | |   |      
|     F | |   |      
F       | |   |      
        | F   |      
        |     E      
        S            
