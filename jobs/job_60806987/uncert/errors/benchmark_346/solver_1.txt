[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 414 length 1699
last 446 length 1827
last 358 length 1555
last 332 length 1423
CNF 332 vars 1423 clauses
last 332 length 1423
CNF 332 vars 1423 clauses
CNF 358 vars 1555 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2265, clauses: 8144
last 2265 length 8144
last 788 length 3361
CNF 2265 vars 8144 clauses
last 796 length 3371
last 796 length 3371
CNF 788 vars 3361 clauses
last 788 length 3361
last 841 length 3409
CNF 796 vars 3371 clauses
last 1000 length 4049
last 311 length 1253
last 306 length 1262
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2265, clauses: 8144, status: Unsatisfied, time: 0.065916787s
CNF 796 vars 3371 clauses
last 841 length 3409
last 1000 length 4049
CNF 788 vars 3361 clauses
last 4698 length 19493
last 4466 length 19135
CNF 841 vars 3409 clauses
CNF 1000 vars 4049 clauses
CNF 311 vars 1253 clauses
CNF 306 vars 1262 clauses
CNF 841 vars 3409 clauses
CNF 1000 vars 4049 clauses
CNF 4698 vars 19493 clauses
CNF 4466 vars 19135 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1943, clauses: 7278
last 1943 length 7278
CNF 1943 vars 7278 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1943, clauses: 7278, status: Unsatisfied, time: 0.143147939s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4716, clauses: 17634
last 4716 length 17634
CNF 4716 vars 17634 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4716, clauses: 17634, status: Unsatisfied, time: 1.237655677s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12567, clauses: 51938
last 12567 length 51938
CNF 12567 vars 51938 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12567, clauses: 51938, status: Satisfied, time: 0.521877783s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 3 weak rules on 3 letters       weights
SRS with 1 strict rules and 2 weak rules on 3 letters       mirror
SRS with 1 strict rules and 2 weak rules on 3 letters       context
SRS with 1 strict rules and 6 weak rules on 3 letters       mirror
SRS with 1 strict rules and 6 weak rules on 3 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, c] -> [a] {- Input 0 -}
  [a] ->= [] {- Input 1 -}
  [] ->= [b, c] {- Input 2 -}
  [c, b] ->= [] {- Input 3 -}
reason
  (a, 1/1)
  (b, 0/1)
  (c, 0/1)
   property Termination
has value Just True
for SRS
  [a, c] -> [a] {- Input 0 -}
  [] ->= [b, c] {- Input 2 -}
  [c, b] ->= [] {- Input 3 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [c, a] -> [a] {- Mirror (Input 0) -}
  [] ->= [c, b] {- Mirror (Input 2) -}
  [b, c] ->= [] {- Mirror (Input 3) -}
reason
  context
   property Termination
has value Just True
for SRS
  [c, a] -> [a] {- Mirror (Input 0) -}
  [a] ->= [a, c, b] {- Mirror (Input 2) -}
  [b] ->= [b, c, b] {- Mirror (Input 2) -}
  [c] ->= [c, c, b] {- Mirror (Input 2) -}
  [a, b, c] ->= [a] {- Mirror (Input 3) -}
  [b, b, c] ->= [b] {- Mirror (Input 3) -}
  [c, b, c] ->= [c] {- Mirror (Input 3) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, c] -> [a] {- Input 0 -}
  [a] ->= [b, c, a] {- Input 2 -}
  [b] ->= [b, c, b] {- Input 2 -}
  [c] ->= [b, c, c] {- Input 2 -}
  [c, b, a] ->= [a] {- Input 3 -}
  [c, b, b] ->= [b] {- Input 3 -}
  [c, b, c] ->= [c] {- Input 3 -}
reason
  ( a
  , St  / 0A -1A - \
        | 1A 0A  - |
        \ -  -   - / )
  ( b
  , St  / 0A -   -1A \
        | 1A -1A 0A  |
        \ -  -   -   / )
  ( c
  , St  / 0A -  - \
        | 2A 1A - |
        \ -  -  - / )
   property Termination
has value Just True
for SRS
  [a] ->= [b, c, a] {- Input 2 -}
  [b] ->= [b, c, b] {- Input 2 -}
  [c] ->= [b, c, c] {- Input 2 -}
  [c, b, a] ->= [a] {- Input 3 -}
  [c, b, b] ->= [b] {- Input 3 -}
  [c, b, c] ->= [c] {- Input 3 -}
reason
  no strict rules

**************************************************
skeleton: (1/3,3)\Weight\Mirror(1/2,3)\Context\Mirror(1/6,3)\Matrix{\ArcticBZ}{3}(0/6,3)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 2.443447638000
  min duration 0.013732029000
  total durat. 10.715962413000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 76}
    , self = 104
    , parent = Nothing
    , duration = 1.263510444000
    , status = Fail
    , start = 2025-09-04 08:25:43.703516321 UTC
    , finish = 2025-09-04 08:25:44.967026765 UTC
    , thread_cap_info = ("ThreadId 143", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 63}
    , self = 107
    , parent = Nothing
    , duration = 1.960551841000
    , status = Fail
    , start = 2025-09-04 08:25:43.728456138 UTC
    , finish = 2025-09-04 08:25:45.689007979 UTC
    , thread_cap_info = ("ThreadId 153", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 27}
    , self = 108
    , parent = Nothing
    , duration = 2.046021212000
    , status = Fail
    , start = 2025-09-04 08:25:43.744146663 UTC
    , finish = 2025-09-04 08:25:45.790167875 UTC
    , thread_cap_info = ("ThreadId 162", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 63}
    , self = 110
    , parent = Nothing
    , duration = 2.195657369000
    , status = Fail
    , start = 2025-09-04 08:25:43.819455748 UTC
    , finish = 2025-09-04 08:25:46.015113117 UTC
    , thread_cap_info = ("ThreadId 176", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 39
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 36
      , alphabet_size = 9
      , total_length = 231}
    , self = 112
    , parent = Nothing
    , duration = 2.443447638000
    , status = Fail
    , start = 2025-09-04 08:25:43.768788463 UTC
    , finish = 2025-09-04 08:25:46.212236101 UTC
    , thread_cap_info = ("ThreadId 171", 0, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.337757033000
  min duration 0.027461726000
  total durat. 3.365218759000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 477
      , num_strict_rules = 81
      , num_top_rules = 0
      , num_weak_rules = 396
      , alphabet_size = 81
      , total_length = 2943}
    , self = 116
    , parent = Nothing
    , duration = 3.337757033000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:25:44.488626063 UTC
    , finish = 2025-09-04 08:25:47.826383096 UTC
    , thread_cap_info = ("ThreadId 188", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 2.477664196000
  min duration 0.023198295000
  total durat. 10.789423523000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 76}
    , self = 105
    , parent = Nothing
    , duration = 1.400951004000
    , status = Fail
    , start = 2025-09-04 08:25:43.703518772 UTC
    , finish = 2025-09-04 08:25:45.104469776 UTC
    , thread_cap_info = ("ThreadId 144", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 63}
    , self = 106
    , parent = Nothing
    , duration = 1.952443459000
    , status = Fail
    , start = 2025-09-04 08:25:43.736564226 UTC
    , finish = 2025-09-04 08:25:45.689007685 UTC
    , thread_cap_info = ("ThreadId 154", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 27}
    , self = 109
    , parent = Nothing
    , duration = 2.140354991000
    , status = Fail
    , start = 2025-09-04 08:25:43.751072391 UTC
    , finish = 2025-09-04 08:25:45.891427382 UTC
    , thread_cap_info = ("ThreadId 163", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 63}
    , self = 111
    , parent = Nothing
    , duration = 2.194770982000
    , status = Fail
    , start = 2025-09-04 08:25:43.82573099 UTC
    , finish = 2025-09-04 08:25:46.020501972 UTC
    , thread_cap_info = ("ThreadId 178", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 39
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 36
      , alphabet_size = 9
      , total_length = 231}
    , self = 113
    , parent = Nothing
    , duration = 2.477664196000
    , status = Fail
    , start = 2025-09-04 08:25:43.819425537 UTC
    , finish = 2025-09-04 08:25:46.297089733 UTC
    , thread_cap_info = ("ThreadId 173", 0, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.401017182000
  min duration 0.013362382000
  total durat. 3.414379564000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 477
      , num_strict_rules = 81
      , num_top_rules = 0
      , num_weak_rules = 396
      , alphabet_size = 81
      , total_length = 2943}
    , self = 117
    , parent = Nothing
    , duration = 3.401017182000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:25:44.488630644 UTC
    , finish = 2025-09-04 08:25:47.889647826 UTC
    , thread_cap_info = ("ThreadId 190", 1, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.470238352000
  min duration 3.470238352000
  total durat. 3.470238352000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 27}
    , self = 118
    , parent = Nothing
    , duration = 3.470238352000
    , status = Success
    , start = 2025-09-04 08:25:45.81493342 UTC
    , finish = 2025-09-04 08:25:49.285171772 UTC
    , thread_cap_info = ("ThreadId 200", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.020804532000
  min duration 3.020804532000
  total durat. 3.020804532000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 27}
    , self = 120
    , parent = Nothing
    , duration = 3.020804532000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:25:46.384921991 UTC
    , finish = 2025-09-04 08:25:49.405726523 UTC
    , thread_cap_info = ("ThreadId 205", 0, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.972936863000
  min duration 0.392490801000
  total durat. 2.365427664000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 63}
    , self = 115
    , parent = Nothing
    , duration = 1.972936863000
    , status = Fail
    , start = 2025-09-04 08:25:45.766451439 UTC
    , finish = 2025-09-04 08:25:47.739388302 UTC
    , thread_cap_info = ("ThreadId 199", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.181917420000
  min duration 1.181917420000
  total durat. 1.181917420000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 34}
    , self = 103
    , parent = Nothing
    , duration = 1.181917420000
    , status = Fail
    , start = 2025-09-04 08:25:43.649976415 UTC
    , finish = 2025-09-04 08:25:44.831893835 UTC
    , thread_cap_info = ("ThreadId 130", 0, False)}
**************************************************
F                            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F                            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F                            = 10 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 ,
F                            alphabet_size = 4 , total_length = 34} , self = 103 , parent = Nothing
F                            , duration = 1.181917420000 , status = Fail , start = 2025-09-04 08:25:43.649976415
F                            UTC , finish = 2025-09-04 08:25:44.831893835 UTC , thread_cap_info = ("ThreadId
F                            130", 0, False)}
F                            
| F                          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                          = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| F                          = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| F                          = 76} , self = 99 , parent = Nothing , duration = 0.769884944000 , status
| F                          = Fail , start = 2025-09-04 08:25:43.678307569 UTC , finish = 2025-09-04
| F                          08:25:44.448192513 UTC , thread_cap_info = ("ThreadId 138", 2, False)}
| F                          
| | F                        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                        = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | F                        = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | F                        = 76} , self = 97 , parent = Nothing , duration = 0.600040596000 , status
| | F                        = Fail , start = 2025-09-04 08:25:43.684092367 UTC , finish = 2025-09-04
| | F                        08:25:44.284132963 UTC , thread_cap_info = ("ThreadId 139", 2, False)}
| | F                        
| | | F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | F                      = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | F                      = 76} , self = 104 , parent = Nothing , duration = 1.263510444000 , status
| | | F                      = Fail , start = 2025-09-04 08:25:43.703516321 UTC , finish = 2025-09-04
| | | F                      08:25:44.967026765 UTC , thread_cap_info = ("ThreadId 143", 2, False)}
| | | F                      
| | | | F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | | F                    = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | F                    = 76} , self = 105 , parent = Nothing , duration = 1.400951004000 , status
| | | | F                    = Fail , start = 2025-09-04 08:25:43.703518772 UTC , finish = 2025-09-04
| | | | F                    08:25:45.104469776 UTC , thread_cap_info = ("ThreadId 144", 2, False)}
| | | | F                    
| | | | | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | | | F                  = 3 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | F                  = 63} , self = 107 , parent = Nothing , duration = 1.960551841000 , status
| | | | | F                  = Fail , start = 2025-09-04 08:25:43.728456138 UTC , finish = 2025-09-04
| | | | | F                  08:25:45.689007979 UTC , thread_cap_info = ("ThreadId 153", 1, False)}
| | | | | F                  
| | | | | | S                Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | | | | S                , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | | | | S                , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | | | | S                = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | | | | S                , cpf = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | | | | S                = 3 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | | S                = 63} , self = 96 , parent = Nothing , duration = 0.100833117000 , status
| | | | | | S                = Success , start = 2025-09-04 08:25:43.736242557 UTC , finish = 2025-09-04
| | | | | | S                08:25:43.837075674 UTC , thread_cap_info = ("ThreadId 155", 1, False)}
| | | | | | S                
| | | | | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | | | | | F              = 3 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | | | F              = 63} , self = 106 , parent = Nothing , duration = 1.952443459000 , status
| | | | | | | F              = Fail , start = 2025-09-04 08:25:43.736564226 UTC , finish = 2025-09-04
| | | | | | | F              08:25:45.689007685 UTC , thread_cap_info = ("ThreadId 154", 0, False)}
| | | | | | | F              
| | | | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | | F            = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 3 , total_length
| | | | | | | | F            = 27} , self = 108 , parent = Nothing , duration = 2.046021212000 , status
| | | | | | | | F            = Fail , start = 2025-09-04 08:25:43.744146663 UTC , finish = 2025-09-04
| | | | | | | | F            08:25:45.790167875 UTC , thread_cap_info = ("ThreadId 162", 0, False)}
| | | | | | | | F            
| | | | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | | | F          = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 3 , total_length
| | | | | | | | | F          = 27} , self = 109 , parent = Nothing , duration = 2.140354991000 , status
| | | | | | | | | F          = Fail , start = 2025-09-04 08:25:43.751072391 UTC , finish = 2025-09-04
| | | | | | | | | F          08:25:45.891427382 UTC , thread_cap_info = ("ThreadId 163", 0, False)}
| | | | | | | | | F          
| | | | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 39 , num_strict_rules
| | | | | | | | | | F        = 3 , num_top_rules = 0 , num_weak_rules = 36 , alphabet_size = 9 , total_length
| | | | | | | | | | F        = 231} , self = 112 , parent = Nothing , duration = 2.443447638000 , status
| | | | | | | | | | F        = Fail , start = 2025-09-04 08:25:43.768788463 UTC , finish = 2025-09-04
| | | | | | | | | | F        08:25:46.212236101 UTC , thread_cap_info = ("ThreadId 171", 0, False)}
| | | | | | | | | | F        
| | | | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 39 , num_strict_rules
| | | | | | | | | | | F      = 3 , num_top_rules = 0 , num_weak_rules = 36 , alphabet_size = 9 , total_length
| | | | | | | | | | | F      = 231} , self = 113 , parent = Nothing , duration = 2.477664196000 , status
| | | | | | | | | | | F      = Fail , start = 2025-09-04 08:25:43.819425537 UTC , finish = 2025-09-04
| | | | | | | | | | | F      08:25:46.297089733 UTC , thread_cap_info = ("ThreadId 173", 0, False)}
| | | | | | | | | | | F      
| | | | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | | | | | | | | | | F    = 3 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | | | | | | | | F    = 63} , self = 110 , parent = Nothing , duration = 2.195657369000 , status
| | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:25:43.819455748 UTC , finish = 2025-09-04
| | | | | | | | | | | | F    08:25:46.015113117 UTC , thread_cap_info = ("ThreadId 176", 3, False)}
| | | | | | | | | | | | F    
| | | | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | | | | | | | | | | | F  = 3 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | | | | | | | | | F  = 63} , self = 111 , parent = Nothing , duration = 2.194770982000 , status
| | | | | | | | | | | | | F  = Fail , start = 2025-09-04 08:25:43.82573099 UTC , finish = 2025-09-04
| | | | | | | | | | | | | F  08:25:46.020501972 UTC , thread_cap_info = ("ThreadId 178", 3, False)}
| | | | | | | | | | | | | F  
| | | | | | S | | | | | | |  
| | | | | | S | | | | | | |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | S | | | | | | |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | S | | | | | | |  = Size { num_rules = 1215 , num_strict_rules = 243 , num_top_rules = 0
| | | | | | S | | | | | | |  , num_weak_rules = 972 , alphabet_size = 81 , total_length = 7533} , self
| | | | | | S | | | | | | |  = 98 , parent = Nothing , duration = 0.509099546000 , status = Success
| | | | | | S | | | | | | |  , start = 2025-09-04 08:25:43.837096652 UTC , finish = 2025-09-04 08:25:44.346196198
| | | | | | S | | | | | | |  UTC , thread_cap_info = ("ThreadId 180", 1, False)}
| | | | | | S | | | | | | |  
| | F | | | | | | | | | | |  
| |   | | | S | | | | | | |  
| | F | | |   | | | | | | |  Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
| | F | | |   | | | | | | |  = False\n , verbose = False\n , tracing = False}" , input_size = Size {
| | F | | |   | | | | | | |  num_rules = 477 , num_strict_rules = 81 , num_top_rules = 0 , num_weak_rules
| | F | | |   | | | | | | |  = 396 , alphabet_size = 81 , total_length = 2943} , self = 100 , parent
| | F | | |   | | | | | | |  = Nothing , duration = 0.121341369000 , status = Fail , start = 2025-09-04
| | F | | |   | | | | | | |  08:25:44.346221418 UTC , finish = 2025-09-04 08:25:44.467562787 UTC , thread_cap_info
| | F | | |   | | | | | | |  = ("ThreadId 183", 1, False)}
| | F | | |   | | | | | | |  
| F | | | |   | | | | | | |  
|   F | | |   | | | | | | |  
| E   | | |   | | | | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E   | | |   | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E   | | |   | | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 477 , num_strict_rules
| E   | | |   | | | | | | |  = 81 , num_top_rules = 0 , num_weak_rules = 396 , alphabet_size = 81 ,
| E   | | |   | | | | | | |  total_length = 2943} , self = 116 , parent = Nothing , duration = 3.337757033000
| E   | | |   | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:25:44.488626063
| E   | | |   | | | | | | |  UTC , finish = 2025-09-04 08:25:47.826383096 UTC , thread_cap_info = ("ThreadId
| E   | | |   | | | | | | |  188", 1, False)}
| E   | | |   | | | | | | |  
| | E | | |   | | | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | E | | |   | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E | | |   | | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 477 , num_strict_rules
| | E | | |   | | | | | | |  = 81 , num_top_rules = 0 , num_weak_rules = 396 , alphabet_size = 81 ,
| | E | | |   | | | | | | |  total_length = 2943} , self = 117 , parent = Nothing , duration = 3.401017182000
| | E | | |   | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:25:44.488630644
| | E | | |   | | | | | | |  UTC , finish = 2025-09-04 08:25:47.889647826 UTC , thread_cap_info = ("ThreadId
| | E | | |   | | | | | | |  190", 1, False)}
| | E | | |   | | | | | | |  
F | | | | |   | | | | | | |  
  | | F | |   | | | | | | |  
  | |   F |   | | | | | | |  
  | |     |   F | | | | | |  
  | |     F     | | | | | |  
F | |           | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
F | |           | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F | |           | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F | |           | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | |           | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | |           | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 15
F | |           | | | | | |  , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size
F | |           | | | | | |  = 9 , total_length = 63} , self = 115 , parent = Nothing , duration = 1.972936863000
F | |           | | | | | |  , status = Fail , start = 2025-09-04 08:25:45.766451439 UTC , finish =
F | |           | | | | | |  2025-09-04 08:25:47.739388302 UTC , thread_cap_info = ("ThreadId 199",
F | |           | | | | | |  1, False)}
F | |           | | | | | |  
| | |           F | | | | |  
| | | S           | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | S           | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S           | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S           | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S           | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S           | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | S           | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | S           | | | | |  = 3 , total_length = 27} , self = 118 , parent = Nothing , duration = 3.470238352000
| | | S           | | | | |  , status = Success , start = 2025-09-04 08:25:45.81493342 UTC , finish
| | | S           | | | | |  = 2025-09-04 08:25:49.285171772 UTC , thread_cap_info = ("ThreadId 200",
| | | S           | | | | |  0, False)}
| | | S           | | | | |  
| | | |           F | | | |  
| | | | F           | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | F           | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F           | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F           | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F           | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F           | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | F           | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | | F           | | | |  = 3 , total_length = 27} , self = 114 , parent = Nothing , duration = 0.392490801000
| | | | F           | | | |  , status = Fail , start = 2025-09-04 08:25:45.944410617 UTC , finish =
| | | | F           | | | |  2025-09-04 08:25:46.336901418 UTC , thread_cap_info = ("ThreadId 201",
| | | | F           | | | |  0, False)}
| | | | F           | | | |  
| | | | |           | | F |  
| | | | |           | |   F  
| | | | |           F |      
| | | | |             F      
| | | | F                    
| | | | E                    Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | E                    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E                    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E                    , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E                    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E                    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | E                    , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | | E                    = 3 , total_length = 27} , self = 120 , parent = Nothing , duration = 3.020804532000
| | | | E                    , status = Except "AsyncCancelled" , start = 2025-09-04 08:25:46.384921991
| | | | E                    UTC , finish = 2025-09-04 08:25:49.405726523 UTC , thread_cap_info = ("ThreadId
| | | | E                    205", 0, False)}
| | | | E                    
F | | | |                    
  E | | |                    
    E | |                    
      S |                    
        E                    
