[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 310 length 1465
CNF 310 vars 1465 clauses
last 425 length 2175
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
CNF 425 vars 2175 clauses
last 652 length 2986
last 768 length 3501
CNF 768 vars 3501 clauses
CNF 652 vars 2986 clauses
last 954 length 4530
CNF 954 vars 4530 clauses
last 550 length 2633
CNF 550 vars 2633 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1652, clauses: 6719
last 1652 length 6719
last 550 length 2633
CNF 1652 vars 6719 clauses
last 954 length 4530
CNF 550 vars 2633 clauses
last 1671 length 7430
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1974, clauses: 7727
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1652, clauses: 6719, status: Unsatisfied, time: 0.147930747s
last 1382 length 6391
CNF 954 vars 4530 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14770, clauses: 61397
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12068, clauses: 50441
CNF 1671 vars 7430 clauses
last 1974 length 7727
CNF 1382 vars 6391 clauses
last 11624 length 72181
last 14770 length 61397
last 12068 length 50441
last 14263 length 106697
CNF 1974 vars 7727 clauses
CNF 11624 vars 72181 clauses
CNF 12068 vars 50441 clauses
CNF 14770 vars 61397 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1974, clauses: 7727, status: Satisfied, time: 0.519062364s
CNF 14263 vars 106697 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12068, clauses: 50441, status: Satisfied, time: 0.548296358s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 28792, clauses: 121831
last 28792 length 121831
**************************************************
summary
**************************************************
SRS with 1 strict rules and 1 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 4 weak rules on 4 letters       weights
SRS with 1 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 3 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, b, b, a] -> [] {- Input 0 -}
  [] ->= [a, a, b, a] {- Input 1 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 1/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 0 0 \
                | 0 4 1 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 2 0 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 1 7 \
                | 0 3 2 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
reason
  no strict rules

**************************************************
skeleton: (1/1,2)\TileAllAll{2}(4/4,4)\Weight(1/3,4)\Matrix{\Natural}{3}(0/3,3)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 28792 vars 121831 clauses

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 1.041441434000
  min duration 0.006272763000
  total durat. 2.174072773000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 13
      , total_length = 266}
    , self = 91
    , parent = Nothing
    , duration = 1.041441434000
    , status = Fail
    , start = 2025-09-04 08:23:29.891380404 UTC
    , finish = 2025-09-04 08:23:30.932821838 UTC
    , thread_cap_info = ("ThreadId 147", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.642407764000
  min duration 0.017155500000
  total durat. 1.106997968000
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.054853824000
  min duration 1.054853824000
  total durat. 1.054853824000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 2
      , total_length = 28}
    , self = 93
    , parent = Nothing
    , duration = 1.054853824000
    , status = Success
    , start = 2025-09-04 08:23:29.906065023 UTC
    , finish = 2025-09-04 08:23:30.960918847 UTC
    , thread_cap_info = ("ThreadId 160", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.102284681000
  min duration 1.102284681000
  total durat. 1.102284681000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 26}
    , self = 95
    , parent = Nothing
    , duration = 1.102284681000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:23:29.909177153 UTC
    , finish = 2025-09-04 08:23:31.011461834 UTC
    , thread_cap_info = ("ThreadId 164", 3, False)}
**************************************************
F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                  = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
F                  = 1 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 13 , total_length
F                  = 266} , self = 91 , parent = Nothing , duration = 1.041441434000 , status
F                  = Fail , start = 2025-09-04 08:23:29.891380404 UTC , finish = 2025-09-04
F                  08:23:30.932821838 UTC , thread_cap_info = ("ThreadId 147", 2, False)}
F                  
| F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| F                = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| F                = 26} , self = 85 , parent = Nothing , duration = 0.364148675000 , status
| F                = Fail , start = 2025-09-04 08:23:29.903270336 UTC , finish = 2025-09-04
| F                08:23:30.267419011 UTC , thread_cap_info = ("ThreadId 156", 0, False)}
| F                
| | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | F              = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | F              = 26} , self = 87 , parent = Nothing , duration = 0.425563556000 , status
| | F              = Fail , start = 2025-09-04 08:23:29.903275395 UTC , finish = 2025-09-04
| | F              08:23:30.328838951 UTC , thread_cap_info = ("ThreadId 158", 0, False)}
| | F              
| | | S            Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | S            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | S            , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | | S            = 2 , total_length = 28} , self = 93 , parent = Nothing , duration = 1.054853824000
| | | S            , status = Success , start = 2025-09-04 08:23:29.906065023 UTC , finish
| | | S            = 2025-09-04 08:23:30.960918847 UTC , thread_cap_info = ("ThreadId 160",
| | | S            0, False)}
| | | S            
| | | | F          Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | F          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | F          , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | | | F          = 2 , total_length = 28} , self = 86 , parent = Nothing , duration = 0.365346001000
| | | | F          , status = Fail , start = 2025-09-04 08:23:29.907810907 UTC , finish =
| | | | F          2025-09-04 08:23:30.273156908 UTC , thread_cap_info = ("ThreadId 161",
| | | | F          0, False)}
| | | | F          
| | | | | E        Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | E        , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | | | | E        = 4 , total_length = 26} , self = 95 , parent = Nothing , duration = 1.102284681000
| | | | | E        , status = Except "AsyncCancelled" , start = 2025-09-04 08:23:29.909177153
| | | | | E        UTC , finish = 2025-09-04 08:23:31.011461834 UTC , thread_cap_info = ("ThreadId
| | | | | E        164", 3, False)}
| | | | | E        
| | | | | | S      Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | S      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | S      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | S      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | S      , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | | | | | S      = 4 , total_length = 26} , self = 90 , parent = Nothing , duration = 0.940500360000
| | | | | | S      , status = Success , start = 2025-09-04 08:23:29.966677004 UTC , finish
| | | | | | S      = 2025-09-04 08:23:30.907177364 UTC , thread_cap_info = ("ThreadId 169",
| | | | | | S      3, False)}
| | | | | | S      
| | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | F    = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | F    = 68} , self = 88 , parent = Nothing , duration = 0.677484821000 , status
| | | | | | | F    = Fail , start = 2025-09-04 08:23:29.969253254 UTC , finish = 2025-09-04
| | | | | | | F    08:23:30.646738075 UTC , thread_cap_info = ("ThreadId 171", 0, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | F  = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | F  = 68} , self = 89 , parent = Nothing , duration = 0.642407764000 , status
| | | | | | | | F  = Fail , start = 2025-09-04 08:23:30.00439774 UTC , finish = 2025-09-04
| | | | | | | | F  08:23:30.646805504 UTC , thread_cap_info = ("ThreadId 174", 0, False)}
| | | | | | | | F  
| F | | | | | | |  
|   | | F | | | |  
|   F |   | | | |  
|     |   | | F |  
|     |   | |   F  
|     |   | S      
F     |   |        
      S   |        
          E        
