[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 530 length 2433
CNF 530 vars 2433 clauses
last 426 length 1885
CNF 426 vars 1885 clauses
last 1150 length 5557
CNF 1150 vars 5557 clauses
last 1040 length 5437
last 1394 length 7230
CNF 1040 vars 5437 clauses
last 1626 length 9321
CNF 1394 vars 7230 clauses
CNF 1626 vars 9321 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1517, clauses: 6036
last 1517 length 6036
last 462 length 2163
last 648 length 3105
CNF 648 vars 3105 clauses
CNF 462 vars 2163 clauses
CNF 1517 vars 6036 clauses
last 1384 length 6085
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4259, clauses: 16233
last 1250 length 5719
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4259, clauses: 16104
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1517, clauses: 6036, status: Unsatisfied, time: 0.147747305s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8717, clauses: 35994
last 462 length 2163
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10808, clauses: 45113
last 648 length 3105
CNF 1384 vars 6085 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8719, clauses: 36040
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1836, clauses: 7081
last 4259 length 16233
last 11506 length 71410
CNF 1250 vars 5719 clauses
last 4259 length 16104
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13510, clauses: 56024
last 8717 length 35994
last 13392 length 102362
CNF 462 vars 2163 clauses
last 10808 length 45113
CNF 648 vars 3105 clauses
last 8719 length 36040
last 1836 length 7081
CNF 4259 vars 16233 clauses
CNF 11506 vars 71410 clauses
CNF 4259 vars 16104 clauses
last 13510 length 56024
CNF 8717 vars 35994 clauses
CNF 13392 vars 102362 clauses
CNF 10808 vars 45113 clauses
CNF 1836 vars 7081 clauses
CNF 8719 vars 36040 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4259, clauses: 16233, status: Unsatisfied, time: 0.713362593s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 25736, clauses: 108791
CNF 13510 vars 56024 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8717, clauses: 35994, status: Unsatisfied, time: 0.524531079s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10808, clauses: 45113, status: Satisfied, time: 0.437026487s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1836, clauses: 7081, status: Satisfied, time: 0.446773381s
last 25736 length 108791
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8719, clauses: 36040, status: Unsatisfied, time: 0.467371357s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4259, clauses: 16104, status: Unsatisfied, time: 0.803325018s
CNF 25736 vars 108791 clauses
**************************************************
summary
**************************************************
SRS with 1 strict rules and 1 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 4 weak rules on 4 letters       weights
SRS with 1 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 3 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, a] -> [] {- Input 0 -}
  [] ->= [a, a, b, a] {- Input 1 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 1/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 0 0 \
                | 0 4 1 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 4 0 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 4 5 \
                | 0 0 4 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
reason
  no strict rules

**************************************************
skeleton: (1/1,2)\TileAllAll{2}(4/4,4)\Weight(1/3,4)\Matrix{\Natural}{3}(0/3,3)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.988888592000
  min duration 0.016251748000
  total durat. 2.873337967000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.123996453000
  min duration 0.010666071000
  total durat. 3.022026334000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 13
      , total_length = 264}
    , self = 115
    , parent = Nothing
    , duration = 1.123996453000
    , status = Fail
    , start = 2025-09-04 08:25:46.45690834 UTC
    , finish = 2025-09-04 08:25:47.580904793 UTC
    , thread_cap_info = ("ThreadId 188", 1, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.403353132000
  min duration 1.403353132000
  total durat. 1.403353132000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 2
      , total_length = 24}
    , self = 110
    , parent = Nothing
    , duration = 1.403353132000
    , status = Success
    , start = 2025-09-04 08:25:46.145779017 UTC
    , finish = 2025-09-04 08:25:47.549132149 UTC
    , thread_cap_info = ("ThreadId 149", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.083975466000
  min duration 1.083975466000
  total durat. 1.083975466000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 24}
    , self = 117
    , parent = Nothing
    , duration = 1.083975466000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:25:46.517168407 UTC
    , finish = 2025-09-04 08:25:47.601143873 UTC
    , thread_cap_info = ("ThreadId 196", 0, False)}
Success : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.013028583000
  min duration 1.013028583000
  total durat. 1.013028583000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 24}
    , self = 112
    , parent = Nothing
    , duration = 1.013028583000
    , status = Success
    , start = 2025-09-04 08:25:46.536604263 UTC
    , finish = 2025-09-04 08:25:47.549632846 UTC
    , thread_cap_info = ("ThreadId 197", 0, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.220245369000
  min duration 1.171206261000
  total durat. 2.391451630000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 3
      , alphabet_size = 6
      , total_length = 78}
    , self = 109
    , parent = Nothing
    , duration = 1.171206261000
    , status = Fail
    , start = 2025-09-04 08:25:46.377057836 UTC
    , finish = 2025-09-04 08:25:47.548264097 UTC
    , thread_cap_info = ("ThreadId 176", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 3
      , alphabet_size = 6
      , total_length = 78}
    , self = 113
    , parent = Nothing
    , duration = 1.220245369000
    , status = Fail
    , start = 2025-09-04 08:25:46.336918806 UTC
    , finish = 2025-09-04 08:25:47.557164175 UTC
    , thread_cap_info = ("ThreadId 158", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.267022885000
  min duration 1.198886936000
  total durat. 2.465909821000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 3
      , alphabet_size = 6
      , total_length = 78}
    , self = 108
    , parent = Nothing
    , duration = 1.198886936000
    , status = Fail
    , start = 2025-09-04 08:25:46.320208935 UTC
    , finish = 2025-09-04 08:25:47.519095871 UTC
    , thread_cap_info = ("ThreadId 162", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 3
      , alphabet_size = 6
      , total_length = 78}
    , self = 116
    , parent = Nothing
    , duration = 1.267022885000
    , status = Fail
    , start = 2025-09-04 08:25:46.316920822 UTC
    , finish = 2025-09-04 08:25:47.583943707 UTC
    , thread_cap_info = ("ThreadId 157", 2, False)}
**************************************************
F                            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                            = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
F                            = 15 , num_top_rules = 15 , num_weak_rules = 3 , alphabet_size = 6 , total_length
F                            = 78} , self = 83 , parent = Nothing , duration = 0.175063275000 , status
F                            = Fail , start = 2025-09-04 08:25:46.126641473 UTC , finish = 2025-09-04
F                            08:25:46.301704748 UTC , thread_cap_info = ("ThreadId 93", 2, False)}
F                            
| F                          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                          = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| F                          = 15 , num_top_rules = 15 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| F                          = 78} , self = 84 , parent = Nothing , duration = 0.178905145000 , status
| F                          = Fail , start = 2025-09-04 08:25:46.126644902 UTC , finish = 2025-09-04
| F                          08:25:46.305550047 UTC , thread_cap_info = ("ThreadId 94", 2, False)}
| F                          
| | F                        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                        = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | F                        = 15 , num_top_rules = 15 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | F                        = 78} , self = 85 , parent = Nothing , duration = 0.190157222000 , status
| | F                        = Fail , start = 2025-09-04 08:25:46.12675908 UTC , finish = 2025-09-04
| | F                        08:25:46.316916302 UTC , thread_cap_info = ("ThreadId 103", 3, False)}
| | F                        
| | | F                      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | F                      = 15 , num_top_rules = 15 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | F                      = 78} , self = 89 , parent = Nothing , duration = 0.212686539000 , status
| | | F                      = Fail , start = 2025-09-04 08:25:46.126762309 UTC , finish = 2025-09-04
| | | F                      08:25:46.339448848 UTC , thread_cap_info = ("ThreadId 104", 3, False)}
| | | F                      
| | | | F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | F                    , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | F                    = True})" , input_size = Size { num_rules = 2 , num_strict_rules = 1 ,
| | | | F                    num_top_rules = 0 , num_weak_rules = 1 , alphabet_size = 2 , total_length
| | | | F                    = 8} , self = 79 , parent = Nothing , duration = 0.158376872000 , status
| | | | F                    = Fail , start = 2025-09-04 08:25:46.13593179 UTC , finish = 2025-09-04
| | | | F                    08:25:46.294308662 UTC , thread_cap_info = ("ThreadId 140", 2, False)}
| | | | F                    
| | | | | F                  Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
| | | | | F                  = False\n , verbose = False\n , tracing = False}" , input_size = Size {
| | | | | F                  num_rules = 8 , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules
| | | | | F                  = 6 , alphabet_size = 4 , total_length = 64} , self = 87 , parent = Nothing
| | | | | F                  , duration = 0.173583995000 , status = Fail , start = 2025-09-04 08:25:46.145771231
| | | | | F                  UTC , finish = 2025-09-04 08:25:46.319355226 UTC , thread_cap_info = ("ThreadId
| | | | | F                  148", 0, False)}
| | | | | F                  
| | | | | | S                Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | S                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | S                , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | | | | | S                = 2 , total_length = 24} , self = 110 , parent = Nothing , duration = 1.403353132000
| | | | | | S                , status = Success , start = 2025-09-04 08:25:46.145779017 UTC , finish
| | | | | | S                = 2025-09-04 08:25:47.549132149 UTC , thread_cap_info = ("ThreadId 149",
| | | | | | S                0, False)}
| | | | | | S                
| | | | F | |                
| | | | F | |                Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | F | |                = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F | |                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F | |                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F | |                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F | |                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | F | |                , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | | | F | |                = 2 , total_length = 24} , self = 102 , parent = Nothing , duration = 0.515230517000
| | | | F | |                , status = Fail , start = 2025-09-04 08:25:46.301683071 UTC , finish =
| | | | F | |                2025-09-04 08:25:46.816913588 UTC , thread_cap_info = ("ThreadId 150",
| | | | F | |                0, False)}
| | | | F | |                
F | | | | | |                
  F | | | | |                
    F | | | |                
F     | | | |                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F     | | | |                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F     | | | |                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F     | | | |                = 18 , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 3
F     | | | |                , alphabet_size = 6 , total_length = 78} , self = 116 , parent = Nothing
F     | | | |                , duration = 1.267022885000 , status = Fail , start = 2025-09-04 08:25:46.316920822
F     | | | |                UTC , finish = 2025-09-04 08:25:47.583943707 UTC , thread_cap_info = ("ThreadId
F     | | | |                157", 2, False)}
F     | | | |                
|     | | F |                
| F   | |   |                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F   | |   |                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F   | |   |                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F   | |   |                = 18 , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 3
| F   | |   |                , alphabet_size = 6 , total_length = 78} , self = 108 , parent = Nothing
| F   | |   |                , duration = 1.198886936000 , status = Fail , start = 2025-09-04 08:25:46.320208935
| F   | |   |                UTC , finish = 2025-09-04 08:25:47.519095871 UTC , thread_cap_info = ("ThreadId
| F   | |   |                162", 3, False)}
| F   | |   |                
| | F | |   |                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F | |   |                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F | |   |                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F | |   |                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | |   |                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | |   |                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 18
| | F | |   |                , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 3 , alphabet_size
| | F | |   |                = 6 , total_length = 78} , self = 113 , parent = Nothing , duration = 1.220245369000
| | F | |   |                , status = Fail , start = 2025-09-04 08:25:46.336918806 UTC , finish =
| | F | |   |                2025-09-04 08:25:47.557164175 UTC , thread_cap_info = ("ThreadId 158",
| | F | |   |                2, False)}
| | F | |   |                
| | | | | F |                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |                = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | F |                = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | F |                = 24} , self = 101 , parent = Nothing , duration = 0.182935425000 , status
| | | | | F |                = Fail , start = 2025-09-04 08:25:46.336951129 UTC , finish = 2025-09-04
| | | | | F |                08:25:46.519886554 UTC , thread_cap_info = ("ThreadId 168", 1, False)}
| | | | | F |                
| | | F | | |                
| | | F | | |                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | |                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | |                = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F | | |                = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | F | | |                = 24} , self = 99 , parent = Nothing , duration = 0.143714066000 , status
| | | F | | |                = Fail , start = 2025-09-04 08:25:46.341013968 UTC , finish = 2025-09-04
| | | F | | |                08:25:46.484728034 UTC , thread_cap_info = ("ThreadId 169", 1, False)}
| | | F | | |                
| | | | | | | F              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | F              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | F              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | F              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 18
| | | | | | | F              , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 3 , alphabet_size
| | | | | | | F              = 6 , total_length = 78} , self = 109 , parent = Nothing , duration = 1.171206261000
| | | | | | | F              , status = Fail , start = 2025-09-04 08:25:46.377057836 UTC , finish =
| | | | | | | F              2025-09-04 08:25:47.548264097 UTC , thread_cap_info = ("ThreadId 176",
| | | | | | | F              3, False)}
| | | | | | | F              
| | | | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | F            = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | F            = 64} , self = 103 , parent = Nothing , duration = 0.697358324000 , status
| | | | | | | | F            = Fail , start = 2025-09-04 08:25:46.377105028 UTC , finish = 2025-09-04
| | | | | | | | F            08:25:47.074463352 UTC , thread_cap_info = ("ThreadId 180", 0, False)}
| | | | | | | | F            
| | | | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | F          = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | | F          = 64} , self = 104 , parent = Nothing , duration = 0.695701234000 , status
| | | | | | | | | F          = Fail , start = 2025-09-04 08:25:46.392095444 UTC , finish = 2025-09-04
| | | | | | | | | F          08:25:47.087796678 UTC , thread_cap_info = ("ThreadId 182", 0, False)}
| | | | | | | | | F          
| | | | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | | | | F        = 1 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 13 , total_length
| | | | | | | | | | F        = 264} , self = 107 , parent = Nothing , duration = 0.988888592000 , status
| | | | | | | | | | F        = Fail , start = 2025-09-04 08:25:46.446747085 UTC , finish = 2025-09-04
| | | | | | | | | | F        08:25:47.435635677 UTC , thread_cap_info = ("ThreadId 186", 1, False)}
| | | | | | | | | | F        
| | | | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | | | | | F      = 1 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 13 , total_length
| | | | | | | | | | | F      = 264} , self = 115 , parent = Nothing , duration = 1.123996453000 , status
| | | | | | | | | | | F      = Fail , start = 2025-09-04 08:25:46.45690834 UTC , finish = 2025-09-04
| | | | | | | | | | | F      08:25:47.580904793 UTC , thread_cap_info = ("ThreadId 188", 1, False)}
| | | | | | | | | | | F      
| | | F | | | | | | | |      
| | | F | | | | | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | | | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F | | | | | | | |      = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | F | | | | | | | |      = 24} , self = 105 , parent = Nothing , duration = 0.622683381000 , status
| | | F | | | | | | | |      = Fail , start = 2025-09-04 08:25:46.497085175 UTC , finish = 2025-09-04
| | | F | | | | | | | |      08:25:47.119768556 UTC , thread_cap_info = ("ThreadId 191", 0, False)}
| | | F | | | | | | | |      
| | | | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | | | | | F    = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | | | | | F    = 24} , self = 106 , parent = Nothing , duration = 0.656356826000 , status
| | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:25:46.502272837 UTC , finish = 2025-09-04
| | | | | | | | | | | | F    08:25:47.158629663 UTC , thread_cap_info = ("ThreadId 193", 0, False)}
| | | | | | | | | | | | F    
| | | | | | | | | | | | | E  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | | | | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | | | | | | | | E  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | | | | | | | | | | | | E  = 4 , total_length = 24} , self = 117 , parent = Nothing , duration = 1.083975466000
| | | | | | | | | | | | | E  , status = Except "AsyncCancelled" , start = 2025-09-04 08:25:46.517168407
| | | | | | | | | | | | | E  UTC , finish = 2025-09-04 08:25:47.601143873 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | E  196", 0, False)}
| | | | | | | | | | | | | E  
| | | | | F | | | | | | | |  
| | | | | S | | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | S | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | S | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | S | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | S | | | | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | | | | S | | | | | | | |  = 4 , total_length = 24} , self = 112 , parent = Nothing , duration = 1.013028583000
| | | | | S | | | | | | | |  , status = Success , start = 2025-09-04 08:25:46.536604263 UTC , finish
| | | | | S | | | | | | | |  = 2025-09-04 08:25:47.549632846 UTC , thread_cap_info = ("ThreadId 197",
| | | | | S | | | | | | | |  0, False)}
| | | | | S | | | | | | | |  
| | | | F | | | | | | | | |  
| | | |   | | | F | | | | |  
| | | |   | | |   F | | | |  
| | | F   | | |     | | | |  
| | |     | | |     | | F |  
| | |     | | |     F |   |  
| F |     | | |       |   |  
|   |     | | F       |   |  
|   |     | S         |   |  
|   |     S           |   |  
|   F                 |   |  
|                     F   |  
F                         |  
                          E  
