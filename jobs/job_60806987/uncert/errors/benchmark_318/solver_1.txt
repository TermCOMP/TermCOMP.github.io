[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 364 length 1623
CNF 364 vars 1623 clauses
last 357 length 1705
last 800 length 3578
last 882 length 4199
CNF 800 vars 3578 clauses
CNF 882 vars 4199 clauses
last 882 length 4199
last 800 length 3578
CNF 800 vars 3578 clauses
CNF 357 vars 1705 clauses
CNF 882 vars 4199 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1285, clauses: 5057
last 1285 length 5057
last 1387 length 6115
last 1427 length 6531
CNF 1285 vars 5057 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9412, clauses: 39216
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2326, clauses: 9148
last 671 length 3322
CNF 1387 vars 6115 clauses
last 878 length 4788
CNF 1427 vars 6531 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17426, clauses: 72523
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1285, clauses: 5057, status: Unsatisfied, time: 0.384875127s
last 9412 length 39216
last 2326 length 9148
CNF 671 vars 3322 clauses
last 13011 length 79333
CNF 878 vars 4788 clauses
last 17426 length 72523
CNF 9412 vars 39216 clauses
CNF 2326 vars 9148 clauses
CNF 13011 vars 79333 clauses
last 15605 length 114092
CNF 17426 vars 72523 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1961, clauses: 7649
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2326, clauses: 9148, status: Satisfied, time: 0.608008176s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9412, clauses: 39216, status: Unsatisfied, time: 0.702715398s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22439, clauses: 94709
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14770, clauses: 61280
CNF 15605 vars 114092 clauses
last 1961 length 7649
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17426, clauses: 72523, status: Satisfied, time: 0.674384011s
last 22439 length 94709
last 14770 length 61280
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4584, clauses: 18949
CNF 1961 vars 7649 clauses
last 4584 length 18949
CNF 4584 vars 18949 clauses
CNF 22439 vars 94709 clauses
CNF 14770 vars 61280 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1961, clauses: 7649, status: Satisfied, time: 0.228489201s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4584, clauses: 18949, status: Unsatisfied, time: 0.140950941s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22439, clauses: 94709, status: Satisfied, time: 0.445739499s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 1 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 4 weak rules on 4 letters       weights
SRS with 2 strict rules and 3 weak rules on 4 letters       split
2 sub-proofs
  1 SRS with 1 strict rules and 4 weak rules on 4 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
  SRS with 16 strict rules and 64 weak rules on 16 letters       weights
  SRS with 0 strict rules and 36 weak rules on 14 letters       no strict rules

  2 SRS with 1 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 3 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, b, b, a] -> [b] {- Input 0 -}
  [] ->= [a, a, b, a] {- Input 1 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[b, b], [b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [b, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[b, b], [b, a], [a, b], [b, b], [b, a], [a, a]] -> [ [b, b] , [ b , a ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, b], [b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [a, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[a, b], [b, a], [a, b], [b, b], [b, a], [a, a]] -> [ [a, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 1/1)
   property Termination
has value Just True
for SRS
  [[b, b], [b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [b, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, b], [b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [a, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  split
   property Termination
has value Just True
for SRS
  [[b, b], [b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [b, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, b], [b, a], [a, b], [b, b], [b, a], [a, b]] ->= [ [a, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 0 (Concon 0 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [a, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 0 (Input 0)))) -}
  [[[b, b], [b, a]], [[b, a], [b, b]]] ->= [ [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[b, b], [b, a]], [[b, a], [b, a]]] ->= [ [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[b, b], [b, a]], [[b, a], [a, b]]] ->= [ [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[b, b], [b, a]], [[b, a], [a, a]]] ->= [ [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[b, a], [b, a]], [[b, a], [b, b]]] ->= [ [[b, a], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[b, a], [b, a]], [[b, a], [b, a]]] ->= [ [[b, a], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[b, a], [b, a]], [[b, a], [a, b]]] ->= [ [[b, a], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[b, a], [b, a]], [[b, a], [a, a]]] ->= [ [[b, a], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[a, b], [b, a]], [[b, a], [b, b]]] ->= [ [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[a, b], [b, a]], [[b, a], [b, a]]] ->= [ [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[a, b], [b, a]], [[b, a], [a, b]]] ->= [ [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[a, b], [b, a]], [[b, a], [a, a]]] ->= [ [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[a, a], [b, a]], [[b, a], [b, b]]] ->= [ [[a, a], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[a, a], [b, a]], [[b, a], [b, a]]] ->= [ [[a, a], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[a, a], [b, a]], [[b, a], [a, b]]] ->= [ [[a, a], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[a, a], [b, a]], [[b, a], [a, a]]] ->= [ [[a, a], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[b, b], [a, b]], [[a, b], [b, b]]] ->= [ [[b, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[b, b], [a, b]], [[a, b], [b, a]]] ->= [ [[b, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[b, b], [a, b]], [[a, b], [a, b]]] ->= [ [[b, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[b, b], [a, b]], [[a, b], [a, a]]] ->= [ [[b, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[b, a], [a, b]], [[a, b], [b, b]]] ->= [ [[b, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[b, a], [a, b]], [[a, b], [b, a]]] ->= [ [[b, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[b, a], [a, b]], [[a, b], [a, b]]] ->= [ [[b, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[b, a], [a, b]], [[a, b], [a, a]]] ->= [ [[b, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[a, b], [a, b]], [[a, b], [b, b]]] ->= [ [[a, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[a, b], [a, b]], [[a, b], [b, a]]] ->= [ [[a, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[a, b], [a, b]], [[a, b], [a, b]]] ->= [ [[a, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[a, b], [a, b]], [[a, b], [a, a]]] ->= [ [[a, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[a, a], [a, b]], [[a, b], [b, b]]] ->= [ [[a, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[a, a], [a, b]], [[a, b], [b, a]]] ->= [ [[a, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[a, a], [a, b]], [[a, b], [a, b]]] ->= [ [[a, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[a, a], [a, b]], [[a, b], [a, a]]] ->= [ [[a, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[b, b], [a, a]], [[a, a], [b, b]]] ->= [ [[b, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[b, b], [a, a]], [[a, a], [b, a]]] ->= [ [[b, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[b, b], [a, a]], [[a, a], [a, b]]] ->= [ [[b, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[b, b], [a, a]], [[a, a], [a, a]]] ->= [ [[b, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[b, a], [a, a]], [[a, a], [b, b]]] ->= [ [[b, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[b, a], [a, a]], [[a, a], [b, a]]] ->= [ [[b, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[b, a], [a, a]], [[a, a], [a, b]]] ->= [ [[b, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[b, a], [a, a]], [[a, a], [a, a]]] ->= [ [[b, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[a, b], [a, a]], [[a, a], [b, b]]] ->= [ [[a, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[a, b], [a, a]], [[a, a], [b, a]]] ->= [ [[a, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[a, b], [a, a]], [[a, a], [a, b]]] ->= [ [[a, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[a, b], [a, a]], [[a, a], [a, a]]] ->= [ [[a, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[a, a], [a, a]], [[a, a], [b, b]]] ->= [ [[a, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[a, a], [a, a]], [[a, a], [b, a]]] ->= [ [[a, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[a, a], [a, a]], [[a, a], [a, b]]] ->= [ [[a, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[a, a], [a, a]], [[a, a], [a, a]]] ->= [ [[a, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  ([[a, a], [a, a]], 0/1)
  ([[a, a], [a, b]], 0/1)
  ([[a, a], [b, a]], 0/1)
  ([[a, a], [b, b]], 0/1)
  ([[a, b], [a, a]], 0/1)
  ([[a, b], [a, b]], 2/1)
  ([[a, b], [b, a]], 0/1)
  ([[a, b], [b, b]], 2/1)
  ([[b, a], [a, a]], 0/1)
  ([[b, a], [a, b]], 0/1)
  ([[b, a], [b, a]], 2/1)
  ([[b, a], [b, b]], 2/1)
  ([[b, b], [a, a]], 0/1)
  ([[b, b], [a, b]], 1/1)
  ([[b, b], [b, a]], 2/1)
  ([[b, b], [b, b]], 0/1)
   property Termination
has value Just True
for SRS
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 0 (Input 0)))) -}
  [[[b, b], [b, a]], [[b, a], [a, b]]] ->= [ [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[b, b], [b, a]], [[b, a], [a, a]]] ->= [ [[b, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[b, a], [b, a]], [[b, a], [a, b]]] ->= [ [[b, a], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[b, a], [b, a]], [[b, a], [a, a]]] ->= [ [[b, a], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[a, b], [b, a]], [[b, a], [a, b]]] ->= [ [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[a, b], [b, a]], [[b, a], [a, a]]] ->= [ [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[a, a], [b, a]], [[b, a], [a, b]]] ->= [ [[a, a], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[a, a], [b, a]], [[b, a], [a, a]]] ->= [ [[a, a], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [[[b, a], [a, b]], [[a, b], [b, b]]] ->= [ [[b, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[b, a], [a, b]], [[a, b], [b, a]]] ->= [ [[b, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[b, a], [a, b]], [[a, b], [a, b]]] ->= [ [[b, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[b, a], [a, b]], [[a, b], [a, a]]] ->= [ [[b, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[a, a], [a, b]], [[a, b], [b, b]]] ->= [ [[a, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[a, a], [a, b]], [[a, b], [b, a]]] ->= [ [[a, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[a, a], [a, b]], [[a, b], [a, b]]] ->= [ [[a, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[a, a], [a, b]], [[a, b], [a, a]]] ->= [ [[a, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [ [a, b] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 0 (Input 1)))) -}
  [[[b, b], [a, a]], [[a, a], [b, b]]] ->= [ [[b, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[b, b], [a, a]], [[a, a], [b, a]]] ->= [ [[b, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[b, b], [a, a]], [[a, a], [a, b]]] ->= [ [[b, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[b, b], [a, a]], [[a, a], [a, a]]] ->= [ [[b, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[b, a], [a, a]], [[a, a], [b, b]]] ->= [ [[b, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[b, a], [a, a]], [[a, a], [b, a]]] ->= [ [[b, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[b, a], [a, a]], [[a, a], [a, b]]] ->= [ [[b, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[b, a], [a, a]], [[a, a], [a, a]]] ->= [ [[b, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[a, b], [a, a]], [[a, a], [b, b]]] ->= [ [[a, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[a, b], [a, a]], [[a, a], [b, a]]] ->= [ [[a, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[a, b], [a, a]], [[a, a], [a, b]]] ->= [ [[a, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[a, b], [a, a]], [[a, a], [a, a]]] ->= [ [[a, b], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[a, a], [a, a]], [[a, a], [b, b]]] ->= [ [[a, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[a, a], [a, a]], [[a, a], [b, a]]] ->= [ [[a, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[a, a], [a, a]], [[a, a], [a, b]]] ->= [ [[a, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [[[a, a], [a, a]], [[a, a], [a, a]]] ->= [ [[a, a], [a, a]] , [[a, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [ [a, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
reason
  no strict rules

property Termination
has value Just True
for SRS
  [[a, b], [b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [a, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 0 0 \
                | 0 1 1 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 1 5 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 4 6 \
                | 0 0 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  no strict rules

**************************************************
skeleton: (1/1,2)\TileAllAll{2}(4/4,4)\Weight(2/3,4)\Split[(1/4,4)\TileAllAll{2}(16/64,16)\Weight(0/36,14)[],(1/3,4)\Matrix{\Natural}{3}(0/3,3)[]]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 1.009916396000
  min duration 0.007896493000
  total durat. 2.256107651000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 36
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 14
      , total_length = 296}
    , self = 98
    , parent = Nothing
    , duration = 1.009916396000
    , status = Fail
    , start = 2025-09-04 08:23:25.350025335 UTC
    , finish = 2025-09-04 08:23:26.359941731 UTC
    , thread_cap_info = ("ThreadId 186", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 1.197767180000
  min duration 0.030733900000
  total durat. 2.762832842000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 36
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 14
      , total_length = 296}
    , self = 104
    , parent = Nothing
    , duration = 1.197767180000
    , status = Fail
    , start = 2025-09-04 08:23:25.350031776 UTC
    , finish = 2025-09-04 08:23:26.547798956 UTC
    , thread_cap_info = ("ThreadId 188", 2, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.377318269000
  min duration 1.377318269000
  total durat. 1.377318269000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 34}
    , self = 102
    , parent = Nothing
    , duration = 1.377318269000
    , status = Success
    , start = 2025-09-04 08:23:25.129986763 UTC
    , finish = 2025-09-04 08:23:26.507305032 UTC
    , thread_cap_info = ("ThreadId 166", 2, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.333788840000
  min duration 1.333788840000
  total durat. 1.333788840000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 2
      , total_length = 18}
    , self = 100
    , parent = Nothing
    , duration = 1.333788840000
    , status = Fail
    , start = 2025-09-04 08:23:25.081477329 UTC
    , finish = 2025-09-04 08:23:26.415266169 UTC
    , thread_cap_info = ("ThreadId 138", 3, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.127626210000
  min duration 1.127626210000
  total durat. 1.127626210000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 2
      , total_length = 18}
    , self = 111
    , parent = Nothing
    , duration = 1.127626210000
    , status = Success
    , start = 2025-09-04 08:23:25.742468993 UTC
    , finish = 2025-09-04 08:23:26.870095203 UTC
    , thread_cap_info = ("ThreadId 194", 3, False)}
Success : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.251695198000
  min duration 0.463735486000
  total durat. 1.715430684000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 34}
    , self = 99
    , parent = Nothing
    , duration = 1.251695198000
    , status = Success
    , start = 2025-09-04 08:23:25.1635435 UTC
    , finish = 2025-09-04 08:23:26.415238698 UTC
    , thread_cap_info = ("ThreadId 168", 2, False)}
**************************************************
F                    Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
F                    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
F                    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
F                    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F                    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F                    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
F                    , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
F                    = 2 , total_length = 18} , self = 100 , parent = Nothing , duration = 1.333788840000
F                    , status = Fail , start = 2025-09-04 08:23:25.081477329 UTC , finish =
F                    2025-09-04 08:23:26.415266169 UTC , thread_cap_info = ("ThreadId 138",
F                    3, False)}
F                    
| F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| F                  = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| F                  = 64} , self = 93 , parent = Nothing , duration = 0.594826175000 , status
| F                  = Fail , start = 2025-09-04 08:23:25.12027948 UTC , finish = 2025-09-04
| F                  08:23:25.715105655 UTC , thread_cap_info = ("ThreadId 162", 0, False)}
| F                  
| | S                Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | S                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | S                , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | S                = 4 , total_length = 34} , self = 102 , parent = Nothing , duration = 1.377318269000
| | S                , status = Success , start = 2025-09-04 08:23:25.129986763 UTC , finish
| | S                = 2025-09-04 08:23:26.507305032 UTC , thread_cap_info = ("ThreadId 166",
| | S                2, False)}
| | S                
| | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | F              = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | F              = 64} , self = 94 , parent = Nothing , duration = 0.597957413000 , status
| | | F              = Fail , start = 2025-09-04 08:23:25.140612893 UTC , finish = 2025-09-04
| | | F              08:23:25.738570306 UTC , thread_cap_info = ("ThreadId 164", 0, False)}
| | | F              
| | | | F            Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | F            = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | F            , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | | | F            = 2 , total_length = 18} , self = 95 , parent = Nothing , duration = 0.578881475000
| | | | F            , status = Fail , start = 2025-09-04 08:23:25.163538681 UTC , finish =
| | | | F            2025-09-04 08:23:25.742420156 UTC , thread_cap_info = ("ThreadId 167",
| | | | F            3, False)}
| | | | F            
| | | | | S          Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | S          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | S          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | S          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | S          , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | | | | S          = 4 , total_length = 34} , self = 99 , parent = Nothing , duration = 1.251695198000
| | | | | S          , status = Success , start = 2025-09-04 08:23:25.1635435 UTC , finish =
| | | | | S          2025-09-04 08:23:26.415238698 UTC , thread_cap_info = ("ThreadId 168",
| | | | | S          2, False)}
| | | | | S          
| | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | F        = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | F        = 26} , self = 96 , parent = Nothing , duration = 0.579844404000 , status
| | | | | | F        = Fail , start = 2025-09-04 08:23:25.279929207 UTC , finish = 2025-09-04
| | | | | | F        08:23:25.859773611 UTC , thread_cap_info = ("ThreadId 179", 2, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | F      = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | F      = 26} , self = 97 , parent = Nothing , duration = 0.834516178000 , status
| | | | | | | F      = Fail , start = 2025-09-04 08:23:25.288748209 UTC , finish = 2025-09-04
| | | | | | | F      08:23:26.123264387 UTC , thread_cap_info = ("ThreadId 180", 2, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | | | | | F    = 4 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 14 , total_length
| | | | | | | | F    = 296} , self = 98 , parent = Nothing , duration = 1.009916396000 , status
| | | | | | | | F    = Fail , start = 2025-09-04 08:23:25.350025335 UTC , finish = 2025-09-04
| | | | | | | | F    08:23:26.359941731 UTC , thread_cap_info = ("ThreadId 186", 2, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| | | | | | | | | F  = 4 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 14 , total_length
| | | | | | | | | F  = 296} , self = 104 , parent = Nothing , duration = 1.197767180000 , status
| | | | | | | | | F  = Fail , start = 2025-09-04 08:23:25.350031776 UTC , finish = 2025-09-04
| | | | | | | | | F  08:23:26.547798956 UTC , thread_cap_info = ("ThreadId 188", 2, False)}
| | | | | | | | | F  
| F | | | | | | | |  
|   | F | | | | | |  
|   |   F | | | | |  
| S |     | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| S |     | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S |     | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S |     | | | | |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S |     | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S |     | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| S |     | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| S |     | | | | |  = 2 , total_length = 18} , self = 111 , parent = Nothing , duration = 1.127626210000
| S |     | | | | |  , status = Success , start = 2025-09-04 08:23:25.742468993 UTC , finish
| S |     | | | | |  = 2025-09-04 08:23:26.870095203 UTC , thread_cap_info = ("ThreadId 194",
| S |     | | | | |  3, False)}
| S |     | | | | |  
| | |     | F | | |  
| | | E   |   | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | E   |   | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E   |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E   |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E   |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E   |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | E   |   | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | | E   |   | | |  = 4 , total_length = 26} , self = 108 , parent = Nothing , duration = 0.785000214000
| | | E   |   | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:23:25.8810752
| | | E   |   | | |  UTC , finish = 2025-09-04 08:23:26.666075414 UTC , thread_cap_info = ("ThreadId
| | | E   |   | | |  198", 2, False)}
| | | E   |   | | |  
| | | |   |   F | |  
| | | | S |     | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | S |     | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | S |     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | S |     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S |     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S |     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | S |     | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | | | S |     | |  = 4 , total_length = 26} , self = 105 , parent = Nothing , duration = 0.463735486000
| | | | S |     | |  , status = Success , start = 2025-09-04 08:23:26.13967425 UTC , finish
| | | | S |     | |  = 2025-09-04 08:23:26.603409736 UTC , thread_cap_info = ("ThreadId 200",
| | | | S |     | |  2, False)}
| | | | S |     | |  
| | | | | |     F |  
| | | | | S       |  
F | | | |         |  
F | | | |         |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
F | | | |         |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F | | | |         |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F | | | |         |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | | |         |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | | |         |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
F | | | |         |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
F | | | |         |  = 2 , total_length = 18} , self = 107 , parent = Nothing , duration = 0.246263670000
F | | | |         |  , status = Fail , start = 2025-09-04 08:23:26.415304231 UTC , finish =
F | | | |         |  2025-09-04 08:23:26.661567901 UTC , thread_cap_info = ("ThreadId 203",
F | | | |         |  3, False)}
F | | | |         |  
| | S | |         |  
| |   | |         F  
| |   | S            
F |   |              
  |   E              
  S                  
