[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 1086 length 5027
last 1755 length 8321
last 1922 length 10255
CNF 1755 vars 8321 clauses
CNF 1922 vars 10255 clauses
last 1129 length 5333
CNF 1129 vars 5333 clauses
last 1403 length 7197
CNF 1403 vars 7197 clauses
last 4327 length 20843
CNF 4327 vars 20843 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1950, clauses: 8099
last 1950 length 8099
last 4655 length 20702
CNF 1950 vars 8099 clauses
last 4655 length 20702
CNF 4655 vars 20702 clauses
CNF 4655 vars 20702 clauses
last 4327 length 20843
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1950, clauses: 8099, status: Unsatisfied, time: 0.359490646s
CNF 4327 vars 20843 clauses
last 4327 length 20843
CNF 4327 vars 20843 clauses
last 4655 length 20702
CNF 4655 vars 20702 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6011, clauses: 26117
last 6011 length 26117
CNF 6011 vars 26117 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15712, clauses: 65910
last 15712 length 65910
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6011, clauses: 26117, status: Satisfied, time: 0.428615966s
CNF 15712 vars 65910 clauses
last 3469 length 15795
last 3572 length 16925
CNF 3469 vars 15795 clauses
CNF 3572 vars 16925 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5277, clauses: 22659
last 5277 length 22659
CNF 5277 vars 22659 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5277, clauses: 22659, status: Unsatisfied, time: 3.430019707s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7336, clauses: 30919
last 7336 length 30919
CNF 7336 vars 30919 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7336, clauses: 30919, status: Unsatisfied, time: 1.483788964s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 2, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9564, clauses: 45978
last 9564 length 45978
CNF 9564 vars 45978 clauses
Matrix {monotone = Strict, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26032, clauses: 122369
last 26032 length 122369
CNF 26032 vars 122369 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19444, clauses: 85069
last 19444 length 85069
Matrix {monotone = Strict, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26032, clauses: 122369, status: Satisfied, time: 1.58105003s
CNF 19444 vars 85069 clauses
last 782 length 3552
CNF 782 vars 3552 clauses
last 1000 length 4756
CNF 1000 vars 4756 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1459, clauses: 6084
last 1459 length 6084
CNF 1459 vars 6084 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1459, clauses: 6084, status: Unsatisfied, time: 0.247207243s
last 5320 length 28767
CNF 5320 vars 28767 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11796, clauses: 49429
last 11796 length 49429
last 7020 length 43966
CNF 11796 vars 49429 clauses
CNF 7020 vars 43966 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19444, clauses: 85069, status: Satisfied, time: 3.169094647s
**************************************************
summary
**************************************************
SRS with 2 strict rules and 1 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 8 strict rules and 4 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 6 strict rules and 4 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 4 weak rules on 4 letters       split
2 sub-proofs
  1 SRS with 4 strict rules and 4 weak rules on 4 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
  SRS with 64 strict rules and 64 weak rules on last 5284 length 34974
13 letters       weights
  SRS with 0 strict rules and 64 weak rules on 13 letters       no strict rules

  2 SRS with 0 strict rules and 4 weak rules on 4 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, b, a, a, b, a, b] -> [b, a, b, b, a, b, b] {- Input 0 -}
  [b, b, b] -> [b, b, a, b, b] {- Input 1 -}
  [b, a, b] ->= [b, a, b, a, a, b] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[b, b], [b, b], [b, a], [a, a], [a, b], [b, a], [a, b], [b, b]] -> [ [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[b, b], [b, b], [b, a], [a, a], [a, b], [b, a], [a, b], [b, a]] -> [ [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, b], [b, b], [b, a], [a, a], [a, b], [b, a], [a, b], [b, b]] -> [ [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[a, b], [b, b], [b, a], [a, a], [a, b], [b, a], [a, b], [b, a]] -> [ [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, b], [b, b], [b, b], [b, b]] -> [ [b, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, b], [b, b], [b, b], [b, a]] -> [ [b, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, b], [b, b], [b, b], [b, b]] -> [ [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, b], [b, b], [b, b], [b, a]] -> [ [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, b], [b, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, b], [b, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[a, b], [b, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 2 0 \
                | 0 0 2 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[a, b], [b, b], [b, a], [a, a], [a, b], [b, a], [a, b], [b, b]] -> [ [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[a, b], [b, b], [b, a], [a, a], [a, b], [b, a], [a, b], [b, a]] -> [ [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, b], [b, b], [b, b], [b, b]] -> [ [b, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, b], [b, b], [b, b], [b, a]] -> [ [b, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, b], [b, b], [b, b], [b, b]] -> [ [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, b], [b, b], [b, b], [b, a]] -> [ [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, b], [b, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, b], [b, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[a, b], [b, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 0 \
                | 0 0 0 0 |
                | 0 0 1 0 |
                \ 0 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 1 0 0 \
                | 0 1 1 3 |
                | 0 1 1 0 |
                \ 0 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 0 \
                | 0 1 0 0 |
                | 0 0 1 0 |
                \ 0 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 0 1 0 \
                | 0 0 0 0 |
                | 0 0 1 0 |
                \ 0 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[b, b], [b, b], [b, b], [b, b]] -> [ [b, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, b], [b, b], [b, b], [b, a]] -> [ [b, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, b], [b, b], [b, b], [b, b]] -> [ [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, b], [b, b], [b, b], [b, a]] -> [ [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, b], [b, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, b], [b, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[a, b], [b, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  split
   property Termination
has value Just True
for SRS
  [[b, b], [b, b], [b, b], [b, b]] -> [ [b, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, b], [b, b], [b, b], [b, a]] -> [ [b, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, b], [b, b], [b, b], [b, b]] -> [ [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, b], [b, b], [b, b], [b, a]] -> [ [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, b], [b, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, b], [b, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[a, b], [b, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, b]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, a]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, b]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, a]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, b]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, a]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, b]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, a]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, b]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, a]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, b]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, a]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}CNF 5284 vars 34974 clauses

  [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, b]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, a]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, b]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, a]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] ] -> [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] ] -> [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, b]] ] -> [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, a]] ] -> [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] ] -> [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] ] -> [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, b]] ] -> [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, a]] ] -> [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] ] -> [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] ] -> [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, b]] ] -> [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, a]] ] -> [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] ] -> [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] ] -> [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, b]] ] -> [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, a]] ] -> [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, b]] ] -> [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, a]] ] -> [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] ] -> [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] ] -> [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, b]] ] -> [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, a]] ] -> [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] ] -> [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] ] -> [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, b]] ] -> [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, a]] ] -> [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] ] -> [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] ] -> [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, b]] ] -> [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, a]] ] -> [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] ] -> [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] ] -> [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  ([[a, a], [a, b]], 0/1)
  ([[a, a], [b, b]], 0/1)
  ([[a, b], [a, b]], 0/1)
  ([[a, b], [b, a]], 0/1)
  ([[a, b], [b, b]], 0/1)
  ([[b, a], [a, a]], 0/1)
  ([[b, a], [a, b]], 0/1)
  ([[b, a], [b, a]], 0/1)
  ([[b, a], [b, b]], 0/1)
  ([[b, b], [a, a]], 0/1)
  ([[b, b], [a, b]], 0/1)
  ([[b, b], [b, a]], 0/1)
  ([[b, b], [b, b]], 1/1)
   property Termination
has value Just True
for SRS
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  no strict rules

property Termination
has value Just True
for SRS
  [[b, b], [b, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, b], [b, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[a, b], [b, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  no strict rules

**************************************************
skeleton: (2/1,2)\TileAllAll{2}(8/4,4)\Matrix{\Natural}{3}(6/4,4)\Matrix{\Natural}{4}(4/4,4)\Split[(4/4,4)\TileAllAll{2}(64/64,13)\Weight(0/64,13)[],(0/4,4)[]]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 2.861004774000
  min duration 0.055421020000
  total durat. 6.772243099000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 148}
    , self = 102
    , parent = Nothing
    , duration = 1.304368920000
    , status = Fail
    , start = 2025-09-04 07:31:40.000768868 UTC
    , finish = 2025-09-04 07:31:41.305137788 UTC
    , thread_cap_info = ("ThreadId 159", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 108}
    , self = 142
    , parent = Nothing
    , duration = 1.524615099000
    , status = Fail
    , start = 2025-09-04 07:32:05.137563832 UTC
    , finish = 2025-09-04 07:32:06.662178931 UTC
    , thread_cap_info = ("ThreadId 261", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 116}
    , self = 117
    , parent = Nothing
    , duration = 2.861004774000
    , status = Fail
    , start = 2025-09-04 07:31:44.618848806 UTC
    , finish = 2025-09-04 07:31:47.47985358 UTC
    , thread_cap_info = ("ThreadId 209", 1, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 3.259805486000
  min duration 0.091069256000
  total durat. 6.599665738000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 192
      , num_strict_rules = 128
      , num_top_rules = 0
      , num_weak_rules = 64
      , alphabet_size = 13
      , total_length = 2752}
    , self = 103
    , parent = Nothing
    , duration = 3.248790996000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:40.332416675 UTC
    , finish = 2025-09-04 07:31:43.581207671 UTC
    , thread_cap_info = ("ThreadId 182", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 160
      , num_strict_rules = 96
      , num_top_rules = 0
      , num_weak_rules = 64
      , alphabet_size = 13
      , total_length = 2176}
    , self = 120
    , parent = Nothing
    , duration = 3.259805486000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:46.578554391 UTC
    , finish = 2025-09-04 07:31:49.838359877 UTC
    , thread_cap_info = ("ThreadId 216", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 2.890568120000
  min duration 0.037906411000
  total durat. 7.060842361000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 108}
    , self = 143
    , parent = Nothing
    , duration = 2.118464755000
    , status = Fail
    , start = 2025-09-04 07:32:05.221816426 UTC
    , finish = 2025-09-04 07:32:07.340281181 UTC
    , thread_cap_info = ("ThreadId 263", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 116}
    , self = 118
    , parent = Nothing
    , duration = 2.890568120000
    , status = Fail
    , start = 2025-09-04 07:31:44.637344558 UTC
    , finish = 2025-09-04 07:31:47.527912678 UTC
    , thread_cap_info = ("ThreadId 210", 1, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 6.100499731000
  min duration 0.074713373000
  total durat. 9.517306340000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 192
      , num_strict_rules = 128
      , num_top_rules = 0
      , num_weak_rules = 64
      , alphabet_size = 13
      , total_length = 2752}
    , self = 104
    , parent = Nothing
    , duration = 3.342093236000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:40.337949924 UTC
    , finish = 2025-09-04 07:31:43.68004316 UTC
    , thread_cap_info = ("ThreadId 184", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 160
      , num_strict_rules = 96
      , num_top_rules = 0
      , num_weak_rules = 64
      , alphabet_size = 13
      , total_length = 2176}
    , self = 122
    , parent = Nothing
    , duration = 6.100499731000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:46.599080461 UTC
    , finish = 2025-09-04 07:31:52.699580192 UTC
    , thread_cap_info = ("ThreadId 218", 1, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 9.216591072000
  min duration 9.058244071000
  total durat. 18.274835143000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 116}
    , self = 125
    , parent = Nothing
    , duration = 9.058244071000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:47.560685586 UTC
    , finish = 2025-09-04 07:31:56.618929657 UTC
    , thread_cap_info = ("ThreadId 222", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 1
      , alphabet_size = 2
      , total_length = 31}
    , self = 119
    , parent = Nothing
    , duration = 9.216591072000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:40.05881875 UTC
    , finish = 2025-09-04 07:31:49.275409822 UTC
    , thread_cap_info = ("ThreadId 174", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.660998175000
  min duration 3.660998175000
  total durat. 3.660998175000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 148}
    , self = 107
    , parent = Nothing
    , duration = 3.660998175000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:40.617677069 UTC
    , finish = 2025-09-04 07:31:44.278675244 UTC
    , thread_cap_info = ("ThreadId 189", 1, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 12.043497451000
  min duration 12.008133317000
  total durat. 24.051630768000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 1
      , alphabet_size = 2
      , total_length = 31}
    , self = 121
    , parent = Nothing
    , duration = 12.008133317000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:40.678001773 UTC
    , finish = 2025-09-04 07:31:52.68613509 UTC
    , thread_cap_info = ("ThreadId 190", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 116}
    , self = 133
    , parent = Nothing
    , duration = 12.043497451000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:52.739458331 UTC
    , finish = 2025-09-04 07:32:04.782955782 UTC
    , thread_cap_info = ("ThreadId 230", 1, False)}
Success : "Matrix\n { monotone = Strict\n , domain = Arctic\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 11.457340302000
  min duration 11.457340302000
  total durat. 11.457340302000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Arctic\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 1
      , alphabet_size = 2
      , total_length = 31}
    , self = 126
    , parent = Nothing
    , duration = 11.457340302000
    , status = Success
    , start = 2025-09-04 07:31:52.778560988 UTC
    , finish = 2025-09-04 07:32:04.23590129 UTC
    , thread_cap_info = ("ThreadId 231", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = Arctic\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.676786905000
  min duration 2.676786905000
  total durat. 2.676786905000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Arctic\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 116}
    , self = 146
    , parent = Nothing
    , duration = 2.676786905000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:32:04.863923575 UTC
    , finish = 2025-09-04 07:32:07.54071048 UTC
    , thread_cap_info = ("ThreadId 254", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 2\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 9.088015518000
  min duration 9.088015518000
  total durat. 9.088015518000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 2\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 1
      , alphabet_size = 2
      , total_length = 31}
    , self = 128
    , parent = Nothing
    , duration = 9.088015518000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:55.297538088 UTC
    , finish = 2025-09-04 07:32:04.385553606 UTC
    , thread_cap_info = ("ThreadId 233", 1, False)}
Success : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.106931300000
  min duration 3.106931300000
  total durat. 3.106931300000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 148}
    , self = 105
    , parent = Nothing
    , duration = 3.106931300000
    , status = Success
    , start = 2025-09-04 07:31:41.097505973 UTC
    , finish = 2025-09-04 07:31:44.204437273 UTC
    , thread_cap_info = ("ThreadId 192", 1, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 5.035249534000
  min duration 0.459604765000
  total durat. 5.968841722000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 116}
    , self = 123
    , parent = Nothing
    , duration = 5.035249534000
    , status = Fail
    , start = 2025-09-04 07:31:47.664528556 UTC
    , finish = 2025-09-04 07:31:52.69977809 UTC
    , thread_cap_info = ("ThreadId 223", 1, False)}
Success : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 10.732420079000
  min duration 10.732420079000
  total durat. 10.732420079000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 116}
    , self = 144
    , parent = Nothing
    , duration = 10.732420079000
    , status = Success
    , start = 2025-09-04 07:31:56.720748852 UTC
    , finish = 2025-09-04 07:32:07.453168931 UTC
    , thread_cap_info = ("ThreadId 235", 1, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 5.782188425000
  min duration 5.782188425000
  total durat. 5.782188425000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 1
      , alphabet_size = 2
      , total_length = 31}
    , self = 124
    , parent = Nothing
    , duration = 5.782188425000
    , status = Fail
    , start = 2025-09-04 07:31:49.440588811 UTC
    , finish = 2025-09-04 07:31:55.222777236 UTC
    , thread_cap_info = ("ThreadId 226", 1, False)}
**************************************************
F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
F                  = 8 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
F                  = 148} , self = 102 , parent = Nothing , duration = 1.304368920000 , status
F                  = Fail , start = 2025-09-04 07:31:40.000768868 UTC , finish = 2025-09-04
F                  07:31:41.305137788 UTC , thread_cap_info = ("ThreadId 159", 1, False)}
F                  
| F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| F                = 8 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| F                = 148} , self = 100 , parent = Nothing , duration = 0.644376897000 , status
| F                = Fail , start = 2025-09-04 07:31:40.000772349 UTC , finish = 2025-09-04
| F                07:31:40.645149246 UTC , thread_cap_info = ("ThreadId 161", 1, False)}
| F                
| | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F              = 8 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | F              = 148} , self = 97 , parent = Nothing , duration = 0.360100741000 , status
| | F              = Fail , start = 2025-09-04 07:31:40.000815836 UTC , finish = 2025-09-04
| | F              07:31:40.360916577 UTC , thread_cap_info = ("ThreadId 165", 3, False)}
| | F              
| | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | F            = 8 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | F            = 148} , self = 95 , parent = Nothing , duration = 0.198626843000 , status
| | | F            = Fail , start = 2025-09-04 07:31:40.000817198 UTC , finish = 2025-09-04
| | | F            07:31:40.199444041 UTC , thread_cap_info = ("ThreadId 167", 3, False)}
| | | F            
| | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | F          = 8 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | F          = 148} , self = 98 , parent = Nothing , duration = 0.320629203000 , status
| | | | F          = Fail , start = 2025-09-04 07:31:40.056817299 UTC , finish = 2025-09-04
| | | | F          07:31:40.377446502 UTC , thread_cap_info = ("ThreadId 170", 0, False)}
| | | | F          
| | | | | E        Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | E        , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| | | | | E        = 2 , total_length = 31} , self = 119 , parent = Nothing , duration = 9.216591072000
| | | | | E        , status = Except "<<timeout>>" , start = 2025-09-04 07:31:40.05881875
| | | | | E        UTC , finish = 2025-09-04 07:31:49.275409822 UTC , thread_cap_info = ("ThreadId
| | | | | E        174", 1, False)}
| | | | | E        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | F      = 8 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | F      = 148} , self = 101 , parent = Nothing , duration = 0.672648372000 , status
| | | | | | F      = Fail , start = 2025-09-04 07:31:40.076733058 UTC , finish = 2025-09-04
| | | | | | F      07:31:40.74938143 UTC , thread_cap_info = ("ThreadId 171", 0, False)}
| | | | | | F      
| | | | | | | F    Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | | F    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | F    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | F    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | | | F    , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| | | | | | | F    = 2 , total_length = 31} , self = 99 , parent = Nothing , duration = 0.473987423000
| | | | | | | F    , status = Fail , start = 2025-09-04 07:31:40.076748135 UTC , finish =
| | | | | | | F    2025-09-04 07:31:40.550735558 UTC , thread_cap_info = ("ThreadId 175",
| | | | | | | F    1, False)}
| | | | | | | F    
| | | F | | | |    
| | | E | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | E | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 192 , num_strict_rules
| | | E | | | |    = 128 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 13 ,
| | | E | | | |    total_length = 2752} , self = 103 , parent = Nothing , duration = 3.248790996000
| | | E | | | |    , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:40.332416675
| | | E | | | |    UTC , finish = 2025-09-04 07:31:43.581207671 UTC , thread_cap_info = ("ThreadId
| | | E | | | |    182", 1, False)}
| | | E | | | |    
| | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 192 , num_strict_rules
| | | | | | | | E  = 128 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 13 ,
| | | | | | | | E  total_length = 2752} , self = 104 , parent = Nothing , duration = 3.342093236000
| | | | | | | | E  , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:40.337949924
| | | | | | | | E  UTC , finish = 2025-09-04 07:31:43.68004316 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E  184", 1, False)}
| | | | | | | | E  
| | F | | | | | |  
| |   | F | | | |  
| |   |   | | F |  
| | E |   | |   |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | E |   | |   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E |   | |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E |   | |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |   | |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |   | |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | E |   | |   |  , num_strict_rules = 8 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | E |   | |   |  = 4 , total_length = 148} , self = 107 , parent = Nothing , duration =
| | E |   | |   |  3.660998175000 , status = Except "AsyncCancelled" , start = 2025-09-04
| | E |   | |   |  07:31:40.617677069 UTC , finish = 2025-09-04 07:31:44.278675244 UTC , thread_cap_info
| | E |   | |   |  = ("ThreadId 189", 1, False)}
| | E |   | |   |  
| F | |   | |   |  
| E | |   | |   |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| E | |   | |   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | |   | |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | |   | |   |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | |   | |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | |   | |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| E | |   | |   |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| E | |   | |   |  = 2 , total_length = 31} , self = 121 , parent = Nothing , duration = 12.008133317000
| E | |   | |   |  , status = Except "<<timeout>>" , start = 2025-09-04 07:31:40.678001773
| E | |   | |   |  UTC , finish = 2025-09-04 07:31:52.68613509 UTC , thread_cap_info = ("ThreadId
| E | |   | |   |  190", 1, False)}
| E | |   | |   |  
| | | |   | F   |  
| | | | S |     |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | S |     |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | S |     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | S |     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S |     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S |     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | | S |     |  , num_strict_rules = 8 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | | | S |     |  = 4 , total_length = 148} , self = 105 , parent = Nothing , duration =
| | | | S |     |  3.106931300000 , status = Success , start = 2025-09-04 07:31:41.097505973
| | | | S |     |  UTC , finish = 2025-09-04 07:31:44.204437273 UTC , thread_cap_info = ("ThreadId
| | | | S |     |  192", 1, False)}
| | | | S |     |  
F | | | | |     |  
  | | E | |     |  
  | |   | |     E  
  | |   S |        
  | E     |        
F |       |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |       |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |       |        = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
F |       |        = 6 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
F |       |        = 116} , self = 117 , parent = Nothing , duration = 2.861004774000 , status
F |       |        = Fail , start = 2025-09-04 07:31:44.618848806 UTC , finish = 2025-09-04
F |       |        07:31:47.47985358 UTC , thread_cap_info = ("ThreadId 209", 1, False)}
F |       |        
| | F     |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F     |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F     |        = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | F     |        = 6 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | F     |        = 116} , self = 118 , parent = Nothing , duration = 2.890568120000 , status
| | F     |        = Fail , start = 2025-09-04 07:31:44.637344558 UTC , finish = 2025-09-04
| | F     |        07:31:47.527912678 UTC , thread_cap_info = ("ThreadId 210", 1, False)}
| | F     |        
| | | E   |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | E   |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E   |        = False\n , verbose = False}" , input_size = Size { num_rules = 160 , num_strict_rules
| | | E   |        = 96 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 13 , total_length
| | | E   |        = 2176} , self = 120 , parent = Nothing , duration = 3.259805486000 , status
| | | E   |        = Except "AsyncCancelled" , start = 2025-09-04 07:31:46.578554391 UTC ,
| | | E   |        finish = 2025-09-04 07:31:49.838359877 UTC , thread_cap_info = ("ThreadId
| | | E   |        216", 1, False)}
| | | E   |        
| | | | E |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E |        = False\n , verbose = False}" , input_size = Size { num_rules = 160 , num_strict_rules
| | | | E |        = 96 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 13 , total_length
| | | | E |        = 2176} , self = 122 , parent = Nothing , duration = 6.100499731000 , status
| | | | E |        = Except "AsyncCancelled" , start = 2025-09-04 07:31:46.599080461 UTC ,
| | | | E |        finish = 2025-09-04 07:31:52.699580192 UTC , thread_cap_info = ("ThreadId
| | | | E |        218", 1, False)}
| | | | E |        
F | | | | |        
  | F | | |        
E |   | | |        Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E |   | | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E |   | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E |   | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E |   | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E |   | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
E |   | | |        , num_strict_rules = 6 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
E |   | | |        = 4 , total_length = 116} , self = 125 , parent = Nothing , duration =
E |   | | |        9.058244071000 , status = Except "<<timeout>>" , start = 2025-09-04 07:31:47.560685586
E |   | | |        UTC , finish = 2025-09-04 07:31:56.618929657 UTC , thread_cap_info = ("ThreadId
E |   | | |        222", 1, False)}
E |   | | |        
| | F | | |        Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | F | | |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | F | | |        , num_strict_rules = 6 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | F | | |        = 4 , total_length = 116} , self = 123 , parent = Nothing , duration =
| | F | | |        5.035249534000 , status = Fail , start = 2025-09-04 07:31:47.664528556
| | F | | |        UTC , finish = 2025-09-04 07:31:52.69977809 UTC , thread_cap_info = ("ThreadId
| | F | | |        223", 1, False)}
| | F | | |        
| | | | | E        
| | | | | F        Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | F        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | F        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | F        , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | F        , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| | | | | F        = 2 , total_length = 31} , self = 124 , parent = Nothing , duration = 5.782188425000
| | | | | F        , status = Fail , start = 2025-09-04 07:31:49.440588811 UTC , finish =
| | | | | F        2025-09-04 07:31:55.222777236 UTC , thread_cap_info = ("ThreadId 226",
| | | | | F        1, False)}
| | | | | F        
| | | E | |        
| E |   | |        
|   |   E |        
|   F     |        
| E       |        Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| E       |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E       |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E       |        , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E       |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E       |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| E       |        , num_strict_rules = 6 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| E       |        = 4 , total_length = 116} , self = 133 , parent = Nothing , duration =
| E       |        12.043497451000 , status = Except "<<timeout>>" , start = 2025-09-04 07:31:52.739458331
| E       |        UTC , finish = 2025-09-04 07:32:04.782955782 UTC , thread_cap_info = ("ThreadId
| E       |        230", 1, False)}
| E       |        
| | S     |        Info { what = "Matrix\n { monotone = Strict\n , domain = Arctic\n , method
| | S     |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | S     |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S     |        , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S     |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S     |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | S     |        , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| | S     |        = 2 , total_length = 31} , self = 126 , parent = Nothing , duration = 11.457340302000
| | S     |        , status = Success , start = 2025-09-04 07:31:52.778560988 UTC , finish
| | S     |        = 2025-09-04 07:32:04.23590129 UTC , thread_cap_info = ("ThreadId 231",
| | S     |        1, False)}
| | S     |        
| | |     F        
| | | E            Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | E            = Direct\n , shape = Cornered\n , bits = 2\n , compress = True\n , remove
| | | E            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E            , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | E            , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| | | E            = 2 , total_length = 31} , self = 128 , parent = Nothing , duration = 9.088015518000
| | | E            , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:55.297538088
| | | E            UTC , finish = 2025-09-04 07:32:04.385553606 UTC , thread_cap_info = ("ThreadId
| | | E            233", 1, False)}
| | | E            
E | | |            
S | | |            Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
S | | |            = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
S | | |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
S | | |            , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S | | |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S | | |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
S | | |            , num_strict_rules = 6 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
S | | |            = 4 , total_length = 116} , self = 144 , parent = Nothing , duration =
S | | |            10.732420079000 , status = Success , start = 2025-09-04 07:31:56.720748852
S | | |            UTC , finish = 2025-09-04 07:32:07.453168931 UTC , thread_cap_info = ("ThreadId
S | | |            235", 1, False)}
S | | |            
| | S |            
| |   E            
| | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
| | F              = 1 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size = 2 , total_length
| | F              = 23} , self = 138 , parent = Nothing , duration = 0.286650375000 , status
| | F              = Fail , start = 2025-09-04 07:32:04.739519626 UTC , finish = 2025-09-04
| | F              07:32:05.026170001 UTC , thread_cap_info = ("ThreadId 249", 1, False)}
| | F              
| | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
| | | F            = 1 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size = 2 , total_length
| | | F            = 23} , self = 140 , parent = Nothing , duration = 0.426327831000 , status
| | | F            = Fail , start = 2025-09-04 07:32:04.760721557 UTC , finish = 2025-09-04
| | | F            07:32:05.187049388 UTC , thread_cap_info = ("ThreadId 250", 1, False)}
| | | F            
| E | |            
| E | |            Info { what = "Matrix\n { monotone = Strict\n , domain = Arctic\n , method
| E | |            = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E | |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | |            , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| E | |            , num_strict_rules = 6 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| E | |            = 4 , total_length = 116} , self = 146 , parent = Nothing , duration =
| E | |            2.676786905000 , status = Except "AsyncCancelled" , start = 2025-09-04
| E | |            07:32:04.863923575 UTC , finish = 2025-09-04 07:32:07.54071048 UTC , thread_cap_info
| E | |            = ("ThreadId 254", 1, False)}
| E | |            
| | F |            
| | F |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |            = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F |            = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | F |            = 108} , self = 142 , parent = Nothing , duration = 1.524615099000 , status
| | F |            = Fail , start = 2025-09-04 07:32:05.137563832 UTC , finish = 2025-09-04
| | F |            07:32:06.662178931 UTC , thread_cap_info = ("ThreadId 261", 1, False)}
| | F |            
| | | F            
| | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | F            = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | F            = 108} , self = 143 , parent = Nothing , duration = 2.118464755000 , status
| | | F            = Fail , start = 2025-09-04 07:32:05.221816426 UTC , finish = 2025-09-04
| | | F            07:32:07.340281181 UTC , thread_cap_info = ("ThreadId 263", 1, False)}
| | | F            
| | | | F          Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | F          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 2
| | | | F          , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| | | | F          = 2 , total_length = 23} , self = 141 , parent = Nothing , duration = 0.459604765000
| | | | F          , status = Fail , start = 2025-09-04 07:32:05.356738149 UTC , finish =
| | | | F          2025-09-04 07:32:05.816342914 UTC , thread_cap_info = ("ThreadId 265",
| | | | F          1, False)}
| | | | F          
| | | | F          
| | F |            
| |   F            
S |                
  E                
