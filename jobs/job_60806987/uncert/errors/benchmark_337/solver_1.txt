[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 666 length 3271
last 794 length 4390
CNF 794 vars 4390 clauses
CNF 666 vars 3271 clauses
last 643 length 2877
last 666 length 2922
CNF 666 vars 2922 clauses
CNF 643 vars 2877 clauses
last 857 length 4608
last 852 length 4025
CNF 857 vars 4608 clauses
last 1843 length 9203
last 1739 length 10256
last 1709 length 8684
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1975, clauses: 7857
last 1633 length 9865
CNF 852 vars 4025 clauses
last 2062 length 9605
last 2350 length 10303
last 852 length 4025
last 857 length 4608
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13600, clauses: 56772
CNF 1843 vars 9203 clauses
CNF 1709 vars 8684 clauses
CNF 1739 vars 10256 clauses
last 1975 length 7857
CNF 2062 vars 9605 clauses
CNF 2350 vars 10303 clauses
CNF 1633 vars 9865 clauses
CNF 852 vars 4025 clauses
CNF 857 vars 4608 clauses
last 13600 length 56772
CNF 1975 vars 7857 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2254, clauses: 8715
CNF 13600 vars 56772 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1975, clauses: 7857, status: Unsatisfied, time: 0.491938683s
last 2254 length 8715
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13600, clauses: 56772, status: Satisfied, time: 0.509672917s
CNF 2254 vars 8715 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15178, clauses: 62879
last 15178 length 62879
CNF 15178 vars 62879 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2254, clauses: 8715, status: Satisfied, time: 0.361201138s
last 512 length 2350
last 535 length 2388
last 2062 length 9605
last 2350 length 10303
CNF 535 vars 2388 clauses
CNF 2350 vars 10303 clauses
CNF 512 vars 2350 clauses
CNF 2062 vars 9605 clauses
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 8 weak rules on 4 letters       weights
SRS with 1 strict rules and 6 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 4 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, a] -> [] {- Input 0 -}
  [a, b] ->= [] {- Input 1 -}
  [] ->= [a, a, b, a] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a], [a, b], [b, a]] ->= [[a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, b], [b, b]] ->= [[a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a], [a, b], [b, a]] ->= [[b, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, b]] ->= [[b, b]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 1/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a], [a, b], [b, a]] ->= [[a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, a]] ->= [[b, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, b]] ->= [[b, b]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 0 0 \
                | 0 6 4 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 4 0 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 1 3 \
                | 0 0 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, a]] ->= [[a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, a]] ->= [[b, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, b]] ->= [[b, b]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
reason
  no strict rules

**************************************************
skeleton: (1/2,2)\TileAllAll{2}(4/8,4)\Weight(1/6,4)\Matrix{\Natural}{3}(0/6,4)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1612, clauses: 6374
last 1612 length 6374
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 1612 vars 6374 clauses

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.830901276000
  min duration 0.037002741000
  total durat. 4.234375590000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.850259805000
  min duration 0.027719999000
  total durat. 3.994091209000
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.354376894000
  min duration 1.354376894000
  total durat. 1.354376894000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 2
      , total_length = 32}
    , self = 102
    , parent = Nothing
    , duration = 1.354376894000
    , status = Success
    , start = 2025-09-04 08:23:49.899558851 UTC
    , finish = 2025-09-04 08:23:51.253935745 UTC
    , thread_cap_info = ("ThreadId 150", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.263593446000
  min duration 1.263593446000
  total durat. 1.263593446000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 36}
    , self = 116
    , parent = Nothing
    , duration = 1.263593446000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:23:50.619820768 UTC
    , finish = 2025-09-04 08:23:51.883414214 UTC
    , thread_cap_info = ("ThreadId 184", 2, False)}
Success : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.210342934000
  min duration 1.210342934000
  total durat. 1.210342934000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 36}
    , self = 114
    , parent = Nothing
    , duration = 1.210342934000
    , status = Success
    , start = 2025-09-04 08:23:50.672997183 UTC
    , finish = 2025-09-04 08:23:51.883340117 UTC
    , thread_cap_info = ("ThreadId 186", 2, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.195500058000
  min duration 1.195500058000
  total durat. 1.195500058000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 2
      , total_length = 32}
    , self = 101
    , parent = Nothing
    , duration = 1.195500058000
    , status = Fail
    , start = 2025-09-04 08:23:49.934029749 UTC
    , finish = 2025-09-04 08:23:51.129529807 UTC
    , thread_cap_info = ("ThreadId 155", 1, False)}
**************************************************
E                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                      = False}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
E                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
E                      = 6} , self = 70 , parent = Nothing , duration = 0.147223827000 , status
E                      = Except "AsyncCancelled" , start = 2025-09-04 08:23:49.71661246 UTC ,
E                      finish = 2025-09-04 08:23:49.863836287 UTC , thread_cap_info = ("ThreadId
E                      20", 1, False)}
E                      
| E                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E                    = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| E                    = 6 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| E                    = 30} , self = 65 , parent = Nothing , duration = 0.129408973000 , status
| E                    = Except "AsyncCancelled" , start = 2025-09-04 08:23:49.717718013 UTC ,
| E                    finish = 2025-09-04 08:23:49.847126986 UTC , thread_cap_info = ("ThreadId
| E                    63", 3, False)}
| E                    
| | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | F                  = 15 , num_top_rules = 15 , num_weak_rules = 5 , alphabet_size = 6 , total_length
| | F                  = 86} , self = 94 , parent = Nothing , duration = 0.830901276000 , status
| | F                  = Fail , start = 2025-09-04 08:23:49.750500498 UTC , finish = 2025-09-04
| | F                  08:23:50.581401774 UTC , thread_cap_info = ("ThreadId 102", 2, False)}
| | F                  
| | | F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | F                , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | F                = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 1 ,
| | | F                num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 2 , total_length
| | | F                = 10} , self = 80 , parent = Nothing , duration = 0.121143283000 , status
| | | F                = Fail , start = 2025-09-04 08:23:49.769522091 UTC , finish = 2025-09-04
| | | F                08:23:49.890665374 UTC , thread_cap_info = ("ThreadId 100", 1, False)}
| | | F                
| | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | F              = 15 , num_top_rules = 15 , num_weak_rules = 5 , alphabet_size = 6 , total_length
| | | | F              = 86} , self = 99 , parent = Nothing , duration = 0.850259805000 , status
| | | | F              = Fail , start = 2025-09-04 08:23:49.769532487 UTC , finish = 2025-09-04
| | | | F              08:23:50.619792292 UTC , thread_cap_info = ("ThreadId 103", 2, False)}
| | | | F              
| E | | |              
E   | | |              
F   | | |              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F   | | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F   | | |              = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
F   | | |              = 16 , num_top_rules = 16 , num_weak_rules = 6 , alphabet_size = 7 , total_length
F   | | |              = 94} , self = 93 , parent = Nothing , duration = 0.704593229000 , status
F   | | |              = Fail , start = 2025-09-04 08:23:49.871135423 UTC , finish = 2025-09-04
F   | | |              08:23:50.575728652 UTC , thread_cap_info = ("ThreadId 123", 2, False)}
F   | | |              
| F | | |              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | |              = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| F | | |              = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| F | | |              = 36} , self = 92 , parent = Nothing , duration = 0.586873249000 , status
| F | | |              = Fail , start = 2025-09-04 08:23:49.884777441 UTC , finish = 2025-09-04
| F | | |              08:23:50.47165069 UTC , thread_cap_info = ("ThreadId 140", 1, False)}
| F | | |              
| | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | F            = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | F            = 36} , self = 86 , parent = Nothing , duration = 0.128153524000 , status
| | | | | F            = Fail , start = 2025-09-04 08:23:49.884785715 UTC , finish = 2025-09-04
| | | | | F            08:23:50.012939239 UTC , thread_cap_info = ("ThreadId 142", 1, False)}
| | | | | F            
| | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | | | | F          = 16 , num_top_rules = 16 , num_weak_rules = 6 , alphabet_size = 7 , total_length
| | | | | | F          = 94} , self = 95 , parent = Nothing , duration = 0.703074452000 , status
| | | | | | F          = Fail , start = 2025-09-04 08:23:49.890022699 UTC , finish = 2025-09-04
| | | | | | F          08:23:50.593097151 UTC , thread_cap_info = ("ThreadId 124", 2, False)}
| | | | | | F          
| | | F | | |          
| | | S | | |          Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | S | | |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S | | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S | | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S | | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S | | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | S | | |          , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | | S | | |          = 2 , total_length = 32} , self = 102 , parent = Nothing , duration = 1.354376894000
| | | S | | |          , status = Success , start = 2025-09-04 08:23:49.899558851 UTC , finish
| | | S | | |          = 2025-09-04 08:23:51.253935745 UTC , thread_cap_info = ("ThreadId 150",
| | | S | | |          1, False)}
| | | S | | |          
| | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | F        = 2 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 4 , total_length
| | | | | | | F        = 100} , self = 97 , parent = Nothing , duration = 0.703922788000 , status
| | | | | | | F        = Fail , start = 2025-09-04 08:23:49.909561083 UTC , finish = 2025-09-04
| | | | | | | F        08:23:50.613483871 UTC , thread_cap_info = ("ThreadId 151", 3, False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | | F      = 2 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 4 , total_length
| | | | | | | | F      = 100} , self = 96 , parent = Nothing , duration = 0.667650432000 , status
| | | | | | | | F      = Fail , start = 2025-09-04 08:23:49.934013291 UTC , finish = 2025-09-04
| | | | | | | | F      08:23:50.601663723 UTC , thread_cap_info = ("ThreadId 153", 3, False)}
| | | | | | | | F      
| | | | | | | | | F    Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | | | | F    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | | | F    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | | | F    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | F    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | F    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | | | | F    , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | | | | | | | | F    = 2 , total_length = 32} , self = 101 , parent = Nothing , duration = 1.195500058000
| | | | | | | | | F    , status = Fail , start = 2025-09-04 08:23:49.934029749 UTC , finish =
| | | | | | | | | F    2025-09-04 08:23:51.129529807 UTC , thread_cap_info = ("ThreadId 155",
| | | | | | | | | F    1, False)}
| | | | | | | | | F    
| | | | | F | | | |    
| | | | | F | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | F | | | |    = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | F | | | |    = 36} , self = 98 , parent = Nothing , duration = 0.589864594000 , status
| | | | | F | | | |    = Fail , start = 2025-09-04 08:23:50.029889198 UTC , finish = 2025-09-04
| | | | | F | | | |    08:23:50.619753792 UTC , thread_cap_info = ("ThreadId 163", 0, False)}
| | | | | F | | | |    
| | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | | | | F  = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | | | F  = 36} , self = 100 , parent = Nothing , duration = 0.621950556000 , status
| | | | | | | | | | F  = Fail , start = 2025-09-04 08:23:50.038879001 UTC , finish = 2025-09-04
| | | | | | | | | | F  08:23:50.660829557 UTC , thread_cap_info = ("ThreadId 164", 2, False)}
| | | | | | | | | | F  
| F | | | | | | | | |  
F   | | | | | | | | |  
    F | | | | | | | |  
      | | | F | | | |  
      | | |   | F | |  
      | | |   F   | |  
      | | F       | |  
      | F         | |  
E     |           | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E     |           | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E     |           | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E     |           | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E     |           | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E     |           | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
E     |           | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
E     |           | |  = 4 , total_length = 36} , self = 116 , parent = Nothing , duration = 1.263593446000
E     |           | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:23:50.619820768
E     |           | |  UTC , finish = 2025-09-04 08:23:51.883414214 UTC , thread_cap_info = ("ThreadId
E     |           | |  184", 2, False)}
E     |           | |  
|     |           | F  
| S   |           |    Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| S   |           |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S   |           |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| S   |           |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S   |           |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S   |           |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| S   |           |    , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| S   |           |    = 4 , total_length = 36} , self = 114 , parent = Nothing , duration = 1.210342934000
| S   |           |    , status = Success , start = 2025-09-04 08:23:50.672997183 UTC , finish
| S   |           |    = 2025-09-04 08:23:51.883340117 UTC , thread_cap_info = ("ThreadId 186",
| S   |           |    2, False)}
| S   |           |    
| |   |           F    
| | E |                Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | E |                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E |                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E |                , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | E |                , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | E |                = 2 , total_length = 32} , self = 104 , parent = Nothing , duration = 0.160044806000
| | E |                , status = Except "AsyncCancelled" , start = 2025-09-04 08:23:51.169534192
| | E |                UTC , finish = 2025-09-04 08:23:51.329578998 UTC , thread_cap_info = ("ThreadId
| | E |                188", 1, False)}
| | E |                
| | | S                
| | E                  
| | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | F                  = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 2 , total_length
| | F                  = 26} , self = 120 , parent = Nothing , duration = 0.676889471000 , status
| | F                  = Fail , start = 2025-09-04 08:23:51.329929421 UTC , finish = 2025-09-04
| | F                  08:23:52.006818892 UTC , thread_cap_info = ("ThreadId 203", 1, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | F                = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 2 , total_length
| | | F                = 26} , self = 118 , parent = Nothing , duration = 0.577097404000 , status
| | | F                = Fail , start = 2025-09-04 08:23:51.342304395 UTC , finish = 2025-09-04
| | | F                08:23:51.919401799 UTC , thread_cap_info = ("ThreadId 202", 1, False)}
| | | F                
| | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | F              = 2 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 4 , total_length
| | | | F              = 100} , self = 119 , parent = Nothing , duration = 0.204120309000 , status
| | | | F              = Fail , start = 2025-09-04 08:23:51.768295152 UTC , finish = 2025-09-04
| | | | F              08:23:51.972415461 UTC , thread_cap_info = ("ThreadId 208", 1, False)}
| | | | F              
| | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | F            = 2 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 4 , total_length
| | | | | F            = 100} , self = 122 , parent = Nothing , duration = 0.238560900000 , status
| | | | | F            = Fail , start = 2025-09-04 08:23:51.774045099 UTC , finish = 2025-09-04
| | | | | F            08:23:52.012605999 UTC , thread_cap_info = ("ThreadId 210", 1, False)}
| | | | | F            
| S | | | |            
E   | | | |            
    | F | |            
    |   F |            
    F     |            
          F            
