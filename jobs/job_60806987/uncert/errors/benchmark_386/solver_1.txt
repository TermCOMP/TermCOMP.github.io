[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 378 length 1829
CNF 378 vars 1829 clauses
last 356 length 1749
CNF 356 vars 1749 clauses
last 757 length 3734
CNF 757 vars 3734 clauses
last 707 length 3446
CNF 707 vars 3446 clauses
last 1125 length 6829
CNF 1125 vars 6829 clauses
last 1035 length 5363
CNF 1035 vars 5363 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3166, clauses: 11941
last 3166 length 11941
CNF 3166 vars 11941 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3166, clauses: 11941, status: Unsatisfied, time: 0.038306609s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6676, clauses: 27681
last 6676 length 27681
last 442 length 1957
CNF 6676 vars 27681 clauses
last 506 length 2425
CNF 442 vars 1957 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3364, clauses: 12451
last 568 length 2603
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6676, clauses: 27681, status: Unsatisfied, time: 0.032526032s
last 601 length 2762
CNF 506 vars 2425 clauses
last 506 length 2425
last 601 length 2762
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7553, clauses: 31356
last 2178 length 11323
last 2336 length 10737
last 7257 length 36309
last 9023 length 43276
last 3364 length 12451
CNF 568 vars 2603 clauses
CNF 601 vars 2762 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11080, clauses: 46161
CNF 506 vars 2425 clauses
CNF 601 vars 2762 clauses
last 7553 length 31356
CNF 2178 vars 11323 clauses
CNF 2336 vars 10737 clauses
CNF 7257 vars 36309 clauses
CNF 3364 vars 12451 clauses
CNF 9023 vars 43276 clauses
last 11080 length 46161
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15178, clauses: 62879
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1711, clauses: 6746
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2255, clauses: 8641
CNF 7553 vars 31356 clauses
last 15178 length 62879
last 2255 length 8641
last 1711 length 6746
CNF 1711 vars 6746 clauses
CNF 2255 vars 8641 clauses
CNF 11080 vars 46161 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3364, clauses: 12451, status: Unsatisfied, time: 0.403134015s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7553, clauses: 31356, status: Unsatisfied, time: 0.358171032s
CNF 15178 vars 62879 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1711, clauses: 6746, status: Unsatisfied, time: 0.050221963s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2255, clauses: 8641, status: Satisfied, time: 0.054197467s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11080, clauses: 46161, status: Satisfied, time: 0.172814152s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15178, clauses: 62879, status: Satisfied, time: 0.127624693s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 8 weak rules on 4 letters       weights
SRS with 1 strict rules and 6 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, a] -> [] {- Input 0 -}
  [] ->= [a] {- Input 1 -}
  [] ->= [a, a, b, a] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [[a, a], [a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [[a, a], [a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [[b, a], [a, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [[b, a], [a, b]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 1/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [[a, a], [a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [[a, a], [a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [[b, a], [a, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 1 1 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 4 7 \
                | 0 0 4 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[a, a]] ->= [[a, a], [a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [[a, a], [a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [[b, a], [a, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
reason
  no strict rules

**************************************************
skeleton: (1/2,2)\TileAllAll{2}(4/8,4)\Weight(1/6,4)\Matrix{\Natural}{3}(0/6,3)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.638980700000
  min duration 0.021385891000
  total durat. 2.731722467000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.605109120000
  min duration 0.010129687000
  total durat. 2.537550113000
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.603823553000
  min duration 0.463723055000
  total durat. 1.067546608000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.813165716000
  min duration 0.407733171000
  total durat. 1.220898887000
**************************************************
F                          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
F                          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
F                          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
F                          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F                          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F                          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
F                          , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size
F                          = 4 , total_length = 58} , self = 91 , parent = Nothing , duration = 0.407733171000
F                          , status = Fail , start = 2025-09-04 08:27:27.54171459 UTC , finish = 2025-09-04
F                          08:27:27.949447761 UTC , thread_cap_info = ("ThreadId 114", 0, False)}
F                          
| F                        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F                        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F                        = 14 , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 4
| F                        , alphabet_size = 4 , total_length = 58} , self = 101 , parent = Nothing
| F                        , duration = 0.811700647000 , status = Fail , start = 2025-09-04 08:27:27.560305602
| F                        UTC , finish = 2025-09-04 08:27:28.372006249 UTC , thread_cap_info = ("ThreadId
| F                        117", 3, False)}
| F                        
| | F                      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F                      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F                      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F                      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F                      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F                      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | F                      , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size
| | F                      = 4 , total_length = 58} , self = 102 , parent = Nothing , duration = 0.813165716000
| | F                      , status = Fail , start = 2025-09-04 08:27:27.560318208 UTC , finish =
| | F                      2025-09-04 08:27:28.373483924 UTC , thread_cap_info = ("ThreadId 118",
| | F                      3, False)}
| | F                      
| | | F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | F                    = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 2 , total_length
| | | F                    = 30} , self = 93 , parent = Nothing , duration = 0.558867476000 , status
| | | F                    = Fail , start = 2025-09-04 08:27:27.623044915 UTC , finish = 2025-09-04
| | | F                    08:27:28.181912391 UTC , thread_cap_info = ("ThreadId 141", 2, False)}
| | | F                    
| | | | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | F                  = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 2 , total_length
| | | | F                  = 30} , self = 90 , parent = Nothing , duration = 0.183948682000 , status
| | | | F                  = Fail , start = 2025-09-04 08:27:27.629432995 UTC , finish = 2025-09-04
| | | | F                  08:27:27.813381677 UTC , thread_cap_info = ("ThreadId 144", 2, False)}
| | | | F                  
| | | | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | F                = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | F                = 33} , self = 94 , parent = Nothing , duration = 0.571469155000 , status
| | | | | F                = Fail , start = 2025-09-04 08:27:27.634991791 UTC , finish = 2025-09-04
| | | | | F                08:27:28.206460946 UTC , thread_cap_info = ("ThreadId 146", 2, False)}
| | | | | F                
| | | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | F              = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | F              = 33} , self = 92 , parent = Nothing , duration = 0.329255172000 , status
| | | | | | F              = Fail , start = 2025-09-04 08:27:27.639875321 UTC , finish = 2025-09-04
| | | | | | F              08:27:27.969130493 UTC , thread_cap_info = ("ThreadId 145", 2, False)}
| | | | | | F              
| | | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | F            = 2 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 4 , total_length
| | | | | | | F            = 94} , self = 98 , parent = Nothing , duration = 0.602269932000 , status
| | | | | | | F            = Fail , start = 2025-09-04 08:27:27.665544913 UTC , finish = 2025-09-04
| | | | | | | F            08:27:28.267814845 UTC , thread_cap_info = ("ThreadId 160", 0, False)}
| | | | | | | F            
| | | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | | F          = 2 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 4 , total_length
| | | | | | | | F          = 94} , self = 97 , parent = Nothing , duration = 0.580164453000 , status
| | | | | | | | F          = Fail , start = 2025-09-04 08:27:27.668580565 UTC , finish = 2025-09-04
| | | | | | | | F          08:27:28.248745018 UTC , thread_cap_info = ("ThreadId 163", 0, False)}
| | | | | | | | F          
| | | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 65 , num_strict_rules
| | | | | | | | | F        = 1 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 13 , total_length
| | | | | | | | | F        = 424} , self = 100 , parent = Nothing , duration = 0.638980700000 , status
| | | | | | | | | F        = Fail , start = 2025-09-04 08:27:27.669191581 UTC , finish = 2025-09-04
| | | | | | | | | F        08:27:28.308172281 UTC , thread_cap_info = ("ThreadId 168", 2, False)}
| | | | | | | | | F        
| | | | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | | | | F      = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | | | F      = 33} , self = 95 , parent = Nothing , duration = 0.541020004000 , status
| | | | | | | | | | F      = Fail , start = 2025-09-04 08:27:27.688571166 UTC , finish = 2025-09-04
| | | | | | | | | | F      08:27:28.22959117 UTC , thread_cap_info = ("ThreadId 153", 1, False)}
| | | | | | | | | | F      
| | | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 65 , num_strict_rules
| | | | | | | | | | | F    = 1 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 13 , total_length
| | | | | | | | | | | F    = 424} , self = 99 , parent = Nothing , duration = 0.605109120000 , status
| | | | | | | | | | | F    = Fail , start = 2025-09-04 08:27:27.688576409 UTC , finish = 2025-09-04
| | | | | | | | | | | F    08:27:28.293685529 UTC , thread_cap_info = ("ThreadId 170", 2, False)}
| | | | | | | | | | | F    
| | | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | | | | | | F  = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | | | | | F  = 33} , self = 96 , parent = Nothing , duration = 0.540082585000 , status
| | | | | | | | | | | | F  = Fail , start = 2025-09-04 08:27:27.694356318 UTC , finish = 2025-09-04
| | | | | | | | | | | | F  08:27:28.234438903 UTC , thread_cap_info = ("ThreadId 155", 1, False)}
| | | | | | | | | | | | F  
| | | | F | | | | | | | |  
| | | | S | | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | S | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | S | | | | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | | | S | | | | | | | |  = 2 , total_length = 30} , self = 106 , parent = Nothing , duration = 0.603823553000
| | | | S | | | | | | | |  , status = Success , start = 2025-09-04 08:27:27.828605902 UTC , finish
| | | | S | | | | | | | |  = 2025-09-04 08:27:28.432429455 UTC , thread_cap_info = ("ThreadId 172",
| | | | S | | | | | | | |  2, False)}
| | | | S | | | | | | | |  
F | | | | | | | | | | | |  
  | | | | | F | | | | | |  
S | | | | |   | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
S | | | | |   | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
S | | | | |   | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S | | | | |   | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S | | | | |   | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S | | | | |   | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
S | | | | |   | | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
S | | | | |   | | | | | |  = 4 , total_length = 33} , self = 108 , parent = Nothing , duration = 0.463723055000
S | | | | |   | | | | | |  , status = Success , start = 2025-09-04 08:27:27.969162828 UTC , finish
S | | | | |   | | | | | |  = 2025-09-04 08:27:28.432885883 UTC , thread_cap_info = ("ThreadId 175",
S | | | | |   | | | | | |  2, False)}
S | | | | |   | | | | | |  
| | | F | |   | | | | | |  
| | | F | |   | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | F | |   | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F | |   | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F | |   | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F | |   | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F | |   | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | F | |   | | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | | F | |   | | | | | |  = 2 , total_length = 30} , self = 103 , parent = Nothing , duration = 0.195244079000
| | | F | |   | | | | | |  , status = Fail , start = 2025-09-04 08:27:28.193367514 UTC , finish =
| | | F | |   | | | | | |  2025-09-04 08:27:28.388611593 UTC , thread_cap_info = ("ThreadId 183",
| | | F | |   | | | | | |  2, False)}
| | | F | |   | | | | | |  
| | | | | F   | | | | | |  
| | | | | S   | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | S   | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | S   | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | S   | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S   | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S   | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | S   | | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | | | S   | | | | | |  = 4 , total_length = 33} , self = 104 , parent = Nothing , duration = 0.202443920000
| | | | | S   | | | | | |  , status = Success , start = 2025-09-04 08:27:28.206494747 UTC , finish
| | | | | S   | | | | | |  = 2025-09-04 08:27:28.408938667 UTC , thread_cap_info = ("ThreadId 184",
| | | | | S   | | | | | |  2, False)}
| | | | | S   | | | | | |  
| | | | | |   | | | F | |  
| | | | | |   | | |   | F  
| | | | | |   | F |   |    
| | | | | |   F   |   |    
| | | | | |       |   F    
| | | | | |       F        
| F | | | |                
|   F | | |                
|     F | |                
|       | S                
|       S                  
S                          
