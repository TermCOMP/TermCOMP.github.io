[Info] pool sizes (success) 13 seen 13 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 13 seen 13 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 2367 length 9982
CNF 2367 vars 9982 clauses
last 2216 length 9229
CNF 2216 vars 9229 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5752, clauses: 23454
last 5752 length 23454
CNF 5752 vars 23454 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5752, clauses: 23454, status: Satisfied, time: 0.469046646s
last 1782 length 7434
CNF 1782 vars 7434 clauses
last 1955 length 8244
CNF 1955 vars 8244 clauses
last 1596 length 6662
CNF 1596 vars 6662 clauses
last 1777 length 7482
CNF 1777 vars 7482 clauses
last 1599 length 6720
CNF 1599 vars 6720 clauses
last 1410 length 5890
CNF 1410 vars 5890 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3983, clauses: 15933
last 3983 length 15933
CNF 3983 vars 15933 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3983, clauses: 15933, status: Satisfied, time: 1.299215621s
**************************************************
summary
**************************************************
SRS with 3 strict rules and 13 weak rules on 8 letters       weights
SRS with 1 strict rules and 13 weak rules on 8 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 11 weak rules on 7 letters       Matrix   { monotone = Strict, domain = Natural, method = KBO, shape = Full, bits = 1, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 2, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 10 weak rules on 7 letters       Matrix   { monotone = Strict, domain = Natural, method = KBO, shape = Full, bits = 1, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 2, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 9 weak rules on 7 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 9 weak rules on 7 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [d, d, n, n] -> [d, d] {- Input 0 -}
  [d, d, o, o] -> [d, d] {- Input 1 -}
  [o, o, u, u] -> [u, u] {- Input 2 -}
  [t, t, u, u] ->= [t, t, c, c, d, d] {- Input 3 -}
  [d, d, f, f] ->= [f, f, d, d] {- Input 4 -}
  [d, d, g, g] ->= [u, u, g, g] {- Input 5 -}
  [f, f, u, u] ->= [u, u, f, f] {- Input 6 -}
  [n, n, u, u] ->= [u, u] {- Input 7 -}
  [f, f] ->= [f, f, n, n] {- Input 8 -}
  [t, t] ->= [t, t, c, c, n, n] {- Input 9 -}
  [c, c, n, n] ->= [n, n, c, c] {- Input 10 -}
  [c, c, o, o] ->= [o, o, c, c] {- Input 11 -}
  [c, c, o, o] ->= [o, o] {- Input 12 -}
  [c, c, f, f] ->= [f, f, c, c] {- Input 13 -}
  [c, c, u, u] ->= [u, u, c, c] {- Input 14 -}
  [c, c, d, d] ->= [d, d, c, c] {- Input 15 -}
reason
  (d, 0/1)
  (t, 0/1)
  (n, 0/1)
  (g, 0/1)
  (f, 0/1)
  (o, 1/1)
  (u, 0/1)
  (c, 0/1)
   property Termination
has value Just True
for SRS
  [d, d, n, n] -> [d, d] {- Input 0 -}
  [t, t, u, u] ->= [t, t, c, c, d, d] {- Input 3 -}
  [d, d, f, f] ->= [f, f, d, d] {- Input 4 -}
  [d, d, g, g] ->= [u, u, g, g] {- Input 5 -}
  [f, f, u, u] ->= [u, u, f, f] {- Input 6 -}
  [n, n, u, u] ->= [u, u] {- Input 7 -}
  [f, f] ->= [f, f, n, n] {- Input 8 -}
  [t, t] ->= [t, t, c, c, n, n] {- Input 9 -}
  [c, c, n, n] ->= [n, n, c, c] {- Input 10 -}
  [c, c, o, o] ->= [o, o, c, c] {- Input 11 -}
  [c, c, o, o] ->= [o, o] {- Input 12 -}
  [c, c, f, f] ->= [f, f, c, c] {- Input 13 -}
  [c, c, u, u] ->= [u, u, c, c] {- Input 14 -}
  [c, c, d, d] ->= [d, d, c, c] {- Input 15 -}
reason
  ( d
  , St (Corner  / 1 1 1 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( t
  , St (Corner  / 1 1 0 \
                | 0 1 3 |
                \ 0 0 1 /) )
  ( n
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( g
  , St (Corner  / 1 0 0 \
                | 0 0 7 |
                \ 0 0 1 /) )
  ( f
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( o
  , St (Corner  / 1 3 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( u
  , St (Corner  / 1 0 3 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( c
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [d, d, n, n] -> [d, d] {- Input 0 -}
  [d, d, f, f] ->= [f, f, d, d] {- Input 4 -}
  [f, f, u, u] ->= [u, u, f, f] {- Input 6 -}
  [n, n, u, u] ->= [u, u] {- Input 7 -}
  [f, f] ->= [f, f, n, n] {- Input 8 -}
  [t, t] ->= [t, t, c, c, n, n] {- Input 9 -}
  [c, c, n, n] ->= [n, n, c, c] {- Input 10 -}
  [c, c, o, o] ->= [o, o, c, c] {- Input 11 -}
  [c, c, o, o] ->= [o, o] {- Input 12 -}
  [c, c, f, f] ->= [f, f, c, c] {- Input 13 -}
  [c, c, u, u] ->= [u, u, c, c] {- Input 14 -}
  [c, c, d, d] ->= [d, d, c, c] {- Input 15 -}
reason
  ( d
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( t
  , Ek 2  / 1 0 \
          \ 0 2 / )
  ( n
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( f
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( o
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( u
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( c
  , Ek 2  / 1 0 \
          \ 0 1 / )
   property Termination
has value Just True
for SRS
  [d, d, n, n] -> [d, d] {- Input 0 -}
  [f, f, u, u] ->= [u, u, f, f] {- Input 6 -}
  [n, n, u, u] ->= [u, u] {- Input 7 -}
  [f, f] ->= [f, f, n, n] {- Input 8 -}
  [t, t] ->= [t, t, c, c, n, n] {- Input 9 -}
  [c, c, n, n] ->= [n, n, c, c] {- Input 10 -}
  [c, c, o, o] ->= [o, o, c, c] {- Input 11 -}
  [c, c, o, o] ->= [o, o] {- Input 12 -}
  [c, c, f, f] ->= [f, f, c, c] {- Input 13 -}
  [c, c, u, u] ->= [u, u, c, c] {- Input 14 -}
  [c, c, d, d] ->= [d, d, c, c] {- Input 15 -}
reason
  ( d
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( t
  , Ek 2  / 1 0 \
          \ 0 2 / )
  ( n
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( f
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( o
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( u
  , Ek 2  / 1 0 \
          \ 0 2 / )
  ( c
  , Ek 2  / 1 0 \
          \ 0 1 / )
   property Termination
has value Just True
for SRS
  [d, d, n, n] -> [d, d] {- Input 0 -}
  [n, n, u, u] ->= [u, u] {- Input 7 -}
  [f, f] ->= [f, f, n, n] {- Input 8 -}
  [t, t] ->= [t, t, c, c, n, n] {- Input 9 -}
  [c, c, n, n] ->= [n, n, c, c] {- Input 10 -}
  [c, c, o, o] ->= [o, o, c, c] {- Input 11 -}
  [c, c, o, o] ->= [o, o] {- Input 12 -}
  [c, c, f, f] ->= [f, f, c, c] {- Input 13 -}
  [c, c, u, u] ->= [u, u, c, c] {- Input 14 -}
  [c, c, d, d] ->= [d, d, c, c] {- Input 15 -}
reason
  ( d
  , St (Corner  / 1 2 0 \
                | 0 1 1 |
                \ 0 0 1 /) )
  ( t
  , St (Corner  / 1 0 3 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( n
  , St (Corner  / 1 0 0 \
                | 0 2 1 |
                \ 0 0 1 /) )
  ( f
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( o
  , St (Corner  / 1 0 2 \
                | 0 0 2 |
                \ 0 0 1 /) )
  ( u
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( c
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [n, n, u, u] ->= [u, u] {- Input 7 -}
  [f, f] ->= [f, f, n, n] {- Input 8 -}
  [t, t] ->= [t, t, c, c, n, n] {- Input 9 -}
  [c, c, n, n] ->= [n, n, c, c] {- Input 10 -}
  [c, c, o, o] ->= [o, o, c, c] {- Input 11 -}
  [c, c, o, o] ->= [o, o] {- Input 12 -}
  [c, c, f, f] ->= [f, f, c, c] {- Input 13 -}
  [c, c, u, u] ->= [u, u, c, c] {- Input 14 -}
  [c, c, d, d] ->= [d, d, c, c] {- Input 15 -}
reason
  no strict rules

**************************************************
skeleton: (3/13,8)\Weight(1/13,8)\Matrix{\Natural}{3}(1/11,7)\Matrix{\Natural}{2}(1/10,7)\Matrix{\Natural}{2}(1/9,7)\Matrix{\Natural}{3}(0/9,7)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.060794870000
  min duration 3.060794870000
  total durat. 3.060794870000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 6584}
    , self = 75
    , parent = Nothing
    , duration = 3.060794870000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:38.938571081 UTC
    , finish = 2025-09-04 07:31:41.999365951 UTC
    , thread_cap_info = ("ThreadId 118", 3, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 3.142774995000
  min duration 0.149880026000
  total durat. 4.931604840000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 6584}
    , self = 57
    , parent = Nothing
    , duration = 1.638949819000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:38.878174015 UTC
    , finish = 2025-09-04 07:31:40.517123834 UTC
    , thread_cap_info = ("ThreadId 109", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 6584}
    , self = 73
    , parent = Nothing
    , duration = 3.142774995000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:38.813498826 UTC
    , finish = 2025-09-04 07:31:41.956273821 UTC
    , thread_cap_info = ("ThreadId 102", 2, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.041247531000
  min duration 3.041247531000
  total durat. 3.041247531000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 6584}
    , self = 87
    , parent = Nothing
    , duration = 3.041247531000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:39.217079404 UTC
    , finish = 2025-09-04 07:31:42.258326935 UTC
    , thread_cap_info = ("ThreadId 120", 3, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.160261235000
  min duration 1.680368591000
  total durat. 4.840629826000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 6584}
    , self = 58
    , parent = Nothing
    , duration = 1.680368591000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:38.89706186 UTC
    , finish = 2025-09-04 07:31:40.577430451 UTC
    , thread_cap_info = ("ThreadId 111", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 6584}
    , self = 74
    , parent = Nothing
    , duration = 3.160261235000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:38.817199357 UTC
    , finish = 2025-09-04 07:31:41.977460592 UTC
    , thread_cap_info = ("ThreadId 104", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.760014392000
  min duration 0.999979389000
  total durat. 2.759993781000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 7
      , total_length = 72}
    , self = 97
    , parent = Nothing
    , duration = 1.760014392000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:42.437071798 UTC
    , finish = 2025-09-04 07:31:44.19708619 UTC
    , thread_cap_info = ("ThreadId 186", 2, False)}
Success : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.544973348000
  min duration 0.586240476000
  total durat. 2.131213824000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 7
      , total_length = 72}
    , self = 94
    , parent = Nothing
    , duration = 1.544973348000
    , status = Success
    , start = 2025-09-04 07:31:42.457077395 UTC
    , finish = 2025-09-04 07:31:44.002050743 UTC
    , thread_cap_info = ("ThreadId 187", 2, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 7
  max duration 0.689224182000
  min duration 0.006952034000
  total durat. 1.686424753000
**************************************************
E                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                  = False}" , input_size = Size { num_rules = 13 , num_strict_rules = 13
E                  , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 8 , total_length
E                  = 100} , self = 30 , parent = Nothing , duration = 0.194058125000 , status
E                  = Except "AsyncCancelled" , start = 2025-09-04 07:31:38.199849563 UTC ,
E                  finish = 2025-09-04 07:31:38.393907688 UTC , thread_cap_info = ("ThreadId
E                  20", 0, False)}
E                  
| F                Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| F                { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| F                = MSB_First}\n , max_size = Nothing\n , max_height = Just 2\n , initial
| F                = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| F                = False}" , input_size = Size { num_rules = 13 , num_strict_rules = 13
| F                , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 8 , total_length
| F                = 100} , self = 27 , parent = Nothing , duration = 0.120105296000 , status
| F                = Fail , start = 2025-09-04 07:31:38.199880653 UTC , finish = 2025-09-04
| F                07:31:38.319985949 UTC , thread_cap_info = ("ThreadId 41", 3, False)}
| F                
| | E              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | E              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | E              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | E              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | E              = Size { num_rules = 13 , num_strict_rules = 13 , num_top_rules = 0 , num_weak_rules
| | E              = 0 , alphabet_size = 8 , total_length = 100} , self = 26 , parent = Nothing
| | E              , duration = 0.102506248000 , status = Except "AsyncCancelled" , start
| | E              = 2025-09-04 07:31:38.217197847 UTC , finish = 2025-09-04 07:31:38.319704095
| | E              UTC , thread_cap_info = ("ThreadId 49", 1, False)}
| | E              
| | | S            Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | S            , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | S            , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | S            = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | S            , cpf = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | S            = 1 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size = 8 , total_length
| | | S            = 106} , self = 31 , parent = Nothing , duration = 0.151837244000 , status
| | | S            = Success , start = 2025-09-04 07:31:38.242699266 UTC , finish = 2025-09-04
| | | S            07:31:38.39453651 UTC , thread_cap_info = ("ThreadId 61", 2, False)}
| | | S            
| | | | E          Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | E          epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | E          = Size { num_rules = 832 , num_strict_rules = 832 , num_top_rules = 0 ,
| | | | E          num_weak_rules = 0 , alphabet_size = 64 , total_length = 8064} , self =
| | | | E          32 , parent = Nothing , duration = 0.135190630000 , status = Except "AsyncCancelled"
| | | | E          , start = 2025-09-04 07:31:38.281508062 UTC , finish = 2025-09-04 07:31:38.416698692
| | | | E          UTC , thread_cap_info = ("ThreadId 77", 0, False)}
| | | | E          
| | E | |          
| F   | |          
E     | |          
      S |          
        E          
S                  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
S                  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
S                  = Size { num_rules = 896 , num_strict_rules = 64 , num_top_rules = 0 ,
S                  num_weak_rules = 832 , alphabet_size = 64 , total_length = 8576} , self
S                  = 40 , parent = Nothing , duration = 0.189975281000 , status = Success
S                  , start = 2025-09-04 07:31:38.425521522 UTC , finish = 2025-09-04 07:31:38.615496803
S                  UTC , thread_cap_info = ("ThreadId 88", 2, False)}
S                  
| S                Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| S                epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| S                = Size { num_rules = 896 , num_strict_rules = 64 , num_top_rules = 0 ,
| S                num_weak_rules = 832 , alphabet_size = 64 , total_length = 8576} , self
| S                = 42 , parent = Nothing , duration = 0.346821093000 , status = Success
| S                , start = 2025-09-04 07:31:38.446746626 UTC , finish = 2025-09-04 07:31:38.793567719
| S                UTC , thread_cap_info = ("ThreadId 91", 2, False)}
| S                
| | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | F              = 1 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size = 8 , total_length
| | F              = 106} , self = 38 , parent = Nothing , duration = 0.121820520000 , status
| | F              = Fail , start = 2025-09-04 07:31:38.457546227 UTC , finish = 2025-09-04
| | F              07:31:38.579366747 UTC , thread_cap_info = ("ThreadId 89", 3, False)}
| | F              
| | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | F            = 1 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size = 8 , total_length
| | | F            = 106} , self = 39 , parent = Nothing , duration = 0.131680187000 , status
| | | F            = Fail , start = 2025-09-04 07:31:38.475198529 UTC , finish = 2025-09-04
| | | F            07:31:38.606878716 UTC , thread_cap_info = ("ThreadId 90", 3, False)}
| | | F            
| | F |            
| | F |            Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | F |            epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | F |            = Size { num_rules = 692 , num_strict_rules = 56 , num_top_rules = 0 ,
| | F |            num_weak_rules = 636 , alphabet_size = 62 , total_length = 6584} , self
| | F |            = 44 , parent = Nothing , duration = 0.196192575000 , status = Fail , start
| | F |            = 2025-09-04 07:31:38.605867736 UTC , finish = 2025-09-04 07:31:38.802060311
| | F |            UTC , thread_cap_info = ("ThreadId 95", 3, False)}
| | F |            
| | | F            
S | |              
E | |              Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E | |              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | |              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | |              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | |              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | |              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
E | |              , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size
E | |              = 8 , total_length = 106} , self = 53 , parent = Nothing , duration = 0.999979389000
E | |              , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:38.617078971
E | |              UTC , finish = 2025-09-04 07:31:39.61705836 UTC , thread_cap_info = ("ThreadId
E | |              96", 3, False)}
E | |              
| | | F            Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | F            epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | F            = Size { num_rules = 692 , num_strict_rules = 56 , num_top_rules = 0 ,
| | | F            num_weak_rules = 636 , alphabet_size = 62 , total_length = 6584} , self
| | | F            = 43 , parent = Nothing , duration = 0.160307179000 , status = Fail , start
| | | F            = 2025-09-04 07:31:38.637073445 UTC , finish = 2025-09-04 07:31:38.797380624
| | | F            UTC , thread_cap_info = ("ThreadId 98", 2, False)}
| | | F            
| | | | S          Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | S          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | S          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | S          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | | | S          , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size
| | | | S          = 8 , total_length = 106} , self = 51 , parent = Nothing , duration = 0.586240476000
| | | | S          , status = Success , start = 2025-09-04 07:31:38.778212873 UTC , finish
| | | | S          = 2025-09-04 07:31:39.364453349 UTC , thread_cap_info = ("ThreadId 99",
| | | | S          3, False)}
| | | | S          
| S | | |          
|   | F |          
|   F   |          
| E     |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E     |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E     |          = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| E     |          = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| E     |          total_length = 6584} , self = 73 , parent = Nothing , duration = 3.142774995000
| E     |          , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:38.813498826
| E     |          UTC , finish = 2025-09-04 07:31:41.956273821 UTC , thread_cap_info = ("ThreadId
| E     |          102", 2, False)}
| E     |          
| | E   |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | E   |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E   |          = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | E   |          = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| | E   |          total_length = 6584} , self = 74 , parent = Nothing , duration = 3.160261235000
| | E   |          , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:38.817199357
| | E   |          UTC , finish = 2025-09-04 07:31:41.977460592 UTC , thread_cap_info = ("ThreadId
| | E   |          104", 2, False)}
| | E   |          
| | | E |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | E |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E |          = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | | E |          = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| | | E |          total_length = 6584} , self = 57 , parent = Nothing , duration = 1.638949819000
| | | E |          , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:38.878174015
| | | E |          UTC , finish = 2025-09-04 07:31:40.517123834 UTC , thread_cap_info = ("ThreadId
| | | E |          109", 2, False)}
| | | E |          
| | | | | E        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E        = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | | | | E        = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| | | | | E        total_length = 6584} , self = 58 , parent = Nothing , duration = 1.680368591000
| | | | | E        , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:38.89706186
| | | | | E        UTC , finish = 2025-09-04 07:31:40.577430451 UTC , thread_cap_info = ("ThreadId
| | | | | E        111", 2, False)}
| | | | | E        
| | | | | | E      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | | | | | E      = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| | | | | | E      total_length = 6584} , self = 75 , parent = Nothing , duration = 3.060794870000
| | | | | | E      , status = Except "<<timeout>>" , start = 2025-09-04 07:31:38.938571081
| | | | | | E      UTC , finish = 2025-09-04 07:31:41.999365951 UTC , thread_cap_info = ("ThreadId
| | | | | | E      118", 3, False)}
| | | | | | E      
| | | | | | | F    Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | | | | | F    , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | | | | | F    , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | | | | | F    = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | | | | | F    , cpf = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | | | | | | F    = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| | | | | | | F    total_length = 6584} , self = 50 , parent = Nothing , duration = 0.283247703000
| | | | | | | F    , status = Fail , start = 2025-09-04 07:31:38.95707017 UTC , finish = 2025-09-04
| | | | | | | F    07:31:39.240317873 UTC , thread_cap_info = ("ThreadId 119", 3, False)}
| | | | | | | F    
| | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | | | | | | | E  = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| | | | | | | | E  total_length = 6584} , self = 87 , parent = Nothing , duration = 3.041247531000
| | | | | | | | E  , status = Except "<<timeout>>" , start = 2025-09-04 07:31:39.217079404
| | | | | | | | E  UTC , finish = 2025-09-04 07:31:42.258326935 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E  120", 3, False)}
| | | | | | | | E  
| | | | | | | F |  
| | | | S | |   |  
E | | |   | |   |  
  | | E   | |   |  
  | |     E |   |  
S | |       |   |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
S | |       |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
S | |       |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
S | |       |   |  = 1 , num_top_rules = 0 , num_weak_rules = 11 , alphabet_size = 7 , total_length
S | |       |   |  = 88} , self = 63 , parent = Nothing , duration = 0.786086546000 , status
S | |       |   |  = Success , start = 2025-09-04 07:31:40.637073961 UTC , finish = 2025-09-04
S | |       |   |  07:31:41.423160507 UTC , thread_cap_info = ("ThreadId 132", 2, False)}
S | |       |   |  
| | | S     |   |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | S     |   |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | S     |   |  = Size { num_rules = 588 , num_strict_rules = 49 , num_top_rules = 0 ,
| | | S     |   |  num_weak_rules = 539 , alphabet_size = 49 , total_length = 5488} , self
| | | S     |   |  = 64 , parent = Nothing , duration = 0.689224182000 , status = Success
| | | S     |   |  , start = 2025-09-04 07:31:40.740704599 UTC , finish = 2025-09-04 07:31:41.429928781
| | | S     |   |  UTC , thread_cap_info = ("ThreadId 136", 2, False)}
| | | S     |   |  
S | | |     |   |  
  | | S     |   |  
E | |       |   |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E | |       |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E | |       |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
E | |       |   |  = 1 , num_top_rules = 0 , num_weak_rules = 10 , alphabet_size = 7 , total_length
E | |       |   |  = 80} , self = 79 , parent = Nothing , duration = 0.149880026000 , status
E | |       |   |  = Except "AsyncCancelled" , start = 2025-09-04 07:31:41.918443734 UTC ,
E | |       |   |  finish = 2025-09-04 07:31:42.06832376 UTC , thread_cap_info = ("ThreadId
E | |       |   |  152", 2, False)}
E | |       |   |  
| | | S     |   |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | S     |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | S     |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | S     |   |  = 1 , num_top_rules = 0 , num_weak_rules = 10 , alphabet_size = 7 , total_length
| | | S     |   |  = 80} , self = 76 , parent = Nothing , duration = 0.105815520000 , status
| | | S     |   |  = Success , start = 2025-09-04 07:31:41.940517975 UTC , finish = 2025-09-04
| | | S     |   |  07:31:42.046333495 UTC , thread_cap_info = ("ThreadId 155", 2, False)}
| | | S     |   |  
| E | |     |   |  
| S | |     |   |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| S | |     |   |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| S | |     |   |  = Size { num_rules = 539 , num_strict_rules = 49 , num_top_rules = 0 ,
| S | |     |   |  num_weak_rules = 490 , alphabet_size = 49 , total_length = 4998} , self
| S | |     |   |  = 78 , parent = Nothing , duration = 0.104001557000 , status = Success
| S | |     |   |  , start = 2025-09-04 07:31:41.96181147 UTC , finish = 2025-09-04 07:31:42.065813027
| S | |     |   |  UTC , thread_cap_info = ("ThreadId 157", 2, False)}
| S | |     |   |  
| | E |     |   |  
| |   |     E   |  
| |   S         |  
| S             |  
E               |  
F               |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F               |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F               |  = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
F               |  = 1 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 7 , total_length
F               |  = 72} , self = 89 , parent = Nothing , duration = 0.142374611000 , status
F               |  = Fail , start = 2025-09-04 07:31:42.197563619 UTC , finish = 2025-09-04
F               |  07:31:42.33993823 UTC , thread_cap_info = ("ThreadId 178", 2, False)}
F               |  
| F             |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F             |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F             |  = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| F             |  = 1 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 7 , total_length
| F             |  = 72} , self = 90 , parent = Nothing , duration = 0.169136463000 , status
| F             |  = Fail , start = 2025-09-04 07:31:42.212311703 UTC , finish = 2025-09-04
| F             |  07:31:42.381448166 UTC , thread_cap_info = ("ThreadId 179", 2, False)}
| F             |  
| | S           |  Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | S           |  , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | S           |  , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | S           |  = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | S           |  , cpf = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | S           |  = 1 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 7 , total_length
| | S           |  = 72} , self = 88 , parent = Nothing , duration = 0.111780116000 , status
| | S           |  = Success , start = 2025-09-04 07:31:42.215634159 UTC , finish = 2025-09-04
| | S           |  07:31:42.327414275 UTC , thread_cap_info = ("ThreadId 180", 2, False)}
| | S           |  
| | |           E  
| | S              
| | S              Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | S              epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | S              = Size { num_rules = 490 , num_strict_rules = 49 , num_top_rules = 0 ,
| | S              num_weak_rules = 441 , alphabet_size = 49 , total_length = 4508} , self
| | S              = 91 , parent = Nothing , duration = 0.259032385000 , status = Success
| | S              , start = 2025-09-04 07:31:42.337087493 UTC , finish = 2025-09-04 07:31:42.596119878
| | S              UTC , thread_cap_info = ("ThreadId 185", 2, False)}
| | S              
F | |              
  F |              
E   |              Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E   |              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E   |              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E   |              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E   |              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E   |              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
E   |              , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size
E   |              = 7 , total_length = 72} , self = 97 , parent = Nothing , duration = 1.760014392000
E   |              , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:42.437071798
E   |              UTC , finish = 2025-09-04 07:31:44.19708619 UTC , thread_cap_info = ("ThreadId
E   |              186", 2, False)}
E   |              
| S |              Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| S |              = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S |              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| S |              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S |              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S |              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| S |              , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size
| S |              = 7 , total_length = 72} , self = 94 , parent = Nothing , duration = 1.544973348000
| S |              , status = Success , start = 2025-09-04 07:31:42.457077395 UTC , finish
| S |              = 2025-09-04 07:31:44.002050743 UTC , thread_cap_info = ("ThreadId 187",
| S |              2, False)}
| S |              
| | S              
| S                
E                  
