[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 22 length 73
last 25 length 90
CNF 22 vars 73 clauses
last 439 length 1753
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
CNF 439 vars 1753 clauses
CNF 25 vars 90 clauses
last 12 length 33
last 12 length 33
CNF 12 vars 33 clauses
CNF 12 vars 33 clauses
last 72 length 265
last 42 length 143
CNF 72 vars 265 clauses
last 67 length 250
last 92 length 338
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 197, clauses: 663
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 438, clauses: 1589
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 81, clauses: 235
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 393, clauses: 1334
CNF 42 vars 143 clauses
last 469 length 1849
CNF 67 vars 250 clauses
**************************************************last 481 length 1889
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 393, clauses: 1370
CNF 92 vars 338 clauses

last 197 length 663
last 438 length 1589
last 81 length 235
last 393 length 1334
CNF 469 vars 1849 clauses
last 393 length 1370
CNF 481 vars 1889 clauses
CNF 438 vars 1589 clauses
CNF 81 vars 235 clauses
CNF 197 vars 663 clauses
summary
CNF 393 vars 1334 clauses
CNF 393 vars 1370 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 197, clauses: 663, status: Unsatisfied, time: 0.017559254s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 81, clauses: 235, status: Unsatisfied, time: 0.015458653s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 438, clauses: 1589, status: Unsatisfied, time: 0.015919423s
**************************************************
SRS with 6 strict rules and 2 weak rules on 6 letters       weights
SRS with 4 strict rules and 2 weak rules on 6 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 144 strict rules and 72 weak rules on 35 letters       weights
SRS with 0 strict rules and 12 weak rules on 14 letters       no strict rules

**************************************************
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 393, clauses: 1370, status: Unsatisfied, time: 0.013568391s
proof
**************************************************
property Termination
has value Just True
for SRS
  [o, l] -> [r] {- Input 0 -}
  [n, l, o] -> [r, o] {- Input 1 -}
  [L, l, o] -> [L, r, o] {- Input 2 -}
  [r, o] -> [l] {- Input 3 -}
  [o, r, n] -> [o, l] {- Input 4 -}
  [o, r, R] -> [o, l, R] {- Input 5 -}
  [L] ->= [L, n] {- Input 6 -}
  [R] ->= [n, R] {- Input 7 -}
reason
  (L, 0/1)
  (n, 0/1)
  (R, 0/1)
  (l, 0/1)
  (o, 1/1)
  (r, 0/1)
   property Termination
has value Just True
for SRS
  [n, l, o] -> [r, o] {- Input 1 -}
  [L, l, o] -> [L, r, o] {- Input 2 -}
  [o, r, n] -> [o, l] {- Input 4 -}
  [o, r, R] -> [o, l, R] {- Input 5 -}
  [L] ->= [L, n] {- Input 6 -}
  [R] ->= [n, R] {- Input 7 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[n, n], [n, l], [l, o], [o, n]] -> [ [n, r] , [r, o] , [ o , n ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[n, n], [n, l], [l, o], [o, l]] -> [ [n, r] , [r, o] , [ o , l ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[n, n], [n, l], [l, o], [o, o]] -> [ [n, r] , [r, o] , [ o , o ] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[n, n], [n, l], [l, o], [o, r]] -> [ [n, r] , [r, o] , [ o , r ] ] {- Semlab 0 (Concon 3 (Input 1)) -}
  [[n, n], [n, l], [l, o], [o, L]] -> [ [n, r] , [r, o] , [ o , L ] ] {- Semlab 0 (Concon 4 (Input 1)) -}
  [[n, n], [n, l], [l, o], [o, R]] -> [ [n, r] , [r, o] , [ o , R ] ] {- Semlab 0 (Concon 5 (Input 1)) -}
  [[l, n], [n, l], [l, o], [o, n]] -> [ [l, r] , [r, o] , [ o , n ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[l, n], [n, l], [l, o], [o, l]] -> [ [l, r] , [r, o] , [ o , l ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[l, n], [n, l], [l, o], [o, o]] -> [ [l, r] , [r, o] , [ o , o ] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[l, n], [n, l], [l, o], [o, r]] -> [ [l, r] , [r, o] , [ o , r ] ] {- Semlab 1 (Concon 3 (Input 1)) -}
  [[l, n], [n, l], [l, o], [o, L]] -> [ [l, r] , [r, o] , [ o , L ] ] {- Semlab 1 (Concon 4 (Input 1)) -}
  [[l, n], [n, l], [l, o], [o, R]] -> [ [l, r] , [r, o] , [ o , R ] ] {- Semlab 1 (Concon 5 (Input 1)) -}
  [[o, n], [n, l], [l, o], [o, n]] -> [ [o, r] , [r, o] , [ o , n ] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[o, n], [n, l], [l, o], [o, l]] -> [ [o, r] , [r, o] , [ o , l ] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[o, n], [n, l], [l, o], [o, o]] -> [ [o, r] , [r, o] , [ o , o ] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[o, n], [n, l], [l, o], [o, r]] -> [ [o, r] , [r, o] , [ o , r ] ] {- Semlab 2 (Concon 3 (Input 1)) -}
  [[o, n], [n, l], [l, o], [o, L]] -> [ [o, r] , [r, o] , [ o , L ] ] {- Semlab 2 (Concon 4 (Input 1)) -}
  [[o, n], [n, l], [l, o], [o, R]] -> [ [o, r] , [r, o] , [ o , R ] ] {- Semlab 2 (Concon 5 (Input 1)) -}
  [[r, n], [n, l], [l, o], [o, n]] -> [ [r, r] , [r, o] , [ o , n ] ] {- Semlab 3 (Concon 0 (Input 1)) -}
  [[r, n], [n, l], [l, o], [o, l]] -> [ [r, r] , [r, o] , [ o , l ] ] {- Semlab 3 (Concon 1 (Input 1)) -}
  [[r, n], [n, l], [l, o], [o, o]] -> [ [r, r] , [r, o] , [ o , o ] ] {- Semlab 3 (Concon 2 (Input 1)) -}
  [[r, n], [n, l], [l, o], [o, r]] -> [ [r, r] , [r, o] , [ o , r ] ] {- Semlab 3 (Concon 3 (Input 1)) -}
  [[r, n], [n, l], [l, o], [o, L]] -> [ [r, r] , [r, o] , [ o , L ] ] {- Semlab 3 (Concon 4 (Input 1)) -}
  [[r, n], [n, l], [l, o], [o, R]] -> [ [r, r] , [r, o] , [ o , R ] ] {- Semlab 3 (Concon 5 (Input 1)) -}
  [[L, n], [n, l], [l, o], [o, n]] -> [ [L, r] , [r, o] , [ o , n ] ] {- Semlab 4 (Concon 0 (Input 1)) -}
  [[L, n], [n, l], [l, o], [o, l]] -> [ [L, r] , [r, o] , [ o , l ] ] {- Semlab 4 (Concon 1 (Input 1)) -}
  [[L, n], [n, l], [l, o], [o, o]] -> [ [L, r] , [r, o] , [ o , o ] ] {- Semlab 4 (Concon 2 (Input 1)) -}
  [[L, n], [n, l], [l, o], [o, r]] -> [ [L, r] , [r, o] , [ o , r ] ] {- Semlab 4 (Concon 3 (Input 1)) -}
  [[L, n], [n, l], [l, o], [o, L]] -> [ [L, r] , [r, o] , [ o , L ] ] {- Semlab 4 (Concon 4 (Input 1)) -}
  [[L, n], [n, l], [l, o], [o, R]] -> [ [L, r] , [r, o] , [ o , R ] ] {- Semlab 4 (Concon 5 (Input 1)) -}
  [[R, n], [n, l], [l, o], [o, n]] -> [ [R, r] , [r, o] , [ o , n ] ] {- Semlab 5 (Concon 0 (Input 1)) -}
  [[R, n], [n, l], [l, o], [o, l]] -> [ [R, r] , [r, o] , [ o , l ] ] {- Semlab 5 (Concon 1 (Input 1)) -}Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 393, clauses: 1334, status: Unsatisfied, time: 0.019949004s

  [[R, n], [n, l], [l, o], [o, o]] -> [ [R, r] , [r, o] , [ o , o ] ] {- Semlab 5 (Concon 2 (Input 1)) -}
  [[R, n], [n, l], [l, o], [o, r]] -> [ [R, r] , [r, o] , [ o , r ] ] {- Semlab 5 (Concon 3 (Input 1)) -}
  [[R, n], [n, l], [l, o], [o, L]] -> [ [R, r] , [r, o] , [ o , L ] ] {- Semlab 5 (Concon 4 (Input 1)) -}
  [[R, n], [n, l], [l, o], [o, R]] -> [ [R, r] , [r, o] , [ o , R ] ] {- Semlab 5 (Concon 5 (Input 1)) -}
  [[n, L], [L, l], [l, o], [o, n]] -> [ [n, L] , [L, r] , [r, o] , [ o , n ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[n, L], [L, l], [l, o], [o, l]] -> [ [n, L] , [L, r] , [r, o] , [ o , l ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[n, L], [L, l], [l, o], [o, o]] -> [ [n, L] , [L, r] , [r, o] , [ o , o ] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[n, L], [L, l], [l, o], [o, r]] -> [ [n, L] , [L, r] , [r, o] , [ o , r ] ] {- Semlab 0 (Concon 3 (Input 2)) -}
  [[n, L], [L, l], [l, o], [o, L]] -> [ [n, L] , [L, r] , [r, o] , [ o , L ] ] {- Semlab 0 (Concon 4 (Input 2)) -}
  [[n, L], [L, l], [l, o], [o, R]] -> [ [n, L] , [L, r] , [r, o] , [ o , R ] ] {- Semlab 0 (Concon 5 (Input 2)) -}
  [[l, L], [L, l], [l, o], [o, n]] -> [ [l, L] , [L, r] , [r, o] , [ o , n ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[l, L], [L, l], [l, o], [o, l]] -> [ [l, L] , [L, r] , [r, o] , [ o , l ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[l, L], [L, l], [l, o], [o, o]] -> [ [l, L] , [L, r] , [r, o] , [ o , o ] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[l, L], [L, l], [l, o], [o, r]] -> [ [l, L] , [L, r] , [r, o] , [ o , r ] ] {- Semlab 1 (Concon 3 (Input 2)) -}
  [[l, L], [L, l], [l, o], [o, L]] -> [ [l, L] , [L, r] , [r, o] , [ o , L ] ] {- Semlab 1 (Concon 4 (Input 2)) -}
  [[l, L], [L, l], [l, o], [o, R]] -> [ [l, L] , [L, r] , [r, o] , [ o , R ] ] {- Semlab 1 (Concon 5 (Input 2)) -}
  [[o, L], [L, l], [l, o], [o, n]] -> [ [o, L] , [L, r] , [r, o] , [ o , n ] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[o, L], [L, l], [l, o], [o, l]] -> [ [o, L] , [L, r] , [r, o] , [ o , l ] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[o, L], [L, l], [l, o], [o, o]] -> [ [o, L] , [L, r] , [r, o] , [ o , o ] ] {- Semlab 2 (Concon 2 (Input 2)) -}
  [[o, L], [L, l], [l, o], [o, r]] -> [ [o, L] , [L, r] , [r, o] , [ o , r ] ] {- Semlab 2 (Concon 3 (Input 2)) -}
  [[o, L], [L, l], [l, o], [o, L]] -> [ [o, L] , [L, r] , [r, o] , [ o , L ] ] {- Semlab 2 (Concon 4 (Input 2)) -}
  [[o, L], [L, l], [l, o], [o, R]] -> [ [o, L] , [L, r] , [r, o] , [ o , R ] ] {- Semlab 2 (Concon 5 (Input 2)) -}
  [[r, L], [L, l], [l, o], [o, n]] -> [ [r, L] , [L, r] , [r, o] , [ o , n ] ] {- Semlab 3 (Concon 0 (Input 2)) -}
  [[r, L], [L, l], [l, o], [o, l]] -> [ [r, L] , [L, r] , [r, o] , [ o , l ] ] {- Semlab 3 (Concon 1 (Input 2)) -}
  [[r, L], [L, l], [l, o], [o, o]] -> [ [r, L] , [L, r] , [r, o] , [ o , o ] ] {- Semlab 3 (Concon 2 (Input 2)) -}
  [[r, L], [L, l], [l, o], [o, r]] -> [ [r, L] , [L, r] , [r, o] , [ o , r ] ] {- Semlab 3 (Concon 3 (Input 2)) -}
  [[r, L], [L, l], [l, o], [o, L]] -> [ [r, L] , [L, r] , [r, o] , [ o , L ] ] {- Semlab 3 (Concon 4 (Input 2)) -}
  [[r, L], [L, l], [l, o], [o, R]] -> [ [r, L] , [L, r] , [r, o] , [ o , R ] ] {- Semlab 3 (Concon 5 (Input 2)) -}
  [[L, L], [L, l], [l, o], [o, n]] -> [ [L, L] , [L, r] , [r, o] , [ o , n ] ] {- Semlab 4 (Concon 0 (Input 2)) -}
  [[L, L], [L, l], [l, o], [o, l]] -> [ [L, L] , [L, r] , [r, o] , [ o , l ] ] {- Semlab 4 (Concon 1 (Input 2)) -}
  [[L, L], [L, l], [l, o], [o, o]] -> [ [L, L] , [L, r] , [r, o] , [ o , o ] ] {- Semlab 4 (Concon 2 (Input 2)) -}
  [[L, L], [L, l], [l, o], [o, r]] -> [ [L, L] , [L, r] , [r, o] , [ o , r ] ] {- Semlab 4 (Concon 3 (Input 2)) -}
  [[L, L], [L, l], [l, o], [o, L]] -> [ [L, L] , [L, r] , [r, o] , [ o , L ] ] {- Semlab 4 (Concon 4 (Input 2)) -}
  [[L, L], [L, l], [l, o], [o, R]] -> [ [L, L] , [L, r] , [r, o] , [ o , R ] ] {- Semlab 4 (Concon 5 (Input 2)) -}
  [[R, L], [L, l], [l, o], [o, n]] -> [ [R, L] , [L, r] , [r, o] , [ o , n ] ] {- Semlab 5 (Concon 0 (Input 2)) -}
  [[R, L], [L, l], [l, o], [o, l]] -> [ [R, L] , [L, r] , [r, o] , [ o , l ] ] {- Semlab 5 (Concon 1 (Input 2)) -}
  [[R, L], [L, l], [l, o], [o, o]] -> [ [R, L] , [L, r] , [r, o] , [ o , o ] ] {- Semlab 5 (Concon 2 (Input 2)) -}
  [[R, L], [L, l], [l, o], [o, r]] -> [ [R, L] , [L, r] , [r, o] , [ o , r ] ] {- Semlab 5 (Concon 3 (Input 2)) -}
  [[R, L], [L, l], [l, o], [o, L]] -> [ [R, L] , [L, r] , [r, o] , [ o , L ] ] {- Semlab 5 (Concon 4 (Input 2)) -}
  [[R, L], [L, l], [l, o], [o, R]] -> [ [R, L] , [L, r] , [r, o] , [ o , R ] ] {- Semlab 5 (Concon 5 (Input 2)) -}
  [[n, o], [o, r], [r, n], [n, n]] -> [ [n, o] , [o, l] , [ l , n ] ] {- Semlab 0 (Concon 0 (Input 4)) -}
  [[n, o], [o, r], [r, n], [n, l]] -> [ [n, o] , [o, l] , [ l , l ] ] {- Semlab 0 (Concon 1 (Input 4)) -}
  [[n, o], [o, r], [r, n], [n, o]] -> [ [n, o] , [o, l] , [ l , o ] ] {- Semlab 0 (Concon 2 (Input 4)) -}
  [[n, o], [o, r], [r, n], [n, r]] -> [ [n, o] , [o, l] , [ l , r ] ] {- Semlab 0 (Concon 3 (Input 4)) -}
  [[n, o], [o, r], [r, n], [n, L]] -> [ [n, o] , [o, l] , [ l , L ] ] {- Semlab 0 (Concon 4 (Input 4)) -}
  [[n, o], [o, r], [r, n], [n, R]] -> [ [n, o] , [o, l] , [ l , R ] ] {- Semlab 0 (Concon 5 (Input 4)) -}
  [[l, o], [o, r], [r, n], [n, n]] -> [ [l, o] , [o, l] , [ l , n ] ] {- Semlab 1 (Concon 0 (Input 4)) -}
  [[l, o], [o, r], [r, n], [n, l]] -> [ [l, o] , [o, l] , [ l , l ] ] {- Semlab 1 (Concon 1 (Input 4)) -}
  [[l, o], [o, r], [r, n], [n, o]] -> [ [l, o] , [o, l] , [ l , o ] ] {- Semlab 1 (Concon 2 (Input 4)) -}
  [[l, o], [o, r], [r, n], [n, r]] -> [ [l, o] , [o, l] , [ l , r ] ] {- Semlab 1 (Concon 3 (Input 4)) -}
  [[l, o], [o, r], [r, n], [n, L]] -> [ [l, o] , [o, l] , [ l , L ] ] {- Semlab 1 (Concon 4 (Input 4)) -}
  [[l, o], [o, r], [r, n], [n, R]] -> [ [l, o] , [o, l] , [ l , R ] ] {- Semlab 1 (Concon 5 (Input 4)) -}
  [[o, o], [o, r], [r, n], [n, n]] -> [ [o, o] , [o, l] , [ l , n ] ] {- Semlab 2 (Concon 0 (Input 4)) -}
  [[o, o], [o, r], [r, n], [n, l]] -> [ [o, o] , [o, l] , [ l , l ] ] {- Semlab 2 (Concon 1 (Input 4)) -}
  [[o, o], [o, r], [r, n], [n, o]] -> [ [o, o] , [o, l] , [ l , o ] ] {- Semlab 2 (Concon 2 (Input 4)) -}
  [[o, o], [o, r], [r, n], [n, r]] -> [ [o, o] , [o, l] , [ l , r ] ] {- Semlab 2 (Concon 3 (Input 4)) -}
  [[o, o], [o, r], [r, n], [n, L]] -> [ [o, o] , [o, l] , [ l , L ] ] {- Semlab 2 (Concon 4 (Input 4)) -}
  [[o, o], [o, r], [r, n], [n, R]] -> [ [o, o] , [o, l] , [ l , R ] ] {- Semlab 2 (Concon 5 (Input 4)) -}
  [[r, o], [o, r], [r, n], [n, n]] -> [ [r, o] , [o, l] , [ l , n ] ] {- Semlab 3 (Concon 0 (Input 4)) -}
  [[r, o], [o, r], [r, n], [n, l]] -> [ [r, o] , [o, l] , [ l , l ] ] {- Semlab 3 (Concon 1 (Input 4)) -}
  [[r, o], [o, r], [r, n], [n, o]] -> [ [r, o] , [o, l] , [ l , o ] ] {- Semlab 3 (Concon 2 (Input 4)) -}
  [[r, o], [o, r], [r, n], [n, r]] -> [ [r, o] , [o, l] , [ l , r ] ] {- Semlab 3 (Concon 3 (Input 4)) -}
  [[r, o], [o, r], [r, n], [n, L]] -> [ [r, o] , [o, l] , [ l , L ] ] {- Semlab 3 (Concon 4 (Input 4)) -}
  [[r, o], [o, r], [r, n], [n, R]] -> [ [r, o] , [o, l] , [ l , R ] ] {- Semlab 3 (Concon 5 (Input 4)) -}
  [[L, o], [o, r], [r, n], [n, n]] -> [ [L, o] , [o, l] , [ l , n ] ] {- Semlab 4 (Concon 0 (Input 4)) -}
  [[L, o], [o, r], [r, n], [n, l]] -> [ [L, o] , [o, l] , [ l , l ] ] {- Semlab 4 (Concon 1 (Input 4)) -}
  [[L, o], [o, r], [r, n], [n, o]] -> [ [L, o] , [o, l] , [ l , o ] ] {- Semlab 4 (Concon 2 (Input 4)) -}
  [[L, o], [o, r], [r, n], [n, r]] -> [ [L, o] , [o, l] , [ l , r ] ] {- Semlab 4 (Concon 3 (Input 4)) -}
  [[L, o], [o, r], [r, n], [n, L]] -> [ [L, o] , [o, l] , [ l , L ] ] {- Semlab 4 (Concon 4 (Input 4)) -}
  [[L, o], [o, r], [r, n], [n, R]] -> [ [L, o] , [o, l] , [ l , R ] ] {- Semlab 4 (Concon 5 (Input 4)) -}
  [[R, o], [o, r], [r, n], [n, n]] -> [ [R, o] , [o, l] , [ l , n ] ] {- Semlab 5 (Concon 0 (Input 4)) -}
  [[R, o], [o, r], [r, n], [n, l]] -> [ [R, o] , [o, l] , [ l , l ] ] {- Semlab 5 (Concon 1 (Input 4)) -}
  [[R, o], [o, r], [r, n], [n, o]] -> [ [R, o] , [o, l] , [ l , o ] ] {- Semlab 5 (Concon 2 (Input 4)) -}
  [[R, o], [o, r], [r, n], [n, r]] -> [ [R, o] , [o, l] , [ l , r ] ] {- Semlab 5 (Concon 3 (Input 4)) -}
  [[R, o], [o, r], [r, n], [n, L]] -> [ [R, o] , [o, l] , [ l , L ] ] {- Semlab 5 (Concon 4 (Input 4)) -}
  [[R, o], [o, r], [r, n], [n, R]] -> [ [R, o] , [o, l] , [ l , R ] ] {- Semlab 5 (Concon 5 (Input 4)) -}
  [[n, o], [o, r], [r, R], [R, n]] -> [ [n, o] , [o, l] , [l, R] , [ R , n ] ] {- Semlab 0 (Concon 0 (Input 5)) -}
  [[n, o], [o, r], [r, R], [R, l]] -> [ [n, o] , [o, l] , [l, R] , [ R , l ] ] {- Semlab 0 (Concon 1 (Input 5)) -}
  [[n, o], [o, r], [r, R], [R, o]] -> [ [n, o] , [o, l] , [l, R] , [ R , o ] ] {- Semlab 0 (Concon 2 (Input 5)) -}
  [[n, o], [o, r], [r, R], [R, r]] -> [ [n, o] , [o, l] , [l, R] , [ R , r ] ] {- Semlab 0 (Concon 3 (Input 5)) -}
  [[n, o], [o, r], [r, R], [R, L]] -> [ [n, o] , [o, l] , [l, R] , [ R , L ] ] {- Semlab 0 (Concon 4 (Input 5)) -}
  [[n, o], [o, r], [r, R], [R, R]] -> [ [n, o] , [o, l] , [l, R] , [ R , R ] ] {- Semlab 0 (Concon 5 (Input 5)) -}
  [[l, o], [o, r], [r, R], [R, n]] -> [ [l, o] , [o, l] , [l, R] , [ R , n ] ] {- Semlab 1 (Concon 0 (Input 5)) -}
  [[l, o], [o, r], [r, R], [R, l]] -> [ [l, o] , [o, l] , [l, R] , [ R , l ] ] {- Semlab 1 (Concon 1 (Input 5)) -}
  [[l, o], [o, r], [r, R], [R, o]] -> [ [l, o] , [o, l] , [l, R] , [ R , o ] ] {- Semlab 1 (Concon 2 (Input 5)) -}
  [[l, o], [o, r], [r, R], [R, r]] -> [ [l, o] , [o, l] , [l, R] , [ R , r ] ] {- Semlab 1 (Concon 3 (Input 5)) -}
  [[l, o], [o, r], [r, R], [R, L]] -> [ [l, o] , [o, l] , [l, R] , [ R , L ] ] {- Semlab 1 (Concon 4 (Input 5)) -}
  [[l, o], [o, r], [r, R], [R, R]] -> [ [l, o] , [o, l] , [l, R] , [ R , R ] ] {- Semlab 1 (Concon 5 (Input 5)) -}
  [[o, o], [o, r], [r, R], [R, n]] -> [ [o, o] , [o, l] , [l, R] , [ R , n ] ] {- Semlab 2 (Concon 0 (Input 5)) -}
  [[o, o], [o, r], [r, R], [R, l]] -> [ [o, o] , [o, l] , [l, R] , [ R , l ] ] {- Semlab 2 (Concon 1 (Input 5)) -}
  [[o, o], [o, r], [r, R], [R, o]] -> [ [o, o] , [o, l] , [l, R] , [ R , o ] ] {- Semlab 2 (Concon 2 (Input 5)) -}
  [[o, o], [o, r], [r, R], [R, r]] -> [ [o, o] , [o, l] , [l, R] , [ R , r ] ] {- Semlab 2 (Concon 3 (Input 5)) -}
  [[o, o], [o, r], [r, R], [R, L]] -> [ [o, o] , [o, l] , [l, R] , [ R , L ] ] {- Semlab 2 (Concon 4 (Input 5)) -}
  [[o, o], [o, r], [r, R], [R, R]] -> [ [o, o] , [o, l] , [l, R] , [ R , R ] ] {- Semlab 2 (Concon 5 (Input 5)) -}
  [[r, o], [o, r], [r, R], [R, n]] -> [ [r, o] , [o, l] , [l, R] , [ R , n ] ] {- Semlab 3 (Concon 0 (Input 5)) -}
  [[r, o], [o, r], [r, R], [R, l]] -> [ [r, o] , [o, l] , [l, R] , [ R , l ] ] {- Semlab 3 (Concon 1 (Input 5)) -}
  [[r, o], [o, r], [r, R], [R, o]] -> [ [r, o] , [o, l] , [l, R] , [ R , o ] ] {- Semlab 3 (Concon 2 (Input 5)) -}
  [[r, o], [o, r], [r, R], [R, r]] -> [ [r, o] , [o, l] , [l, R] , [ R , r ] ] {- Semlab 3 (Concon 3 (Input 5)) -}
  [[r, o], [o, r], [r, R], [R, L]] -> [ [r, o] , [o, l] , [l, R] , [ R , L ] ] {- Semlab 3 (Concon 4 (Input 5)) -}
  [[r, o], [o, r], [r, R], [R, R]] -> [ [r, o] , [o, l] , [l, R] , [ R , R ] ] {- Semlab 3 (Concon 5 (Input 5)) -}
  [[L, o], [o, r], [r, R], [R, n]] -> [ [L, o] , [o, l] , [l, R] , [ R , n ] ] {- Semlab 4 (Concon 0 (Input 5)) -}
  [[L, o], [o, r], [r, R], [R, l]] -> [ [L, o] , [o, l] , [l, R] , [ R , l ] ] {- Semlab 4 (Concon 1 (Input 5)) -}
  [[L, o], [o, r], [r, R], [R, o]] -> [ [L, o] , [o, l] , [l, R] , [ R , o ] ] {- Semlab 4 (Concon 2 (Input 5)) -}
  [[L, o], [o, r], [r, R], [R, r]] -> [ [L, o] , [o, l] , [l, R] , [ R , r ] ] {- Semlab 4 (Concon 3 (Input 5)) -}
  [[L, o], [o, r], [r, R], [R, L]] -> [ [L, o] , [o, l] , [l, R] , [ R , L ] ] {- Semlab 4 (Concon 4 (Input 5)) -}
  [[L, o], [o, r], [r, R], [R, R]] -> [ [L, o] , [o, l] , [l, R] , [ R , R ] ] {- Semlab 4 (Concon 5 (Input 5)) -}
  [[R, o], [o, r], [r, R], [R, n]] -> [ [R, o] , [o, l] , [l, R] , [ R , n ] ] {- Semlab 5 (Concon 0 (Input 5)) -}
  [[R, o], [o, r], [r, R], [R, l]] -> [ [R, o] , [o, l] , [l, R] , [ R , l ] ] {- Semlab 5 (Concon 1 (Input 5)) -}
  [[R, o], [o, r], [r, R], [R, o]] -> [ [R, o] , [o, l] , [l, R] , [ R , o ] ] {- Semlab 5 (Concon 2 (Input 5)) -}
  [[R, o], [o, r], [r, R], [R, r]] -> [ [R, o] , [o, l] , [l, R] , [ R , r ] ] {- Semlab 5 (Concon 3 (Input 5)) -}
  [[R, o], [o, r], [r, R], [R, L]] -> [ [R, o] , [o, l] , [l, R] , [ R , L ] ] {- Semlab 5 (Concon 4 (Input 5)) -}
  [[R, o], [o, r], [r, R], [R, R]] -> [ [R, o] , [o, l] , [l, R] , [ R , R ] ] {- Semlab 5 (Concon 5 (Input 5)) -}
  [[n, L], [L, n]] ->= [ [n, L] , [L, n] , [n, n] ] {- Semlab 0 (Concon 0 (Input 6)) -}
  [[n, L], [L, l]] ->= [ [n, L] , [L, n] , [n, l] ] {- Semlab 0 (Concon 1 (Input 6)) -}
  [[n, L], [L, o]] ->= [ [n, L] , [L, n] , [n, o] ] {- Semlab 0 (Concon 2 (Input 6)) -}
  [[n, L], [L, r]] ->= [ [n, L] , [L, n] , [n, r] ] {- Semlab 0 (Concon 3 (Input 6)) -}
  [[n, L], [L, L]] ->= [ [n, L] , [L, n] , [n, L] ] {- Semlab 0 (Concon 4 (Input 6)) -}
  [[n, L], [L, R]] ->= [ [n, L] , [L, n] , [n, R] ] {- Semlab 0 (Concon 5 (Input 6)) -}
  [[l, L], [L, n]] ->= [ [l, L] , [L, n] , [n, n] ] {- Semlab 1 (Concon 0 (Input 6)) -}
  [[l, L], [L, l]] ->= [ [l, L] , [L, n] , [n, l] ] {- Semlab 1 (Concon 1 (Input 6)) -}
  [[l, L], [L, o]] ->= [ [l, L] , [L, n] , [n, o] ] {- Semlab 1 (Concon 2 (Input 6)) -}
  [[l, L], [L, r]] ->= [ [l, L] , [L, n] , [n, r] ] {- Semlab 1 (Concon 3 (Input 6)) -}
  [[l, L], [L, L]] ->= [ [l, L] , [L, n] , [n, L] ] {- Semlab 1 (Concon 4 (Input 6)) -}
  [[l, L], [L, R]] ->= [ [l, L] , [L, n] , [n, R] ] {- Semlab 1 (Concon 5 (Input 6)) -}
  [[o, L], [L, n]] ->= [ [o, L] , [L, n] , [n, n] ] {- Semlab 2 (Concon 0 (Input 6)) -}
  [[o, L], [L, l]] ->= [ [o, L] , [L, n] , [n, l] ] {- Semlab 2 (Concon 1 (Input 6)) -}
  [[o, L], [L, o]] ->= [ [o, L] , [L, n] , [n, o] ] {- Semlab 2 (Concon 2 (Input 6)) -}
  [[o, L], [L, r]] ->= [ [o, L] , [L, n] , [n, r] ] {- Semlab 2 (Concon 3 (Input 6)) -}
  [[o, L], [L, L]] ->= [ [o, L] , [L, n] , [n, L] ] {- Semlab 2 (Concon 4 (Input 6)) -}
  [[o, L], [L, R]] ->= [ [o, L] , [L, n] , [n, R] ] {- Semlab 2 (Concon 5 (Input 6)) -}
  [[r, L], [L, n]] ->= [ [r, L] , [L, n] , [n, n] ] {- Semlab 3 (Concon 0 (Input 6)) -}
  [[r, L], [L, l]] ->= [ [r, L] , [L, n] , [n, l] ] {- Semlab 3 (Concon 1 (Input 6)) -}
  [[r, L], [L, o]] ->= [ [r, L] , [L, n] , [n, o] ] {- Semlab 3 (Concon 2 (Input 6)) -}
  [[r, L], [L, r]] ->= [ [r, L] , [L, n] , [n, r] ] {- Semlab 3 (Concon 3 (Input 6)) -}
  [[r, L], [L, L]] ->= [ [r, L] , [L, n] , [n, L] ] {- Semlab 3 (Concon 4 (Input 6)) -}
  [[r, L], [L, R]] ->= [ [r, L] , [L, n] , [n, R] ] {- Semlab 3 (Concon 5 (Input 6)) -}
  [[L, L], [L, n]] ->= [ [L, L] , [L, n] , [n, n] ] {- Semlab 4 (Concon 0 (Input 6)) -}
  [[L, L], [L, l]] ->= [ [L, L] , [L, n] , [n, l] ] {- Semlab 4 (Concon 1 (Input 6)) -}
  [[L, L], [L, o]] ->= [ [L, L] , [L, n] , [n, o] ] {- Semlab 4 (Concon 2 (Input 6)) -}
  [[L, L], [L, r]] ->= [ [L, L] , [L, n] , [n, r] ] {- Semlab 4 (Concon 3 (Input 6)) -}
  [[L, L], [L, L]] ->= [ [L, L] , [L, n] , [n, L] ] {- Semlab 4 (Concon 4 (Input 6)) -}
  [[L, L], [L, R]] ->= [ [L, L] , [L, n] , [n, R] ] {- Semlab 4 (Concon 5 (Input 6)) -}
  [[R, L], [L, n]] ->= [ [R, L] , [L, n] , [n, n] ] {- Semlab 5 (Concon 0 (Input 6)) -}
  [[R, L], [L, l]] ->= [ [R, L] , [L, n] , [n, l] ] {- Semlab 5 (Concon 1 (Input 6)) -}
  [[R, L], [L, o]] ->= [ [R, L] , [L, n] , [n, o] ] {- Semlab 5 (Concon 2 (Input 6)) -}
  [[R, L], [L, r]] ->= [ [R, L] , [L, n] , [n, r] ] {- Semlab 5 (Concon 3 (Input 6)) -}
  [[R, L], [L, L]] ->= [ [R, L] , [L, n] , [n, L] ] {- Semlab 5 (Concon 4 (Input 6)) -}
  [[R, L], [L, R]] ->= [ [R, L] , [L, n] , [n, R] ] {- Semlab 5 (Concon 5 (Input 6)) -}
  [[n, R], [R, n]] ->= [ [n, n] , [n, R] , [R, n] ] {- Semlab 0 (Concon 0 (Input 7)) -}
  [[n, R], [R, l]] ->= [ [n, n] , [n, R] , [R, l] ] {- Semlab 0 (Concon 1 (Input 7)) -}
  [[n, R], [R, o]] ->= [ [n, n] , [n, R] , [R, o] ] {- Semlab 0 (Concon 2 (Input 7)) -}
  [[n, R], [R, r]] ->= [ [n, n] , [n, R] , [R, r] ] {- Semlab 0 (Concon 3 (Input 7)) -}
  [[n, R], [R, L]] ->= [ [n, n] , [n, R] , [R, L] ] {- Semlab 0 (Concon 4 (Input 7)) -}
  [[n, R], [R, R]] ->= [ [n, n] , [n, R] , [R, R] ] {- Semlab 0 (Concon 5 (Input 7)) -}
  [[l, R], [R, n]] ->= [ [l, n] , [n, R] , [R, n] ] {- Semlab 1 (Concon 0 (Input 7)) -}
  [[l, R], [R, l]] ->= [ [l, n] , [n, R] , [R, l] ] {- Semlab 1 (Concon 1 (Input 7)) -}
  [[l, R], [R, o]] ->= [ [l, n] , [n, R] , [R, o] ] {- Semlab 1 (Concon 2 (Input 7)) -}
  [[l, R], [R, r]] ->= [ [l, n] , [n, R] , [R, r] ] {- Semlab 1 (Concon 3 (Input 7)) -}
  [[l, R], [R, L]] ->= [ [l, n] , [n, R] , [R, L] ] {- Semlab 1 (Concon 4 (Input 7)) -}
  [[l, R], [R, R]] ->= [ [l, n] , [n, R] , [R, R] ] {- Semlab 1 (Concon 5 (Input 7)) -}
  [[o, R], [R, n]] ->= [ [o, n] , [n, R] , [R, n] ] {- Semlab 2 (Concon 0 (Input 7)) -}
  [[o, R], [R, l]] ->= [ [o, n] , [n, R] , [R, l] ] {- Semlab 2 (Concon 1 (Input 7)) -}
  [[o, R], [R, o]] ->= [ [o, n] , [n, R] , [R, o] ] {- Semlab 2 (Concon 2 (Input 7)) -}
  [[o, R], [R, r]] ->= [ [o, n] , [n, R] , [R, r] ] {- Semlab 2 (Concon 3 (Input 7)) -}
  [[o, R], [R, L]] ->= [ [o, n] , [n, R] , [R, L] ] {- Semlab 2 (Concon 4 (Input 7)) -}
  [[o, R], [R, R]] ->= [ [o, n] , [n, R] , [R, R] ] {- Semlab 2 (Concon 5 (Input 7)) -}
  [[r, R], [R, n]] ->= [ [r, n] , [n, R] , [R, n] ] {- Semlab 3 (Concon 0 (Input 7)) -}
  [[r, R], [R, l]] ->= [ [r, n] , [n, R] , [R, l] ] {- Semlab 3 (Concon 1 (Input 7)) -}
  [[r, R], [R, o]] ->= [ [r, n] , [n, R] , [R, o] ] {- Semlab 3 (Concon 2 (Input 7)) -}
  [[r, R], [R, r]] ->= [ [r, n] , [n, R] , [R, r] ] {- Semlab 3 (Concon 3 (Input 7)) -}
  [[r, R], [R, L]] ->= [ [r, n] , [n, R] , [R, L] ] {- Semlab 3 (Concon 4 (Input 7)) -}
  [[r, R], [R, R]] ->= [ [r, n] , [n, R] , [R, R] ] {- Semlab 3 (Concon 5 (Input 7)) -}
  [[L, R], [R, n]] ->= [ [L, n] , [n, R] , [R, n] ] {- Semlab 4 (Concon 0 (Input 7)) -}
  [[L, R], [R, l]] ->= [ [L, n] , [n, R] , [R, l] ] {- Semlab 4 (Concon 1 (Input 7)) -}
  [[L, R], [R, o]] ->= [ [L, n] , [n, R] , [R, o] ] {- Semlab 4 (Concon 2 (Input 7)) -}
  [[L, R], [R, r]] ->= [ [L, n] , [n, R] , [R, r] ] {- Semlab 4 (Concon 3 (Input 7)) -}
  [[L, R], [R, L]] ->= [ [L, n] , [n, R] , [R, L] ] {- Semlab 4 (Concon 4 (Input 7)) -}
  [[L, R], [R, R]] ->= [ [L, n] , [n, R] , [R, R] ] {- Semlab 4 (Concon 5 (Input 7)) -}
  [[R, R], [R, n]] ->= [ [R, n] , [n, R] , [R, n] ] {- Semlab 5 (Concon 0 (Input 7)) -}
  [[R, R], [R, l]] ->= [ [R, n] , [n, R] , [R, l] ] {- Semlab 5 (Concon 1 (Input 7)) -}
  [[R, R], [R, o]] ->= [ [R, n] , [n, R] , [R, o] ] {- Semlab 5 (Concon 2 (Input 7)) -}
  [[R, R], [R, r]] ->= [ [R, n] , [n, R] , [R, r] ] {- Semlab 5 (Concon 3 (Input 7)) -}
  [[R, R], [R, L]] ->= [ [R, n] , [n, R] , [R, L] ] {- Semlab 5 (Concon 4 (Input 7)) -}
  [[R, R], [R, R]] ->= [ [R, n] , [n, R] , [R, R] ] {- Semlab 5 (Concon 5 (Input 7)) -}
reason
  ([L, L], 3/1)
  ([L, n], 0/1)
  ([L, R], 3/1)
  ([L, l], 3/1)
  ([L, o], 3/1)
  ([L, r], 1/1)
  ([n, L], 2/1)
  ([n, n], 0/1)
  ([n, R], 0/1)
  ([n, l], 2/1)
  ([n, o], 2/1)
  ([n, r], 0/1)
  ([R, L], 0/1)
  ([R, n], 2/1)
  ([R, R], 3/1)
  ([R, l], 0/1)
  ([R, o], 0/1)
  ([R, r], 0/1)
  ([l, L], 0/1)
  ([l, n], 0/1)
  ([l, R], 1/1)
  ([l, l], 0/1)
  ([l, o], 0/1)
  ([l, r], 0/1)
  ([o, L], 0/1)
  ([o, n], 2/1)
  ([o, R], 3/1)
  ([o, l], 0/1)
  ([o, o], 0/1)
  ([o, r], 0/1)
  ([r, L], 0/1)
  ([r, n], 2/1)
  ([r, R], 3/1)
  ([r, o], 0/1)
  ([r, r], 0/1)
   property Termination
has value Just True
for SRS
  [[n, L], [L, n]] ->= [ [n, L] , [L, n] , [n, n] ] {- Semlab 0 (Concon 0 (Input 6)) -}
  [[l, L], [L, n]] ->= [ [l, L] , [L, n] , [n, n] ] {- Semlab 1 (Concon 0 (Input 6)) -}
  [[o, L], [L, n]] ->= [ [o, L] , [L, n] , [n, n] ] {- Semlab 2 (Concon 0 (Input 6)) -}
  [[r, L], [L, n]] ->= [ [r, L] , [L, n] , [n, n] ] {- Semlab 3 (Concon 0 (Input 6)) -}
  [[L, L], [L, n]] ->= [ [L, L] , [L, n] , [n, n] ] {- Semlab 4 (Concon 0 (Input 6)) -}
  [[R, L], [L, n]] ->= [ [R, L] , [L, n] , [n, n] ] {- Semlab 5 (Concon 0 (Input 6)) -}
  [[n, R], [R, n]] ->= [ [n, n] , [n, R] , [R, n] ] {- Semlab 0 (Concon 0 (Input 7)) -}
  [[n, R], [R, l]] ->= [ [n, n] , [n, R] , [R, l] ] {- Semlab 0 (Concon 1 (Input 7)) -}
  [[n, R], [R, o]] ->= [ [n, n] , [n, R] , [R, o] ] {- Semlab 0 (Concon 2 (Input 7)) -}
  [[n, R], [R, r]] ->= [ [n, n] , [n, R] , [R, r] ] {- Semlab 0 (Concon 3 (Input 7)) -}
  [[n, R], [R, L]] ->= [ [n, n] , [n, R] , [R, L] ] {- Semlab 0 (Concon 4 (Input 7)) -}
  [[n, R], [R, R]] ->= [ [n, n] , [n, R] , [R, R] ] {- Semlab 0 (Concon 5 (Input 7)) -}
reason
  no strict rules

**************************************************
skeleton: (6/2,6)\Weight(4/2,6)\TileAllAll{2}(144/72,35)\Weight(0/12,14)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************

**************************************************
   
