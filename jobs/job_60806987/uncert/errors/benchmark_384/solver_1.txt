[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 234 length 923
last 238 length 999
last 412 length 1691
CNF 238 vars 999 clauses
CNF 412 vars 1691 clauses
last 412 length 1691
CNF 412 vars 1691 clauses
last 238 length 999
CNF 238 vars 999 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2076, clauses: 7559
last 2076 length 7559
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2076, clauses: 7559
last 2076 length 7559
CNF 2076 vars 7559 clauses
CNF 2076 vars 7559 clauses
last 203 length 796
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3864, clauses: 15731
last 1002 length 4231
last 448 length 1813
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3864, clauses: 15731
last 562 length 2265
last 1002 length 4231
last 1193 length 4650
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2076, clauses: 7559, status: Unsatisfied, time: 0.257635543s
last 1970 length 7836
last 3908 length 15384
last 1970 length 7836
last 7193 length 29100
last 1193 length 4650
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2076, clauses: 7559, status: Unsatisfied, time: 0.496648465s
CNF 203 vars 796 clauses
last 3864 length 15731
CNF 1002 vars 4231 clauses
last 3864 length 15731
CNF 448 vars 1813 clauses
CNF 562 vars 2265 clauses
CNF 1193 vars 4650 clauses
CNF 1002 vars 4231 clauses
CNF 1970 vars 7836 clauses
CNF 3908 vars 15384 clauses
CNF 1970 vars 7836 clauses
CNF 1193 vars 4650 clauses
CNF 7193 vars 29100 clauses
CNF 3864 vars 15731 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1416, clauses: 5148
CNF 3864 vars 15731 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7527, clauses: 30671
last 1416 length 5148
last 7527 length 30671
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3864, clauses: 15731, status: Unsatisfied, time: 1.267785786s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3864, clauses: 15731, status: Unsatisfied, time: 1.256649065s
CNF 1416 vars 5148 clauses
CNF 7527 vars 30671 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6788, clauses: 25752
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1416, clauses: 5148, status: Unsatisfied, time: 0.455361731s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7527, clauses: 30671, status: Satisfied, time: 0.467797997s
last 6788 length 25752
CNF 6788 vars 25752 clauses
**************************************************
summary
**************************************************
SRS with 2 strict rulesMatrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6788, clauses: 25752, status: Unsatisfied, time: 1.553325311s
 and 2 weak rules on 3 letters       weights
SRS with 1 strict rules and 2 weak rules on 3 letters       mirror
SRS with 1 strict rules and 2 weak rules on 3 letters       context
SRS with 1 strict rules and 6 weak rules on 3 letters       mirror
SRS with 1 strict rules and 6 weak rules on 3 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, c] -> [a] {- Input 1 -}
  [] ->= [b, c] {- Input 2 -}
  [b, c] ->= [] {- Input 3 -}
reason
  (a, 1/1)
  (b, 0/1)
  (c, 0/1)
   property Termination
has value Just True
for SRS
  [a, c] -> [a] {- Input 1 -}
  [] ->= [b, c] {- Input 2 -}
  [b, c] ->= [] {- Input 3 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [c, a] -> [a] {- Mirror (Input 1) -}
  [] ->= [c, b] {- Mirror (Input 2) -}
  [c, b] ->= [] {- Mirror (Input 3) -}
reason
  context
   property Termination
has value Just True
for SRS
  [c, a] -> [a] {- Mirror (Input 1) -}
  [a] ->= [a, c, b] {- Mirror (Input 2) -}
  [b] ->= [b, c, b] {- Mirror (Input 2) -}
  [c] ->= [c, c, b] {- Mirror (Input 2) -}
  [a, c, b] ->= [a] {- Mirror (Input 3) -}
  [b, c, b] ->= [b] {- Mirror (Input 3) -}
  [c, c, b] ->= [c] {- Mirror (Input 3) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, c] -> [a] {- Input 1 -}
  [a] ->= [b, c, a] {- Input 2 -}
  [b] ->= [b, c, b] {- Input 2 -}
  [c] ->= [b, c, c] {- Input 2 -}
  [b, c, a] ->= [a] {- Input 3 -}
  [b, c, b] ->= [b] {- Input 3 -}
  [b, c, c] ->= [c] {- Input 3 -}
reason
  ( a
  , St  / 1A -2A 0A \
        | 1A 0A  0A |
        \ 1A 1A  0A / )
  ( b
  , St  / 0A -   -   \
        | 0A -2A -2A |
        \ 0A -1A -2A / )
  ( c
  , St  / 0A -  -  \
        | 1A 1A 1A |
        \ 2A 2A 1A / )
   property Termination
has value Just True
for SRS
  [a] ->= [b, c, a] {- Input 2 -}
  [b] ->= [b, c, b] {- Input 2 -}
  [c] ->= [b, c, c] {- Input 2 -}
  [b, c, a] ->= [a] {- Input 3 -}
  [b, c, b] ->= [b] {- Input 3 -}
  [b, c, c] ->= [c] {- Input 3 -}
reason
  no strict rules

**************************************************
skeleton: (2/2,3)\Weight\Mirror(1/2,3)\Context\Mirror(1/6,3)\Matrix{\ArcticBZ}{3}(0/6,3)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 2.117539747000
  min duration 0.015084102000
  total durat. 10.732601490000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 76}
    , self = 110
    , parent = Nothing
    , duration = 1.438370514000
    , status = Fail
    , start = 2025-09-04 08:27:27.939518924 UTC
    , finish = 2025-09-04 08:27:29.377889438 UTC
    , thread_cap_info = ("ThreadId 159", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 27}
    , self = 111
    , parent = Nothing
    , duration = 1.494038708000
    , status = Fail
    , start = 2025-09-04 08:27:27.923923541 UTC
    , finish = 2025-09-04 08:27:29.417962249 UTC
    , thread_cap_info = ("ThreadId 153", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 76}
    , self = 114
    , parent = Nothing
    , duration = 1.563311014000
    , status = Fail
    , start = 2025-09-04 08:27:27.953251837 UTC
    , finish = 2025-09-04 08:27:29.516562851 UTC
    , thread_cap_info = ("ThreadId 163", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 117}
    , self = 118
    , parent = Nothing
    , duration = 2.029788522000
    , status = Fail
    , start = 2025-09-04 08:27:28.012052459 UTC
    , finish = 2025-09-04 08:27:30.041840981 UTC
    , thread_cap_info = ("ThreadId 181", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 117}
    , self = 115
    , parent = Nothing
    , duration = 2.037170553000
    , status = Fail
    , start = 2025-09-04 08:27:27.963050367 UTC
    , finish = 2025-09-04 08:27:30.00022092 UTC
    , thread_cap_info = ("ThreadId 167", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 63
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 54
      , alphabet_size = 9
      , total_length = 369}
    , self = 119
    , parent = Nothing
    , duration = 2.117539747000
    , status = Fail
    , start = 2025-09-04 08:27:27.963075279 UTC
    , finish = 2025-09-04 08:27:30.080615026 UTC
    , thread_cap_info = ("ThreadId 172", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 2.042273821000
  min duration 0.029909640000
  total durat. 8.588911889000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 27}
    , self = 109
    , parent = Nothing
    , duration = 1.395058426000
    , status = Fail
    , start = 2025-09-04 08:27:27.933946964 UTC
    , finish = 2025-09-04 08:27:29.32900539 UTC
    , thread_cap_info = ("ThreadId 154", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 76}
    , self = 112
    , parent = Nothing
    , duration = 1.481367269000
    , status = Fail
    , start = 2025-09-04 08:27:27.953238043 UTC
    , finish = 2025-09-04 08:27:29.434605312 UTC
    , thread_cap_info = ("ThreadId 160", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 117}
    , self = 113
    , parent = Nothing
    , duration = 1.518553587000
    , status = Fail
    , start = 2025-09-04 08:27:27.963055355 UTC
    , finish = 2025-09-04 08:27:29.481608942 UTC
    , thread_cap_info = ("ThreadId 169", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 117}
    , self = 117
    , parent = Nothing
    , duration = 2.009014010000
    , status = Fail
    , start = 2025-09-04 08:27:28.032813823 UTC
    , finish = 2025-09-04 08:27:30.041827833 UTC
    , thread_cap_info = ("ThreadId 182", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 63
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 54
      , alphabet_size = 9
      , total_length = 369}
    , self = 116
    , parent = Nothing
    , duration = 2.042273821000
    , status = Fail
    , start = 2025-09-04 08:27:27.963079074 UTC
    , finish = 2025-09-04 08:27:30.005352895 UTC
    , thread_cap_info = ("ThreadId 174", 0, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.503445273000
  min duration 2.503445273000
  total durat. 2.503445273000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 27}
    , self = 123
    , parent = Nothing
    , duration = 2.503445273000
    , status = Success
    , start = 2025-09-04 08:27:29.32903433 UTC
    , finish = 2025-09-04 08:27:31.832479603 UTC
    , thread_cap_info = ("ThreadId 201", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.100991191000
  min duration 1.100991191000
  total durat. 1.100991191000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 27}
    , self = 125
    , parent = Nothing
    , duration = 1.100991191000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:27:30.852070589 UTC
    , finish = 2025-09-04 08:27:31.95306178 UTC
    , thread_cap_info = ("ThreadId 210", 0, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.399240298000
  min duration 1.399240298000
  total durat. 1.399240298000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 27}
    , self = 122
    , parent = Nothing
    , duration = 1.399240298000
    , status = Fail
    , start = 2025-09-04 08:27:29.434607832 UTC
    , finish = 2025-09-04 08:27:30.83384813 UTC
    , thread_cap_info = ("ThreadId 203", 0, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.977295060000
  min duration 2.803357171000
  total durat. 5.780652231000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 34}
    , self = 120
    , parent = Nothing
    , duration = 2.803357171000
    , status = Fail
    , start = 2025-09-04 08:27:27.751072159 UTC
    , finish = 2025-09-04 08:27:30.55442933 UTC
    , thread_cap_info = ("ThreadId 138", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 34}
    , self = 121
    , parent = Nothing
    , duration = 2.977295060000
    , status = Fail
    , start = 2025-09-04 08:27:27.658911001 UTC
    , finish = 2025-09-04 08:27:30.636206061 UTC
    , thread_cap_info = ("ThreadId 127", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.540934583000
  min duration 1.456187762000
  total durat. 2.997122345000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 34}
    , self = 107
    , parent = Nothing
    , duration = 1.456187762000
    , status = Fail
    , start = 2025-09-04 08:27:27.658910963 UTC
    , finish = 2025-09-04 08:27:29.115098725 UTC
    , thread_cap_info = ("ThreadId 126", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 34}
    , self = 108
    , parent = Nothing
    , duration = 1.540934583000
    , status = Fail
    , start = 2025-09-04 08:27:27.67201389 UTC
    , finish = 2025-09-04 08:27:29.212948473 UTC
    , thread_cap_info = ("ThreadId 125", 3, False)}
Fail : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 23
  max duration 0.504899849000
  min duration 0.000006701000
  total durat. 1.122882454000
**************************************************
E                                  Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                                  , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                                  = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                                  , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                                  = False}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 ,
E                                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length
E                                  = 4} , self = 83 , parent = Nothing , duration = 0.328823661000 , status
E                                  = Except "AsyncCancelled" , start = 2025-09-04 08:27:27.593793254 UTC ,
E                                  finish = 2025-09-04 08:27:27.922616915 UTC , thread_cap_info = ("ThreadId
E                                  20", 2, False)}
E                                  
| F                                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F                                , closure = Forward\n , start_strict_only = True\n , max_closure_length
| F                                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F                                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F                                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F                                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F                                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F                                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F                                = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 1 ,
| F                                num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 3 , total_length
| F                                = 7} , self = 102 , parent = Nothing , duration = 0.959819977000 , status
| F                                = Fail , start = 2025-09-04 08:27:27.615792144 UTC , finish = 2025-09-04
| F                                08:27:28.575612121 UTC , thread_cap_info = ("ThreadId 102", 0, False)}
| F                                
| | F                              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | F                              , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | F                              = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | F                              Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | F                              8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | F                              = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | F                              ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | F                              1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | F                              = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 1 ,
| | F                              num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 3 , total_length
| | F                              = 7} , self = 79 , parent = Nothing , duration = 0.170972339000 , status
| | F                              = Fail , start = 2025-09-04 08:27:27.636599736 UTC , finish = 2025-09-04
| | F                              08:27:27.807572075 UTC , thread_cap_info = ("ThreadId 103", 0, False)}
| | F                              
| | | F                            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                            = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | F                            = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | F                            = 34} , self = 76 , parent = Nothing , duration = 0.112735136000 , status
| | | F                            = Fail , start = 2025-09-04 08:27:27.637355822 UTC , finish = 2025-09-04
| | | F                            08:27:27.750090958 UTC , thread_cap_info = ("ThreadId 122", 3, False)}
| | | F                            
| | | | F                          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F                          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F                          = 10 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 ,
| | | | F                          alphabet_size = 4 , total_length = 34} , self = 107 , parent = Nothing
| | | | F                          , duration = 1.456187762000 , status = Fail , start = 2025-09-04 08:27:27.658910963
| | | | F                          UTC , finish = 2025-09-04 08:27:29.115098725 UTC , thread_cap_info = ("ThreadId
| | | | F                          126", 1, False)}
| | | | F                          
| | | | | F                        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | F                        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | F                        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | F                        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F                        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F                        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | F                        , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size
| | | | | F                        = 4 , total_length = 34} , self = 121 , parent = Nothing , duration = 2.977295060000
| | | | | F                        , status = Fail , start = 2025-09-04 08:27:27.658911001 UTC , finish =
| | | | | F                        2025-09-04 08:27:30.636206061 UTC , thread_cap_info = ("ThreadId 127",
| | | | | F                        3, False)}
| | | | | F                        
| | | | | | F                      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F                      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F                      = 10 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 ,
| | | | | | F                      alphabet_size = 4 , total_length = 34} , self = 108 , parent = Nothing
| | | | | | F                      , duration = 1.540934583000 , status = Fail , start = 2025-09-04 08:27:27.67201389
| | | | | | F                      UTC , finish = 2025-09-04 08:27:29.212948473 UTC , thread_cap_info = ("ThreadId
| | | | | | F                      125", 3, False)}
| | | | | | F                      
| | | F | | |                      
| | | F | | |                      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F | | |                      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F | | |                      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F | | |                      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F | | |                      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F | | |                      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | F | | |                      , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size
| | | F | | |                      = 4 , total_length = 34} , self = 120 , parent = Nothing , duration = 2.803357171000
| | | F | | |                      , status = Fail , start = 2025-09-04 08:27:27.751072159 UTC , finish =
| | | F | | |                      2025-09-04 08:27:30.55442933 UTC , thread_cap_info = ("ThreadId 138", 1,
| | | F | | |                      False)}
| | | F | | |                      
| | | | | | | F                    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | | F                    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | | F                    = Size { num_rules = 27 , num_strict_rules = 9 , num_top_rules = 0 , num_weak_rules
| | | | | | | F                    = 18 , alphabet_size = 9 , total_length = 117} , self = 86 , parent = Nothing
| | | | | | | F                    , duration = 0.166649670000 , status = Fail , start = 2025-09-04 08:27:27.756857614
| | | | | | | F                    UTC , finish = 2025-09-04 08:27:27.923507284 UTC , thread_cap_info = ("ThreadId
| | | | | | | F                    137", 0, False)}
| | | | | | | F                    
| | F | | | | |                    
| | S | | | | |                    Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | S | | | | |                    verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | S | | | | |                    = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | S | | | | |                    = 76} , self = 82 , parent = Nothing , duration = 0.114707258000 , status
| | S | | | | |                    = Success , start = 2025-09-04 08:27:27.807904263 UTC , finish = 2025-09-04
| | S | | | | |                    08:27:27.922611521 UTC , thread_cap_info = ("ThreadId 131", 0, False)}
| | S | | | | |                    
| | S | | | | |                    
E |   | | | | |                    
  |   | | | | F                    
F |   | | | |                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |   | | | |                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   | | | |                      = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
F |   | | | |                      = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 3 , total_length
F |   | | | |                      = 27} , self = 111 , parent = Nothing , duration = 1.494038708000 , status
F |   | | | |                      = Fail , start = 2025-09-04 08:27:27.923923541 UTC , finish = 2025-09-04
F |   | | | |                      08:27:29.417962249 UTC , thread_cap_info = ("ThreadId 153", 0, False)}
F |   | | | |                      
| | F | | | |                      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | |                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | |                      = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | F | | | |                      = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 3 , total_length
| | F | | | |                      = 27} , self = 109 , parent = Nothing , duration = 1.395058426000 , status
| | F | | | |                      = Fail , start = 2025-09-04 08:27:27.933946964 UTC , finish = 2025-09-04
| | F | | | |                      08:27:29.32900539 UTC , thread_cap_info = ("ThreadId 154", 0, False)}
| | F | | | |                      
| | | | | | | F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | | | | | F                    = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | | | | F                    = 76} , self = 110 , parent = Nothing , duration = 1.438370514000 , status
| | | | | | | F                    = Fail , start = 2025-09-04 08:27:27.939518924 UTC , finish = 2025-09-04
| | | | | | | F                    08:27:29.377889438 UTC , thread_cap_info = ("ThreadId 159", 0, False)}
| | | | | | | F                    
| | | | | | | | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | | | | | | F                  = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | | | | | F                  = 76} , self = 112 , parent = Nothing , duration = 1.481367269000 , status
| | | | | | | | F                  = Fail , start = 2025-09-04 08:27:27.953238043 UTC , finish = 2025-09-04
| | | | | | | | F                  08:27:29.434605312 UTC , thread_cap_info = ("ThreadId 160", 1, False)}
| | | | | | | | F                  
| | | | | | | | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | | | | | | | F                = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | | | | | | F                = 76} , self = 114 , parent = Nothing , duration = 1.563311014000 , status
| | | | | | | | | F                = Fail , start = 2025-09-04 08:27:27.953251837 UTC , finish = 2025-09-04
| | | | | | | | | F                08:27:29.516562851 UTC , thread_cap_info = ("ThreadId 163", 0, False)}
| | | | | | | | | F                
| | | | | | | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | | | F              = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | | | | | F              = 117} , self = 115 , parent = Nothing , duration = 2.037170553000 , status
| | | | | | | | | | F              = Fail , start = 2025-09-04 08:27:27.963050367 UTC , finish = 2025-09-04
| | | | | | | | | | F              08:27:30.00022092 UTC , thread_cap_info = ("ThreadId 167", 1, False)}
| | | | | | | | | | F              
| | | | | | | | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | | | | F            = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | | | | | | F            = 117} , self = 113 , parent = Nothing , duration = 1.518553587000 , status
| | | | | | | | | | | F            = Fail , start = 2025-09-04 08:27:27.963055355 UTC , finish = 2025-09-04
| | | | | | | | | | | F            08:27:29.481608942 UTC , thread_cap_info = ("ThreadId 169", 1, False)}
| | | | | | | | | | | F            
| | | | | | | | | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 63 , num_strict_rules
| | | | | | | | | | | | F          = 9 , num_top_rules = 0 , num_weak_rules = 54 , alphabet_size = 9 , total_length
| | | | | | | | | | | | F          = 369} , self = 119 , parent = Nothing , duration = 2.117539747000 , status
| | | | | | | | | | | | F          = Fail , start = 2025-09-04 08:27:27.963075279 UTC , finish = 2025-09-04
| | | | | | | | | | | | F          08:27:30.080615026 UTC , thread_cap_info = ("ThreadId 172", 0, False)}
| | | | | | | | | | | | F          
| | | | | | | | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 63 , num_strict_rules
| | | | | | | | | | | | | F        = 9 , num_top_rules = 0 , num_weak_rules = 54 , alphabet_size = 9 , total_length
| | | | | | | | | | | | | F        = 369} , self = 116 , parent = Nothing , duration = 2.042273821000 , status
| | | | | | | | | | | | | F        = Fail , start = 2025-09-04 08:27:27.963079074 UTC , finish = 2025-09-04
| | | | | | | | | | | | | F        08:27:30.005352895 UTC , thread_cap_info = ("ThreadId 174", 0, False)}
| | | | | | | | | | | | | F        
| | | | | | | | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | | | | | | | F      = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | | | | | | | | | F      = 117} , self = 118 , parent = Nothing , duration = 2.029788522000 , status
| | | | | | | | | | | | | | F      = Fail , start = 2025-09-04 08:27:28.012052459 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | F      08:27:30.041840981 UTC , thread_cap_info = ("ThreadId 181", 0, False)}
| | | | | | | | | | | | | | F      
| | | | | | | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | | | | | | | | F    = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | | | | | | | | | | F    = 117} , self = 117 , parent = Nothing , duration = 2.009014010000 , status
| | | | | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:27:28.032813823 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | F    08:27:30.041827833 UTC , thread_cap_info = ("ThreadId 182", 1, False)}
| | | | | | | | | | | | | | | F    
| | | | | | | | | | | | | | | | S  Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | | | | | | | | | | | | | | S  , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | | | | | | | | | | | | | | S  , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | | | | | | | | | | | | | | S  = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | | | | | | | | | | | | | | S  , cpf = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | | | | | | | | | S  = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | | | | | | | | | | | S  = 117} , self = 101 , parent = Nothing , duration = 0.151749863000 , status
| | | | | | | | | | | | | | | | S  = Success , start = 2025-09-04 08:27:28.055293326 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | | S  08:27:28.207043189 UTC , thread_cap_info = ("ThreadId 183", 1, False)}
| | | | | | | | | | | | | | | | S  
| | | | | | | | | | | | | | | | S  
| | | | | | | | | | | | | | | | F  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | | | | | | | | | | | F  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | | | | | | | | | | | F  = Size { num_rules = 2187 , num_strict_rules = 729 , num_top_rules = 0
| | | | | | | | | | | | | | | | F  , num_weak_rules = 1458 , alphabet_size = 81 , total_length = 13851} ,
| | | | | | | | | | | | | | | | F  self = 103 , parent = Nothing , duration = 0.388934628000 , status = Fail
| | | | | | | | | | | | | | | | F  , start = 2025-09-04 08:27:28.207068028 UTC , finish = 2025-09-04 08:27:28.596002656
| | | | | | | | | | | | | | | | F  UTC , thread_cap_info = ("ThreadId 184", 1, False)}
| | | | | | | | | | | | | | | | F  
| F | | | | | | | | | | | | | | |  
|   | | | | | | | | | | | | | | F  
| F | | | | | | | | | | | | | |    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| F | | | | | | | | | | | | | |    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| F | | | | | | | | | | | | | |    = Size { num_rules = 2187 , num_strict_rules = 729 , num_top_rules = 0
| F | | | | | | | | | | | | | |    , num_weak_rules = 1458 , alphabet_size = 81 , total_length = 13851} ,
| F | | | | | | | | | | | | | |    self = 105 , parent = Nothing , duration = 0.504899849000 , status = Fail
| F | | | | | | | | | | | | | |    , start = 2025-09-04 08:27:28.596441894 UTC , finish = 2025-09-04 08:27:29.101341743
| F | | | | | | | | | | | | | |    UTC , thread_cap_info = ("ThreadId 187", 1, False)}
| F | | | | | | | | | | | | | |    
| F | | | | | | | | | | | | | |    
|   | | F | | | | | | | | | | |    
|   | |   | F | | | | | | | | |    
|   F |   |   | | | | | | | | |    
| S   |   |   | | | | | | | | |    Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| S   |   |   | | | | | | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S   |   |   | | | | | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S   |   |   | | | | | | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S   |   |   | | | | | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S   |   |   | | | | | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| S   |   |   | | | | | | | | |    , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| S   |   |   | | | | | | | | |    = 3 , total_length = 27} , self = 123 , parent = Nothing , duration = 2.503445273000
| S   |   |   | | | | | | | | |    , status = Success , start = 2025-09-04 08:27:29.32903433 UTC , finish
| S   |   |   | | | | | | | | |    = 2025-09-04 08:27:31.832479603 UTC , thread_cap_info = ("ThreadId 201",
| S   |   |   | | | | | | | | |    0, False)}
| S   |   |   | | | | | | | | |    
| |   |   |   F | | | | | | | |    
F |   |   |     | | | | | | | |    
  |   |   |     F | | | | | | |    
F |   |   |       | | | | | | |    Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
F |   |   |       | | | | | | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F |   |   |       | | | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F |   |   |       | | | | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F |   |   |       | | | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F |   |   |       | | | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
F |   |   |       | | | | | | |    , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
F |   |   |       | | | | | | |    = 3 , total_length = 27} , self = 122 , parent = Nothing , duration = 1.399240298000
F |   |   |       | | | | | | |    , status = Fail , start = 2025-09-04 08:27:29.434607832 UTC , finish =
F |   |   |       | | | | | | |    2025-09-04 08:27:30.83384813 UTC , thread_cap_info = ("ThreadId 203", 0,
F |   |   |       | | | | | | |    False)}
F |   |   |       | | | | | | |    
| |   |   |       | | F | | | |    
| |   |   |       F |   | | | |    
| |   |   |         F   | | | |    
| |   |   |             | F | |    
| |   |   |             |   | F    
| |   |   |             |   F      
| |   |   |             F          
| |   F   |                        
| |       F                        
F |                                
E |                                Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E |                                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E |                                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E |                                , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E |                                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E |                                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
E |                                , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
E |                                = 3 , total_length = 27} , self = 125 , parent = Nothing , duration = 1.100991191000
E |                                , status = Except "AsyncCancelled" , start = 2025-09-04 08:27:30.852070589
E |                                UTC , finish = 2025-09-04 08:27:31.95306178 UTC , thread_cap_info = ("ThreadId
E |                                210", 0, False)}
E |                                
| S                                
E                                  
