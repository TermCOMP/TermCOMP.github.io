last 10624 length 44869
last 832 length 3385
CNF 832 vars 3385 clauses
CNF 10624 vars 44869 clauses
last 924 length 3729
CNF 924 vars 3729 clauses
last 11436 length 48954
CNF 11436 vars 48954 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2738, clauses: 9825
last 2738 length 9825
last 1400 length 5721
CNF 2738 vars 9825 clauses
CNF 1400 vars 5721 clauses
last 1642 length 6655
CNF 1642 vars 6655 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4769, clauses: 17526
last 4769 length 17526
CNF 4769 vars 17526 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2738, clauses: 9825, status: Unsatisfied, time: 0.260684136s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4769, clauses: 17526, status: Satisfied, time: 0.119571213s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11052, clauses: 46353
last 11052 length 46353
CNF 11052 vars 46353 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6684, clauses: 27318
last 6684 length 27318
CNF 6684 vars 27318 clauses
last 1480 length 5995
last 1290 length 5273
CNF 1290 vars 5273 clauses
CNF 1480 vars 5995 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4360, clauses: 15970
last 4360 length 15970
CNF 4360 vars 15970 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4360, clauses: 15970, status: Satisfied, time: 0.277512508s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11052, clauses: 46353, status: Satisfied, time: 0.520807576s
last 1192 length 4923
CNF 1192 vars 4923 clauses
last 1456 length 5857
CNF 1456 vars 5857 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4038, clauses: 14663
last 4038 length 14663
CNF 4038 vars 14663 clauses
**************************************************
summary
**************************************************
SRS with 4 strict rules and 2 weak rules on 3 letters       strictify
SRS with 6 rules on 3 letters       DP
SRS with 18 strict rules and 6 weak rules on 6 letters       weights
SRS with 4 strict rules and 6 weak rules on 5 letters       EDG
SRS with 1 strict rules and 6 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, c, a] -> [a, a, c] {- Input 0 -}
  [c, b, b] -> [b, b, a] {- Input 1 -}
  [a, c, c] -> [a, a, a] {- Input 2 -}
  [c, c, a] -> [a, a, b] {- Input 3 -}
  [a, c, a] ->= [b, a, c] {- Input 4 -}
  [a, b, a] ->= [a, c, b] {- Input 5 -}
reason
  strictify
   property Termination
has value Just True
for SRS
  [b, c, a] -> [a, a, c] {- Input 0 -}
  [c, b, b] -> [b, b, a] {- Input 1 -}
  [a, c, c] -> [a, a, a] {- Input 2 -}
  [c, c, a] -> [a, a, b] {- Input 3 -}
  [a, c, a] -> [b, a, c] {- Strictified (Input 4) -}
  [a, b, a] -> [a, c, b] {- Strictified (Input 5) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, c, a] ->= [a, a, c] {- DP Nontop (Input 0) -}
  [c, b, b] ->= [b, b, a] {- DP Nontop (Input 1) -}
  [a, c, c] ->= [a, a, a] {- DP Nontop (Input 2) -}
  [c, c, a] ->= [a, a, b] {- DP Nontop (Input 3) -}
  [a, c, a] ->= [b, a, c] {- DP Nontop (Strictified (Input 4)) -}
  [a, b, a] ->= [a, c, b] {- DP Nontop (Strictified (Input 5)) -}
  [a#, b, a] |-> [a#, c, b] {- DP (Top 0) (Strictified (Input 5)) -}
  [a#, b, a] |-> [b#] {- DP (Top 2) (Strictified (Input 5)) -}
  [a#, b, a] |-> [c#, b] {- DP (Top 1) (Strictified (Input 5)) -}
  [a#, c, a] |-> [a#, c] {- DP (Top 1) (Strictified (Input 4)) -}
  [a#, c, a] |-> [b#, a, c] {- DP (Top 0) (Strictified (Input 4)) -}
  [a#, c, a] |-> [c#] {- DP (Top 2) (Strictified (Input 4)) -}
  [a#, c, c] |-> [a#] {- DP (Top 2) (Input 2) -}
  [a#, c, c] |-> [a#, a] {- DP (Top 1) (Input 2) -}
  [a#, c, c] |-> [a#, a, a] {- DP (Top 0) (Input 2) -}
  [b#, c, a] |-> [a#, a, c] {- DP (Top 0) (Input 0) -}
  [b#, c, a] |-> [a#, c] {- DP (Top 1) (Input 0) -}
  [b#, c, a] |-> [c#] {- DP (Top 2) (Input 0) -}
  [c#, b, b] |-> [a#] {- DP (Top 2) (Input 1) -}
  [c#, b, b] |-> [b#, a] {- DP (Top 1) (Input 1) -}
  [c#, b, b] |-> [b#, b, a] {- DP (Top 0) (Input 1) -}
  [c#, c, a] |-> [a#, a, b] {- DP (Top 0) (Input 3) -}
  [c#, c, a] |-> [a#, b] {- DP (Top 1) (Input 3) -}
  [c#, c, a] |-> [b#] {- DP (Top 2) (Input 3) -}
reason
  (a, 3/1)
  (b, 3/1)
  (c, 3/1)
  (a#, 1/1)
  (b#, 1/1)
  (c#, 2/1)
   property Termination
has value Just True
for SRS
  [b, c, a] ->= [a, a, c] {- DP Nontop (Input 0) -}
  [c, b, b] ->= [b, b, a] {- DP Nontop (Input 1) -}
  [a, c, c] ->= [a, a, a] {- DP Nontop (Input 2) -}
  [c, c, a] ->= [a, a, b] {- DP Nontop (Input 3) -}
  [a, c, a] ->= [b, a, c] {- DP Nontop (Strictified (Input 4)) -}
  [a, b, a] ->= [a, c, b] {- DP Nontop (Strictified (Input 5)) -}
  [a#, b, a] |-> [a#, c, b] {- DP (Top 0) (Strictified (Input 5)) -}
  [a#, c, a] |-> [b#, a, c] {- DP (Top 0) (Strictified (Input 4)) -}
  [a#, c, c] |-> [a#, a, a] {- DP (Top 0) (Input 2) -}
  [b#, c, a] |-> [a#, a, c] {- DP (Top 0) (Input 0) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, a] |-> [a#, c, b] {- DP (Top 0) (Strictified (Input 5)) -}
  [b, c, a] ->= [a, a, c] {- DP Nontop (Input 0) -}
  [c, b, b] ->= [b, b, a] {- DP Nontop (Input 1) -}
  [a, c, c] ->= [a, a, a] {- DP Nontop (Input 2) -}
  [c, c, a] ->= [a, a, b] {- DP Nontop (Input 3) -}
  [a, c, a] ->= [b, a, c] {- DP Nontop (Strictified (Input 4)) -}
  [a, b, a] ->= [a, c, b] {- DP Nontop (Strictified (Input 5)) -}
reason
  ( a
  , Wk  / - - 2A  \
        | - - -1A |
        \ - - 0A  / )
  ( b
  , Wk  / -1A 0A 0A  \
        | -   -  -1A |
        \ -   -  0A  / )
  ( c
  , Wk  / - 0A 0A \
        | - -  2A |
        \ - -  0A / )
  ( a#
  , Wk  / 0A -2A -  \
        | -  -   -  |
        \ -  -   0A / )
   property Termination
has value Just True
for SRS
  [b, c, a] ->= [a, a, c] {- DP Nontop (Input 0) -}
  [c, b, b] ->= [b, b, a] {- DP Nontop (Input 1) -}
  [a, c, c] ->= [a, a, a] {- DP Nontop (Input 2) -}
  [c, c, a] ->= [a, a, b] {- DP Nontop (Input 3) -}
  [a, c, a] ->= [b, a, c] {- DP Nontop (Strictified (Input 4)) -}
  [a, b, a] ->= [a, c, b] {- DP Nontop (Strictified (Input 5)) -}
reason
  EDG

**************************************************
skeleton: (4/2,3)\Strictify(6,3)\Deepee(18/6,6)\Weight(4/6,5)\EDG(1/6,4)\Matrix{\ArcticBZ}{3}(0/6,3)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 1.351167257000
  min duration 0.012809212000
  total durat. 1.583286808000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 54
      , num_strict_rules = 54
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 432}
    , self = 86
    , parent = Nothing
    , duration = 1.351167257000
    , status = Fail
    , start = 2025-09-04 08:20:43.538488362 UTC
    , finish = 2025-09-04 08:20:44.889655619 UTC
    , thread_cap_info = ("ThreadId 53", 2, False)}
**************************************************
F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F              = Size { num_rules = 54 , num_strict_rules = 54 , num_top_rules = 0 , num_weak_rules
F              = 0 , alphabet_size = 9 , total_length = 432} , self = 86 , parent = Nothing
F              , duration = 1.351167257000 , status = Fail , start = 2025-09-04 08:20:43.538488362
F              UTC , finish = 2025-09-04 08:20:44.889655619 UTC , thread_cap_info = ("ThreadId
F              53", 2, False)}
F              
| F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F            = Size { num_rules = 54 , num_strict_rules = 54 , num_top_rules = 0 , num_weak_rules
| F            = 0 , alphabet_size = 9 , total_length = 432} , self = 34 , parent = Nothing
| F            , duration = 0.124053819000 , status = Fail , start = 2025-09-04 08:20:43.549892496
| F            UTC , finish = 2025-09-04 08:20:43.673946315 UTC , thread_cap_info = ("ThreadId
| F            55", 2, False)}
| F            
| | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F          = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| | F          = 54 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F          = 432} , self = 60 , parent = Nothing , duration = 0.341724622000 , status
| | F          = Fail , start = 2025-09-04 08:20:43.60973212 UTC , finish = 2025-09-04
| | F          08:20:43.951456742 UTC , thread_cap_info = ("ThreadId 65", 1, False)}
| | F          
| | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| | | F        = 54 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F        = 432} , self = 63 , parent = Nothing , duration = 0.336994976000 , status
| | | F        = Fail , start = 2025-09-04 08:20:43.634136439 UTC , finish = 2025-09-04
| | | F        08:20:43.971131415 UTC , thread_cap_info = ("ThreadId 67", 1, False)}
| | | F        
| F | |        
| F | |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | |        = 7 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| F | |        = 4 , total_length = 42} , self = 67 , parent = Nothing , duration = 0.283242678000
| F | |        , status = Fail , start = 2025-09-04 08:20:43.930596983 UTC , finish =
| F | |        2025-09-04 08:20:44.213839661 UTC , thread_cap_info = ("ThreadId 97", 3,
| F | |        False)}
| F | |        
| | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | F      = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size = 6 , total_length
| | | | F      = 72} , self = 64 , parent = Nothing , duration = 0.123443758000 , status
| | | | F      = Fail , start = 2025-09-04 08:20:43.951383243 UTC , finish = 2025-09-04
| | | | F      08:20:44.074827001 UTC , thread_cap_info = ("ThreadId 99", 3, False)}
| | | | F      
| | | | | S    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | S    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | S    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | S    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | S    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| | | | | S    = 4 , total_length = 42} , self = 84 , parent = Nothing , duration = 0.919749656000
| | | | | S    , status = Success , start = 2025-09-04 08:20:43.951395125 UTC , finish
| | | | | S    = 2025-09-04 08:20:44.871144781 UTC , thread_cap_info = ("ThreadId 100",
| | | | | S    3, False)}
| | | | | S    
| | F | | |    
| | F | | |    Info { what = "Matchbound\n { method = RFC\n , implementation = Approximate
| | F | | |    { at_bound = Merge}\n , cpf_state_encoding = Encoding { base = 10, order
| | F | | |    = MSB_First}\n , max_size = Nothing\n , max_height = Just 6\n , initial
| | F | | |    = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf
| | F | | |    = False}" , input_size = Size { num_rules = 6 , num_strict_rules = 6 ,
| | F | | |    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | F | | |    = 36} , self = 65 , parent = Nothing , duration = 0.142267576000 , status
| | F | | |    = Fail , start = 2025-09-04 08:20:43.959988492 UTC , finish = 2025-09-04
| | F | | |    08:20:44.102256068 UTC , thread_cap_info = ("ThreadId 103", 1, False)}
| | F | | |    
| | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | F  = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size = 6 , total_length
| | | | | | F  = 72} , self = 66 , parent = Nothing , duration = 0.208133209000 , status
| | | | | | F  = Fail , start = 2025-09-04 08:20:43.964489814 UTC , finish = 2025-09-04
| | | | | | F  08:20:44.172623023 UTC , thread_cap_info = ("ThreadId 101", 3, False)}
| | | | | | F  
| | | F | | |  
| | |   F | |  
| | F     | |  
| | S     | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S     | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S     | |  = 12 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 6 ,
| | S     | |  alphabet_size = 6 , total_length = 72} , self = 68 , parent = Nothing ,
| | S     | |  duration = 0.185084020000 , status = Success , start = 2025-09-04 08:20:44.115349991
| | S     | |  UTC , finish = 2025-09-04 08:20:44.300434011 UTC , thread_cap_info = ("ThreadId
| | S     | |  108", 0, False)}
| | S     | |  
| | |     | F  
| | | E   |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E   |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | E   |    , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size
| | | E   |    = 6 , total_length = 72} , self = 70 , parent = Nothing , duration = 0.153063079000
| | | E   |    , status = Except "AsyncCancelled" , start = 2025-09-04 08:20:44.176683292
| | | E   |    UTC , finish = 2025-09-04 08:20:44.329746371 UTC , thread_cap_info = ("ThreadId
| | | E   |    109", 0, False)}
| | | E   |    
| F | |   |    
|   S |   |    
| E   |   |    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E   |   |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E   |   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E   |   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E   |   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E   |   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| E   |   |    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| E   |   |    = 4 , total_length = 42} , self = 93 , parent = Nothing , duration = 0.605822174000
| E   |   |    , status = Except "AsyncCancelled" , start = 2025-09-04 08:20:44.309868459
| E   |   |    UTC , finish = 2025-09-04 08:20:44.915690633 UTC , thread_cap_info = ("ThreadId
| E   |   |    111", 3, False)}
| E   |   |    
| |   E   |    
| | S     |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S     |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S     |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S     |    = 11 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 6 ,
| | S     |    alphabet_size = 6 , total_length = 66} , self = 77 , parent = Nothing ,
| | S     |    duration = 0.389353536000 , status = Success , start = 2025-09-04 08:20:44.430854189
| | S     |    UTC , finish = 2025-09-04 08:20:44.820207725 UTC , thread_cap_info = ("ThreadId
| | S     |    122", 3, False)}
| | S     |    
| | | E   |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E   |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | E   |    , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 6 , alphabet_size
| | | E   |    = 6 , total_length = 66} , self = 79 , parent = Nothing , duration = 0.381548492000
| | | E   |    , status = Except "AsyncCancelled" , start = 2025-09-04 08:20:44.473907837
| | | E   |    UTC , finish = 2025-09-04 08:20:44.855456329 UTC , thread_cap_info = ("ThreadId
| | | E   |    123", 3, False)}
| | | E   |    
| | S |   |    
| |   E   |    
| |       S    
F |            
  E            
