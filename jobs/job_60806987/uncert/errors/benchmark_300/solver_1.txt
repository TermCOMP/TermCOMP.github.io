[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 378 length 1829
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
CNF 378 vars 1829 clauses
last 356 length 1749
CNF 356 vars 1749 clauses
last 757 length 3734
last 1461 length 7475
CNF 1461 vars 7475 clauses
last 1473 length 8463
CNF 1473 vars 8463 clauses
last 1125 length 6829
CNF 757 vars 3734 clauses
last 1035 length 5363
last 707 length 3446
CNF 1125 vars 6829 clauses
CNF 1035 vars 5363 clauses
CNF 707 vars 3446 clauses
last 1102 length 5719
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4659, clauses: 17771
last 1239 length 5952
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3364, clauses: 12451
last 494 length 2209
last 583 length 2794
last 551 length 2528
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9475, clauses: 39148
last 790 length 3719
last 551 length 2528
last 583 length 2794
last 1691 length 8071
last 2681 length 13168
CNF 1102 vars 5719 clauses
last 7273 length 36370
last 9119 length 43783
last 4659 length 17771
last 3364 length 12451
CNF 1239 vars 5952 clauses
CNF 494 vars 2209 clauses
CNF 551 vars 2528 clauses
last 9475 length 39148
CNF 583 vars 2794 clauses
CNF 551 vars 2528 clauses
CNF 790 vars 3719 clauses
CNF 583 vars 2794 clauses
CNF 1691 vars 8071 clauses
CNF 2681 vars 13168 clauses
CNF 7273 vars 36370 clauses
CNF 9119 vars 43783 clauses
CNF 4659 vars 17771 clauses
CNF 3364 vars 12451 clauses
CNF 9475 vars 39148 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2254, clauses: 8655
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11080, clauses: 46161
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1710, clauses: 6793
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15178, clauses: 62879
last 2254 length 8655
last 11080 length 46161
last 1710 length 6793
last 15178 length 62879
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3364, clauses: 12451, status: Unsatisfied, time: 0.415347521s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9475, clauses: 39148, status: Unsatisfied, time: 0.419912537s
CNF 1710 vars 6793 clauses
CNF 15178 vars 62879 clauses
CNF 11080 vars 46161 clauses
CNF 2254 vars 8655 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1710, clauses: 6793, status: Unsatisfied, time: 0.067806823s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2254, clauses: 8655, status: Satisfied, time: 0.101719697s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4659, clauses: 17771, status: Unsatisfied, time: 0.52742956s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11080, clauses: 46161, status: Satisfied, time: 0.101424125s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 8 weak rules on 4 letters       weights
SRS with 1 strict rules and 6 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, b, b, a] -> [] {- Input 0 -}
  [] ->= [a] {- Input 1 -}
  [] ->= [a, a, b, a] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [[a, a], [a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [[a, a], [a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [[b, a], [a, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [[b, a], [a, b]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 1/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [[a, a], [a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [[a, a], [a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [[b, a], [a, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 0 0 \
                | 0 4 3 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 5 0 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 7 3 \
                | 0 0 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[a, a]] ->= [[a, a], [a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [[a, a], [a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [[b, a], [a, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
reason
  no strict rules

**************************************************
skeleton: (1/2,2)\TileAllAll{2}(4/8,4)\Weight(1/6,4)\Matrix{\Natural}{3}(0/6,3)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 0.563452405000
  min duration 0.014955009000
  total durat. 3.044053120000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 0.544290114000
  min duration 0.012270543000
  total durat. 2.349878472000
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.811381809000
  min duration 0.729010389000
  total durat. 1.540392198000
**************************************************
F                              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                              = False}" , input_size = Size { num_rules = 3 , num_strict_rules = 1 ,
F                              num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 2 , total_length
F                              = 10} , self = 105 , parent = Nothing , duration = 0.169530925000 , status
F                              = Fail , start = 2025-09-04 08:23:47.251337037 UTC , finish = 2025-09-04
F                              08:23:47.420867962 UTC , thread_cap_info = ("ThreadId 101", 3, False)}
F                              
| F                            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                            = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| F                            = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| F                            = 58} , self = 106 , parent = Nothing , duration = 0.170893509000 , status
| F                            = Fail , start = 2025-09-04 08:23:47.251700638 UTC , finish = 2025-09-04
| F                            08:23:47.422594147 UTC , thread_cap_info = ("ThreadId 125", 1, False)}
| F                            
| | F                          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | F                          , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | F                          = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | F                          Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | F                          8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | F                          = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | F                          ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | F                          1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | F                          = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 1 ,
| | F                          num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 2 , total_length
| | F                          = 10} , self = 109 , parent = Nothing , duration = 0.213456186000 , status
| | F                          = Fail , start = 2025-09-04 08:23:47.260274345 UTC , finish = 2025-09-04
| | F                          08:23:47.473730531 UTC , thread_cap_info = ("ThreadId 117", 3, False)}
| | F                          
| | | F                        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                        = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | F                        = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | F                        = 58} , self = 99 , parent = Nothing , duration = 0.133462531000 , status
| | | F                        = Fail , start = 2025-09-04 08:23:47.266196693 UTC , finish = 2025-09-04
| | | F                        08:23:47.399659224 UTC , thread_cap_info = ("ThreadId 134", 1, False)}
| | | F                        
| | | | F                      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F                      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F                      = 22 , num_strict_rules = 16 , num_top_rules = 16 , num_weak_rules = 6
| | | | F                      , alphabet_size = 6 , total_length = 90} , self = 127 , parent = Nothing
| | | | F                      , duration = 0.811381809000 , status = Fail , start = 2025-09-04 08:23:47.281791895
| | | | F                      UTC , finish = 2025-09-04 08:23:48.093173704 UTC , thread_cap_info = ("ThreadId
| | | | F                      138", 0, False)}
| | | | F                      
| | | | | F                    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | F                    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | F                    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | F                    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F                    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F                    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 22
| | | | | F                    , num_strict_rules = 16 , num_top_rules = 16 , num_weak_rules = 6 , alphabet_size
| | | | | F                    = 6 , total_length = 90} , self = 123 , parent = Nothing , duration = 0.757902755000
| | | | | F                    , status = Fail , start = 2025-09-04 08:23:47.287243607 UTC , finish =
| | | | | F                    2025-09-04 08:23:48.045146362 UTC , thread_cap_info = ("ThreadId 140",
| | | | | F                    0, False)}
| | | | | F                    
| | | | | | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 23 , num_strict_rules
| | | | | | F                  = 17 , num_top_rules = 17 , num_weak_rules = 6 , alphabet_size = 6 , total_length
| | | | | | F                  = 93} , self = 110 , parent = Nothing , duration = 0.289960041000 , status
| | | | | | F                  = Fail , start = 2025-09-04 08:23:47.298561354 UTC , finish = 2025-09-04
| | | | | | F                  08:23:47.588521395 UTC , thread_cap_info = ("ThreadId 121", 3, False)}
| | | | | | F                  
| | | | | | | F                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F                = 14 , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 4
| | | | | | | F                , alphabet_size = 4 , total_length = 58} , self = 122 , parent = Nothing
| | | | | | | F                , duration = 0.729010389000 , status = Fail , start = 2025-09-04 08:23:47.310104853
| | | | | | | F                UTC , finish = 2025-09-04 08:23:48.039115242 UTC , thread_cap_info = ("ThreadId
| | | | | | | F                146", 1, False)}
| | | | | | | F                
| | | | | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 23 , num_strict_rules
| | | | | | | | F              = 17 , num_top_rules = 17 , num_weak_rules = 6 , alphabet_size = 6 , total_length
| | | | | | | | F              = 93} , self = 111 , parent = Nothing , duration = 0.340076559000 , status
| | | | | | | | F              = Fail , start = 2025-09-04 08:23:47.320093435 UTC , finish = 2025-09-04
| | | | | | | | F              08:23:47.660169994 UTC , thread_cap_info = ("ThreadId 120", 3, False)}
| | | | | | | | F              
| | | | | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | | | F            = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 2 , total_length
| | | | | | | | | F            = 32} , self = 116 , parent = Nothing , duration = 0.518407528000 , status
| | | | | | | | | F            = Fail , start = 2025-09-04 08:23:47.358571354 UTC , finish = 2025-09-04
| | | | | | | | | F            08:23:47.876978882 UTC , thread_cap_info = ("ThreadId 158", 2, False)}
| | | | | | | | | F            
| | | | | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | | | | F          = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 2 , total_length
| | | | | | | | | | F          = 32} , self = 112 , parent = Nothing , duration = 0.304480982000 , status
| | | | | | | | | | F          = Fail , start = 2025-09-04 08:23:47.358575813 UTC , finish = 2025-09-04
| | | | | | | | | | F          08:23:47.663056795 UTC , thread_cap_info = ("ThreadId 159", 2, False)}
| | | | | | | | | | F          
| | | | | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | | | | | F        = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | | | | F        = 34} , self = 114 , parent = Nothing , duration = 0.362810282000 , status
| | | | | | | | | | | F        = Fail , start = 2025-09-04 08:23:47.379932334 UTC , finish = 2025-09-04
| | | | | | | | | | | F        08:23:47.742742616 UTC , thread_cap_info = ("ThreadId 168", 2, False)}
| | | | | | | | | | | F        
| | | | | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | | | | | | F      = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | | | | | F      = 34} , self = 113 , parent = Nothing , duration = 0.278710358000 , status
| | | | | | | | | | | | F      = Fail , start = 2025-09-04 08:23:47.386422732 UTC , finish = 2025-09-04
| | | | | | | | | | | | F      08:23:47.66513309 UTC , thread_cap_info = ("ThreadId 169", 2, False)}
| | | | | | | | | | | | F      
| | | F | | | | | | | | |      
| | | F | | | | | | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | | | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | | | | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 65 , num_strict_rules
| | | F | | | | | | | | |      = 1 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 13 , total_length
| | | F | | | | | | | | |      = 425} , self = 121 , parent = Nothing , duration = 0.563452405000 , status
| | | F | | | | | | | | |      = Fail , start = 2025-09-04 08:23:47.408158038 UTC , finish = 2025-09-04
| | | F | | | | | | | | |      08:23:47.971610443 UTC , thread_cap_info = ("ThreadId 178", 2, False)}
| | | F | | | | | | | | |      
| | | | | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 65 , num_strict_rules
| | | | | | | | | | | | | F    = 1 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 13 , total_length
| | | | | | | | | | | | | F    = 425} , self = 120 , parent = Nothing , duration = 0.544290114000 , status
| | | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:23:47.418439361 UTC , finish = 2025-09-04
| | | | | | | | | | | | | F    08:23:47.962729475 UTC , thread_cap_info = ("ThreadId 180", 0, False)}
| | | | | | | | | | | | | F    
| | | | | | | | | | | | | | F  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | | | | | | | | F  = 2 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | F  = 96} , self = 118 , parent = Nothing , duration = 0.501957225000 , status
| | | | | | | | | | | | | | F  = Fail , start = 2025-09-04 08:23:47.418480319 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | F  08:23:47.920437544 UTC , thread_cap_info = ("ThreadId 183", 3, False)}
| | | | | | | | | | | | | | F  
F | | | | | | | | | | | | | |  
  F | | | | | | | | | | | | |  
F   | | | | | | | | | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F   | | | | | | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F   | | | | | | | | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
F   | | | | | | | | | | | | |  = 2 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 4 , total_length
F   | | | | | | | | | | | | |  = 96} , self = 119 , parent = Nothing , duration = 0.481646279000 , status
F   | | | | | | | | | | | | |  = Fail , start = 2025-09-04 08:23:47.438791378 UTC , finish = 2025-09-04
F   | | | | | | | | | | | | |  08:23:47.920437657 UTC , thread_cap_info = ("ThreadId 185", 3, False)}
F   | | | | | | | | | | | | |  
|   F | | | | | | | | | | | |  
| F   | | | | | | | | | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   | | | | | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   | | | | | | | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| F   | | | | | | | | | | | |  = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| F   | | | | | | | | | | | |  = 34} , self = 117 , parent = Nothing , duration = 0.407604648000 , status
| F   | | | | | | | | | | | |  = Fail , start = 2025-09-04 08:23:47.473734486 UTC , finish = 2025-09-04
| F   | | | | | | | | | | | |  08:23:47.881339134 UTC , thread_cap_info = ("ThreadId 189", 1, False)}
| F   | | | | | | | | | | | |  
| | F | | | | | | | | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | | | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | | | | | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | F | | | | | | | | | | | |  = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | F | | | | | | | | | | | |  = 34} , self = 115 , parent = Nothing , duration = 0.328049804000 , status
| | F | | | | | | | | | | | |  = Fail , start = 2025-09-04 08:23:47.478455013 UTC , finish = 2025-09-04
| | F | | | | | | | | | | | |  08:23:47.806504817 UTC , thread_cap_info = ("ThreadId 191", 1, False)}
| | F | | | | | | | | | | | |  
| | | | | | F | | | | | | | |  
| | | | | |   | F | | | | | |  
| | | | | |   |   | F | | | |  
| | | | | | S |   |   | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | S |   |   | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S |   |   | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S |   |   | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S |   |   | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S |   |   | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | S |   |   | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | | | | | S |   |   | | | |  = 2 , total_length = 32} , self = 131 , parent = Nothing , duration = 0.433555488000
| | | | | | S |   |   | | | |  , status = Success , start = 2025-09-04 08:23:47.663098815 UTC , finish
| | | | | | S |   |   | | | |  = 2025-09-04 08:23:48.096654303 UTC , thread_cap_info = ("ThreadId 208",
| | | | | | S |   |   | | | |  3, False)}
| | | | | | S |   |   | | | |  
| | | | | | | |   |   | F | |  
| | | | | | | | E |   |   | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | | | E |   |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | E |   |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | E |   |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | E |   |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | E |   |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | | | E |   |   | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | | | | | | E |   |   | |  = 4 , total_length = 34} , self = 128 , parent = Nothing , duration = 0.417241274000
| | | | | | | | E |   |   | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:23:47.678965653
| | | | | | | | E |   |   | |  UTC , finish = 2025-09-04 08:23:48.096206927 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E |   |   | |  209", 2, False)}
| | | | | | | | E |   |   | |  
| | | | | | | | | |   F   | |  
| | | | | | | | | | S     | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | | | | | S     | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | | | | S     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | | | | S     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | | S     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | | S     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | | | | | S     | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | | | | | | | | S     | |  = 4 , total_length = 34} , self = 125 , parent = Nothing , duration = 0.332477141000
| | | | | | | | | | S     | |  , status = Success , start = 2025-09-04 08:23:47.760439597 UTC , finish
| | | | | | | | | | S     | |  = 2025-09-04 08:23:48.092916738 UTC , thread_cap_info = ("ThreadId 211",
| | | | | | | | | | S     | |  2, False)}
| | | | | | | | | | S     | |  
| | F | | | | | | | |     | |  
| |   | | | | | | F |     | |  
| | F | | | | | |   |     | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | F | | | | | |   |     | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F | | | | | |   |     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F | | | | | |   |     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | | | | |   |     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | | | | |   |     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | F | | | | | |   |     | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | F | | | | | |   |     | |  = 2 , total_length = 32} , self = 124 , parent = Nothing , duration = 0.184459033000
| | F | | | | | |   |     | |  , status = Fail , start = 2025-09-04 08:23:47.881338908 UTC , finish =
| | F | | | | | |   |     | |  2025-09-04 08:23:48.065797941 UTC , thread_cap_info = ("ThreadId 212",
| | F | | | | | |   |     | |  3, False)}
| | F | | | | | |   |     | |  
| F | | | | | | |   |     | |  
|   | | | | | | |   |     | F  
F   | | | | | | |   |     |    
    | | | | | | |   |     F    
    | F | | | | |   |          
    |   | | | F |   |          
    |   | F |   |   |          
    F   |   |   |   |          
        |   |   |   S          
        F   |   |              
            |   E              
            S                  
