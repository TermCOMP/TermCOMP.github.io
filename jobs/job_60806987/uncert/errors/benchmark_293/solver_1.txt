[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 440 length 2149
CNF 440 vars 2149 clauses
last 626 length 3140
last 957 length 4841
CNF 957 vars 4841 clauses
last 991 length 4885
last 849 length 4075
last 590 length 2811
CNF 849 vars 4075 clauses
last 978 length 4829
CNF 991 vars 4885 clauses
last 1004 length 5065
CNF 590 vars 2811 clauses
CNF 978 vars 4829 clauses
last 1273 length 6367
last 600 length 2664
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3630, clauses: 13985
last 1568 length 7670
last 470 length 2134
last 2950 length 17816
last 3046 length 21004
last 2364 length 11052
last 590 length 2811
last 1678 length 7792
last 849 length 4075
last 12806 length 73186
CNF 1004 vars 5065 clauses
last 10212 length 62833
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16438, clauses: 68252
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2395, clauses: 9309
CNF 1273 vars 6367 clauses
last 3630 length 13985
CNF 600 vars 2664 clauses
CNF 1568 vars 7670 clauses
CNF 470 vars 2134 clauses
CNF 2950 vars 17816 clauses
CNF 3046 vars 21004 clauses
CNF 590 vars 2811 clauses
CNF 2364 vars 11052 clauses
CNF 1678 vars 7792 clauses
CNF 849 vars 4075 clauses
CNF 12806 vars 73186 clauses
CNF 10212 vars 62833 clauses
last 16438 length 68252
last 2395 length 9309
CNF 3630 vars 13985 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1716, clauses: 6836
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11080, clauses: 46206
CNF 16438 vars 68252 clauses
CNF 2395 vars 9309 clauses
last 1716 length 6836
last 11080 length 46206
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3630, clauses: 13985, status: Unsatisfied, time: 0.371519562s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2395, clauses: 9309, status: Satisfied, time: 0.233011739s
CNF 1716 vars 6836 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1716, clauses: 6836, status: Unsatisfied, time: 0.060220328s
CNF 11080 vars 46206 clauses
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 8 weak rules on 4 letters       weights
SRS with 1 strict rules and 6 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, a] -> [] {- Input 0 -}
  [] ->= [a] {- Input 1 -}
  [] ->= [a, a, a, b, a] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [[a, a], [a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [[a, a], [a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [[b, a], [a, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [[b, a], [a, b]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, b]] ->= [ [b, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 1/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [[a, a], [a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [[a, a], [a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [[b, a], [a, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 0 0 \
                | 0 4 4 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 5 0 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 2 7 \
                | 0 0 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[a, a]] ->= [[a, a], [a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [[a, a], [a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [[b, a], [a, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
reason
  no strict rules

**************************************************
skeleton: (1/2,2)\TileAllAll{2}(4/8,4)\Weight(1/6,4)\Matrix{\Natural}{3}(0/6,3)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11080, clauses: 46206, status: Satisfied, time: 0.1205422s

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 0.819514909000
  min duration 0.023988866000
  total durat. 5.209287548000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.821752061000
  min duration 0.029640111000
  total durat. 4.444697573000
**************************************************
F                                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                                    = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
F                                    = 12 , num_top_rules = 12 , num_weak_rules = 4 , alphabet_size = 4 , total_length
F                                    = 74} , self = 106 , parent = Nothing , duration = 0.424527220000 , status
F                                    = Fail , start = 2025-09-04 08:23:50.373971517 UTC , finish = 2025-09-04
F                                    08:23:50.798498737 UTC , thread_cap_info = ("ThreadId 90", 0, False)}
F                                    
| F                                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                                  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| F                                  = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| F                                  = 36} , self = 107 , parent = Nothing , duration = 0.510501144000 , status
| F                                  = Fail , start = 2025-09-04 08:23:50.392647938 UTC , finish = 2025-09-04
| F                                  08:23:50.903149082 UTC , thread_cap_info = ("ThreadId 136", 2, False)}
| F                                  
| | F                                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                                = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | F                                = 12 , num_top_rules = 12 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | F                                = 74} , self = 108 , parent = Nothing , duration = 0.508822093000 , status
| | F                                = Fail , start = 2025-09-04 08:23:50.407037342 UTC , finish = 2025-09-04
| | F                                08:23:50.915859435 UTC , thread_cap_info = ("ThreadId 146", 0, False)}
| | F                                
| | | F                              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                              = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | F                              = 12 , num_top_rules = 12 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | F                              = 74} , self = 109 , parent = Nothing , duration = 0.608586215000 , status
| | | F                              = Fail , start = 2025-09-04 08:23:50.407039991 UTC , finish = 2025-09-04
| | | F                              08:23:51.015626206 UTC , thread_cap_info = ("ThreadId 147", 0, False)}
| | | F                              
| | | | F                            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                            = False\n , verbose = False}" , input_size = Size { num_rules = 26 , num_strict_rules
| | | | F                            = 20 , num_top_rules = 20 , num_weak_rules = 6 , alphabet_size = 6 , total_length
| | | | F                            = 117} , self = 112 , parent = Nothing , duration = 0.697726937000 , status
| | | | F                            = Fail , start = 2025-09-04 08:23:50.419053841 UTC , finish = 2025-09-04
| | | | F                            08:23:51.116780778 UTC , thread_cap_info = ("ThreadId 154", 1, False)}
| | | | F                            
| | | | | F                          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                          = False\n , verbose = False}" , input_size = Size { num_rules = 26 , num_strict_rules
| | | | | F                          = 20 , num_top_rules = 20 , num_weak_rules = 6 , alphabet_size = 6 , total_length
| | | | | F                          = 117} , self = 110 , parent = Nothing , duration = 0.672528671000 , status
| | | | | F                          = Fail , start = 2025-09-04 08:23:50.421453919 UTC , finish = 2025-09-04
| | | | | F                          08:23:51.09398259 UTC , thread_cap_info = ("ThreadId 155", 1, False)}
| | | | | F                          
| | | | | | F                        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F                        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F                        = 16 , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 4
| | | | | | F                        , alphabet_size = 4 , total_length = 74} , self = 122 , parent = Nothing
| | | | | | F                        , duration = 0.923439791000 , status = Fail , start = 2025-09-04 08:23:50.421526018
| | | | | | F                        UTC , finish = 2025-09-04 08:23:51.344965809 UTC , thread_cap_info = ("ThreadId
| | | | | | F                        150", 0, False)}
| | | | | | F                        
| | | | | | | F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 65 , num_strict_rules
| | | | | | | F                      = 1 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 13 , total_length
| | | | | | | F                      = 456} , self = 120 , parent = Nothing , duration = 0.819514909000 , status
| | | | | | | F                      = Fail , start = 2025-09-04 08:23:50.425018379 UTC , finish = 2025-09-04
| | | | | | | F                      08:23:51.244533288 UTC , thread_cap_info = ("ThreadId 163", 2, False)}
| | | | | | | F                      
| | | | | | | | F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 65 , num_strict_rules
| | | | | | | | F                    = 1 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 13 , total_length
| | | | | | | | F                    = 456} , self = 121 , parent = Nothing , duration = 0.821752061000 , status
| | | | | | | | F                    = Fail , start = 2025-09-04 08:23:50.437677637 UTC , finish = 2025-09-04
| | | | | | | | F                    08:23:51.259429698 UTC , thread_cap_info = ("ThreadId 165", 2, False)}
| | | | | | | | F                    
| | | | | | | | | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 25 , num_strict_rules
| | | | | | | | | F                  = 19 , num_top_rules = 19 , num_weak_rules = 6 , alphabet_size = 6 , total_length
| | | | | | | | | F                  = 114} , self = 114 , parent = Nothing , duration = 0.661104897000 , status
| | | | | | | | | F                  = Fail , start = 2025-09-04 08:23:50.455710761 UTC , finish = 2025-09-04
| | | | | | | | | F                  08:23:51.116815658 UTC , thread_cap_info = ("ThreadId 156", 1, False)}
| | | | | | | | | F                  
| | | | | | | | | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 25 , num_strict_rules
| | | | | | | | | | F                = 19 , num_top_rules = 19 , num_weak_rules = 6 , alphabet_size = 6 , total_length
| | | | | | | | | | F                = 114} , self = 115 , parent = Nothing , duration = 0.651221332000 , status
| | | | | | | | | | F                = Fail , start = 2025-09-04 08:23:50.475955889 UTC , finish = 2025-09-04
| | | | | | | | | | F                08:23:51.127177221 UTC , thread_cap_info = ("ThreadId 157", 1, False)}
| | | | | | | | | | F                
| | | | | | | | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | | | | | F              = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 2 , total_length
| | | | | | | | | | | F              = 32} , self = 111 , parent = Nothing , duration = 0.605018399000 , status
| | | | | | | | | | | F              = Fail , start = 2025-09-04 08:23:50.495235741 UTC , finish = 2025-09-04
| | | | | | | | | | | F              08:23:51.10025414 UTC , thread_cap_info = ("ThreadId 172", 3, False)}
| | | | | | | | | | | F              
| | | | | | | | | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | | | | | | F            = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 2 , total_length
| | | | | | | | | | | | F            = 32} , self = 113 , parent = Nothing , duration = 0.615691144000 , status
| | | | | | | | | | | | F            = Fail , start = 2025-09-04 08:23:50.501117054 UTC , finish = 2025-09-04
| | | | | | | | | | | | F            08:23:51.116808198 UTC , thread_cap_info = ("ThreadId 173", 3, False)}
| | | | | | | | | | | | F            
| | | | | | | | | | | | | E          Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | | | | | | | | E          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | | | | | E          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | | | | | E          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | | | | | E          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | | | | | E          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | | | | | | | | E          , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | | | | | | | | | | | E          = 4 , total_length = 36} , self = 126 , parent = Nothing , duration = 0.867031345000
| | | | | | | | | | | | | E          , status = Except "AsyncCancelled" , start = 2025-09-04 08:23:50.515041885
| | | | | | | | | | | | | E          UTC , finish = 2025-09-04 08:23:51.38207323 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | E          175", 0, False)}
| | | | | | | | | | | | | E          
| | | | | | | | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | | | | | | | | F        = 2 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | F        = 100} , self = 118 , parent = Nothing , duration = 0.543722183000 , status
| | | | | | | | | | | | | | F        = Fail , start = 2025-09-04 08:23:50.615893993 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | F        08:23:51.159616176 UTC , thread_cap_info = ("ThreadId 184", 3, False)}
| | | | | | | | | | | | | | F        
| | | | | | | | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | | | | | | | | | F      = 2 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | | F      = 100} , self = 117 , parent = Nothing , duration = 0.519981391000 , status
| | | | | | | | | | | | | | | F      = Fail , start = 2025-09-04 08:23:50.635891636 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | F      08:23:51.155873027 UTC , thread_cap_info = ("ThreadId 186", 3, False)}
| | | | | | | | | | | | | | | F      
| | | | | | | | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | | | | | | | | | | F    = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | | | F    = 36} , self = 116 , parent = Nothing , duration = 0.414360900000 , status
| | | | | | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:23:50.723467033 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | | F    08:23:51.137827933 UTC , thread_cap_info = ("ThreadId 188", 3, False)}
| | | | | | | | | | | | | | | | F    
| | | | | | | | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | | | | | | | | | | | F  = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | | | | F  = 36} , self = 119 , parent = Nothing , duration = 0.464378288000 , status
| | | | | | | | | | | | | | | | | F  = Fail , start = 2025-09-04 08:23:50.73136696 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | | | F  08:23:51.195745248 UTC , thread_cap_info = ("ThreadId 190", 3, False)}
| | | | | | | | | | | | | | | | | F  
F | | | | | | | | | | | | | | | | |  
  F | | | | | | | | | | | | | | | |  
S   | | | | | | | | | | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
S   | | | | | | | | | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
S   | | | | | | | | | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
S   | | | | | | | | | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S   | | | | | | | | | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S   | | | | | | | | | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
S   | | | | | | | | | | | | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
S   | | | | | | | | | | | | | | | |  = 4 , total_length = 36} , self = 123 , parent = Nothing , duration = 0.442226463000
S   | | | | | | | | | | | | | | | |  , status = Success , start = 2025-09-04 08:23:50.903183291 UTC , finish
S   | | | | | | | | | | | | | | | |  = 2025-09-04 08:23:51.345409754 UTC , thread_cap_info = ("ThreadId 193",
S   | | | | | | | | | | | | | | | |  2, False)}
S   | | | | | | | | | | | | | | | |  
|   F | | | | | | | | | | | | | | |  
|     F | | | | | | | | | | | | | |  
|       | F | | | | | | | | | | | |  
|       |   | | | | | F | | | | | |  
|       F   | | | | |   | | | | | |  
|           | | | | |   F | | | | |  
|           | | | F |     | | | | |  
|           | | |   F     | | | | |  
|           | | |         | | | F |  
| F         | | |         | | |   |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| F         | | |         | | |   |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F         | | |         | | |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F         | | |         | | |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F         | | |         | | |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F         | | |         | | |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| F         | | |         | | |   |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| F         | | |         | | |   |  = 2 , total_length = 32} , self = 125 , parent = Nothing , duration = 0.212926589000
| F         | | |         | | |   |  , status = Fail , start = 2025-09-04 08:23:51.142346897 UTC , finish =
| F         | | |         | | |   |  2025-09-04 08:23:51.355273486 UTC , thread_cap_info = ("ThreadId 208",
| F         | | |         | | |   |  0, False)}
| F         | | |         | | |   |  
| |         | | |         | | F   |  
| |         | | |         | F     |  
| |         | | |         |       F  
| |         | F |         |          
| |         |   F         |          
| |         F             |          
S |                       |          
  F                       |          
                          E          
