[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 414 length 1699
last 358 length 1555
CNF 414 vars 1699 clauses
last 332 length 1423
last 446 length 1827
CNF 332 vars 1423 clauses
CNF 446 vars 1827 clauses
CNF 358 vars 1555 clauses
last 332 length 1423
CNF 332 vars 1423 clauses
last 796 length 3371
CNF 796 vars 3371 clauses
last 788 length 3361
last 358 length 1555
CNF 358 vars 1555 clauses
CNF 788 vars 3361 clauses
last 333 length 1375
last 331 length 1335
CNF 333 vars 1375 clauses
last 788 length 3361
CNF 331 vars 1335 clauses
last 796 length 3371
CNF 788 vars 3361 clauses
last 1076 length 4442
last 950 length 3865
last 950 length 3865
last 1076 length 4442
CNF 796 vars 3371 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4737, clauses: 17228
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2071, clauses: 7797
last 4795 length 20635
last 4990 length 20807
CNF 1076 vars 4442 clauses
CNF 950 vars 3865 clauses
CNF 950 vars 3865 clauses
CNF 1076 vars 4442 clauses
last 4737 length 17228
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13827, clauses: 57239
last 2071 length 7797
last 839 length 3437
last 1009 length 4154
CNF 4795 vars 20635 clauses
CNF 4990 vars 20807 clauses
CNF 4737 vars 17228 clauses
last 13827 length 57239
CNF 2071 vars 7797 clauses
CNF 839 vars 3437 clauses
CNF 1009 vars 4154 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4737, clauses: 17228, status: Unsatisfied, time: 2.379920656s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2071, clauses: 7797, status: Unsatisfied, time: 1.986386254s
CNF 13827 vars 57239 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13827, clauses: 57239, status: Satisfied, time: 1.705235973s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 3 letters       mirror
SRS with 1 strict rules and 2 weak rules on 3 letters       context
SRS with 1 strict rules and 6 weak rules on 3 letters       mirror
SRS with 1 strict rules and 6 weak rules on 3 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, c] -> [c, c] {- Input 0 -}
  [] ->= [a, b] {- Input 1 -}
  [b, a] ->= [] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [c, a] -> [c, c] {- Mirror (Input 0) -}
  [] ->= [b, a] {- Mirror (Input 1) -}
  [a, b] ->= [] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [c, a] -> [c, c] {- Mirror (Input 0) -}
  [a] ->= [a, b, a] {- Mirror (Input 1) -}
  [b] ->= [b, b, a] {- Mirror (Input 1) -}
  [c] ->= [c, b, a] {- Mirror (Input 1) -}
  [a, a, b] ->= [a] {- Mirror (Input 2) -}
  [b, a, b] ->= [b] {- Mirror (Input 2) -}
  [c, a, b] ->= [c] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, c] -> [c, c] {- Input 0 -}
  [a] ->= [a, b, a] {- Input 1 -}
  [b] ->= [a, b, b] {- Input 1 -}
  [c] ->= [a, b, c] {- Input 1 -}
  [b, a, a] ->= [a] {- Input 2 -}
  [b, a, b] ->= [b] {- Input 2 -}
  [b, a, c] ->= [c] {- Input 2 -}
reason
  ( a
  , St  / 0A 1A 2A \
        | -  1A -  |
        \ -  0A -  / )
  ( b
  , St  / 0A  -1A 0A \
        | -   -1A -  |
        \ -2A -2A -  / )
  ( c
  , St  / 0A  - - \
        | 0A  - - |
        \ -1A - - / )
   property Termination
has value Just True
for SRS
  [a] ->= [a, b, a] {- Input 1 -}
  [b] ->= [a, b, b] {- Input 1 -}
  [c] ->= [a, b, c] {- Input 1 -}
  [b, a, a] ->= [a] {- Input 2 -}
  [b, a, b] ->= [b] {- Input 2 -}
  [b, a, c] ->= [c] {- Input 2 -}
reason
  no strict rules

**************************************************
skeleton: \Mirror(1/2,3)\Context\Mirror(1/6,3)\Matrix{\ArcticBZ}{3}(0/6,3)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 2.711011221000
  min duration 0.006402339000
  total durat. 10.943047966000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 76}
    , self = 104
    , parent = Nothing
    , duration = 1.447523378000
    , status = Fail
    , start = 2025-09-04 08:26:21.167921006 UTC
    , finish = 2025-09-04 08:26:22.615444384 UTC
    , thread_cap_info = ("ThreadId 135", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 13
      , alphabet_size = 9
      , total_length = 64}
    , self = 121
    , parent = Nothing
    , duration = 1.917692649000
    , status = Fail
    , start = 2025-09-04 08:26:23.116735277 UTC
    , finish = 2025-09-04 08:26:25.034427926 UTC
    , thread_cap_info = ("ThreadId 200", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 13
      , alphabet_size = 9
      , total_length = 70}
    , self = 112
    , parent = Nothing
    , duration = 2.275051614000
    , status = Fail
    , start = 2025-09-04 08:26:21.179414544 UTC
    , finish = 2025-09-04 08:26:23.454466158 UTC
    , thread_cap_info = ("ThreadId 162", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 13
      , alphabet_size = 9
      , total_length = 70}
    , self = 113
    , parent = Nothing
    , duration = 2.303534974000
    , status = Fail
    , start = 2025-09-04 08:26:21.227824652 UTC
    , finish = 2025-09-04 08:26:23.531359626 UTC
    , thread_cap_info = ("ThreadId 179", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 42
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 39
      , alphabet_size = 9
      , total_length = 252}
    , self = 120
    , parent = Nothing
    , duration = 2.711011221000
    , status = Fail
    , start = 2025-09-04 08:26:21.282197935 UTC
    , finish = 2025-09-04 08:26:23.993209156 UTC
    , thread_cap_info = ("ThreadId 171", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 2.661923569000
  min duration 0.021514351000
  total durat. 10.561368886000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 76}
    , self = 102
    , parent = Nothing
    , duration = 1.191238709000
    , status = Fail
    , start = 2025-09-04 08:26:21.161538348 UTC
    , finish = 2025-09-04 08:26:22.352777057 UTC
    , thread_cap_info = ("ThreadId 136", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 13
      , alphabet_size = 9
      , total_length = 64}
    , self = 123
    , parent = Nothing
    , duration = 1.944675263000
    , status = Fail
    , start = 2025-09-04 08:26:23.128866417 UTC
    , finish = 2025-09-04 08:26:25.07354168 UTC
    , thread_cap_info = ("ThreadId 202", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 13
      , alphabet_size = 9
      , total_length = 70}
    , self = 110
    , parent = Nothing
    , duration = 2.240720560000
    , status = Fail
    , start = 2025-09-04 08:26:21.19107105 UTC
    , finish = 2025-09-04 08:26:23.43179161 UTC
    , thread_cap_info = ("ThreadId 164", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 13
      , alphabet_size = 9
      , total_length = 70}
    , self = 114
    , parent = Nothing
    , duration = 2.356840520000
    , status = Fail
    , start = 2025-09-04 08:26:21.232978125 UTC
    , finish = 2025-09-04 08:26:23.589818645 UTC
    , thread_cap_info = ("ThreadId 180", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 42
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 39
      , alphabet_size = 9
      , total_length = 252}
    , self = 118
    , parent = Nothing
    , duration = 2.661923569000
    , status = Fail
    , start = 2025-09-04 08:26:21.287895273 UTC
    , finish = 2025-09-04 08:26:23.949818842 UTC
    , thread_cap_info = ("ThreadId 173", 1, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.981764146000
  min duration 3.981764146000
  total durat. 3.981764146000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 28}
    , self = 126
    , parent = Nothing
    , duration = 3.981764146000
    , status = Success
    , start = 2025-09-04 08:26:21.411266861 UTC
    , finish = 2025-09-04 08:26:25.393031007 UTC
    , thread_cap_info = ("ThreadId 183", 1, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.674194194000
  min duration 3.674194194000
  total durat. 3.674194194000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 28}
    , self = 124
    , parent = Nothing
    , duration = 3.674194194000
    , status = Fail
    , start = 2025-09-04 08:26:21.46514315 UTC
    , finish = 2025-09-04 08:26:25.139337344 UTC
    , thread_cap_info = ("ThreadId 184", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.854318464000
  min duration 3.854318464000
  total durat. 3.854318464000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 76}
    , self = 122
    , parent = Nothing
    , duration = 3.854318464000
    , status = Fail
    , start = 2025-09-04 08:26:21.191096898 UTC
    , finish = 2025-09-04 08:26:25.045415362 UTC
    , thread_cap_info = ("ThreadId 166", 0, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 3.994867234000
  min duration 3.994867234000
  total durat. 3.994867234000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 3
      , total_length = 8}
    , self = 125
    , parent = Nothing
    , duration = 3.994867234000
    , status = Fail
    , start = 2025-09-04 08:26:21.161052369 UTC
    , finish = 2025-09-04 08:26:25.155919603 UTC
    , thread_cap_info = ("ThreadId 126", 0, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.831458032000
  min duration 2.831458032000
  total durat. 2.831458032000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 3
      , total_length = 8}
    , self = 119
    , parent = Nothing
    , duration = 2.831458032000
    , status = Fail
    , start = 2025-09-04 08:26:21.161248588 UTC
    , finish = 2025-09-04 08:26:23.99270662 UTC
    , thread_cap_info = ("ThreadId 138", 0, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 5
  max duration 0.861451048000
  min duration 0.000158378000
  total durat. 1.086328850000
**************************************************
F                            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                            , closure = Backward\n , start_strict_only = True\n , max_closure_length
F                            = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                            Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                            8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                            = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                            ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                            1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                            = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 1 ,
F                            num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 3 , total_length
F                            = 8} , self = 125 , parent = Nothing , duration = 3.994867234000 , status
F                            = Fail , start = 2025-09-04 08:26:21.161052369 UTC , finish = 2025-09-04
F                            08:26:25.155919603 UTC , thread_cap_info = ("ThreadId 126", 0, False)}
F                            
| F                          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F                          , closure = Forward\n , start_strict_only = True\n , max_closure_length
| F                          = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F                          Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F                          8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F                          = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F                          ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F                          1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F                          = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 1 ,
| F                          num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 3 , total_length
| F                          = 8} , self = 119 , parent = Nothing , duration = 2.831458032000 , status
| F                          = Fail , start = 2025-09-04 08:26:21.161248588 UTC , finish = 2025-09-04
| F                          08:26:23.99270662 UTC , thread_cap_info = ("ThreadId 138", 0, False)}
| F                          
| | F                        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                        = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | F                        = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | F                        = 76} , self = 102 , parent = Nothing , duration = 1.191238709000 , status
| | F                        = Fail , start = 2025-09-04 08:26:21.161538348 UTC , finish = 2025-09-04
| | F                        08:26:22.352777057 UTC , thread_cap_info = ("ThreadId 136", 3, False)}
| | F                        
| | | F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | F                      = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 3 , total_length
| | | F                      = 28} , self = 100 , parent = Nothing , duration = 0.150343589000 , status
| | | F                      = Fail , start = 2025-09-04 08:26:21.163534028 UTC , finish = 2025-09-04
| | | F                      08:26:21.313877617 UTC , thread_cap_info = ("ThreadId 151", 1, False)}
| | | F                      
| | | | F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | | F                    = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | F                    = 76} , self = 104 , parent = Nothing , duration = 1.447523378000 , status
| | | | F                    = Fail , start = 2025-09-04 08:26:21.167921006 UTC , finish = 2025-09-04
| | | | F                    08:26:22.615444384 UTC , thread_cap_info = ("ThreadId 135", 2, False)}
| | | | F                    
| | | | | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | F                  = 3 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size = 9 , total_length
| | | | | F                  = 70} , self = 112 , parent = Nothing , duration = 2.275051614000 , status
| | | | | F                  = Fail , start = 2025-09-04 08:26:21.179414544 UTC , finish = 2025-09-04
| | | | | F                  08:26:23.454466158 UTC , thread_cap_info = ("ThreadId 162", 1, False)}
| | | | | F                  
| | | | | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | F                = 3 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size = 9 , total_length
| | | | | | F                = 70} , self = 110 , parent = Nothing , duration = 2.240720560000 , status
| | | | | | F                = Fail , start = 2025-09-04 08:26:21.19107105 UTC , finish = 2025-09-04
| | | | | | F                08:26:23.43179161 UTC , thread_cap_info = ("ThreadId 164", 1, False)}
| | | | | | F                
| | | | | | | F              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F              = 22 , num_strict_rules = 14 , num_top_rules = 14 , num_weak_rules = 8
| | | | | | | F              , alphabet_size = 8 , total_length = 76} , self = 122 , parent = Nothing
| | | | | | | F              , duration = 3.854318464000 , status = Fail , start = 2025-09-04 08:26:21.191096898
| | | | | | | F              UTC , finish = 2025-09-04 08:26:25.045415362 UTC , thread_cap_info = ("ThreadId
| | | | | | | F              166", 0, False)}
| | | | | | | F              
| | | | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | | | F            = 3 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size = 9 , total_length
| | | | | | | | F            = 70} , self = 113 , parent = Nothing , duration = 2.303534974000 , status
| | | | | | | | F            = Fail , start = 2025-09-04 08:26:21.227824652 UTC , finish = 2025-09-04
| | | | | | | | F            08:26:23.531359626 UTC , thread_cap_info = ("ThreadId 179", 3, False)}
| | | | | | | | F            
| | | | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | | | | F          = 3 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size = 9 , total_length
| | | | | | | | | F          = 70} , self = 114 , parent = Nothing , duration = 2.356840520000 , status
| | | | | | | | | F          = Fail , start = 2025-09-04 08:26:21.232978125 UTC , finish = 2025-09-04
| | | | | | | | | F          08:26:23.589818645 UTC , thread_cap_info = ("ThreadId 180", 3, False)}
| | | | | | | | | F          
| | | | | | | | | | S        Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | | | | | | | | S        , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | | | | | | | | S        , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | | | | | | | | S        = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | | | | | | | | S        , cpf = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | | | | | S        = 3 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size = 9 , total_length
| | | | | | | | | | S        = 70} , self = 101 , parent = Nothing , duration = 0.269674613000 , status
| | | | | | | | | | S        = Success , start = 2025-09-04 08:26:21.246785933 UTC , finish = 2025-09-04
| | | | | | | | | | S        08:26:21.516460546 UTC , thread_cap_info = ("ThreadId 181", 3, False)}
| | | | | | | | | | S        
| | | | | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 42 , num_strict_rules
| | | | | | | | | | | F      = 3 , num_top_rules = 0 , num_weak_rules = 39 , alphabet_size = 9 , total_length
| | | | | | | | | | | F      = 252} , self = 120 , parent = Nothing , duration = 2.711011221000 , status
| | | | | | | | | | | F      = Fail , start = 2025-09-04 08:26:21.282197935 UTC , finish = 2025-09-04
| | | | | | | | | | | F      08:26:23.993209156 UTC , thread_cap_info = ("ThreadId 171", 1, False)}
| | | | | | | | | | | F      
| | | | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 42 , num_strict_rules
| | | | | | | | | | | | F    = 3 , num_top_rules = 0 , num_weak_rules = 39 , alphabet_size = 9 , total_length
| | | | | | | | | | | | F    = 252} , self = 118 , parent = Nothing , duration = 2.661923569000 , status
| | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:26:21.287895273 UTC , finish = 2025-09-04
| | | | | | | | | | | | F    08:26:23.949818842 UTC , thread_cap_info = ("ThreadId 173", 1, False)}
| | | | | | | | | | | | F    
| | | F | | | | | | | | |    
| | | S | | | | | | | | |    Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | S | | | | | | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S | | | | | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S | | | | | | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S | | | | | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S | | | | | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | S | | | | | | | | |    , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | S | | | | | | | | |    = 3 , total_length = 28} , self = 126 , parent = Nothing , duration = 3.981764146000
| | | S | | | | | | | | |    , status = Success , start = 2025-09-04 08:26:21.411266861 UTC , finish
| | | S | | | | | | | | |    = 2025-09-04 08:26:25.393031007 UTC , thread_cap_info = ("ThreadId 183",
| | | S | | | | | | | | |    1, False)}
| | | S | | | | | | | | |    
| | | | | | | | | | | | | F  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | | | | | | | | F  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | | | | | | | | F  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | | | | | | | | | | | F  = 3 , total_length = 28} , self = 124 , parent = Nothing , duration = 3.674194194000
| | | | | | | | | | | | | F  , status = Fail , start = 2025-09-04 08:26:21.46514315 UTC , finish = 2025-09-04
| | | | | | | | | | | | | F  08:26:25.139337344 UTC , thread_cap_info = ("ThreadId 184", 1, False)}
| | | | | | | | | | | | | F  
| | | | | | | | | | S | | |  
| | | | | | | | | | S | | |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | | | | | S | | |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | | | | | S | | |  = Size { num_rules = 1296 , num_strict_rules = 243 , num_top_rules = 0
| | | | | | | | | | S | | |  , num_weak_rules = 1053 , alphabet_size = 81 , total_length = 8262} , self
| | | | | | | | | | S | | |  = 103 , parent = Nothing , duration = 0.861451048000 , status = Success
| | | | | | | | | | S | | |  , start = 2025-09-04 08:26:21.516482385 UTC , finish = 2025-09-04 08:26:22.377933433
| | | | | | | | | | S | | |  UTC , thread_cap_info = ("ThreadId 186", 3, False)}
| | | | | | | | | | S | | |  
| | F | | | | | | | | | | |  
| |   | | | | | | | S | | |  
| | S | | | | | | |   | | |  Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
| | S | | | | | | |   | | |  = False\n , verbose = False\n , tracing = False}" , input_size = Size {
| | S | | | | | | |   | | |  num_rules = 456 , num_strict_rules = 54 , num_top_rules = 0 , num_weak_rules
| | S | | | | | | |   | | |  = 402 , alphabet_size = 79 , total_length = 2844} , self = 105 , parent
| | S | | | | | | |   | | |  = Nothing , duration = 0.247664416000 , status = Success , start = 2025-09-04
| | S | | | | | | |   | | |  08:26:22.390202801 UTC , finish = 2025-09-04 08:26:22.637867217 UTC , thread_cap_info
| | S | | | | | | |   | | |  = ("ThreadId 187", 3, False)}
| | S | | | | | | |   | | |  
| | | | F | | | | |   | | |  
| | S |   | | | | |   | | |  
| | S |   | | | | |   | | |  Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | S |   | | | | |   | | |  , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | S |   | | | | |   | | |  , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | S |   | | | | |   | | |  = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | S |   | | | | |   | | |  , cpf = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | S |   | | | | |   | | |  = 2 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size = 9 , total_length
| | S |   | | | | |   | | |  = 64} , self = 109 , parent = Nothing , duration = 0.102659362000 , status
| | S |   | | | | |   | | |  = Success , start = 2025-09-04 08:26:23.116727063 UTC , finish = 2025-09-04
| | S |   | | | | |   | | |  08:26:23.219386425 UTC , thread_cap_info = ("ThreadId 201", 3, False)}
| | S |   | | | | |   | | |  
| | | | F | | | | |   | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | | | | |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | | | | |   | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | | F | | | | |   | | |  = 2 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size = 9 , total_length
| | | | F | | | | |   | | |  = 64} , self = 121 , parent = Nothing , duration = 1.917692649000 , status
| | | | F | | | | |   | | |  = Fail , start = 2025-09-04 08:26:23.116735277 UTC , finish = 2025-09-04
| | | | F | | | | |   | | |  08:26:25.034427926 UTC , thread_cap_info = ("ThreadId 200", 3, False)}
| | | | F | | | | |   | | |  
| | | | | | | | | | F | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | | | | | | | | F | | |  = 2 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size = 9 , total_length
| | | | | | | | | | F | | |  = 64} , self = 123 , parent = Nothing , duration = 1.944675263000 , status
| | | | | | | | | | F | | |  = Fail , start = 2025-09-04 08:26:23.128866417 UTC , finish = 2025-09-04
| | | | | | | | | | F | | |  08:26:25.07354168 UTC , thread_cap_info = ("ThreadId 202", 3, False)}
| | | | | | | | | | F | | |  
| | S | | | | | | | | | | |  
| | S | | | | | | | | | | |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | S | | | | | | | | | | |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | S | | | | | | | | | | |  = Size { num_rules = 1215 , num_strict_rules = 162 , num_top_rules = 0
| | S | | | | | | | | | | |  , num_weak_rules = 1053 , alphabet_size = 81 , total_length = 7614} , self
| | S | | | | | | | | | | |  = 111 , parent = Nothing , duration = 0.224199986000 , status = Success
| | S | | | | | | | | | | |  , start = 2025-09-04 08:26:23.219401945 UTC , finish = 2025-09-04 08:26:23.443601931
| | S | | | | | | | | | | |  UTC , thread_cap_info = ("ThreadId 203", 3, False)}
| | S | | | | | | | | | | |  
| | | | | | F | | | | | | |  
| | S | | |   | | | | | | |  
| | F | | |   | | | | | | |  Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
| | F | | |   | | | | | | |  = False\n , verbose = False\n , tracing = False}" , input_size = Size {
| | F | | |   | | | | | | |  num_rules = 456 , num_strict_rules = 54 , num_top_rules = 0 , num_weak_rules
| | F | | |   | | | | | | |  = 402 , alphabet_size = 79 , total_length = 2844} , self = 115 , parent
| | F | | |   | | | | | | |  = Nothing , duration = 0.178909527000 , status = Fail , start = 2025-09-04
| | F | | |   | | | | | | |  08:26:23.443620456 UTC , finish = 2025-09-04 08:26:23.622529983 UTC , thread_cap_info
| | F | | |   | | | | | | |  = ("ThreadId 206", 3, False)}
| | F | | |   | | | | | | |  
| | | | | F   | | | | | | |  
| | | | |     | F | | | | |  
| | | | |     |   F | | | |  
| | F | |     |     | | | |  
| |   | |     |     | | F |  
| F   | |     |     | |   |  
|     | |     |     | F   |  
|     | F     |     |     |  
|     |       F     |     |  
|     |             F     |  
|     |                   F  
F     |                      
E     |                      Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E     |                      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E     |                      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E     |                      , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E     |                      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E     |                      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
E     |                      , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
E     |                      = 3 , total_length = 28} , self = 128 , parent = Nothing , duration = 0.269689204000
E     |                      , status = Except "AsyncCancelled" , start = 2025-09-04 08:26:25.155955869
E     |                      UTC , finish = 2025-09-04 08:26:25.425645073 UTC , thread_cap_info = ("ThreadId
E     |                      223", 1, False)}
E     |                      
|     S                      
E                            
