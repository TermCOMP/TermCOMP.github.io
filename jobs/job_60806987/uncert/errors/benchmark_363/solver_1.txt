[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 358 length 1555
last 414 length 1699
CNF 414 vars 1699 clauses
last 358 length 1555
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 446 length 1827
CNF 446 vars 1827 clauses
CNF 358 vars 1555 clauses
last 332 length 1423
last 332 length 1423
CNF 358 vars 1555 clauses
CNF 332 vars 1423 clauses
CNF 332 vars 1423 clauses
last 788 length 3361
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2265, clauses: 8144
last 2265 length 8144
last 1057 length 4347
CNF 2265 vars 8144 clauses
last 796 length 3371
CNF 788 vars 3361 clauses
last 331 length 1335
last 333 length 1375
CNF 1057 vars 4347 clauses
last 937 length 3875
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2265, clauses: 8144, status: Unsatisfied, time: 0.085633618s
last 5514 length 22908
CNF 796 vars 3371 clauses
last 5487 length 23449
CNF 331 vars 1335 clauses
CNF 333 vars 1375 clauses
CNF 937 vars 3875 clauses
CNF 5514 vars 22908 clauses
CNF 5487 vars 23449 clauses
last 937 length 3875
CNF 937 vars 3875 clauses
last 1057 length 4347
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2071, clauses: 7797
last 2071 length 7797
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4929, clauses: 18635
last 4929 length 18635
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 33146, clauses: 137225
CNF 2071 vars 7797 clauses
CNF 1057 vars 4347 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13827, clauses: 57239
CNF 4929 vars 18635 clauses
last 33146 length 137225
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2071, clauses: 7797, status: Unsatisfied, time: 0.469938926s
last 13827 length 57239
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4929, clauses: 18635, status: Unsatisfied, time: 0.733664994s
CNF 13827 vars 57239 clauses
CNF 33146 vars 137225 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13827, clauses: 57239, status: Satisfied, time: 0.632431678s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 3 letters       mirror
SRS with 1 strict rules and 2 weak rules on 3 letters       context
SRS with 1 strict rules and 6 weak rules on 3 letters       mirror
SRS with 1 strict rules and 6 weak rules on 3 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, c] -> [c, b] {- Input 0 -}
  [] ->= [a, b] {- Input 1 -}
  [b, a] ->= [] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [c, a] -> [b, c] {- Mirror (Input 0) -}
  [] ->= [b, a] {- Mirror (Input 1) -}
  [a, b] ->= [] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [c, a] -> [b, c] {- Mirror (Input 0) -}
  [a] ->= [a, b, a] {- Mirror (Input 1) -}
  [b] ->= [b, b, a] {- Mirror (Input 1) -}
  [c] ->= [c, b, a] {- Mirror (Input 1) -}
  [a, a, b] ->= [a] {- Mirror (Input 2) -}
  [b, a, b] ->= [b] {- Mirror (Input 2) -}
  [c, a, b] ->= [c] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, c] -> [c, b] {- Input 0 -}
  [a] ->= [a, b, a] {- Input 1 -}
  [b] ->= [a, b, b] {- Input 1 -}
  [c] ->= [a, b, c] {- Input 1 -}
  [b, a, a] ->= [a] {- Input 2 -}
  [b, a, b] ->= [b] {- Input 2 -}
  [b, a, c] ->= [c] {- Input 2 -}
reason
  ( a
  , St  / 0A  - 0A  \
        | -1A - -1A |
        \ -   - 1A  / )
  ( b
  , St  / 0A  0A  -1A \
        | -1A -1A -2A |
        \ -   -   -1A / )
  ( c
  , St  / 0A  1A -1A \
        | -1A 0A -2A |
        \ 1A  1A 0A  / )
   property Termination
has value Just True
for SRS
  [a] ->= [a, b, a] {- Input 1 -}
  [b] ->= [a, b, b] {- Input 1 -}
  [c] ->= [a, b, c] {- Input 1 -}
  [b, a, a] ->= [a] {- Input 2 -}
  [b, a, b] ->= [b] {- Input 2 -}
  [b, a, c] ->= [c] {- Input 2 -}
reason
  no strict rules

**************************************************
skeleton: \Mirror(1/2,3)\Context\Mirror(1/6,3)\Matrix{\ArcticBZ}{3}(0/6,3)[]
**************************************************
let {slowdown = 1.0}
in let Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 33146, clauses: 137225, status: Satisfied, time: 1.275393897s
{verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply last 857 length 3545
last 987 length 4074
cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 857 vars 3545 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 987 vars 4074 clauses

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.428116964000
  min duration 0.051692004000
  total durat. 1.720473927000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.698054958000
  min duration 0.055104283000
  total durat. 1.868849980000
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.518760816000
  min duration 1.518760816000
  total durat. 1.518760816000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 28}
    , self = 118
    , parent = Nothing
    , duration = 1.518760816000
    , status = Success
    , start = 2025-09-04 08:25:54.070726665 UTC
    , finish = 2025-09-04 08:25:55.589487481 UTC
    , thread_cap_info = ("ThreadId 190", 2, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.923138121000
  min duration 0.879544198000
  total durat. 1.802682319000
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.395738296000
  min duration 1.395738296000
  total durat. 1.395738296000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 3
      , total_length = 8}
    , self = 116
    , parent = Nothing
    , duration = 1.395738296000
    , status = Fail
    , start = 2025-09-04 08:25:53.734629992 UTC
    , finish = 2025-09-04 08:25:55.130368288 UTC
    , thread_cap_info = ("ThreadId 110", 2, False)}
**************************************************
F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                    , closure = Backward\n , start_strict_only = True\n , max_closure_length
F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                    = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 1 ,
F                    num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 3 , total_length
F                    = 8} , self = 116 , parent = Nothing , duration = 1.395738296000 , status
F                    = Fail , start = 2025-09-04 08:25:53.734629992 UTC , finish = 2025-09-04
F                    08:25:55.130368288 UTC , thread_cap_info = ("ThreadId 110", 2, False)}
F                    
| F                  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F                  = 10 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 ,
| F                  alphabet_size = 4 , total_length = 34} , self = 103 , parent = Nothing
| F                  , duration = 0.201329747000 , status = Fail , start = 2025-09-04 08:25:53.748568359
| F                  UTC , finish = 2025-09-04 08:25:53.949898106 UTC , thread_cap_info = ("ThreadId
| F                  132", 3, False)}
| F                  
| | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | F                = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | F                = 76} , self = 105 , parent = Nothing , duration = 0.273848933000 , status
| | F                = Fail , start = 2025-09-04 08:25:53.769426525 UTC , finish = 2025-09-04
| | F                08:25:54.043275458 UTC , thread_cap_info = ("ThreadId 148", 2, False)}
| | F                
| | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | F              = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | F              = 76} , self = 98 , parent = Nothing , duration = 0.148230853000 , status
| | | F              = Fail , start = 2025-09-04 08:25:53.769895098 UTC , finish = 2025-09-04
| | | F              08:25:53.918125951 UTC , thread_cap_info = ("ThreadId 149", 2, False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | F            = 2 , num_top_rules = 0 , num_weak_rules = 14 , alphabet_size = 8 , total_length
| | | | F            = 68} , self = 109 , parent = Nothing , duration = 0.422709724000 , status
| | | | F            = Fail , start = 2025-09-04 08:25:53.769912405 UTC , finish = 2025-09-04
| | | | F            08:25:54.192622129 UTC , thread_cap_info = ("ThreadId 150", 0, False)}
| | | | F            
| | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | F          = 2 , num_top_rules = 0 , num_weak_rules = 14 , alphabet_size = 8 , total_length
| | | | | F          = 68} , self = 99 , parent = Nothing , duration = 0.136656911000 , status
| | | | | F          = Fail , start = 2025-09-04 08:25:53.790572385 UTC , finish = 2025-09-04
| | | | | F          08:25:53.927229296 UTC , thread_cap_info = ("ThreadId 151", 0, False)}
| | | | | F          
| | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | F        = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 3 , total_length
| | | | | | F        = 28} , self = 106 , parent = Nothing , duration = 0.249430701000 , status
| | | | | | F        = Fail , start = 2025-09-04 08:25:53.80269077 UTC , finish = 2025-09-04
| | | | | | F        08:25:54.052121471 UTC , thread_cap_info = ("ThreadId 159", 2, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | F      = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 3 , total_length
| | | | | | | F      = 28} , self = 108 , parent = Nothing , duration = 0.327182787000 , status
| | | | | | | F      = Fail , start = 2025-09-04 08:25:53.804785081 UTC , finish = 2025-09-04
| | | | | | | F      08:25:54.131967868 UTC , thread_cap_info = ("ThreadId 160", 3, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 44 , num_strict_rules
| | | | | | | | F    = 2 , num_top_rules = 0 , num_weak_rules = 42 , alphabet_size = 9 , total_length
| | | | | | | | F    = 264} , self = 111 , parent = Nothing , duration = 0.428116964000 , status
| | | | | | | | F    = Fail , start = 2025-09-04 08:25:53.808540317 UTC , finish = 2025-09-04
| | | | | | | | F    08:25:54.236657281 UTC , thread_cap_info = ("ThreadId 168", 3, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 44 , num_strict_rules
| | | | | | | | | F  = 2 , num_top_rules = 0 , num_weak_rules = 42 , alphabet_size = 9 , total_length
| | | | | | | | | F  = 264} , self = 112 , parent = Nothing , duration = 0.444092001000 , status
| | | | | | | | | F  = Fail , start = 2025-09-04 08:25:53.80989288 UTC , finish = 2025-09-04
| | | | | | | | | F  08:25:54.253984881 UTC , thread_cap_info = ("ThreadId 170", 3, False)}
| | | | | | | | | F  
| | | F | | | | | |  
| | |   | F | | | |  
| F |   |   | | | |  
|   F   |   | | | |  
|       |   F | | |  
| S     |     | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| S     |     | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S     |     | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S     |     | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S     |     | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S     |     | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| S     |     | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| S     |     | | |  = 3 , total_length = 28} , self = 118 , parent = Nothing , duration = 1.518760816000
| S     |     | | |  , status = Success , start = 2025-09-04 08:25:54.070726665 UTC , finish
| S     |     | | |  = 2025-09-04 08:25:55.589487481 UTC , thread_cap_info = ("ThreadId 190",
| S     |     | | |  2, False)}
| S     |     | | |  
| |     |     F | |  
| |     F       | |  
| | F           | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | F           | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F           | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F           | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F           | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F           | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 16
| | F           | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 14 , alphabet_size
| | F           | |  = 8 , total_length = 68} , self = 117 , parent = Nothing , duration = 0.923138121000
| | F           | |  , status = Fail , start = 2025-09-04 08:25:54.21059493 UTC , finish = 2025-09-04
| | F           | |  08:25:55.133733051 UTC , thread_cap_info = ("ThreadId 193", 0, False)}
| | F           | |  
| | | F         | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | F         | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F         | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F         | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F         | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F         | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | F         | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | F         | |  = 3 , total_length = 28} , self = 115 , parent = Nothing , duration = 0.879544198000
| | | F         | |  , status = Fail , start = 2025-09-04 08:25:54.210594992 UTC , finish =
| | | F         | |  2025-09-04 08:25:55.09013919 UTC , thread_cap_info = ("ThreadId 192", 2,
| | | F         | |  False)}
| | | F         | |  
| | | |         F |  
| | | | F         |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F         |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F         |  = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | F         |  = 2 , num_top_rules = 0 , num_weak_rules = 14 , alphabet_size = 8 , total_length
| | | | F         |  = 68} , self = 113 , parent = Nothing , duration = 0.160027633000 , status
| | | | F         |  = Fail , start = 2025-09-04 08:25:54.249893496 UTC , finish = 2025-09-04
| | | | F         |  08:25:54.409921129 UTC , thread_cap_info = ("ThreadId 194", 1, False)}
| | | | F         |  
| | | | |         F  
| | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | F          = 2 , num_top_rules = 0 , num_weak_rules = 14 , alphabet_size = 8 , total_length
| | | | | F          = 68} , self = 114 , parent = Nothing , duration = 0.698054958000 , status
| | | | | F          = Fail , start = 2025-09-04 08:25:54.259560443 UTC , finish = 2025-09-04
| | | | | F          08:25:54.957615401 UTC , thread_cap_info = ("ThreadId 196", 1, False)}
| | | | | F          
| | | | F |          
| | | |   F          
| | | F              
| | | E              Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | E              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E              , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | E              , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | E              = 3 , total_length = 28} , self = 120 , parent = Nothing , duration = 0.567460515000
| | | E              , status = Except "AsyncCancelled" , start = 2025-09-04 08:25:55.129991068
| | | E              UTC , finish = 2025-09-04 08:25:55.697451583 UTC , thread_cap_info = ("ThreadId
| | | E              206", 2, False)}
| | | E              
F | | |              
  | F |              
  S   |              
      E              
