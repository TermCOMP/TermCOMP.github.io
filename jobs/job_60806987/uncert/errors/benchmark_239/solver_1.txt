last 5460 length 22965
CNF 5460 vars 22965 clauses
last 5362 length 22934
CNF 5362 vars 22934 clauses
last 1512 length 6089
last 1492 length 6077
CNF 1512 vars 6089 clauses
last 834 length 3321
last 838 length 3425
CNF 834 vars 3321 clauses
CNF 1492 vars 6077 clauses
CNF 838 vars 3425 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2654, clauses: 9558
last 2654 length 9558
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4361, clauses: 16149
last 4361 length 16149
CNF 2654 vars 9558 clauses
CNF 4361 vars 16149 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2654, clauses: 9558, status: Unsatisfied, time: 0.20425814s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10470, clauses: 43871
last 10470 length 43871
CNF 10470 vars 43871 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6348, clauses: 25900
last 6348 length 25900
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4361, clauses: 16149, status: Unsatisfied, time: 0.4602392s
CNF 6348 vars 25900 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13688, clauses: 57335
last 13688 length 57335
CNF 13688 vars 57335 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8434, clauses: 34581
last 8434 length 34581
CNF 8434 vars 34581 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6348, clauses: 25900, status: Unsatisfied, time: 1.535100747s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4361, clauses: 16621
last 4361 length 16621
CNF 4361 vars 16621 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10470, clauses: 43871, status: Unsatisfied, time: 2.132147503s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13688, clauses: 57335, status: Satisfied, time: 1.83964164s
last 1372 length 5559
CNF 1372 vars 5559 clauses
last 1364 length 5485
CNF 1364 vars 5485 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18610, clauses: 78656
last 18610 length 78656
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4057, clauses: 14944
last 4057 length 14944
CNF 4057 vars 14944 clauses
CNF 18610 vars 78656 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4361, clauses: 16621, status: Unsatisfied, time: 0.906299015s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13058, clauses: 54665
last 13058 length 54665
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4057, clauses: 14944, status: Unsatisfied, time: 0.330110471s
CNF 13058 vars 54665 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8240, clauses: 31205
last 8240 length 31205
CNF 8240 vars 31205 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8019, clauses: 32829
last 8019 length 32829
CNF 8019 vars 32829 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13058, clauses: 54665, status: Satisfied, time: 2.523943388s
last 1214 length 4891
last 1098 length 4465
CNF 1098 vars 4465 clauses
CNF 1214 vars 4891 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3442, clauses: 12511
last 3442 length 12511
CNF 3442 vars 12511 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3442, clauses: 12511, status: Unsatisfied, time: 0.576479995s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12345, clauses: 51731
last 12345 length 51731
CNF 12345 vars 51731 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7515, clauses: 30677
last 7515 length 30677
CNF 7515 vars 30677 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12345, clauses: 51731, status: Satisfied, time: 3.944114086s
last 1052 length 4231
CNF 1052 vars 4231 clauses
last 988 length 4017
CNF 988 vars 4017 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3033, clauses: 10955
last 3033 length 10955
CNF 3033 vars 10955 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3033, clauses: 10955, status: Unsatisfied, time: 0.17833803s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11131, clauses: 46593
last 11131 length 46593
CNF 11131 vars 46593 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6760, clauses: 27605
last 6760 length 27605
CNF 6760 vars 27605 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11131, clauses: 46593, status: Unsatisfied, time: 3.291511489s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4964, clauses: 19000
last 4964 length 19000
CNF 4964 vars 19000 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6760, clauses: 27605, status: Unsatisfied, time: 4.805780257s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4964, clauses: 19000, status: Unsatisfied, time: 1.47969501s
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23242, clauses: 109323
last 23242 length 109323
CNF 23242 vars 109323 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9379, clauses: 35597
last 9379 length 35597
CNF 9379 vars 35597 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19402, clauses: 82125
last 19402 length 82125
CNF 19402 vars 82125 clauses
**************************************************
summary
**************************************************
SRS with 4 strict rules and 2 weak rules on 3 letters       strictify
SRS with 6 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 54 rules on 9 letters       weights
SRS with 27 rules on 9 letters       DP
SRS with 74 strict rules and 27 weak rules on 15 letters       weights
SRS with 9 strict rules and 27 weak rules on 15 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [c, c, c] -> [b, a, a] {- Input 0 -}
  [a, b, a] -> [a, b, b] {- Input 1 -}
  [a, b, a] -> [b, c, c] {- Input 2 -}
  [a, c, b] -> [a, a, c] {- Input 3 -}
  [c, c, b] ->= [c, c, a] {- Input 4 -}
  [a, b, c] ->= [c, a, c] {- Input 5 -}
reason
  strictify
   property Termination
has value Just True
for SRS
  [c, c, c] -> [b, a, a] {- Input 0 -}
  [a, b, a] -> [a, b, b] {- Input 1 -}
  [a, b, a] -> [b, c, c] {- Input 2 -}
  [a, c, b] -> [a, a, c] {- Input 3 -}
  [c, c, b] -> [c, c, a] {- Strictified (Input 4) -}
  [a, b, c] -> [c, a, c] {- Strictified (Input 5) -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[c, c], [c, c], [c, c], [c, c]] -> [ [c, b] , [b, a] , [a, a] , [ a , c ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[c, c], [c, c], [c, c], [c, b]] -> [ [c, b] , [b, a] , [a, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[c, c], [c, c], [c, c], [c, a]] -> [ [c, b] , [b, a] , [a, a] , [ a , a ] ] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, c], [c, c], [c, c], [c, c]] -> [ [b, b] , [b, a] , [a, a] , [ a , c ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, c], [c, c], [c, c], [c, b]] -> [ [b, b] , [b, a] , [a, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, c], [c, c], [c, c], [c, a]] -> [ [b, b] , [b, a] , [a, a] , [ a , a ] ] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[a, c], [c, c], [c, c], [c, c]] -> [ [a, b] , [b, a] , [a, a] , [ a , c ] ] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[a, c], [c, c], [c, c], [c, b]] -> [ [a, b] , [b, a] , [a, a] , [ a , b ] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[a, c], [c, c], [c, c], [c, a]] -> [ [a, b] , [b, a] , [a, a] , [ a , a ] ] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[c, a], [a, b], [b, a], [a, c]] -> [ [c, a] , [a, b] , [b, b] , [ b , c ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[c, a], [a, b], [b, a], [a, b]] -> [ [c, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[c, a], [a, b], [b, a], [a, a]] -> [ [c, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, b], [b, a], [a, c]] -> [ [b, a] , [a, b] , [b, b] , [ b , c ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, a], [a, b]] -> [ [b, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, b], [b, a], [a, a]] -> [ [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[a, a], [a, b], [b, a], [a, c]] -> [ [a, a] , [a, b] , [b, b] , [ b , c ] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[a, a], [a, b], [b, a], [a, b]] -> [ [a, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[a, a], [a, b], [b, a], [a, a]] -> [ [a, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[c, a], [a, b], [b, a], [a, c]] -> [ [c, b] , [b, c] , [c, c] , [ c , c ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[c, a], [a, b], [b, a], [a, b]] -> [ [c, b] , [b, c] , [c, c] , [ c , b ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[c, a], [a, b], [b, a], [a, a]] -> [ [c, b] , [b, c] , [c, c] , [ c , a ] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, a], [a, b], [b, a], [a, c]] -> [ [b, b] , [b, c] , [c, c] , [ c , c ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, a], [a, b], [b, a], [a, b]] -> [ [b, b] , [b, c] , [c, c] , [ c , b ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, a], [a, b], [b, a], [a, a]] -> [ [b, b] , [b, c] , [c, c] , [ c , a ] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[a, a], [a, b], [b, a], [a, c]] -> [ [a, b] , [b, c] , [c, c] , [ c , c ] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[a, a], [a, b], [b, a], [a, b]] -> [ [a, b] , [b, c] , [c, c] , [ c , b ] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[a, a], [a, b], [b, a], [a, a]] -> [ [a, b] , [b, c] , [c, c] , [ c , a ] ] {- Semlab 2 (Concon 2 (Input 2)) -}
  [[c, a], [a, c], [c, b], [b, c]] -> [ [c, a] , [a, a] , [a, c] , [ c , c ] ] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[c, a], [a, c], [c, b], [b, b]] -> [ [c, a] , [a, a] , [a, c] , [ c , b ] ] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[c, a], [a, c], [c, b], [b, a]] -> [ [c, a] , [a, a] , [a, c] , [ c , a ] ] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[b, a], [a, c], [c, b], [b, c]] -> [ [b, a] , [a, a] , [a, c] , [ c , c ] ] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[b, a], [a, c], [c, b], [b, b]] -> [ [b, a] , [a, a] , [a, c] , [ c , b ] ] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[b, a], [a, c], [c, b], [b, a]] -> [ [b, a] , [a, a] , [a, c] , [ c , a ] ] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[a, a], [a, c], [c, b], [b, c]] -> [ [a, a] , [a, a] , [a, c] , [ c , c ] ] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[a, a], [a, c], [c, b], [b, b]] -> [ [a, a] , [a, a] , [a, c] , [ c , b ] ] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[a, a], [a, c], [c, b], [b, a]] -> [ [a, a] , [a, a] , [a, c] , [ c , a ] ] {- Semlab 2 (Concon 2 (Input 3)) -}
  [[c, c], [c, c], [c, b], [b, c]] -> [ [c, c] , [c, c] , [c, a] , [ a , c ] ] {- Semlab 0 (Concon 0 (Strictified (Input 4))) -}
  [[c, c], [c, c], [c, b], [b, b]] -> [ [c, c] , [c, c] , [c, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Strictified (Input 4))) -}
  [[c, c], [c, c], [c, b], [b, a]] -> [ [c, c] , [c, c] , [c, a] , [ a , a ] ] {- Semlab 0 (Concon 2 (Strictified (Input 4))) -}
  [[b, c], [c, c], [c, b], [b, c]] -> [ [b, c] , [c, c] , [c, a] , [ a , c ] ] {- Semlab 1 (Concon 0 (Strictified (Input 4))) -}
  [[b, c], [c, c], [c, b], [b, b]] -> [ [b, c] , [c, c] , [c, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Strictified (Input 4))) -}
  [[b, c], [c, c], [c, b], [b, a]] -> [ [b, c] , [c, c] , [c, a] , [ a , a ] ] {- Semlab 1 (Concon 2 (Strictified (Input 4))) -}
  [[a, c], [c, c], [c, b], [b, c]] -> [ [a, c] , [c, c] , [c, a] , [ a , c ] ] {- Semlab 2 (Concon 0 (Strictified (Input 4))) -}
  [[a, c], [c, c], [c, b], [b, b]] -> [ [a, c] , [c, c] , [c, a] , [ a , b ] ] {- Semlab 2 (Concon 1 (Strictified (Input 4))) -}
  [[a, c], [c, c], [c, b], [b, a]] -> [ [a, c] , [c, c] , [c, a] , [ a , a ] ] {- Semlab 2 (Concon 2 (Strictified (Input 4))) -}
  [[c, a], [a, b], [b, c], [c, c]] -> [ [c, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 0 (Concon 0 (Strictified (Input 5))) -}
  [[c, a], [a, b], [b, c], [c, b]] -> [ [c, c] , [c, a] , [a, c] , [ c , b ] ] {- Semlab 0 (Concon 1 (Strictified (Input 5))) -}
  [[c, a], [a, b], [b, c], [c, a]] -> [ [c, c] , [c, a] , [a, c] , [ c , a ] ] {- Semlab 0 (Concon 2 (Strictified (Input 5))) -}
  [[b, a], [a, b], [b, c], [c, c]] -> [ [b, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 1 (Concon 0 (Strictified (Input 5))) -}
  [[b, a], [a, b], [b, c], [c, b]] -> [ [b, c] , [c, a] , [a, c] , [ c , b ] ] {- Semlab 1 (Concon 1 (Strictified (Input 5))) -}
  [[b, a], [a, b], [b, c], [c, a]] -> [ [b, c] , [c, a] , [a, c] , [ c , a ] ] {- Semlab 1 (Concon 2 (Strictified (Input 5))) -}
  [[a, a], [a, b], [b, c], [c, c]] -> [ [a, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 2 (Concon 0 (Strictified (Input 5))) -}
  [[a, a], [a, b], [b, c], [c, b]] -> [ [a, c] , [c, a] , [a, c] , [ c , b ] ] {- Semlab 2 (Concon 1 (Strictified (Input 5))) -}
  [[a, a], [a, b], [b, c], [c, a]] -> [ [a, c] , [c, a] , [a, c] , [ c , a ] ] {- Semlab 2 (Concon 2 (Strictified (Input 5))) -}
reason
  ([a, a], 0/1)
  ([a, b], 1/1)
  ([a, c], 2/3)
  ([b, a], 1/1)
  ([b, b], 0/1)
  ([b, c], 1/3)
  ([c, a], 0/1)
  ([c, b], 1/1)
  ([c, c], 2/3)
   property Termination
has value Just True
for SRS
  [[c, c], [c, c], [c, c], [c, c]] -> [ [c, b] , [b, a] , [a, a] , [ a , c ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[c, c], [c, c], [c, c], [c, b]] -> [ [c, b] , [b, a] , [a, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[c, c], [c, c], [c, c], [c, a]] -> [ [c, b] , [b, a] , [a, a] , [ a , a ] ] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[a, c], [c, c], [c, c], [c, c]] -> [ [a, b] , [b, a] , [a, a] , [ a , c ] ] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[a, c], [c, c], [c, c], [c, b]] -> [ [a, b] , [b, a] , [a, a] , [ a , b ] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[a, c], [c, c], [c, c], [c, a]] -> [ [a, b] , [b, a] , [a, a] , [ a , a ] ] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[c, a], [a, b], [b, a], [a, a]] -> [ [c, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, b], [b, a], [a, a]] -> [ [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[a, a], [a, b], [b, a], [a, a]] -> [ [a, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[c, a], [a, b], [b, a], [a, c]] -> [ [c, b] , [b, c] , [c, c] , [ c , c ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[c, a], [a, b], [b, a], [a, b]] -> [ [c, b] , [b, c] , [c, c] , [ c , b ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[c, a], [a, b], [b, a], [a, a]] -> [ [c, b] , [b, c] , [c, c] , [ c , a ] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[a, a], [a, b], [b, a], [a, c]] -> [ [a, b] , [b, c] , [c, c] , [ c , c ] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[a, a], [a, b], [b, a], [a, b]] -> [ [a, b] , [b, c] , [c, c] , [ c , b ] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[a, a], [a, b], [b, a], [a, a]] -> [ [a, b] , [b, c] , [c, c] , [ c , a ] ] {- Semlab 2 (Concon 2 (Input 2)) -}
  [[c, a], [a, c], [c, b], [b, b]] -> [ [c, a] , [a, a] , [a, c] , [ c , b ] ] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[b, a], [a, c], [c, b], [b, b]] -> [ [b, a] , [a, a] , [a, c] , [ c , b ] ] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[a, a], [a, c], [c, b], [b, b]] -> [ [a, a] , [a, a] , [a, c] , [ c , b ] ] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[c, c], [c, c], [c, b], [b, b]] -> [ [c, c] , [c, c] , [c, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Strictified (Input 4))) -}
  [[b, c], [c, c], [c, b], [b, b]] -> [ [b, c] , [c, c] , [c, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Strictified (Input 4))) -}
  [[a, c], [c, c], [c, b], [b, b]] -> [ [a, c] , [c, c] , [c, a] , [ a , b ] ] {- Semlab 2 (Concon 1 (Strictified (Input 4))) -}
  [[c, a], [a, b], [b, c], [c, c]] -> [ [c, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 0 (Concon 0 (Strictified (Input 5))) -}
  [[c, a], [a, b], [b, c], [c, b]] -> [ [c, c] , [c, a] , [a, c] , [ c , b ] ] {- Semlab 0 (Concon 1 (Strictified (Input 5))) -}
  [[c, a], [a, b], [b, c], [c, a]] -> [ [c, c] , [c, a] , [a, c] , [ c , a ] ] {- Semlab 0 (Concon 2 (Strictified (Input 5))) -}
  [[a, a], [a, b], [b, c], [c, c]] -> [ [a, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 2 (Concon 0 (Strictified (Input 5))) -}
  [[a, a], [a, b], [b, c], [c, b]] -> [ [a, c] , [c, a] , [a, c] , [ c , b ] ] {- Semlab 2 (Concon 1 (Strictified (Input 5))) -}
  [[a, a], [a, b], [b, c], [c, a]] -> [ [a, c] , [c, a] , [a, c] , [ c , a ] ] {- Semlab 2 (Concon 2 (Strictified (Input 5))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[c, c], [c, c], [c, c], [c, c]] ->= [ [c, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[c, c], [c, c], [c, c], [c, b]] ->= [ [c, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[c, c], [c, c], [c, c], [c, a]] ->= [ [c, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[a, c], [c, c], [c, c], [c, c]] ->= [ [a, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[a, c], [c, c], [c, c], [c, b]] ->= [ [a, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[a, c], [c, c], [c, c], [c, a]] ->= [ [a, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[c, a], [a, b], [b, a], [a, a]] ->= [ [c, a] , [a, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, a], [a, b], [b, a], [a, a]] ->= [ [b, a] , [a, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[a, a], [a, b], [b, a], [a, a]] ->= [ [a, a] , [a, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a], [a, b], [b, a], [a, c]] ->= [ [c, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[c, a], [a, b], [b, a], [a, b]] ->= [ [c, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[c, a], [a, b], [b, a], [a, a]] ->= [ [c, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[a, a], [a, b], [b, a], [a, c]] ->= [ [a, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
  [[a, a], [a, b], [b, a], [a, b]] ->= [ [a, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[a, a], [a, b], [b, a], [a, a]] ->= [ [a, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
  [[c, a], [a, c], [c, b], [b, b]] ->= [ [c, a] , [a, a] , [a, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 3))) -}
  [[b, a], [a, c], [c, b], [b, b]] ->= [ [b, a] , [a, a] , [a, c] , [ c , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 3))) -}
  [[a, a], [a, c], [c, b], [b, b]] ->= [ [a, a] , [a, a] , [a, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 3))) -}
  [[c, c], [c, c], [c, b], [b, b]] ->= [ [c, c] , [c, c] , [c, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Strictified (Input 4)))) -}
  [[b, c], [c, c], [c, b], [b, b]] ->= [ [b, c] , [c, c] , [c, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Strictified (Input 4)))) -}
  [[a, c], [c, c], [c, b], [b, b]] ->= [ [a, c] , [c, c] , [c, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Strictified (Input 4)))) -}
  [[c, a], [a, b], [b, c], [c, c]] ->= [ [c, c] , [c, a] , [a, c] , [ c , c ] ] {- DP Nontop (Semlab 0 (Concon 0 (Strictified (Input 5)))) -}
  [[c, a], [a, b], [b, c], [c, b]] ->= [ [c, c] , [c, a] , [a, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Strictified (Input 5)))) -}
  [[c, a], [a, b], [b, c], [c, a]] ->= [ [c, c] , [c, a] , [a, c] , [ c , a ] ] {- DP Nontop (Semlab 0 (Concon 2 (Strictified (Input 5)))) -}
  [[a, a], [a, b], [b, c], [c, c]] ->= [ [a, c] , [c, a] , [a, c] , [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 0 (Strictified (Input 5)))) -}
  [[a, a], [a, b], [b, c], [c, b]] ->= [ [a, c] , [c, a] , [a, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Strictified (Input 5)))) -}
  [[a, a], [a, b], [b, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 2 (Strictified (Input 5)))) -}
  [[a, a]#, [a, b], [b, a], [a, a]] |-> [ [a, a]# , [a, b] , [b, b] , [ b , a ] ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, a]#, [a, b], [b, a], [a, a]] |-> [ [ b , a ]# ] {- DP (Top 3) (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, a]#, [a, b], [b, a], [a, a]] |-> [ [b, c]# , [c, c] , [ c , a ] ] {- DP (Top 1) (Semlab 2 (Concon 2 (Input 2))) -}
  [[a, a]#, [a, b], [b, a], [a, a]] |-> [ [ c , a ]# ] {- DP (Top 3) (Semlab 2 (Concon 2 (Input 2))) -}
  [[a, a]#, [a, b], [b, a], [a, a]] |-> [ [c, c]# , [ c , a ] ] {- DP (Top 2) (Semlab 2 (Concon 2 (Input 2))) -}
  [[a, a]#, [a, b], [b, a], [a, b]] |-> [ [b, c]# , [c, c] , [ c , b ] ] {- DP (Top 1) (Semlab 2 (Concon 1 (Input 2))) -}
  [[a, a]#, [a, b], [b, a], [a, b]] |-> [ [c, c]# , [ c , b ] ] {- DP (Top 2) (Semlab 2 (Concon 1 (Input 2))) -}
  [[a, a]#, [a, b], [b, a], [a, c]] |-> [ [b, c]# , [c, c] , [ c , c ] ] {- DP (Top 1) (Semlab 2 (Concon 0 (Input 2))) -}
  [[a, a]#, [a, b], [b, a], [a, c]] |-> [ [ c , c ]# ] {- DP (Top 3) (Semlab 2 (Concon 0 (Input 2))) -}
  [[a, a]#, [a, b], [b, a], [a, c]] |-> [ [c, c]# , [ c , c ] ] {- DP (Top 2) (Semlab 2 (Concon 0 (Input 2))) -}
  [[a, a]#, [a, b], [b, c], [c, a]] |-> [ [a, c]# , [ c , a ] ] {- DP (Top 2) (Semlab 2 (Concon 2 (Strictified (Input 5)))) -}
  [[a, a]#, [a, b], [b, c], [c, a]] |-> [ [a, c]# , [c, a] , [a, c] , [ c , a ] ] {- DP (Top 0) (Semlab 2 (Concon 2 (Strictified (Input 5)))) -}
  [[a, a]#, [a, b], [b, c], [c, a]] |-> [ [c, a]# , [a, c] , [ c , a ] ] {- DP (Top 1) (Semlab 2 (Concon 2 (Strictified (Input 5)))) -}
  [[a, a]#, [a, b], [b, c], [c, b]] |-> [ [a, c]# , [c, a] , [a, c] , [ c , b ] ] {- DP (Top 0) (Semlab 2 (Concon 1 (Strictified (Input 5)))) -}
  [[a, a]#, [a, b], [b, c], [c, b]] |-> [ [a, c]# , [ c , b ] ] {- DP (Top 2) (Semlab 2 (Concon 1 (Strictified (Input 5)))) -}
  [[a, a]#, [a, b], [b, c], [c, b]] |-> [ [c, a]# , [a, c] , [ c , b ] ] {- DP (Top 1) (Semlab 2 (Concon 1 (Strictified (Input 5)))) -}
  [[a, a]#, [a, b], [b, c], [c, c]] |-> [ [a, c]# , [c, a] , [a, c] , [ c , c ] ] {- DP (Top 0) (Semlab 2 (Concon 0 (Strictified (Input 5)))) -}
  [[a, a]#, [a, b], [b, c], [c, c]] |-> [ [a, c]# , [ c , c ] ] {- DP (Top 2) (Semlab 2 (Concon 0 (Strictified (Input 5)))) -}
  [[a, a]#, [a, b], [b, c], [c, c]] |-> [ [c, a]# , [a, c] , [ c , c ] ] {- DP (Top 1) (Semlab 2 (Concon 0 (Strictified (Input 5)))) -}
  [[a, a]#, [a, c], [c, b], [b, b]] |-> [ [a, a]# , [a, a] , [a, c] , [ c , b ] ] {- DP (Top 0) (Semlab 2 (Concon 1 (Input 3))) -}
  [[a, a]#, [a, c], [c, b], [b, b]] |-> [ [a, a]# , [a, c] , [ c , b ] ] {- DP (Top 1) (Semlab 2 (Concon 1 (Input 3))) -}
  [[a, a]#, [a, c], [c, b], [b, b]] |-> [ [a, c]# , [ c , b ] ] {- DP (Top 2) (Semlab 2 (Concon 1 (Input 3))) -}
  [[a, c]#, [c, c], [c, b], [b, b]] |-> [ [a, c]# , [c, c] , [c, a] , [ a , b ] ] {- DP (Top 0) (Semlab 2 (Concon 1 (Strictified (Input 4)))) -}
  [[a, c]#, [c, c], [c, b], [b, b]] |-> [ [c, a]# , [ a , b ] ] {- DP (Top 2) (Semlab 2 (Concon 1 (Strictified (Input 4)))) -}
  [[a, c]#, [c, c], [c, b], [b, b]] |-> [ [c, c]# , [c, a] , [ a , b ] ] {- DP (Top 1) (Semlab 2 (Concon 1 (Strictified (Input 4)))) -}
  [[a, c]#, [c, c], [c, c], [c, a]] |-> [ [ a , a ]# ] {- DP (Top 3) (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, c]#, [c, c], [c, c], [c, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 2) (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, c]#, [c, c], [c, c], [c, a]] |-> [ [b, a]# , [a, a] , [ a , a ] ] {- DP (Top 1) (Semlab 2 (Concon 2 (Input 0))) -}
  [[a, c]#, [c, c], [c, c], [c, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 2) (Semlab 2 (Concon 1 (Input 0))) -}
  [[a, c]#, [c, c], [c, c], [c, b]] |-> [ [b, a]# , [a, a] , [ a , b ] ] {- DP (Top 1) (Semlab 2 (Concon 1 (Input 0))) -}
  [[a, c]#, [c, c], [c, c], [c, c]] |-> [ [a, a]# , [ a , c ] ] {- DP (Top 2) (Semlab 2 (Concon 0 (Input 0))) -}
  [[a, c]#, [c, c], [c, c], [c, c]] |-> [ [ a , c ]# ] {- DP (Top 3) (Semlab 2 (Concon 0 (Input 0))) -}
  [[a, c]#, [c, c], [c, c], [c, c]] |-> [ [b, a]# , [a, a] , [ a , c ] ] {- DP (Top 1) (Semlab 2 (Concon 0 (Input 0))) -}
  [[b, a]#, [a, b], [b, a], [a, a]] |-> [ [ b , a ]# ] {- DP (Top 3) (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, a]#, [a, b], [b, a], [a, a]] |-> [ [b, a]# , [a, b] , [b, b] , [ b , a ] ] {- DP (Top 0) (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, a]#, [a, c], [c, b], [b, b]] |-> [ [a, a]# , [a, c] , [ c , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Input 3))) -}
  [[b, a]#, [a, c], [c, b], [b, b]] |-> [ [a, c]# , [ c , b ] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Input 3))) -}
  [[b, a]#, [a, c], [c, b], [b, b]] |-> [ [b, a]# , [a, a] , [a, c] , [ c , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 3))) -}
  [[b, c]#, [c, c], [c, b], [b, b]] |-> [ [b, c]# , [c, c] , [c, a] , [ a , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Strictified (Input 4)))) -}
  [[b, c]#, [c, c], [c, b], [b, b]] |-> [ [c, a]# , [ a , b ] ] {- DP (Top 2) (Semlab 1 (Concon 1 (Strictified (Input 4)))) -}
  [[b, c]#, [c, c], [c, b], [b, b]] |-> [ [c, c]# , [c, a] , [ a , b ] ] {- DP (Top 1) (Semlab 1 (Concon 1 (Strictified (Input 4)))) -}
  [[c, a]#, [a, b], [b, a], [a, a]] |-> [ [ b , a ]# ] {- DP (Top 3) (Semlab 0 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, b], [b, a], [a, a]] |-> [ [b, c]# , [c, c] , [ c , a ] ] {- DP (Top 1) (Semlab 0 (Concon 2 (Input 2))) -}
  [[c, a]#, [a, b], [b, a], [a, a]] |-> [ [ c , a ]# ] {- DP (Top 3) (Semlab 0 (Concon 2 (Input 2))) -}
  [[c, a]#, [a, b], [b, a], [a, a]] |-> [ [c, a]# , [a, b] , [b, b] , [ b , a ] ] {- DP (Top 0) (Semlab 0 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, b], [b, a], [a, a]] |-> [ [c, c]# , [ c , a ] ] {- DP (Top 2) (Semlab 0 (Concon 2 (Input 2))) -}
  [[c, a]#, [a, b], [b, a], [a, b]] |-> [ [b, c]# , [c, c] , [ c , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 2))) -}
  [[c, a]#, [a, b], [b, a], [a, b]] |-> [ [c, c]# , [ c , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 2))) -}
  [[c, a]#, [a, b], [b, a], [a, c]] |-> [ [b, c]# , [c, c] , [ c , c ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 2))) -}
  [[c, a]#, [a, b], [b, a], [a, c]] |-> [ [ c , c ]# ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 2))) -}
  [[c, a]#, [a, b], [b, a], [a, c]] |-> [ [c, c]# , [ c , c ] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 2))) -}
  [[c, a]#, [a, b], [b, c], [c, a]] |-> [ [a, c]# , [ c , a ] ] {- DP (Top 2) (Semlab 0 (Concon 2 (Strictified (Input 5)))) -}
  [[c, a]#, [a, b], [b, c], [c, a]] |-> [ [c, a]# , [a, c] , [ c , a ] ] {- DP (Top 1) (Semlab 0 (Concon 2 (Strictified (Input 5)))) -}
  [[c, a]#, [a, b], [b, c], [c, a]] |-> [ [c, c]# , [c, a] , [a, c] , [ c , a ] ] {- DP (Top 0) (Semlab 0 (Concon 2 (Strictified (Input 5)))) -}
  [[c, a]#, [a, b], [b, c], [c, b]] |-> [ [a, c]# , [ c , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Strictified (Input 5)))) -}
  [[c, a]#, [a, b], [b, c], [c, b]] |-> [ [c, a]# , [a, c] , [ c , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Strictified (Input 5)))) -}
  [[c, a]#, [a, b], [b, c], [c, b]] |-> [ [c, c]# , [c, a] , [a, c] , [ c , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Strictified (Input 5)))) -}
  [[c, a]#, [a, b], [b, c], [c, c]] |-> [ [a, c]# , [ c , c ] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Strictified (Input 5)))) -}
  [[c, a]#, [a, b], [b, c], [c, c]] |-> [ [c, a]# , [a, c] , [ c , c ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Strictified (Input 5)))) -}
  [[c, a]#, [a, b], [b, c], [c, c]] |-> [ [c, c]# , [c, a] , [a, c] , [ c , c ] ] {- DP (Top 0) (Semlab 0 (Concon 0 (Strictified (Input 5)))) -}
  [[c, a]#, [a, c], [c, b], [b, b]] |-> [ [a, a]# , [a, c] , [ c , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 3))) -}
  [[c, a]#, [a, c], [c, b], [b, b]] |-> [ [a, c]# , [ c , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 3))) -}
  [[c, a]#, [a, c], [c, b], [b, b]] |-> [ [c, a]# , [a, a] , [a, c] , [ c , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 3))) -}
  [[c, c]#, [c, c], [c, b], [b, b]] |-> [ [c, a]# , [ a , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Strictified (Input 4)))) -}
  [[c, c]#, [c, c], [c, b], [b, b]] |-> [ [c, c]# , [c, a] , [ a , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Strictified (Input 4)))) -}
  [[c, c]#, [c, c], [c, b], [b, b]] |-> [ [c, c]# , [c, c] , [c, a] , [ a , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Strictified (Input 4)))) -}
  [[c, c]#, [c, c], [c, c], [c, a]] |-> [ [ a , a ]# ] {- DP (Top 3) (Semlab 0 (Concon 2 (Input 0))) -}
  [[c, c]#, [c, c], [c, c], [c, a]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 2) (Semlab 0 (Concon 2 (Input 0))) -}
  [[c, c]#, [c, c], [c, c], [c, a]] |-> [ [b, a]# , [a, a] , [ a , a ] ] {- DP (Top 1) (Semlab 0 (Concon 2 (Input 0))) -}
  [[c, c]#, [c, c], [c, c], [c, b]] |-> [ [a, a]# , [ a , b ] ] {- DP (Top 2) (Semlab 0 (Concon 1 (Input 0))) -}
  [[c, c]#, [c, c], [c, c], [c, b]] |-> [ [b, a]# , [a, a] , [ a , b ] ] {- DP (Top 1) (Semlab 0 (Concon 1 (Input 0))) -}
  [[c, c]#, [c, c], [c, c], [c, c]] |-> [ [a, a]# , [ a , c ] ] {- DP (Top 2) (Semlab 0 (Concon 0 (Input 0))) -}
  [[c, c]#, [c, c], [c, c], [c, c]] |-> [ [ a , c ]# ] {- DP (Top 3) (Semlab 0 (Concon 0 (Input 0))) -}
  [[c, c]#, [c, c], [c, c], [c, c]] |-> [ [b, a]# , [a, a] , [ a , c ] ] {- DP (Top 1) (Semlab 0 (Concon 0 (Input 0))) -}
reason
  ([a, a], 3/1)
  ([a, b], 3/1)
  ([a, c], 3/1)
  ([b, a], 3/1)
  ([b, b], 3/1)
  ([b, c], 3/1)
  ([c, a], 3/1)
  ([c, b], 3/1)
  ([c, c], 3/1)
  ([a, a]#, 4/1)
  ([a, c]#, 3/1)
  ([b, a]#, 2/1)
  ([b, c]#, 0/1)
  ([c, a]#, 3/1)
  ([c, c]#, 0/1)
   property Termination
has value Just True
for SRS
  [[c, c], [c, c], [c, c], [c, c]] ->= [ [c, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 0))) -}
  [[c, c], [c, c], [c, c], [c, b]] ->= [ [c, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 0))) -}
  [[c, c], [c, c], [c, c], [c, a]] ->= [ [c, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 0))) -}
  [[a, c], [c, c], [c, c], [c, c]] ->= [ [a, b] , [b, a] , [a, a] , [ a , c ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 0))) -}
  [[a, c], [c, c], [c, c], [c, b]] ->= [ [a, b] , [b, a] , [a, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 0))) -}
  [[a, c], [c, c], [c, c], [c, a]] ->= [ [a, b] , [b, a] , [a, a] , [ a , a ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 0))) -}
  [[c, a], [a, b], [b, a], [a, a]] ->= [ [c, a] , [a, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, a], [a, b], [b, a], [a, a]] ->= [ [b, a] , [a, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 1 (Concon 2 (Input 1))) -}
  [[a, a], [a, b], [b, a], [a, a]] ->= [ [a, a] , [a, b] , [b, b] , [ b , a ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 1))) -}
  [[c, a], [a, b], [b, a], [a, c]] ->= [ [c, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 0 (Concon 0 (Input 2))) -}
  [[c, a], [a, b], [b, a], [a, b]] ->= [ [c, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 2))) -}
  [[c, a], [a, b], [b, a], [a, a]] ->= [ [c, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 0 (Concon 2 (Input 2))) -}
  [[a, a], [a, b], [b, a], [a, c]] ->= [ [a, b] , [b, c] , [c, c] , [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 0 (Input 2))) -}
  [[a, a], [a, b], [b, a], [a, b]] ->= [ [a, b] , [b, c] , [c, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 2))) -}
  [[a, a], [a, b], [b, a], [a, a]] ->= [ [a, b] , [b, c] , [c, c] , [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 2 (Input 2))) -}
  [[c, a], [a, c], [c, b], [b, b]] ->= [ [c, a] , [a, a] , [a, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Input 3))) -}
  [[b, a], [a, c], [c, b], [b, b]] ->= [ [b, a] , [a, a] , [a, c] , [ c , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Input 3))) -}
  [[a, a], [a, c], [c, b], [b, b]] ->= [ [a, a] , [a, a] , [a, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Input 3))) -}
  [[c, c], [c, c], [c, b], [b, b]] ->= [ [c, c] , [c, c] , [c, a] , [ a , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Strictified (Input 4)))) -}
  [[b, c], [c, c], [c, b], [b, b]] ->= [ [b, c] , [c, c] , [c, a] , [ a , b ] ] {- DP Nontop (Semlab 1 (Concon 1 (Strictified (Input 4)))) -}
  [[a, c], [c, c], [c, b], [b, b]] ->= [ [a, c] , [c, c] , [c, a] , [ a , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Strictified (Input 4)))) -}
  [[c, a], [a, b], [b, c], [c, c]] ->= [ [c, c] , [c, a] , [a, c] , [ c , c ] ] {- DP Nontop (Semlab 0 (Concon 0 (Strictified (Input 5)))) -}
  [[c, a], [a, b], [b, c], [c, b]] ->= [ [c, c] , [c, a] , [a, c] , [ c , b ] ] {- DP Nontop (Semlab 0 (Concon 1 (Strictified (Input 5)))) -}
  [[c, a], [a, b], [b, c], [c, a]] ->= [ [c, c] , [c, a] , [a, c] , [ c , a ] ] {- DP Nontop (Semlab 0 (Concon 2 (Strictified (Input 5)))) -}
  [[a, a], [a, b], [b, c], [c, c]] ->= [ [a, c] , [c, a] , [a, c] , [ c , c ] ] {- DP Nontop (Semlab 2 (Concon 0 (Strictified (Input 5)))) -}
  [[a, a], [a, b], [b, c], [c, b]] ->= [ [a, c] , [c, a] , [a, c] , [ c , b ] ] {- DP Nontop (Semlab 2 (Concon 1 (Strictified (Input 5)))) -}
  [[a, a], [a, b], [b, c], [c, a]] ->= [ [a, c] , [c, a] , [a, c] , [ c , a ] ] {- DP Nontop (Semlab 2 (Concon 2 (Strictified (Input 5)))) -}
  [[a, a]#, [a, b], [b, a], [a, a]] |-> [ [a, a]# , [a, b] , [b, b] , [ b , a ] ] {- DP (Top 0) (Semlab 2 (Concon 2 (Input 1))) -}
  [[a, a]#, [a, c], [c, b], [b, b]] |-> [ [a, a]# , [a, a] , [a, c] , [ c , b ] ] {- DP (Top 0) (Semlab 2 (Concon 1 (Input 3))) -}
  [[a, c]#, [c, c], [c, b], [b, b]] |-> [ [a, c]# , [c, c] , [c, a] , [ a , b ] ] {- DP (Top 0) (Semlab 2 (Concon 1 (Strictified (Input 4)))) -}
  [[b, a]#, [a, b], [b, a], [a, a]] |-> [ [b, a]# , [a, b] , [b, b] , [ b , a ] ] {- DP (Top 0) (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, a]#, [a, c], [c, b], [b, b]] |-> [ [b, a]# , [a, a] , [a, c] , [ c , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Input 3))) -}
  [[b, c]#, [c, c], [c, b], [b, b]] |-> [ [b, c]# , [c, c] , [c, a] , [ a , b ] ] {- DP (Top 0) (Semlab 1 (Concon 1 (Strictified (Input 4)))) -}
  [[c, a]#, [a, b], [b, a], [a, a]] |-> [ [c, a]# , [a, b] , [b, b] , [ b , a ] ] {- DP (Top 0) (Semlab 0 (Concon 2 (Input 1))) -}
  [[c, a]#, [a, c], [c, b], [b, b]] |-> [ [c, a]# , [a, a] , [a, c] , [ c , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Input 3))) -}
  [[c, c]#, [c, c], [c, b], [b, b]] |-> [ [c, c]# , [c, c] , [c, a] , [ a , b ] ] {- DP (Top 0) (Semlab 0 (Concon 1 (Strictified (Input 4)))) -}
reason
  EDG

**************************************************
skeleton: (4/2,3)\Strictify(6,3)\TileAllAll{2}(54,9)\Weight(27,9)\Deepee(74/27,15)\Weight(9/27,15)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 4
  max duration 17.447969310000
  min duration 0.044626807000
  total durat. 18.467632200000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 27
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 216}
    , self = 108
    , parent = Nothing
    , duration = 17.447969310000
    , status = Fail
    , start = 2025-09-04 08:20:55.509604468 UTC
    , finish = 2025-09-04 08:21:12.957573778 UTC
    , thread_cap_info = ("ThreadId 53", 2, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 4.718858833000
  min duration 2.447756994000
  total durat. 10.193687050000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 6
      , alphabet_size = 6
      , total_length = 72}
    , self = 73
    , parent = Nothing
    , duration = 2.447756994000
    , status = Success
    , start = 2025-09-04 08:20:55.930355447 UTC
    , finish = 2025-09-04 08:20:58.378112441 UTC
    , thread_cap_info = ("ThreadId 107", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 6
      , alphabet_size = 6
      , total_length = 66}
    , self = 84
    , parent = Nothing
    , duration = 3.027071223000
    , status = Success
    , start = 2025-09-04 08:20:58.713154211 UTC
    , finish = 2025-09-04 08:21:01.740225434 UTC
    , thread_cap_info = ("ThreadId 131", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 6
      , alphabet_size = 5
      , total_length = 54}
    , self = 94
    , parent = Nothing
    , duration = 4.718858833000
    , status = Success
    , start = 2025-09-04 08:21:01.836536571 UTC
    , finish = 2025-09-04 08:21:06.555395404 UTC
    , thread_cap_info = ("ThreadId 148", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 3.582280399000
  min duration 2.441092062000
  total durat. 6.023372461000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 42}
    , self = 72
    , parent = Nothing
    , duration = 2.441092062000
    , status = Fail
    , start = 2025-09-04 08:20:55.933545843 UTC
    , finish = 2025-09-04 08:20:58.374637905 UTC
    , thread_cap_info = ("ThreadId 108", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 6
      , alphabet_size = 5
      , total_length = 48}
    , self = 104
    , parent = Nothing
    , duration = 3.582280399000
    , status = Fail
    , start = 2025-09-04 08:21:06.633169353 UTC
    , finish = 2025-09-04 08:21:10.215449752 UTC
    , thread_cap_info = ("ThreadId 162", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 4.993433385000
  min duration 1.745544049000
  total durat. 6.738977434000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 42}
    , self = 71
    , parent = Nothing
    , duration = 1.745544049000
    , status = Fail
    , start = 2025-09-04 08:20:56.199147995 UTC
    , finish = 2025-09-04 08:20:57.944692044 UTC
    , thread_cap_info = ("ThreadId 111", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 6
      , alphabet_size = 5
      , total_length = 48}
    , self = 106
    , parent = Nothing
    , duration = 4.993433385000
    , status = Fail
    , start = 2025-09-04 08:21:06.857906771 UTC
    , finish = 2025-09-04 08:21:11.851340156 UTC
    , thread_cap_info = ("ThreadId 164", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 4.062714634000
  min duration 1.963479097000
  total durat. 8.521371840000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 6
      , alphabet_size = 6
      , total_length = 72}
    , self = 75
    , parent = Nothing
    , duration = 1.963479097000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:20:56.493350149 UTC
    , finish = 2025-09-04 08:20:58.456829246 UTC
    , thread_cap_info = ("ThreadId 115", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 6
      , alphabet_size = 6
      , total_length = 66}
    , self = 86
    , parent = Nothing
    , duration = 2.495178109000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:20:59.257859542 UTC
    , finish = 2025-09-04 08:21:01.753037651 UTC
    , thread_cap_info = ("ThreadId 136", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 6
      , alphabet_size = 5
      , total_length = 54}
    , self = 96
    , parent = Nothing
    , duration = 4.062714634000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:21:02.493189122 UTC
    , finish = 2025-09-04 08:21:06.555903756 UTC
    , thread_cap_info = ("ThreadId 150", 3, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 12.055013757000
  min duration 12.055013757000
  total durat. 12.055013757000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 42}
    , self = 105
    , parent = Nothing
    , duration = 12.055013757000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 08:20:58.378391119 UTC
    , finish = 2025-09-04 08:21:10.433404876 UTC
    , thread_cap_info = ("ThreadId 121", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.664640361000
  min duration 0.229198504000
  total durat. 2.250583759000
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.635903105000
  min duration 1.078266505000
  total durat. 2.714169610000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 42}
    , self = 82
    , parent = Nothing
    , duration = 1.078266505000
    , status = Fail
    , start = 2025-09-04 08:20:57.94473362 UTC
    , finish = 2025-09-04 08:20:59.023000125 UTC
    , thread_cap_info = ("ThreadId 119", 3, False)}
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 6
      , alphabet_size = 5
      , total_length = 48}
    , self = 107
    , parent = Nothing
    , duration = 1.635903105000
    , status = Fail
    , start = 2025-09-04 08:21:10.215481896 UTC
    , finish = 2025-09-04 08:21:11.851385001 UTC
    , thread_cap_info = ("ThreadId 167", 3, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.816209683000
  min duration 1.816209683000
  total durat. 1.816209683000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 36}
    , self = 70
    , parent = Nothing
    , duration = 1.816209683000
    , status = Fail
    , start = 2025-09-04 08:20:55.501777856 UTC
    , finish = 2025-09-04 08:20:57.317987539 UTC
    , thread_cap_info = ("ThreadId 43", 3, False)}
**************************************************
F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                = True})" , input_size = Size { num_rules = 6 , num_strict_rules = 6 ,
F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                = 36} , self = 68 , parent = Nothing , duration = 0.877177719000 , status
F                = Fail , start = 2025-09-04 08:20:55.50177198 UTC , finish = 2025-09-04
F                08:20:56.378949699 UTC , thread_cap_info = ("ThreadId 41", 3, False)}
F                
| F              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F              , closure = Backward\n , start_strict_only = True\n , max_closure_length
| F              = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F              Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F              8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F              = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F              ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F              1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F              = True})" , input_size = Size { num_rules = 6 , num_strict_rules = 6 ,
| F              num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| F              = 36} , self = 70 , parent = Nothing , duration = 1.816209683000 , status
| F              = Fail , start = 2025-09-04 08:20:55.501777856 UTC , finish = 2025-09-04
| F              08:20:57.317987539 UTC , thread_cap_info = ("ThreadId 43", 3, False)}
| F              
| | F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F            = Size { num_rules = 27 , num_strict_rules = 27 , num_top_rules = 0 , num_weak_rules
| | F            = 0 , alphabet_size = 9 , total_length = 216} , self = 108 , parent = Nothing
| | F            , duration = 17.447969310000 , status = Fail , start = 2025-09-04 08:20:55.509604468
| | F            UTC , finish = 2025-09-04 08:21:12.957573778 UTC , thread_cap_info = ("ThreadId
| | F            53", 2, False)}
| | F            
| | | F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | F          = Size { num_rules = 27 , num_strict_rules = 27 , num_top_rules = 0 , num_weak_rules
| | | F          = 0 , alphabet_size = 9 , total_length = 216} , self = 67 , parent = Nothing
| | | F          , duration = 0.857421935000 , status = Fail , start = 2025-09-04 08:20:55.514448067
| | | F          UTC , finish = 2025-09-04 08:20:56.371870002 UTC , thread_cap_info = ("ThreadId
| | | F          55", 2, False)}
| | | F          
| | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | F        = 27 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F        = 216} , self = 42 , parent = Nothing , duration = 0.108504704000 , status
| | | | F        = Fail , start = 2025-09-04 08:20:55.547201421 UTC , finish = 2025-09-04
| | | | F        08:20:55.655706125 UTC , thread_cap_info = ("ThreadId 67", 1, False)}
| | | | F        
| | | | F        
| | | | F        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | F        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | F        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | F        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | F        = Size { num_rules = 6 , num_strict_rules = 6 , num_top_rules = 0 , num_weak_rules
| | | | F        = 0 , alphabet_size = 3 , total_length = 36} , self = 48 , parent = Nothing
| | | | F        , duration = 0.117614148000 , status = Fail , start = 2025-09-04 08:20:55.693589337
| | | | F        UTC , finish = 2025-09-04 08:20:55.811203485 UTC , thread_cap_info = ("ThreadId
| | | | F        80", 3, False)}
| | | | F        
| | | | F        
| | | | F        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F        = 12 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 6 ,
| | | | F        alphabet_size = 6 , total_length = 72} , self = 69 , parent = Nothing ,
| | | | F        duration = 0.535010499000 , status = Fail , start = 2025-09-04 08:20:55.881189939
| | | | F        UTC , finish = 2025-09-04 08:20:56.416200438 UTC , thread_cap_info = ("ThreadId
| | | | F        105", 3, False)}
| | | | F        
| | | | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F      = 7 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| | | | | F      = 4 , total_length = 42} , self = 66 , parent = Nothing , duration = 0.229198504000
| | | | | F      , status = Fail , start = 2025-09-04 08:20:55.913196609 UTC , finish =
| | | | | F      2025-09-04 08:20:56.142395113 UTC , thread_cap_info = ("ThreadId 106",
| | | | | F      3, False)}
| | | | | F      
| | | | | | S    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | | | | S    , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size
| | | | | | S    = 6 , total_length = 72} , self = 73 , parent = Nothing , duration = 2.447756994000
| | | | | | S    , status = Success , start = 2025-09-04 08:20:55.930355447 UTC , finish
| | | | | | S    = 2025-09-04 08:20:58.378112441 UTC , thread_cap_info = ("ThreadId 107",
| | | | | | S    3, False)}
| | | | | | S    
| | | | | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | F  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | | F  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| | | | | | | F  = 4 , total_length = 42} , self = 72 , parent = Nothing , duration = 2.441092062000
| | | | | | | F  , status = Fail , start = 2025-09-04 08:20:55.933545843 UTC , finish =
| | | | | | | F  2025-09-04 08:20:58.374637905 UTC , thread_cap_info = ("ThreadId 108",
| | | | | | | F  3, False)}
| | | | | | | F  
| | | | | F | |  
| | | | | F | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | | | F | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | F | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | F | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | F | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| | | | | F | |  = 4 , total_length = 42} , self = 71 , parent = Nothing , duration = 1.745544049000
| | | | | F | |  , status = Fail , start = 2025-09-04 08:20:56.199147995 UTC , finish =
| | | | | F | |  2025-09-04 08:20:57.944692044 UTC , thread_cap_info = ("ThreadId 111",
| | | | | F | |  3, False)}
| | | | | F | |  
| | | F | | | |  
F | |   | | | |  
  | |   F | | |  
E | |     | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E | |     | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E | |     | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E | |     | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | |     | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | |     | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
E | |     | | |  , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size
E | |     | | |  = 6 , total_length = 72} , self = 75 , parent = Nothing , duration = 1.963479097000
E | |     | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:20:56.493350149
E | |     | | |  UTC , finish = 2025-09-04 08:20:58.456829246 UTC , thread_cap_info = ("ThreadId
E | |     | | |  115", 1, False)}
E | |     | | |  
| F |     | | |  
|   |     F | |  
| F |       | |  Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F |       | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F |       | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F |       | |  = 7 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| F |       | |  = 4 , total_length = 42} , self = 82 , parent = Nothing , duration = 1.078266505000
| F |       | |  , status = Fail , start = 2025-09-04 08:20:57.94473362 UTC , finish = 2025-09-04
| F |       | |  08:20:59.023000125 UTC , thread_cap_info = ("ThreadId 119", 3, False)}
| F |       | |  
| | |       | F  
| | |       S    
| | | E          Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | E          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E          , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | E          , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| | | E          = 4 , total_length = 42} , self = 105 , parent = Nothing , duration = 12.055013757000
| | | E          , status = Except "<<timeout>>" , start = 2025-09-04 08:20:58.378391119
| | | E          UTC , finish = 2025-09-04 08:21:10.433404876 UTC , thread_cap_info = ("ThreadId
| | | E          121", 3, False)}
| | | E          
E | | |          
F | | |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | |          = 11 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 6 ,
F | | |          alphabet_size = 6 , total_length = 66} , self = 83 , parent = Nothing ,
F | | |          duration = 0.590578987000 , status = Fail , start = 2025-09-04 08:20:58.613860199
F | | |          UTC , finish = 2025-09-04 08:20:59.204439186 UTC , thread_cap_info = ("ThreadId
F | | |          130", 3, False)}
F | | |          
| | | | S        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | | S        , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 6 , alphabet_size
| | | | S        = 6 , total_length = 66} , self = 84 , parent = Nothing , duration = 3.027071223000
| | | | S        , status = Success , start = 2025-09-04 08:20:58.713154211 UTC , finish
| | | | S        = 2025-09-04 08:21:01.740225434 UTC , thread_cap_info = ("ThreadId 131",
| | | | S        3, False)}
| | | | S        
| F | | |        
F   | | |        
E   | | |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E   | | |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E   | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E   | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E   | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E   | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
E   | | |        , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 6 , alphabet_size
E   | | |        = 6 , total_length = 66} , self = 86 , parent = Nothing , duration = 2.495178109000
E   | | |        , status = Except "AsyncCancelled" , start = 2025-09-04 08:20:59.257859542
E   | | |        UTC , finish = 2025-09-04 08:21:01.753037651 UTC , thread_cap_info = ("ThreadId
E   | | |        136", 3, False)}
E   | | |        
|   | | S        
E   | |          
F   | |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F   | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F   | |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F   | |          = 9 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size
F   | |          = 5 , total_length = 54} , self = 93 , parent = Nothing , duration = 0.664640361000
F   | |          , status = Fail , start = 2025-09-04 08:21:01.813450841 UTC , finish =
F   | |          2025-09-04 08:21:02.478091202 UTC , thread_cap_info = ("ThreadId 147",
F   | |          3, False)}
F   | |          
| S | |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| S | |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| S | |          , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size
| S | |          = 5 , total_length = 54} , self = 94 , parent = Nothing , duration = 4.718858833000
| S | |          , status = Success , start = 2025-09-04 08:21:01.836536571 UTC , finish
| S | |          = 2025-09-04 08:21:06.555395404 UTC , thread_cap_info = ("ThreadId 148",
| S | |          3, False)}
| S | |          
F | | |          
E | | |          Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E | | |          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E | | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E | | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
E | | |          , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size
E | | |          = 5 , total_length = 54} , self = 96 , parent = Nothing , duration = 4.062714634000
E | | |          , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:02.493189122
E | | |          UTC , finish = 2025-09-04 08:21:06.555903756 UTC , thread_cap_info = ("ThreadId
E | | |          150", 3, False)}
E | | |          
| S | |          
E   | |          
F   | |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F   | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F   | |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F   | |          = 8 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size
F   | |          = 5 , total_length = 48} , self = 103 , parent = Nothing , duration = 0.231155408000
F   | |          , status = Fail , start = 2025-09-04 08:21:06.603662952 UTC , finish =
F   | |          2025-09-04 08:21:06.83481836 UTC , thread_cap_info = ("ThreadId 160", 3,
F   | |          False)}
F   | |          
| F | |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| F | |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| F | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| F | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| F | |          , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size
| F | |          = 5 , total_length = 48} , self = 104 , parent = Nothing , duration = 3.582280399000
| F | |          , status = Fail , start = 2025-09-04 08:21:06.633169353 UTC , finish =
| F | |          2025-09-04 08:21:10.215449752 UTC , thread_cap_info = ("ThreadId 162",
| F | |          3, False)}
| F | |          
F | | |          
F | | |          Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F | | |          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F | | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F | | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
F | | |          , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size
F | | |          = 5 , total_length = 48} , self = 106 , parent = Nothing , duration = 4.993433385000
F | | |          , status = Fail , start = 2025-09-04 08:21:06.857906771 UTC , finish =
F | | |          2025-09-04 08:21:11.851340156 UTC , thread_cap_info = ("ThreadId 164",
F | | |          3, False)}
F | | |          
| F | |          
| F | |          Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| F | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | |          = 8 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size
| F | |          = 5 , total_length = 48} , self = 107 , parent = Nothing , duration = 1.635903105000
| F | |          , status = Fail , start = 2025-09-04 08:21:10.215481896 UTC , finish =
| F | |          2025-09-04 08:21:11.851385001 UTC , thread_cap_info = ("ThreadId 167",
| F | |          3, False)}
| F | |          
| | | E          
F | |            
  F |            
    F            
