last 117 length 443
[Info] pool sizes (success) 3 seen 3 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 3 seen 3 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 170 length 683
last 76 length 275
last 342 length 1447
CNF 117 vars 443 clauses
last 445 length 1812
last 597 length 2401
last 3094 length 14661
last 393 length 1610
last 507 length 2048
last 2484 length 10851
CNF 170 vars 683 clauses
CNF 76 vars 275 clauses
last 3406 length 17590
CNF 342 vars 1447 clauses
last 4188 length 25140
last 14240 length 66708
CNF 445 vars 1812 clauses
last 14240 length 66708
last 18440 length 97210
last 14240 length 66708
CNF 597 vars 2401 clauses
last 18440 length 97210
CNF 393 vars 1610 clauses
CNF 3094 vars 14661 clauses
CNF 507 vars 2048 clauses
last 18440 length 97210
CNF 2484 vars 10851 clauses
CNF 3406 vars 17590 clauses
CNF 4188 vars 25140 clauses
CNF 14240 vars 66708 clauses
CNF 18440 vars 97210 clauses
CNF 14240 vars 66708 clauses
CNF 14240 vars 66708 clauses
CNF 18440 vars 97210 clauses
CNF 18440 vars 97210 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2200, clauses: 8192
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16257, clauses: 67102
last 2200 length 8192
last 16257 length 67102
CNF 2200 vars 8192 clauses
CNF 16257 vars 67102 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16257, clauses: 67102, status: Satisfied, time: 0.280369018s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 5 weak rules on 5 letters       split
2 sub-proofs
  1 SRS with 1 strict rules and 5 weak rules on 5 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
  SRS with 25 strict rules and 125 weak rules on 25 letters       weights
  SRS with 0 strict rules and 67 weak rules on 20 letters       no strict rules

  2 SRS with 1 strict rules and 4 weak rules on 5 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 4 weak rules on 4 letters       weights
  SRS with 0 strict rules and 3 weak rules on 4 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, q, b] -> [b, p, b] {- Input 0 -}
  [0, p, 0] ->= [q] {- Input 1 -}
  [1, p, 1] ->= [q] {- Input 2 -}
  [0, q, 0] ->= [q] {- Input 3 -}
  [1, q, 1] ->= [q] {- Input 4 -}
  [p] ->= [1, p, 1, 0, 1] {- Input 5 -}
reason
  split
   property Termination
has value Just True
for SRS
  [b, q, b] ->= [b, p, b] {- Input 0 -}
  [0, p, 0] -> [q] {- Input 1 -}
  [1, p, 1] ->= [q] {- Input 2 -}
  [0, q, 0] ->= [q] {- Input 3 -}
  [1, q, 1] ->= [q] {- Input 4 -}
  [p] ->= [1, p, 1, 0, 1] {- Input 5 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[b, b], [b, q], [q, b], [b, b]] ->= [ [b, b] , [b, p] , [p, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[b, b], [b, q], [q, b], [b, q]] ->= [ [b, b] , [b, p] , [p, b] , [ b , q ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, b], [b, q], [q, b], [b, p]] ->= [ [b, b] , [b, p] , [p, b] , [ b , p ] ] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, b], [b, q], [q, b], [b, 0]] ->= [ [b, b] , [b, p] , [p, b] , [ b , 0 ] ] {- Semlab 0 (Concon 3 (Input 0)) -}
  [[b, b], [b, q], [q, b], [b, 1]] ->= [ [b, b] , [b, p] , [p, b] , [ b , 1 ] ] {- Semlab 0 (Concon 4 (Input 0)) -}
  [[q, b], [b, q], [q, b], [b, b]] ->= [ [q, b] , [b, p] , [p, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[q, b], [b, q], [q, b], [b, q]] ->= [ [q, b] , [b, p] , [p, b] , [ b , q ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[q, b], [b, q], [q, b], [b, p]] ->= [ [q, b] , [b, p] , [p, b] , [ b , p ] ] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[q, b], [b, q], [q, b], [b, 0]] ->= [ [q, b] , [b, p] , [p, b] , [ b , 0 ] ] {- Semlab 1 (Concon 3 (Input 0)) -}
  [[q, b], [b, q], [q, b], [b, 1]] ->= [ [q, b] , [b, p] , [p, b] , [ b , 1 ] ] {- Semlab 1 (Concon 4 (Input 0)) -}
  [[p, b], [b, q], [q, b], [b, b]] ->= [ [p, b] , [b, p] , [p, b] , [ b , b ] ] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[p, b], [b, q], [q, b], [b, q]] ->= [ [p, b] , [b, p] , [p, b] , [ b , q ] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[p, b], [b, q], [q, b], [b, p]] ->= [ [p, b] , [b, p] , [p, b] , [ b , p ] ] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[p, b], [b, q], [q, b], [b, 0]] ->= [ [p, b] , [b, p] , [p, b] , [ b , 0 ] ] {- Semlab 2 (Concon 3 (Input 0)) -}
  [[p, b], [b, q], [q, b], [b, 1]] ->= [ [p, b] , [b, p] , [p, b] , [ b , 1 ] ] {- Semlab 2 (Concon 4 (Input 0)) -}
  [[0, b], [b, q], [q, b], [b, b]] ->= [ [0, b] , [b, p] , [p, b] , [ b , b ] ] {- Semlab 3 (Concon 0 (Input 0)) -}
  [[0, b], [b, q], [q, b], [b, q]] ->= [ [0, b] , [b, p] , [p, b] , [ b , q ] ] {- Semlab 3 (Concon 1 (Input 0)) -}
  [[0, b], [b, q], [q, b], [b, p]] ->= [ [0, b] , [b, p] , [p, b] , [ b , p ] ] {- Semlab 3 (Concon 2 (Input 0)) -}
  [[0, b], [b, q], [q, b], [b, 0]] ->= [ [0, b] , [b, p] , [p, b] , [ b , 0 ] ] {- Semlab 3 (Concon 3 (Input 0)) -}
  [[0, b], [b, q], [q, b], [b, 1]] ->= [ [0, b] , [b, p] , [p, b] , [ b , 1 ] ] {- Semlab 3 (Concon 4 (Input 0)) -}
  [[1, b], [b, q], [q, b], [b, b]] ->= [ [1, b] , [b, p] , [p, b] , [ b , b ] ] {- Semlab 4 (Concon 0 (Input 0)) -}
  [[1, b], [b, q], [q, b], [b, q]] ->= [ [1, b] , [b, p] , [p, b] , [ b , q ] ] {- Semlab 4 (Concon 1 (Input 0)) -}
  [[1, b], [b, q], [q, b], [b, p]] ->= [ [1, b] , [b, p] , [p, b] , [ b , p ] ] {- Semlab 4 (Concon 2 (Input 0)) -}
  [[1, b], [b, q], [q, b], [b, 0]] ->= [ [1, b] , [b, p] , [p, b] , [ b , 0 ] ] {- Semlab 4 (Concon 3 (Input 0)) -}
  [[1, b], [b, q], [q, b], [b, 1]] ->= [ [1, b] , [b, p] , [p, b] , [ b , 1 ] ] {- Semlab 4 (Concon 4 (Input 0)) -}
  [[b, 0], [0, p], [p, 0], [0, b]] -> [ [b, q] , [ q , b ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, 0], [0, p], [p, 0], [0, q]] -> [ [b, q] , [ q , q ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, 0], [0, p], [p, 0], [0, p]] -> [ [b, q] , [ q , p ] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, 0], [0, p], [p, 0], [0, 0]] -> [ [b, q] , [ q , 0 ] ] {- Semlab 0 (Concon 3 (Input 1)) -}
  [[b, 0], [0, p], [p, 0], [0, 1]] -> [ [b, q] , [ q , 1 ] ] {- Semlab 0 (Concon 4 (Input 1)) -}
  [[q, 0], [0, p], [p, 0], [0, b]] -> [ [q, q] , [ q , b ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[q, 0], [0, p], [p, 0], [0, q]] -> [ [q, q] , [ q , q ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[q, 0], [0, p], [p, 0], [0, p]] -> [ [q, q] , [ q , p ] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[q, 0], [0, p], [p, 0], [0, 0]] -> [ [q, q] , [ q , 0 ] ] {- Semlab 1 (Concon 3 (Input 1)) -}
  [[q, 0], [0, p], [p, 0], [0, 1]] -> [ [q, q] , [ q , 1 ] ] {- Semlab 1 (Concon 4 (Input 1)) -}
  [[p, 0], [0, p], [p, 0], [0, b]] -> [ [p, q] , [ q , b ] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[p, 0], [0, p], [p, 0], [0, q]] -> [ [p, q] , [ q , q ] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[p, 0], [0, p], [p, 0], [0, p]] -> [ [p, q] , [ q , p ] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[p, 0], [0, p], [p, 0], [0, 0]] -> [ [p, q] , [ q , 0 ] ] {- Semlab 2 (Concon 3 (Input 1)) -}
  [[p, 0], [0, p], [p, 0], [0, 1]] -> [ [p, q] , [ q , 1 ] ] {- Semlab 2 (Concon 4 (Input 1)) -}
  [[0, 0], [0, p], [p, 0], [0, b]] -> [ [0, q] , [ q , b ] ] {- Semlab 3 (Concon 0 (Input 1)) -}
  [[0, 0], [0, p], [p, 0], [0, q]] -> [ [0, q] , [ q , q ] ] {- Semlab 3 (Concon 1 (Input 1)) -}
  [[0, 0], [0, p], [p, 0], [0, p]] -> [ [0, q] , [ q , p ] ] {- Semlab 3 (Concon 2 (Input 1)) -}
  [[0, 0], [0, p], [p, 0], [0, 0]] -> [ [0, q] , [ q , 0 ] ] {- Semlab 3 (Concon 3 (Input 1)) -}
  [[0, 0], [0, p], [p, 0], [0, 1]] -> [ [0, q] , [ q , 1 ] ] {- Semlab 3 (Concon 4 (Input 1)) -}
  [[1, 0], [0, p], [p, 0], [0, b]] -> [ [1, q] , [ q , b ] ] {- Semlab 4 (Concon 0 (Input 1)) -}
  [[1, 0], [0, p], [p, 0], [0, q]] -> [ [1, q] , [ q , q ] ] {- Semlab 4 (Concon 1 (Input 1)) -}
  [[1, 0], [0, p], [p, 0], [0, p]] -> [ [1, q] , [ q , p ] ] {- Semlab 4 (Concon 2 (Input 1)) -}
  [[1, 0], [0, p], [p, 0], [0, 0]] -> [ [1, q] , [ q , 0 ] ] {- Semlab 4 (Concon 3 (Input 1)) -}
  [[1, 0], [0, p], [p, 0], [0, 1]] -> [ [1, q] , [ q , 1 ] ] {- Semlab 4 (Concon 4 (Input 1)) -}
  [[b, 1], [1, p], [p, 1], [1, b]] ->= [ [b, q] , [ q , b ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, 1], [1, p], [p, 1], [1, q]] ->= [ [b, q] , [ q , q ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, 1], [1, p], [p, 1], [1, p]] ->= [ [b, q] , [ q , p ] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, 1], [1, p], [p, 1], [1, 0]] ->= [ [b, q] , [ q , 0 ] ] {- Semlab 0 (Concon 3 (Input 2)) -}
  [[b, 1], [1, p], [p, 1], [1, 1]] ->= [ [b, q] , [ q , 1 ] ] {- Semlab 0 (Concon 4 (Input 2)) -}
  [[q, 1], [1, p], [p, 1], [1, b]] ->= [ [q, q] , [ q , b ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[q, 1], [1, p], [p, 1], [1, q]] ->= [ [q, q] , [ q , q ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[q, 1], [1, p], [p, 1], [1, p]] ->= [ [q, q] , [ q , p ] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[q, 1], [1, p], [p, 1], [1, 0]] ->= [ [q, q] , [ q , 0 ] ] {- Semlab 1 (Concon 3 (Input 2)) -}
  [[q, 1], [1, p], [p, 1], [1, 1]] ->= [ [q, q] , [ q , 1 ] ] {- Semlab 1 (Concon 4 (Input 2)) -}
  [[p, 1], [1, p], [p, 1], [1, b]] ->= [ [p, q] , [ q , b ] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[p, 1], [1, p], [p, 1], [1, q]] ->= [ [p, q] , [ q , q ] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[p, 1], [1, p], [p, 1], [1, p]] ->= [ [p, q] , [ q , p ] ] {- Semlab 2 (Concon 2 (Input 2)) -}
  [[p, 1], [1, p], [p, 1], [1, 0]] ->= [ [p, q] , [ q , 0 ] ] {- Semlab 2 (Concon 3 (Input 2)) -}
  [[p, 1], [1, p], [p, 1], [1, 1]] ->= [ [p, q] , [ q , 1 ] ] {- Semlab 2 (Concon 4 (Input 2)) -}
  [[0, 1], [1, p], [p, 1], [1, b]] ->= [ [0, q] , [ q , b ] ] {- Semlab 3 (Concon 0 (Input 2)) -}
  [[0, 1], [1, p], [p, 1], [1, q]] ->= [ [0, q] , [ q , q ] ] {- Semlab 3 (Concon 1 (Input 2)) -}
  [[0, 1], [1, p], [p, 1], [1, p]] ->= [ [0, q] , [ q , p ] ] {- Semlab 3 (Concon 2 (Input 2)) -}
  [[0, 1], [1, p], [p, 1], [1, 0]] ->= [ [0, q] , [ q , 0 ] ] {- Semlab 3 (Concon 3 (Input 2)) -}
  [[0, 1], [1, p], [p, 1], [1, 1]] ->= [ [0, q] , [ q , 1 ] ] {- Semlab 3 (Concon 4 (Input 2)) -}
  [[1, 1], [1, p], [p, 1], [1, b]] ->= [ [1, q] , [ q , b ] ] {- Semlab 4 (Concon 0 (Input 2)) -}
  [[1, 1], [1, p], [p, 1], [1, q]] ->= [ [1, q] , [ q , q ] ] {- Semlab 4 (Concon 1 (Input 2)) -}
  [[1, 1], [1, p], [p, 1], [1, p]] ->= [ [1, q] , [ q , p ] ] {- Semlab 4 (Concon 2 (Input 2)) -}
  [[1, 1], [1, p], [p, 1], [1, 0]] ->= [ [1, q] , [ q , 0 ] ] {- Semlab 4 (Concon 3 (Input 2)) -}
  [[1, 1], [1, p], [p, 1], [1, 1]] ->= [ [1, q] , [ q , 1 ] ] {- Semlab 4 (Concon 4 (Input 2)) -}
  [[b, 0], [0, q], [q, 0], [0, b]] ->= [ [b, q] , [ q , b ] ] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[b, 0], [0, q], [q, 0], [0, q]] ->= [ [b, q] , [ q , q ] ] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[b, 0], [0, q], [q, 0], [0, p]] ->= [ [b, q] , [ q , p ] ] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[b, 0], [0, q], [q, 0], [0, 0]] ->= [ [b, q] , [ q , 0 ] ] {- Semlab 0 (Concon 3 (Input 3)) -}
  [[b, 0], [0, q], [q, 0], [0, 1]] ->= [ [b, q] , [ q , 1 ] ] {- Semlab 0 (Concon 4 (Input 3)) -}
  [[q, 0], [0, q], [q, 0], [0, b]] ->= [ [q, q] , [ q , b ] ] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[q, 0], [0, q], [q, 0], [0, q]] ->= [ [q, q] , [ q , q ] ] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[q, 0], [0, q], [q, 0], [0, p]] ->= [ [q, q] , [ q , p ] ] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[q, 0], [0, q], [q, 0], [0, 0]] ->= [ [q, q] , [ q , 0 ] ] {- Semlab 1 (Concon 3 (Input 3)) -}
  [[q, 0], [0, q], [q, 0], [0, 1]] ->= [ [q, q] , [ q , 1 ] ] {- Semlab 1 (Concon 4 (Input 3)) -}
  [[p, 0], [0, q], [q, 0], [0, b]] ->= [ [p, q] , [ q , b ] ] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[p, 0], [0, q], [q, 0], [0, q]] ->= [ [p, q] , [ q , q ] ] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[p, 0], [0, q], [q, 0], [0, p]] ->= [ [p, q] , [ q , p ] ] {- Semlab 2 (Concon 2 (Input 3)) -}
  [[p, 0], [0, q], [q, 0], [0, 0]] ->= [ [p, q] , [ q , 0 ] ] {- Semlab 2 (Concon 3 (Input 3)) -}
  [[p, 0], [0, q], [q, 0], [0, 1]] ->= [ [p, q] , [ q , 1 ] ] {- Semlab 2 (Concon 4 (Input 3)) -}
  [[0, 0], [0, q], [q, 0], [0, b]] ->= [ [0, q] , [ q , b ] ] {- Semlab 3 (Concon 0 (Input 3)) -}
  [[0, 0], [0, q], [q, 0], [0, q]] ->= [ [0, q] , [ q , q ] ] {- Semlab 3 (Concon 1 (Input 3)) -}
  [[0, 0], [0, q], [q, 0], [0, p]] ->= [ [0, q] , [ q , p ] ] {- Semlab 3 (Concon 2 (Input 3)) -}
  [[0, 0], [0, q], [q, 0], [0, 0]] ->= [ [0, q] , [ q , 0 ] ] {- Semlab 3 (Concon 3 (Input 3)) -}
  [[0, 0], [0, q], [q, 0], [0, 1]] ->= [ [0, q] , [ q , 1 ] ] {- Semlab 3 (Concon 4 (Input 3)) -}
  [[1, 0], [0, q], [q, 0], [0, b]] ->= [ [1, q] , [ q , b ] ] {- Semlab 4 (Concon 0 (Input 3)) -}
  [[1, 0], [0, q], [q, 0], [0, q]] ->= [ [1, q] , [ q , q ] ] {- Semlab 4 (Concon 1 (Input 3)) -}
  [[1, 0], [0, q], [q, 0], [0, p]] ->= [ [1, q] , [ q , p ] ] {- Semlab 4 (Concon 2 (Input 3)) -}
  [[1, 0], [0, q], [q, 0], [0, 0]] ->= [ [1, q] , [ q , 0 ] ] {- Semlab 4 (Concon 3 (Input 3)) -}
  [[1, 0], [0, q], [q, 0], [0, 1]] ->= [ [1, q] , [ q , 1 ] ] {- Semlab 4 (Concon 4 (Input 3)) -}
  [[b, 1], [1, q], [q, 1], [1, b]] ->= [ [b, q] , [ q , b ] ] {- Semlab 0 (Concon 0 (Input 4)) -}
  [[b, 1], [1, q], [q, 1], [1, q]] ->= [ [b, q] , [ q , q ] ] {- Semlab 0 (Concon 1 (Input 4)) -}
  [[b, 1], [1, q], [q, 1], [1, p]] ->= [ [b, q] , [ q , p ] ] {- Semlab 0 (Concon 2 (Input 4)) -}
  [[b, 1], [1, q], [q, 1], [1, 0]] ->= [ [b, q] , [ q , 0 ] ] {- Semlab 0 (Concon 3 (Input 4)) -}
  [[b, 1], [1, q], [q, 1], [1, 1]] ->= [ [b, q] , [ q , 1 ] ] {- Semlab 0 (Concon 4 (Input 4)) -}
  [[q, 1], [1, q], [q, 1], [1, b]] ->= [ [q, q] , [ q , b ] ] {- Semlab 1 (Concon 0 (Input 4)) -}
  [[q, 1], [1, q], [q, 1], [1, q]] ->= [ [q, q] , [ q , q ] ] {- Semlab 1 (Concon 1 (Input 4)) -}
  [[q, 1], [1, q], [q, 1], [1, p]] ->= [ [q, q] , [ q , p ] ] {- Semlab 1 (Concon 2 (Input 4)) -}
  [[q, 1], [1, q], [q, 1], [1, 0]] ->= [ [q, q] , [ q , 0 ] ] {- Semlab 1 (Concon 3 (Input 4)) -}
  [[q, 1], [1, q], [q, 1], [1, 1]] ->= [ [q, q] , [ q , 1 ] ] {- Semlab 1 (Concon 4 (Input 4)) -}
  [[p, 1], [1, q], [q, 1], [1, b]] ->= [ [p, q] , [ q , b ] ] {- Semlab 2 (Concon 0 (Input 4)) -}
  [[p, 1], [1, q], [q, 1], [1, q]] ->= [ [p, q] , [ q , q ] ] {- Semlab 2 (Concon 1 (Input 4)) -}
  [[p, 1], [1, q], [q, 1], [1, p]] ->= [ [p, q] , [ q , p ] ] {- Semlab 2 (Concon 2 (Input 4)) -}
  [[p, 1], [1, q], [q, 1], [1, 0]] ->= [ [p, q] , [ q , 0 ] ] {- Semlab 2 (Concon 3 (Input 4)) -}
  [[p, 1], [1, q], [q, 1], [1, 1]] ->= [ [p, q] , [ q , 1 ] ] {- Semlab 2 (Concon 4 (Input 4)) -}
  [[0, 1], [1, q], [q, 1], [1, b]] ->= [ [0, q] , [ q , b ] ] {- Semlab 3 (Concon 0 (Input 4)) -}
  [[0, 1], [1, q], [q, 1], [1, q]] ->= [ [0, q] , [ q , q ] ] {- Semlab 3 (Concon 1 (Input 4)) -}
  [[0, 1], [1, q], [q, 1], [1, p]] ->= [ [0, q] , [ q , p ] ] {- Semlab 3 (Concon 2 (Input 4)) -}
  [[0, 1], [1, q], [q, 1], [1, 0]] ->= [ [0, q] , [ q , 0 ] ] {- Semlab 3 (Concon 3 (Input 4)) -}
  [[0, 1], [1, q], [q, 1], [1, 1]] ->= [ [0, q] , [ q , 1 ] ] {- Semlab 3 (Concon 4 (Input 4)) -}
  [[1, 1], [1, q], [q, 1], [1, b]] ->= [ [1, q] , [ q , b ] ] {- Semlab 4 (Concon 0 (Input 4)) -}
  [[1, 1], [1, q], [q, 1], [1, q]] ->= [ [1, q] , [ q , q ] ] {- Semlab 4 (Concon 1 (Input 4)) -}
  [[1, 1], [1, q], [q, 1], [1, p]] ->= [ [1, q] , [ q , p ] ] {- Semlab 4 (Concon 2 (Input 4)) -}
  [[1, 1], [1, q], [q, 1], [1, 0]] ->= [ [1, q] , [ q , 0 ] ] {- Semlab 4 (Concon 3 (Input 4)) -}
  [[1, 1], [1, q], [q, 1], [1, 1]] ->= [ [1, q] , [ q , 1 ] ] {- Semlab 4 (Concon 4 (Input 4)) -}
  [[b, p], [p, b]] ->= [ [b, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, b] ] {- Semlab 0 (Concon 0 (Input 5)) -}
  [[b, p], [p, q]] ->= [ [b, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, q] ] {- Semlab 0 (Concon 1 (Input 5)) -}
  [[b, p], [p, p]] ->= [ [b, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, p] ] {- Semlab 0 (Concon 2 (Input 5)) -}
  [[b, p], [p, 0]] ->= [ [b, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, 0] ] {- Semlab 0 (Concon 3 (Input 5)) -}
  [[b, p], [p, 1]] ->= [ [b, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, 1] ] {- Semlab 0 (Concon 4 (Input 5)) -}
  [[q, p], [p, b]] ->= [ [q, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, b] ] {- Semlab 1 (Concon 0 (Input 5)) -}
  [[q, p], [p, q]] ->= [ [q, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, q] ] {- Semlab 1 (Concon 1 (Input 5)) -}
  [[q, p], [p, p]] ->= [ [q, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, p] ] {- Semlab 1 (Concon 2 (Input 5)) -}
  [[q, p], [p, 0]] ->= [ [q, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, 0] ] {- Semlab 1 (Concon 3 (Input 5)) -}
  [[q, p], [p, 1]] ->= [ [q, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, 1] ] {- Semlab 1 (Concon 4 (Input 5)) -}
  [[p, p], [p, b]] ->= [ [p, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, b] ] {- Semlab 2 (Concon 0 (Input 5)) -}
  [[p, p], [p, q]] ->= [ [p, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, q] ] {- Semlab 2 (Concon 1 (Input 5)) -}
  [[p, p], [p, p]] ->= [ [p, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, p] ] {- Semlab 2 (Concon 2 (Input 5)) -}
  [[p, p], [p, 0]] ->= [ [p, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, 0] ] {- Semlab 2 (Concon 3 (Input 5)) -}
  [[p, p], [p, 1]] ->= [ [p, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, 1] ] {- Semlab 2 (Concon 4 (Input 5)) -}
  [[0, p], [p, b]] ->= [ [0, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, b] ] {- Semlab 3 (Concon 0 (Input 5)) -}
  [[0, p], [p, q]] ->= [ [0, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, q] ] {- Semlab 3 (Concon 1 (Input 5)) -}
  [[0, p], [p, p]] ->= [ [0, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, p] ] {- Semlab 3 (Concon 2 (Input 5)) -}
  [[0, p], [p, 0]] ->= [ [0, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, 0] ] {- Semlab 3 (Concon 3 (Input 5)) -}
  [[0, p], [p, 1]] ->= [ [0, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, 1] ] {- Semlab 3 (Concon 4 (Input 5)) -}
  [[1, p], [p, b]] ->= [ [1, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, b] ] {- Semlab 4 (Concon 0 (Input 5)) -}
  [[1, p], [p, q]] ->= [ [1, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, q] ] {- Semlab 4 (Concon 1 (Input 5)) -}
  [[1, p], [p, p]] ->= [ [1, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, p] ] {- Semlab 4 (Concon 2 (Input 5)) -}
  [[1, p], [p, 0]] ->= [ [1, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, 0] ] {- Semlab 4 (Concon 3 (Input 5)) -}
  [[1, p], [p, 1]] ->= [ [1, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, 1] ] {- Semlab 4 (Concon 4 (Input 5)) -}
reason
  ([1, 1], 0/1)
  ([1, p], 1/1)
  ([1, b], 0/1)
  ([1, 0], 0/1)
  ([1, q], 1/1)
  ([p, 1], 0/1)
  ([p, p], 3/1)
  ([p, b], 0/1)
  ([p, 0], 3/1)
  ([p, q], 1/1)
  ([b, 1], 0/1)
  ([b, p], 1/1)
  ([b, b], 0/1)
  ([b, 0], 3/1)
  ([b, q], 1/1)
  ([0, 1], 0/1)
  ([0, p], 3/1)
  ([0, b], 3/1)
  ([0, 0], 3/1)
  ([0, q], 1/1)
  ([q, 1], 0/1)
  ([q, p], 1/1)
  ([q, b], 0/1)
  ([q, 0], 0/1)
  ([q, q], 0/1)
   property Termination
has value Just True
for SRS
  [[b, b], [b, q], [q, b], [b, b]] ->= [ [b, b] , [b, p] , [p, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[b, b], [b, q], [q, b], [b, q]] ->= [ [b, b] , [b, p] , [p, b] , [ b , q ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, b], [b, q], [q, b], [b, p]] ->= [ [b, b] , [b, p] , [p, b] , [ b , p ] ] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, b], [b, q], [q, b], [b, 0]] ->= [ [b, b] , [b, p] , [p, b] , [ b , 0 ] ] {- Semlab 0 (Concon 3 (Input 0)) -}
  [[b, b], [b, q], [q, b], [b, 1]] ->= [ [b, b] , [b, p] , [p, b] , [ b , 1 ] ] {- Semlab 0 (Concon 4 (Input 0)) -}
  [[q, b], [b, q], [q, b], [b, b]] ->= [ [q, b] , [b, p] , [p, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[q, b], [b, q], [q, b], [b, q]] ->= [ [q, b] , [b, p] , [p, b] , [ b , q ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[q, b], [b, q], [q, b], [b, p]] ->= [ [q, b] , [b, p] , [p, b] , [ b , p ] ] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[q, b], [b, q], [q, b], [b, 0]] ->= [ [q, b] , [b, p] , [p, b] , [ b , 0 ] ] {- Semlab 1 (Concon 3 (Input 0)) -}
  [[q, b], [b, q], [q, b], [b, 1]] ->= [ [q, b] , [b, p] , [p, b] , [ b , 1 ] ] {- Semlab 1 (Concon 4 (Input 0)) -}
  [[p, b], [b, q], [q, b], [b, b]] ->= [ [p, b] , [b, p] , [p, b] , [ b , b ] ] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[p, b], [b, q], [q, b], [b, q]] ->= [ [p, b] , [b, p] , [p, b] , [ b , q ] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[p, b], [b, q], [q, b], [b, p]] ->= [ [p, b] , [b, p] , [p, b] , [ b , p ] ] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[p, b], [b, q], [q, b], [b, 0]] ->= [ [p, b] , [b, p] , [p, b] , [ b , 0 ] ] {- Semlab 2 (Concon 3 (Input 0)) -}
  [[p, b], [b, q], [q, b], [b, 1]] ->= [ [p, b] , [b, p] , [p, b] , [ b , 1 ] ] {- Semlab 2 (Concon 4 (Input 0)) -}
  [[0, b], [b, q], [q, b], [b, b]] ->= [ [0, b] , [b, p] , [p, b] , [ b , b ] ] {- Semlab 3 (Concon 0 (Input 0)) -}
  [[0, b], [b, q], [q, b], [b, q]] ->= [ [0, b] , [b, p] , [p, b] , [ b , q ] ] {- Semlab 3 (Concon 1 (Input 0)) -}
  [[0, b], [b, q], [q, b], [b, p]] ->= [ [0, b] , [b, p] , [p, b] , [ b , p ] ] {- Semlab 3 (Concon 2 (Input 0)) -}
  [[0, b], [b, q], [q, b], [b, 0]] ->= [ [0, b] , [b, p] , [p, b] , [ b , 0 ] ] {- Semlab 3 (Concon 3 (Input 0)) -}
  [[0, b], [b, q], [q, b], [b, 1]] ->= [ [0, b] , [b, p] , [p, b] , [ b , 1 ] ] {- Semlab 3 (Concon 4 (Input 0)) -}
  [[1, b], [b, q], [q, b], [b, b]] ->= [ [1, b] , [b, p] , [p, b] , [ b , b ] ] {- Semlab 4 (Concon 0 (Input 0)) -}
  [[1, b], [b, q], [q, b], [b, q]] ->= [ [1, b] , [b, p] , [p, b] , [ b , q ] ] {- Semlab 4 (Concon 1 (Input 0)) -}
  [[1, b], [b, q], [q, b], [b, p]] ->= [ [1, b] , [b, p] , [p, b] , [ b , p ] ] {- Semlab 4 (Concon 2 (Input 0)) -}
  [[1, b], [b, q], [q, b], [b, 0]] ->= [ [1, b] , [b, p] , [p, b] , [ b , 0 ] ] {- Semlab 4 (Concon 3 (Input 0)) -}
  [[1, b], [b, q], [q, b], [b, 1]] ->= [ [1, b] , [b, p] , [p, b] , [ b , 1 ] ] {- Semlab 4 (Concon 4 (Input 0)) -}
  [[b, 1], [1, p], [p, 1], [1, b]] ->= [ [b, q] , [ q , b ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, 1], [1, p], [p, 1], [1, p]] ->= [ [b, q] , [ q , p ] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, 1], [1, p], [p, 1], [1, 0]] ->= [ [b, q] , [ q , 0 ] ] {- Semlab 0 (Concon 3 (Input 2)) -}
  [[b, 1], [1, p], [p, 1], [1, 1]] ->= [ [b, q] , [ q , 1 ] ] {- Semlab 0 (Concon 4 (Input 2)) -}
  [[p, 1], [1, p], [p, 1], [1, b]] ->= [ [p, q] , [ q , b ] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[p, 1], [1, p], [p, 1], [1, p]] ->= [ [p, q] , [ q , p ] ] {- Semlab 2 (Concon 2 (Input 2)) -}
  [[p, 1], [1, p], [p, 1], [1, 0]] ->= [ [p, q] , [ q , 0 ] ] {- Semlab 2 (Concon 3 (Input 2)) -}
  [[p, 1], [1, p], [p, 1], [1, 1]] ->= [ [p, q] , [ q , 1 ] ] {- Semlab 2 (Concon 4 (Input 2)) -}
  [[0, 1], [1, p], [p, 1], [1, b]] ->= [ [0, q] , [ q , b ] ] {- Semlab 3 (Concon 0 (Input 2)) -}
  [[0, 1], [1, p], [p, 1], [1, p]] ->= [ [0, q] , [ q , p ] ] {- Semlab 3 (Concon 2 (Input 2)) -}
  [[0, 1], [1, p], [p, 1], [1, 0]] ->= [ [0, q] , [ q , 0 ] ] {- Semlab 3 (Concon 3 (Input 2)) -}
  [[0, 1], [1, p], [p, 1], [1, 1]] ->= [ [0, q] , [ q , 1 ] ] {- Semlab 3 (Concon 4 (Input 2)) -}
  [[1, 1], [1, p], [p, 1], [1, b]] ->= [ [1, q] , [ q , b ] ] {- Semlab 4 (Concon 0 (Input 2)) -}
  [[1, 1], [1, p], [p, 1], [1, p]] ->= [ [1, q] , [ q , p ] ] {- Semlab 4 (Concon 2 (Input 2)) -}
  [[1, 1], [1, p], [p, 1], [1, 0]] ->= [ [1, q] , [ q , 0 ] ] {- Semlab 4 (Concon 3 (Input 2)) -}
  [[1, 1], [1, p], [p, 1], [1, 1]] ->= [ [1, q] , [ q , 1 ] ] {- Semlab 4 (Concon 4 (Input 2)) -}
  [[1, 0], [0, q], [q, 0], [0, 1]] ->= [ [1, q] , [ q , 1 ] ] {- Semlab 4 (Concon 4 (Input 3)) -}
  [[b, 1], [1, q], [q, 1], [1, b]] ->= [ [b, q] , [ q , b ] ] {- Semlab 0 (Concon 0 (Input 4)) -}
  [[b, 1], [1, q], [q, 1], [1, p]] ->= [ [b, q] , [ q , p ] ] {- Semlab 0 (Concon 2 (Input 4)) -}
  [[b, 1], [1, q], [q, 1], [1, 0]] ->= [ [b, q] , [ q , 0 ] ] {- Semlab 0 (Concon 3 (Input 4)) -}
  [[b, 1], [1, q], [q, 1], [1, 1]] ->= [ [b, q] , [ q , 1 ] ] {- Semlab 0 (Concon 4 (Input 4)) -}
  [[p, 1], [1, q], [q, 1], [1, b]] ->= [ [p, q] , [ q , b ] ] {- Semlab 2 (Concon 0 (Input 4)) -}
  [[p, 1], [1, q], [q, 1], [1, p]] ->= [ [p, q] , [ q , p ] ] {- Semlab 2 (Concon 2 (Input 4)) -}
  [[p, 1], [1, q], [q, 1], [1, 0]] ->= [ [p, q] , [ q , 0 ] ] {- Semlab 2 (Concon 3 (Input 4)) -}
  [[p, 1], [1, q], [q, 1], [1, 1]] ->= [ [p, q] , [ q , 1 ] ] {- Semlab 2 (Concon 4 (Input 4)) -}
  [[0, 1], [1, q], [q, 1], [1, b]] ->= [ [0, q] , [ q , b ] ] {- Semlab 3 (Concon 0 (Input 4)) -}
  [[0, 1], [1, q], [q, 1], [1, p]] ->= [ [0, q] , [ q , p ] ] {- Semlab 3 (Concon 2 (Input 4)) -}
  [[0, 1], [1, q], [q, 1], [1, 0]] ->= [ [0, q] , [ q , 0 ] ] {- Semlab 3 (Concon 3 (Input 4)) -}
  [[0, 1], [1, q], [q, 1], [1, 1]] ->= [ [0, q] , [ q , 1 ] ] {- Semlab 3 (Concon 4 (Input 4)) -}
  [[1, 1], [1, q], [q, 1], [1, b]] ->= [ [1, q] , [ q , b ] ] {- Semlab 4 (Concon 0 (Input 4)) -}
  [[1, 1], [1, q], [q, 1], [1, p]] ->= [ [1, q] , [ q , p ] ] {- Semlab 4 (Concon 2 (Input 4)) -}
  [[1, 1], [1, q], [q, 1], [1, 0]] ->= [ [1, q] , [ q , 0 ] ] {- Semlab 4 (Concon 3 (Input 4)) -}
  [[1, 1], [1, q], [q, 1], [1, 1]] ->= [ [1, q] , [ q , 1 ] ] {- Semlab 4 (Concon 4 (Input 4)) -}
  [[b, p], [p, b]] ->= [ [b, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, b] ] {- Semlab 0 (Concon 0 (Input 5)) -}
  [[b, p], [p, q]] ->= [ [b, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, q] ] {- Semlab 0 (Concon 1 (Input 5)) -}
  [[b, p], [p, 1]] ->= [ [b, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, 1] ] {- Semlab 0 (Concon 4 (Input 5)) -}
  [[q, p], [p, b]] ->= [ [q, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, b] ] {- Semlab 1 (Concon 0 (Input 5)) -}
  [[q, p], [p, q]] ->= [ [q, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, q] ] {- Semlab 1 (Concon 1 (Input 5)) -}
  [[q, p], [p, 1]] ->= [ [q, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, 1] ] {- Semlab 1 (Concon 4 (Input 5)) -}
  [[1, p], [p, b]] ->= [ [1, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, b] ] {- Semlab 4 (Concon 0 (Input 5)) -}
  [[1, p], [p, q]] ->= [ [1, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, q] ] {- Semlab 4 (Concon 1 (Input 5)) -}
  [[1, p], [p, 1]] ->= [ [1, 1] , [1, p] , [p, 1] , [1, 0] , [0, 1] , [1, 1] ] {- Semlab 4 (Concon 4 (Input 5)) -}
reason
  no strict rules

property Termination
has value Just True
for SRS
  [b, q, b] -> [b, p, b] {- Input 0 -}
  [1, p, 1] ->= [q] {- Input 2 -}
  [0, q, 0] ->= [q] {- Input 3 -}
  [1, q, 1] ->= [q] {- Input 4 -}
  [p] ->= [1, p, 1, 0, 1] {- Input 5 -}
reason
  ( 1
  , St  / 0A -  -  \
        | -  0A 2A |
        \ -  -  0A / )
  ( p
  , St  / 0A -2A 1A \
        | -  -   -  |
        \ -  -   0A / )
  ( b
  , St  / 0A 0A 1A \
        | -  2A -  |
        \ 0A 0A 0A / )
  ( 0
  , St  / 0A -2A 0A \
        | 2A 0A  -  |
        \ -  -   -  / )
  ( q
  , St  / 0A -2A -  \
        | -  -   2A |
        \ -  -   -  / )
   property Termination
has value Just True
for SRS
  [1, p, 1] ->= [q] {- Input 2 -}
  [0, q, 0] ->= [q] {- Input 3 -}
  [1, q, 1] ->= [q] {- Input 4 -}
  [p] ->= [1, p, 1, 0, 1] {- Input 5 -}
reason
  (1, 0/1)
  (p, 1/1)
  (0, 0/1)
  (q, 0/1)
   property Termination
has value Just True
for SRS
  [0, q, 0] ->= [q] {- Input 3 -}
  [1, q, 1] ->= [q] {- Input 4 -}
  [p] ->= [1, p, 1, 0, 1] {- Input 5 -}
reason
  no strict rules

**************************************************
skeleton: (1/5,5)\Split[(1/5,5)\TileAllAll{2}(25/125,25)\Weight(0/67,20)[],(1/4,5)\Matrix{\ArcticBZ}{3}(0/4,4)\Weight(0/3,4)[]]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 2.124468129000
  min duration 1.303272521000
  total durat. 14.879402697000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 24}
    , self = 120
    , parent = Nothing
    , duration = 1.303272521000
    , status = Fail
    , start = 2025-09-04 08:29:41.963587762 UTC
    , finish = 2025-09-04 08:29:43.266860283 UTC
    , thread_cap_info = ("ThreadId 182", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 13}
    , self = 116
    , parent = Nothing
    , duration = 1.350185120000
    , status = Fail
    , start = 2025-09-04 08:29:41.812293354 UTC
    , finish = 2025-09-04 08:29:43.162478474 UTC
    , thread_cap_info = ("ThreadId 69", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 7}
    , self = 115
    , parent = Nothing
    , duration = 1.351025880000
    , status = Fail
    , start = 2025-09-04 08:29:41.811278491 UTC
    , finish = 2025-09-04 08:29:43.162304371 UTC
    , thread_cap_info = ("ThreadId 66", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 28}
    , self = 118
    , parent = Nothing
    , duration = 1.388083174000
    , status = Fail
    , start = 2025-09-04 08:29:41.833181528 UTC
    , finish = 2025-09-04 08:29:43.221264702 UTC
    , thread_cap_info = ("ThreadId 134", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 14
      , alphabet_size = 12
      , total_length = 102}
    , self = 123
    , parent = Nothing
    , duration = 1.640352080000
    , status = Fail
    , start = 2025-09-04 08:29:41.865068769 UTC
    , finish = 2025-09-04 08:29:43.505420849 UTC
    , thread_cap_info = ("ThreadId 172", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 14
      , alphabet_size = 12
      , total_length = 106}
    , self = 124
    , parent = Nothing
    , duration = 1.673850940000
    , status = Fail
    , start = 2025-09-04 08:29:41.909929319 UTC
    , finish = 2025-09-04 08:29:43.583780259 UTC
    , thread_cap_info = ("ThreadId 180", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 67
      , num_strict_rules = 25
      , num_top_rules = 0
      , num_weak_rules = 42
      , alphabet_size = 20
      , total_length = 470}
    , self = 128
    , parent = Nothing
    , duration = 1.979911937000
    , status = Fail
    , start = 2025-09-04 08:29:42.119501079 UTC
    , finish = 2025-09-04 08:29:44.099413016 UTC
    , thread_cap_info = ("ThreadId 201", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 67
      , num_strict_rules = 25
      , num_top_rules = 0
      , num_weak_rules = 42
      , alphabet_size = 20
      , total_length = 470}
    , self = 129
    , parent = Nothing
    , duration = 2.068252916000
    , status = Fail
    , start = 2025-09-04 08:29:42.071902514 UTC
    , finish = 2025-09-04 08:29:44.14015543 UTC
    , thread_cap_info = ("ThreadId 196", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 67
      , num_strict_rules = 25
      , num_top_rules = 0
      , num_weak_rules = 42
      , alphabet_size = 20
      , total_length = 470}
    , self = 126
    , parent = Nothing
    , duration = 2.124468129000
    , status = Fail
    , start = 2025-09-04 08:29:41.83941817 UTC
    , finish = 2025-09-04 08:29:43.963886299 UTC
    , thread_cap_info = ("ThreadId 149", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 2.162489738000
  min duration 0.292222347000
  total durat. 13.889870344000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 24}
    , self = 122
    , parent = Nothing
    , duration = 1.338445099000
    , status = Fail
    , start = 2025-09-04 08:29:41.966554216 UTC
    , finish = 2025-09-04 08:29:43.304999315 UTC
    , thread_cap_info = ("ThreadId 183", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 13}
    , self = 117
    , parent = Nothing
    , duration = 1.353925190000
    , status = Fail
    , start = 2025-09-04 08:29:41.819395946 UTC
    , finish = 2025-09-04 08:29:43.173321136 UTC
    , thread_cap_info = ("ThreadId 70", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 28}
    , self = 119
    , parent = Nothing
    , duration = 1.397506054000
    , status = Fail
    , start = 2025-09-04 08:29:41.835581212 UTC
    , finish = 2025-09-04 08:29:43.233087266 UTC
    , thread_cap_info = ("ThreadId 135", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 14
      , alphabet_size = 12
      , total_length = 102}
    , self = 121
    , parent = Nothing
    , duration = 1.416831018000
    , status = Fail
    , start = 2025-09-04 08:29:41.86507854 UTC
    , finish = 2025-09-04 08:29:43.281909558 UTC
    , thread_cap_info = ("ThreadId 173", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 14
      , alphabet_size = 12
      , total_length = 106}
    , self = 125
    , parent = Nothing
    , duration = 1.816231057000
    , status = Fail
    , start = 2025-09-04 08:29:41.919406037 UTC
    , finish = 2025-09-04 08:29:43.735637094 UTC
    , thread_cap_info = ("ThreadId 181", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 67
      , num_strict_rules = 25
      , num_top_rules = 0
      , num_weak_rules = 42
      , alphabet_size = 20
      , total_length = 470}
    , self = 131
    , parent = Nothing
    , duration = 2.036567119000
    , status = Fail
    , start = 2025-09-04 08:29:42.167192778 UTC
    , finish = 2025-09-04 08:29:44.203759897 UTC
    , thread_cap_info = ("ThreadId 203", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 67
      , num_strict_rules = 25
      , num_top_rules = 0
      , num_weak_rules = 42
      , alphabet_size = 20
      , total_length = 470}
    , self = 130
    , parent = Nothing
    , duration = 2.075652722000
    , status = Fail
    , start = 2025-09-04 08:29:42.07190448 UTC
    , finish = 2025-09-04 08:29:44.147557202 UTC
    , thread_cap_info = ("ThreadId 198", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 67
      , num_strict_rules = 25
      , num_top_rules = 0
      , num_weak_rules = 42
      , alphabet_size = 20
      , total_length = 470}
    , self = 127
    , parent = Nothing
    , duration = 2.162489738000
    , status = Fail
    , start = 2025-09-04 08:29:41.860375776 UTC
    , finish = 2025-09-04 08:29:44.022865514 UTC
    , thread_cap_info = ("ThreadId 150", 0, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.061169556000
  min duration 1.061169556000
  total durat. 1.061169556000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 24}
    , self = 132
    , parent = Nothing
    , duration = 1.061169556000
    , status = Success
    , start = 2025-09-04 08:29:43.266911911 UTC
    , finish = 2025-09-04 08:29:44.328081467 UTC
    , thread_cap_info = ("ThreadId 219", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.103212107000
  min duration 1.103212107000
  total durat. 1.103212107000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 24}
    , self = 134
    , parent = Nothing
    , duration = 1.103212107000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:29:43.341436373 UTC
    , finish = 2025-09-04 08:29:44.44464848 UTC
    , thread_cap_info = ("ThreadId 221", 2, False)}
Success : "Tiling\n { method = All\n , width = 2\n , state_type = Best\n , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 9
  max duration 1.076729086000
  min duration 0.000108898000
  total durat. 1.246208532000
  Info
    { what = "Tiling\n  { method = All\n  , width = 2\n  , state_type = Best\n  , map_type = Enum\n  , unlabel = Never\n  , print_completion_steps = False\n  , print_tiles = False\n  , max_num_tiles = Just 10000\n  , max_num_rules = Just 100000\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 67
      , num_strict_rules = 25
      , num_top_rules = 0
      , num_weak_rules = 42
      , alphabet_size = 20
      , total_length = 470}
    , self = 114
    , parent = Nothing
    , duration = 1.076729086000
    , status = Success
    , start = 2025-09-04 08:29:41.835629624 UTC
    , finish = 2025-09-04 08:29:42.91235871 UTC
    , thread_cap_info = ("ThreadId 148", 0, False)}
**************************************************
F                                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                                    = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
F                                    = 1 , num_top_rules = 1 , num_weak_rules = 1 , alphabet_size = 3 , total_length
F                                    = 7} , self = 115 , parent = Nothing , duration = 1.351025880000 , status
F                                    = Fail , start = 2025-09-04 08:29:41.811278491 UTC , finish = 2025-09-04
F                                    08:29:43.162304371 UTC , thread_cap_info = ("ThreadId 66", 3, False)}
F                                    
| F                                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                                  = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
| F                                  = 1 , num_top_rules = 1 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| F                                  = 7} , self = 113 , parent = Nothing , duration = 0.292222347000 , status
| F                                  = Fail , start = 2025-09-04 08:29:41.811283701 UTC , finish = 2025-09-04
| F                                  08:29:42.103506048 UTC , thread_cap_info = ("ThreadId 67", 3, False)}
| F                                  
| | F                                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                                = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | F                                = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | F                                = 13} , self = 116 , parent = Nothing , duration = 1.350185120000 , status
| | F                                = Fail , start = 2025-09-04 08:29:41.812293354 UTC , finish = 2025-09-04
| | F                                08:29:43.162478474 UTC , thread_cap_info = ("ThreadId 69", 3, False)}
| | F                                
| | | F                              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                              = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | F                              = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | F                              = 13} , self = 117 , parent = Nothing , duration = 1.353925190000 , status
| | | F                              = Fail , start = 2025-09-04 08:29:41.819395946 UTC , finish = 2025-09-04
| | | F                              08:29:43.173321136 UTC , thread_cap_info = ("ThreadId 70", 3, False)}
| | | F                              
| | | | F                            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                            = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | F                            = 1 , num_top_rules = 0 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | F                            = 28} , self = 118 , parent = Nothing , duration = 1.388083174000 , status
| | | | F                            = Fail , start = 2025-09-04 08:29:41.833181528 UTC , finish = 2025-09-04
| | | | F                            08:29:43.221264702 UTC , thread_cap_info = ("ThreadId 134", 2, False)}
| | | | F                            
| | | | | F                          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                          = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | F                          = 1 , num_top_rules = 0 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | F                          = 28} , self = 119 , parent = Nothing , duration = 1.397506054000 , status
| | | | | F                          = Fail , start = 2025-09-04 08:29:41.835581212 UTC , finish = 2025-09-04
| | | | | F                          08:29:43.233087266 UTC , thread_cap_info = ("ThreadId 135", 2, False)}
| | | | | F                          
| | | | | | S                        Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | | | | S                        , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | | | | S                        , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | | | | S                        = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | | | | S                        , cpf = False}" , input_size = Size { num_rules = 67 , num_strict_rules
| | | | | | S                        = 25 , num_top_rules = 0 , num_weak_rules = 42 , alphabet_size = 20 , total_length
| | | | | | S                        = 470} , self = 114 , parent = Nothing , duration = 1.076729086000 , status
| | | | | | S                        = Success , start = 2025-09-04 08:29:41.835629624 UTC , finish = 2025-09-04
| | | | | | S                        08:29:42.91235871 UTC , thread_cap_info = ("ThreadId 148", 0, False)}
| | | | | | S                        
| | | | | | | F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 67 , num_strict_rules
| | | | | | | F                      = 25 , num_top_rules = 0 , num_weak_rules = 42 , alphabet_size = 20 , total_length
| | | | | | | F                      = 470} , self = 126 , parent = Nothing , duration = 2.124468129000 , status
| | | | | | | F                      = Fail , start = 2025-09-04 08:29:41.83941817 UTC , finish = 2025-09-04
| | | | | | | F                      08:29:43.963886299 UTC , thread_cap_info = ("ThreadId 149", 0, False)}
| | | | | | | F                      
| | | | | | | | F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 67 , num_strict_rules
| | | | | | | | F                    = 25 , num_top_rules = 0 , num_weak_rules = 42 , alphabet_size = 20 , total_length
| | | | | | | | F                    = 470} , self = 127 , parent = Nothing , duration = 2.162489738000 , status
| | | | | | | | F                    = Fail , start = 2025-09-04 08:29:41.860375776 UTC , finish = 2025-09-04
| | | | | | | | F                    08:29:44.022865514 UTC , thread_cap_info = ("ThreadId 150", 0, False)}
| | | | | | | | F                    
| | | | | | | | | S                  Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | | | | | | | S                  , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | | | | | | | S                  , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | | | | | | | S                  = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | | | | | | | S                  , cpf = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | | S                  = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | | | | | | | S                  = 24} , self = 105 , parent = Nothing , duration = 0.144682351000 , status
| | | | | | | | | S                  = Success , start = 2025-09-04 08:29:41.865056057 UTC , finish = 2025-09-04
| | | | | | | | | S                  08:29:42.009738408 UTC , thread_cap_info = ("ThreadId 171", 2, False)}
| | | | | | | | | S                  
| | | | | | | | | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | | | | | F                = 2 , num_top_rules = 2 , num_weak_rules = 14 , alphabet_size = 12 , total_length
| | | | | | | | | | F                = 102} , self = 123 , parent = Nothing , duration = 1.640352080000 , status
| | | | | | | | | | F                = Fail , start = 2025-09-04 08:29:41.865068769 UTC , finish = 2025-09-04
| | | | | | | | | | F                08:29:43.505420849 UTC , thread_cap_info = ("ThreadId 172", 2, False)}
| | | | | | | | | | F                
| | | | | | | | | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | | | | | | F              = 2 , num_top_rules = 2 , num_weak_rules = 14 , alphabet_size = 12 , total_length
| | | | | | | | | | | F              = 102} , self = 121 , parent = Nothing , duration = 1.416831018000 , status
| | | | | | | | | | | F              = Fail , start = 2025-09-04 08:29:41.86507854 UTC , finish = 2025-09-04
| | | | | | | | | | | F              08:29:43.281909558 UTC , thread_cap_info = ("ThreadId 173", 2, False)}
| | | | | | | | | | | F              
| | | | | | | | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | | | | | | | F            = 2 , num_top_rules = 2 , num_weak_rules = 14 , alphabet_size = 12 , total_length
| | | | | | | | | | | | F            = 106} , self = 124 , parent = Nothing , duration = 1.673850940000 , status
| | | | | | | | | | | | F            = Fail , start = 2025-09-04 08:29:41.909929319 UTC , finish = 2025-09-04
| | | | | | | | | | | | F            08:29:43.583780259 UTC , thread_cap_info = ("ThreadId 180", 2, False)}
| | | | | | | | | | | | F            
| | | | | | | | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | | | | | | | | F          = 2 , num_top_rules = 2 , num_weak_rules = 14 , alphabet_size = 12 , total_length
| | | | | | | | | | | | | F          = 106} , self = 125 , parent = Nothing , duration = 1.816231057000 , status
| | | | | | | | | | | | | F          = Fail , start = 2025-09-04 08:29:41.919406037 UTC , finish = 2025-09-04
| | | | | | | | | | | | | F          08:29:43.735637094 UTC , thread_cap_info = ("ThreadId 181", 2, False)}
| | | | | | | | | | | | | F          
| | | | | | | | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | | | | | | | F        = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | | | | | | | | | | | | F        = 24} , self = 120 , parent = Nothing , duration = 1.303272521000 , status
| | | | | | | | | | | | | | F        = Fail , start = 2025-09-04 08:29:41.963587762 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | F        08:29:43.266860283 UTC , thread_cap_info = ("ThreadId 182", 2, False)}
| | | | | | | | | | | | | | F        
| | | | | | | | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | | | | | | | | F      = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | | | | | | | | | | | | | F      = 24} , self = 122 , parent = Nothing , duration = 1.338445099000 , status
| | | | | | | | | | | | | | | F      = Fail , start = 2025-09-04 08:29:41.966554216 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | F      08:29:43.304999315 UTC , thread_cap_info = ("ThreadId 183", 2, False)}
| | | | | | | | | | | | | | | F      
| | | | | | | | | S | | | | | |      
| | | | | | | | | F | | | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F | | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 67 , num_strict_rules
| | | | | | | | | F | | | | | |      = 25 , num_top_rules = 0 , num_weak_rules = 42 , alphabet_size = 20 , total_length
| | | | | | | | | F | | | | | |      = 470} , self = 129 , parent = Nothing , duration = 2.068252916000 , status
| | | | | | | | | F | | | | | |      = Fail , start = 2025-09-04 08:29:42.071902514 UTC , finish = 2025-09-04
| | | | | | | | | F | | | | | |      08:29:44.14015543 UTC , thread_cap_info = ("ThreadId 196", 2, False)}
| | | | | | | | | F | | | | | |      
| | | | | | | | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 67 , num_strict_rules
| | | | | | | | | | | | | | | | F    = 25 , num_top_rules = 0 , num_weak_rules = 42 , alphabet_size = 20 , total_length
| | | | | | | | | | | | | | | | F    = 470} , self = 130 , parent = Nothing , duration = 2.075652722000 , status
| | | | | | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:29:42.07190448 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | | F    08:29:44.147557202 UTC , thread_cap_info = ("ThreadId 198", 2, False)}
| | | | | | | | | | | | | | | | F    
| F | | | | | | | | | | | | | | |    
| F | | | | | | | | | | | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | | | | | | | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | | | | | | | | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 67 , num_strict_rules
| F | | | | | | | | | | | | | | |    = 25 , num_top_rules = 0 , num_weak_rules = 42 , alphabet_size = 20 , total_length
| F | | | | | | | | | | | | | | |    = 470} , self = 128 , parent = Nothing , duration = 1.979911937000 , status
| F | | | | | | | | | | | | | | |    = Fail , start = 2025-09-04 08:29:42.119501079 UTC , finish = 2025-09-04
| F | | | | | | | | | | | | | | |    08:29:44.099413016 UTC , thread_cap_info = ("ThreadId 201", 2, False)}
| F | | | | | | | | | | | | | | |    
| | | | | | | | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 67 , num_strict_rules
| | | | | | | | | | | | | | | | | F  = 25 , num_top_rules = 0 , num_weak_rules = 42 , alphabet_size = 20 , total_length
| | | | | | | | | | | | | | | | | F  = 470} , self = 131 , parent = Nothing , duration = 2.036567119000 , status
| | | | | | | | | | | | | | | | | F  = Fail , start = 2025-09-04 08:29:42.167192778 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | | | F  08:29:44.203759897 UTC , thread_cap_info = ("ThreadId 203", 2, False)}
| | | | | | | | | | | | | | | | | F  
| | | | | | S | | | | | | | | | | |  
F | | | | |   | | | | | | | | | | |  
  | F | | |   | | | | | | | | | | |  
  |   F | |   | | | | | | | | | | |  
  |     F |   | | | | | | | | | | |  
  |       F   | | | | | | | | | | |  
  |           | | | | | | | F | | |  
S |           | | | | | | |   | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
S |           | | | | | | |   | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
S |           | | | | | | |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S |           | | | | | | |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S |           | | | | | | |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S |           | | | | | | |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
S |           | | | | | | |   | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
S |           | | | | | | |   | | |  = 5 , total_length = 24} , self = 132 , parent = Nothing , duration = 1.061169556000
S |           | | | | | | |   | | |  , status = Success , start = 2025-09-04 08:29:43.266911911 UTC , finish
S |           | | | | | | |   | | |  = 2025-09-04 08:29:44.328081467 UTC , thread_cap_info = ("ThreadId 219",
S |           | | | | | | |   | | |  2, False)}
S |           | | | | | | |   | | |  
| |           | | | | F | |   | | |  
| |           | | | |   | |   F | |  
| | E         | | | |   | |     | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | E         | | | |   | |     | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E         | | | |   | |     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E         | | | |   | |     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E         | | | |   | |     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E         | | | |   | |     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | E         | | | |   | |     | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | E         | | | |   | |     | |  = 5 , total_length = 24} , self = 134 , parent = Nothing , duration = 1.103212107000
| | E         | | | |   | |     | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:29:43.341436373
| | E         | | | |   | |     | |  UTC , finish = 2025-09-04 08:29:44.44464848 UTC , thread_cap_info = ("ThreadId
| | E         | | | |   | |     | |  221", 2, False)}
| | E         | | | |   | |     | |  
| | |         | | | F   | |     | |  
| | |         | | |     F |     | |  
| | |         | | |       F     | |  
| | |         F | |             | |  
| | |           F |             | |  
| F |             |             | |  
|   |             F             | |  
|   |                           F |  
|   |                             F  
S   |                                
    E                                
