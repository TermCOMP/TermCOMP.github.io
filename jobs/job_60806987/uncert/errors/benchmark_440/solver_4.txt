Input TRS:
    1: a(x1) -> x1
    2: b(x1) -> x1
    3: a(c(x1)) -> b(b(c(a(x1))))
    4: d(b(b(b(x1)))) -> a(d(a(x1)))
    5: a(b(x1)) ->= b(a(x1))
    6: b(a(x1)) ->= a(b(x1))
Number of strict rules: 4
Direct Order(PosReal,>,Poly) ... failed.
Freezing ... failed.
Dependency Pairs:
   #1: #b(a(x1)) ->? #a(b(x1))
   #2: #b(a(x1)) ->? #b(x1)
   #3: #a(b(x1)) ->? #b(a(x1))
   #4: #a(b(x1)) ->? #a(x1)
   #5: #a(c(x1)) -> #b(b(c(a(x1))))
   #6: #a(c(x1)) -> #b(c(a(x1)))
   #7: #a(c(x1)) -> #a(x1)
   #8: #d(b(b(b(x1)))) -> #a(d(a(x1)))
   #9: #d(b(b(b(x1)))) -> #d(a(x1))
   #10: #d(b(b(b(x1)))) -> #a(x1)
Number of SCCs: 2, DPs: 7, edges: 19
	SCC { #9 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     a(x1)	weight: (/ 1 2) + x1
     d(x1)	weight: 0
     b(x1)	weight: (/ 1 4) + x1
     c(x1)	weight: (/ 1 4)
   #d(x1)	weight: x1
   #a(x1)	weight: 0
   #b(x1)	weight: 0
    Usable rules: { 1..3 5 6 }
    Removed DPs: #9
Number of SCCs: 1, DPs: 6, edges: 18
	SCC { #1..5 #7 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     a(x1)	weight: (/ 1 4) + x1
     d(x1)	weight: 0
     b(x1)	weight: x1
     c(x1)	weight: (/ 1 4) + x1
   #d(x1)	weight: 0
   #a(x1)	weight: (/ 1 4) + x1
   #b(x1)	weight: x1
    Usable rules: { 1..3 5 6 }
    Removed DPs: #2 #7
Number of SCCs: 1, DPs: 4, edges: 8
	SCC { #1 #3..5 }
Removing DPs: Order(PosReal,>,Sum)... succeeded.
     a(x1)	weight: (/ 3 4) + x1
     d(x1)	weight: 0
     b(x1)	weight: (/ 1 4) + x1
     c(x1)	weight: (/ 1 4)
   #d(x1)	weight: 0
   #a(x1)	weight: (/ 1 2) + x1
   #b(x1)	weight: x1
    Usable rules: { 1..3 5 6 }
    Removed DPs: #4 #5
Number of SCCs: 1, DPs: 2, edges: 2
	SCC { #1 #3 }
Removing DPs: Order(PosReal,>,Sum)... Order(PosReal,>,Max)... QLPOpS... Order(PosReal,>,MaxSum)... QWPOpS(PosReal,>,MaxSum)... Order(PosReal,>,Sum-Sum; PosReal,≥,Sum-Sum)... Order(PosReal,>,Sum-Sum; NegReal,≥,Sum)... Order(PosReal,>,MaxSum-Sum; NegReal,≥,Sum)... failed.
Removing edges: failed.
Finding a loop...  failed.
