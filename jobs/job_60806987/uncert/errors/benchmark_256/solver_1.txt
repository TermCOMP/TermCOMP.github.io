last 7702 length 33357
CNF 7702 vars 33357 clauses
last 11781 length 49861
CNF 11781 vars 49861 clauses
last 786 length 3109
CNF 786 vars 3109 clauses
last 606 length 2449
CNF 606 vars 2449 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2195, clauses: 7962
last 2195 length 7962
last 1086 length 4365
last 1334 length 5405
CNF 2195 vars 7962 clauses
CNF 1086 vars 4365 clauses
CNF 1334 vars 5405 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7800, clauses: 32531
last 7800 length 32531
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3403, clauses: 12664
last 3403 length 12664
CNF 7800 vars 32531 clauses
CNF 3403 vars 12664 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2195, clauses: 7962, status: Unsatisfied, time: 0.308558382s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9802, clauses: 40841
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3403, clauses: 12664, status: Satisfied, time: 0.127920015s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7800, clauses: 32531, status: Satisfied, time: 0.144314441s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4753, clauses: 19359
last 880 length 3523
CNF 880 vars 3523 clauses
last 1060 length 4293
last 606 length 2449
last 786 length 3109
CNF 606 vars 2449 clauses
CNF 1060 vars 4293 clauses
CNF 786 vars 3109 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2195, clauses: 7962
last 2195 length 7962
CNF 2195 vars 7962 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2797, clauses: 10291
last 2797 length 10291
CNF 2797 vars 10291 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2195, clauses: 7962, status: Unsatisfied, time: 0.111124651s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8799, clauses: 36679
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2797, clauses: 10291, status: Satisfied, time: 0.165614825s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7800, clauses: 32531
last 8799 length 36679
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4753, clauses: 19359
last 912 length 3713
last 862 length 3469
last 7800 length 32531
last 4753 length 19359
CNF 862 vars 3469 clauses
CNF 912 vars 3713 clauses
CNF 7800 vars 32531 clauses
CNF 4753 vars 19359 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2577, clauses: 9338
last 2577 length 9338
CNF 2577 vars 9338 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2577, clauses: 9338, status: Unsatisfied, time: 0.389757366s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7800, clauses: 32531, status: Unsatisfied, time: 0.500856262s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8751, clauses: 36481
last 8751 length 36481
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4753, clauses: 19359, status: Unsatisfied, time: 0.549321754s
CNF 8751 vars 36481 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5330, clauses: 21701
last 5330 length 21701
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3601, clauses: 13909
CNF 5330 vars 21701 clauses
last 3601 length 13909
CNF 3601 vars 13909 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13563, clauses: 57398
last 13563 length 57398
CNF 13563 vars 57398 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3601, clauses: 13909, status: Unsatisfied, time: 0.398841967s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6775, clauses: 25980
last 6775 length 25980
CNF 6775 vars 25980 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5330, clauses: 21701, status: Unsatisfied, time: 0.972753331s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4208, clauses: 16220
last 4208 length 16220
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8751, clauses: 36481, status: Unsatisfied, time: 1.133740847s
CNF 4208 vars 16220 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15052, clauses: 63561
last 15052 length 63561
CNF 15052 vars 63561 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4208, clauses: 16220, status: Unsatisfied, time: 0.799059149s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7919, clauses: 30237
last 7919 length 30237
CNF 7919 vars 30237 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6775, clauses: 25980, status: Unsatisfied, time: 7.78405795s
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16758, clauses: 78371
last 16758 length 78371
CNF 16758 vars 78371 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 2, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14882, clauses: 69756
last 14882 length 69756
CNF 14882 vars 69756 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18531, clauses: 86683
last 18531 length 86683
CNF 18531 vars 86683 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7919, clauses: 30237, status: Unsatisfied, time: 13.589797237s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 2, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16416, clauses: 76327
last 16416 length 76327
CNF 16416 vars 76327 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18531, clauses: 86683, status: Satisfied, time: 6.017065949s
**************************************************
summary
**************************************************
SRS with 4 strict rules and 2 weak rules on 3 letters       cleaner
SRS with 4 strict rules and 1 weak rules on 3 letters       strictify
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 11 strict rules and 5 weak rules on 6 letters       weights
SRS with 5 strict rules and 5 weak rules on 6 letters       EDG
SRS with 5 strict rules and 5 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 5 weak rules on 6 letters       weights
SRS with 3 strict rules and 5 weak rules on 5 letters       EDG
SRS with 3 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 5 weak rules on 5 letters       EDG
SRS with 2 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 5 weak rules on 5 letters       weights
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, c, b] -> [b, b, a] {- Input 0 -}
  [a, c, b] -> [a, c, c] {- Input 1 -}
  [b, b, b] -> [a, a, c] {- Input 2 -}
  [c, a, c] -> [b, b, b] {- Input 3 -}
  [b, a, b] ->= [b, a, b] {- Input 4 -}
  [b, a, a] ->= [b, a, b] {- Input 5 -}
reason
  cleaner
   property Termination
has value Just True
for SRS
  [a, c, b] -> [b, b, a] {- Input 0 -}
  [a, c, b] -> [a, c, c] {- Input 1 -}
  [b, b, b] -> [a, a, c] {- Input 2 -}
  [c, a, c] -> [b, b, b] {- Input 3 -}
  [b, a, a] ->= [b, a, b] {- Input 5 -}
reason
  strictify
   property Termination
has value Just True
for SRS
  [a, c, b] -> [b, b, a] {- Input 0 -}
  [a, c, b] -> [a, c, c] {- Input 1 -}
  [b, b, b] -> [a, a, c] {- Input 2 -}
  [c, a, c] -> [b, b, b] {- Input 3 -}
  [b, a, a] -> [b, a, b] {- Strictified (Input 5) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, c, a] -> [a, b, b] {- Mirror (Input 0) -}
  [b, c, a] -> [c, c, a] {- Mirror (Input 1) -}
  [b, b, b] -> [c, a, a] {- Mirror (Input 2) -}
  [c, a, c] -> [b, b, b] {- Mirror (Input 3) -}
  [a, a, b] -> [b, a, b] {- Mirror (Strictified (Input 5)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, c, a] ->= [a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, a] ->= [c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, b] ->= [c, a, a] {- DP Nontop (Mirror (Input 2)) -}
  [c, a, c] ->= [b, b, b] {- DP Nontop (Mirror (Input 3)) -}
  [a, a, b] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a#, a, b] |-> [b#, a, b] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [b#, b, b] |-> [a#] {- DP (Top 2) (Mirror (Input 2)) -}
  [b#, b, b] |-> [a#, a] {- DP (Top 1) (Mirror (Input 2)) -}
  [b#, b, b] |-> [c#, a, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, c, a] |-> [a#, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, c, a] |-> [b#] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, c, a] |-> [b#, b] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, c, a] |-> [c#, c, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, a, c] |-> [b#] {- DP (Top 2) (Mirror (Input 3)) -}
  [c#, a, c] |-> [b#, b] {- DP (Top 1) (Mirror (Input 3)) -}
  [c#, a, c] |-> [b#, b, b] {- DP (Top 0) (Mirror (Input 3)) -}
reason
  (a, 1/1)
  (b, 1/1)
  (c, 1/1)
  (a#, 0/1)
  (b#, 0/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [b, c, a] ->= [a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, a] ->= [c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, b] ->= [c, a, a] {- DP Nontop (Mirror (Input 2)) -}
  [c, a, c] ->= [b, b, b] {- DP Nontop (Mirror (Input 3)) -}
  [a, a, b] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a#, a, b] |-> [b#, a, b] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [b#, b, b] |-> [c#, a, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, c, a] |-> [a#, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, c, a] |-> [c#, c, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, a, c] |-> [b#, b, b] {- DP (Top 0) (Mirror (Input 3)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, b] |-> [b#, a, b] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [b#, b, b] |-> [c#, a, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, a, c] |-> [b#, b, b] {- DP (Top 0) (Mirror (Input 3)) -}
  [b#, c, a] |-> [a#, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, c, a] |-> [c#, c, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [b, c, a] ->= [a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, a] ->= [c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, b] ->= [c, a, a] {- DP Nontop (Mirror (Input 2)) -}
  [c, a, c] ->= [b, b, b] {- DP Nontop (Mirror (Input 3)) -}
  [a, a, b] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  ( a
  , Wk  / 0A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 7A 7A 7A - \
        | 7A 7A 7A - |
        | 7A 7A 7A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 7A 9A 10A - \
        | 7A 9A 10A - |
        | 7A 9A 10A - |
        \ -  -  -   - / )
  ( c#
  , Wk  / 9A 9A 12A - \
        | 9A 9A 12A - |
        | 9A 9A 12A - |
        \ -  -  -   - / )
   property Termination
has value Just True
for SRS
  [a#, a, b] |-> [b#, a, b] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [b#, b, b] |-> [c#, a, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, a, c] |-> [b#, b, b] {- DP (Top 0) (Mirror (Input 3)) -}
  [b#, c, a] |-> [c#, c, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [b, c, a] ->= [a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, a] ->= [c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, b] ->= [c, a, a] {- DP Nontop (Mirror (Input 2)) -}
  [c, a, c] ->= [b, b, b] {- DP Nontop (Mirror (Input 3)) -}
  [a, a, b] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [b#, b, b] |-> [c#, a, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, a, c] |-> [b#, b, b] {- DP (Top 0) (Mirror (Input 3)) -}
  [b#, c, a] |-> [c#, c, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [b, c, a] ->= [a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, a] ->= [c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, b] ->= [c, a, a] {- DP Nontop (Mirror (Input 2)) -}
  [c, a, c] ->= [b, b, b] {- DP Nontop (Mirror (Input 3)) -}
  [a, a, b] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, b, b] |-> [c#, a, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, a, c] |-> [b#, b, b] {- DP (Top 0) (Mirror (Input 3)) -}
  [b#, c, a] |-> [c#, c, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [b, c, a] ->= [a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, a] ->= [c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, b] ->= [c, a, a] {- DP Nontop (Mirror (Input 2)) -}
  [c, a, c] ->= [b, b, b] {- DP Nontop (Mirror (Input 3)) -}
  [a, a, b] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  ( a
  , Wk  / 3A 6A 6A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 3A 6A 6A - \
        | 3A 6A 6A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 6A 6A 9A - \
        | 6A 6A 9A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 7A 8A 10A - \
        | 7A 8A 10A - |
        | 7A 8A 10A - |
        \ -  -  -   - / )
  ( c#
  , Wk  / 8A 8A 10A - \
        | 8A 8A 10A - |
        | 8A 8A 10A - |
        \ -  -  -   - / )
   property Termination
has value Just True
for SRS
  [c#, a, c] |-> [b#, b, b] {- DP (Top 0) (Mirror (Input 3)) -}
  [b#, c, a] |-> [c#, c, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [b, c, a] ->= [a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, a] ->= [c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, b] ->= [c, a, a] {- DP Nontop (Mirror (Input 2)) -}
  [c, a, c] ->= [b, b, b] {- DP Nontop (Mirror (Input 3)) -}
  [a, a, b] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [c#, a, c] |-> [b#, b, b] {- DP (Top 0) (Mirror (Input 3)) -}
  [b#, c, a] |-> [c#, c, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [b, c, a] ->= [a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, a] ->= [c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, b] ->= [c, a, a] {- DP Nontop (Mirror (Input 2)) -}
  [c, a, c] ->= [b, b, b] {- DP Nontop (Mirror (Input 3)) -}
  [a, a, b] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  ( a
  , Wk  / -  0A -  0A 0A \
        | -  0A -  -  -  |
        | 0A -  0A 0A -  |
        | 0A 1A 0A 0A 1A |
        \ -  -  -  -  0A / )
  ( b
  , Wk  / -  1A 0A 0A 1A \
        | 0A 0A -  -  0A |
        | 1A -  0A -  -  |
        | 0A 0A -  -  -  |
        \ -  -  -  -  0A / )
  ( c
  , Wk  / 0A 1A 0A 1A -  \
        | 0A 1A -  0A -  |
        | 0A -  0A 1A -  |
        | -  1A 0A -  1A |
        \ -  -  -  -  0A / )
  ( b#
  , Wk  / 0A - - 0A 1A \
        | -  - - -  -  |
        | -  - - -  -  |
        | -  - - -  -  |
        \ -  - - -  0A / )
  ( c#
  , Wk  / - - - 0A 0A \
        | - - - -  -  |
        | - - - -  -  |
        | - - - -  -  |
        \ - - - -  0A / )
   property Termination
has value Just True
for SRS
  [c#, a, c] |-> [b#, b, b] {- DP (Top 0) (Mirror (Input 3)) -}
  [b, c, a] ->= [a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, a] ->= [c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, b] ->= [c, a, a] {- DP Nontop (Mirror (Input 2)) -}
  [c, a, c] ->= [b, b, b] {- DP Nontop (Mirror (Input 3)) -}
  [a, a, b] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (b#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [b, c, a] ->= [a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, a] ->= [c, c, a] {- DP Nontop (Mirror (Input 1)) -}
  [b, b, b] ->= [c, a, a] {- DP Nontop (Mirror (Input 2)) -}
  [c, a, c] ->= [b, b, b] {- DP Nontop (Mirror (Input 3)) -}
  [a, a, b] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  EDG

**************************************************
skeleton: (4/2,3)\Cleaner(4/1,3)\Strictify\Mirror(5,3)\Deepee(11/5,6)\Weight\EDG(5/5,6)\Matrix{\Arctic}{3}(4/5,6)\Weight\EDG(3/5,5)\Matrix{\Arctic}{3}\EDG(2/5,5)\Matrix{\Arctic}{5}(1/5,5)\Weight(0/5,3)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 3
  max duration 1.499164460000
  min duration 1.008630178000
  total durat. 3.772754902000
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 5
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 30}
    , self = 48
    , parent = Nothing
    , duration = 1.008630178000
    , status = Fail
    , start = 2025-09-04 08:20:47.483885261 UTC
    , finish = 2025-09-04 08:20:48.492515439 UTC
    , thread_cap_info = ("ThreadId 49", 0, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 5
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 30}
    , self = 49
    , parent = Nothing
    , duration = 1.264960264000
    , status = Fail
    , start = 2025-09-04 08:20:47.483890436 UTC
    , finish = 2025-09-04 08:20:48.7488507 UTC
    , thread_cap_info = ("ThreadId 51", 0, False)}
  Info
    { what = "Matchbound\n  { method = RFC\n  , implementation = Exact\n  , cpf_state_encoding = Encoding   { base = 10, order = MSB_First}\n  , max_size = Just 10000\n  , max_height = Just 5\n  , initial = Paths\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 45
      , num_strict_rules = 45
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 360}
    , self = 67
    , parent = Nothing
    , duration = 1.499164460000
    , status = Fail
    , start = 2025-09-04 08:20:47.521347821 UTC
    , finish = 2025-09-04 08:20:49.020512281 UTC
    , thread_cap_info = ("ThreadId 75", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.642669242000
  min duration 0.714323456000
  total durat. 2.356992698000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 42}
    , self = 102
    , parent = Nothing
    , duration = 1.642669242000
    , status = Fail
    , start = 2025-09-04 08:20:49.551303522 UTC
    , finish = 2025-09-04 08:20:51.193972764 UTC
    , thread_cap_info = ("ThreadId 148", 0, False)}
Success : "Matrix\n { monotone = Weak\n , domain = Arctic\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 6.553024144000
  min duration 6.553024144000
  total durat. 6.553024144000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Arctic\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 42}
    , self = 108
    , parent = Nothing
    , duration = 6.553024144000
    , status = Success
    , start = 2025-09-04 08:21:03.224080117 UTC
    , finish = 2025-09-04 08:21:09.777104261 UTC
    , thread_cap_info = ("ThreadId 171", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 2\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.944247237000
  min duration 3.944247237000
  total durat. 3.944247237000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 2\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 42}
    , self = 110
    , parent = Nothing
    , duration = 3.944247237000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:21:05.833400193 UTC
    , finish = 2025-09-04 08:21:09.77764743 UTC
    , thread_cap_info = ("ThreadId 173", 0, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.067259310000
  min duration 0.641922945000
  total durat. 1.709182255000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 42}
    , self = 101
    , parent = Nothing
    , duration = 1.067259310000
    , status = Fail
    , start = 2025-09-04 08:20:50.010651373 UTC
    , finish = 2025-09-04 08:20:51.077910683 UTC
    , thread_cap_info = ("ThreadId 150", 0, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 12.005629755000
  min duration 12.002765686000
  total durat. 24.008395441000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 42}
    , self = 106
    , parent = Nothing
    , duration = 12.002765686000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 08:20:51.221282398 UTC
    , finish = 2025-09-04 08:21:03.224048084 UTC
    , thread_cap_info = ("ThreadId 161", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 36}
    , self = 105
    , parent = Nothing
    , duration = 12.005629755000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 08:20:50.108196035 UTC
    , finish = 2025-09-04 08:21:02.11382579 UTC
    , thread_cap_info = ("ThreadId 153", 0, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.910963449000
  min duration 0.519875159000
  total durat. 1.430838608000
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 13.837735896000
  min duration 7.960630204000
  total durat. 21.798366100000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 36}
    , self = 104
    , parent = Nothing
    , duration = 7.960630204000
    , status = Fail
    , start = 2025-09-04 08:20:50.562648186 UTC
    , finish = 2025-09-04 08:20:58.52327839 UTC
    , thread_cap_info = ("ThreadId 157", 0, False)}
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 42}
    , self = 107
    , parent = Nothing
    , duration = 13.837735896000
    , status = Fail
    , start = 2025-09-04 08:20:51.995597296 UTC
    , finish = 2025-09-04 08:21:05.833333192 UTC
    , thread_cap_info = ("ThreadId 163", 0, False)}
**************************************************
F            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F            , closure = Backward\n , start_strict_only = True\n , max_closure_length
F            = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F            Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F            8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F            = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F            ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F            1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F            = True})" , input_size = Size { num_rules = 5 , num_strict_rules = 5 ,
F            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F            = 30} , self = 39 , parent = Nothing , duration = 0.152378965000 , status
F            = Fail , start = 2025-09-04 08:20:47.483809883 UTC , finish = 2025-09-04
F            08:20:47.636188848 UTC , thread_cap_info = ("ThreadId 37", 0, False)}
F            
| F          Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F          , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F          = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F          False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F          = Size { num_rules = 5 , num_strict_rules = 5 , num_top_rules = 0 , num_weak_rules
| F          = 0 , alphabet_size = 3 , total_length = 30} , self = 48 , parent = Nothing
| F          , duration = 1.008630178000 , status = Fail , start = 2025-09-04 08:20:47.483885261
| F          UTC , finish = 2025-09-04 08:20:48.492515439 UTC , thread_cap_info = ("ThreadId
| F          49", 0, False)}
| F          
| | F        Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F        , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F        = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F        False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F        = Size { num_rules = 5 , num_strict_rules = 5 , num_top_rules = 0 , num_weak_rules
| | F        = 0 , alphabet_size = 3 , total_length = 30} , self = 49 , parent = Nothing
| | F        , duration = 1.264960264000 , status = Fail , start = 2025-09-04 08:20:47.483890436
| | F        UTC , finish = 2025-09-04 08:20:48.7488507 UTC , thread_cap_info = ("ThreadId
| | F        51", 0, False)}
| | F        
| | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
| | | F      = 45 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F      = 360} , self = 47 , parent = Nothing , duration = 0.365151943000 , status
| | | F      = Fail , start = 2025-09-04 08:20:47.518880061 UTC , finish = 2025-09-04
| | | F      08:20:47.884032004 UTC , thread_cap_info = ("ThreadId 62", 2, False)}
| | | F      
| | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
| | | | F    = 45 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F    = 360} , self = 44 , parent = Nothing , duration = 0.292518819000 , status
| | | | F    = Fail , start = 2025-09-04 08:20:47.518892547 UTC , finish = 2025-09-04
| | | | F    08:20:47.811411366 UTC , thread_cap_info = ("ThreadId 64", 2, False)}
| | | | F    
| | | | | F  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | | | F  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | | | F  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | | | F  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | | | F  = Size { num_rules = 45 , num_strict_rules = 45 , num_top_rules = 0 , num_weak_rules
| | | | | F  = 0 , alphabet_size = 9 , total_length = 360} , self = 67 , parent = Nothing
| | | | | F  , duration = 1.499164460000 , status = Fail , start = 2025-09-04 08:20:47.521347821
| | | | | F  UTC , finish = 2025-09-04 08:20:49.020512281 UTC , thread_cap_info = ("ThreadId
| | | | | F  75", 3, False)}
| | | | | F  
F | | | | |  
  | | | F |  
  | | F   |  
  F |     |  
    F     |  
F         |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F         |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F         |  = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
F         |  = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size = 6 , total_length
F         |  = 60} , self = 65 , parent = Nothing , duration = 0.231955759000 , status
F         |  = Fail , start = 2025-09-04 08:20:48.763513753 UTC , finish = 2025-09-04
F         |  08:20:48.995469512 UTC , thread_cap_info = ("ThreadId 103", 0, False)}
F         |  
| F       |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F       |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F       |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F       |  = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| F       |  = 4 , total_length = 36} , self = 68 , parent = Nothing , duration = 0.384311078000
| F       |  , status = Fail , start = 2025-09-04 08:20:48.769597583 UTC , finish =
| F       |  2025-09-04 08:20:49.153908661 UTC , thread_cap_info = ("ThreadId 104",
| F       |  0, False)}
| F       |  
| | F     |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F     |  = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | F     |  = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size = 6 , total_length
| | F     |  = 60} , self = 66 , parent = Nothing , duration = 0.227777852000 , status
| | F     |  = Fail , start = 2025-09-04 08:20:48.781926746 UTC , finish = 2025-09-04
| | F     |  08:20:49.009704598 UTC , thread_cap_info = ("ThreadId 102", 0, False)}
| | F     |  
| | | S   |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | S   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | S   |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | S   |  = 4 , total_length = 36} , self = 71 , parent = Nothing , duration = 0.401729595000
| | | S   |  , status = Success , start = 2025-09-04 08:20:48.787823161 UTC , finish
| | | S   |  = 2025-09-04 08:20:49.189552756 UTC , thread_cap_info = ("ThreadId 105",
| | | S   |  0, False)}
| | | S   |  
F | | |   |  
S | | |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | |   |  = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
S | | |   |  alphabet_size = 6 , total_length = 60} , self = 69 , parent = Nothing ,
S | | |   |  duration = 0.189276066000 , status = Success , start = 2025-09-04 08:20:48.998547993
S | | |   |  UTC , finish = 2025-09-04 08:20:49.187824059 UTC , thread_cap_info = ("ThreadId
S | | |   |  109", 0, False)}
S | | |   |  
| | F |   |  
| |   |   F  
| | E |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | E |      , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| | E |      = 6 , total_length = 60} , self = 72 , parent = Nothing , duration = 0.166393303000
| | E |      , status = Except "AsyncCancelled" , start = 2025-09-04 08:20:49.023194231
| | E |      UTC , finish = 2025-09-04 08:20:49.189587534 UTC , thread_cap_info = ("ThreadId
| | E |      111", 0, False)}
| | E |      
| F | |      
S   | |      
    | S      
    E        
S            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S            = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
S            = 5 , total_length = 48} , self = 88 , parent = Nothing , duration = 0.270595442000
S            , status = Success , start = 2025-09-04 08:20:49.221455886 UTC , finish
S            = 2025-09-04 08:20:49.492051328 UTC , thread_cap_info = ("ThreadId 130",
S            0, False)}
S            
| F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F          = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| F          = 4 , total_length = 36} , self = 87 , parent = Nothing , duration = 0.128535056000
| F          , status = Fail , start = 2025-09-04 08:20:49.229899873 UTC , finish =
| F          2025-09-04 08:20:49.358434929 UTC , thread_cap_info = ("ThreadId 131",
| F          0, False)}
| F          
| | E        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | E        , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | E        = 5 , total_length = 48} , self = 90 , parent = Nothing , duration = 0.247118229000
| | E        , status = Except "AsyncCancelled" , start = 2025-09-04 08:20:49.245181408
| | E        UTC , finish = 2025-09-04 08:20:49.492299637 UTC , thread_cap_info = ("ThreadId
| | E        132", 0, False)}
| | E        
| | | F      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | F      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | F      = 4 , total_length = 36} , self = 98 , parent = Nothing , duration = 0.714323456000
| | | F      , status = Fail , start = 2025-09-04 08:20:49.29247653 UTC , finish = 2025-09-04
| | | F      08:20:50.006799986 UTC , thread_cap_info = ("ThreadId 134", 0, False)}
| | | F      
| F | |      
| F | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| F | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| F | |      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| F | |      = 4 , total_length = 36} , self = 99 , parent = Nothing , duration = 0.641922945000
| F | |      , status = Fail , start = 2025-09-04 08:20:49.413383759 UTC , finish =
| F | |      2025-09-04 08:20:50.055306704 UTC , thread_cap_info = ("ThreadId 136",
| F | |      0, False)}
| F | |      
S | | |      
  | E |      
F |   |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F |   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F |   |      = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
F |   |      = 5 , total_length = 42} , self = 97 , parent = Nothing , duration = 0.464114133000
F |   |      , status = Fail , start = 2025-09-04 08:20:49.542609062 UTC , finish =
F |   |      2025-09-04 08:20:50.006723195 UTC , thread_cap_info = ("ThreadId 147",
F |   |      0, False)}
F |   |      
| | F |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | F |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | F |      = 5 , total_length = 42} , self = 102 , parent = Nothing , duration = 1.642669242000
| | F |      , status = Fail , start = 2025-09-04 08:20:49.551303522 UTC , finish =
| | F |      2025-09-04 08:20:51.193972764 UTC , thread_cap_info = ("ThreadId 148",
| | F |      0, False)}
| | F |      
F | | |      
  | | F      
F | |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F | |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
F | |        , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
F | |        = 5 , total_length = 42} , self = 101 , parent = Nothing , duration = 1.067259310000
F | |        , status = Fail , start = 2025-09-04 08:20:50.010651373 UTC , finish =
F | |        2025-09-04 08:20:51.077910683 UTC , thread_cap_info = ("ThreadId 150",
F | |        0, False)}
F | |        
| | | F      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F      = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | F      = 4 , total_length = 36} , self = 100 , parent = Nothing , duration = 0.519875159000
| | | F      , status = Fail , start = 2025-09-04 08:20:50.03434869 UTC , finish = 2025-09-04
| | | F      08:20:50.554223849 UTC , thread_cap_info = ("ThreadId 151", 0, False)}
| | | F      
| F | |      
| E | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| E | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E | |      , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| E | |      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| E | |      = 4 , total_length = 36} , self = 105 , parent = Nothing , duration = 12.005629755000
| E | |      , status = Except "<<timeout>>" , start = 2025-09-04 08:20:50.108196035
| E | |      UTC , finish = 2025-09-04 08:21:02.11382579 UTC , thread_cap_info = ("ThreadId
| E | |      153", 0, False)}
| E | |      
| | | F      
| | | F      Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
| | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F      = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | F      = 4 , total_length = 36} , self = 104 , parent = Nothing , duration = 7.960630204000
| | | F      , status = Fail , start = 2025-09-04 08:20:50.562648186 UTC , finish =
| | | F      2025-09-04 08:20:58.52327839 UTC , thread_cap_info = ("ThreadId 157", 0,
| | | F      False)}
| | | F      
F | | |      
F | | |      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
F | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | |      = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
F | | |      = 5 , total_length = 42} , self = 103 , parent = Nothing , duration = 0.910963449000
F | | |      , status = Fail , start = 2025-09-04 08:20:51.077937858 UTC , finish =
F | | |      2025-09-04 08:20:51.988901307 UTC , thread_cap_info = ("ThreadId 159",
F | | |      0, False)}
F | | |      
| | F |      
| | E |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | E |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E |      , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | E |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | E |      = 5 , total_length = 42} , self = 106 , parent = Nothing , duration = 12.002765686000
| | E |      , status = Except "<<timeout>>" , start = 2025-09-04 08:20:51.221282398
| | E |      UTC , finish = 2025-09-04 08:21:03.224048084 UTC , thread_cap_info = ("ThreadId
| | E |      161", 0, False)}
| | E |      
F | | |      
F | | |      Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
F | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | |      = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
F | | |      = 5 , total_length = 42} , self = 107 , parent = Nothing , duration = 13.837735896000
F | | |      , status = Fail , start = 2025-09-04 08:20:51.995597296 UTC , finish =
F | | |      2025-09-04 08:21:05.833333192 UTC , thread_cap_info = ("ThreadId 163",
F | | |      0, False)}
F | | |      
| | | F      
| E |        
|   E        
| S          Info { what = "Matrix\n { monotone = Weak\n , domain = Arctic\n , method
| S          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S          , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| S          , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| S          = 5 , total_length = 42} , self = 108 , parent = Nothing , duration = 6.553024144000
| S          , status = Success , start = 2025-09-04 08:21:03.224080117 UTC , finish
| S          = 2025-09-04 08:21:09.777104261 UTC , thread_cap_info = ("ThreadId 171",
| S          0, False)}
| S          
F |          
E |          Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E |          = Direct\n , shape = Cornered\n , bits = 2\n , compress = True\n , remove
E |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E |          , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
E |          , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
E |          = 5 , total_length = 42} , self = 110 , parent = Nothing , duration = 3.944247237000
E |          , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:05.833400193
E |          UTC , finish = 2025-09-04 08:21:09.77764743 UTC , thread_cap_info = ("ThreadId
E |          173", 0, False)}
E |          
| S          
E            
