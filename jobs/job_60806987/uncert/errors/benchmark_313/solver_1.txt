[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 527 length 2597
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
CNF 527 vars 2597 clauses
last 1146 length 6412
CNF 1146 vars 6412 clauses
last 3037 length 17225
CNF 3037 vars 17225 clauses
last 2826 length 17715
CNF 2826 vars 17715 clauses
last 3100 length 17331
CNF 3100 vars 17331 clauses
last 2738 length 17509
CNF 2738 vars 17509 clauses
last 504 length 2386
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5804, clauses: 22926
last 5804 length 22926
CNF 5804 vars 22926 clauses
CNF 504 vars 2386 clauses
last 730 length 3471
CNF 730 vars 3471 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5495, clauses: 21525
last 5495 length 21525
CNF 5495 vars 21525 clauses
last 738 length 3834
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1656, clauses: 6733
last 1656 length 6733
last 1361 length 7184
CNF 738 vars 3834 clauses
CNF 1361 vars 7184 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5495, clauses: 21525, status: Unsatisfied, time: 0.118879374s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12216, clauses: 50857
last 12216 length 50857
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5804, clauses: 22926, status: Unsatisfied, time: 0.192593042s
CNF 12216 vars 50857 clauses
CNF 1656 vars 6733 clauses
last 2113 length 10897
last 1625 length 8104
last 738 length 3834
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2242, clauses: 8935
last 1361 length 7184
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12068, clauses: 50486
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1656, clauses: 6733, status: Unsatisfied, time: 0.37281144s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12216, clauses: 50857, status: Unsatisfied, time: 0.347136745s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17290, clauses: 72053
CNF 2113 vars 10897 clauses
last 13567 length 90820
CNF 1625 vars 8104 clauses
CNF 738 vars 3834 clauses
last 2242 length 8935
last 12068 length 50486
CNF 1361 vars 7184 clauses
last 12644 length 115578
last 17290 length 72053
CNF 2242 vars 8935 clauses
CNF 13567 vars 90820 clauses
CNF 12068 vars 50486 clauses
CNF 17290 vars 72053 clauses
CNF 12644 vars 115578 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2242, clauses: 8935, status: Satisfied, time: 0.376006797s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12068, clauses: 50486, status: Satisfied, time: 0.415994985s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17290, clauses: 72053, status: Satisfied, time: 0.426893819s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 1 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 4 weak rules on 4 letters       weights
SRS with 1 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 3 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, a] -> [] {- Input 0 -}
  [] ->= [a, a, a, a, b, a] {- Input 1 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [ [b, a] , [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 1/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 0 0 \
                | 0 5 1 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 5 1 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 5 7 \
                | 0 0 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[a, a]] ->= [ [a, a] , [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
reason
  no strict rules

**************************************************
skeleton: (1/1,2)\TileAllAll{2}(4/4,4)\Weight(1/3,4)\Matrix{\Natural}{3}(0/3,3)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 1.002290452000
  min duration 0.011020282000
  total durat. 2.618652711000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 13
      , total_length = 328}
    , self = 110
    , parent = Nothing
    , duration = 1.002290452000
    , status = Fail
    , start = 2025-09-04 08:23:30.187609264 UTC
    , finish = 2025-09-04 08:23:31.189899716 UTC
    , thread_cap_info = ("ThreadId 192", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.819571617000
  min duration 0.039675104000
  total durat. 1.915889998000
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.263966959000
  min duration 1.129435183000
  total durat. 2.393402142000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 30}
    , self = 115
    , parent = Nothing
    , duration = 1.129435183000
    , status = Success
    , start = 2025-09-04 08:23:30.157642684 UTC
    , finish = 2025-09-04 08:23:31.287077867 UTC
    , thread_cap_info = ("ThreadId 188", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 2
      , total_length = 28}
    , self = 113
    , parent = Nothing
    , duration = 1.263966959000
    , status = Success
    , start = 2025-09-04 08:23:30.020188294 UTC
    , finish = 2025-09-04 08:23:31.284155253 UTC
    , thread_cap_info = ("ThreadId 164", 2, False)}
Success : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.082531799000
  min duration 1.082531799000
  total durat. 1.082531799000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 30}
    , self = 111
    , parent = Nothing
    , duration = 1.082531799000
    , status = Success
    , start = 2025-09-04 08:23:30.168622697 UTC
    , finish = 2025-09-04 08:23:31.251154496 UTC
    , thread_cap_info = ("ThreadId 190", 0, False)}
**************************************************
F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                    = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
F                    = 21 , num_top_rules = 21 , num_weak_rules = 3 , alphabet_size = 6 , total_length
F                    = 129} , self = 82 , parent = Nothing , duration = 0.182744004000 , status
F                    = Fail , start = 2025-09-04 08:23:29.8075845 UTC , finish = 2025-09-04
F                    08:23:29.990328504 UTC , thread_cap_info = ("ThreadId 99", 0, False)}
F                    
| F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| F                  = 21 , num_top_rules = 21 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| F                  = 129} , self = 78 , parent = Nothing , duration = 0.121417088000 , status
| F                  = Fail , start = 2025-09-04 08:23:29.808911333 UTC , finish = 2025-09-04
| F                  08:23:29.930328421 UTC , thread_cap_info = ("ThreadId 98", 0, False)}
| F                  
| | F                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F                = 24 , num_strict_rules = 21 , num_top_rules = 21 , num_weak_rules = 3
| | F                , alphabet_size = 6 , total_length = 129} , self = 103 , parent = Nothing
| | F                , duration = 0.384289744000 , status = Fail , start = 2025-09-04 08:23:29.883322545
| | F                UTC , finish = 2025-09-04 08:23:30.267612289 UTC , thread_cap_info = ("ThreadId
| | F                140", 1, False)}
| | F                
| | | F              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 24
| | | F              , num_strict_rules = 21 , num_top_rules = 21 , num_weak_rules = 3 , alphabet_size
| | | F              = 6 , total_length = 129} , self = 105 , parent = Nothing , duration =
| | | F              0.913903229000 , status = Fail , start = 2025-09-04 08:23:29.894617036
| | | F              UTC , finish = 2025-09-04 08:23:30.808520265 UTC , thread_cap_info = ("ThreadId
| | | F              147", 1, False)}
| | | F              
| F | |              
| F | |              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | |              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | |              = 24 , num_strict_rules = 21 , num_top_rules = 21 , num_weak_rules = 3
| F | |              , alphabet_size = 6 , total_length = 129} , self = 98 , parent = Nothing
| F | |              , duration = 0.225113559000 , status = Fail , start = 2025-09-04 08:23:29.932486466
| F | |              UTC , finish = 2025-09-04 08:23:30.157600025 UTC , thread_cap_info = ("ThreadId
| F | |              152", 0, False)}
| F | |              
F | | |              
S | | |              Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
S | | |              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
S | | |              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S | | |              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S | | |              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S | | |              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
S | | |              , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
S | | |              = 2 , total_length = 28} , self = 113 , parent = Nothing , duration = 1.263966959000
S | | |              , status = Success , start = 2025-09-04 08:23:30.020188294 UTC , finish
S | | |              = 2025-09-04 08:23:31.284155253 UTC , thread_cap_info = ("ThreadId 164",
S | | |              2, False)}
S | | |              
| | | | F            Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | F            = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | F            , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | | | F            = 2 , total_length = 28} , self = 104 , parent = Nothing , duration = 0.737109430000
| | | | F            , status = Fail , start = 2025-09-04 08:23:30.071327585 UTC , finish =
| | | | F            2025-09-04 08:23:30.808437015 UTC , thread_cap_info = ("ThreadId 169",
| | | | F            2, False)}
| | | | F            
| | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | F          = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | F          = 76} , self = 106 , parent = Nothing , duration = 0.694302815000 , status
| | | | | F          = Fail , start = 2025-09-04 08:23:30.142122797 UTC , finish = 2025-09-04
| | | | | F          08:23:30.836425612 UTC , thread_cap_info = ("ThreadId 181", 2, False)}
| | | | | F          
| | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | F        = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | F        = 76} , self = 108 , parent = Nothing , duration = 0.819571617000 , status
| | | | | | F        = Fail , start = 2025-09-04 08:23:30.147612831 UTC , finish = 2025-09-04
| | | | | | F        08:23:30.967184448 UTC , thread_cap_info = ("ThreadId 183", 2, False)}
| | | | | | F        
| F | | | | |        
| S | | | | |        Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| S | | | | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S | | | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S | | | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | | | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | | | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| S | | | | |        , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| S | | | | |        = 4 , total_length = 30} , self = 115 , parent = Nothing , duration = 1.129435183000
| S | | | | |        , status = Success , start = 2025-09-04 08:23:30.157642684 UTC , finish
| S | | | | |        = 2025-09-04 08:23:31.287077867 UTC , thread_cap_info = ("ThreadId 188",
| S | | | | |        0, False)}
| S | | | | |        
| | | | | | | S      Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | | S      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | S      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | S      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | S      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | S      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | | S      , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | | | | | | S      = 4 , total_length = 30} , self = 111 , parent = Nothing , duration = 1.082531799000
| | | | | | | S      , status = Success , start = 2025-09-04 08:23:30.168622697 UTC , finish
| | | | | | | S      = 2025-09-04 08:23:31.251154496 UTC , thread_cap_info = ("ThreadId 190",
| | | | | | | S      0, False)}
| | | | | | | S      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | | F    = 1 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 13 , total_length
| | | | | | | | F    = 328} , self = 110 , parent = Nothing , duration = 1.002290452000 , status
| | | | | | | | F    = Fail , start = 2025-09-04 08:23:30.187609264 UTC , finish = 2025-09-04
| | | | | | | | F    08:23:31.189899716 UTC , thread_cap_info = ("ThreadId 192", 0, False)}
| | | | | | | | F    
| | F | | | | | |    
| | F | | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | F | | | | | |    = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | F | | | | | |    = 30} , self = 107 , parent = Nothing , duration = 0.591497865000 , status
| | F | | | | | |    = Fail , start = 2025-09-04 08:23:30.267620577 UTC , finish = 2025-09-04
| | F | | | | | |    08:23:30.859118442 UTC , thread_cap_info = ("ThreadId 197", 3, False)}
| | F | | | | | |    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | | F  = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | | F  = 30} , self = 109 , parent = Nothing , duration = 0.731795031000 , status
| | | | | | | | | F  = Fail , start = 2025-09-04 08:23:30.275875468 UTC , finish = 2025-09-04
| | | | | | | | | F  08:23:31.007670499 UTC , thread_cap_info = ("ThreadId 199", 3, False)}
| | | | | | | | | F  
| | | | F | | | | |  
| | | F   | | | | |  
| | | E   | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | E   | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E   | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E   | | | | |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E   | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E   | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | E   | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | | E   | | | | |  = 2 , total_length = 28} , self = 118 , parent = Nothing , duration = 0.480382625000
| | | E   | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:23:30.808530563
| | | E   | | | | |  UTC , finish = 2025-09-04 08:23:31.288913188 UTC , thread_cap_info = ("ThreadId
| | | E   | | | | |  205", 2, False)}
| | | E   | | | | |  
| | | |   F | | | |  
| | F |     | | | |  
| |   |     F | | |  
| |   |       | | F  
| |   |       | F    
| |   |       S      
S |   |              
  S   |              
      E              
