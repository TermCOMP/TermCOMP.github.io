[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 403 length 1966
last 322 length 1558
CNF 403 vars 1966 clauses
CNF 322 vars 1558 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1279, clauses: 5037
last 1279 length 5037
CNF 1279 vars 5037 clauses
last 2182 length 11271
last 1888 length 9094
CNF 2182 vars 11271 clauses
CNF 1888 vars 9094 clauses
last 2424 length 13050
last 1888 length 9094
last 1938 length 12159
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1279, clauses: 5037, status: Unsatisfied, time: 0.11611562s
last 2424 length 13050
last 3489 length 18630
last 3795 length 25553
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9412, clauses: 39171
CNF 2424 vars 13050 clauses
CNF 1888 vars 9094 clauses
CNF 1938 vars 12159 clauses
CNF 2424 vars 13050 clauses
CNF 3489 vars 18630 clauses
last 9412 length 39171
CNF 3795 vars 25553 clauses
last 27006 length 148307
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3267, clauses: 13159
CNF 9412 vars 39171 clauses
last 3267 length 13159
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 24134, clauses: 100636
CNF 27006 vars 148307 clauses
last 24134 length 100636
CNF 3267 vars 13159 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22439, clauses: 94597
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9412, clauses: 39171, status: Unsatisfied, time: 1.177636712s
CNF 24134 vars 100636 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3267, clauses: 13159, status: Unsatisfied, time: 0.439586431s
last 22439 length 94597
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4574, clauses: 18720
last 4574 length 18720
CNF 4574 vars 18720 clauses
CNF 22439 vars 94597 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4574, clauses: 18720, status: Unsatisfied, time: 0.134919116s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22439, clauses: 94597, status: Satisfied, time: 0.270446541s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 1 weak rules on 2 letters       mirror
SRS with 1 strict rules and 1 weak rules on 2 letters       context
SRS with 1 strict rules and 2 weak rules on 2 letters       mirror
SRS with 1 strict rules and 2 weak rules on 2 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 2 weak rules on 2 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, b, a] -> [b] {- Input 0 -}
  [] ->= [a, a, b, b] {- Input 1 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, b, a, b, a] -> [b] {- Mirror (Input 0) -}
  [] ->= [b, b, a, a] {- Mirror (Input 1) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, b, a, b, a] -> [b] {- Mirror (Input 0) -}
  [a] ->= [a, b, b, a, a] {- Mirror (Input 1) -}
  [b] ->= [b, b, b, a, a] {- Mirror (Input 1) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, b, a, b, a] -> [b] {- Input 0 -}
  [a] ->= [a, a, b, b, a] {- Input 1 -}
  [b] ->= [a, a, b, b, b] {- Input 1 -}
reason
  ( a
  , St  / 0A 0A  -  -1A \
        | -  1A  -  -   |
        | -  -1A -  -   |
        \ -  -   2A -   / )
  ( b
  , St  / 0A  - - -  \
        | -   - - 1A |
        | -1A - - -  |
        \ -   - - -  / )
   property Termination
has value Just True
for SRS
  [a] ->= [a, a, b, b, a] {- Input 1 -}
  [b] ->= [a, a, b, b, b] {- Input 1 -}
reason
  no strict rules

**************************************************
skeleton: \Mirror(1/1,2)\Context\Mirror(1/2,2)\Matrix{\ArcticBZ}{4}(0/2,2)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 1.924310970000
  min duration 0.021134826000
  total durat. 4.707848124000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 56}
    , self = 92
    , parent = Nothing
    , duration = 1.175893977000
    , status = Fail
    , start = 2025-09-04 08:23:25.089423196 UTC
    , finish = 2025-09-04 08:23:26.265317173 UTC
    , thread_cap_info = ("ThreadId 149", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 8
      , alphabet_size = 4
      , total_length = 96}
    , self = 95
    , parent = Nothing
    , duration = 1.312280225000
    , status = Fail
    , start = 2025-09-04 08:23:25.111730376 UTC
    , finish = 2025-09-04 08:23:26.424010601 UTC
    , thread_cap_info = ("ThreadId 166", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 80
      , num_strict_rules = 32
      , num_top_rules = 0
      , num_weak_rules = 48
      , alphabet_size = 16
      , total_length = 704}
    , self = 97
    , parent = Nothing
    , duration = 1.924310970000
    , status = Fail
    , start = 2025-09-04 08:23:25.194331492 UTC
    , finish = 2025-09-04 08:23:27.118642462 UTC
    , thread_cap_info = ("ThreadId 176", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.426482432000
  min duration 0.015268919000
  total durat. 4.937987825000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 56}
    , self = 91
    , parent = Nothing
    , duration = 1.005753044000
    , status = Fail
    , start = 2025-09-04 08:23:25.09372415 UTC
    , finish = 2025-09-04 08:23:26.099477194 UTC
    , thread_cap_info = ("ThreadId 152", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 24
      , num_strict_rules = 20
      , num_top_rules = 20
      , num_weak_rules = 4
      , alphabet_size = 8
      , total_length = 104}
    , self = 93
    , parent = Nothing
    , duration = 1.218514894000
    , status = Fail
    , start = 2025-09-04 08:23:25.083853471 UTC
    , finish = 2025-09-04 08:23:26.302368365 UTC
    , thread_cap_info = ("ThreadId 132", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 56}
    , self = 94
    , parent = Nothing
    , duration = 1.271968536000
    , status = Fail
    , start = 2025-09-04 08:23:25.138830174 UTC
    , finish = 2025-09-04 08:23:26.41079871 UTC
    , thread_cap_info = ("ThreadId 155", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 8
      , alphabet_size = 4
      , total_length = 96}
    , self = 96
    , parent = Nothing
    , duration = 1.426482432000
    , status = Fail
    , start = 2025-09-04 08:23:25.11841767 UTC
    , finish = 2025-09-04 08:23:26.544900102 UTC
    , thread_cap_info = ("ThreadId 168", 3, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.063808971000
  min duration 2.063808971000
  total durat. 2.063808971000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 2
      , total_length = 18}
    , self = 98
    , parent = Nothing
    , duration = 2.063808971000
    , status = Fail
    , start = 2025-09-04 08:23:25.093876161 UTC
    , finish = 2025-09-04 08:23:27.157685132 UTC
    , thread_cap_info = ("ThreadId 162", 3, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.692603447000
  min duration 1.692603447000
  total durat. 1.692603447000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 2
      , total_length = 18}
    , self = 101
    , parent = Nothing
    , duration = 1.692603447000
    , status = Success
    , start = 2025-09-04 08:23:25.719542355 UTC
    , finish = 2025-09-04 08:23:27.412145802 UTC
    , thread_cap_info = ("ThreadId 183", 3, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.900054814000
  min duration 0.600601124000
  total durat. 1.500655938000
**************************************************
F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                      = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
F                      = 20 , num_top_rules = 20 , num_weak_rules = 4 , alphabet_size = 8 , total_length
F                      = 104} , self = 88 , parent = Nothing , duration = 0.133435994000 , status
F                      = Fail , start = 2025-09-04 08:23:25.078863071 UTC , finish = 2025-09-04
F                      08:23:25.212299065 UTC , thread_cap_info = ("ThreadId 131", 2, False)}
F                      
| F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| F                    = 20 , num_top_rules = 20 , num_weak_rules = 4 , alphabet_size = 8 , total_length
| F                    = 104} , self = 93 , parent = Nothing , duration = 1.218514894000 , status
| F                    = Fail , start = 2025-09-04 08:23:25.083853471 UTC , finish = 2025-09-04
| F                    08:23:26.302368365 UTC , thread_cap_info = ("ThreadId 132", 0, False)}
| F                    
| | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F                  = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | F                  = 56} , self = 92 , parent = Nothing , duration = 1.175893977000 , status
| | F                  = Fail , start = 2025-09-04 08:23:25.089423196 UTC , finish = 2025-09-04
| | F                  08:23:26.265317173 UTC , thread_cap_info = ("ThreadId 149", 1, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | F                = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | F                = 56} , self = 91 , parent = Nothing , duration = 1.005753044000 , status
| | | F                = Fail , start = 2025-09-04 08:23:25.09372415 UTC , finish = 2025-09-04
| | | F                08:23:26.099477194 UTC , thread_cap_info = ("ThreadId 152", 1, False)}
| | | F                
| | | | F              Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | F              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | F              , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | | | F              = 2 , total_length = 18} , self = 98 , parent = Nothing , duration = 2.063808971000
| | | | F              , status = Fail , start = 2025-09-04 08:23:25.093876161 UTC , finish =
| | | | F              2025-09-04 08:23:27.157685132 UTC , thread_cap_info = ("ThreadId 162",
| | | | F              3, False)}
| | | | F              
| | | | | F            Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | F            = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | F            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | F            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | F            , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | | | | F            = 2 , total_length = 18} , self = 90 , parent = Nothing , duration = 0.600601124000
| | | | | F            , status = Fail , start = 2025-09-04 08:23:25.099596963 UTC , finish =
| | | | | F            2025-09-04 08:23:25.700198087 UTC , thread_cap_info = ("ThreadId 163",
| | | | | F            3, False)}
| | | | | F            
| | | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | F          = 4 , num_top_rules = 0 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | | | | | F          = 96} , self = 95 , parent = Nothing , duration = 1.312280225000 , status
| | | | | | F          = Fail , start = 2025-09-04 08:23:25.111730376 UTC , finish = 2025-09-04
| | | | | | F          08:23:26.424010601 UTC , thread_cap_info = ("ThreadId 166", 3, False)}
| | | | | | F          
| | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | F        = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | F        = 56} , self = 89 , parent = Nothing , duration = 0.140792132000 , status
| | | | | | | F        = Fail , start = 2025-09-04 08:23:25.118415437 UTC , finish = 2025-09-04
| | | | | | | F        08:23:25.259207569 UTC , thread_cap_info = ("ThreadId 153", 0, False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | F      = 4 , num_top_rules = 0 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | | | | | | | F      = 96} , self = 96 , parent = Nothing , duration = 1.426482432000 , status
| | | | | | | | F      = Fail , start = 2025-09-04 08:23:25.11841767 UTC , finish = 2025-09-04
| | | | | | | | F      08:23:26.544900102 UTC , thread_cap_info = ("ThreadId 168", 3, False)}
| | | | | | | | F      
| | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | F    = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | | | F    = 56} , self = 94 , parent = Nothing , duration = 1.271968536000 , status
| | | | | | | | | F    = Fail , start = 2025-09-04 08:23:25.138830174 UTC , finish = 2025-09-04
| | | | | | | | | F    08:23:26.41079871 UTC , thread_cap_info = ("ThreadId 155", 0, False)}
| | | | | | | | | F    
| | | | | | | | | | F  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 80 , num_strict_rules
| | | | | | | | | | F  = 32 , num_top_rules = 0 , num_weak_rules = 48 , alphabet_size = 16 , total_length
| | | | | | | | | | F  = 704} , self = 97 , parent = Nothing , duration = 1.924310970000 , status
| | | | | | | | | | F  = Fail , start = 2025-09-04 08:23:25.194331492 UTC , finish = 2025-09-04
| | | | | | | | | | F  08:23:27.118642462 UTC , thread_cap_info = ("ThreadId 176", 1, False)}
| | | | | | | | | | F  
F | | | | | | | | | |  
  | | | | | | F | | |  
  | | | | F |   | | |  
S | | | |   |   | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
S | | | |   |   | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
S | | | |   |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S | | | |   |   | | |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S | | | |   |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S | | | |   |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
S | | | |   |   | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
S | | | |   |   | | |  = 2 , total_length = 18} , self = 101 , parent = Nothing , duration = 1.692603447000
S | | | |   |   | | |  , status = Success , start = 2025-09-04 08:23:25.719542355 UTC , finish
S | | | |   |   | | |  = 2025-09-04 08:23:27.412145802 UTC , thread_cap_info = ("ThreadId 183",
S | | | |   |   | | |  3, False)}
S | | | |   |   | | |  
| | | F |   |   | | |  
| | F   |   |   | | |  
| F     |   |   | | |  
| F     |   |   | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| F     |   |   | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F     |   |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F     |   |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F     |   |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F     |   |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| F     |   |   | | |  , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| F     |   |   | | |  = 4 , total_length = 56} , self = 99 , parent = Nothing , duration = 0.900054814000
| F     |   |   | | |  , status = Fail , start = 2025-09-04 08:23:26.318438382 UTC , finish =
| F     |   |   | | |  2025-09-04 08:23:27.218493196 UTC , thread_cap_info = ("ThreadId 188",
| F     |   |   | | |  1, False)}
| F     |   |   | | |  
| |     |   |   | F |  
| |     |   F   |   |  
| |     |       F   |  
| |     |           F  
| |     F              
| | F                  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | F                  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F                  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | F                  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | F                  = 2 , total_length = 18} , self = 100 , parent = Nothing , duration = 0.224664692000
| | F                  , status = Fail , start = 2025-09-04 08:23:27.15771496 UTC , finish = 2025-09-04
| | F                  08:23:27.382379652 UTC , thread_cap_info = ("ThreadId 195", 3, False)}
| | F                  
| F |                  
|   F                  
S                      
