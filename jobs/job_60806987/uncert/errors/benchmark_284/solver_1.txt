last 12286 length 52847
last 10898 length 46181
CNF 12286 vars 52847 clauses
CNF 10898 vars 46181 clauses
last 861 length 3485
CNF 861 vars 3485 clauses
last 887 length 3519
last 969 length 3967
CNF 887 vars 3519 clauses
last 1027 length 4123
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2660, clauses: 9570
CNF 969 vars 3967 clauses
last 12484 length 54329
last 13262 length 56975
last 13060 length 56279
last 12574 length 53479
CNF 1027 vars 4123 clauses
last 2660 length 9570
CNF 13262 vars 56975 clauses
CNF 12484 vars 54329 clauses
CNF 13060 vars 56279 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3045, clauses: 11000
CNF 12574 vars 53479 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10468, clauses: 43865
CNF 2660 vars 9570 clauses
last 3045 length 11000
last 10468 length 43865
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11133, clauses: 46599
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2660, clauses: 9570, status: Unsatisfied, time: 0.56261724s
CNF 3045 vars 11000 clauses
CNF 10468 vars 43865 clauses
last 11133 length 46599
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19888, clauses: 75100
last 19888 length 75100
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3045, clauses: 11000, status: Satisfied, time: 1.10786538s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18633, clauses: 69779
CNF 19888 vars 75100 clauses
CNF 11133 vars 46599 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6346, clauses: 25902
last 18633 length 69779
last 6346 length 25902
**************************************************
summary
**************************************************
SRS with 2 strict rules and 4 weak rules on 3 letters       strictify
SRS with 6 rules on 3 letters       mirror
SRS with 6 rules on 3 letters       DP
SRS with 9 strict rules and 6 weak rules on 5 letters       weights
SRS with 2 strict rules and 6 weak rules on 5 letters       EDG
SRS with 2 strict rules and 6 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 6 weak rules on 5 letters       weights
SRS with 0 strict rules and 6 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [c, c, a] -> [a, a, c] {- Input 0 -}
  [b, b, a] -> [b, b, b] {- Input 1 -}
  [b, c, b] ->= [c, b, c] {- Input 2 -}
  [b, a, a] ->= [c, a, c] {- Input 3 -}
  [c, a, a] ->= [a, a, c] {- Input 4 -}
  [c, c, b] ->= [c, b, a] {- Input 5 -}
reason
  strictify
   property Termination
has value Just True
for SRS
  [c, c, a] -> [a, a, c] {- Input 0 -}
  [b, b, a] -> [b, b, b] {- Input 1 -}
  [b, c, b] -> [c, b, c] {- Strictified (Input 2) -}
  [b, a, a] -> [c, a, c] {- Strictified (Input 3) -}
  [c, a, a] -> [a, a, c] {- Strictified (Input 4) -}
  [c, c, b] -> [c, b, a] {- Strictified (Input 5) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, c, c] -> [c, a, a] {- Mirror (Input 0) -}
  [a, b, b] -> [b, b, b] {- Mirror (Input 1) -}
  [b, c, b] -> [c, b, c] {- Mirror (Strictified (Input 2)) -}
  [a, a, b] -> [c, a, c] {- Mirror (Strictified (Input 3)) -}
  [a, a, c] -> [c, a, a] {- Mirror (Strictified (Input 4)) -}
  [b, c, c] -> [a, b, c] {- Mirror (Strictified (Input 5)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, c, c] ->= [c, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b, b] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c, b] ->= [c, b, c] {- DP Nontop (Mirror (Strictified (Input 2))) -}
  [a, a, b] ->= [c, a, c] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, a, c] ->= [c, a, a] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [b, c, c] ->= [a, b, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a#, a, b] |-> [a#, c] {- DP (Top 1) (Mirror (Strictified (Input 3))) -}
  [a#, a, c] |-> [a#] {- DP (Top 2) (Mirror (Strictified (Input 4))) -}
  [a#, a, c] |-> [a#, a] {- DP (Top 1) (Mirror (Strictified (Input 4))) -}
  [a#, b, b] |-> [b#, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [a#, c, c] |-> [a#] {- DP (Top 2) (Mirror (Input 0)) -}
  [a#, c, c] |-> [a#, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, c, b] |-> [b#, c] {- DP (Top 1) (Mirror (Strictified (Input 2))) -}
  [b#, c, c] |-> [a#, b, c] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [b#, c, c] |-> [b#, c] {- DP (Top 1) (Mirror (Strictified (Input 5))) -}
reason
  (a, 1/1)
  (b, 1/1)
  (c, 1/1)
  (a#, 0/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a, c, c] ->= [c, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b, b] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c, b] ->= [c, b, c] {- DP Nontop (Mirror (Strictified (Input 2))) -}
  [a, a, b] ->= [c, a, c] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, a, c] ->= [c, a, a] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [b, c, c] ->= [a, b, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a#, b, b] |-> [b#, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, c, c] |-> [a#, b, c] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, b] |-> [b#, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, c, c] |-> [a#, b, c] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [a, c, c] ->= [c, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b, b] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c, b] ->= [c, b, c] {- DP Nontop (Mirror (Strictified (Input 2))) -}
  [a, a, b] ->= [c, a, c] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, a, c] ->= [c, a, a] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [b, c, c] ->= [a, b, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  ( a
  , Wk  / 6A 6A 9A - \
        | 6A 6A 9A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 6A 6A 6A - \
        | 6A 6A 6A - |
        | 3A 6A 6A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 6A 6A 9A - \
        | 3A 3A 6A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 2A 2A 4A - \
        | 2A 2A 4A - |
        | 2A 2A 4A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 4A 4A 4A - \
        | 4A 4A 4A - |
        | 4A 4A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a#, b, b] |-> [b#, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [a, c, c] ->= [c, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b, b] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c, b] ->= [c, b, c] {- DP Nontop (Mirror (Strictified (Input 2))) -}
  [a, a, b] ->= [c, a, c] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, a, c] ->= [c, a, a] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [b, c, c] ->= [a, b, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [a, c, c] ->= [c, a, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, b, b] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, c, b] ->= [c, b, c] {- DP Nontop (Mirror (Strictified (Input 2))) -}
  [a, a, b] ->= [c, a, c] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, a, c] ->= [c, a, a] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [b, c, c] ->= [a, b, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  EDG

**************************************************
skeleton: (2/4,3)\Strictify\Mirror(6,3)\Deepee(9/6,5)\Weight\EDG(2/6,5)\Matrix{\Arctic}{3}(1/6,5)\Weight(0/6,3)\EDG[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 18633 vars 69779 clauses

Fail : CNF 6346 vars 25902 clauses
"KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.941464562000
  min duration 0.042038910000
  total durat. 2.449245229000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.023777436000
  min duration 0.240719217000
  total durat. 3.039613211000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 57
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 54
      , alphabet_size = 10
      , total_length = 456}
    , self = 115
    , parent = Nothing
    , duration = 1.023777436000
    , status = Fail
    , start = 2025-09-04 08:23:51.265200209 UTC
    , finish = 2025-09-04 08:23:52.288977645 UTC
    , thread_cap_info = ("ThreadId 159", 3, False)}
Fail : "Matchbound\n { method = RFC\n , implementation = Exact\n , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 6
  max duration 0.378780773000
  min duration 0.016047829000
  total durat. 1.128164212000
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.443779886000
  min duration 1.443779886000
  total durat. 1.443779886000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 6
      , alphabet_size = 5
      , total_length = 48}
    , self = 119
    , parent = Nothing
    , duration = 1.443779886000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:23:52.088680197 UTC
    , finish = 2025-09-04 08:23:53.532460083 UTC
    , thread_cap_info = ("ThreadId 184", 3, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.581891019000
  min duration 1.581891019000
  total durat. 1.581891019000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 6
      , alphabet_size = 5
      , total_length = 48}
    , self = 117
    , parent = Nothing
    , duration = 1.581891019000
    , status = Success
    , start = 2025-09-04 08:23:51.825295969 UTC
    , finish = 2025-09-04 08:23:53.407186988 UTC
    , thread_cap_info = ("ThreadId 180", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.219630386000
  min duration 1.219630386000
  total durat. 1.219630386000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 42}
    , self = 116
    , parent = Nothing
    , duration = 1.219630386000
    , status = Fail
    , start = 2025-09-04 08:23:51.565876298 UTC
    , finish = 2025-09-04 08:23:52.785506684 UTC
    , thread_cap_info = ("ThreadId 174", 3, False)}
**************************************************
F                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                = False}" , input_size = Size { num_rules = 6 , num_strict_rules = 6 ,
F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                = 36} , self = 59 , parent = Nothing , duration = 0.113221908000 , status
F                = Fail , start = 2025-09-04 08:23:50.585403573 UTC , finish = 2025-09-04
F                08:23:50.698625481 UTC , thread_cap_info = ("ThreadId 67", 3, False)}
F                
| F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| F              = 54 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F              = 432} , self = 74 , parent = Nothing , duration = 0.262852895000 , status
| F              = Fail , start = 2025-09-04 08:23:50.605417777 UTC , finish = 2025-09-04
| F              08:23:50.868270672 UTC , thread_cap_info = ("ThreadId 96", 2, False)}
| F              
| | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| | F            = 54 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F            = 432} , self = 73 , parent = Nothing , duration = 0.240719217000 , status
| | F            = Fail , start = 2025-09-04 08:23:50.625190804 UTC , finish = 2025-09-04
| | F            08:23:50.865910021 UTC , thread_cap_info = ("ThreadId 98", 2, False)}
| | F            
F | |            
F | |            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
F | |            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
F | |            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
F | |            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
F | |            = Size { num_rules = 6 , num_strict_rules = 6 , num_top_rules = 0 , num_weak_rules
F | |            = 0 , alphabet_size = 3 , total_length = 36} , self = 89 , parent = Nothing
F | |            , duration = 0.378780773000 , status = Fail , start = 2025-09-04 08:23:50.865758493
F | |            UTC , finish = 2025-09-04 08:23:51.244539266 UTC , thread_cap_info = ("ThreadId
F | |            127", 2, False)}
F | |            
| | F            
| F              
| F              Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| F              , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| F              = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| F              False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| F              = Size { num_rules = 54 , num_strict_rules = 54 , num_top_rules = 0 , num_weak_rules
| F              = 0 , alphabet_size = 9 , total_length = 432} , self = 80 , parent = Nothing
| F              , duration = 0.337025119000 , status = Fail , start = 2025-09-04 08:23:50.885940207
| F              UTC , finish = 2025-09-04 08:23:51.222965326 UTC , thread_cap_info = ("ThreadId
| F              135", 3, False)}
| F              
| | F            Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | F            , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | F            = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | F            False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | F            = Size { num_rules = 54 , num_strict_rules = 54 , num_top_rules = 0 , num_weak_rules
| | F            = 0 , alphabet_size = 9 , total_length = 432} , self = 79 , parent = Nothing
| | F            , duration = 0.321621041000 , status = Fail , start = 2025-09-04 08:23:50.885945309
| | F            UTC , finish = 2025-09-04 08:23:51.20756635 UTC , thread_cap_info = ("ThreadId
| | F            137", 3, False)}
| | F            
| | F            
| F              
F                
F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                = False\n , verbose = False}" , input_size = Size { num_rules = 57 , num_strict_rules
F                = 3 , num_top_rules = 3 , num_weak_rules = 54 , alphabet_size = 10 , total_length
F                = 456} , self = 113 , parent = Nothing , duration = 0.941464562000 , status
F                = Fail , start = 2025-09-04 08:23:51.24693372 UTC , finish = 2025-09-04
F                08:23:52.188398282 UTC , thread_cap_info = ("ThreadId 158", 3, False)}
F                
| F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| F              = 6 , num_top_rules = 6 , num_weak_rules = 54 , alphabet_size = 11 , total_length
| F              = 480} , self = 114 , parent = Nothing , duration = 0.957494335000 , status
| F              = Fail , start = 2025-09-04 08:23:51.251000862 UTC , finish = 2025-09-04
| F              08:23:52.208495197 UTC , thread_cap_info = ("ThreadId 164", 2, False)}
| F              
| | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | F            = 6 , num_top_rules = 6 , num_weak_rules = 54 , alphabet_size = 11 , total_length
| | F            = 480} , self = 112 , parent = Nothing , duration = 0.882850283000 , status
| | F            = Fail , start = 2025-09-04 08:23:51.265190063 UTC , finish = 2025-09-04
| | F            08:23:52.148040346 UTC , thread_cap_info = ("ThreadId 163", 2, False)}
| | F            
| | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 57 , num_strict_rules
| | | F          = 3 , num_top_rules = 3 , num_weak_rules = 54 , alphabet_size = 10 , total_length
| | | F          = 456} , self = 115 , parent = Nothing , duration = 1.023777436000 , status
| | | F          = Fail , start = 2025-09-04 08:23:51.265200209 UTC , finish = 2025-09-04
| | | F          08:23:52.288977645 UTC , thread_cap_info = ("ThreadId 159", 3, False)}
| | | F          
| | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | F        = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | F        = 42} , self = 109 , parent = Nothing , duration = 0.257176079000 , status
| | | | F        = Fail , start = 2025-09-04 08:23:51.488082772 UTC , finish = 2025-09-04
| | | | F        08:23:51.745258851 UTC , thread_cap_info = ("ThreadId 168", 3, False)}
| | | | F        
| | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size = 5 , total_length
| | | | | F      = 48} , self = 110 , parent = Nothing , duration = 0.320038579000 , status
| | | | | F      = Fail , start = 2025-09-04 08:23:51.50521478 UTC , finish = 2025-09-04
| | | | | F      08:23:51.825253359 UTC , thread_cap_info = ("ThreadId 171", 3, False)}
| | | | | F      
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size = 5 , total_length
| | | | | | F    = 48} , self = 111 , parent = Nothing , duration = 0.560446144000 , status
| | | | | | F    = Fail , start = 2025-09-04 08:23:51.525219465 UTC , finish = 2025-09-04
| | | | | | F    08:23:52.085665609 UTC , thread_cap_info = ("ThreadId 173", 3, False)}
| | | | | | F    
| | | | | | | F  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F  = 7 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| | | | | | | F  = 4 , total_length = 42} , self = 116 , parent = Nothing , duration = 1.219630386000
| | | | | | | F  , status = Fail , start = 2025-09-04 08:23:51.565876298 UTC , finish =
| | | | | | | F  2025-09-04 08:23:52.785506684 UTC , thread_cap_info = ("ThreadId 174",
| | | | | | | F  3, False)}
| | | | | | | F  
| | | | F | | |  
| | | |   F | |  
| | | | S   | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S   | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S   | |  = 8 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size
| | | | S   | |  = 5 , total_length = 48} , self = 117 , parent = Nothing , duration = 1.581891019000
| | | | S   | |  , status = Success , start = 2025-09-04 08:23:51.825295969 UTC , finish
| | | | S   | |  = 2025-09-04 08:23:53.407186988 UTC , thread_cap_info = ("ThreadId 180",
| | | | S   | |  3, False)}
| | | | S   | |  
| | | | |   F |  
| | | | | E   |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | E   |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size
| | | | | E   |  = 5 , total_length = 48} , self = 119 , parent = Nothing , duration = 1.443779886000
| | | | | E   |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:23:52.088680197
| | | | | E   |  UTC , finish = 2025-09-04 08:23:53.532460083 UTC , thread_cap_info = ("ThreadId
| | | | | E   |  184", 3, False)}
| | | | | E   |  
| | F | | |   |  
F |   | | |   |  
  F   | | |   |  
      F | |   |  
        | |   F  
        S |      
          E      
