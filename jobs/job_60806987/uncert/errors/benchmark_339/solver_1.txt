[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 858 length 3679
last 966 length 4203
CNF 858 vars 3679 clauses
last 577 length 2608
CNF 577 vars 2608 clauses
last 581 length 2618
CNF 581 vars 2618 clauses
last 577 length 2608
last 581 length 2618
CNF 577 vars 2608 clauses
CNF 581 vars 2618 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2880, clauses: 10697
last 2880 length 10697
CNF 2880 vars 10697 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2880, clauses: 10697, status: Unsatisfied, time: 0.040416924s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2880, clauses: 10697
last 2880 length 10697
CNF 2880 vars 10697 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6299, clauses: 26112
last 6299 length 26112
CNF 6299 vars 26112 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2880, clauses: 10697, status: Unsatisfied, time: 0.044249338s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6299, clauses: 26112
last 6299 length 26112
CNF 6299 vars 26112 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4180, clauses: 17002
last 4180 length 17002
CNF 4180 vars 17002 clauses
last 1056 length 4431
CNF 1056 vars 4431 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6299, clauses: 26112, status: Unsatisfied, time: 0.074884877s
last 1200 length 5111
CNF 1200 vars 5111 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6299, clauses: 26112, status: Unsatisfied, time: 0.08243097s
last 316 length 1315
last 354 length 1501
CNF 316 vars 1315 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4180, clauses: 17002, status: Unsatisfied, time: 0.108261286s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4066, clauses: 16112
CNF 354 vars 1501 clauses
last 1056 length 4431
last 1200 length 5111
last 2921 length 12427
last 2524 length 11253
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 28458, clauses: 118896
last 4066 length 16112
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12204, clauses: 50830
CNF 1056 vars 4431 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1734, clauses: 6702
CNF 1200 vars 5111 clauses
CNF 2921 vars 12427 clauses
CNF 2524 vars 11253 clauses
last 28458 length 118896
CNF 4066 vars 16112 clauses
last 12204 length 50830
last 1734 length 6702
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4066, clauses: 16112, status: Unsatisfied, time: 0.743559667s
CNF 12204 vars 50830 clauses
CNF 1734 vars 6702 clauses
CNF 28458 vars 118896 clauses
last 39638 length 172315
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12204, clauses: 50830, status: Satisfied, time: 0.746364961s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1734, clauses: 6702, status: Unsatisfied, time: 0.626359651s
CNF 39638 vars 172315 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 28458, clauses: 118896, status: Satisfied, time: 0.943511331s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 2 letters       mirror
SRS with 1 strict rules and 2 weak rules on 2 letters       context
SRS with 2 strict rules and 3 weak rules on 2 letters       mirror
SRS with 2 strict rules and 3 weak rules on 2 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 3 weak rules on 2 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a] -> [] {- Input 0 -}
  [] ->= [b, a, b] {- Input 1 -}
  [b, a, a, b] ->= [a] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [] {- Mirror (Input 0) -}
  [] ->= [b, a, b] {- Mirror (Input 1) -}
  [b, a, a, b] ->= [a] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a, a] -> [a] {- Mirror (Input 0) -}
  [b, a, a] -> [b] {- Mirror (Input 0) -}
  [a] ->= [a, b, a, b] {- Mirror (Input 1) -}
  [b] ->= [b, b, a, b] {- Mirror (Input 1) -}
  [b, a, a, b] ->= [a] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a, a] -> [a] {- Input 0 -}
  [a, a, b] -> [b] {- Input 0 -}
  [a] ->= [b, a, b, a] {- Input 1 -}
  [b] ->= [b, a, b, b] {- Input 1 -}
  [b, a, a, b] ->= [a] {- Input 2 -}
reason
  ( a
  , St  / 0A -2A 0A \
        | -  -   0A |
        \ 1A -   0A / )
  ( b
  , St  / 0A 0A -1A \
        | -  0A -   |
        \ -  0A -   / )
   property Termination
has value Just True
for SRS
  [a] ->= [b, a, b, a] {- Input 1 -}
  [b] ->= [b, a, b, b] {- Input 1 -}
  [b, a, a, b] ->= [a] {- Input 2 -}
reason
  no strict rules

**************************************************
skeleton: \Mirror(1/2,2)\Context\Mirror(2/3,2)\Matrix{\ArcticBZ}{3}(0/3,2)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.999955564000
  min duration 0.015397443000
  total durat. 2.401004446000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.962021845000
  min duration 0.008999568000
  total durat. 2.445647894000
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.897439568000
  min duration 1.403661948000
  total durat. 3.301101516000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 3
      , alphabet_size = 2
      , total_length = 23}
    , self = 103
    , parent = Nothing
    , duration = 1.403661948000
    , status = Success
    , start = 2025-09-04 08:25:36.344609939 UTC
    , finish = 2025-09-04 08:25:37.748271887 UTC
    , thread_cap_info = ("ThreadId 180", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 8
      , alphabet_size = 4
      , total_length = 64}
    , self = 108
    , parent = Nothing
    , duration = 1.897439568000
    , status = Success
    , start = 2025-09-04 08:25:35.956777856 UTC
    , finish = 2025-09-04 08:25:37.854217424 UTC
    , thread_cap_info = ("ThreadId 147", 3, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.540163335000
  min duration 1.540163335000
  total durat. 1.540163335000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 8
      , alphabet_size = 4
      , total_length = 64}
    , self = 102
    , parent = Nothing
    , duration = 1.540163335000
    , status = Fail
    , start = 2025-09-04 08:25:36.024498543 UTC
    , finish = 2025-09-04 08:25:37.564661878 UTC
    , thread_cap_info = ("ThreadId 166", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.259075922000
  min duration 1.259075922000
  total durat. 1.259075922000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 3
      , alphabet_size = 2
      , total_length = 23}
    , self = 105
    , parent = Nothing
    , duration = 1.259075922000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:25:36.525443228 UTC
    , finish = 2025-09-04 08:25:37.78451915 UTC
    , thread_cap_info = ("ThreadId 181", 1, False)}
**************************************************
F                  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
F                  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
F                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
F                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
F                  , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 3 , alphabet_size
F                  = 4 , total_length = 48} , self = 81 , parent = Nothing , duration = 0.179630153000
F                  , status = Fail , start = 2025-09-04 08:25:35.777121251 UTC , finish =
F                  2025-09-04 08:25:35.956751404 UTC , thread_cap_info = ("ThreadId 114",
F                  0, False)}
F                  
| F                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F                = 12 , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 3 ,
| F                alphabet_size = 4 , total_length = 48} , self = 72 , parent = Nothing ,
| F                duration = 0.111200058000 , status = Fail , start = 2025-09-04 08:25:35.793335397
| F                UTC , finish = 2025-09-04 08:25:35.904535455 UTC , thread_cap_info = ("ThreadId
| F                117", 3, False)}
| F                
| | F              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | F              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | F              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | F              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | F              , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 3 , alphabet_size
| | F              = 4 , total_length = 48} , self = 86 , parent = Nothing , duration = 0.184073588000
| | F              , status = Fail , start = 2025-09-04 08:25:35.806336204 UTC , finish =
| | F              2025-09-04 08:25:35.990409792 UTC , thread_cap_info = ("ThreadId 118",
| | F              3, False)}
| | F              
| | | F            Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | | F            = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | F            , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 3 , alphabet_size
| | | F            = 4 , total_length = 48} , self = 96 , parent = Nothing , duration = 0.524174513000
| | | F            , status = Fail , start = 2025-09-04 08:25:35.860306892 UTC , finish =
| | | F            2025-09-04 08:25:36.384481405 UTC , thread_cap_info = ("ThreadId 127",
| | | F            0, False)}
| | | F            
| F | |            
F   | |            
S   | |            Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
S   | |            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
S   | |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S   | |            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S   | |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S   | |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
S   | |            , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules = 8 , alphabet_size
S   | |            = 4 , total_length = 64} , self = 108 , parent = Nothing , duration = 1.897439568000
S   | |            , status = Success , start = 2025-09-04 08:25:35.956777856 UTC , finish
S   | |            = 2025-09-04 08:25:37.854217424 UTC , thread_cap_info = ("ThreadId 147",
S   | |            3, False)}
S   | |            
|   F |            
| F   |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   |            = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| F   |            = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 2 , total_length
| F   |            = 23} , self = 95 , parent = Nothing , duration = 0.313622334000 , status
| F   |            = Fail , start = 2025-09-04 08:25:36.013149652 UTC , finish = 2025-09-04
| F   |            08:25:36.326771986 UTC , thread_cap_info = ("ThreadId 161", 1, False)}
| F   |            
| | F |            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |            = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | F |            = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 2 , total_length
| | F |            = 23} , self = 97 , parent = Nothing , duration = 0.509060597000 , status
| | F |            = Fail , start = 2025-09-04 08:25:36.016326538 UTC , finish = 2025-09-04
| | F |            08:25:36.525387135 UTC , thread_cap_info = ("ThreadId 162", 1, False)}
| | F |            
| | | | F          Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | F          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | | F          , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules = 8 , alphabet_size
| | | | F          = 4 , total_length = 64} , self = 102 , parent = Nothing , duration = 1.540163335000
| | | | F          , status = Fail , start = 2025-09-04 08:25:36.024498543 UTC , finish =
| | | | F          2025-09-04 08:25:37.564661878 UTC , thread_cap_info = ("ThreadId 166",
| | | | F          3, False)}
| | | | F          
| | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | F        = 4 , num_top_rules = 0 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | | | | F        = 64} , self = 99 , parent = Nothing , duration = 0.999955564000 , status
| | | | | F        = Fail , start = 2025-09-04 08:25:36.064572535 UTC , finish = 2025-09-04
| | | | | F        08:25:37.064528099 UTC , thread_cap_info = ("ThreadId 169", 1, False)}
| | | | | F        
| | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | F      = 4 , num_top_rules = 0 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | | | | | F      = 64} , self = 98 , parent = Nothing , duration = 0.921148519000 , status
| | | | | | F      = Fail , start = 2025-09-04 08:25:36.064581344 UTC , finish = 2025-09-04
| | | | | | F      08:25:36.985729863 UTC , thread_cap_info = ("ThreadId 171", 1, False)}
| | | | | | F      
| | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | | | | F    = 8 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 4 , total_length
| | | | | | | F    = 132} , self = 100 , parent = Nothing , duration = 0.965172680000 , status
| | | | | | | F    = Fail , start = 2025-09-04 08:25:36.164500886 UTC , finish = 2025-09-04
| | | | | | | F    08:25:37.129673566 UTC , thread_cap_info = ("ThreadId 176", 1, False)}
| | | | | | | F    
| | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | | | | | F  = 8 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 4 , total_length
| | | | | | | | F  = 132} , self = 101 , parent = Nothing , duration = 0.962021845000 , status
| | | | | | | | F  = Fail , start = 2025-09-04 08:25:36.18462196 UTC , finish = 2025-09-04
| | | | | | | | F  08:25:37.146643805 UTC , thread_cap_info = ("ThreadId 178", 1, False)}
| | | | | | | | F  
| F | | | | | | |  
| S | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| S | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| S | | | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| S | | | | | | |  = 2 , total_length = 23} , self = 103 , parent = Nothing , duration = 1.403661948000
| S | | | | | | |  , status = Success , start = 2025-09-04 08:25:36.344609939 UTC , finish
| S | | | | | | |  = 2025-09-04 08:25:37.748271887 UTC , thread_cap_info = ("ThreadId 180",
| S | | | | | | |  1, False)}
| S | | | | | | |  
| | | F | | | | |  
| | F   | | | | |  
| | E   | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | E   | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | E   | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | E   | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E   | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E   | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | E   | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | E   | | | | |  = 2 , total_length = 23} , self = 105 , parent = Nothing , duration = 1.259075922000
| | E   | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:25:36.525443228
| | E   | | | | |  UTC , finish = 2025-09-04 08:25:37.78451915 UTC , thread_cap_info = ("ThreadId
| | E   | | | | |  181", 1, False)}
| | E   | | | | |  
| | |   | | F | |  
| | |   | F   | |  
| | |   |     F |  
| | |   |       F  
| | |   F          
| S |              
|   E              
S                  
