[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 414 length 1699
CNF 414 vars 1699 clauses
last 358 length 1555
last 446 length 1827
last 358 length 1555
last 332 length 1423
CNF 358 vars 1555 clauses
CNF 358 vars 1555 clauses
last 796 length 3371
CNF 332 vars 1423 clauses
last 332 length 1423
CNF 796 vars 3371 clauses
CNF 332 vars 1423 clauses
last 796 length 3371
last 788 length 3361
CNF 796 vars 3371 clauses
last 841 length 3409
CNF 841 vars 3409 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2265, clauses: 8144
last 2265 length 8144
last 788 length 3361
CNF 2265 vars 8144 clauses
CNF 788 vars 3361 clauses
last 1000 length 4049
CNF 788 vars 3361 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2265, clauses: 8144, status: Unsatisfied, time: 0.177803734s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4737, clauses: 17228
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4737, clauses: 17228
CNF 1000 vars 4049 clauses
last 306 length 1262
last 311 length 1253
last 841 length 3409
last 4698 length 19493
last 4737 length 17228
last 4466 length 19135
last 4737 length 17228
last 1000 length 4049
CNF 306 vars 1262 clauses
CNF 311 vars 1253 clauses
CNF 841 vars 3409 clauses
CNF 4737 vars 17228 clauses
CNF 4698 vars 19493 clauses
CNF 4466 vars 19135 clauses
CNF 4737 vars 17228 clauses
CNF 1000 vars 4049 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1943, clauses: 7278
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4737, clauses: 17228, status: Unsatisfied, time: 1.505083858s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4737, clauses: 17228, status: Unsatisfied, time: 2.247015214s
last 1943 length 7278
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12567, clauses: 51938
CNF 1943 vars 7278 clauses
last 12567 length 51938
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1943, clauses: 7278, status: Unsatisfied, time: 0.342040969s
CNF 12567 vars 51938 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4716, clauses: 17634
last 4716 length 17634
CNF 4716 vars 17634 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12567, clauses: 51938, status: Satisfied, time: 0.791234299s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4716, clauses: 17634, status: Unsatisfied, time: 0.479643284s
**************************************************
summary
**************************************************
SRS with 2 strict rules and 2 weak rules on 3 letters       weights
SRS with 1 strict rules and 2 weak rules on 3 letters       mirror
SRS with 1 strict rules and 2 weak rules on 3 letters       context
SRS with 1 strict rules and 6 weak rules on 3 letters       mirror
SRS with 1 strict rules and 6 weak rules on 3 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [a, c] -> [a] {- Input 1 -}
  [] ->= [b, c] {- Input 2 -}
  [c, b] ->= [] {- Input 3 -}
reason
  (a, 1/1)
  (b, 0/1)
  (c, 0/1)
   property Termination
has value Just True
for SRS
  [a, c] -> [a] {- Input 1 -}
  [] ->= [b, c] {- Input 2 -}
  [c, b] ->= [] {- Input 3 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [c, a] -> [a] {- Mirror (Input 1) -}
  [] ->= [c, b] {- Mirror (Input 2) -}
  [b, c] ->= [] {- Mirror (Input 3) -}
reason
  context
   property Termination
has value Just True
for SRS
  [c, a] -> [a] {- Mirror (Input 1) -}
  [a] ->= [a, c, b] {- Mirror (Input 2) -}
  [b] ->= [b, c, b] {- Mirror (Input 2) -}
  [c] ->= [c, c, b] {- Mirror (Input 2) -}
  [a, b, c] ->= [a] {- Mirror (Input 3) -}
  [b, b, c] ->= [b] {- Mirror (Input 3) -}
  [c, b, c] ->= [c] {- Mirror (Input 3) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, c] -> [a] {- Input 1 -}
  [a] ->= [b, c, a] {- Input 2 -}
  [b] ->= [b, c, b] {- Input 2 -}
  [c] ->= [b, c, c] {- Input 2 -}
  [c, b, a] ->= [a] {- Input 3 -}
  [c, b, b] ->= [b] {- Input 3 -}
  [c, b, c] ->= [c] {- Input 3 -}
reason
  ( a
  , St  / 0A -1A - \
        | 1A 0A  - |
        \ -  -   - / )
  ( b
  , St  / 0A -   -1A \
        | 1A -1A 0A  |
        \ -  -   -   / )
  ( c
  , St  / 0A -  - \
        | 2A 1A - |
        \ -  -  - / )
   property Termination
has value Just True
for SRS
  [a] ->= [b, c, a] {- Input 2 -}
  [b] ->= [b, c, b] {- Input 2 -}
  [c] ->= [b, c, c] {- Input 2 -}
  [c, b, a] ->= [a] {- Input 3 -}
  [c, b, b] ->= [b] {- Input 3 -}
  [c, b, c] ->= [c] {- Input 3 -}
reason
  no strict rules

**************************************************
skeleton: (2/2,3)\Weight\Mirror(1/2,3)\Context\Mirror(1/6,3)\Matrix{\ArcticBZ}{3}(0/6,3)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 2.043265674000
  min duration 0.029520580000
  total durat. 5.635296633000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 27}
    , self = 110
    , parent = Nothing
    , duration = 1.602090902000
    , status = Fail
    , start = 2025-09-04 08:25:43.870455006 UTC
    , finish = 2025-09-04 08:25:45.472545908 UTC
    , thread_cap_info = ("ThreadId 165", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 63}
    , self = 111
    , parent = Nothing
    , duration = 1.644866362000
    , status = Fail
    , start = 2025-09-04 08:25:44.166505512 UTC
    , finish = 2025-09-04 08:25:45.811371874 UTC
    , thread_cap_info = ("ThreadId 183", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 39
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 36
      , alphabet_size = 9
      , total_length = 231}
    , self = 112
    , parent = Nothing
    , duration = 2.043265674000
    , status = Fail
    , start = 2025-09-04 08:25:43.922913625 UTC
    , finish = 2025-09-04 08:25:45.966179299 UTC
    , thread_cap_info = ("ThreadId 174", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 2.586050417000
  min duration 0.037383494000
  total durat. 7.915263229000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 27}
    , self = 109
    , parent = Nothing
    , duration = 1.485756200000
    , status = Fail
    , start = 2025-09-04 08:25:43.90931239 UTC
    , finish = 2025-09-04 08:25:45.39506859 UTC
    , thread_cap_info = ("ThreadId 167", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 39
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 36
      , alphabet_size = 9
      , total_length = 231}
    , self = 113
    , parent = Nothing
    , duration = 2.080837031000
    , status = Fail
    , start = 2025-09-04 08:25:43.922908609 UTC
    , finish = 2025-09-04 08:25:46.00374564 UTC
    , thread_cap_info = ("ThreadId 176", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 63}
    , self = 114
    , parent = Nothing
    , duration = 2.586050417000
    , status = Fail
    , start = 2025-09-04 08:25:44.188462107 UTC
    , finish = 2025-09-04 08:25:46.774512524 UTC
    , thread_cap_info = ("ThreadId 184", 1, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.542098792000
  min duration 2.542098792000
  total durat. 2.542098792000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 27}
    , self = 118
    , parent = Nothing
    , duration = 2.542098792000
    , status = Success
    , start = 2025-09-04 08:25:45.406652444 UTC
    , finish = 2025-09-04 08:25:47.948751236 UTC
    , thread_cap_info = ("ThreadId 203", 0, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.760252107000
  min duration 1.232383868000
  total durat. 2.992635975000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 63}
    , self = 122
    , parent = Nothing
    , duration = 1.232383868000
    , status = Fail
    , start = 2025-09-04 08:25:46.866316215 UTC
    , finish = 2025-09-04 08:25:48.098700083 UTC
    , thread_cap_info = ("ThreadId 207", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 27}
    , self = 117
    , parent = Nothing
    , duration = 1.760252107000
    , status = Fail
    , start = 2025-09-04 08:25:45.528620508 UTC
    , finish = 2025-09-04 08:25:47.288872615 UTC
    , thread_cap_info = ("ThreadId 204", 0, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 3.346809587000
  min duration 0.560868139000
  total durat. 7.215502107000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 76}
    , self = 115
    , parent = Nothing
    , duration = 3.307824381000
    , status = Fail
    , start = 2025-09-04 08:25:43.662034801 UTC
    , finish = 2025-09-04 08:25:46.969859182 UTC
    , thread_cap_info = ("ThreadId 157", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 76}
    , self = 116
    , parent = Nothing
    , duration = 3.346809587000
    , status = Fail
    , start = 2025-09-04 08:25:43.659301803 UTC
    , finish = 2025-09-04 08:25:47.00611139 UTC
    , thread_cap_info = ("ThreadId 155", 3, False)}
**************************************************
F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                    = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
F                    = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size = 8 , total_length
F                    = 76} , self = 93 , parent = Nothing , duration = 0.265773371000 , status
F                    = Fail , start = 2025-09-04 08:25:43.587727235 UTC , finish = 2025-09-04
F                    08:25:43.853500606 UTC , thread_cap_info = ("ThreadId 119", 3, False)}
F                    
| F                  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F                  = 10 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 ,
| F                  alphabet_size = 4 , total_length = 34} , self = 102 , parent = Nothing
| F                  , duration = 0.560868139000 , status = Fail , start = 2025-09-04 08:25:43.627584959
| F                  UTC , finish = 2025-09-04 08:25:44.188453098 UTC , thread_cap_info = ("ThreadId
| F                  140", 0, False)}
| F                  
| | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | F                = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | F                = 76} , self = 101 , parent = Nothing , duration = 0.494262198000 , status
| | F                = Fail , start = 2025-09-04 08:25:43.638693121 UTC , finish = 2025-09-04
| | F                08:25:44.132955319 UTC , thread_cap_info = ("ThreadId 139", 3, False)}
| | F                
| | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | F              = 3 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | F              = 63} , self = 103 , parent = Nothing , duration = 0.893492337000 , status
| | | F              = Fail , start = 2025-09-04 08:25:43.642646363 UTC , finish = 2025-09-04
| | | F              08:25:44.5361387 UTC , thread_cap_info = ("ThreadId 147", 2, False)}
| | | F              
| | | | F            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F            = 22 , num_strict_rules = 14 , num_top_rules = 14 , num_weak_rules = 8
| | | | F            , alphabet_size = 8 , total_length = 76} , self = 116 , parent = Nothing
| | | | F            , duration = 3.346809587000 , status = Fail , start = 2025-09-04 08:25:43.659301803
| | | | F            UTC , finish = 2025-09-04 08:25:47.00611139 UTC , thread_cap_info = ("ThreadId
| | | | F            155", 3, False)}
| | | | F            
| | | | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F          = 22 , num_strict_rules = 14 , num_top_rules = 14 , num_weak_rules = 8
| | | | | F          , alphabet_size = 8 , total_length = 76} , self = 115 , parent = Nothing
| | | | | F          , duration = 3.307824381000 , status = Fail , start = 2025-09-04 08:25:43.662034801
| | | | | F          UTC , finish = 2025-09-04 08:25:46.969859182 UTC , thread_cap_info = ("ThreadId
| | | | | F          157", 3, False)}
| | | | | F          
F | | | | |          
F | | | | |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | |          = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
F | | | | |          = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 3 , total_length
F | | | | |          = 27} , self = 110 , parent = Nothing , duration = 1.602090902000 , status
F | | | | |          = Fail , start = 2025-09-04 08:25:43.870455006 UTC , finish = 2025-09-04
F | | | | |          08:25:45.472545908 UTC , thread_cap_info = ("ThreadId 165", 1, False)}
F | | | | |          
| | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | F        = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 3 , total_length
| | | | | | F        = 27} , self = 109 , parent = Nothing , duration = 1.485756200000 , status
| | | | | | F        = Fail , start = 2025-09-04 08:25:43.90931239 UTC , finish = 2025-09-04
| | | | | | F        08:25:45.39506859 UTC , thread_cap_info = ("ThreadId 167", 0, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 39 , num_strict_rules
| | | | | | | F      = 3 , num_top_rules = 0 , num_weak_rules = 36 , alphabet_size = 9 , total_length
| | | | | | | F      = 231} , self = 113 , parent = Nothing , duration = 2.080837031000 , status
| | | | | | | F      = Fail , start = 2025-09-04 08:25:43.922908609 UTC , finish = 2025-09-04
| | | | | | | F      08:25:46.00374564 UTC , thread_cap_info = ("ThreadId 176", 2, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 39 , num_strict_rules
| | | | | | | | F    = 3 , num_top_rules = 0 , num_weak_rules = 36 , alphabet_size = 9 , total_length
| | | | | | | | F    = 231} , self = 112 , parent = Nothing , duration = 2.043265674000 , status
| | | | | | | | F    = Fail , start = 2025-09-04 08:25:43.922913625 UTC , finish = 2025-09-04
| | | | | | | | F    08:25:45.966179299 UTC , thread_cap_info = ("ThreadId 174", 0, False)}
| | | | | | | | F    
| | F | | | | | |    
| | F | | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | F | | | | | |    = 3 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | F | | | | | |    = 63} , self = 111 , parent = Nothing , duration = 1.644866362000 , status
| | F | | | | | |    = Fail , start = 2025-09-04 08:25:44.166505512 UTC , finish = 2025-09-04
| | F | | | | | |    08:25:45.811371874 UTC , thread_cap_info = ("ThreadId 183", 1, False)}
| | F | | | | | |    
| F | | | | | | |    
| F | | | | | | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| F | | | | | | |    = 3 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| F | | | | | | |    = 63} , self = 114 , parent = Nothing , duration = 2.586050417000 , status
| F | | | | | | |    = Fail , start = 2025-09-04 08:25:44.188462107 UTC , finish = 2025-09-04
| F | | | | | | |    08:25:46.774512524 UTC , thread_cap_info = ("ThreadId 184", 1, False)}
| F | | | | | | |    
| | | | | | | | | S  Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | | | | | | | S  , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | | | | | | | S  , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | | | | | | | S  = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | | | | | | | S  , cpf = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | | | | | | | S  = 3 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | | | | | S  = 63} , self = 104 , parent = Nothing , duration = 0.348202122000 , status
| | | | | | | | | S  = Success , start = 2025-09-04 08:25:44.210637575 UTC , finish = 2025-09-04
| | | | | | | | | S  08:25:44.558839697 UTC , thread_cap_info = ("ThreadId 185", 1, False)}
| | | | | | | | | S  
| | | F | | | | | |  
| | |   | | | | | S  
| | | S | | | | |    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | S | | | | |    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | S | | | | |    = Size { num_rules = 1215 , num_strict_rules = 243 , num_top_rules = 0
| | | S | | | | |    , num_weak_rules = 972 , alphabet_size = 81 , total_length = 7533} , self
| | | S | | | | |    = 105 , parent = Nothing , duration = 0.193314102000 , status = Success
| | | S | | | | |    , start = 2025-09-04 08:25:44.558862094 UTC , finish = 2025-09-04 08:25:44.752176196
| | | S | | | | |    UTC , thread_cap_info = ("ThreadId 187", 1, False)}
| | | S | | | | |    
| | | S | | | | |    
| | | F | | | | |    Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
| | | F | | | | |    = False\n , verbose = False\n , tracing = False}" , input_size = Size {
| | | F | | | | |    num_rules = 477 , num_strict_rules = 81 , num_top_rules = 0 , num_weak_rules
| | | F | | | | |    = 396 , alphabet_size = 81 , total_length = 2943} , self = 106 , parent
| | | F | | | | |    = Nothing , duration = 0.515294396000 , status = Fail , start = 2025-09-04
| | | F | | | | |    08:25:44.752431388 UTC , finish = 2025-09-04 08:25:45.267725784 UTC , thread_cap_info
| | | F | | | | |    = ("ThreadId 190", 1, False)}
| | | F | | | | |    
| | | F | | | | |    
| | |   | | F | |    
| | | S | |   | |    Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | S | |   | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S | |   | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S | |   | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S | |   | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S | |   | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | S | |   | |    , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | S | |   | |    = 3 , total_length = 27} , self = 118 , parent = Nothing , duration = 2.542098792000
| | | S | |   | |    , status = Success , start = 2025-09-04 08:25:45.406652444 UTC , finish
| | | S | |   | |    = 2025-09-04 08:25:47.948751236 UTC , thread_cap_info = ("ThreadId 203",
| | | S | |   | |    0, False)}
| | | S | |   | |    
F | | | | |   | |    
F | | | | |   | |    Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
F | | | | |   | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F | | | | |   | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F | | | | |   | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | | | |   | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | | | |   | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
F | | | | |   | |    , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
F | | | | |   | |    = 3 , total_length = 27} , self = 117 , parent = Nothing , duration = 1.760252107000
F | | | | |   | |    , status = Fail , start = 2025-09-04 08:25:45.528620508 UTC , finish =
F | | | | |   | |    2025-09-04 08:25:47.288872615 UTC , thread_cap_info = ("ThreadId 204",
F | | | | |   | |    0, False)}
F | | | | |   | |    
| | F | | |   | |    
| |   | | |   | F    
| |   | | |   F      
| F   | | |          
| F   | | |          Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| F   | | |          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F   | | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F   | | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F   | | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F   | | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 15
| F   | | |          , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size
| F   | | |          = 9 , total_length = 63} , self = 122 , parent = Nothing , duration = 1.232383868000
| F   | | |          , status = Fail , start = 2025-09-04 08:25:46.866316215 UTC , finish =
| F   | | |          2025-09-04 08:25:48.098700083 UTC , thread_cap_info = ("ThreadId 207",
| F   | | |          1, False)}
| F   | | |          
| |   | | F          
| |   | F            
F |   |              
E |   |              Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E |   |              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E |   |              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E |   |              , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E |   |              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E |   |              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
E |   |              , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
E |   |              = 3 , total_length = 27} , self = 120 , parent = Nothing , duration = 0.719078929000
E |   |              , status = Except "AsyncCancelled" , start = 2025-09-04 08:25:47.349228766
E |   |              UTC , finish = 2025-09-04 08:25:48.068307695 UTC , thread_cap_info = ("ThreadId
E |   |              210", 0, False)}
E |   |              
| |   S              
E |                  
  F                  
