[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 734 length 3953
last 882 length 5659
CNF 734 vars 3953 clauses
CNF 882 vars 5659 clauses
last 1938 length 12159
last 2182 length 11271
last 886 length 4324
CNF 1938 vars 12159 clauses
CNF 2182 vars 11271 clauses
CNF 886 vars 4324 clauses
last 1102 length 5806
CNF 1102 vars 5806 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1786, clauses: 7318
last 1786 length 7318
CNF 1786 vars 7318 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1786, clauses: 7318, status: Unsatisfied, time: 0.007442419s
last 5544 length 27917
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13328, clauses: 55769
last 13328 length 55769
CNF 13328 vars 55769 clauses
CNF 5544 vars 27917 clauses
last 5406 length 33547
CNF 5406 vars 33547 clauses
last 2580 length 13141
CNF 2580 vars 13141 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13328, clauses: 55769, status: Satisfied, time: 0.161812316s
last 523 length 2619
CNF 523 vars 2619 clauses
last 462 length 2197
last 2580 length 13141
last 3174 length 19217
last 3174 length 19217
CNF 462 vars 2197 clauses
last 4102 length 20787
CNF 2580 vars 13141 clauses
last 4698 length 27420
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9412, clauses: 39216
CNF 3174 vars 19217 clauses
CNF 3174 vars 19217 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1285, clauses: 5150
CNF 4102 vars 20787 clauses
CNF 4698 vars 27420 clauses
last 9412 length 39216
last 1285 length 5150
CNF 1285 vars 5150 clauses
CNF 9412 vars 39216 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1285, clauses: 5150, status: Unsatisfied, time: 0.104324644s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9412, clauses: 39216, status: Unsatisfied, time: 0.305937201s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3161, clauses: 12845
last 3161 length 12845
CNF 3161 vars 12845 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4584, clauses: 18968
last 4584 length 18968
CNF 4584 vars 18968 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3161, clauses: 12845, status: Unsatisfied, time: 0.177053671s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4584, clauses: 18968, status: Unsatisfied, time: 0.100827s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22439, clauses: 94709
last 22439 length 94709
CNF 22439 vars 94709 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22439, clauses: 94709, status: Satisfied, time: 0.174597455s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 1 weak rules on 2 letters       mirror
SRS with 1 strict rules and 1 weak rules on 2 letters       context
SRS with 2 strict rules and 2 weak rules on 2 letters       mirror
SRS with 2 strict rules and 2 weak rules on 2 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 2 weak rules on 2 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 2 weak rules on 2 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, b, b, a] -> [] {- Input 0 -}
  [] ->= [a, a, b, b] {- Input 1 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, b, b, a, b, a] -> [] {- Mirror (Input 0) -}
  [] ->= [b, b, a, a] {- Mirror (Input 1) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a, b, b, a, b, a] -> [a] {- Mirror (Input 0) -}
  [b, a, b, b, a, b, a] -> [b] {- Mirror (Input 0) -}
  [a] ->= [a, b, b, a, a] {- Mirror (Input 1) -}
  [b] ->= [b, b, b, a, a] {- Mirror (Input 1) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, b, a, b, b, a, a] -> [a] {- Input 0 -}
  [a, b, a, b, b, a, b] -> [b] {- Input 0 -}
  [a] ->= [a, a, b, b, a] {- Input 1 -}
  [b] ->= [a, a, b, b, b] {- Input 1 -}
reason
  ( a
  , St  / 0A  1A  - \
        | -2A -1A - |
        \ -1A 1A  - / )
  ( b
  , St  / 0A  - -  \
        | -2A - 0A |
        \ -1A - -  / )
   property Termination
has value Just True
for SRS
  [a, b, a, b, b, a, b] -> [b] {- Input 0 -}
  [a] ->= [a, a, b, b, a] {- Input 1 -}
  [b] ->= [a, a, b, b, b] {- Input 1 -}
reason
  ( a
  , St  / 0A -1A -1A - \
        | -  1A  -   - |
        | -  0A  -   - |
        \ -  1A  1A  - / )
  ( b
  , St  / 0A -2A -1A -2A \
        | -  -   -   0A  |
        | 1A -1A -   -1A |
        \ -  -   -   -   / )
   property Termination
has value Just True
for SRS
  [a] ->= [a, a, b, b, a] {- Input 1 -}
  [b] ->= [a, a, b, b, b] {- Input 1 -}
reason
  no strict rules

**************************************************
skeleton: \Mirror(1/1,2)\Context\Mirror(2/2,2)\Matrix{\ArcticBZ}{3}(1/2,2)\Matrix{\ArcticBZ}{4}(0/2,2)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.660871838000
  min duration 0.015905316000
  total durat. 1.808474154000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.624080715000
  min duration 0.017577349000
  total durat. 2.623263784000
**************************************************
S              Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
S              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
S              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
S              , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
S              = 2 , total_length = 28} , self = 101 , parent = Nothing , duration = 0.380635133000
S              , status = Success , start = 2025-09-04 08:23:29.924523339 UTC , finish
S              = 2025-09-04 08:23:30.305158472 UTC , thread_cap_info = ("ThreadId 152",
S              1, False)}
S              
| F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F            = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| F            = 8 , num_top_rules = 0 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| F            = 144} , self = 93 , parent = Nothing , duration = 0.256149673000 , status
| F            = Fail , start = 2025-09-04 08:23:29.924637879 UTC , finish = 2025-09-04
| F            08:23:30.180787552 UTC , thread_cap_info = ("ThreadId 155", 3, False)}
| F            
| | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F          = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | F          = 8 , num_top_rules = 0 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | F          = 144} , self = 98 , parent = Nothing , duration = 0.340779101000 , status
| | F          = Fail , start = 2025-09-04 08:23:29.938338673 UTC , finish = 2025-09-04
| | F          08:23:30.279117774 UTC , thread_cap_info = ("ThreadId 157", 3, False)}
| | F          
| | | E        Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E        , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | E        , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | | E        = 2 , total_length = 28} , self = 103 , parent = Nothing , duration = 0.360264698000
| | | E        , status = Except "AsyncCancelled" , start = 2025-09-04 08:23:29.980072976
| | | E        UTC , finish = 2025-09-04 08:23:30.340337674 UTC , thread_cap_info = ("ThreadId
| | | E        164", 1, False)}
| | | E        
| | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | F      = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | F      = 56} , self = 96 , parent = Nothing , duration = 0.172865498000 , status
| | | | F      = Fail , start = 2025-09-04 08:23:30.099015102 UTC , finish = 2025-09-04
| | | | F      08:23:30.2718806 UTC , thread_cap_info = ("ThreadId 172", 0, False)}
| | | | F      
| | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | F    = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | F    = 56} , self = 115 , parent = Nothing , duration = 0.660871838000 , status
| | | | | F    = Fail , start = 2025-09-04 08:23:30.118780392 UTC , finish = 2025-09-04
| | | | | F    08:23:30.77965223 UTC , thread_cap_info = ("ThreadId 174", 0, False)}
| | | | | F    
| | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | F  = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | F  = 56} , self = 116 , parent = Nothing , duration = 0.624080715000 , status
| | | | | | F  = Fail , start = 2025-09-04 08:23:30.178984381 UTC , finish = 2025-09-04
| | | | | | F  08:23:30.803065096 UTC , thread_cap_info = ("ThreadId 176", 0, False)}
| | | | | | F  
| F | | | | |  
| F | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| F | | | | |  = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| F | | | | |  = 56} , self = 117 , parent = Nothing , duration = 0.602017699000 , status
| F | | | | |  = Fail , start = 2025-09-04 08:23:30.221703869 UTC , finish = 2025-09-04
| F | | | | |  08:23:30.823721568 UTC , thread_cap_info = ("ThreadId 178", 3, False)}
| F | | | | |  
| | | | F | |  
| | F |   | |  
S |   |   | |  
  |   E   | |  
F |       | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |       | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |       | |  = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
F |       | |  = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 2 , total_length
F |       | |  = 20} , self = 113 , parent = Nothing , duration = 0.139220604000 , status
F |       | |  = Fail , start = 2025-09-04 08:23:30.340462039 UTC , finish = 2025-09-04
F |       | |  08:23:30.479682643 UTC , thread_cap_info = ("ThreadId 202", 1, False)}
F |       | |  
| | F     | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F     | |  = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | F     | |  = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 2 , total_length
| | F     | |  = 20} , self = 114 , parent = Nothing , duration = 0.402341783000 , status
| | F     | |  = Fail , start = 2025-09-04 08:23:30.349895332 UTC , finish = 2025-09-04
| | F     | |  08:23:30.752237115 UTC , thread_cap_info = ("ThreadId 203", 1, False)}
| | F     | |  
| | | F   | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | F   | |  = 4 , num_top_rules = 0 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | | F   | |  = 104} , self = 118 , parent = Nothing , duration = 0.491789262000 , status
| | | F   | |  = Fail , start = 2025-09-04 08:23:30.360929103 UTC , finish = 2025-09-04
| | | F   | |  08:23:30.852718365 UTC , thread_cap_info = ("ThreadId 210", 1, False)}
| | | F   | |  
| | | | F | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | |  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | F | |  = 4 , num_top_rules = 0 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | | | F | |  = 104} , self = 119 , parent = Nothing , duration = 0.558717515000 , status
| | | | F | |  = Fail , start = 2025-09-04 08:23:30.378370869 UTC , finish = 2025-09-04
| | | | F | |  08:23:30.937088384 UTC , thread_cap_info = ("ThreadId 212", 1, False)}
| | | | F | |  
F | | | | | |  
F | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
F | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
F | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
F | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
F | | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
F | | | | | |  = 2 , total_length = 20} , self = 121 , parent = Nothing , duration = 0.579296100000
F | | | | | |  , status = Fail , start = 2025-09-04 08:23:30.520954562 UTC , finish =
F | | | | | |  2025-09-04 08:23:31.100250662 UTC , thread_cap_info = ("ThreadId 214",
F | | | | | |  1, False)}
F | | | | | |  
| | F | | | |  
| | F | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | F | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | F | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | F | | | |  = 2 , total_length = 20} , self = 120 , parent = Nothing , duration = 0.208728129000
| | F | | | |  , status = Fail , start = 2025-09-04 08:23:30.752262127 UTC , finish =
| | F | | | |  2025-09-04 08:23:30.960990256 UTC , thread_cap_info = ("ThreadId 219",
| | F | | | |  1, False)}
| | F | | | |  
| | | | | F |  
| | | | |   F  
| F | | |      
|   | F |      
|   |   F      
| F |          Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| F |          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| F |          , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| F |          = 4 , total_length = 56} , self = 122 , parent = Nothing , duration = 0.348360434000
| F |          , status = Fail , start = 2025-09-04 08:23:30.959577305 UTC , finish =
| F |          2025-09-04 08:23:31.307937739 UTC , thread_cap_info = ("ThreadId 226",
| F |          0, False)}
| F |          
| | F          
| | S          Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | S          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S          , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | S          , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | S          = 2 , total_length = 20} , self = 124 , parent = Nothing , duration = 0.891515394000
| | S          , status = Success , start = 2025-09-04 08:23:30.961015179 UTC , finish
| | S          = 2025-09-04 08:23:31.852530573 UTC , thread_cap_info = ("ThreadId 228",
| | S          1, False)}
| | S          
F | |          
F | |          Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
F | |          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F | |          , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
F | |          , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
F | |          = 2 , total_length = 20} , self = 123 , parent = Nothing , duration = 0.201046947000
F | |          , status = Fail , start = 2025-09-04 08:23:31.118836754 UTC , finish =
F | |          2025-09-04 08:23:31.319883701 UTC , thread_cap_info = ("ThreadId 229",
F | |          1, False)}
F | |          
| F |          
F   |          
E   |          Info { what = "Matrix\n { monotone = Strict\n , domain = Arctic\n , method
E   |          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E   |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E   |          , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E   |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E   |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
E   |          , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
E   |          = 2 , total_length = 20} , self = 126 , parent = Nothing , duration = 0.539997940000
E   |          , status = Except "AsyncCancelled" , start = 2025-09-04 08:23:31.338572639
E   |          UTC , finish = 2025-09-04 08:23:31.878570579 UTC , thread_cap_info = ("ThreadId
E   |          232", 1, False)}
E   |          
|   S          
E              
