[Info] pool sizes (success) 4 seen 4 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 168 length 666
last 197 length 762
[Info] pool sizes (success) 4 seen 4 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
CNF 197 vars 762 clauses
CNF 168 vars 666 clauses
last 12 length 33
CNF 12 vars 33 clauses
last 12 length 33
CNF 12 vars 33 clauses
last 223 length 854
last 201 length 785
CNF 223 vars 854 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 197, clauses: 663
last 197 length 663
CNF 201 vars 785 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 81, clauses: 235
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1142, clauses: 3966
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3030, clauses: 12215
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8697, clauses: 35152
CNF 197 vars 663 clauses
last 7563 length 32629
last 81 length 235
last 1142 length 3966
last 7563 length 32629
last 3030 length 12215
last 8697 length 35152
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 197, clauses: 663, status: Unsatisfied, time: 0.542661113s
last 7861 length 32075
CNF 1142 vars 3966 clauses
CNF 7563 vars 32629 clauses
CNF 7563 vars 32629 clauses
CNF 81 vars 235 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1396, clauses: 4851
CNF 3030 vars 12215 clauses
last 7861 length 32075
CNF 8697 vars 35152 clauses
CNF 7861 vars 32075 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1142, clauses: 3966, status: Unsatisfied, time: 0.130554716s
last 1396 length 4851
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 81, clauses: 235, status: Unsatisfied, time: 0.34774717s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3030, clauses: 12215, status: Unsatisfied, time: 0.22410486s
CNF 7861 vars 32075 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8697, clauses: 35152, status: Satisfied, time: 0.329819254s
CNF 1396 vars 4851 clauses
last 7861 length 32075
CNF 7861 vars 32075 clauses
last 7563 length 32629
**************************************************
summary
**************************************************
SRS with 2 strict rules and 4 weak rules on 5 letters       weights
SRS with 1 strict rules and 4 weak rules on 5 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 4 weak rules on 4 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [n, s] -> [s] {- Input 0 -}
  [o, s] -> [s] {- Input 1 -}
  [t] ->= [t, c, n] {- Input 2 -}
  [c, n] ->= [n, c] {- Input 3 -}
  [c, o] ->= [o, c] {- Input 4 -}
  [c, o] ->= [o] {- Input 5 -}
reason
  (s, 0/1)
  (t, 0/1)
  (n, 0/1)
  (o, 1/1)
  (c, 0/1)
   property Termination
has value Just True
for SRS
  [n, s] -> [s] {- Input 0 -}
  [t] ->= [t, c, n] {- Input 2 -}
  [c, n] ->= [n, c] {- Input 3 -}
  [c, o] ->= [o, c] {- Input 4 -}
  [c, o] ->= [o] {- Input 5 -}
reason
  ( s
  , St  / 0A - - \
        | 0A - - |
        \ 1A - - / )
  ( t
  , St  / 1A 2A - \
        | -  -  - |
        \ -  -  - / )
  ( n
  , St  / 0A 1A -  \
        | -  1A -  |
        \ 2A -  0A / )
  ( o
  , St  / 0A -1A - \
        | -  -   - |
        \ 1A 2A  - / )
  ( c
  , St  / 0A -   -  \
        | -  -2A -  |
        \ -  -   0A / )
   property Termination
has value Just True
for SRS
  [t] ->= [t, c, n] {- Input 2 -}
  [c, n] ->= [n, c] {- Input 3 -}
  [c, o] ->= [o, c] {- Input 4 -}
  [c, o] ->= [o] {- Input 5 -}
reason
  no strict rules

**************************************************
skeleton: (2/4,5)\Weight(1/4,5)\Matrix{\ArcticBZ}{3}(0/4,4)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.307303668000
  min duration 0.000258653000
CNF 7563 vars 32629 clauses
  total durat. 2.609787060000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 74
      , num_strict_rules = 10
      , num_top_rules = 0
      , num_weak_rules = 64
      , alphabet_size = 24
      , total_length = 414}
    , self = 82
    , parent = Nothing
    , duration = 1.220385353000
    , status = Fail
    , start = 2025-09-04 07:31:41.764468547 UTC
    , finish = 2025-09-04 07:31:42.9848539 UTC
    , thread_cap_info = ("ThreadId 136", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 74
      , num_strict_rules = 10
      , num_top_rules = 0
      , num_weak_rules = 64
      , alphabet_size = 24
      , total_length = 414}
    , self = 85
    , parent = Nothing
    , duration = 1.307303668000
    , status = Fail
    , start = 2025-09-04 07:31:41.780164472 UTC
    , finish = 2025-09-04 07:31:43.08746814 UTC
    , thread_cap_info = ("ThreadId 137", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.738394629000
  min duration 0.012622487000
  total durat. 1.933796799000
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.306840775000
  min duration 1.306840775000
  total durat. 1.306840775000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 18}
    , self = 83
    , parent = Nothing
    , duration = 1.306840775000
    , status = Success
    , start = 2025-09-04 07:31:41.755441079 UTC
    , finish = 2025-09-04 07:31:43.062281854 UTC
    , thread_cap_info = ("ThreadId 134", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.269316849000
  min duration 1.155744415000
  total durat. 2.425061264000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 0
      , alphabet_size = 1
      , total_length = 2}
    , self = 80
    , parent = Nothing
    , duration = 1.155744415000
    , status = Fail
    , start = 2025-09-04 07:31:41.764414323 UTC
    , finish = 2025-09-04 07:31:42.920158738 UTC
    , thread_cap_info = ("ThreadId 128", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 15}
    , self = 81
    , parent = Nothing
    , duration = 1.269316849000
    , status = Fail
    , start = 2025-09-04 07:31:41.703621463 UTC
    , finish = 2025-09-04 07:31:42.972938312 UTC
    , thread_cap_info = ("ThreadId 101", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.224752385000
  min duration 0.612620448000
  total durat. 1.837372833000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 15}
    , self = 79
    , parent = Nothing
    , duration = 1.224752385000
    , status = Fail
    , start = 2025-09-04 07:31:41.672924615 UTC
    , finish = 2025-09-04 07:31:42.897677 UTC
    , thread_cap_info = ("ThreadId 99", 1, False)}
**************************************************
F                        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F                        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F                        = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
F                        = 4 , total_length = 15} , self = 79 , parent = Nothing , duration = 1.224752385000
F                        , status = Fail , start = 2025-09-04 07:31:41.672924615 UTC , finish =
F                        2025-09-04 07:31:42.897677 UTC , thread_cap_info = ("ThreadId 99", 1, False)}
F                        
| F                      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                      = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| F                      = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| F                      = 18} , self = 75 , parent = Nothing , duration = 0.439297561000 , status
| F                      = Fail , start = 2025-09-04 07:31:41.687752345 UTC , finish = 2025-09-04
| F                      07:31:42.127049906 UTC , thread_cap_info = ("ThreadId 110", 2, False)}
| F                      
| | E                    Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | E                    , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | E                    = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | E                    False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | E                    = Size { num_rules = 52 , num_strict_rules = 52 , num_top_rules = 0 , num_weak_rules
| | E                    = 0 , alphabet_size = 16 , total_length = 296} , self = 72 , parent = Nothing
| | E                    , duration = 0.190087649000 , status = Except "AsyncCancelled" , start
| | E                    = 2025-09-04 07:31:41.69538518 UTC , finish = 2025-09-04 07:31:41.885472829
| | E                    UTC , thread_cap_info = ("ThreadId 120", 0, False)}
| | E                    
| | | E                  Info { what = "Matchbound\n { method = RFC\n , implementation = Exact\n
| | | E                  , cpf_state_encoding = Encoding { base = 10, order = MSB_First}\n , max_size
| | | E                  = Just 10000\n , max_height = Just 5\n , initial = Paths\n , verbose =
| | | E                  False\n , tracing = False\n , draw = False\n , cpf = False}" , input_size
| | | E                  = Size { num_rules = 52 , num_strict_rules = 52 , num_top_rules = 0 , num_weak_rules
| | | E                  = 0 , alphabet_size = 16 , total_length = 296} , self = 73 , parent = Nothing
| | | E                  , duration = 0.255812431000 , status = Except "AsyncCancelled" , start
| | | E                  = 2025-09-04 07:31:41.70361368 UTC , finish = 2025-09-04 07:31:41.959426111
| | | E                  UTC , thread_cap_info = ("ThreadId 122", 0, False)}
| | | E                  
| | | | F                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | F                , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | | F                = 4 , total_length = 15} , self = 81 , parent = Nothing , duration = 1.269316849000
| | | | F                , status = Fail , start = 2025-09-04 07:31:41.703621463 UTC , finish =
| | | | F                2025-09-04 07:31:42.972938312 UTC , thread_cap_info = ("ThreadId 101",
| | | | F                1, False)}
| | | | F                
| | | | | F              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | F              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | F              = 1 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 0 , alphabet_size
| | | | | F              = 1 , total_length = 2} , self = 76 , parent = Nothing , duration = 0.612620448000
| | | | | F              , status = Fail , start = 2025-09-04 07:31:41.720169091 UTC , finish =
| | | | | F              2025-09-04 07:31:42.332789539 UTC , thread_cap_info = ("ThreadId 104",
| | | | | F              1, False)}
| | | | | F              
| | | | | | S            Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | S            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | S            , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | | | | | S            = 5 , total_length = 18} , self = 83 , parent = Nothing , duration = 1.306840775000
| | | | | | S            , status = Success , start = 2025-09-04 07:31:41.755441079 UTC , finish
| | | | | | S            = 2025-09-04 07:31:43.062281854 UTC , thread_cap_info = ("ThreadId 134",
| | | | | | S            2, False)}
| | | | | | S            
| | | | | | | F          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | F          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | F          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | F          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 1
| | | | | | | F          , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 0 , alphabet_size
| | | | | | | F          = 1 , total_length = 2} , self = 80 , parent = Nothing , duration = 1.155744415000
| | | | | | | F          , status = Fail , start = 2025-09-04 07:31:41.764414323 UTC , finish =
| | | | | | | F          2025-09-04 07:31:42.920158738 UTC , thread_cap_info = ("ThreadId 128",
| | | | | | | F          1, False)}
| | | | | | | F          
| | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 74 , num_strict_rules
| | | | | | | | F        = 10 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 24 , total_length
| | | | | | | | F        = 414} , self = 82 , parent = Nothing , duration = 1.220385353000 , status
| | | | | | | | F        = Fail , start = 2025-09-04 07:31:41.764468547 UTC , finish = 2025-09-04
| | | | | | | | F        07:31:42.9848539 UTC , thread_cap_info = ("ThreadId 136", 2, False)}
| | | | | | | | F        
| | | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 74 , num_strict_rules
| | | | | | | | | F      = 10 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 24 , total_length
| | | | | | | | | F      = 414} , self = 85 , parent = Nothing , duration = 1.307303668000 , status
| | | | | | | | | F      = Fail , start = 2025-09-04 07:31:41.780164472 UTC , finish = 2025-09-04
| | | | | | | | | F      07:31:43.08746814 UTC , thread_cap_info = ("ThreadId 137", 2, False)}
| | | | | | | | | F      
| | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 74 , num_strict_rules
| | | | | | | | | | F    = 10 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 24 , total_length
| | | | | | | | | | F    = 414} , self = 77 , parent = Nothing , duration = 0.729450454000 , status
| | | | | | | | | | F    = Fail , start = 2025-09-04 07:31:41.780181964 UTC , finish = 2025-09-04
| | | | | | | | | | F    07:31:42.509632418 UTC , thread_cap_info = ("ThreadId 139", 1, False)}
| | | | | | | | | | F    
| | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 74 , num_strict_rules
| | | | | | | | | | | F  = 10 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 24 , total_length
| | | | | | | | | | | F  = 414} , self = 78 , parent = Nothing , duration = 0.738394629000 , status
| | | | | | | | | | | F  = Fail , start = 2025-09-04 07:31:41.826221913 UTC , finish = 2025-09-04
| | | | | | | | | | | F  07:31:42.564616542 UTC , thread_cap_info = ("ThreadId 142", 2, False)}
| | | | | | | | | | | F  
| | E | | | | | | | | |  
| |   E | | | | | | | |  
| F     | | | | | | | |  
| E     | | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| E     | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| E     | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| E     | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E     | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E     | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| E     | | | | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| E     | | | | | | | |  = 5 , total_length = 18} , self = 86 , parent = Nothing , duration = 0.854076462000
| E     | | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:42.252373988
| E     | | | | | | | |  UTC , finish = 2025-09-04 07:31:43.10645045 UTC , thread_cap_info = ("ThreadId
| E     | | | | | | | |  156", 2, False)}
| E     | | | | | | | |  
| |     | F | | | | | |  
| |     |   | | | | F |  
| |     |   | | | |   F  
F |     |   | | | |      
  |     |   | F | |      
  |     F   |   | |      
  |         |   F |      
  |         S     |      
  |               F      
  E                      
