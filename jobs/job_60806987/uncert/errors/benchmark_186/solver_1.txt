[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 387 length 1662
last 526 length 2273
CNF 387 vars 1662 clauses
CNF 526 vars 2273 clauses
last 1742 length 7713
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1274, clauses: 4998
last 1274 length 4998
last 1742 length 7713
CNF 1742 vars 7713 clauses
last 2102 length 9947
CNF 2102 vars 9947 clauses
last 2102 length 9947
CNF 1742 vars 7713 clauses
CNF 2102 vars 9947 clauses
CNF 1274 vars 4998 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1274, clauses: 4998, status: Unsatisfied, time: 0.105412301s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3539, clauses: 14253
last 3539 length 14253
CNF 3539 vars 14253 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3539, clauses: 14253, status: Unsatisfied, time: 0.049431053s
last 4097 length 19930
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9412, clauses: 39144
last 9412 length 39144
CNF 9412 vars 39144 clauses
CNF 4097 vars 19930 clauses
last 5225 length 29028
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26654, clauses: 111382
last 26654 length 111382
CNF 5225 vars 29028 clauses
CNF 26654 vars 111382 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22440, clauses: 94523
last 22440 length 94523
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26654, clauses: 111382, status: Satisfied, time: 0.300426926s
CNF 22440 vars 94523 clauses
last 1624 length 7426
CNF 1624 vars 7426 clauses
last 1390 length 6058
CNF 1390 vars 6058 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22440, clauses: 94523, status: Satisfied, time: 0.410360089s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3310, clauses: 13310
last 3310 length 13310
CNF 3310 vars 13310 clauses
last 609 length 2694
CNF 609 vars 2694 clauses
last 262 length 1170
CNF 262 vars 1170 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3310, clauses: 13310, status: Unsatisfied, time: 0.064368216s
last 1691 length 7110
last 1541 length 6684
CNF 1691 vars 7110 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1047, clauses: 4049
CNF 1541 vars 6684 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 25258, clauses: 105530
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8016, clauses: 33292
last 1047 length 4049
last 25258 length 105530
last 8016 length 33292
CNF 1047 vars 4049 clauses
CNF 8016 vars 33292 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1047, clauses: 4049, status: Unsatisfied, time: 0.117437976s
CNF 25258 vars 105530 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8016, clauses: 33292, status: Satisfied, time: 0.137380972s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 25258, clauses: 105530, status: Satisfied, time: 0.205801087s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 1 weak rules on 2 letters       mirror
SRS with 1 strict rules and 1 weak rules on 2 letters       context
SRS with 2 strict rules and 1 weak rules on 2 letters       mirror
SRS with 2 strict rules and 1 weak rules on 2 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 1 weak rules on 2 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 1 weak rules on 2 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, b, b] -> [] {- Input 0 -}
  [b, a] ->= [a, b, a, b] {- Input 1 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, b, a, a] -> [] {- Mirror (Input 0) -}
  [a, b] ->= [b, a, b, a] {- Mirror (Input 1) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, b, b, a, a] -> [a] {- Mirror (Input 0) -}
  [b, b, b, a, a] -> [b] {- Mirror (Input 0) -}
  [a, b] ->= [b, a, b, a] {- Mirror (Input 1) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a, b, b, a] -> [a] {- Input 0 -}
  [a, a, b, b, b] -> [b] {- Input 0 -}
  [b, a] ->= [a, b, a, b] {- Input 1 -}
reason
  ( a
  , St  / 0A -2A -   - \
        | -  -   1A  - |
        | -  -2A -1A - |
        \ -  -1A -   - / )
  ( b
  , St  / 0A  -  - -  \
        | 1A  -  - -  |
        | -1A -  - 0A |
        \ 0A  1A - 1A / )
   property Termination
has value Just True
for SRS
  [a, a, b, b, a] -> [a] {- Input 0 -}
  [b, a] ->= [a, b, a, b] {- Input 1 -}
reason
  ( a
  , St  / 0A -1A 0A \
        | -  -   -  |
        \ -  -   1A / )
  ( b
  , St  / 0A -1A -  \
        | 1A -1A 0A |
        \ -  -1A -  / )
   property Termination
has value Just True
for SRS
  [b, a] ->= [a, b, a, b] {- Input 1 -}
reason
  no strict rules

**************************************************
skeleton: \Mirror(1/1,2)\Context\Mirror(2/1,2)\Matrix{\ArcticBZ}{4}(1/1,2)\Matrix{\ArcticBZ}{3}(0/1,2)[]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.238841908000
  min duration 1.238841908000
  total durat. 1.238841908000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 128
      , num_strict_rules = 64
      , num_top_rules = 0
      , num_weak_rules = 64
      , alphabet_size = 16
      , total_length = 1152}
    , self = 71
    , parent = Nothing
    , duration = 1.238841908000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:32:22.670676931 UTC
    , finish = 2025-09-04 07:32:23.909518839 UTC
    , thread_cap_info = ("ThreadId 107", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 0.806518203000
  min duration 0.012029979000
  total durat. 1.396402674000
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.244711795000
  min duration 1.244711795000
  total durat. 1.244711795000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 128
      , num_strict_rules = 64
      , num_top_rules = 0
      , num_weak_rules = 64
      , alphabet_size = 16
      , total_length = 1152}
    , self = 73
    , parent = Nothing
    , duration = 1.244711795000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:32:22.689021325 UTC
    , finish = 2025-09-04 07:32:23.93373312 UTC
    , thread_cap_info = ("ThreadId 109", 1, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.134746349000
  min duration 0.560681209000
  total durat. 2.524448871000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 4
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 56}
    , self = 64
    , parent = Nothing
    , duration = 1.134746349000
    , status = Success
    , start = 2025-09-04 07:32:22.72063929 UTC
    , finish = 2025-09-04 07:32:23.855385639 UTC
    , thread_cap_info = ("ThreadId 128", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.471824793000
  min duration 1.471824793000
  total durat. 1.471824793000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 1
      , alphabet_size = 2
      , total_length = 18}
    , self = 82
    , parent = Nothing
    , duration = 1.471824793000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:32:22.681090123 UTC
    , finish = 2025-09-04 07:32:24.152914916 UTC
    , thread_cap_info = ("ThreadId 115", 0, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.213392378000
  min duration 1.213392378000
  total durat. 1.213392378000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 1
      , alphabet_size = 2
      , total_length = 18}
    , self = 80
    , parent = Nothing
    , duration = 1.213392378000
    , status = Success
    , start = 2025-09-04 07:32:22.909081286 UTC
    , finish = 2025-09-04 07:32:24.122473664 UTC
    , thread_cap_info = ("ThreadId 132", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 0.962749548000
  min duration 0.079989617000
  total durat. 1.545404853000
**************************************************
E                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E                = False\n , verbose = False}" , input_size = Size { num_rules = 128 , num_strict_rules
E                = 64 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 16 , total_length
E                = 1152} , self = 71 , parent = Nothing , duration = 1.238841908000 , status
E                = Except "AsyncCancelled" , start = 2025-09-04 07:32:22.670676931 UTC ,
E                finish = 2025-09-04 07:32:23.909518839 UTC , thread_cap_info = ("ThreadId
E                107", 1, False)}
E                
| E              Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| E              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| E              , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| E              = 2 , total_length = 18} , self = 82 , parent = Nothing , duration = 1.471824793000
| E              , status = Except "AsyncCancelled" , start = 2025-09-04 07:32:22.681090123
| E              UTC , finish = 2025-09-04 07:32:24.152914916 UTC , thread_cap_info = ("ThreadId
| E              115", 0, False)}
| E              
| | E            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | E            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E            = False\n , verbose = False}" , input_size = Size { num_rules = 128 , num_strict_rules
| | E            = 64 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 16 , total_length
| | E            = 1152} , self = 73 , parent = Nothing , duration = 1.244711795000 , status
| | E            = Except "AsyncCancelled" , start = 2025-09-04 07:32:22.689021325 UTC ,
| | E            finish = 2025-09-04 07:32:23.93373312 UTC , thread_cap_info = ("ThreadId
| | E            109", 1, False)}
| | E            
| | | F          Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | F          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | F          , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| | | F          = 2 , total_length = 18} , self = 60 , parent = Nothing , duration = 0.126748575000
| | | F          , status = Fail , start = 2025-09-04 07:32:22.689039172 UTC , finish =
| | | F          2025-09-04 07:32:22.815787747 UTC , thread_cap_info = ("ThreadId 117",
| | | F          0, False)}
| | | F          
| | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | F        = 8 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | F        = 96} , self = 62 , parent = Nothing , duration = 0.412156917000 , status
| | | | F        = Fail , start = 2025-09-04 07:32:22.704568024 UTC , finish = 2025-09-04
| | | | F        07:32:23.116724941 UTC , thread_cap_info = ("ThreadId 119", 0, False)}
| | | | F        
| | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | F      = 8 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | F      = 96} , self = 63 , parent = Nothing , duration = 0.806518203000 , status
| | | | | F      = Fail , start = 2025-09-04 07:32:22.709031185 UTC , finish = 2025-09-04
| | | | | F      07:32:23.515549388 UTC , thread_cap_info = ("ThreadId 121", 0, False)}
| | | | | F      
| | | | | | S    Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | S    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | S    , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | | | | | S    = 4 , total_length = 56} , self = 64 , parent = Nothing , duration = 1.134746349000
| | | | | | S    , status = Success , start = 2025-09-04 07:32:22.72063929 UTC , finish
| | | | | | S    = 2025-09-04 07:32:23.855385639 UTC , thread_cap_info = ("ThreadId 128",
| | | | | | S    2, False)}
| | | | | | S    
| | | | | | | F  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | | F  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | | F  , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | | | | | | F  = 4 , total_length = 56} , self = 61 , parent = Nothing , duration = 0.145362408000
| | | | | | | F  , status = Fail , start = 2025-09-04 07:32:22.76965452 UTC , finish = 2025-09-04
| | | | | | | F  07:32:22.915016928 UTC , thread_cap_info = ("ThreadId 130", 2, False)}
| | | | | | | F  
| | | F | | | |  
| | | S | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | S | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S | | | |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | S | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| | | S | | | |  = 2 , total_length = 18} , self = 80 , parent = Nothing , duration = 1.213392378000
| | | S | | | |  , status = Success , start = 2025-09-04 07:32:22.909081286 UTC , finish
| | | S | | | |  = 2025-09-04 07:32:24.122473664 UTC , thread_cap_info = ("ThreadId 132",
| | | S | | | |  0, False)}
| | | S | | | |  
| | | | | | | F  
| | | | | | | E  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | | E  , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | | | | | | E  = 4 , total_length = 56} , self = 66 , parent = Nothing , duration = 0.962749548000
| | | | | | | E  , status = Except "AsyncCancelled" , start = 2025-09-04 07:32:22.929046603
| | | | | | | E  UTC , finish = 2025-09-04 07:32:23.891796151 UTC , thread_cap_info = ("ThreadId
| | | | | | | E  133", 2, False)}
| | | | | | | E  
| | | | F | | |  
| | | |   F | |  
| | | |     S |  
| | | |       E  
E | | |          
  | E |          
S |   |          Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
S |   |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
S |   |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S |   |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S |   |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S |   |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
S |   |          , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
S |   |          = 4 , total_length = 50} , self = 101 , parent = Nothing , duration = 0.829021313000
S |   |          , status = Success , start = 2025-09-04 07:32:23.972355498 UTC , finish
S |   |          = 2025-09-04 07:32:24.801376811 UTC , thread_cap_info = ("ThreadId 164",
S |   |          0, False)}
S |   |          
| | F |          Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | F |          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | F |          , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | F |          = 4 , total_length = 50} , self = 94 , parent = Nothing , duration = 0.182487134000
| | F |          , status = Fail , start = 2025-09-04 07:32:24.029037439 UTC , finish =
| | F |          2025-09-04 07:32:24.211524573 UTC , thread_cap_info = ("ThreadId 165",
| | F |          0, False)}
| | F |          
| | | S          
| E |            
| S |            Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| S |            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S |            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 2
| S |            , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| S |            = 2 , total_length = 12} , self = 98 , parent = Nothing , duration = 0.560681209000
| S |            , status = Success , start = 2025-09-04 07:32:24.191868272 UTC , finish
| S |            = 2025-09-04 07:32:24.752549481 UTC , thread_cap_info = ("ThreadId 186",
| S |            0, False)}
| S |            
| | F            
| | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F            = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | F            = 64} , self = 95 , parent = Nothing , duration = 0.331050381000 , status
| | F            = Fail , start = 2025-09-04 07:32:24.22904792 UTC , finish = 2025-09-04
| | F            07:32:24.560098301 UTC , thread_cap_info = ("ThreadId 187", 0, False)}
| | F            
| | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | F          = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | F          = 64} , self = 96 , parent = Nothing , duration = 0.325607918000 , status
| | | F          = Fail , start = 2025-09-04 07:32:24.24902487 UTC , finish = 2025-09-04
| | | F          07:32:24.574632788 UTC , thread_cap_info = ("ThreadId 189", 0, False)}
| | | F          
| | | | F        Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | F        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 2
| | | | F        , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| | | | F        = 2 , total_length = 12} , self = 97 , parent = Nothing , duration = 0.399740766000
| | | | F        , status = Fail , start = 2025-09-04 07:32:24.289285597 UTC , finish =
| | | | F        2025-09-04 07:32:24.689026363 UTC , thread_cap_info = ("ThreadId 191",
| | | | F        0, False)}
| | | | F        
| | | | | E      Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E      , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | E      , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | | | | E      = 4 , total_length = 50} , self = 103 , parent = Nothing , duration = 0.502665688000
| | | | | E      , status = Except "AsyncCancelled" , start = 2025-09-04 07:32:24.298807388
| | | | | E      UTC , finish = 2025-09-04 07:32:24.801473076 UTC , thread_cap_info = ("ThreadId
| | | | | E      192", 0, False)}
| | | | | E      
| | F | | |      
| |   F | |      
| |     F |      
| S       |      
S         |      
          E      
