[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 564 length 2731
last 670 length 3683
CNF 564 vars 2731 clauses
CNF 670 vars 3683 clauses
last 846 length 3725
last 82 length 313
CNF 82 vars 313 clauses
CNF 846 vars 3725 clauses
last 764 length 3423
last 174 length 671
CNF 174 vars 671 clauses
CNF 764 vars 3423 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1724, clauses: 7064
last 1724 length 7064
CNF 1724 vars 7064 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1724, clauses: 7064, status: Unsatisfied, time: 0.489072632s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13283, clauses: 55539
last 13283 length 55539
CNF 13283 vars 55539 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10702, clauses: 45157
last 10702 length 45157
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13283, clauses: 55539, status: Satisfied, time: 1.123493605s
CNF 10702 vars 45157 clauses
last 358 length 1558
last 419 length 1801
CNF 358 vars 1558 clauses
CNF 419 vars 1801 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10702, clauses: 45157, status: Satisfied, time: 1.222807285s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1214, clauses: 4737
last 1214 length 4737
CNF 1214 vars 4737 clauses
**************************************************
summary
**************************************************
SRS with 2 strict rules and 1 weak rules on 3 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 1 weak rules on 3 letters       split
2 sub-proofs
  1 SRS with 1 strict rules and 1 weak rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
  SRS with 9 strict rules and 9 weak rules on 9 letters       weights
  SRS with 0 strict rules and 3 weak rules on 5 letters       no strict rules

  2 SRS with 0 strict rules and 1 weak rules on 2 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, c, c, b, b] -> [b, b, a, a, b, b, a, a] {- Input 0 -}
  [a, a, a, a] -> [a, a, b, b, a, a] {- Input 1 -}
  [b, b] ->= [b, b, c, c] {- Input 2 -}
reason
  ( a
  , St  / 0A -2A - \
        | -  1A  - |
        \ -  -1A - / )
  ( b
  , St  / 0A  -   -1A \
        | -   -   -   |
        \ -1A -1A 1A  / )
  ( c
  , St  / 0A -  -1A \
        | -  0A 2A  |
        \ -  -  -   / )
   property Termination
has value Just True
for SRS
  [a, a, a, a] -> [a, a, b, b, a, a] {- Input 1 -}
  [b, b] ->= [b, b, c, c] {- Input 2 -}
reason
  split
   property Termination
has value Just True
for SRS
  [a, a, a, a] -> [a, a, b, b, a, a] {- Input 1 -}
  [b, b] ->= [b, b, c, c] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = False}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, a], [a, a], [a, a]] -> [ [a, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, a], [a, a], [a, a], [a, b]] -> [ [a, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, a], [a, a], [a, a], [a, c]] -> [ [a, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a], [a, a], [a, a], [a, a], [a, a]] -> [ [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, a], [a, a], [a, a], [a, b]] -> [ [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, a], [a, a], [a, a], [a, a], [a, c]] -> [ [b, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a], [a, a], [a, a], [a, a], [a, a]] -> [ [c, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [ a , a ] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, a], [a, a], [a, a], [a, a], [a, b]] -> [ [c, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [ a , b ] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, a], [a, a], [a, a], [a, a], [a, c]] -> [ [c, a] , [a, a] , [a, b] , [b, b] , [b, a] , [a, a] , [ a , c ] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, b], [b, b], [b, a]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b], [b, b], [b, b]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [c, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, b], [b, c]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [c, c] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, b], [b, b], [b, a]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, b], [b, b], [b, b]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [c, b] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, b], [b, b], [b, c]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [c, c] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, b], [b, b], [b, a]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, b], [b, b], [b, b]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [c, b] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, b], [b, b], [b, c]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [c, c] ] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  ([a, a], 3/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 1/1)
  ([b, b], 1/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
   property Termination
has value Just True
for SRS
  [[a, b], [b, b], [b, c]] ->= [ [a, b] , [b, b] , [b, c] , [c, c] , [c, c] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, b], [b, b], [b, c]] ->= [ [b, b] , [b, b] , [b, c] , [c, c] , [c, c] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, b], [b, b], [b, c]] ->= [ [c, b] , [b, b] , [b, c] , [c, c] , [c, c] ] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  no strict rules

property Termination
has value Just True
for SRS
  [b, b] ->= [b, b, c, c] {- Input 2 -}
reason
  no strict rules

**************************************************
skeleton: (2/1,3)\Matrix{\ArcticBZ}{3}(1/1,3)\Split[(1/1,3)\TileAllAll{2}(9/9,9)\Weight(0/3,5)[],(0/1,2)[]]
**************************************************
let {slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 2.819999486000
  min duration 2.819999486000
  total durat. 2.819999486000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 12
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 9
      , total_length = 228}
    , self = 87
    , parent = Nothing
    , duration = 2.819999486000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:40.079417177 UTC
    , finish = 2025-09-04 07:31:42.899416663 UTC
    , thread_cap_info = ("ThreadId 164", 2, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 3.289846160000
  min duration 0.059133737000
  total durat. 6.427856008000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 12
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 9
      , total_length = 228}
    , self = 90
    , parent = Nothing
    , duration = 3.078876111000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:39.96359074 UTC
    , finish = 2025-09-04 07:31:43.042466851 UTC
    , thread_cap_info = ("ThreadId 167", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 12
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 9
      , total_length = 228}
    , self = 89
    , parent = Nothing
    , duration = 3.289846160000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:39.694285286 UTC
    , finish = 2025-09-04 07:31:42.984131446 UTC
    , thread_cap_info = ("ThreadId 152", 2, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.059447273000
  min duration 3.059447273000
  total durat. 3.059447273000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 12
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 9
      , total_length = 228}
    , self = 88
    , parent = Nothing
    , duration = 3.059447273000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:39.86361606 UTC
    , finish = 2025-09-04 07:31:42.923063333 UTC
    , thread_cap_info = ("ThreadId 165", 2, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.360756987000
  min duration 3.183560886000
  total durat. 6.544317873000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 12
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 9
      , total_length = 228}
    , self = 92
    , parent = Nothing
    , duration = 3.183560886000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:39.979917913 UTC
    , finish = 2025-09-04 07:31:43.163478799 UTC
    , thread_cap_info = ("ThreadId 169", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 12
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 9
      , total_length = 228}
    , self = 91
    , parent = Nothing
    , duration = 3.360756987000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:39.699420032 UTC
    , finish = 2025-09-04 07:31:43.060177019 UTC
    , thread_cap_info = ("ThreadId 154", 2, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 6.963414081000
  min duration 6.963414081000
  total durat. 6.963414081000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 30}
    , self = 94
    , parent = Nothing
    , duration = 6.963414081000
    , status = Success
    , start = 2025-09-04 07:31:40.042591215 UTC
    , finish = 2025-09-04 07:31:47.006005296 UTC
    , thread_cap_info = ("ThreadId 171", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 4.779255950000
  min duration 4.779255950000
  total durat. 4.779255950000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 30}
    , self = 96
    , parent = Nothing
    , duration = 4.779255950000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:42.420167934 UTC
    , finish = 2025-09-04 07:31:47.199423884 UTC
    , thread_cap_info = ("ThreadId 174", 2, False)}
Success : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 4.613102290000
  min duration 4.613102290000
  total durat. 4.613102290000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 12
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 9
      , total_length = 228}
    , self = 110
    , parent = Nothing
    , duration = 4.613102290000
    , status = Success
    , start = 2025-09-04 07:31:43.101874928 UTC
    , finish = 2025-09-04 07:31:47.714977218 UTC
    , thread_cap_info = ("ThreadId 183", 2, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.506882078000
  min duration 1.506882078000
  total durat. 1.506882078000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 30}
    , self = 85
    , parent = Nothing
    , duration = 1.506882078000
    , status = Fail
    , start = 2025-09-04 07:31:40.063283568 UTC
    , finish = 2025-09-04 07:31:41.570165646 UTC
    , thread_cap_info = ("ThreadId 172", 2, False)}
Success : "Tiling\n { method = All\n , width = 2\n , state_type = Best\n , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = False}"
  total number 7
  max duration 1.771909800000
  min duration 0.000252349000
  total durat. 1.814188448000
  Info
    { what = "Tiling\n  { method = All\n  , width = 2\n  , state_type = Best\n  , map_type = Enum\n  , unlabel = Never\n  , print_completion_steps = False\n  , print_tiles = False\n  , max_num_tiles = Just 10000\n  , max_num_rules = Just 100000\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 12
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 9
      , total_length = 228}
    , self = 86
    , parent = Nothing
    , duration = 1.771909800000
    , status = Success
    , start = 2025-09-04 07:31:39.957248746 UTC
    , finish = 2025-09-04 07:31:41.729158546 UTC
    , thread_cap_info = ("ThreadId 166", 2, False)}
Success : "Unlabel\n { accept_null_strict = True\n , produce_null_strict = False\n , verbose = False\n , tracing = False}"
  total number 2
  max duration 1.836810908000
  min duration 0.000162681000
  total durat. 1.836973589000
  Info
    { what = "Unlabel\n  { accept_null_strict = True\n  , produce_null_strict = False\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 111
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 108
      , alphabet_size = 37
      , total_length = 1134}
    , self = 98
    , parent = Nothing
    , duration = 1.836810908000
    , status = Success
    , start = 2025-09-04 07:31:45.639797195 UTC
    , finish = 2025-09-04 07:31:47.476608103 UTC
    , thread_cap_info = ("ThreadId 184", 2, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 9
  max duration 3.042032062000
  min duration 0.000051211000
  total durat. 3.081820281000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 1701
      , num_strict_rules = 972
      , num_top_rules = 0
      , num_weak_rules = 729
      , alphabet_size = 81
      , total_length = 21870}
    , self = 93
    , parent = Nothing
    , duration = 3.042032062000
    , status = Success
    , start = 2025-09-04 07:31:42.463940988 UTC
    , finish = 2025-09-04 07:31:45.50597305 UTC
    , thread_cap_info = ("ThreadId 175", 2, False)}
**************************************************
F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                  = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
F                  = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size = 3 , total_length
F                  = 30} , self = 84 , parent = Nothing , duration = 0.231337616000 , status
F                  = Fail , start = 2025-09-04 07:31:39.609989897 UTC , finish = 2025-09-04
F                  07:31:39.841327513 UTC , thread_cap_info = ("ThreadId 137", 2, False)}
F                  
| F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| F                = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| F                = 30} , self = 82 , parent = Nothing , duration = 0.208184099000 , status
| F                = Fail , start = 2025-09-04 07:31:39.612338767 UTC , finish = 2025-09-04
| F                07:31:39.820522866 UTC , thread_cap_info = ("ThreadId 138", 2, False)}
| F                
| | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 1 , num_strict_rules
| | F              = 1 , num_top_rules = 1 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | F              = 6} , self = 81 , parent = Nothing , duration = 0.143654890000 , status
| | F              = Fail , start = 2025-09-04 07:31:39.676853927 UTC , finish = 2025-09-04
| | F              07:31:39.820508817 UTC , thread_cap_info = ("ThreadId 146", 2, False)}
| | F              
| | | E            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | E            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E            = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | | E            = 12 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 9 , total_length
| | | E            = 228} , self = 89 , parent = Nothing , duration = 3.289846160000 , status
| | | E            = Except "AsyncCancelled" , start = 2025-09-04 07:31:39.694285286 UTC ,
| | | E            finish = 2025-09-04 07:31:42.984131446 UTC , thread_cap_info = ("ThreadId
| | | E            152", 2, False)}
| | | E            
| | | | E          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E          = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | | | E          = 12 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 9 , total_length
| | | | E          = 228} , self = 91 , parent = Nothing , duration = 3.360756987000 , status
| | | | E          = Except "AsyncCancelled" , start = 2025-09-04 07:31:39.699420032 UTC ,
| | | | E          finish = 2025-09-04 07:31:43.060177019 UTC , thread_cap_info = ("ThreadId
| | | | E          154", 2, False)}
| | | | E          
| | F | |          
| F   | |          
F     | |          
E     | |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
E     | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E     | |          = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
E     | |          = 12 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 9 , total_length
E     | |          = 228} , self = 88 , parent = Nothing , duration = 3.059447273000 , status
E     | |          = Except "<<timeout>>" , start = 2025-09-04 07:31:39.86361606 UTC , finish
E     | |          = 2025-09-04 07:31:42.923063333 UTC , thread_cap_info = ("ThreadId 165",
E     | |          2, False)}
E     | |          
| S   | |          Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| S   | |          , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| S   | |          , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| S   | |          = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| S   | |          , cpf = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| S   | |          = 12 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 9 , total_length
| S   | |          = 228} , self = 86 , parent = Nothing , duration = 1.771909800000 , status
| S   | |          = Success , start = 2025-09-04 07:31:39.957248746 UTC , finish = 2025-09-04
| S   | |          07:31:41.729158546 UTC , thread_cap_info = ("ThreadId 166", 2, False)}
| S   | |          
| | E | |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E | |          = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | E | |          = 12 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 9 , total_length
| | E | |          = 228} , self = 90 , parent = Nothing , duration = 3.078876111000 , status
| | E | |          = Except "AsyncCancelled" , start = 2025-09-04 07:31:39.96359074 UTC ,
| | E | |          finish = 2025-09-04 07:31:43.042466851 UTC , thread_cap_info = ("ThreadId
| | E | |          167", 2, False)}
| | E | |          
| | | | | E        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E        = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | | | | E        = 12 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 9 , total_length
| | | | | E        = 228} , self = 92 , parent = Nothing , duration = 3.183560886000 , status
| | | | | E        = Except "AsyncCancelled" , start = 2025-09-04 07:31:39.979917913 UTC ,
| | | | | E        finish = 2025-09-04 07:31:43.163478799 UTC , thread_cap_info = ("ThreadId
| | | | | E        169", 2, False)}
| | | | | E        
| | | | | | S      Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | S      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | | S      , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| | | | | | S      = 3 , total_length = 30} , self = 94 , parent = Nothing , duration = 6.963414081000
| | | | | | S      , status = Success , start = 2025-09-04 07:31:40.042591215 UTC , finish
| | | | | | S      = 2025-09-04 07:31:47.006005296 UTC , thread_cap_info = ("ThreadId 171",
| | | | | | S      2, False)}
| | | | | | S      
| | | | | | | F    Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | | F    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | F    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | F    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | | | F    , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| | | | | | | F    = 3 , total_length = 30} , self = 85 , parent = Nothing , duration = 1.506882078000
| | | | | | | F    , status = Fail , start = 2025-09-04 07:31:40.063283568 UTC , finish =
| | | | | | | F    2025-09-04 07:31:41.570165646 UTC , thread_cap_info = ("ThreadId 172",
| | | | | | | F    2, False)}
| | | | | | | F    
| | | | | | | | E  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | | | | | | | E  = 12 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 9 , total_length
| | | | | | | | E  = 228} , self = 87 , parent = Nothing , duration = 2.819999486000 , status
| | | | | | | | E  = Except "<<timeout>>" , start = 2025-09-04 07:31:40.079417177 UTC , finish
| | | | | | | | E  = 2025-09-04 07:31:42.899416663 UTC , thread_cap_info = ("ThreadId 164",
| | | | | | | | E  2, False)}
| | | | | | | | E  
| | | | | | | F |  
| S | | | | |   |  
| E | | | | |   |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| E | | | | |   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | | | | |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | | | | |   |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | | |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | | |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| E | | | | |   |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| E | | | | |   |  = 3 , total_length = 30} , self = 96 , parent = Nothing , duration = 4.779255950000
| E | | | | |   |  , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:42.420167934
| E | | | | |   |  UTC , finish = 2025-09-04 07:31:47.199423884 UTC , thread_cap_info = ("ThreadId
| E | | | | |   |  174", 2, False)}
| E | | | | |   |  
| | | | | | | S |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | | S |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | | S |  = Size { num_rules = 1701 , num_strict_rules = 972 , num_top_rules = 0
| | | | | | | S |  , num_weak_rules = 729 , alphabet_size = 81 , total_length = 21870} , self
| | | | | | | S |  = 93 , parent = Nothing , duration = 3.042032062000 , status = Success
| | | | | | | S |  , start = 2025-09-04 07:31:42.463940988 UTC , finish = 2025-09-04 07:31:45.50597305
| | | | | | | S |  UTC , thread_cap_info = ("ThreadId 175", 2, False)}
| | | | | | | S |  
| | | | | | | | E  
E | | | | | | |    
  | | E | | | |    
  | E   | | | |    
  |     E | | |    
S |       | | |    Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
S |       | | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
S |       | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
S |       | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S |       | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S |       | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 21
S |       | | |    , num_strict_rules = 12 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size
S |       | | |    = 9 , total_length = 228} , self = 110 , parent = Nothing , duration =
S |       | | |    4.613102290000 , status = Success , start = 2025-09-04 07:31:43.101874928
S |       | | |    UTC , finish = 2025-09-04 07:31:47.714977218 UTC , thread_cap_info = ("ThreadId
S |       | | |    183", 2, False)}
S |       | | |    
| |       E | |    
| |         | S    
| | S       |      Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
| | S       |      = False\n , verbose = False\n , tracing = False}" , input_size = Size {
| | S       |      num_rules = 111 , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules
| | S       |      = 108 , alphabet_size = 37 , total_length = 1134} , self = 98 , parent
| | S       |      = Nothing , duration = 1.836810908000 , status = Success , start = 2025-09-04
| | S       |      07:31:45.639797195 UTC , finish = 2025-09-04 07:31:47.476608103 UTC , thread_cap_info
| | S       |      = ("ThreadId 184", 2, False)}
| | S       |      
| | |       S      
| E |              
|   S              
| F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
| F                = 1 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| F                = 16} , self = 109 , parent = Nothing , duration = 0.121466553000 , status
| F                = Fail , start = 2025-09-04 07:31:47.543686823 UTC , finish = 2025-09-04
| F                07:31:47.665153376 UTC , thread_cap_info = ("ThreadId 199", 2, False)}
| F                
| | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
| | F              = 1 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | F              = 16} , self = 108 , parent = Nothing , duration = 0.108883035000 , status
| | F              = Fail , start = 2025-09-04 07:31:47.556258816 UTC , finish = 2025-09-04
| | F              07:31:47.665141851 UTC , thread_cap_info = ("ThreadId 200", 2, False)}
| | F              
| | F              
| F                
S                  
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1214, clauses: 4737, status: Satisfied, time: 1.386421775s
