[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 590 length 2860
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 702 length 3735
CNF 702 vars 3735 clauses
last 572 length 2638
last 1086 length 5027
last 1254 length 5991
last 387 length 1764
CNF 590 vars 2860 clauses
CNF 1254 vars 5991 clauses
CNF 572 vars 2638 clauses
CNF 387 vars 1764 clauses
CNF 1086 vars 5027 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1060, clauses: 3802
last 1060 length 3802
CNF 1060 vars 3802 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1060, clauses: 3802, status: Unsatisfied, time: 0.012290867s
last 1755 length 8321
last 1816 length 8389
CNF 1755 vars 8321 clauses
CNF 1816 vars 8389 clauses
last 1784 length 9165
CNF 1784 vars 9165 clauses
last 1922 length 10255
last 1129 length 5333
CNF 1129 vars 5333 clauses
CNF 1922 vars 10255 clauses
last 1403 length 7197
CNF 1403 vars 7197 clauses
last 4327 length 20843
CNF 4327 vars 20843 clauses
last 4655 length 20702
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1950, clauses: 8099
last 1950 length 8099
CNF 4655 vars 20702 clauses
CNF 1950 vars 8099 clauses
last 4327 length 20843
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1950, clauses: 8099, status: Unsatisfied, time: 1.141584206s
last 4655 length 20702
last 4655 length 20702
last 4327 length 20843
CNF 4327 vars 20843 clauses
CNF 4655 vars 20702 clauses
CNF 4327 vars 20843 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6011, clauses: 26117
last 6011 length 26117
CNF 6011 vars 26117 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6011, clauses: 26117, status: Satisfied, time: 1.592203678s
last 3572 length 16925
CNF 3572 vars 16925 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15712, clauses: 65910
last 15712 length 65910
last 3469 length 15795
CNF 15712 vars 65910 clauses
CNF 3469 vars 15795 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15712, clauses: 65910, status: Unsatisfied, time: 5.370199381s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5277, clauses: 22659
last 5277 length 22659
CNF 5277 vars 22659 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5277, clauses: 22659, status: Unsatisfied, time: 0.344431641s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7336, clauses: 30919
last 7336 length 30919
CNF 7336 vars 30919 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 37719, clauses: 160005
last 37719 length 160005
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7336, clauses: 30919, status: Unsatisfied, time: 1.471225621s
CNF 37719 vars 160005 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19444, clauses: 85069
last 19444 length 85069
CNF 19444 vars 85069 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 2, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9564, clauses: 45978
last 9564 length 45978
CNF 9564 vars 45978 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19444, clauses: 85069, status: Satisfied, time: 2.623227033s
Matrix {monotone = Strict, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26032, clauses: 122369
last 26032 length 122369
**************************************************
summary
**************************************************
SRS with 2 strict rules and 1 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 8 strict rules and 4 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 6 strict rules and 4 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 4 weak rules on 4 letters       split
2 sub-proofs
  1 SRS with 4 strict rules and 4 weak rules on 4 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
  SRS with 64 strict rules and 64 weak rules on 13 letters       weights
  SRS with 0 strict rules and 64 weak rules on 13 letters       no strict rules

  2 SRS with 0 strict rules and 4 weak rules on 4 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, b, a, a, b, a, b] -> [b, a, b, b, a, b, b] {- Input 0 -}
  [b, b, b] -> [b, b, a, b, b] {- Input 1 -}
  [b, a, b] ->= [b, a, b, a, a, b] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[b, b], [b, b], [b, a], [a, a], [a, b], [b, a], [a, b], [b, b]] -> [ [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[b, b], [b, b], [b, a], [a, a], [a, b], [b, a], [a, b], [b, a]] -> [ [b, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, b], [b, b], [b, a], [a, a], [a, b], [b, a], [a, b], [b, b]] -> [ [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[a, b], [b, b], [b, a], [a, a], [a, b], [b, a], [a, b], [b, a]] -> [ [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, b], [b, b], [b, b], [b, b]] -> [ [b, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, b], [b, b], [b, b], [b, a]] -> [ [b, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, b], [b, b], [b, b], [b, b]] -> [ [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, b], [b, b], [b, b], [b, a]] -> [ [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, b], [b, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, b], [b, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[a, b], [b, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 2 0 \
                | 0 0 2 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[a, b], [b, b], [b, a], [a, a], [a, b], [b, a], [a, b], [b, b]] -> [ [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[a, b], [b, b], [b, a], [a, a], [a, b], [b, a], [a, b], [b, a]] -> [ [a, b] , [b, a] , [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, b], [b, b], [b, b], [b, b]] -> [ [b, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, b], [b, b], [b, b], [b, a]] -> [ [b, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, b], [b, b], [b, b], [b, b]] -> [ [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, b], [b, b], [b, b], [b, a]] -> [ [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, b], [b, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, b], [b, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[a, b], [b, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 0 \
                | 0 0 0 0 |
                | 0 0 1 0 |
                \ 0 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 1 0 0 \
                | 0 1 1 3 |
                | 0 1 1 0 |
                \ 0 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 0 \
                | 0 1 0 0 |
                | 0 0 1 0 |
                \ 0 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 0 1 0 \
                | 0 0 0 0 |
                | 0 0 1 0 |
                \ 0 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[b, b], [b, b], [b, b], [b, b]] -> [ [b, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, b], [b, b], [b, b], [b, a]] -> [ [b, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, b], [b, b], [b, b], [b, b]] -> [ [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, b], [b, b], [b, b], [b, a]] -> [ [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, b], [b, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, b], [b, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[a, b], [b, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  split
   property Termination
has value Just True
for SRS
  [[b, b], [b, b], [b, b], [b, b]] -> [ [b, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, b], [b, b], [b, b], [b, a]] -> [ [b, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, b], [b, b], [b, b], [b, b]] -> [ [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, b], [b, b], [b, b], [b, a]] -> [ [a, b] , [b, b] , [b, a] , [a, b] , [b, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, b], [b, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, b], [b, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[a, b], [b, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, b]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, a]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, b]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, a]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, b]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, a]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, b]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, a]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 0 (Concon 0 (Input 1)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, b]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, a]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] ] -> [ [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, b]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, a]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] ] -> [ [[b, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, b]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, a]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] ] -> [ [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, b]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, a]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] ] -> [ [[a, a], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 0 (Concon 1 (Input 1)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] ] -> [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] ] -> [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, b]] ] -> [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, a]] ] -> [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] ] -> [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] ] -> [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, b]] ] -> [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, a]] ] -> [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] ] -> [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] ] -> [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, b]] ] -> [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, a]] ] -> [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] ] -> [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] ] -> [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, b]] ] -> [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [a, a]] ] -> [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 0 (Input 1)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, b]] ] -> [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, a]] ] -> [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] ] -> [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] ] -> [ [[b, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, b]] ] -> [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, a]] ] -> [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] ] -> [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] ] -> [ [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, b]] ] -> [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, a]] ] -> [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] ] -> [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] ] -> [ [[a, b], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, b]] ] -> [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [b, a]] ] -> [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] ] -> [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, a]] ] -> [ [[a, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 1 (Input 1)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 1 (Input 2)))) -}
CNF 26032 vars 122369 clauses
reason
  ([[a, a], [a, b]], 0/1)
  ([[a, a], [b, b]], 0/1)
  ([[a, b], [a, b]], 0/1)
  ([[a, b], [b, a]], 0/1)
  ([[a, b], [b, b]], 0/1)
  ([[b, a], [a, a]], 0/1)
  ([[b, a], [a, b]], 0/1)
  ([[b, a], [b, a]], 0/1)
  ([[b, a], [b, b]], 0/1)
  ([[b, b], [a, a]], 0/1)
  ([[b, b], [a, b]], 0/1)
  ([[b, b], [b, a]], 0/1)
  ([[b, b], [b, b]], 1/1)
   property Termination
has value Just True
for SRS
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 0 (Concon 0 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[b, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[b, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[a, b], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[a, a], [b, b]] , [[b, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 0 (Concon 1 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [b, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, b]] , [[b, b], [a, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, b]] , [ [b, b] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 0 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 0 (Concon 0 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 0 (Concon 1 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 0 (Concon 2 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[b, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 0 (Concon 3 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 1 (Concon 0 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 1 (Concon 1 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 1 (Concon 2 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 1 (Concon 3 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 2 (Concon 0 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 2 (Concon 1 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 2 (Concon 2 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[a, b], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 2 (Concon 3 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , b ] ] ] {- Semlab 3 (Concon 0 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [b, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ b , a ] ] ] {- Semlab 3 (Concon 1 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , b ] ] ] {- Semlab 3 (Concon 2 (Semlab 1 (Concon 1 (Input 2)))) -}
  [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] ] ->= [ [[a, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, b]] , [[a, b], [b, a]] , [[b, a], [a, a]] , [[a, a], [a, b]] , [[a, b], [b, a]] , [ [b, a] , [ a , a ] ] ] {- Semlab 3 (Concon 3 (Semlab 1 (Concon 1 (Input 2)))) -}
reason
  no strict rules

property Termination
has value Just True
for SRS
  [[b, b], [b, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, b], [b, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[a, b], [b, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, b] , [b, a] , [a, a] , [a, b] , [ b , a ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  no strict rules

**************************************************
skeleton: (2/1,2)\TileAllAll{2}(8/4,4)\Matrix{\Natural}{3}(6/4,4)\Matrix{\Natural}{4}(4/4,4)\Split[(4/4,4)\TileAllAll{2}(64/64,13)\Weight(0/64,13)[],(0/4,4)[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))last 5284 length 34974
CNF 5284 vars 34974 clauses
last 6281 length 59492
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 6281 vars 59492 clauses

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 2.850247173000
  min duration 0.145484008000
  total durat. 5.902724015000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 116}
    , self = 116
    , parent = Nothing
    , duration = 1.228591899000
    , status = Fail
    , start = 2025-09-04 07:32:26.668469803 UTC
    , finish = 2025-09-04 07:32:27.897061702 UTC
    , thread_cap_info = ("ThreadId 214", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 148}
    , self = 95
    , parent = Nothing
    , duration = 2.850247173000
    , status = Fail
    , start = 2025-09-04 07:32:21.023946949 UTC
    , finish = 2025-09-04 07:32:23.874194122 UTC
    , thread_cap_info = ("ThreadId 157", 3, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 6.039575331000
  min duration 0.215825751000
  total durat. 15.882294635000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 148}
    , self = 97
    , parent = Nothing
    , duration = 3.114352827000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:32:21.296152685 UTC
    , finish = 2025-09-04 07:32:24.410505512 UTC
    , thread_cap_info = ("ThreadId 169", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 192
      , num_strict_rules = 128
      , num_top_rules = 0
      , num_weak_rules = 64
      , alphabet_size = 13
      , total_length = 2752}
    , self = 99
    , parent = Nothing
    , duration = 3.219499157000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:32:21.591322359 UTC
    , finish = 2025-09-04 07:32:24.810821516 UTC
    , thread_cap_info = ("ThreadId 177", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 148}
    , self = 101
    , parent = Nothing
    , duration = 3.293041569000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:32:21.671408771 UTC
    , finish = 2025-09-04 07:32:24.96445034 UTC
    , thread_cap_info = ("ThreadId 181", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 160
      , num_strict_rules = 96
      , num_top_rules = 0
      , num_weak_rules = 64
      , alphabet_size = 13
      , total_length = 2176}
    , self = 118
    , parent = Nothing
    , duration = 6.039575331000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:32:26.928884749 UTC
    , finish = 2025-09-04 07:32:32.96846008 UTC
    , thread_cap_info = ("ThreadId 220", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.689415436000
  min duration 0.140380271000
  total durat. 4.943613022000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 148}
    , self = 94
    , parent = Nothing
    , duration = 1.689415436000
    , status = Fail
    , start = 2025-09-04 07:32:21.028859919 UTC
    , finish = 2025-09-04 07:32:22.718275355 UTC
    , thread_cap_info = ("ThreadId 158", 3, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 6.077380730000
  min duration 0.217304099000
  total durat. 16.213634660000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 148}
    , self = 98
    , parent = Nothing
    , duration = 3.276794244000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:32:21.311924524 UTC
    , finish = 2025-09-04 07:32:24.588718768 UTC
    , thread_cap_info = ("ThreadId 171", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 192
      , num_strict_rules = 128
      , num_top_rules = 0
      , num_weak_rules = 64
      , alphabet_size = 13
      , total_length = 2752}
    , self = 100
    , parent = Nothing
    , duration = 3.277596106000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:32:21.612945317 UTC
    , finish = 2025-09-04 07:32:24.890541423 UTC
    , thread_cap_info = ("ThreadId 179", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 148}
    , self = 102
    , parent = Nothing
    , duration = 3.364559481000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:32:21.692700553 UTC
    , finish = 2025-09-04 07:32:25.057260034 UTC
    , thread_cap_info = ("ThreadId 183", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 160
      , num_strict_rules = 96
      , num_top_rules = 0
      , num_weak_rules = 64
      , alphabet_size = 13
      , total_length = 2176}
    , self = 119
    , parent = Nothing
    , duration = 6.077380730000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:32:26.951224442 UTC
    , finish = 2025-09-04 07:32:33.028605172 UTC
    , thread_cap_info = ("ThreadId 222", 3, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 11.078662813000
  min duration 11.078662813000
  total durat. 11.078662813000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 1
      , alphabet_size = 2
      , total_length = 31}
    , self = 117
    , parent = Nothing
    , duration = 11.078662813000
    , status = Fail
    , start = 2025-09-04 07:32:21.714873517 UTC
    , finish = 2025-09-04 07:32:32.79353633 UTC
    , thread_cap_info = ("ThreadId 185", 0, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 9.022336312000
  min duration 9.022336312000
  total durat. 9.022336312000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 116}
    , self = 122
    , parent = Nothing
    , duration = 9.022336312000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:32:27.648627428 UTC
    , finish = 2025-09-04 07:32:36.67096374 UTC
    , thread_cap_info = ("ThreadId 227", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.878180682000
  min duration 3.878180682000
  total durat. 3.878180682000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 148}
    , self = 105
    , parent = Nothing
    , duration = 3.878180682000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:32:22.772547173 UTC
    , finish = 2025-09-04 07:32:26.650727855 UTC
    , thread_cap_info = ("ThreadId 189", 3, False)}
Except "<<timeout>>" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 13.505732024000
  min duration 12.003386391000
  total durat. 25.509118415000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 116}
    , self = 124
    , parent = Nothing
    , duration = 12.003386391000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:32:33.510580974 UTC
    , finish = 2025-09-04 07:32:45.513967365 UTC
    , thread_cap_info = ("ThreadId 234", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 1
      , alphabet_size = 2
      , total_length = 31}
    , self = 123
    , parent = Nothing
    , duration = 13.505732024000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:32:24.430153709 UTC
    , finish = 2025-09-04 07:32:37.935885733 UTC
    , thread_cap_info = ("ThreadId 195", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = Arctic\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.682340364000
  min duration 1.682340364000
  total durat. 1.682340364000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Arctic\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 5\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 116}
    , self = 127
    , parent = Nothing
    , duration = 1.682340364000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:32:45.514000004 UTC
    , finish = 2025-09-04 07:32:47.196340368 UTC
    , thread_cap_info = ("ThreadId 244", 3, False)}
Success : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.659004148000
  min duration 2.659004148000
  total durat. 2.659004148000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 8
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 148}
    , self = 103
    , parent = Nothing
    , duration = 2.659004148000
    , status = Success
    , start = 2025-09-04 07:32:23.968455169 UTC
    , finish = 2025-09-04 07:32:26.627459317 UTC
    , thread_cap_info = ("ThreadId 191", 3, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 5.497354286000
  min duration 2.025043685000
  total durat. 7.522397971000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 1
      , alphabet_size = 2
      , total_length = 31}
    , self = 96
    , parent = Nothing
    , duration = 2.025043685000
    , status = Fail
    , start = 2025-09-04 07:32:22.349250953 UTC
    , finish = 2025-09-04 07:32:24.374294638 UTC
    , thread_cap_info = ("ThreadId 186", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 116}
    , self = 120
    , parent = Nothing
    , duration = 5.497354286000
    , status = Fail
    , start = 2025-09-04 07:32:27.992769575 UTC
    , finish = 2025-09-04 07:32:33.490123861 UTC
    , thread_cap_info = ("ThreadId 228", 3, False)}
Success : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 10.468734755000
  min duration 10.468734755000
  total durat. 10.468734755000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 116}
    , self = 125
    , parent = Nothing
    , duration = 10.468734755000
    , status = Success
    , start = 2025-09-04 07:32:36.691041623 UTC
    , finish = 2025-09-04 07:32:47.159776378 UTC
    , thread_cap_info = ("ThreadId 240", 3, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.279904360000
  min duration 3.279904360000
  total durat. 3.279904360000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 1
      , alphabet_size = 2
      , total_length = 31}
    , self = 121
    , parent = Nothing
    , duration = 3.279904360000
    , status = Fail
    , start = 2025-09-04 07:32:32.849302147 UTC
    , finish = 2025-09-04 07:32:36.129206507 UTC
    , thread_cap_info = ("ThreadId 231", 0, False)}
**************************************************
E                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                    = True}" , input_size = Size { num_rules = 1 , num_strict_rules = 1 , num_top_rules
E                    = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 9} , self
E                    = 58 , parent = Nothing , duration = 0.218915409000 , status = Except "AsyncCancelled"
E                    , start = 2025-09-04 07:32:20.551689799 UTC , finish = 2025-09-04 07:32:20.770605208
E                    UTC , thread_cap_info = ("ThreadId 20", 2, False)}
E                    
| E                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E                  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| E                  = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| E                  = 44} , self = 64 , parent = Nothing , duration = 0.215825751000 , status
| E                  = Except "AsyncCancelled" , start = 2025-09-04 07:32:20.556452432 UTC ,
| E                  finish = 2025-09-04 07:32:20.772278183 UTC , thread_cap_info = ("ThreadId
| E                  64", 1, False)}
| E                  
| | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | F                = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | F                = 55} , self = 75 , parent = Nothing , duration = 0.467067485000 , status
| | F                = Fail , start = 2025-09-04 07:32:20.556821038 UTC , finish = 2025-09-04
| | F                07:32:21.023888523 UTC , thread_cap_info = ("ThreadId 71", 3, False)}
| | F                
| | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
| | | F              = 1 , num_top_rules = 1 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | F              = 18} , self = 61 , parent = Nothing , duration = 0.214086747000 , status
| | | F              = Fail , start = 2025-09-04 07:32:20.557428911 UTC , finish = 2025-09-04
| | | F              07:32:20.771515658 UTC , thread_cap_info = ("ThreadId 88", 0, False)}
| | | F              
| | | | E            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E            = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | E            = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | E            = 44} , self = 66 , parent = Nothing , duration = 0.217304099000 , status
| | | | E            = Except "AsyncCancelled" , start = 2025-09-04 07:32:20.57126894 UTC ,
| | | | E            finish = 2025-09-04 07:32:20.788573039 UTC , thread_cap_info = ("ThreadId
| | | | E            66", 1, False)}
| | | | E            
| | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
| | | | | F          = 1 , num_top_rules = 1 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | | F          = 18} , self = 57 , parent = Nothing , duration = 0.165559385000 , status
| | | | | F          = Fail , start = 2025-09-04 07:32:20.571273996 UTC , finish = 2025-09-04
| | | | | F          07:32:20.736833381 UTC , thread_cap_info = ("ThreadId 89", 0, False)}
| | | | | F          
| | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | F        = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | | | | F        = 55} , self = 85 , parent = Nothing , duration = 0.704089277000 , status
| | | | | | F        = Fail , start = 2025-09-04 07:32:20.571274217 UTC , finish = 2025-09-04
| | | | | | F        07:32:21.275363494 UTC , thread_cap_info = ("ThreadId 72", 3, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
| | | | | | | F      = 1 , num_top_rules = 1 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | | | | F      = 15} , self = 63 , parent = Nothing , duration = 0.145484008000 , status
| | | | | | | F      = Fail , start = 2025-09-04 07:32:20.626583224 UTC , finish = 2025-09-04
| | | | | | | F      07:32:20.772067232 UTC , thread_cap_info = ("ThreadId 109", 0, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
| | | | | | | | F    = 1 , num_top_rules = 1 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | | | | | F    = 15} , self = 62 , parent = Nothing , duration = 0.140380271000 , status
| | | | | | | | F    = Fail , start = 2025-09-04 07:32:20.631660863 UTC , finish = 2025-09-04
| | | | | | | | F    07:32:20.772041134 UTC , thread_cap_info = ("ThreadId 110", 0, False)}
| | | | | | | | F    
| | | | | F | | |    
| | | | | F | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | F | | |    = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | | | F | | |    = 60} , self = 78 , parent = Nothing , duration = 0.318758885000 , status
| | | | | F | | |    = Fail , start = 2025-09-04 07:32:20.7520992 UTC , finish = 2025-09-04
| | | | | F | | |    07:32:21.070858085 UTC , thread_cap_info = ("ThreadId 117", 3, False)}
| | | | | F | | |    
E | | | | | | | |    
F | | | | | | | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
F | | | | | | | |    = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size = 5 , total_length
F | | | | | | | |    = 60} , self = 83 , parent = Nothing , duration = 0.425284810000 , status
F | | | | | | | |    = Fail , start = 2025-09-04 07:32:20.770620811 UTC , finish = 2025-09-04
F | | | | | | | |    07:32:21.195905621 UTC , thread_cap_info = ("ThreadId 118", 3, False)}
F | | | | | | | |    
| | | F | | | | |    
| | |   | | | | F    
| | |   | | | F      
| E |   | | |        
|   |   E | |        
| S |     | |        Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| S |     | |        , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| S |     | |        , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| S |     | |        = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| S |     | |        , cpf = True}" , input_size = Size { num_rules = 3 , num_strict_rules =
| S |     | |        2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size = 2 , total_length
| S |     | |        = 31} , self = 72 , parent = Nothing , duration = 0.104900984000 , status
| S |     | |        = Success , start = 2025-09-04 07:32:20.870612508 UTC , finish = 2025-09-04
| S |     | |        07:32:20.975513492 UTC , thread_cap_info = ("ThreadId 140", 0, False)}
| S |     | |        
| | | F   | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F   | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F   | |        = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | F   | |        = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size = 2 , total_length
| | | F   | |        = 31} , self = 91 , parent = Nothing , duration = 0.678487818000 , status
| | | F   | |        = Fail , start = 2025-09-04 07:32:20.891574914 UTC , finish = 2025-09-04
| | | F   | |        07:32:21.570062732 UTC , thread_cap_info = ("ThreadId 141", 0, False)}
| | | F   | |        
| | | | F | |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | |        = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | F | |        = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size = 2 , total_length
| | | | F | |        = 31} , self = 93 , parent = Nothing , duration = 0.920597836000 , status
| | | | F | |        = Fail , start = 2025-09-04 07:32:20.913700091 UTC , finish = 2025-09-04
| | | | F | |        07:32:21.834297927 UTC , thread_cap_info = ("ThreadId 142", 0, False)}
| | | | F | |        
| S | | | | |        
|   F | | | |        
| F   | | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| F   | | | |        = 8 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| F   | | | |        = 148} , self = 95 , parent = Nothing , duration = 2.850247173000 , status
| F   | | | |        = Fail , start = 2025-09-04 07:32:21.023946949 UTC , finish = 2025-09-04
| F   | | | |        07:32:23.874194122 UTC , thread_cap_info = ("ThreadId 157", 3, False)}
| F   | | | |        
| | F | | | |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F | | | |        = 8 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | F | | | |        = 148} , self = 94 , parent = Nothing , duration = 1.689415436000 , status
| | F | | | |        = Fail , start = 2025-09-04 07:32:21.028859919 UTC , finish = 2025-09-04
| | F | | | |        07:32:22.718275355 UTC , thread_cap_info = ("ThreadId 158", 3, False)}
| | F | | | |        
| | | | | F |        
| | | | | F |        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | F |        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | F |        = Size { num_rules = 192 , num_strict_rules = 128 , num_top_rules = 0 ,
| | | | | F |        num_weak_rules = 64 , alphabet_size = 13 , total_length = 2752} , self
| | | | | F |        = 84 , parent = Nothing , duration = 0.161383576000 , status = Fail , start
| | | | | F |        = 2025-09-04 07:32:21.077226257 UTC , finish = 2025-09-04 07:32:21.238609833
| | | | | F |        UTC , thread_cap_info = ("ThreadId 161", 3, False)}
| | | | | F |        
F | | | | | |        
  | | | | F |        
  | | | |   F        
E | | | |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E | | | |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E | | | |            = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
E | | | |            = 8 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
E | | | |            = 148} , self = 97 , parent = Nothing , duration = 3.114352827000 , status
E | | | |            = Except "AsyncCancelled" , start = 2025-09-04 07:32:21.296152685 UTC ,
E | | | |            finish = 2025-09-04 07:32:24.410505512 UTC , thread_cap_info = ("ThreadId
E | | | |            169", 0, False)}
E | | | |            
| | | | | E          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E          = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | E          = 8 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | E          = 148} , self = 98 , parent = Nothing , duration = 3.276794244000 , status
| | | | | E          = Except "AsyncCancelled" , start = 2025-09-04 07:32:21.311924524 UTC ,
| | | | | E          finish = 2025-09-04 07:32:24.588718768 UTC , thread_cap_info = ("ThreadId
| | | | | E          171", 0, False)}
| | | | | E          
| | | F | |          
| | | E | |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | E | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E | |          = False\n , verbose = False}" , input_size = Size { num_rules = 192 , num_strict_rules
| | | E | |          = 128 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 13 ,
| | | E | |          total_length = 2752} , self = 99 , parent = Nothing , duration = 3.219499157000
| | | E | |          , status = Except "AsyncCancelled" , start = 2025-09-04 07:32:21.591322359
| | | E | |          UTC , finish = 2025-09-04 07:32:24.810821516 UTC , thread_cap_info = ("ThreadId
| | | E | |          177", 3, False)}
| | | E | |          
| | | | | | E        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | E        = False\n , verbose = False}" , input_size = Size { num_rules = 192 , num_strict_rules
| | | | | | E        = 128 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 13 ,
| | | | | | E        total_length = 2752} , self = 100 , parent = Nothing , duration = 3.277596106000
| | | | | | E        , status = Except "AsyncCancelled" , start = 2025-09-04 07:32:21.612945317
| | | | | | E        UTC , finish = 2025-09-04 07:32:24.890541423 UTC , thread_cap_info = ("ThreadId
| | | | | | E        179", 3, False)}
| | | | | | E        
| | | | | | | E      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | E      = 8 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | E      = 148} , self = 101 , parent = Nothing , duration = 3.293041569000 , status
| | | | | | | E      = Except "AsyncCancelled" , start = 2025-09-04 07:32:21.671408771 UTC ,
| | | | | | | E      finish = 2025-09-04 07:32:24.96445034 UTC , thread_cap_info = ("ThreadId
| | | | | | | E      181", 0, False)}
| | | | | | | E      
| | | | | | | | E    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | E    = 8 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | | E    = 148} , self = 102 , parent = Nothing , duration = 3.364559481000 , status
| | | | | | | | E    = Except "AsyncCancelled" , start = 2025-09-04 07:32:21.692700553 UTC ,
| | | | | | | | E    finish = 2025-09-04 07:32:25.057260034 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E    183", 0, False)}
| | | | | | | | E    
| | | | | | | | | F  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | | | | F  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | | | | | F  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| | | | | | | | | F  = 2 , total_length = 31} , self = 117 , parent = Nothing , duration = 11.078662813000
| | | | | | | | | F  , status = Fail , start = 2025-09-04 07:32:21.714873517 UTC , finish =
| | | | | | | | | F  2025-09-04 07:32:32.79353633 UTC , thread_cap_info = ("ThreadId 185", 0,
| | | | | | | | | F  False)}
| | | | | | | | | F  
| | | | F | | | | |  
| | | | F | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | F | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | F | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| | | | F | | | | |  = 2 , total_length = 31} , self = 96 , parent = Nothing , duration = 2.025043685000
| | | | F | | | | |  , status = Fail , start = 2025-09-04 07:32:22.349250953 UTC , finish =
| | | | F | | | | |  2025-09-04 07:32:24.374294638 UTC , thread_cap_info = ("ThreadId 186",
| | | | F | | | | |  0, False)}
| | | | F | | | | |  
| | F | | | | | | |  
| | E | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | E | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | E | | | | | | |  , num_strict_rules = 8 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | E | | | | | | |  = 4 , total_length = 148} , self = 105 , parent = Nothing , duration =
| | E | | | | | | |  3.878180682000 , status = Except "AsyncCancelled" , start = 2025-09-04
| | E | | | | | | |  07:32:22.772547173 UTC , finish = 2025-09-04 07:32:26.650727855 UTC , thread_cap_info
| | E | | | | | | |  = ("ThreadId 189", 3, False)}
| | E | | | | | | |  
| F | | | | | | | |  
| S | | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| S | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| S | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| S | | | | | | | |  , num_strict_rules = 8 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| S | | | | | | | |  = 4 , total_length = 148} , self = 103 , parent = Nothing , duration =
| S | | | | | | | |  2.659004148000 , status = Success , start = 2025-09-04 07:32:23.968455169
| S | | | | | | | |  UTC , finish = 2025-09-04 07:32:26.627459317 UTC , thread_cap_info = ("ThreadId
| S | | | | | | | |  191", 3, False)}
| S | | | | | | | |  
| | | | F | | | | |  
E | | |   | | | | |  
E | | |   | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E | | |   | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | |   | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | |   | | | | |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | |   | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | |   | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
E | | |   | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
E | | |   | | | | |  = 2 , total_length = 31} , self = 123 , parent = Nothing , duration = 13.505732024000
E | | |   | | | | |  , status = Except "<<timeout>>" , start = 2025-09-04 07:32:24.430153709
E | | |   | | | | |  UTC , finish = 2025-09-04 07:32:37.935885733 UTC , thread_cap_info = ("ThreadId
E | | |   | | | | |  195", 0, False)}
E | | |   | | | | |  
| | | |   E | | | |  
| | | E     | | | |  
| | |       E | | |  
| | |         E | |  
| | |           E |  
| S |             |  
|   E             |  
| F               |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F               |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F               |  = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| F               |  = 6 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| F               |  = 116} , self = 116 , parent = Nothing , duration = 1.228591899000 , status
| F               |  = Fail , start = 2025-09-04 07:32:26.668469803 UTC , finish = 2025-09-04
| F               |  07:32:27.897061702 UTC , thread_cap_info = ("ThreadId 214", 3, False)}
| F               |  
| | F             |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F             |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F             |  = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | F             |  = 6 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | F             |  = 116} , self = 115 , parent = Nothing , duration = 0.898286007000 , status
| | F             |  = Fail , start = 2025-09-04 07:32:26.69157248 UTC , finish = 2025-09-04
| | F             |  07:32:27.589858487 UTC , thread_cap_info = ("ThreadId 215", 3, False)}
| | F             |  
| | | E           |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | E           |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E           |  = False\n , verbose = False}" , input_size = Size { num_rules = 160 , num_strict_rules
| | | E           |  = 96 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 13 , total_length
| | | E           |  = 2176} , self = 118 , parent = Nothing , duration = 6.039575331000 , status
| | | E           |  = Except "AsyncCancelled" , start = 2025-09-04 07:32:26.928884749 UTC ,
| | | E           |  finish = 2025-09-04 07:32:32.96846008 UTC , thread_cap_info = ("ThreadId
| | | E           |  220", 3, False)}
| | | E           |  
| | | | E         |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E         |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E         |  = False\n , verbose = False}" , input_size = Size { num_rules = 160 , num_strict_rules
| | | | E         |  = 96 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 13 , total_length
| | | | E         |  = 2176} , self = 119 , parent = Nothing , duration = 6.077380730000 , status
| | | | E         |  = Except "AsyncCancelled" , start = 2025-09-04 07:32:26.951224442 UTC ,
| | | | E         |  finish = 2025-09-04 07:32:33.028605172 UTC , thread_cap_info = ("ThreadId
| | | | E         |  222", 3, False)}
| | | | E         |  
| | F | |         |  
| | E | |         |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | E | |         |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | |         |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | |         |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | |         |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | |         |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | E | |         |  , num_strict_rules = 6 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | E | |         |  = 4 , total_length = 116} , self = 122 , parent = Nothing , duration =
| | E | |         |  9.022336312000 , status = Except "<<timeout>>" , start = 2025-09-04 07:32:27.648627428
| | E | |         |  UTC , finish = 2025-09-04 07:32:36.67096374 UTC , thread_cap_info = ("ThreadId
| | E | |         |  227", 3, False)}
| | E | |         |  
| F | | |         |  
| F | | |         |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| F | | |         |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | | |         |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | | |         |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | |         |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | |         |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| F | | |         |  , num_strict_rules = 6 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| F | | |         |  = 4 , total_length = 116} , self = 120 , parent = Nothing , duration =
| F | | |         |  5.497354286000 , status = Fail , start = 2025-09-04 07:32:27.992769575
| F | | |         |  UTC , finish = 2025-09-04 07:32:33.490123861 UTC , thread_cap_info = ("ThreadId
| F | | |         |  228", 3, False)}
| F | | |         |  
| | | | |         F  
| | | | | F          Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | F          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | F          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | F          , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | F          , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| | | | | F          = 2 , total_length = 31} , self = 121 , parent = Nothing , duration = 3.279904360000
| | | | | F          , status = Fail , start = 2025-09-04 07:32:32.849302147 UTC , finish =
| | | | | F          2025-09-04 07:32:36.129206507 UTC , thread_cap_info = ("ThreadId 231",
| | | | | F          0, False)}
| | | | | F          
| | | E | |          
| | |   E |          
| F |     |          
| E |     |          Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| E |     |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E |     |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E |     |          , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E |     |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E |     |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| E |     |          , num_strict_rules = 6 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| E |     |          = 4 , total_length = 116} , self = 124 , parent = Nothing , duration =
| E |     |          12.003386391000 , status = Except "<<timeout>>" , start = 2025-09-04 07:32:33.510580974
| E |     |          UTC , finish = 2025-09-04 07:32:45.513967365 UTC , thread_cap_info = ("ThreadId
| E |     |          234", 3, False)}
| E |     |          
| | |     F          
| | E                
| | S                Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | S                = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | S                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | S                , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | S                , num_strict_rules = 6 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | S                = 4 , total_length = 116} , self = 125 , parent = Nothing , duration =
| | S                10.468734755000 , status = Success , start = 2025-09-04 07:32:36.691041623
| | S                UTC , finish = 2025-09-04 07:32:47.159776378 UTC , thread_cap_info = ("ThreadId
| | S                240", 3, False)}
| | S                
E | |                
  E |                
E   |                Info { what = "Matrix\n { monotone = Strict\n , domain = Arctic\n , method
E   |                = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E   |                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E   |                , dim = 5\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E   |                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E   |                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
E   |                , num_strict_rules = 6 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
E   |                = 4 , total_length = 116} , self = 127 , parent = Nothing , duration =
E   |                1.682340364000 , status = Except "AsyncCancelled" , start = 2025-09-04
E   |                07:32:45.514000004 UTC , finish = 2025-09-04 07:32:47.196340368 UTC , thread_cap_info
E   |                = ("ThreadId 244", 3, False)}
E   |                
|   S                
E                    
S                    Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
S                    , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
S                    , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
S                    = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
S                    , cpf = True}" , input_size = Size { num_rules = 8 , num_strict_rules =
S                    4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
S                    = 84} , self = 132 , parent = Nothing , duration = 0.112944550000 , status
S                    = Success , start = 2025-09-04 07:32:47.196492528 UTC , finish = 2025-09-04
S                    07:32:47.309437078 UTC , thread_cap_info = ("ThreadId 256", 3, False)}
S                    
S                    
S                    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
S                    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
S                    = Size { num_rules = 128 , num_strict_rules = 64 , num_top_rules = 0 ,
S                    num_weak_rules = 64 , alphabet_size = 13 , total_length = 1600} , self
S                    = 133 , parent = Nothing , duration = 0.143458309000 , status = Success
S                    , start = 2025-09-04 07:32:47.341347585 UTC , finish = 2025-09-04 07:32:47.484805894
S                    UTC , thread_cap_info = ("ThreadId 259", 3, False)}
S                    
S                    
