[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 802 length 3771
last 507 length 2426
last 641 length 2959
CNF 641 vars 2959 clauses
last 970 length 5077
CNF 970 vars 5077 clauses
CNF 507 vars 2426 clauses
CNF 802 vars 3771 clauses
last 564 length 2687
last 1207 length 6062
last 689 length 3169
CNF 564 vars 2687 clauses
CNF 689 vars 3169 clauses
last 944 length 4381
last 2116 length 10937
CNF 1207 vars 6062 clauses
last 2146 length 9959
last 522 length 2319
last 874 length 3804
last 2218 length 11351
last 2242 length 10339
CNF 944 vars 4381 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4175, clauses: 15225
last 4464 length 19963
last 5996 length 26660
CNF 2116 vars 10937 clauses
CNF 2146 vars 9959 clauses
last 1207 length 6062
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9002, clauses: 37149
last 944 length 4381
CNF 522 vars 2319 clauses
CNF 874 vars 3804 clauses
CNF 2218 vars 11351 clauses
CNF 2242 vars 10339 clauses
last 4175 length 15225
CNF 5996 vars 26660 clauses
CNF 4464 vars 19963 clauses
last 9002 length 37149
CNF 1207 vars 6062 clauses
CNF 944 vars 4381 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2541, clauses: 9847
CNF 4175 vars 15225 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16619, clauses: 69015
CNF 9002 vars 37149 clauses
last 2541 length 9847
last 16619 length 69015
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4907, clauses: 18331
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4175, clauses: 15225, status: Unsatisfied, time: 0.779860248s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9002, clauses: 37149, status: Unsatisfied, time: 0.74971568s
CNF 2541 vars 9847 clauses
CNF 16619 vars 69015 clauses
last 4907 length 18331
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 32113, clauses: 132400
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2541, clauses: 9847, status: Unsatisfied, time: 0.662787124s
last 32113 length 132400
CNF 4907 vars 18331 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16619, clauses: 69015, status: Satisfied, time: 0.742030902s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4907, clauses: 18331, status: Satisfied, time: 0.503804377s
CNF 32113 vars 132400 clauses
last 592 length 2611
last 430 length 1899
CNF 592 vars 2611 clauses
CNF 430 vars 1899 clauses
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 9 strict rules and 18 weak rules on 9 letters       weights
SRS with 1 strict rules and 16 weak rules on 9 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 16 weak rules on 8 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, a] -> [] {- Input 0 -}
  [] ->= [a] {- Input 1 -}
  [] ->= [a, b, c] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, c]] -> [ [ a , c ] ] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, c]] -> [ [ b , c ] ] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ c , a ] ] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ c , b ] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, b], [b, b], [b, a], [a, c]] -> [ [ c , c ] ] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a]] ->= [[a, a], [a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [[a, a], [a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, c]] ->= [[a, a], [a, c]] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a]] ->= [[b, a], [a, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [[b, a], [a, b]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, c]] ->= [[b, a], [a, c]] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a]] ->= [[c, a], [a, a]] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, b]] ->= [[c, a], [a, b]] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, c]] ->= [[c, a], [a, c]] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, a]] ->= [ [a, a] , [a, b] , [b, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b]] ->= [ [a, a] , [a, b] , [b, c] , [c, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, c]] ->= [ [a, a] , [a, b] , [b, c] , [c, c] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, a]] ->= [ [b, a] , [a, b] , [b, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, b]] ->= [ [b, a] , [a, b] , [b, c] , [c, b] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, c]] ->= [ [b, a] , [a, b] , [b, c] , [c, c] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, a]] ->= [ [c, a] , [a, b] , [b, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, b]] ->= [ [c, a] , [a, b] , [b, c] , [c, b] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, c]] ->= [ [c, a] , [a, b] , [b, c] , [c, c] ] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 1/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [[a, a], [a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [[a, a], [a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, c]] ->= [[a, a], [a, c]] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a]] ->= [[b, a], [a, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, c]] ->= [[b, a], [a, c]] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a]] ->= [[c, a], [a, a]] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, b]] ->= [[c, a], [a, b]] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, c]] ->= [[c, a], [a, c]] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, a]] ->= [ [a, a] , [a, b] , [b, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b]] ->= [ [a, a] , [a, b] , [b, c] , [c, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, c]] ->= [ [a, a] , [a, b] , [b, c] , [c, c] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, a]] ->= [ [b, a] , [a, b] , [b, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, c]] ->= [ [b, a] , [a, b] , [b, c] , [c, c] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, a]] ->= [ [c, a] , [a, b] , [b, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, b]] ->= [ [c, a] , [a, b] , [b, c] , [c, b] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, c]] ->= [ [c, a] , [a, b] , [b, c] , [c, c] ] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 2 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( [a, c]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 0 7 \
                | 0 0 2 |
                \ 0 0 1 /) )
  ( [b, c]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [c, a]
  , St (Corner  / 1 0 0 \
                | 0 0 1 |
                \ 0 0 1 /) )
  ( [c, b]
  , St (Corner  / 1 2 0 \
                | 0 0 4 |
                \ 0 0 1 /) )
  ( [c, c]
  , St (Corner  / 1 0 0 \
                | 0 0 1 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[a, a]] ->= [[a, a], [a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [[a, a], [a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, c]] ->= [[a, a], [a, c]] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a]] ->= [[b, a], [a, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, c]] ->= [[b, a], [a, c]] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a]] ->= [[c, a], [a, a]] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, b]] ->= [[c, a], [a, b]] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, c]] ->= [[c, a], [a, c]] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, a]] ->= [ [a, a] , [a, b] , [b, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b]] ->= [ [a, a] , [a, b] , [b, c] , [c, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, c]] ->= [ [a, a] , [a, b] , [b, c] , [c, c] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, a]] ->= [ [b, a] , [a, b] , [b, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, c]] ->= [ [b, a] , [a, b] , [b, c] , [c, c] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, a]] ->= [ [c, a] , [a, b] , [b, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[c, b]] ->= [ [c, a] , [a, b] , [b, c] , [c, b] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[c, c]] ->= [ [c, a] , [a, b] , [b, c] , [c, c] ] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  no strict rules

**************************************************
skeleton: (1/2,3)\TileAllAll{2}(9/18,9)\Weight(1/16,9)\Matrix{\Natural}{3}(0/16,8)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 0.743046368000
  min duration 0.016741182000
  total durat. 3.361001480000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 0.781074680000
  min duration 0.017936303000
  total durat. 3.162676944000
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.542868727000
  min duration 1.542868727000
  total durat. 1.542868727000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 42}
    , self = 102
    , parent = Nothing
    , duration = 1.542868727000
    , status = Success
    , start = 2025-09-04 08:27:52.712758565 UTC
    , finish = 2025-09-04 08:27:54.255627292 UTC
    , thread_cap_info = ("ThreadId 190", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.442178283000
  min duration 1.442178283000
  total durat. 1.442178283000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 16
      , alphabet_size = 9
      , total_length = 70}
    , self = 116
    , parent = Nothing
    , duration = 1.442178283000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:27:53.173730561 UTC
    , finish = 2025-09-04 08:27:54.615908844 UTC
    , thread_cap_info = ("ThreadId 196", 3, False)}
Success : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.207863598000
  min duration 1.207863598000
  total durat. 1.207863598000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 16
      , alphabet_size = 9
      , total_length = 70}
    , self = 104
    , parent = Nothing
    , duration = 1.207863598000
    , status = Success
    , start = 2025-09-04 08:27:53.21273848 UTC
    , finish = 2025-09-04 08:27:54.420602078 UTC
    , thread_cap_info = ("ThreadId 197", 3, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.239356437000
  min duration 1.239356437000
  total durat. 1.239356437000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 42}
    , self = 101
    , parent = Nothing
    , duration = 1.239356437000
    , status = Fail
    , start = 2025-09-04 08:27:52.873382383 UTC
    , finish = 2025-09-04 08:27:54.11273882 UTC
    , thread_cap_info = ("ThreadId 192", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.546071900000
  min duration 1.546071900000
  total durat. 1.546071900000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 6
      , alphabet_size = 6
      , total_length = 66}
    , self = 100
    , parent = Nothing
    , duration = 1.546071900000
    , status = Fail
    , start = 2025-09-04 08:27:52.267470363 UTC
    , finish = 2025-09-04 08:27:53.813542263 UTC
    , thread_cap_info = ("ThreadId 137", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.543716909000
  min duration 1.543716909000
  total durat. 1.543716909000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 6
      , alphabet_size = 6
      , total_length = 66}
    , self = 99
    , parent = Nothing
    , duration = 1.543716909000
    , status = Fail
    , start = 2025-09-04 08:27:52.249236736 UTC
    , finish = 2025-09-04 08:27:53.792953645 UTC
    , thread_cap_info = ("ThreadId 121", 2, False)}
**************************************************
F                              Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                              , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                              = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                              Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                              8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                              = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                              ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                              1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                              = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 1 ,
F                              num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 3 , total_length
F                              = 8} , self = 92 , parent = Nothing , duration = 0.613121224000 , status
F                              = Fail , start = 2025-09-04 08:27:52.232963447 UTC , finish = 2025-09-04
F                              08:27:52.846084671 UTC , thread_cap_info = ("ThreadId 101", 3, False)}
F                              
| F                            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                            = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| F                            = 38 , num_top_rules = 38 , num_weak_rules = 16 , alphabet_size = 16 ,
| F                            total_length = 194} , self = 88 , parent = Nothing , duration = 0.409988668000
| F                            , status = Fail , start = 2025-09-04 08:27:52.23609777 UTC , finish = 2025-09-04
| F                            08:27:52.646086438 UTC , thread_cap_info = ("ThreadId 108", 0, False)}
| F                            
| | F                          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F                          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F                          = 18 , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 6
| | F                          , alphabet_size = 6 , total_length = 66} , self = 99 , parent = Nothing
| | F                          , duration = 1.543716909000 , status = Fail , start = 2025-09-04 08:27:52.249236736
| | F                          UTC , finish = 2025-09-04 08:27:53.792953645 UTC , thread_cap_info = ("ThreadId
| | F                          121", 2, False)}
| | F                          
| | | F                        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                        = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | | F                        = 1 , num_top_rules = 0 , num_weak_rules = 16 , alphabet_size = 9 , total_length
| | | F                        = 70} , self = 83 , parent = Nothing , duration = 0.322432961000 , status
| | | F                        = Fail , start = 2025-09-04 08:27:52.252731888 UTC , finish = 2025-09-04
| | | F                        08:27:52.575164849 UTC , thread_cap_info = ("ThreadId 123", 2, False)}
| | | F                        
| | | | F                      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| | | | F                      = 38 , num_top_rules = 38 , num_weak_rules = 16 , alphabet_size = 16 ,
| | | | F                      total_length = 194} , self = 89 , parent = Nothing , duration = 0.401727549000
| | | | F                      , status = Fail , start = 2025-09-04 08:27:52.252733908 UTC , finish =
| | | | F                      2025-09-04 08:27:52.654461457 UTC , thread_cap_info = ("ThreadId 112",
| | | | F                      0, False)}
| | | | F                      
| | | | | F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | | | | F                    = 1 , num_top_rules = 0 , num_weak_rules = 16 , alphabet_size = 9 , total_length
| | | | | F                    = 70} , self = 81 , parent = Nothing , duration = 0.161562973000 , status
| | | | | F                    = Fail , start = 2025-09-04 08:27:52.252737276 UTC , finish = 2025-09-04
| | | | | F                    08:27:52.414300249 UTC , thread_cap_info = ("ThreadId 125", 2, False)}
| | | | | F                    
| | | | | | F                  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | F                  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | F                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | F                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | F                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | F                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 18
| | | | | | F                  , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 6 , alphabet_size
| | | | | | F                  = 6 , total_length = 66} , self = 100 , parent = Nothing , duration = 1.546071900000
| | | | | | F                  , status = Fail , start = 2025-09-04 08:27:52.267470363 UTC , finish =
| | | | | | F                  2025-09-04 08:27:53.813542263 UTC , thread_cap_info = ("ThreadId 137",
| | | | | | F                  2, False)}
| | | | | | F                  
| | | | | | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 64 , num_strict_rules
| | | | | | | F                = 48 , num_top_rules = 48 , num_weak_rules = 16 , alphabet_size = 16 ,
| | | | | | | F                total_length = 216} , self = 93 , parent = Nothing , duration = 0.575097221000
| | | | | | | F                , status = Fail , start = 2025-09-04 08:27:52.281493848 UTC , finish =
| | | | | | | F                2025-09-04 08:27:52.856591069 UTC , thread_cap_info = ("ThreadId 150",
| | | | | | | F                0, False)}
| | | | | | | F                
| | | | | | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | | | | F              = 3 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 3 , total_length
| | | | | | | | F              = 42} , self = 90 , parent = Nothing , duration = 0.408540488000 , status
| | | | | | | | F              = Fail , start = 2025-09-04 08:27:52.284675624 UTC , finish = 2025-09-04
| | | | | | | | F              08:27:52.693216112 UTC , thread_cap_info = ("ThreadId 146", 2, False)}
| | | | | | | | F              
| | | | | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 64 , num_strict_rules
| | | | | | | | | F            = 48 , num_top_rules = 48 , num_weak_rules = 16 , alphabet_size = 16 ,
| | | | | | | | | F            total_length = 216} , self = 94 , parent = Nothing , duration = 0.601767506000
| | | | | | | | | F            , status = Fail , start = 2025-09-04 08:27:52.293794514 UTC , finish =
| | | | | | | | | F            2025-09-04 08:27:52.89556202 UTC , thread_cap_info = ("ThreadId 149", 0,
| | | | | | | | | F            False)}
| | | | | | | | | F            
| | | | | | | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 51 , num_strict_rules
| | | | | | | | | | F          = 3 , num_top_rules = 0 , num_weak_rules = 48 , alphabet_size = 9 , total_length
| | | | | | | | | | F          = 312} , self = 95 , parent = Nothing , duration = 0.694390228000 , status
| | | | | | | | | | F          = Fail , start = 2025-09-04 08:27:52.302864834 UTC , finish = 2025-09-04
| | | | | | | | | | F          08:27:52.997255062 UTC , thread_cap_info = ("ThreadId 158", 2, False)}
| | | | | | | | | | F          
| | | | | | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 51 , num_strict_rules
| | | | | | | | | | | F        = 3 , num_top_rules = 0 , num_weak_rules = 48 , alphabet_size = 9 , total_length
| | | | | | | | | | | F        = 312} , self = 96 , parent = Nothing , duration = 0.781074680000 , status
| | | | | | | | | | | F        = Fail , start = 2025-09-04 08:27:52.302866193 UTC , finish = 2025-09-04
| | | | | | | | | | | F        08:27:53.083940873 UTC , thread_cap_info = ("ThreadId 160", 2, False)}
| | | | | | | | | | | F        
| | | | | | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | | | | | | | | F      = 3 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 3 , total_length
| | | | | | | | | | | | F      = 42} , self = 91 , parent = Nothing , duration = 0.501185432000 , status
| | | | | | | | | | | | F      = Fail , start = 2025-09-04 08:27:52.312765581 UTC , finish = 2025-09-04
| | | | | | | | | | | | F      08:27:52.813951013 UTC , thread_cap_info = ("ThreadId 145", 1, False)}
| | | | | | | | | | | | F      
| | | | | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | | | | | | | | | | | | F    = 1 , num_top_rules = 0 , num_weak_rules = 16 , alphabet_size = 9 , total_length
| | | | | | | | | | | | | F    = 70} , self = 97 , parent = Nothing , duration = 0.742457696000 , status
| | | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:27:52.413108172 UTC , finish = 2025-09-04
| | | | | | | | | | | | | F    08:27:53.155565868 UTC , thread_cap_info = ("ThreadId 170", 3, False)}
| | | | | | | | | | | | | F    
| | | | | F | | | | | | | |    
| | | | | F | | | | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F | | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F | | | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | | | | F | | | | | | | |    = 1 , num_top_rules = 0 , num_weak_rules = 16 , alphabet_size = 9 , total_length
| | | | | F | | | | | | | |    = 70} , self = 98 , parent = Nothing , duration = 0.743046368000 , status
| | | | | F | | | | | | | |    = Fail , start = 2025-09-04 08:27:52.430658542 UTC , finish = 2025-09-04
| | | | | F | | | | | | | |    08:27:53.17370491 UTC , thread_cap_info = ("ThreadId 169", 3, False)}
| | | | | F | | | | | | | |    
| | | | | | | | | | | | | | S  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | | | | | | | | | S  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | | | | | | | | | S  = Size { num_rules = 1377 , num_strict_rules = 81 , num_top_rules = 0 ,
| | | | | | | | | | | | | | S  num_weak_rules = 1296 , alphabet_size = 81 , total_length = 8424} , self
| | | | | | | | | | | | | | S  = 84 , parent = Nothing , duration = 0.143595164000 , status = Success
| | | | | | | | | | | | | | S  , start = 2025-09-04 08:27:52.441003235 UTC , finish = 2025-09-04 08:27:52.584598399
| | | | | | | | | | | | | | S  UTC , thread_cap_info = ("ThreadId 173", 2, False)}
| | | | | | | | | | | | | | S  
| | | F | | | | | | | | | | |  
| | |   | | | | | | | | | | S  
| F |   | | | | | | | | | |    
|   |   F | | | | | | | | |    
|   |     | | | F | | | | |    
| S |     | | |   | | | | |    Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| S |     | | |   | | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S |     | | |   | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S |     | | |   | | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S |     | | |   | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S |     | | |   | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| S |     | | |   | | | | |    , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| S |     | | |   | | | | |    = 3 , total_length = 42} , self = 102 , parent = Nothing , duration = 1.542868727000
| S |     | | |   | | | | |    , status = Success , start = 2025-09-04 08:27:52.712758565 UTC , finish
| S |     | | |   | | | | |    = 2025-09-04 08:27:54.255627292 UTC , thread_cap_info = ("ThreadId 190",
| S |     | | |   | | | | |    2, False)}
| S |     | | |   | | | | |    
| | |     | | |   | | | F |    
F | |     | | |   | | |   |    
  | |     | | F   | | |   |    
F | |     | |     | | |   |    Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
F | |     | |     | | |   |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F | |     | |     | | |   |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F | |     | |     | | |   |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F | |     | |     | | |   |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F | |     | |     | | |   |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
F | |     | |     | | |   |    , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
F | |     | |     | | |   |    = 3 , total_length = 42} , self = 101 , parent = Nothing , duration = 1.239356437000
F | |     | |     | | |   |    , status = Fail , start = 2025-09-04 08:27:52.873382383 UTC , finish =
F | |     | |     | | |   |    2025-09-04 08:27:54.11273882 UTC , thread_cap_info = ("ThreadId 192", 2,
F | |     | |     | | |   |    False)}
F | |     | |     | | |   |    
| | |     | |     F | |   |    
| | |     | |       F |   |    
| | |     | |         F   |    
| | |     | |             F    
| | |     F |                  
| | | E     |                  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | E     |                  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E     |                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E     |                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E     |                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E     |                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 17
| | | E     |                  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 16 , alphabet_size
| | | E     |                  = 9 , total_length = 70} , self = 116 , parent = Nothing , duration = 1.442178283000
| | | E     |                  , status = Except "AsyncCancelled" , start = 2025-09-04 08:27:53.173730561
| | | E     |                  UTC , finish = 2025-09-04 08:27:54.615908844 UTC , thread_cap_info = ("ThreadId
| | | E     |                  196", 3, False)}
| | | E     |                  
| | | | S   |                  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | S   |                  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | S   |                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | S   |                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S   |                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S   |                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 17
| | | | S   |                  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 16 , alphabet_size
| | | | S   |                  = 9 , total_length = 70} , self = 104 , parent = Nothing , duration = 1.207863598000
| | | | S   |                  , status = Success , start = 2025-09-04 08:27:53.21273848 UTC , finish
| | | | S   |                  = 2025-09-04 08:27:54.420602078 UTC , thread_cap_info = ("ThreadId 197",
| | | | S   |                  3, False)}
| | | | S   |                  
| | F | |   |                  
| |   | |   F                  
F |   | |                      
E |   | |                      Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E |   | |                      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E |   | |                      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E |   | |                      , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E |   | |                      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E |   | |                      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
E |   | |                      , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
E |   | |                      = 3 , total_length = 42} , self = 106 , parent = Nothing , duration = 0.319843239000
E |   | |                      , status = Except "AsyncCancelled" , start = 2025-09-04 08:27:54.132990283
E |   | |                      UTC , finish = 2025-09-04 08:27:54.452833522 UTC , thread_cap_info = ("ThreadId
E |   | |                      201", 2, False)}
E |   | |                      
| S   | |                      
|     | S                      
E     |                        
      E                        
