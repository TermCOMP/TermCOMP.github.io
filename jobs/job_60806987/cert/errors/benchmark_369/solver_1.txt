[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 414 length 1699
CNF 414 vars 1699 clauses
last 358 length 1555
CNF 358 vars 1555 clauses
last 446 length 1827
CNF 446 vars 1827 clauses
last 332 length 1423
CNF 332 vars 1423 clauses
last 358 length 1555
CNF 358 vars 1555 clauses
last 339 length 1363
last 332 length 1423
CNF 332 vars 1423 clauses
last 365 length 1496
CNF 339 vars 1363 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2265, clauses: 8144
last 2265 length 8144
CNF 2265 vars 8144 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2265, clauses: 8144, status: Unsatisfied, time: 0.07516595s
last 709 length 2892
last 709 length 2892
CNF 365 vars 1496 clauses
CNF 709 vars 2892 clauses
last 821 length 3375
CNF 709 vars 2892 clauses
last 821 length 3375
CNF 821 vars 3375 clauses
CNF 821 vars 3375 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2077, clauses: 7837
last 2077 length 7837
CNF 2077 vars 7837 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2077, clauses: 7837, status: Unsatisfied, time: 0.861686725s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3981, clauses: 14868
last 3981 length 14868
last 4516 length 18819
CNF 3981 vars 14868 clauses
CNF 4516 vars 18819 clauses
last 4350 length 18716
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3981, clauses: 14868, status: Unsatisfied, time: 1.308811832s
CNF 4350 vars 18716 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13827, clauses: 57266
last 13827 length 57266
CNF 13827 vars 57266 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13827, clauses: 57266, status: Satisfied, time: 2.864986123s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 3 letters       mirror
SRS with 1 strict rules and 2 weak rules on 3 letters       context
SRS with 1 strict rules and 6 weak rules on 3 letters       mirror
SRS with 1 strict rules and 6 weak rules on 3 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, c, b] -> [c] {- Input 0 -}
  [] ->= [a, b] {- Input 1 -}
  [b, a] ->= [] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, c, a] -> [c] {- Mirror (Input 0) -}
  [] ->= [b, a] {- Mirror (Input 1) -}
  [a, b] ->= [] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [b, c, a] -> [c] {- Mirror (Input 0) -}
  [a] ->= [a, b, a] {- Mirror (Input 1) -}
  [b] ->= [b, b, a] {- Mirror (Input 1) -}
  [c] ->= [c, b, a] {- Mirror (Input 1) -}
  [a, a, b] ->= [a] {- Mirror (Input 2) -}
  [b, a, b] ->= [b] {- Mirror (Input 2) -}
  [c, a, b] ->= [c] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, c, b] -> [c] {- Input 0 -}
  [a] ->= [a, b, a] {- Input 1 -}
  [b] ->= [a, b, b] {- Input 1 -}
  [c] ->= [a, b, c] {- Input 1 -}
  [b, a, a] ->= [a] {- Input 2 -}
  [b, a, b] ->= [b] {- Input 2 -}
  [b, a, c] ->= [c] {- Input 2 -}
reason
  ( a
  , St  / 0A - 1A \
        | -  - 1A |
        \ -  - 1A / )
  ( b
  , St  / 0A 0A 0A  \
        | 0A 0A -1A |
        \ -  -  -1A / )
  ( c
  , St  / 0A 0A - \
        | -  0A - |
        \ -  0A - / )
   property Termination
has value Just True
for SRS
  [a] ->= [a, b, a] {- Input 1 -}
  [b] ->= [a, b, b] {- Input 1 -}
  [c] ->= [a, b, c] {- Input 1 -}
  [b, a, a] ->= [a] {- Input 2 -}
  [b, a, b] ->= [b] {- Input 2 -}
  [b, a, c] ->= [c] {- Input 2 -}
reason
  no strict rules

**************************************************
skeleton: \Mirror(1/2,3)\Context\Mirror(1/6,3)\Matrix{\ArcticBZ}{3}(0/6,3)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 2.962367444000
  min duration 0.034821318000
  total durat. 4.174114753000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 37
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 36
      , alphabet_size = 9
      , total_length = 222}
    , self = 78
    , parent = Nothing
    , duration = 2.962367444000
    , status = Fail
    , start = 2025-09-04 08:27:33.306655412 UTC
    , finish = 2025-09-04 08:27:36.269022856 UTC
    , thread_cap_info = ("ThreadId 158", 3, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.243662603000
  min duration 3.243662603000
  total durat. 3.243662603000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 347
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 338
      , alphabet_size = 62
      , total_length = 2100}
    , self = 83
    , parent = Nothing
    , duration = 3.243662603000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:27:36.744304696 UTC
    , finish = 2025-09-04 08:27:39.987967299 UTC
    , thread_cap_info = ("ThreadId 176", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 3.060671057000
  min duration 0.025906069000
  total durat. 4.254693387000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 37
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 36
      , alphabet_size = 9
      , total_length = 222}
    , self = 79
    , parent = Nothing
    , duration = 3.060671057000
    , status = Fail
    , start = 2025-09-04 08:27:33.327576325 UTCMatrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26438, clauses: 109040

    last 26438 length 109040
, finish = 2025-09-04 08:27:36.388247382 UTC
    , thread_cap_info = ("ThreadId 160", 3, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.322271506000
  min duration 0.025848728000
  total durat. 3.348120234000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 347
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 338
      , alphabet_size = 62
      , total_length = 2100}
    , self = 84
    , parent = Nothing
    , duration = 3.322271506000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:27:36.765387462 UTC
    , finish = 2025-09-04 08:27:40.087658968 UTC
    , thread_cap_info = ("ThreadId 178", 3, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 7.079881595000
  min duration 7.079881595000
  total durat. 7.079881595000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 28}
    , self = 85
    , parent = Nothing
    , duration = 7.079881595000
    , status = Success
    , start = 2025-09-04 08:27:33.054761419 UTC
    , finish = 2025-09-04 08:27:40.134643014 UTC
    , thread_cap_info = ("ThreadId 153", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 5.355194813000
  min duration 5.355194813000
  total durat. 5.355194813000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 28}
    , self = 88
    , parent = Nothing
    , duration = 5.355194813000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:27:34.873689864 UTC
    , finish = 2025-09-04 08:27:40.228884677 UTC
    , thread_cap_info = ("ThreadId 166", 3, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.452176848000
  min duration 1.598276622000
  total durat. 4.050453470000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 28}
    , self = 75
    , parent = Nothing
    , duration = 1.598276622000
    , status = Fail
    , start = 2025-09-04 08:27:33.116649395 UTC
    , finish = 2025-09-04 08:27:34.714926017 UTC
    , thread_cap_info = ("ThreadId 155", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 13
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 12
      , alphabet_size = 8
      , total_length = 54}
    , self = 77
    , parent = Nothing
    , duration = 2.452176848000
    , status = Fail
    , start = 2025-09-04 08:27:33.672671539 UTC
    , finish = 2025-09-04 08:27:36.124848387 UTC
    , thread_cap_info = ("ThreadId 163", 3, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 7.475427271000
  min duration 7.475427271000
  total durat. 7.475427271000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 3
      , total_length = 8}
    , self = 89
    , parent = Nothing
    , duration = 7.475427271000
    , status = Fail
    , start = 2025-09-04 08:27:32.783383787 UTC
    , finish = 2025-09-04 08:27:40.258811058 UTC
    , thread_cap_info = ("ThreadId 90", 3, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 7.425293364000
  min duration 7.425293364000
  total durat. 7.425293364000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 3
      , total_length = 8}
    , self = 87
    , parent = Nothing
    , duration = 7.425293364000
    , status = Fail
    , start = 2025-09-04 08:27:32.765340001 UTC
    , finish = 2025-09-04 08:27:40.190633365 UTC
    , thread_cap_info = ("ThreadId 89", 3, False)}
Fail : "Unlabel\n { accept_null_strict = True\n , produce_null_strict = False\n , verbose = False\n , tracing = False}"
  total number 4
  max duration 1.377887550000
  min duration 0.000008584000
  total durat. 1.378342726000
  Info
    { what = "Unlabel\n  { accept_null_strict = True\n  , produce_null_strict = False\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 347
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 338
      , alphabet_size = 62
      , total_length = 2100}
    , self = 80
    , parent = Nothing
    , duration = 1.377887550000
    , status = Fail
    , start = 2025-09-04 08:27:35.044788027 UTC
    , finish = 2025-09-04 08:27:36.422675577 UTC
    , thread_cap_info = ("ThreadId 169", 3, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 4
  max duration 1.846957021000
  min duration 0.000175473000
  total durat. 1.848776252000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 832
      , num_strict_rules = 64
      , num_top_rules = 0
      , num_weak_rules = 768
      , alphabet_size = 64
      , total_length = 5120}
    , self = 76
    , parent = Nothing
    , duration = 1.846957021000
    , status = Success
    , start = 2025-09-04 08:27:33.026712736 UTC
    , finish = 2025-09-04 08:27:34.873669757 UTC
    , thread_cap_info = ("ThreadId 151", 3, False)}
**************************************************
F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                    , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                    = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 1 ,
F                    num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 3 , total_length
F                    = 8} , self = 87 , parent = Nothing , duration = 7.425293364000 , status
F                    = Fail , start = 2025-09-04 08:27:32.765340001 UTC , finish = 2025-09-04
F                    08:27:40.190633365 UTC , thread_cap_info = ("ThreadId 89", 3, False)}
F                    
| F                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F                  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| F                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F                  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 1 ,
| F                  num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 3 , total_length
| F                  = 8} , self = 89 , parent = Nothing , duration = 7.475427271000 , status
| F                  = Fail , start = 2025-09-04 08:27:32.783383787 UTC , finish = 2025-09-04
| F                  08:27:40.258811058 UTC , thread_cap_info = ("ThreadId 90", 3, False)}
| F                  
| | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | F                = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 3 , total_length
| | F                = 28} , self = 66 , parent = Nothing , duration = 0.139257399000 , status
| | F                = Fail , start = 2025-09-04 08:27:32.806083364 UTC , finish = 2025-09-04
| | F                08:27:32.945340763 UTC , thread_cap_info = ("ThreadId 125", 3, False)}
| | F                
| | | F              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F              = 10 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 ,
| | | F              alphabet_size = 4 , total_length = 34} , self = 64 , parent = Nothing ,
| | | F              duration = 0.112102493000 , status = Fail , start = 2025-09-04 08:27:32.812342361
| | | F              UTC , finish = 2025-09-04 08:27:32.924444854 UTC , thread_cap_info = ("ThreadId
| | | F              108", 1, False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | F            = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 3 , total_length
| | | | F            = 28} , self = 68 , parent = Nothing , duration = 0.209086997000 , status
| | | | F            = Fail , start = 2025-09-04 08:27:32.817652919 UTC , finish = 2025-09-04
| | | | F            08:27:33.026739916 UTC , thread_cap_info = ("ThreadId 129", 3, False)}
| | | | F            
| | | | | S          Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | | | S          , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | | | S          , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | | | S          = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | | | S          , cpf = True}" , input_size = Size { num_rules = 13 , num_strict_rules
| | | | | S          = 1 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 8 , total_length
| | | | | S          = 54} , self = 67 , parent = Nothing , duration = 0.131424315000 , status
| | | | | S          = Success , start = 2025-09-04 08:27:32.830308936 UTC , finish = 2025-09-04
| | | | | S          08:27:32.961733251 UTC , thread_cap_info = ("ThreadId 139", 3, False)}
| | | | | S          
| | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 13 , num_strict_rules
| | | | | | F        = 1 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 8 , total_length
| | | | | | F        = 54} , self = 73 , parent = Nothing , duration = 0.512532169000 , status
| | | | | | F        = Fail , start = 2025-09-04 08:27:32.831815537 UTC , finish = 2025-09-04
| | | | | | F        08:27:33.344347706 UTC , thread_cap_info = ("ThreadId 140", 3, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 13 , num_strict_rules
| | | | | | | F      = 1 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 8 , total_length
| | | | | | | F      = 54} , self = 72 , parent = Nothing , duration = 0.438225858000 , status
| | | | | | | F      = Fail , start = 2025-09-04 08:27:32.831819502 UTC , finish = 2025-09-04
| | | | | | | F      08:27:33.27004536 UTC , thread_cap_info = ("ThreadId 142", 3, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 13 , num_strict_rules
| | | | | | | | F    = 1 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 8 , total_length
| | | | | | | | F    = 54} , self = 71 , parent = Nothing , duration = 0.413200863000 , status
| | | | | | | | F    = Fail , start = 2025-09-04 08:27:32.851649237 UTC , finish = 2025-09-04
| | | | | | | | F    08:27:33.2648501 UTC , thread_cap_info = ("ThreadId 144", 3, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 13 , num_strict_rules
| | | | | | | | | F  = 1 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 8 , total_length
| | | | | | | | | F  = 54} , self = 74 , parent = Nothing , duration = 0.483450936000 , status
| | | | | | | | | F  = Fail , start = 2025-09-04 08:27:32.866828144 UTC , finish = 2025-09-04
| | | | | | | | | F  08:27:33.35027908 UTC , thread_cap_info = ("ThreadId 145", 3, False)}
| | | | | | | | | F  
| | | F | | | | | |  
| | F   | | | | | |  
| |     | S | | | |  
| | S   |   | | | |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | S   |   | | | |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | S   |   | | | |  = Size { num_rules = 832 , num_strict_rules = 64 , num_top_rules = 0 ,
| | S   |   | | | |  num_weak_rules = 768 , alphabet_size = 64 , total_length = 5120} , self
| | S   |   | | | |  = 76 , parent = Nothing , duration = 1.846957021000 , status = Success
| | S   |   | | | |  , start = 2025-09-04 08:27:33.026712736 UTC , finish = 2025-09-04 08:27:34.873669757
| | S   |   | | | |  UTC , thread_cap_info = ("ThreadId 151", 3, False)}
| | S   |   | | | |  
| | |   F   | | | |  
| | | S     | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | S     | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S     | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S     | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S     | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S     | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | S     | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | S     | | | |  = 3 , total_length = 28} , self = 85 , parent = Nothing , duration = 7.079881595000
| | | S     | | | |  , status = Success , start = 2025-09-04 08:27:33.054761419 UTC , finish
| | | S     | | | |  = 2025-09-04 08:27:40.134643014 UTC , thread_cap_info = ("ThreadId 153",
| | | S     | | | |  3, False)}
| | | S     | | | |  
| | | | F   | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | F   | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F   | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F   | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F   | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F   | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | F   | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | | F   | | | |  = 3 , total_length = 28} , self = 75 , parent = Nothing , duration = 1.598276622000
| | | | F   | | | |  , status = Fail , start = 2025-09-04 08:27:33.116649395 UTC , finish =
| | | | F   | | | |  2025-09-04 08:27:34.714926017 UTC , thread_cap_info = ("ThreadId 155",
| | | | F   | | | |  3, False)}
| | | | F   | | | |  
| | | | |   | | F |  
| | | | |   | F   |  
| | | | | F |     |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |     |  = False\n , verbose = False}" , input_size = Size { num_rules = 37 , num_strict_rules
| | | | | F |     |  = 1 , num_top_rules = 0 , num_weak_rules = 36 , alphabet_size = 9 , total_length
| | | | | F |     |  = 222} , self = 78 , parent = Nothing , duration = 2.962367444000 , status
| | | | | F |     |  = Fail , start = 2025-09-04 08:27:33.306655412 UTC , finish = 2025-09-04
| | | | | F |     |  08:27:36.269022856 UTC , thread_cap_info = ("ThreadId 158", 3, False)}
| | | | | F |     |  
| | | | | | | F   |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F   |  = False\n , verbose = False}" , input_size = Size { num_rules = 37 , num_strict_rules
| | | | | | | F   |  = 1 , num_top_rules = 0 , num_weak_rules = 36 , alphabet_size = 9 , total_length
| | | | | | | F   |  = 222} , self = 79 , parent = Nothing , duration = 3.060671057000 , status
| | | | | | | F   |  = Fail , start = 2025-09-04 08:27:33.327576325 UTC , finish = 2025-09-04
| | | | | | | F   |  08:27:36.388247382 UTC , thread_cap_info = ("ThreadId 160", 3, False)}
| | | | | | | F   |  
| | | | | | F |   |  
| | | | | |   |   F  
| | | | | | F |      Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | F |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | F |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | F |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | F |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | F |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 13
| | | | | | F |      , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size
| | | | | | F |      = 8 , total_length = 54} , self = 77 , parent = Nothing , duration = 2.452176848000
| | | | | | F |      , status = Fail , start = 2025-09-04 08:27:33.672671539 UTC , finish =
| | | | | | F |      2025-09-04 08:27:36.124848387 UTC , thread_cap_info = ("ThreadId 163",
| | | | | | F |      3, False)}
| | | | | | F |      
| | | | F | | |      
| | S |   | | |      
| | E |   | | |      Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | E |   | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E |   | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E |   | | |      , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |   | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |   | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | E |   | | |      , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | E |   | | |      = 3 , total_length = 28} , self = 88 , parent = Nothing , duration = 5.355194813000
| | E |   | | |      , status = Except "AsyncCancelled" , start = 2025-09-04 08:27:34.873689864
| | E |   | | |      UTC , finish = 2025-09-04 08:27:40.228884677 UTC , thread_cap_info = ("ThreadId
| | E |   | | |      166", 3, False)}
| | E |   | | |      
| | | | F | | |      Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
| | | | F | | |      = False\n , verbose = False\n , tracing = False}" , input_size = Size {
| | | | F | | |      num_rules = 347 , num_strict_rules = 9 , num_top_rules = 0 , num_weak_rules
| | | | F | | |      = 338 , alphabet_size = 62 , total_length = 2100} , self = 80 , parent
| | | | F | | |      = Nothing , duration = 1.377887550000 , status = Fail , start = 2025-09-04
| | | | F | | |      08:27:35.044788027 UTC , finish = 2025-09-04 08:27:36.422675577 UTC , thread_cap_info
| | | | F | | |      = ("ThreadId 169", 3, False)}
| | | | F | | |      
| | | | | | F |      
| | | | | F   |      
| | | | |     F      
| | | | F            
| | | | E            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E            = False\n , verbose = False}" , input_size = Size { num_rules = 347 , num_strict_rules
| | | | E            = 9 , num_top_rules = 0 , num_weak_rules = 338 , alphabet_size = 62 , total_length
| | | | E            = 2100} , self = 83 , parent = Nothing , duration = 3.243662603000 , status
| | | | E            = Except "AsyncCancelled" , start = 2025-09-04 08:27:36.744304696 UTC ,
| | | | E            finish = 2025-09-04 08:27:39.987967299 UTC , thread_cap_info = ("ThreadId
| | | | E            176", 3, False)}
| | | | E            
| | | | | E          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E          = False\n , verbose = False}" , input_size = Size { num_rules = 347 , num_strict_rules
| | | | | E          = 9 , num_top_rules = 0 , num_weak_rules = 338 , alphabet_size = 62 , total_length
| | | | | E          = 2100} , self = 84 , parent = Nothing , duration = 3.322271506000 , status
| | | | | E          = Except "AsyncCancelled" , start = 2025-09-04 08:27:36.765387462 UTC ,
| | | | | E          finish = 2025-09-04 08:27:40.087658968 UTC , thread_cap_info = ("ThreadId
| | | | | E          178", 3, False)}
| | | | | E          
| | | | E |          
| | | |   E          
| | | S              
F | |                
  | E                
  F                  
