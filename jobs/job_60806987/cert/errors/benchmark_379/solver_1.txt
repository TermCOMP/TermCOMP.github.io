[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 228 length 961
CNF 228 vars 961 clauses
last 261 length 1076
CNF 261 vars 1076 clauses
last 268 length 1085
CNF 268 vars 1085 clauses
last 235 length 1018
CNF 235 vars 1018 clauses
last 288 length 1253
CNF 288 vars 1253 clauses
last 288 length 1277
CNF 288 vars 1277 clauses
last 310 length 1286
CNF 310 vars 1286 clauses
last 374 length 1562
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2169, clauses: 7817
last 2169 length 7817
CNF 374 vars 1562 clauses
last 606 length 2647
last 634 length 2747
CNF 2169 vars 7817 clauses
last 829 length 3450
last 916 length 3689
last 592 length 2585
CNF 634 vars 2747 clauses
last 652 length 2829
CNF 606 vars 2647 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1812, clauses: 6748
last 916 length 3689
last 3644 length 15127
last 4501 length 18432
last 829 length 3450
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2169, clauses: 7817, status: Unsatisfied, time: 0.45693662s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11307, clauses: 46610
CNF 829 vars 3450 clauses
CNF 916 vars 3689 clauses
CNF 592 vars 2585 clauses
CNF 652 vars 2829 clauses
last 1812 length 6748
CNF 916 vars 3689 clauses
CNF 3644 vars 15127 clauses
CNF 4501 vars 18432 clauses
CNF 829 vars 3450 clauses
last 11307 length 46610
CNF 1812 vars 6748 clauses
CNF 11307 vars 46610 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1812, clauses: 6748, status: Unsatisfied, time: 1.680110588s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11307, clauses: 46610, status: Satisfied, time: 1.285236988s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4771, clauses: 17789
last 4771 length 17789
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 3 letters       mirror
SRS with 1 strict rules and 2 weak rules on 3 letters       context
SRS with 1 strict rules and 6 weak rules on 3 letters       mirror
SRS with 1 strict rules and 6 weak rules on 3 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, a, c] -> [c] {- Input 0 -}
  [a] ->= [] {- Input 1 -}
  [] ->= [a, b] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [c, a, a, b] -> [c] {- Mirror (Input 0) -}
  [a] ->= [] {- Mirror (Input 1) -}
  [] ->= [b, a] {- Mirror (Input 2) -}
CNF 4771 vars 17789 clauses
reason
  context
   property Termination
has value Just True
for SRS
  [c, a, a, b] -> [c] {- Mirror (Input 0) -}
  [a, a] ->= [a] {- Mirror (Input 1) -}
  [b, a] ->= [b] {- Mirror (Input 1) -}
  [c, a] ->= [c] {- Mirror (Input 1) -}
  [a] ->= [a, b, a] {- Mirror (Input 2) -}
  [b] ->= [b, b, a] {- Mirror (Input 2) -}
  [c] ->= [c, b, a] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, a, a, c] -> [c] {- Input 0 -}
  [a, a] ->= [a] {- Input 1 -}
  [a, b] ->= [b] {- Input 1 -}
  [a, c] ->= [c] {- Input 1 -}
  [a] ->= [a, b, a] {- Input 2 -}
  [b] ->= [a, b, b] {- Input 2 -}
  [c] ->= [a, b, c] {- Input 2 -}
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4771, clauses: 17789, status: Satisfied, time: 0.141382194s
reason
  ( a
  , St  / 0A  1A  -  \
        | -   1A  -  |
        \ -2A -1A 0A / )
  ( b
  , St  / 0A  -1A - \
        | -   -1A - |
        \ -2A -2A - / )
  ( c
  , St  / 1A  - - \
        | 0A  - - |
        \ -1A - - / )
   property Termination
has value Just True
for SRS
  [a, a] ->= [a] {- Input 1 -}
  [a, b] ->= [b] {- Input 1 -}
  [a, c] ->= [c] {- Input 1 -}
  [a] ->= [a, b, a] {- Input 2 -}
  [b] ->= [a, b, b] {- Input 2 -}
  [c] ->= [a, b, c] {- Input 2 -}
reason
  no strict rules

**************************************************
skeleton: \Mirror(1/2,3)\Context\Mirror(1/6,3)\Matrix{\ArcticBZ}{3}(0/6,3)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 2.710438395000
  min duration 0.012470120000
  total durat. 8.088154745000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 14
      , alphabet_size = 9
      , total_length = 70}
    , self = 91
    , parent = Nothing
    , duration = 1.733988784000
    , status = Fail
    , start = 2025-09-04 08:27:54.363292999 UTC
    , finish = 2025-09-04 08:27:56.097281783 UTC
    , thread_cap_info = ("ThreadId 148", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 14
      , alphabet_size = 9
      , total_length = 70}
    , self = 94
    , parent = Nothing
    , duration = 1.786913204000
    , status = Fail
    , start = 2025-09-04 08:27:54.57049261 UTC
    , finish = 2025-09-04 08:27:56.357405814 UTC
    , thread_cap_info = ("ThreadId 172", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 45
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 42
      , alphabet_size = 9
      , total_length = 252}
    , self = 97
    , parent = Nothing
    , duration = 2.710438395000
    , status = Fail
    , start = 2025-09-04 08:27:54.363644568 UTC
    , finish = 2025-09-04 08:27:57.074082963 UTC
    , thread_cap_info = ("ThreadId 154", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 2.692648469000
  min duration 0.004077294000
  total durat. 10.501945540000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 14
      , alphabet_size = 9
      , total_length = 70}
    , self = 88
    , parent = Nothing
    , duration = 1.700912804000
    , status = Fail
    , start = 2025-09-04 08:27:54.370086043 UTC
    , finish = 2025-09-04 08:27:56.070998847 UTC
    , thread_cap_info = ("ThreadId 150", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 70}
    , self = 92
    , parent = Nothing
    , duration = 1.746021463000
    , status = Fail
    , start = 2025-09-04 08:27:54.374635365 UTC
    , finish = 2025-09-04 08:27:56.120656828 UTC
    , thread_cap_info = ("ThreadId 132", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 70}
    , self = 93
    , parent = Nothing
    , duration = 1.768302867000
    , status = Fail
    , start = 2025-09-04 08:27:54.410676926 UTC
    , finish = 2025-09-04 08:27:56.178979793 UTC
    , thread_cap_info = ("ThreadId 160", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 17
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 14
      , alphabet_size = 9
      , total_length = 70}
    , self = 96
    , parent = Nothing
    , duration = 2.490058503000
    , status = Fail
    , start = 2025-09-04 08:27:54.58215403 UTC
    , finish = 2025-09-04 08:27:57.072212533 UTC
    , thread_cap_info = ("ThreadId 173", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 45
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 42
      , alphabet_size = 9
      , total_length = 252}
    , self = 95
    , parent = Nothing
    , duration = 2.692648469000
    , status = Fail
    , start = 2025-09-04 08:27:54.367775465 UTC
    , finish = 2025-09-04 08:27:57.060423934 UTC
    , thread_cap_info = ("ThreadId 156", 0, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.835810071000
  min duration 2.835810071000
  total durat. 2.835810071000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 26}
    , self = 99
    , parent = Nothing
    , duration = 2.835810071000
    , status = Success
    , start = 2025-09-04 08:27:54.363291959 UTC
    , finish = 2025-09-04 08:27:57.19910203 UTC
    , thread_cap_info = ("ThreadId 147", 1, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.725914755000
  min duration 2.725914755000
  total durat. 2.725914755000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 26}
    , self = 98
    , parent = Nothing
    , duration = 2.725914755000
    , status = Fail
    , start = 2025-09-04 08:27:54.444237022 UTC
    , finish = 2025-09-04 08:27:57.170151777 UTC
    , thread_cap_info = ("ThreadId 165", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.569723305000
  min duration 1.569723305000
  total durat. 1.569723305000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 32}
    , self = 86
    , parent = Nothing
    , duration = 1.569723305000
    , status = Fail
    , start = 2025-09-04 08:27:54.321640714 UTC
    , finish = 2025-09-04 08:27:55.891364019 UTC
    , thread_cap_info = ("ThreadId 114", 0, False)}
**************************************************
F                            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F                            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F                            = 10 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 4 ,
F                            alphabet_size = 4 , total_length = 32} , self = 86 , parent = Nothing ,
F                            duration = 1.569723305000 , status = Fail , start = 2025-09-04 08:27:54.321640714
F                            UTC , finish = 2025-09-04 08:27:55.891364019 UTC , thread_cap_info = ("ThreadId
F                            114", 0, False)}
F                            
| S                          Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| S                          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S                          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S                          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S                          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S                          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| S                          , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| S                          = 3 , total_length = 26} , self = 99 , parent = Nothing , duration = 2.835810071000
| S                          , status = Success , start = 2025-09-04 08:27:54.363291959 UTC , finish
| S                          = 2025-09-04 08:27:57.19910203 UTC , thread_cap_info = ("ThreadId 147",
| S                          1, False)}
| S                          
| | F                        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                        = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | F                        = 3 , num_top_rules = 0 , num_weak_rules = 14 , alphabet_size = 9 , total_length
| | F                        = 70} , self = 91 , parent = Nothing , duration = 1.733988784000 , status
| | F                        = Fail , start = 2025-09-04 08:27:54.363292999 UTC , finish = 2025-09-04
| | F                        08:27:56.097281783 UTC , thread_cap_info = ("ThreadId 148", 1, False)}
| | F                        
| | | F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
| | | F                      = 3 , num_top_rules = 0 , num_weak_rules = 42 , alphabet_size = 9 , total_length
| | | F                      = 252} , self = 97 , parent = Nothing , duration = 2.710438395000 , status
| | | F                      = Fail , start = 2025-09-04 08:27:54.363644568 UTC , finish = 2025-09-04
| | | F                      08:27:57.074082963 UTC , thread_cap_info = ("ThreadId 154", 0, False)}
| | | F                      
| | | | F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
| | | | F                    = 3 , num_top_rules = 0 , num_weak_rules = 42 , alphabet_size = 9 , total_length
| | | | F                    = 252} , self = 95 , parent = Nothing , duration = 2.692648469000 , status
| | | | F                    = Fail , start = 2025-09-04 08:27:54.367775465 UTC , finish = 2025-09-04
| | | | F                    08:27:57.060423934 UTC , thread_cap_info = ("ThreadId 156", 0, False)}
| | | | F                    
| | | | | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | | | | F                  = 3 , num_top_rules = 0 , num_weak_rules = 14 , alphabet_size = 9 , total_length
| | | | | F                  = 70} , self = 88 , parent = Nothing , duration = 1.700912804000 , status
| | | | | F                  = Fail , start = 2025-09-04 08:27:54.370086043 UTC , finish = 2025-09-04
| | | | | F                  08:27:56.070998847 UTC , thread_cap_info = ("ThreadId 150", 1, False)}
| | | | | F                  
| | | | | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | | | | F                = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | | | F                = 70} , self = 83 , parent = Nothing , duration = 0.827257787000 , status
| | | | | | F                = Fail , start = 2025-09-04 08:27:54.370097522 UTC , finish = 2025-09-04
| | | | | | F                08:27:55.197355309 UTC , thread_cap_info = ("ThreadId 131", 2, False)}
| | | | | | F                
| | | | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | | | | | F              = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | | | | F              = 70} , self = 84 , parent = Nothing , duration = 0.948548456000 , status
| | | | | | | F              = Fail , start = 2025-09-04 08:27:54.370134308 UTC , finish = 2025-09-04
| | | | | | | F              08:27:55.318682764 UTC , thread_cap_info = ("ThreadId 159", 3, False)}
| | | | | | | F              
| | | | | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | | | | | | F            = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | | | | | F            = 70} , self = 92 , parent = Nothing , duration = 1.746021463000 , status
| | | | | | | | F            = Fail , start = 2025-09-04 08:27:54.374635365 UTC , finish = 2025-09-04
| | | | | | | | F            08:27:56.120656828 UTC , thread_cap_info = ("ThreadId 132", 2, False)}
| | | | | | | | F            
| | | | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | | | | | | | F          = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | | | | | | F          = 70} , self = 93 , parent = Nothing , duration = 1.768302867000 , status
| | | | | | | | | F          = Fail , start = 2025-09-04 08:27:54.410676926 UTC , finish = 2025-09-04
| | | | | | | | | F          08:27:56.178979793 UTC , thread_cap_info = ("ThreadId 160", 3, False)}
| | | | | | | | | F          
| | | | | | | | | | F        Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | | | | | F        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | | | | F        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | | | | F        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | | F        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | | F        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | | | | | F        , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | | | | | | | | F        = 3 , total_length = 26} , self = 98 , parent = Nothing , duration = 2.725914755000
| | | | | | | | | | F        , status = Fail , start = 2025-09-04 08:27:54.444237022 UTC , finish =
| | | | | | | | | | F        2025-09-04 08:27:57.170151777 UTC , thread_cap_info = ("ThreadId 165",
| | | | | | | | | | F        1, False)}
| | | | | | | | | | F        
| | | | | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | | | | | | | | | | F      = 3 , num_top_rules = 0 , num_weak_rules = 14 , alphabet_size = 9 , total_length
| | | | | | | | | | | F      = 70} , self = 94 , parent = Nothing , duration = 1.786913204000 , status
| | | | | | | | | | | F      = Fail , start = 2025-09-04 08:27:54.57049261 UTC , finish = 2025-09-04
| | | | | | | | | | | F      08:27:56.357405814 UTC , thread_cap_info = ("ThreadId 172", 3, False)}
| | | | | | | | | | | F      
| | | | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 17 , num_strict_rules
| | | | | | | | | | | | F    = 3 , num_top_rules = 0 , num_weak_rules = 14 , alphabet_size = 9 , total_length
| | | | | | | | | | | | F    = 70} , self = 96 , parent = Nothing , duration = 2.490058503000 , status
| | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:27:54.58215403 UTC , finish = 2025-09-04
| | | | | | | | | | | | F    08:27:57.072212533 UTC , thread_cap_info = ("ThreadId 173", 3, False)}
| | | | | | | | | | | | F    
| | | | | | | | | | | | | S  Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | | | | | | | | | | | S  , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | | | | | | | | | | | S  , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | | | | | | | | | | | S  = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | | | | | | | | | | | S  , cpf = True}" , input_size = Size { num_rules = 17 , num_strict_rules
| | | | | | | | | | | | | S  = 3 , num_top_rules = 0 , num_weak_rules = 14 , alphabet_size = 9 , total_length
| | | | | | | | | | | | | S  = 70} , self = 82 , parent = Nothing , duration = 0.230043856000 , status
| | | | | | | | | | | | | S  = Success , start = 2025-09-04 08:27:54.590554487 UTC , finish = 2025-09-04
| | | | | | | | | | | | | S  08:27:54.820598343 UTC , thread_cap_info = ("ThreadId 174", 0, False)}
| | | | | | | | | | | | | S  
| | | | | | | | | | | | | S  
| | | | | | | | | | | | | S  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | | | | | | | | S  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | | | | | | | | S  = Size { num_rules = 1377 , num_strict_rules = 243 , num_top_rules = 0
| | | | | | | | | | | | | S  , num_weak_rules = 1134 , alphabet_size = 81 , total_length = 8424} , self
| | | | | | | | | | | | | S  = 85 , parent = Nothing , duration = 0.975868461000 , status = Success
| | | | | | | | | | | | | S  , start = 2025-09-04 08:27:54.820619044 UTC , finish = 2025-09-04 08:27:55.796487505
| | | | | | | | | | | | | S  UTC , thread_cap_info = ("ThreadId 175", 0, False)}
| | | | | | | | | | | | | S  
| | | | | | F | | | | | | |  
| | | | | |   F | | | | | |  
| | | | | |     | | | | | S  
| | | | | | F   | | | | |    Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
| | | | | | F   | | | | |    = False\n , verbose = False\n , tracing = False}" , input_size = Size {
| | | | | | F   | | | | |    num_rules = 567 , num_strict_rules = 27 , num_top_rules = 0 , num_weak_rules
| | | | | | F   | | | | |    = 540 , alphabet_size = 81 , total_length = 3222} , self = 87 , parent
| | | | | | F   | | | | |    = Nothing , duration = 0.244980458000 , status = Fail , start = 2025-09-04
| | | | | | F   | | | | |    08:27:55.814063513 UTC , finish = 2025-09-04 08:27:56.059043971 UTC , thread_cap_info
| | | | | | F   | | | | |    = ("ThreadId 183", 0, False)}
| | | | | | F   | | | | |    
F | | | | | |   | | | | |    
  | | | | | F   | | | | |    
  | | | | F     | | | | |    
  | F | |       | | | | |    
  |   | |       F | | | |    
  |   | |         F | | |    
  |   | |           | F |    
  |   | F           |   |    
  |   |             |   F    
  |   F             |        
  |                 F        
E |                          Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E |                          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E |                          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E |                          , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E |                          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E |                          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
E |                          , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
E |                          = 3 , total_length = 26} , self = 101 , parent = Nothing , duration = 0.101825527000
E |                          , status = Except "AsyncCancelled" , start = 2025-09-04 08:27:57.190972473
E |                          UTC , finish = 2025-09-04 08:27:57.292798 UTC , thread_cap_info = ("ThreadId
E |                          197", 1, False)}
E |                          
| S                          
E                            
