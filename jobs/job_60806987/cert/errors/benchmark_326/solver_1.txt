[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 310 length 1465
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 425 length 2175
CNF 310 vars 1465 clauses
CNF 425 vars 2175 clauses
last 669 length 3276
CNF 669 vars 3276 clauses
last 741 length 3662
last 1150 length 5557
CNF 1150 vars 5557 clauses
last 913 length 4362
last 1040 length 5437
CNF 913 vars 4362 clauses
CNF 1040 vars 5437 clauses
last 1394 length 7230
last 991 length 5180
CNF 741 vars 3662 clauses
last 554 length 2664
last 1000 length 5208
last 1098 length 6706
CNF 1394 vars 7230 clauses
last 952 length 4528
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4259, clauses: 16104
last 1626 length 9321
last 554 length 2664
last 1395 length 6622
last 952 length 4528
last 1979 length 9381
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12068, clauses: 50441
CNF 991 vars 5180 clauses
last 11628 length 72215
CNF 554 vars 2664 clauses
CNF 1000 vars 5208 clauses
last 4259 length 16104
CNF 1098 vars 6706 clauses
last 14261 length 106696
CNF 952 vars 4528 clauses
CNF 554 vars 2664 clauses
CNF 1395 vars 6622 clauses
CNF 1626 vars 9321 clauses
CNF 952 vars 4528 clauses
CNF 1979 vars 9381 clauses
last 12068 length 50441
CNF 11628 vars 72215 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1651, clauses: 6705
CNF 4259 vars 16104 clauses
CNF 14261 vars 106696 clauses
CNF 12068 vars 50441 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1974, clauses: 7727
last 1651 length 6705
last 1974 length 7727
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12068, clauses: 50441, status: Satisfied, time: 0.340219103s
CNF 1651 vars 6705 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4259, clauses: 16104, status: Unsatisfied, time: 0.418835508s
CNF 1974 vars 7727 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14770, clauses: 61397
last 14770 length 61397
last 793 length 3666
CNF 793 vars 3666 clauses
CNF 14770 vars 61397 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1974, clauses: 7727, status: Satisfied, time: 0.118487976s
last 424 length 2028
CNF 424 vars 2028 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1418, clauses: 5686
last 1418 length 5686
CNF 1418 vars 5686 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1418, clauses: 5686, status: Unsatisfied, time: 0.007269386s
last 1979 length 9381
CNF 1979 vars 9381 clauses
**************************************************
summary
last 1395 length 6622
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10672, clauses: 44544
**************************************************
last 10672 length 44544
SRS with 1 strict rules and 1 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 4 weak rules on 4 letters       weights
SRS with 1 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 3 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, a, b, a] -> [] {- Input 0 -}
  [] ->= [a, a, b, a] {- Input 1 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, b], [b, a], [a, b], [b, a], [a, a]] -> [ [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b], [b, a], [a, b]] -> [ [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b], [b, a], [a, a]] -> [ [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 1/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, b], [b, a], [a, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 1 7 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 3 1 \
                | 0 0 1 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
reason
  no strict rules

**************************************************
skeleton: (1/1,2)\TileAllAll{2}(4/4,4)\Weight(1/3,4)\Matrix{\Natural}{3}(0/3,3)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 11
  max duration 0.685024426000
  min duration 0.013090928000
  total durat. 3.577941733000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 11
  max duration 0.783640773000
  min duration 0.010956788000
  total durat. 4.909089352000
**************************************************
F                                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F                                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                                = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
F                                = 10 , num_top_rules = 10 , num_weak_rules = 2 , alphabet_size = 4 , total_length
F                                = 52} , self = 88 , parent = Nothing , duration = 0.480242230000 , status
F                                = Fail , start = 2025-09-04 08:24:33.850939983 UTC , finish = 2025-09-04
F                                08:24:34.331182213 UTC , thread_cap_info = ("ThreadId 114", 3, False)}
F                                
| F                              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                              = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| F                              = 10 , num_top_rules = 10 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| F                              = 52} , self = 92 , parent = Nothing , duration = 0.541255941000 , status
| F                              = Fail , start = 2025-09-04 08:24:33.860655399 UTC , finish = 2025-09-04
| F                              08:24:34.40191134 UTC , thread_cap_info = ("ThreadId 118", 3, False)}
| F                              
| | F                            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                            = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F                            = 10 , num_top_rules = 10 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | F                            = 52} , self = 93 , parent = Nothing , duration = 0.641389062000 , status
| | F                            = Fail , start = 2025-09-04 08:24:33.862103742 UTC , finish = 2025-09-04
| | F                            08:24:34.503492804 UTC , thread_cap_info = ("ThreadId 119", 3, False)}
| | F                            
| | | F                          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F                          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F                          = 18 , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 3
| | | F                          , alphabet_size = 6 , total_length = 78} , self = 104 , parent = Nothing
| | | F                          , duration = 0.933908476000 , status = Fail , start = 2025-09-04 08:24:33.868475187
| | | F                          UTC , finish = 2025-09-04 08:24:34.802383663 UTC , thread_cap_info = ("ThreadId
| | | F                          149", 2, False)}
| | | F                          
| | | | F                        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F                        = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 2 , total_length
| | | | F                        = 28} , self = 90 , parent = Nothing , duration = 0.517157145000 , status
| | | | F                        = Fail , start = 2025-09-04 08:24:33.870327706 UTC , finish = 2025-09-04
| | | | F                        08:24:34.387484851 UTC , thread_cap_info = ("ThreadId 139", 1, False)}
| | | | F                        
| | | | | F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | F                      = 15 , num_top_rules = 15 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | | F                      = 78} , self = 89 , parent = Nothing , duration = 0.472097057000 , status
| | | | | F                      = Fail , start = 2025-09-04 08:24:33.876537181 UTC , finish = 2025-09-04
| | | | | F                      08:24:34.348634238 UTC , thread_cap_info = ("ThreadId 120", 3, False)}
| | | | | F                      
| | | | | | F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | | F                    = 15 , num_top_rules = 15 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | | | F                    = 78} , self = 96 , parent = Nothing , duration = 0.632356364000 , status
| | | | | | F                    = Fail , start = 2025-09-04 08:24:33.890074084 UTC , finish = 2025-09-04
| | | | | | F                    08:24:34.522430448 UTC , thread_cap_info = ("ThreadId 121", 3, False)}
| | | | | | F                    
| | | | | | | S                  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | | S                  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | S                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | S                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | S                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | S                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | | S                  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | | | | | | S                  = 2 , total_length = 28} , self = 102 , parent = Nothing , duration = 0.885945965000
| | | | | | | S                  , status = Success , start = 2025-09-04 08:24:33.891277384 UTC , finish
| | | | | | | S                  = 2025-09-04 08:24:34.777223349 UTC , thread_cap_info = ("ThreadId 153",
| | | | | | | S                  1, False)}
| | | | | | | S                  
| | | | | | | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | F                = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | F                = 26} , self = 91 , parent = Nothing , duration = 0.498680887000 , status
| | | | | | | | F                = Fail , start = 2025-09-04 08:24:33.899248724 UTC , finish = 2025-09-04
| | | | | | | | F                08:24:34.397929611 UTC , thread_cap_info = ("ThreadId 156", 1, False)}
| | | | | | | | F                
| | | | | | | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | | F              = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | | F              = 26} , self = 95 , parent = Nothing , duration = 0.610293364000 , status
| | | | | | | | | F              = Fail , start = 2025-09-04 08:24:33.906364568 UTC , finish = 2025-09-04
| | | | | | | | | F              08:24:34.516657932 UTC , thread_cap_info = ("ThreadId 158", 1, False)}
| | | | | | | | | F              
| | | | | | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | | F            = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | | | F            = 68} , self = 97 , parent = Nothing , duration = 0.597286120000 , status
| | | | | | | | | | F            = Fail , start = 2025-09-04 08:24:33.925780385 UTC , finish = 2025-09-04
| | | | | | | | | | F            08:24:34.523066505 UTC , thread_cap_info = ("ThreadId 170", 1, False)}
| | | | | | | | | | F            
| | | | | | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | | | F          = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | | | | F          = 68} , self = 98 , parent = Nothing , duration = 0.590689449000 , status
| | | | | | | | | | | F          = Fail , start = 2025-09-04 08:24:33.932419478 UTC , finish = 2025-09-04
| | | | | | | | | | | F          08:24:34.523108927 UTC , thread_cap_info = ("ThreadId 172", 1, False)}
| | | | | | | | | | | F          
| | | | | | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | | | | | F        = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | | | | | F        = 26} , self = 94 , parent = Nothing , duration = 0.580860092000 , status
| | | | | | | | | | | | F        = Fail , start = 2025-09-04 08:24:33.932422635 UTC , finish = 2025-09-04
| | | | | | | | | | | | F        08:24:34.513282727 UTC , thread_cap_info = ("ThreadId 166", 2, False)}
| | | | | | | | | | | | F        
| | | | | | | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | | | | | | | F      = 1 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 13 , total_length
| | | | | | | | | | | | | F      = 266} , self = 100 , parent = Nothing , duration = 0.685024426000 , status
| | | | | | | | | | | | | F      = Fail , start = 2025-09-04 08:24:33.95348097 UTC , finish = 2025-09-04
| | | | | | | | | | | | | F      08:24:34.638505396 UTC , thread_cap_info = ("ThreadId 177", 3, False)}
| | | | | | | | | | | | | F      
| | | | | | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | | | | | | | | F    = 1 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 13 , total_length
| | | | | | | | | | | | | | F    = 266} , self = 101 , parent = Nothing , duration = 0.783640773000 , status
| | | | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:24:33.973203956 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | F    08:24:34.756844729 UTC , thread_cap_info = ("ThreadId 179", 3, False)}
| | | | | | | | | | | | | | F    
| | | | | | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | | | | | | | | F  = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | | F  = 26} , self = 99 , parent = Nothing , duration = 0.563458601000 , status
| | | | | | | | | | | | | | | F  = Fail , start = 2025-09-04 08:24:33.973212188 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | F  08:24:34.536670789 UTC , thread_cap_info = ("ThreadId 167", 2, False)}
| | | | | | | | | | | | | | | F  
F | | | | | | | | | | | | | | |  
  | | | | F | | | | | | | | | |  
  | | | F   | | | | | | | | | |  
E | | |     | | | | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
E | | |     | | | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E | | |     | | | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E | | |     | | | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | |     | | | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | |     | | | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
E | | |     | | | | | | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
E | | |     | | | | | | | | | |  = 2 , total_length = 28} , self = 105 , parent = Nothing , duration = 0.414378845000
E | | |     | | | | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:24:34.388134045
E | | |     | | | | | | | | | |  UTC , finish = 2025-09-04 08:24:34.80251289 UTC , thread_cap_info = ("ThreadId
E | | |     | | | | | | | | | |  191", 1, False)}
E | | |     | | | | | | | | | |  
| | | |     | | F | | | | | | |  
| F | |     | |   | | | | | | |  
|   F |     | |   | | | | | | |  
|     |     | |   | | | F | | |  
| E   |     | |   | | |   | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| E   |     | |   | | |   | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E   |     | |   | | |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E   |     | |   | | |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E   |     | |   | | |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E   |     | |   | | |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| E   |     | |   | | |   | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| E   |     | |   | | |   | | |  = 4 , total_length = 26} , self = 120 , parent = Nothing , duration = 0.403187022000
| E   |     | |   | | |   | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:24:34.516034303
| E   |     | |   | | |   | | |  UTC , finish = 2025-09-04 08:24:34.919221325 UTC , thread_cap_info = ("ThreadId
| E   |     | |   | | |   | | |  195", 1, False)}
| E   |     | |   | | |   | | |  
| |   |     | |   F | |   | | |  
| |   |     F |     | |   | | |  
| |   |       |     F |   | | |  
| |   |       |       F   | | |  
| |   |       |           | | F  
| | S |       |           | |    Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | S |       |           | |    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | S |       |           | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | S |       |           | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S |       |           | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S |       |           | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | S |       |           | |    , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | S |       |           | |    = 4 , total_length = 26} , self = 115 , parent = Nothing , duration = 0.313981266000
| | S |       |           | |    , status = Success , start = 2025-09-04 08:24:34.552442297 UTC , finish
| | S |       |           | |    = 2025-09-04 08:24:34.866423563 UTC , thread_cap_info = ("ThreadId 199",
| | S |       |           | |    1, False)}
| | S |       |           | |    
| | | |       |           F |    
| | | |       |             F    
| | | |       S                  
| | | F                          
E | |                            
  | S                            
  E                              
