last 437 length 1833
CNF 437 vars 1833 clauses
last 1535 length 6305
CNF 1535 vars 6305 clauses
last 12071 length 51315
last 984 length 3939
last 14474 length 62073
last 1012 length 4129
CNF 984 vars 3939 clauses
CNF 12071 vars 51315 clauses
CNF 14474 vars 62073 clauses
last 1475 length 5923
CNF 1475 vars 5923 clauses
CNF 1012 vars 4129 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4242, clauses: 15674
last 4242 length 15674
CNF 4242 vars 15674 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2909, clauses: 10506
last 2909 length 10506
CNF 2909 vars 10506 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4242, clauses: 15674, status: Satisfied, time: 0.107317282s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2909, clauses: 10506, status: Satisfied, time: 0.080037929s
last 11895 length 50186
CNF 11895 vars 50186 clauses
last 14255 length 60297
CNF 14255 vars 60297 clauses
last 1293 length 5281
CNF 1293 vars 5281 clauses
last 1169 length 4675
CNF 1169 vars 4675 clauses
last 1339 length 5359
last 1393 length 5683
CNF 1339 vars 5359 clauses
CNF 1393 vars 5683 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3529, clauses: 12928
last 3529 length 12928
CNF 3529 vars 12928 clauses
last 16438 length 70308
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3938, clauses: 14469
last 3938 length 14469
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3529, clauses: 12928, status: Satisfied, time: 0.199309841s
CNF 3938 vars 14469 clauses
CNF 16438 vars 70308 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3938, clauses: 14469, status: Satisfied, time: 0.248500162s
last 17015 length 72494
CNF 17015 vars 72494 clauses
**************************************************
summary
**************************************************
SRS with 3 strict rules and 4 weak rules on 3 letters       strictify
SRS with 7 rules on 3 letters       mirror
SRS with 7 rules on 3 letters       DP
SRS with 16 strict rules and 7 weak rules on 6 letters       weights
SRS with 4 strict rules and 7 weak rules on 6 letters       EDG
2 sub-proofs
  1 SRS with 1 strict rules and 7 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 7 weak rules on 3 letters       EDG

  2 SRS with 3 strict rules and 7 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 2 strict rules and 7 weak rules on 5 letters       weights
  SRS with 0 strict rules and 7 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [c, b, a] -> [a, b, b] {- Input 0 -}
  [b, a, c] -> [b, b, b] {- Input 1 -}
  [a, c, c] -> [a, b, b] {- Input 2 -}
  [c, c, a] ->= [c, a, c] {- Input 3 -}
  [a, a, a] ->= [a, a, b] {- Input 4 -}
  [a, b, a] ->= [b, b, a] {- Input 5 -}
  [b, b, b] ->= [a, b, c] {- Input 6 -}
reason
  strictify
   property Termination
has value Just True
for SRS
  [c, b, a] -> [a, b, b] {- Input 0 -}
  [b, a, c] -> [b, b, b] {- Input 1 -}
  [a, c, c] -> [a, b, b] {- Input 2 -}
  [c, c, a] -> [c, a, c] {- Strictified (Input 3) -}
  [a, a, a] -> [a, a, b] {- Strictified (Input 4) -}
  [a, b, a] -> [b, b, a] {- Strictified (Input 5) -}
  [b, b, b] -> [a, b, c] {- Strictified (Input 6) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, b, c] -> [b, b, a] {- Mirror (Input 0) -}
  [c, a, b] -> [b, b, b] {- Mirror (Input 1) -}
  [c, c, a] -> [b, b, a] {- Mirror (Input 2) -}
  [a, c, c] -> [c, a, c] {- Mirror (Strictified (Input 3)) -}
  [a, a, a] -> [b, a, a] {- Mirror (Strictified (Input 4)) -}
  [a, b, a] -> [a, b, b] {- Mirror (Strictified (Input 5)) -}
  [b, b, b] -> [c, b, a] {- Mirror (Strictified (Input 6)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b, c] ->= [b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, a, b] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, a] ->= [b, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, c] ->= [c, a, c] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, a, a] ->= [b, a, a] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, b, a] ->= [a, b, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [b, b, b] ->= [c, b, a] {- DP Nontop (Mirror (Strictified (Input 6))) -}
  [a#, a, a] |-> [b#, a, a] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [a#, b, a] |-> [a#, b, b] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [a#, b, a] |-> [b#] {- DP (Top 2) (Mirror (Strictified (Input 5))) -}
  [a#, b, a] |-> [b#, b] {- DP (Top 1) (Mirror (Strictified (Input 5))) -}
  [a#, b, c] |-> [a#] {- DP (Top 2) (Mirror (Input 0)) -}
  [a#, b, c] |-> [b#, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [a#, b, c] |-> [b#, b, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [a#, c, c] |-> [a#, c] {- DP (Top 1) (Mirror (Strictified (Input 3))) -}
  [a#, c, c] |-> [c#, a, c] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [b#, b, b] |-> [a#] {- DP (Top 2) (Mirror (Strictified (Input 6))) -}
  [b#, b, b] |-> [b#, a] {- DP (Top 1) (Mirror (Strictified (Input 6))) -}
  [b#, b, b] |-> [c#, b, a] {- DP (Top 0) (Mirror (Strictified (Input 6))) -}
  [c#, a, b] |-> [b#, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [c#, a, b] |-> [b#, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, c, a] |-> [b#, a] {- DP (Top 1) (Mirror (Input 2)) -}
  [c#, c, a] |-> [b#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  (a, 1/1)
  (b, 1/1)
  (c, 1/1)
  (a#, 1/1)
  (b#, 0/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a, b, c] ->= [b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, a, b] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, a] ->= [b, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, c] ->= [c, a, c] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, a, a] ->= [b, a, a] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, b, a] ->= [a, b, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [b, b, b] ->= [c, b, a] {- DP Nontop (Mirror (Strictified (Input 6))) -}
  [a#, b, a] |-> [a#, b, b] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [b#, b, b] |-> [c#, b, a] {- DP (Top 0) (Mirror (Strictified (Input 6))) -}
  [c#, a, b] |-> [b#, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, c, a] |-> [b#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, a] |-> [a#, b, b] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [a, b, c] ->= [b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, a, b] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, a] ->= [b, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, c] ->= [c, a, c] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, a, a] ->= [b, a, a] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, b, a] ->= [a, b, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [b, b, b] ->= [c, b, a] {- DP Nontop (Mirror (Strictified (Input 6))) -}
reason
  ( a
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 3A 3A 4A - \
        | 3A 3A 4A - |
        | 3A 3A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a, b, c] ->= [b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, a, b] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, a] ->= [b, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, c] ->= [c, a, c] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, a, a] ->= [b, a, a] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, b, a] ->= [a, b, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [b, b, b] ->= [c, b, a] {- DP Nontop (Mirror (Strictified (Input 6))) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [b#, b, b] |-> [c#, b, a] {- DP (Top 0) (Mirror (Strictified (Input 6))) -}
  [c#, a, b] |-> [b#, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, c, a] |-> [b#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [a, b, c] ->= [b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, a, b] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, a] ->= [b, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, c] ->= [c, a, c] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, a, a] ->= [b, a, a] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, b, a] ->= [a, b, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [b, b, b] ->= [c, b, a] {- DP Nontop (Mirror (Strictified (Input 6))) -}
reason
  ( a
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 3A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 3A 3A 6A - \
        | 0A 3A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 13A 16A 16A - \
        | 13A 16A 16A - |
        | 13A 16A 16A - |
        \ -   -   -   - / )
  ( c#
  , Wk  / 10A 13A 13A - \
        | 10A 13A 13A - |
        | 10A 13A 13A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [c#, a, b] |-> [b#, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, c, a] |-> [b#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [a, b, c] ->= [b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, a, b] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, a] ->= [b, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, c] ->= [c, a, c] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, a, a] ->= [b, a, a] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, b, a] ->= [a, b, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [b, b, b] ->= [c, b, a] {- DP Nontop (Mirror (Strictified (Input 6))) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (b#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [a, b, c] ->= [b, b, a] {- DP Nontop (Mirror (Input 0)) -}
  [c, a, b] ->= [b, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, a] ->= [b, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [a, c, c] ->= [c, a, c] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, a, a] ->= [b, a, a] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, b, a] ->= [a, b, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [b, b, b] ->= [c, b, a] {- DP Nontop (Mirror (Strictified (Input 6))) -}
reason
  EDG

**************************************************
skeleton: (3/4,3)\Strictify\Mirror(7,3)\Deepee(16/7,6)\Weight(4/7,6)\EDG[(1/7,4)\Matrix{\Arctic}{3}(0/7,3)\EDG[],(3/7,5)\Matrix{\Arctic}{3}(2/7,5)\Weight(0/7,3)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 0.798297736000
  min duration 0.054098083000
  total durat. 1.523927745000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.285472373000
  min duration 0.074792238000
  total durat. 2.576495437000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 78
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 63
      , alphabet_size = 11
      , total_length = 624}
    , self = 129
    , parent = Nothing
    , duration = 1.285472373000
    , status = Fail
    , start = 2025-09-04 08:20:52.522441147 UTC
    , finish = 2025-09-04 08:20:53.80791352 UTC
    , thread_cap_info = ("ThreadId 186", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 4
  max duration 0.610616600000
  min duration 0.366983649000
  total durat. 1.922601072000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 0.406885278000
  min duration 0.228949777000
  total durat. 1.237321173000
**************************************************
F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F              = False\n , verbose = False}" , input_size = Size { num_rules = 63 , num_strict_rules
F              = 63 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
F              = 504} , self = 92 , parent = Nothing , duration = 0.300012467000 , status
F              = Fail , start = 2025-09-04 08:20:51.985120882 UTC , finish = 2025-09-04
F              08:20:52.285133349 UTC , thread_cap_info = ("ThreadId 122", 1, False)}
F              
| F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F            = False\n , verbose = False}" , input_size = Size { num_rules = 63 , num_strict_rules
| F            = 63 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F            = 504} , self = 86 , parent = Nothing , duration = 0.263577414000 , status
| F            = Fail , start = 2025-09-04 08:20:52.002427909 UTC , finish = 2025-09-04
| F            08:20:52.266005323 UTC , thread_cap_info = ("ThreadId 124", 1, False)}
| F            
| | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F          = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F          = 5 , num_top_rules = 5 , num_weak_rules = 7 , alphabet_size = 5 , total_length
| | F          = 72} , self = 88 , parent = Nothing , duration = 0.105139397000 , status
| | F          = Fail , start = 2025-09-04 08:20:52.178282075 UTC , finish = 2025-09-04
| | F          08:20:52.283421472 UTC , thread_cap_info = ("ThreadId 155", 0, False)}
| | F          
| | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | F        = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | F        = 48} , self = 95 , parent = Nothing , duration = 0.124961066000 , status
| | | F        = Fail , start = 2025-09-04 08:20:52.182153149 UTC , finish = 2025-09-04
| | | F        08:20:52.307114215 UTC , thread_cap_info = ("ThreadId 157", 0, False)}
| | | F        
| | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | F      = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | F      = 48} , self = 91 , parent = Nothing , duration = 0.101049244000 , status
| | | | F      = Fail , start = 2025-09-04 08:20:52.182436595 UTC , finish = 2025-09-04
| | | | F      08:20:52.283485839 UTC , thread_cap_info = ("ThreadId 158", 0, False)}
| | | | F      
| F | | |      
|   F | |      
|     | F      
F     |        
S     |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S     |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S     |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S     |        = 12 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 7 ,
S     |        alphabet_size = 5 , total_length = 72} , self = 102 , parent = Nothing
S     |        , duration = 0.275662418000 , status = Success , start = 2025-09-04 08:20:52.292282083
S     |        UTC , finish = 2025-09-04 08:20:52.567944501 UTC , thread_cap_info = ("ThreadId
S     |        171", 0, False)}
S     |        
|     F        
| F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F            = False\n , verbose = False}" , input_size = Size { num_rules = 66 , num_strict_rules
| F            = 3 , num_top_rules = 3 , num_weak_rules = 63 , alphabet_size = 10 , total_length
| F            = 528} , self = 118 , parent = Nothing , duration = 0.798297736000 , status
| F            = Fail , start = 2025-09-04 08:20:52.308316438 UTC , finish = 2025-09-04
| F            08:20:53.106614174 UTC , thread_cap_info = ("ThreadId 178", 1, False)}
| F            
| | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F          = False\n , verbose = False}" , input_size = Size { num_rules = 66 , num_strict_rules
| | F          = 3 , num_top_rules = 3 , num_weak_rules = 63 , alphabet_size = 10 , total_length
| | F          = 528} , self = 111 , parent = Nothing , duration = 0.581913592000 , status
| | F          = Fail , start = 2025-09-04 08:20:52.322557149 UTC , finish = 2025-09-04
| | F          08:20:52.904470741 UTC , thread_cap_info = ("ThreadId 179", 1, False)}
| | F          
| | | E        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | E        , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 7 , alphabet_size
| | | E        = 5 , total_length = 72} , self = 107 , parent = Nothing , duration = 0.479932040000
| | | E        , status = Except "AsyncCancelled" , start = 2025-09-04 08:20:52.322557659
| | | E        UTC , finish = 2025-09-04 08:20:52.802489699 UTC , thread_cap_info = ("ThreadId
| | | E        173", 0, False)}
| | | E        
| | | | S      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S      = 8 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size
| | | | S      = 4 , total_length = 48} , self = 103 , parent = Nothing , duration = 0.228949777000
| | | | S      , status = Success , start = 2025-09-04 08:20:52.343661924 UTC , finish
| | | | S      = 2025-09-04 08:20:52.572611701 UTC , thread_cap_info = ("ThreadId 174",
| | | | S      0, False)}
| | | | S      
| | | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | E    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 7 , alphabet_size
| | | | | E    = 4 , total_length = 48} , self = 106 , parent = Nothing , duration = 0.366983649000
| | | | | E    , status = Except "AsyncCancelled" , start = 2025-09-04 08:20:52.43547758
| | | | | E    UTC , finish = 2025-09-04 08:20:52.802461229 UTC , thread_cap_info = ("ThreadId
| | | | | E    181", 0, False)}
| | | | | E    
| | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 78 , num_strict_rules
| | | | | | F  = 15 , num_top_rules = 15 , num_weak_rules = 63 , alphabet_size = 11 ,
| | | | | | F  total_length = 624} , self = 129 , parent = Nothing , duration = 1.285472373000
| | | | | | F  , status = Fail , start = 2025-09-04 08:20:52.522441147 UTC , finish =
| | | | | | F  2025-09-04 08:20:53.80791352 UTC , thread_cap_info = ("ThreadId 186", 0,
| | | | | | F  False)}
| | | | | | F  
S | | | | | |  
  | | | S | |  
  | | |   E |  
  | | E     |  
  | F       |  
F |         |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |         |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |         |  = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
F |         |  = 4 , num_top_rules = 4 , num_weak_rules = 7 , alphabet_size = 5 , total_length
F |         |  = 66} , self = 120 , parent = Nothing , duration = 0.168971605000 , status
F |         |  = Fail , start = 2025-09-04 08:20:53.095128987 UTC , finish = 2025-09-04
F |         |  08:20:53.264100592 UTC , thread_cap_info = ("ThreadId 201", 0, False)}
F |         |  
| | F       |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F       |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F       |  = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | F       |  = 4 , num_top_rules = 4 , num_weak_rules = 7 , alphabet_size = 5 , total_length
| | F       |  = 66} , self = 121 , parent = Nothing , duration = 0.164551179000 , status
| | F       |  = Fail , start = 2025-09-04 08:20:53.10243667 UTC , finish = 2025-09-04
| | F       |  08:20:53.266987849 UTC , thread_cap_info = ("ThreadId 203", 0, False)}
| | F       |  
| F |       |  
| S |       |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S |       |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S |       |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S |       |  = 10 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 ,
| S |       |  alphabet_size = 5 , total_length = 60} , self = 122 , parent = Nothing
| S |       |  , duration = 0.325823700000 , status = Success , start = 2025-09-04 08:20:53.162440948
| S |       |  UTC , finish = 2025-09-04 08:20:53.488264648 UTC , thread_cap_info = ("ThreadId
| S |       |  206", 0, False)}
| S |       |  
| | | E     |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E     |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | E     |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 7 , alphabet_size
| | | E     |  = 5 , total_length = 60} , self = 126 , parent = Nothing , duration = 0.610616600000
| | | E     |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:20:53.184558967
| | | E     |  UTC , finish = 2025-09-04 08:20:53.795175567 UTC , thread_cap_info = ("ThreadId
| | | E     |  207", 0, False)}
| | | E     |  
F | | |     |  
  | F |     |  
S |   |     |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S |   |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S |   |     |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S |   |     |  = 11 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 7 ,
S |   |     |  alphabet_size = 5 , total_length = 66} , self = 124 , parent = Nothing
S |   |     |  , duration = 0.406885278000 , status = Success , start = 2025-09-04 08:20:53.32327288
S |   |     |  UTC , finish = 2025-09-04 08:20:53.730158158 UTC , thread_cap_info = ("ThreadId
S |   |     |  210", 0, False)}
S |   |     |  
| | E |     |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E |     |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E |     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E |     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | E |     |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 7 , alphabet_size
| | E |     |  = 5 , total_length = 66} , self = 127 , parent = Nothing , duration = 0.465068783000
| | E |     |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:20:53.342584069
| | E |     |  UTC , finish = 2025-09-04 08:20:53.807652852 UTC , thread_cap_info = ("ThreadId
| | E |     |  211", 0, False)}
| | E |     |  
| S | |     |  
S   | |     |  
    | E     |  
    E       |  
            F  
