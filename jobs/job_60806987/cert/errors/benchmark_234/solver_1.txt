last 682 length 2743
CNF 682 vars 2743 clauses
last 586 length 2389
CNF 586 vars 2389 clauses
last 873 length 3517
CNF 873 vars 3517 clauses
last 713 length 2911
CNF 713 vars 2911 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2114, clauses: 7539
last 2114 length 7539
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2712, clauses: 9689
CNF 2114 vars 7539 clauses
last 2712 length 9689
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8044, clauses: 33573
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9877, clauses: 41243
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2114, clauses: 7539, status: Satisfied, time: 0.095875365s
CNF 2712 vars 9689 clauses
last 8044 length 33573
last 10534 length 44332
last 9877 length 41243
last 1012 length 4157
last 1503 length 6141
last 1044 length 4229
last 1487 length 6003
last 10491 length 44282
last 11414 length 48220
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2712, clauses: 9689, status: Satisfied, time: 0.65622836s
CNF 8044 vars 33573 clauses
last 11005 length 46186
CNF 10534 vars 44332 clauses
last 14065 length 59168
CNF 9877 vars 41243 clauses
last 13530 length 57823
CNF 1012 vars 4157 clauses
CNF 1044 vars 4229 clauses
CNF 1503 vars 6141 clauses
CNF 1487 vars 6003 clauses
CNF 10491 vars 44282 clauses
CNF 11414 vars 48220 clauses
CNF 11005 vars 46186 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8044, clauses: 33573, status: Satisfied, time: 0.763866822s
CNF 14065 vars 59168 clauses
CNF 13530 vars 57823 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9877, clauses: 41243, status: Satisfied, time: 0.801182835s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2939, clauses: 10686
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4361, clauses: 16155
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11098, clauses: 46533
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13690, clauses: 57341
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19599, clauses: 74522
last 2939 length 10686
last 4361 length 16155
last 11098 length 46533
last 13690 length 57341
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23963, clauses: 92373
last 19599 length 74522
CNF 2939 vars 10686 clauses
CNF 4361 vars 16155 clauses
CNF 11098 vars 46533 clauses
CNF 13690 vars 57341 clauses
last 23963 length 92373
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2939, clauses: 10686, status: Satisfied, time: 1.009705254s
CNF 19599 vars 74522 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4361, clauses: 16155, status: Satisfied, time: 0.984747985s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11098, clauses: 46533, status: Satisfied, time: 1.082718748s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13690, clauses: 57341, status: Satisfied, time: 1.168127554s
CNF 23963 vars 92373 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19599, clauses: 74522, status: Satisfied, time: 0.985426337s
last 902 length 3647
last 1005 length 4143
CNF 1005 vars 4143 clauses
last 872 length 3539
CNF 902 vars 3647 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 23963, clauses: 92373, status: Satisfied, time: 0.801590412s
last 1079 length 4369
CNF 872 vars 3539 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3129, clauses: 11270
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2633, clauses: 9477
CNF 1079 vars 4369 clauses
last 3129 length 11270
last 2633 length 9477
last 10819 length 45414
last 11236 length 47458
CNF 3129 vars 11270 clauses
CNF 2633 vars 9477 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10466, clauses: 43859
last 13977 length 58916
last 13659 length 58668
CNF 10819 vars 45414 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11713, clauses: 49055
CNF 11236 vars 47458 clauses
last 10466 length 43859
last 11713 length 49055
CNF 13977 vars 58916 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2633, clauses: 9477, status: Satisfied, time: 0.845246615s
CNF 13659 vars 58668 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3129, clauses: 11270, status: Satisfied, time: 1.013971385s
CNF 10466 vars 43859 clauses
CNF 11713 vars 49055 clauses
last 862 length 3469
CNF 862 vars 3469 clauses
last 916 length 3703
CNF 916 vars 3703 clauses
**************************************************
summary
**************************************************
SRS with 2 strict rules and 4 weak rules on 3 letters       strictify
SRS with 6 rules on 3 letters       mirror
SRS with 6 rules on 3 letters       DP
SRS with 12 strict rules and 6 weak rules on 6 letters       weights
SRS with 6 strict rules and 6 weak rules on 6 letters       EDG
SRS with 6 strict rules and 6 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 6 weak rules on 6 letters       weights
SRS with 2 strict rules and 6 weak rules on 5 letters       EDG
SRS with 2 strict rules and 6 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 6 weak rules on 5 letters       weights
SRS with 0 strict rules and 6 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [c, c, a] -> [b, b, c] {- Input 0 -}
  [a, b, c] -> [a, b, a] {- Input 1 -}
  [c, c, c] ->= [b, c, a] {- Input 2 -}
  [a, b, b] ->= [a, c, a] {- Input 3 -}
  [c, c, a] ->= [b, b, b] {- Input 4 -}
  [c, b, a] ->= [c, c, b] {- Input 5 -}
reason
  strictify
   property Termination
has value Just True
for SRS
  [c, c, a] -> [b, b, c] {- Input 0 -}
  [a, b, c] -> [a, b, a] {- Input 1 -}
  [c, c, c] -> [b, c, a] {- Strictified (Input 2) -}
  [a, b, b] -> [a, c, a] {- Strictified (Input 3) -}
  [c, c, a] -> [b, b, b] {- Strictified (Input 4) -}
  [c, b, a] -> [c, c, b] {- Strictified (Input 5) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, c, c] -> [c, b, b] {- Mirror (Input 0) -}
  [c, b, a] -> [a, b, a] {- Mirror (Input 1) -}
  [c, c, c] -> [a, c, b] {- Mirror (Strictified (Input 2)) -}
  [b, b, a] -> [a, c, a] {- Mirror (Strictified (Input 3)) -}
  [a, c, c] -> [b, b, b] {- Mirror (Strictified (Input 4)) -}
  [a, b, c] -> [b, c, c] {- Mirror (Strictified (Input 5)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, c, c] ->= [c, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [a, c, b] {- DP Nontop (Mirror (Strictified (Input 2))) -}
  [b, b, a] ->= [a, c, a] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, c, c] ->= [b, b, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, b, c] ->= [b, c, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a#, b, c] |-> [b#, c, c] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [a#, b, c] |-> [c#, c] {- DP (Top 1) (Mirror (Strictified (Input 5))) -}
  [a#, c, c] |-> [b#] {- Many [ DP (Top 2) (Mirror (Strictified (Input 4))) , DP (Top 2) (Mirror (Input 0)) ] -}
  [a#, c, c] |-> [b#, b] {- Many [ DP (Top 1) (Mirror (Strictified (Input 4))) , DP (Top 1) (Mirror (Input 0)) ] -}
  [a#, c, c] |-> [b#, b, b] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [a#, c, c] |-> [c#, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, b, a] |-> [a#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [b#, b, a] |-> [c#, a] {- DP (Top 1) (Mirror (Strictified (Input 3))) -}
  [c#, b, a] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, c, c] |-> [a#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 2))) -}
  [c#, c, c] |-> [b#] {- DP (Top 2) (Mirror (Strictified (Input 2))) -}
  [c#, c, c] |-> [c#, b] {- DP (Top 1) (Mirror (Strictified (Input 2))) -}
reason
  (a, 1/1)
  (b, 1/1)
  (c, 1/1)
  (a#, 0/1)
  (b#, 0/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a, c, c] ->= [c, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [a, c, b] {- DP Nontop (Mirror (Strictified (Input 2))) -}
  [b, b, a] ->= [a, c, a] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, c, c] ->= [b, b, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, b, c] ->= [b, c, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a#, b, c] |-> [b#, c, c] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [a#, c, c] |-> [b#, b, b] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [a#, c, c] |-> [c#, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, b, a] |-> [a#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [c#, b, a] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, c, c] |-> [a#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 2))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, c] |-> [b#, c, c] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [b#, b, a] |-> [a#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [a#, c, c] |-> [b#, b, b] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [a#, c, c] |-> [c#, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [c#, b, a] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, c, c] |-> [a#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 2))) -}
  [a, c, c] ->= [c, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [a, c, b] {- DP Nontop (Mirror (Strictified (Input 2))) -}
  [b, b, a] ->= [a, c, a] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, c, c] ->= [b, b, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, b, c] ->= [b, c, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  ( a
  , Wk  / 6A 6A 6A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 3A 6A 6A - \
        | 3A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 3A 6A 6A - \
        | 3A 6A 6A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 7A 7A 7A - \
        | 7A 7A 7A - |
        | 7A 7A 7A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 4A 7A 7A - \
        | 4A 7A 7A - |
        | 4A 7A 7A - |
        \ -  -  -  - / )
  ( c#
  , Wk  / 7A 10A 10A - \
        | 7A 10A 10A - |
        | 7A 10A 10A - |
        \ -  -   -   - / )
   property Termination
has value Just True
for SRS
  [a#, b, c] |-> [b#, c, c] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [b#, b, a] |-> [a#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [a#, c, c] |-> [c#, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [a, c, c] ->= [c, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [a, c, b] {- DP Nontop (Mirror (Strictified (Input 2))) -}
  [b, b, a] ->= [a, c, a] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, c, c] ->= [b, b, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, b, c] ->= [b, c, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 1/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a#, b, c] |-> [b#, c, c] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [b#, b, a] |-> [a#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [a, c, c] ->= [c, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [a, c, b] {- DP Nontop (Mirror (Strictified (Input 2))) -}
  [b, b, a] ->= [a, c, a] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, c, c] ->= [b, b, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, b, c] ->= [b, c, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, c] |-> [b#, c, c] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [b#, b, a] |-> [a#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [a, c, c] ->= [c, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [a, c, b] {- DP Nontop (Mirror (Strictified (Input 2))) -}
  [b, b, a] ->= [a, c, a] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, c, c] ->= [b, b, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, b, c] ->= [b, c, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  ( a
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 6A 6A 6A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 4A 4A 5A - \
        | 4A 4A 5A - |
        | 4A 4A 5A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 1A 4A 4A - \
        | 1A 4A 4A - |
        | 1A 4A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [b#, b, a] |-> [a#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [a, c, c] ->= [c, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [a, c, b] {- DP Nontop (Mirror (Strictified (Input 2))) -}
  [b, b, a] ->= [a, c, a] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, c, c] ->= [b, b, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, b, c] ->= [b, c, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [a, c, c] ->= [c, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [c, b, a] ->= [a, b, a] {- DP Nontop (Mirror (Input 1)) -}
  [c, c, c] ->= [a, c, b] {- DP Nontop (Mirror (Strictified (Input 2))) -}
  [b, b, a] ->= [a, c, a] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, c, c] ->= [b, b, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, b, c] ->= [b, c, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  EDG

**************************************************
skeleton: (2/4,3)\Strictify\Mirror(6,3)\Deepee(12/6,6)\Weight\EDG(6/6,6)\Matrix{\Arctic}{3}(3/6,6)\Weight\EDG(2/6,5)\Matrix{\Arctic}{3}(1/6,5)\Weight(0/6,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 12
  max duration 1.477646837000
  min duration 0.019843495000
  total durat. 8.319382473000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 54
      , alphabet_size = 10
      , total_length = 480}
    , self = 99
    , parent = Nothing
    , duration = 1.119400605000
    , status = Fail
    , start = 2025-09-04 08:21:20.424264295 UTC
    , finish = 2025-09-04 08:21:21.5436649 UTC
    , thread_cap_info = ("ThreadId 158", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 54
      , alphabet_size = 12
      , total_length = 576}
    , self = 104
    , parent = Nothing
    , duration = 1.165339066000
    , status = Fail
    , start = 2025-09-04 08:21:20.58350195 UTC
    , finish = 2025-09-04 08:21:21.748841016 UTC
    , thread_cap_info = ("ThreadId 169", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 59
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 54
      , alphabet_size = 10
      , total_length = 472}
    , self = 141
    , parent = Nothing
    , duration = 1.438041795000
    , status = Fail
    , start = 2025-09-04 08:21:23.823483447 UTC
    , finish = 2025-09-04 08:21:25.261525242 UTC
    , thread_cap_info = ("ThreadId 223", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 71
      , num_strict_rules = 17
      , num_top_rules = 17
      , num_weak_rules = 54
      , alphabet_size = 12
      , total_length = 568}
    , self = 145
    , parent = Nothing
    , duration = 1.477646837000
    , status = Fail
    , start = 2025-09-04 08:21:24.03192387 UTC
    , finish = 2025-09-04 08:21:25.509570707 UTC
    , thread_cap_info = ("ThreadId 230", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 12
  max duration 1.751129777000
  min duration 0.009285707000
  total durat. 9.285437794000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 54
      , alphabet_size = 10
      , total_length = 480}
    , self = 103
    , parent = Nothing
    , duration = 1.143726596000
    , status = Fail
    , start = 2025-09-04 08:21:20.444467674 UTC
    , finish = 2025-09-04 08:21:21.58819427 UTC
    , thread_cap_info = ("ThreadId 159", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 54
      , alphabet_size = 12
      , total_length = 576}
    , self = 107
    , parent = Nothing
    , duration = 1.202170005000
    , status = Fail
    , start = 2025-09-04 08:21:20.605847606 UTC
    , finish = 2025-09-04 08:21:21.808017611 UTC
    , thread_cap_info = ("ThreadId 170", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 54
      , num_strict_rules = 54
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 432}
    , self = 100
    , parent = Nothing
    , duration = 1.296327817000
    , status = Fail
    , start = 2025-09-04 08:21:20.264282716 UTC
    , finish = 2025-09-04 08:21:21.560610533 UTC
    , thread_cap_info = ("ThreadId 137", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 59
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 54
      , alphabet_size = 10
      , total_length = 472}
    , self = 140
    , parent = Nothing
    , duration = 1.398839669000
    , status = Fail
    , start = 2025-09-04 08:21:23.843456938 UTC
    , finish = 2025-09-04 08:21:25.242296607 UTC
    , thread_cap_info = ("ThreadId 224", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 71
      , num_strict_rules = 17
      , num_top_rules = 17
      , num_weak_rules = 54
      , alphabet_size = 12
      , total_length = 568}
    , self = 150
    , parent = Nothing
    , duration = 1.751129777000
    , status = Fail
    , start = 2025-09-04 08:21:24.043447379 UTC
    , finish = 2025-09-04 08:21:25.794577156 UTC
    , thread_cap_info = ("ThreadId 231", 3, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.628837140000
  min duration 1.460061482000
  total durat. 3.088898622000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 30}
    , self = 101
    , parent = Nothing
    , duration = 1.460061482000
    , status = Success
    , start = 2025-09-04 08:21:20.125368414 UTC
    , finish = 2025-09-04 08:21:21.585429896 UTC
    , thread_cap_info = ("ThreadId 101", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 36}
    , self = 105
    , parent = Nothing
    , duration = 1.628837140000
    , status = Success
    , start = 2025-09-04 08:21:20.15537406 UTC
    , finish = 2025-09-04 08:21:21.7842112 UTC
    , thread_cap_info = ("ThreadId 105", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 6
  max duration 2.200046824000
  min duration 1.265256198000
  total durat. 11.436325278000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 6
      , alphabet_size = 5
      , total_length = 48}
    , self = 154
    , parent = Nothing
    , duration = 1.265256198000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:21:24.566608438 UTC
    , finish = 2025-09-04 08:21:25.831864636 UTC
    , thread_cap_info = ("ThreadId 233", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 42}
    , self = 148
    , parent = Nothing
    , duration = 1.475836042000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:21:24.267626273 UTC
    , finish = 2025-09-04 08:21:25.743462315 UTC
    , thread_cap_info = ("ThreadId 232", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 54
      , alphabet_size = 10
      , total_length = 480}
    , self = 124
    , parent = Nothing
    , duration = 2.137167337000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:21:21.608804207 UTC
    , finish = 2025-09-04 08:21:23.745971544 UTC
    , thread_cap_info = ("ThreadId 191", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 54
      , alphabet_size = 12
      , total_length = 576}
    , self = 133
    , parent = Nothing
    , duration = 2.158029491000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:21:21.865770451 UTC
    , finish = 2025-09-04 08:21:24.023799942 UTC
    , thread_cap_info = ("ThreadId 195", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 48}
    , self = 112
    , parent = Nothing
    , duration = 2.199989386000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:21:21.263462636 UTC
    , finish = 2025-09-04 08:21:23.463452022 UTC
    , thread_cap_info = ("ThreadId 186", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 6
      , alphabet_size = 6
      , total_length = 72}
    , self = 113
    , parent = Nothing
    , duration = 2.200046824000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:21:21.28423904 UTC
    , finish = 2025-09-04 08:21:23.484285864 UTC
    , thread_cap_info = ("ThreadId 187", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 2.216978361000
  min duration 0.428951571000
  total durat. 13.492972313000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 36}
    , self = 92
    , parent = Nothing
    , duration = 1.000534012000
    , status = Success
    , start = 2025-09-04 08:21:20.123326142 UTC
    , finish = 2025-09-04 08:21:21.123860154 UTC
    , thread_cap_info = ("ThreadId 100", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 42}
    , self = 143
    , parent = Nothing
    , duration = 1.668321541000
    , status = Success
    , start = 2025-09-04 08:21:23.817715702 UTC
    , finish = 2025-09-04 08:21:25.486037243 UTC
    , thread_cap_info = ("ThreadId 222", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 6
      , alphabet_size = 5
      , total_length = 48}
    , self = 146
    , parent = Nothing
    , duration = 1.851950380000
    , status = Success
    , start = 2025-09-04 08:21:23.756254221 UTC
    , finish = 2025-09-04 08:21:25.608204601 UTC
    , thread_cap_info = ("ThreadId 218", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 54
      , alphabet_size = 10
      , total_length = 480}
    , self = 119
    , parent = Nothing
    , duration = 2.063239639000
    , status = Success
    , start = 2025-09-04 08:21:21.566661535 UTC
    , finish = 2025-09-04 08:21:23.629901174 UTC
    , thread_cap_info = ("ThreadId 188", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 48}
    , self = 108
    , parent = Nothing
    , duration = 2.093351487000
    , status = Success
    , start = 2025-09-04 08:21:21.253203834 UTC
    , finish = 2025-09-04 08:21:23.346555321 UTC
    , thread_cap_info = ("ThreadId 184", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 6
      , alphabet_size = 6
      , total_length = 72}
    , self = 110
    , parent = Nothing
    , duration = 2.169645322000
    , status = Success
    , start = 2025-09-04 08:21:21.256421693 UTC
    , finish = 2025-09-04 08:21:23.426067015 UTC
    , thread_cap_info = ("ThreadId 185", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 54
      , alphabet_size = 12
      , total_length = 576}
    , self = 131
    , parent = Nothing
    , duration = 2.216978361000
    , status = Success
    , start = 2025-09-04 08:21:21.763527578 UTC
    , finish = 2025-09-04 08:21:23.980505939 UTC
    , thread_cap_info = ("ThreadId 193", 3, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 2
  max duration 5.151497231000
  min duration 0.018929117000
  total durat. 5.170426348000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 36}
    , self = 142
    , parent = Nothing
    , duration = 5.151497231000
    , status = Fail
    , start = 2025-09-04 08:21:20.125264946 UTC
    , finish = 2025-09-04 08:21:25.276762177 UTC
    , thread_cap_info = ("ThreadId 90", 0, False)}
**************************************************
E                            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E                            , closure = Forward\n , start_strict_only = True\n , max_closure_length
E                            = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
E                            , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
E                            max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
E                            [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
E                            string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
E                            , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E                            = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
E                            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E                            = 24} , self = 50 , parent = Nothing , duration = 0.125847561000 , status
E                            = Except "AsyncCancelled" , start = 2025-09-04 08:21:20.084760039 UTC ,
E                            finish = 2025-09-04 08:21:20.2106076 UTC , thread_cap_info = ("ThreadId
E                            57", 3, False)}
E                            
| E                          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E                          , closure = Backward\n , start_strict_only = True\n , max_closure_length
| E                          = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| E                          , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| E                          max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| E                          [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| E                          string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| E                          , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E                          = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
| E                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| E                          = 24} , self = 54 , parent = Nothing , duration = 0.130681367000 , status
| E                          = Except "AsyncCancelled" , start = 2025-09-04 08:21:20.095218377 UTC ,
| E                          finish = 2025-09-04 08:21:20.225899744 UTC , thread_cap_info = ("ThreadId
| E                          96", 3, False)}
| E                          
| | S                        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S                        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S                        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S                        = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | S                        = 4 , total_length = 30} , self = 88 , parent = Nothing , duration = 0.428951571000
| | S                        , status = Success , start = 2025-09-04 08:21:20.103836335 UTC , finish
| | S                        = 2025-09-04 08:21:20.532787906 UTC , thread_cap_info = ("ThreadId 97",
| | S                        3, False)}
| | S                        
| | | S                      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S                      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S                      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S                      = 6 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size
| | | S                      = 5 , total_length = 36} , self = 92 , parent = Nothing , duration = 1.000534012000
| | | S                      , status = Success , start = 2025-09-04 08:21:20.123326142 UTC , finish
| | | S                      = 2025-09-04 08:21:21.123860154 UTC , thread_cap_info = ("ThreadId 100",
| | | S                      2, False)}
| | | S                      
| | | | F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | F                    , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | F                    = True})" , input_size = Size { num_rules = 6 , num_strict_rules = 6 ,
| | | | F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | | F                    = 36} , self = 142 , parent = Nothing , duration = 5.151497231000 , status
| | | | F                    = Fail , start = 2025-09-04 08:21:20.125264946 UTC , finish = 2025-09-04
| | | | F                    08:21:25.276762177 UTC , thread_cap_info = ("ThreadId 90", 0, False)}
| | | | F                    
| | | | | S                  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | S                  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | S                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | S                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | S                  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | | | S                  = 4 , total_length = 30} , self = 101 , parent = Nothing , duration = 1.460061482000
| | | | | S                  , status = Success , start = 2025-09-04 08:21:20.125368414 UTC , finish
| | | | | S                  = 2025-09-04 08:21:21.585429896 UTC , thread_cap_info = ("ThreadId 101",
| | | | | S                  3, False)}
| | | | | S                  
| | | | | | S                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | S                , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 4 , alphabet_size
| | | | | | S                = 5 , total_length = 36} , self = 105 , parent = Nothing , duration = 1.628837140000
| | | | | | S                , status = Success , start = 2025-09-04 08:21:20.15537406 UTC , finish
| | | | | | S                = 2025-09-04 08:21:21.7842112 UTC , thread_cap_info = ("ThreadId 105",
| | | | | | S                2, False)}
| | | | | | S                
E | | | | | |                
  E | | | | |                
F   | | | | |                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F   | | | | |                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F   | | | | |                = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
F   | | | | |               Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2738, clauses: 9828
 = 54 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_lengthlast 2738 length 9828

F   | | | | |                = 432} , self = 94 , parent = Nothing , duration = 0.923464786000 , status
F   | | | | |                = Fail , start = 2025-09-04 08:21:20.264274198 UTC , finish = 2025-09-04
F   | | | | |                08:21:21.187738984 UTC , thread_cap_info = ("ThreadId 135", 0, False)}
F   | | | | |                
| F | | | | |                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | | |                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | | |                = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| F | | | | |                = 54 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F | | | | |                = 432} , self = 100 , parent = Nothing , duration = 1.296327817000 , status
| F | | | | |                = Fail , start = 2025-09-04 08:21:20.264282716 UTC , finish = 2025-09-04
| F | | | | |                08:21:21.560610533 UTC , thread_cap_info = ("ThreadId 137", 0, False)}
| F | | | | |                
| | | | | | | S              Info { what = "EDG { usable = True, tcap_inverse = True, tracing = False,
| | | | | | | S              verbose = False}" , input_size = Size { num_rules = 108 , num_strict_rules
| | | | | | | S              = 54 , num_top_rules = 54 , num_weak_rules = 54 , alphabet_size = 18 ,
| | | | | | | S              total_length = 864} , self = 87 , parent = Nothing , duration = 0.128565115000
| | | | | | | S              , status = Success , start = 2025-09-04 08:21:20.40376013 UTC , finish
| | | | | | | S              = 2025-09-04 08:21:20.532325245 UTC , thread_cap_info = ("ThreadId 143",
| | | | | | | S              0, False)}
| | | | | | | S              
| | | | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | | | | | | F            = 6 , num_top_rules = 6 , num_weak_rules = 54 , alphabet_size = 10 , total_length
| | | | | | | | F            = 480} , self = 99 , parent = Nothing , duration = 1.119400605000 , status
| | | | | | | | F            = Fail , start = 2025-09-04 08:21:20.424264295 UTC , finish = 2025-09-04
| | | | | | | | F            08:21:21.5436649 UTC , thread_cap_info = ("ThreadId 158", 0, False)}
| | | | | | | | F            
| | | | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | | | | | | | F          = 6 , num_top_rules = 6 , num_weak_rules = 54 , alphabet_size = 10 , total_length
| | | | | | | | | F          = 480} , self = 103 , parent = Nothing , duration = 1.143726596000 , status
| | | | | | | | | F          = Fail , start = 2025-09-04 08:21:20.444467674 UTC , finish = 2025-09-04
| | | | | | | | | F          08:21:21.58819427 UTC , thread_cap_info = ("ThreadId 159", 0, False)}
| | | | | | | | | F          
| | | | | | | S | |          
| | | | | | | F | |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F | |          = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | F | |          = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | F | |          = 48} , self = 96 , parent = Nothing , duration = 0.721278204000 , status
| | | | | | | F | |          = Fail , start = 2025-09-04 08:21:20.532351229 UTC , finish = 2025-09-04
| | | | | | | F | |          08:21:21.253629433 UTC , thread_cap_info = ("ThreadId 162", 3, False)}
| | | | | | | F | |          
| | S | | | | | | |          
| | F | | | | | | |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | | | | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | | | | |          = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F | | | | | | |          = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | F | | | | | | |          = 48} , self = 95 , parent = Nothing , duration = 0.710191211000 , status
| | F | | | | | | |          = Fail , start = 2025-09-04 08:21:20.542985292 UTC , finish = 2025-09-04
| | F | | | | | | |          08:21:21.253176503 UTC , thread_cap_info = ("ThreadId 166", 3, False)}
| | F | | | | | | |          
| | | | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | | | F        = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size = 6 , total_length
| | | | | | | | | | F        = 72} , self = 97 , parent = Nothing , duration = 0.712951354000 , status
| | | | | | | | | | F        = Fail , start = 2025-09-04 08:21:20.543447145 UTC , finish = 2025-09-04
| | | | | | | | | | F        08:21:21.256398499 UTC , thread_cap_info = ("ThreadId 163", 0, False)}
| | | | | | | | | | F        
| | | | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | | | | F      = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size = 6 , total_length
| | | | | | | | | | | F      = 72} , self = 98 , parent = Nothing , duration = 0.706398593000 , status
| | | | | | | | | | | F      = Fail , start = 2025-09-04 08:21:20.559156379 UTC , finish = 2025-09-04
| | | | | | | | | | | F      08:21:21.265554972 UTC , thread_cap_info = ("ThreadId 164", 0, False)}
| | | | | | | | | | | F      
| | | | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 72 , num_strict_rules
| | | | | | | | | | | | F    = 18 , num_top_rules = 18 , num_weak_rules = 54 , alphabet_size = 12 ,
| | | | | | | | | | | | F    total_length = 576} , self = 104 , parent = Nothing , duration = 1.165339066000
| | | | | | | | | | | | F    , status = Fail , start = 2025-09-04 08:21:20.58350195 UTC , finish = 2025-09-04
| | | | | | | | | | | | F    08:21:21.748841016 UTC , thread_cap_info = ("ThreadId 169", 3, False)}
| | | | | | | | | | | | F    
| | | | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 72 , num_strict_rules
| | | | | | | | | | | | | F  = 18 , num_top_rules = 18 , num_weak_rules = 54 , alphabet_size = 12 ,
| | | | | | | | | | | | | F  total_length = 576} , self = 107 , parent = Nothing , duration = 1.202170005000
| | | | | | | | | | | | | F  , status = Fail , start = 2025-09-04 08:21:20.605847606 UTC , finish =
| | | | | | | | | | | | | F  2025-09-04 08:21:21.808017611 UTC , thread_cap_info = ("ThreadId 170",
| | | | | | | | | | | | | F  3, False)}
| | | | | | | | | | | | | F  
| | | S | | | | | | | | | |  
F | |   | | | | | | | | | |  
  | F   | | | | | | | | | |  
S |     | | | | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S |     | | | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S |     | | | | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S |     | | | | | | | | | |  = 8 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size
S |     | | | | | | | | | |  = 4 , total_length = 48} , self = 108 , parent = Nothing , duration = 2.093351487000
S |     | | | | | | | | | |  , status = Success , start = 2025-09-04 08:21:21.253203834 UTC , finish
S |     | | | | | | | | | |  = 2025-09-04 08:21:23.346555321 UTC , thread_cap_info = ("ThreadId 184",
S |     | | | | | | | | | |  3, False)}
S |     | | | | | | | | | |  
| |     | | | F | | | | | |  
| |     | | |   | | F | | |  
| | S   | | |   | |   | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S   | | |   | |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S   | | |   | |   | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S   | | |   | |   | | |  = 12 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 6 ,
| | S   | | |   | |   | | |  alphabet_size = 6 , total_length = 72} , self = 110 , parent = Nothing
| | S   | | |   | |   | | |  , duration = 2.169645322000 , status = Success , start = 2025-09-04 08:21:21.256421693
| | S   | | |   | |   | | |  UTC , finish = 2025-09-04 08:21:23.426067015 UTC , thread_cap_info = ("ThreadId
| | S   | | |   | |   | | |  185", 0, False)}
| | S   | | |   | |   | | |  
| | | E | | |   | |   | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | | |   | |   | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | | |   | |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | | |   | |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | |   | |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | |   | |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | E | | |   | |   | | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size
| | | E | | |   | |   | | |  = 4 , total_length = 48} , self = 112 , parent = Nothing , duration = 2.199989386000
| | | E | | |   | |   | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:21.263462636
| | | E | | |   | |   | | |  UTC , finish = 2025-09-04 08:21:23.463452022 UTC , thread_cap_info = ("ThreadId
| | | E | | |   | |   | | |  186", 3, False)}
| | | E | | |   | |   | | |  
| | | | | | |   | |   F | |  
| | | | | | | E | |     | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E | |     | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E | |     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E | |     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E | |     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E | |     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | | | | | E | |     | |  , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size
| | | | | | | E | |     | |  = 6 , total_length = 72} , self = 113 , parent = Nothing , duration = 2.200046824000
| | | | | | | E | |     | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:21.28423904
| | | | | | | E | |     | |  UTC , finish = 2025-09-04 08:21:23.484285864 UTC , thread_cap_info = ("ThreadId
| | | | | | | E | |     | |  187", 0, False)}
| | | | | | | E | |     | |  
| | | | | | | | F |     | |  
| F | | | | | |   |     | |  
| S | | | | | |   |     | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | | | |   |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | | | |   |     | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | | | |   |     | |  = 60 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 54 ,
| S | | | | | |   |     | |  alphabet_size = 10 , total_length = 480} , self = 119 , parent = Nothing
| S | | | | | |   |     | |  , duration = 2.063239639000 , status = Success , start = 2025-09-04 08:21:21.566661535
| S | | | | | |   |     | |  UTC , finish = 2025-09-04 08:21:23.629901174 UTC , thread_cap_info = ("ThreadId
| S | | | | | |   |     | |  188", 0, False)}
| S | | | | | |   |     | |  
| | | | | S | |   |     | |  
| | | | |   | |   F     | |  
| | | | | E | |         | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E | |         | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E | |         | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E | |         | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E | |         | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E | |         | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 60
| | | | | E | |         | |  , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 54 , alphabet_size
| | | | | E | |         | |  = 10 , total_length = 480} , self = 124 , parent = Nothing , duration =
| | | | | E | |         | |  2.137167337000 , status = Except "AsyncCancelled" , start = 2025-09-04
| | | | | E | |         | |  08:21:21.608804207 UTC , finish = 2025-09-04 08:21:23.745971544 UTC , thread_cap_info
| | | | | E | |         | |  = ("ThreadId 191", 0, False)}
| | | | | E | |         | |  
| | | | | | | |         F |  
| | | | | | | | S         |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | S         |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | S         |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | S         |  = 72 , num_strict_rules = 18 , num_top_rules = 18 , num_weak_rules = 54
| | | | | | | | S         |  , alphabet_size = 12 , total_length = 576} , self = 131 , parent = Nothing
| | | | | | | | S         |  , duration = 2.216978361000 , status = Success , start = 2025-09-04 08:21:21.763527578
| | | | | | | | S         |  UTC , finish = 2025-09-04 08:21:23.980505939 UTC , thread_cap_info = ("ThreadId
| | | | | | | | S         |  193", 3, False)}
| | | | | | | | S         |  
| | | | | | S | |         |  
| | | | | |   | |         F  
| | | | | | E | |            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E | |            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E | |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E | |            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E | |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E | |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 72
| | | | | | E | |            , num_strict_rules = 18 , num_top_rules = 18 , num_weak_rules = 54 , alphabet_size
| | | | | | E | |            = 12 , total_length = 576} , self = 133 , parent = Nothing , duration =
| | | | | | E | |            2.158029491000 , status = Except "AsyncCancelled" , start = 2025-09-04
| | | | | | E | |            08:21:21.865770451 UTC , finish = 2025-09-04 08:21:24.023799942 UTC , thread_cap_info
| | | | | | E | |            = ("ThreadId 195", 3, False)}
| | | | | | E | |            
S | | | | | | | |            
  | S | | | | | |            
  |   E | | | | |            
  |     | | | E |            
  S     | | |   |            
F       | | |   |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F       | | |   |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F       | | |   |            = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
F       | | |   |            = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size = 4 , total_length
F       | | |   |            = 42} , self = 138 , parent = Nothing , duration = 0.558789192000 , status
F       | | |   |            = Fail , start = 2025-09-04 08:21:23.644702219 UTC , finish = 2025-09-04
F       | | |   |            08:21:24.203491411 UTC , thread_cap_info = ("ThreadId 211", 0, False)}
F       | | |   |            
| F     | | |   |            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F     | | |   |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F     | | |   |            = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| F     | | |   |            = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| F     | | |   |            = 42} , self = 129 , parent = Nothing , duration = 0.154234237000 , status
| F     | | |   |            = Fail , start = 2025-09-04 08:21:23.663451035 UTC , finish = 2025-09-04
| F     | | |   |            08:21:23.817685272 UTC , thread_cap_info = ("ThreadId 212", 0, False)}
| F     | | |   |            
| | F   | | |   |            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F   | | |   |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F   | | |   |            = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F   | | |   |            = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size = 5 , total_length
| | F   | | |   |            = 48} , self = 139 , parent = Nothing , duration = 0.783332087000 , status
| | F   | | |   |            = Fail , start = 2025-09-04 08:21:23.726275881 UTC , finish = 2025-09-04
| | F   | | |   |            08:21:24.509607968 UTC , thread_cap_info = ("ThreadId 216", 0, False)}
| | F   | | |   |            
| | |   | E |   |            
| | | S |   |   |            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S |   |   |            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S |   |   |            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S |   |   |            = 8 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size
| | | S |   |   |            = 5 , total_length = 48} , self = 146 , parent = Nothing , duration = 1.851950380000
| | | S |   |   |            , status = Success , start = 2025-09-04 08:21:23.756254221 UTC , finish
| | | S |   |   |            = 2025-09-04 08:21:25.608204601 UTC , thread_cap_info = ("ThreadId 218",
| | | S |   |   |            0, False)}
| | | S |   |   |            
| F | | |   |   |            
| S | | |   |   |            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | |   |   |            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | |   |   |            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | |   |   |            = 7 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| S | | |   |   |            = 4 , total_length = 42} , self = 143 , parent = Nothing , duration = 1.668321541000
| S | | |   |   |            , status = Success , start = 2025-09-04 08:21:23.817715702 UTC , finish
| S | | |   |   |            = 2025-09-04 08:21:25.486037243 UTC , thread_cap_info = ("ThreadId 222",
| S | | |   |   |            0, False)}
| S | | |   |   |            
| | | | | F |   |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |   |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |   |            = False\n , verbose = False}" , input_size = Size { num_rules = 59 , num_strict_rules
| | | | | F |   |            = 5 , num_top_rules = 5 , num_weak_rules = 54 , alphabet_size = 10 , total_length
| | | | | F |   |            = 472} , self = 141 , parent = Nothing , duration = 1.438041795000 , status
| | | | | F |   |            = Fail , start = 2025-09-04 08:21:23.823483447 UTC , finish = 2025-09-04
| | | | | F |   |            08:21:25.261525242 UTC , thread_cap_info = ("ThreadId 223", 0, False)}
| | | | | F |   |            
| | | | | | | F |            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F |            = False\n , verbose = False}" , input_size = Size { num_rules = 59 , num_strict_rules
| | | | | | | F |            = 5 , num_top_rules = 5 , num_weak_rules = 54 , alphabet_size = 10 , total_length
| | | | | | | F |            = 472} , self = 140 , parent = Nothing , duration = 1.398839669000 , status
| | | | | | | F |            = Fail , start = 2025-09-04 08:21:23.843456938 UTC , finish = 2025-09-04
| | | | | | | F |            08:21:25.242296607 UTC , thread_cap_info = ("ThreadId 224", 0, False)}
| | | | | | | F |            
| | | | | | | | S            
| | | | | | E |              
| | | | | | F |              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F |              = False\n , verbose = False}" , input_size = Size { num_rules = 71 , num_strict_rules
| | | | | | F |              = 17 , num_top_rules = 17 , num_weak_rules = 54 , alphabet_size = 12 ,
| | | | | | F |              total_length = 568} , self = 145 , parent = Nothing , duration = 1.477646837000
| | | | | | F |              , status = Fail , start = 2025-09-04 08:21:24.03192387 UTC , finish = 2025-09-04
| | | | | | F |              08:21:25.509570707 UTC , thread_cap_info = ("ThreadId 230", 3, False)}
| | | | | | F |              
| | | | | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 71 , num_strict_rules
| | | | | | | | F            = 17 , num_top_rules = 17 , num_weak_rules = 54 , alphabet_size = 12 ,
| | | | | | | | F            total_length = 568} , self = 150 , parent = Nothing , duration = 1.751129777000
| | | | | | | | F            , status = Fail , start = 2025-09-04 08:21:24.043447379 UTC , finish =
| | | | | | | | F            2025-09-04 08:21:25.794577156 UTC , thread_cap_info = ("ThreadId 231",
| | | | | | | | F            3, False)}
| | | | | | | | F            
F | | | | | | | |            
E | | | | | | | |            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | | | | | |            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | | | | | |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | | | | | |            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | | | | | |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | | | | | |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
E | | | | | | | |            , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
E | | | | | | | |            = 4 , total_length = 42} , self = 148 , parent = Nothing , duration = 1.475836042000
E | | | | | | | |            , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:24.267626273
E | | | | | | | |            UTC , finish = 2025-09-04 08:21:25.743462315 UTC , thread_cap_info = ("ThreadId
E | | | | | | | |            232", 0, False)}
E | | | | | | | |            
| | F | | | | | |            
| | E | | | | | |            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | | | | |            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | | | |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | | | |            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | | |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | | |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | E | | | | | |            , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size
| | E | | | | | |            = 5 , total_length = 48} , self = 154 , parent = Nothing , duration = 1.265256198000
| | E | | | | | |            , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:24.566608438
| | E | | | | | |            UTC , finish = 2025-09-04 08:21:25.831864636 UTC , thread_cap_info = ("ThreadId
| | E | | | | | |            233", 0, False)}
| | E | | | | | |            
| | | | | | | F |            
| | | | | F |   |            
| | | | F   |   |            
| S | |     |   |            
|   | |     F   |            
|   | S         |            
E   |           |            
    |           F            
    E                        
F                            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                            = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
F                            = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size = 4 , total_length
F                            = 42} , self = 158 , parent = Nothing , duration = 0.111891457000 , status
F                            = Fail , start = 2025-09-04 08:21:25.858828642 UTC , finish = 2025-09-04
F                            08:21:25.970720099 UTC , thread_cap_info = ("ThreadId 253", 0, False)}
F                            
F                            
