[Info] pool sizes (success) 3 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 3 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 66 length 237
CNF 66 vars 237 clauses
last 40 length 129
last 40 length 129
CNF 40 vars 129 clauses
last 66 length 237
CNF 40 vars 129 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 592, clauses: 2038
last 592 length 2038
CNF 592 vars 2038 clauses
CNF 66 vars 237 clauses
last 908 length 3411
CNF 908 vars 3411 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 592, clauses: 2038, status: Unsatisfied, time: 0.033308049s
last 812 length 3043
CNF 812 vars 3043 clauses
last 1756 length 6899
last 209 length 793
last 812 length 3043
CNF 209 vars 793 clauses
CNF 1756 vars 6899 clauses
CNF 812 vars 3043 clauses
last 180 length 677
last 1756 length 6899
last 3915 length 15215
last 3915 length 15215
last 5585 length 22169
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8606, clauses: 34984
last 3915 length 15215
last 5585 length 22169
last 5585 length 22169
CNF 180 vars 677 clauses
CNF 1756 vars 6899 clauses
CNF 3915 vars 15215 clauses
CNF 3915 vars 15215 clauses
last 8606 length 34984
CNF 5585 vars 22169 clauses
CNF 3915 vars 15215 clauses
CNF 5585 vars 22169 clauses
CNF 5585 vars 22169 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1369, clauses: 4822
last 1369 length 4822
CNF 8606 vars 34984 clauses
CNF 1369 vars 4822 clauses
**************************************************
summary
**************************************************
SRS with 3 strict rules and 2 weak rules on 4 letters       split
2 sub-proofs
  1 SRS with 3 strict rules and 2 weak rules on 4 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
  SRS with 48 strict rules and 32 weak rules on Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1369, clauses: 4822, status: Unsatisfied, time: 0.073923242s
16Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8606, clauses: 34984, status: Satisfied, time: 0.963029156s
 letters       weights
  SRS with 24 strict rules and 32 weak rules on 15 letters       Matrix   { monotone = Strict, domain = Natural, method = KBO, shape = Full, bits = 1, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 2, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 22 strict rules and 32 weak rules on 15 letters       weights
  SRS with 0 strict rules and 32 weak rules on 13 letters       no strict rules

  2 SRS with 0 strict rules and 2 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, c, a] -> [d, d] {- Input 0 -}
  [b] -> [c, c] {- Input 1 -}
  [a, a] -> [a] {- Input 2 -}
  [a, b] ->= [d] {- Input 3 -}
  [d] ->= [a, b] {- Input 4 -}
reason
  split
   property Termination
has value Just True
for SRS
  [b, c, a] -> [d, d] {- Input 0 -}
  [b] -> [c, c] {- Input 1 -}
  [a, a] -> [a] {- Input 2 -}
  [a, b] ->= [d] {- Input 3 -}
  [d] ->= [a, b] {- Input 4 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[b, b], [b, c], [c, a], [a, b]] -> [ [b, d] , [d, d] , [ d , b ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[b, b], [b, c], [c, a], [a, c]] -> [ [b, d] , [d, d] , [ d , c ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, b], [b, c], [c, a], [a, a]] -> [ [b, d] , [d, d] , [ d , a ] ] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, b], [b, c], [c, a], [a, d]] -> [ [b, d] , [d, d] , [ d , d ] ] {- Semlab 0 (Concon 3 (Input 0)) -}
  [[c, b], [b, c], [c, a], [a, b]] -> [ [c, d] , [d, d] , [ d , b ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[c, b], [b, c], [c, a], [a, c]] -> [ [c, d] , [d, d] , [ d , c ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[c, b], [b, c], [c, a], [a, a]] -> [ [c, d] , [d, d] , [ d , a ] ] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, b], [b, c], [c, a], [a, d]] -> [ [c, d] , [d, d] , [ d , d ] ] {- Semlab 1 (Concon 3 (Input 0)) -}
  [[a, b], [b, c], [c, a], [a, b]] -> [ [a, d] , [d, d] , [ d , b ] ] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[a, b], [b, c], [c, a], [a, c]] -> [ [a, d] , [d, d] , [ d , c ] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[a, b], [b, c], [c, a], [a, a]] -> [ [a, d] , [d, d] , [ d , a ] ] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, b], [b, c], [c, a], [a, d]] -> [ [a, d] , [d, d] , [ d , d ] ] {- Semlab 2 (Concon 3 (Input 0)) -}
  [[d, b], [b, c], [c, a], [a, b]] -> [ [d, d] , [d, d] , [ d , b ] ] {- Semlab 3 (Concon 0 (Input 0)) -}
  [[d, b], [b, c], [c, a], [a, c]] -> [ [d, d] , [d, d] , [ d , c ] ] {- Semlab 3 (Concon 1 (Input 0)) -}
  [[d, b], [b, c], [c, a], [a, a]] -> [ [d, d] , [d, d] , [ d , a ] ] {- Semlab 3 (Concon 2 (Input 0)) -}
  [[d, b], [b, c], [c, a], [a, d]] -> [ [d, d] , [d, d] , [ d , d ] ] {- Semlab 3 (Concon 3 (Input 0)) -}
  [[b, b], [b, b]] -> [[b, c], [c, c], [c, b]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, b], [b, c]] -> [[b, c], [c, c], [c, c]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, b], [b, a]] -> [[b, c], [c, c], [c, a]] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, b], [b, d]] -> [[b, c], [c, c], [c, d]] {- Semlab 0 (Concon 3 (Input 1)) -}
  [[c, b], [b, b]] -> [[c, c], [c, c], [c, b]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[c, b], [b, c]] -> [[c, c], [c, c], [c, c]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[c, b], [b, a]] -> [[c, c], [c, c], [c, a]] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, b], [b, d]] -> [[c, c], [c, c], [c, d]] {- Semlab 1 (Concon 3 (Input 1)) -}
  [[a, b], [b, b]] -> [[a, c], [c, c], [c, b]] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[a, b], [b, c]] -> [[a, c], [c, c], [c, c]] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[a, b], [b, a]] -> [[a, c], [c, c], [c, a]] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, b], [b, d]] -> [[a, c], [c, c], [c, d]] {- Semlab 2 (Concon 3 (Input 1)) -}
  [[d, b], [b, b]] -> [[d, c], [c, c], [c, b]] {- Semlab 3 (Concon 0 (Input 1)) -}
  [[d, b], [b, c]] -> [[d, c], [c, c], [c, c]] {- Semlab 3 (Concon 1 (Input 1)) -}
  [[d, b], [b, a]] -> [[d, c], [c, c], [c, a]] {- Semlab 3 (Concon 2 (Input 1)) -}
  [[d, b], [b, d]] -> [[d, c], [c, c], [c, d]] {- Semlab 3 (Concon 3 (Input 1)) -}
  [[b, a], [a, a], [a, b]] -> [[b, a], [a, b]] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, a], [a, a], [a, c]] -> [[b, a], [a, c]] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a], [a, a], [a, a]] -> [[b, a], [a, a]] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, a], [a, a], [a, d]] -> [[b, a], [a, d]] {- Semlab 0 (Concon 3 (Input 2)) -}
  [[c, a], [a, a], [a, b]] -> [[c, a], [a, b]] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[c, a], [a, a], [a, c]] -> [[c, a], [a, c]] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[c, a], [a, a], [a, a]] -> [[c, a], [a, a]] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, a], [a, a], [a, d]] -> [[c, a], [a, d]] {- Semlab 1 (Concon 3 (Input 2)) -}
  [[a, a], [a, a], [a, b]] -> [[a, a], [a, b]] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[a, a], [a, a], [a, c]] -> [[a, a], [a, c]] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[a, a], [a, a], [a, a]] -> [[a, a], [a, a]] {- Semlab 2 (Concon 2 (Input 2)) -}
  [[a, a], [a, a], [a, d]] -> [[a, a], [a, d]] {- Semlab 2 (Concon 3 (Input 2)) -}
  [[d, a], [a, a], [a, b]] -> [[d, a], [a, b]] {- Semlab 3 (Concon 0 (Input 2)) -}
  [[d, a], [a, a], [a, c]] -> [[d, a], [a, c]] {- Semlab 3 (Concon 1 (Input 2)) -}
  [[d, a], [a, a], [a, a]] -> [[d, a], [a, a]] {- Semlab 3 (Concon 2 (Input 2)) -}
  [[d, a], [a, a], [a, d]] -> [[d, a], [a, d]] {- Semlab 3 (Concon 3 (Input 2)) -}
  [[b, a], [a, b], [b, b]] ->= [ [b, d] , [d, b] ] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[b, a], [a, b], [b, c]] ->= [ [b, d] , [d, c] ] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[b, a], [a, b], [b, a]] ->= [ [b, d] , [d, a] ] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[b, a], [a, b], [b, d]] ->= [ [b, d] , [d, d] ] {- Semlab 0 (Concon 3 (Input 3)) -}
  [[c, a], [a, b], [b, b]] ->= [ [c, d] , [d, b] ] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[c, a], [a, b], [b, c]] ->= [ [c, d] , [d, c] ] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[c, a], [a, b], [b, a]] ->= [ [c, d] , [d, a] ] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[c, a], [a, b], [b, d]] ->= [ [c, d] , [d, d] ] {- Semlab 1 (Concon 3 (Input 3)) -}
  [[a, a], [a, b], [b, b]] ->= [ [a, d] , [d, b] ] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[a, a], [a, b], [b, c]] ->= [ [a, d] , [d, c] ] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[a, a], [a, b], [b, a]] ->= [ [a, d] , [d, a] ] {- Semlab 2 (Concon 2 (Input 3)) -}
  [[a, a], [a, b], [b, d]] ->= [ [a, d] , [d, d] ] {- Semlab 2 (Concon 3 (Input 3)) -}
  [[d, a], [a, b], [b, b]] ->= [ [d, d] , [d, b] ] {- Semlab 3 (Concon 0 (Input 3)) -}
  [[d, a], [a, b], [b, c]] ->= [ [d, d] , [d, c] ] {- Semlab 3 (Concon 1 (Input 3)) -}
  [[d, a], [a, b], [b, a]] ->= [ [d, d] , [d, a] ] {- Semlab 3 (Concon 2 (Input 3)) -}
  [[d, a], [a, b], [b, d]] ->= [ [d, d] , [d, d] ] {- Semlab 3 (Concon 3 (Input 3)) -}
  [[b, d], [d, b]] ->= [ [b, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 0 (Input 4)) -}
  [[b, d], [d, c]] ->= [ [b, a] , [a, b] , [b, c] ] {- Semlab 0 (Concon 1 (Input 4)) -}
  [[b, d], [d, a]] ->= [ [b, a] , [a, b] , [b, a] ] {- Semlab 0 (Concon 2 (Input 4)) -}
  [[b, d], [d, d]] ->= [ [b, a] , [a, b] , [b, d] ] {- Semlab 0 (Concon 3 (Input 4)) -}
  [[c, d], [d, b]] ->= [ [c, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 0 (Input 4)) -}
  [[c, d], [d, c]] ->= [ [c, a] , [a, b] , [b, c] ] {- Semlab 1 (Concon 1 (Input 4)) -}
  [[c, d], [d, a]] ->= [ [c, a] , [a, b] , [b, a] ] {- Semlab 1 (Concon 2 (Input 4)) -}
  [[c, d], [d, d]] ->= [ [c, a] , [a, b] , [b, d] ] {- Semlab 1 (Concon 3 (Input 4)) -}
  [[a, d], [d, b]] ->= [ [a, a] , [a, b] , [b, b] ] {- Semlab 2 (Concon 0 (Input 4)) -}
  [[a, d], [d, c]] ->= [ [a, a] , [a, b] , [b, c] ] {- Semlab 2 (Concon 1 (Input 4)) -}
  [[a, d], [d, a]] ->= [ [a, a] , [a, b] , [b, a] ] {- Semlab 2 (Concon 2 (Input 4)) -}
  [[a, d], [d, d]] ->= [ [a, a] , [a, b] , [b, d] ] {- Semlab 2 (Concon 3 (Input 4)) -}
  [[d, d], [d, b]] ->= [ [d, a] , [a, b] , [b, b] ] {- Semlab 3 (Concon 0 (Input 4)) -}
  [[d, d], [d, c]] ->= [ [d, a] , [a, b] , [b, c] ] {- Semlab 3 (Concon 1 (Input 4)) -}
  [[d, d], [d, a]] ->= [ [d, a] , [a, b] , [b, a] ] {- Semlab 3 (Concon 2 (Input 4)) -}
  [[d, d], [d, d]] ->= [ [d, a] , [a, b] , [b, d] ] {- Semlab 3 (Concon 3 (Input 4)) -}
reason
  ([d, d], 1/2)
  ([d, a], 0/1)
  ([d, b], 3/1)
  ([d, c], 5/2)
  ([a, d], 1/2)
  ([a, a], 0/1)
  ([a, b], 1/2)
  ([a, c], 0/1)
  ([b, d], 1/2)
  ([b, a], 0/1)
  ([b, b], 3/1)
  ([b, c], 5/2)
  ([c, d], 1/1)
  ([c, a], 1/2)
  ([c, b], 2/1)
  ([c, c], 0/1)
   property Termination
has value Just True
for SRS
  [[a, b], [b, c], [c, a], [a, b]] -> [ [a, d] , [d, d] , [ d , b ] ] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[a, b], [b, c], [c, a], [a, c]] -> [ [a, d] , [d, d] , [ d , c ] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[b, b], [b, a]] -> [[b, c], [c, c], [c, a]] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, b], [b, d]] -> [[b, c], [c, c], [c, d]] {- Semlab 0 (Concon 3 (Input 1)) -}
  [[a, b], [b, a]] -> [[a, c], [c, c], [c, a]] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, b], [b, d]] -> [[a, c], [c, c], [c, d]] {- Semlab 2 (Concon 3 (Input 1)) -}
  [[d, b], [b, a]] -> [[d, c], [c, c], [c, a]] {- Semlab 3 (Concon 2 (Input 1)) -}
  [[d, b], [b, d]] -> [[d, c], [c, c], [c, d]] {- Semlab 3 (Concon 3 (Input 1)) -}
  [[b, a], [a, a], [a, b]] -> [[b, a], [a, b]] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, a], [a, a], [a, c]] -> [[b, a], [a, c]] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a], [a, a], [a, a]] -> [[b, a], [a, a]] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, a], [a, a], [a, d]] -> [[b, a], [a, d]] {- Semlab 0 (Concon 3 (Input 2)) -}
  [[c, a], [a, a], [a, b]] -> [[c, a], [a, b]] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[c, a], [a, a], [a, c]] -> [[c, a], [a, c]] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[c, a], [a, a], [a, a]] -> [[c, a], [a, a]] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, a], [a, a], [a, d]] -> [[c, a], [a, d]] {- Semlab 1 (Concon 3 (Input 2)) -}
  [[a, a], [a, a], [a, b]] -> [[a, a], [a, b]] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[a, a], [a, a], [a, c]] -> [[a, a], [a, c]] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[a, a], [a, a], [a, a]] -> [[a, a], [a, a]] {- Semlab 2 (Concon 2 (Input 2)) -}
  [[a, a], [a, a], [a, d]] -> [[a, a], [a, d]] {- Semlab 2 (Concon 3 (Input 2)) -}
  [[d, a], [a, a], [a, b]] -> [[d, a], [a, b]] {- Semlab 3 (Concon 0 (Input 2)) -}
  [[d, a], [a, a], [a, c]] -> [[d, a], [a, c]] {- Semlab 3 (Concon 1 (Input 2)) -}
  [[d, a], [a, a], [a, a]] -> [[d, a], [a, a]] {- Semlab 3 (Concon 2 (Input 2)) -}
  [[d, a], [a, a], [a, d]] -> [[d, a], [a, d]] {- Semlab 3 (Concon 3 (Input 2)) -}
  [[b, a], [a, b], [b, b]] ->= [ [b, d] , [d, b] ] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[b, a], [a, b], [b, c]] ->= [ [b, d] , [d, c] ] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[b, a], [a, b], [b, a]] ->= [ [b, d] , [d, a] ] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[b, a], [a, b], [b, d]] ->= [ [b, d] , [d, d] ] {- Semlab 0 (Concon 3 (Input 3)) -}
  [[c, a], [a, b], [b, b]] ->= [ [c, d] , [d, b] ] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[c, a], [a, b], [b, c]] ->= [ [c, d] , [d, c] ] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[c, a], [a, b], [b, a]] ->= [ [c, d] , [d, a] ] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[c, a], [a, b], [b, d]] ->= [ [c, d] , [d, d] ] {- Semlab 1 (Concon 3 (Input 3)) -}
  [[a, a], [a, b], [b, b]] ->= [ [a, d] , [d, b] ] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[a, a], [a, b], [b, c]] ->= [ [a, d] , [d, c] ] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[a, a], [a, b], [b, a]] ->= [ [a, d] , [d, a] ] {- Semlab 2 (Concon 2 (Input 3)) -}
  [[a, a], [a, b], [b, d]] ->= [ [a, d] , [d, d] ] {- Semlab 2 (Concon 3 (Input 3)) -}
  [[d, a], [a, b], [b, b]] ->= [ [d, d] , [d, b] ] {- Semlab 3 (Concon 0 (Input 3)) -}
  [[d, a], [a, b], [b, c]] ->= [ [d, d] , [d, c] ] {- Semlab 3 (Concon 1 (Input 3)) -}
  [[d, a], [a, b], [b, a]] ->= [ [d, d] , [d, a] ] {- Semlab 3 (Concon 2 (Input 3)) -}
  [[d, a], [a, b], [b, d]] ->= [ [d, d] , [d, d] ] {- Semlab 3 (Concon 3 (Input 3)) -}
  [[b, d], [d, b]] ->= [ [b, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 0 (Input 4)) -}
  [[b, d], [d, c]] ->= [ [b, a] , [a, b] , [b, c] ] {- Semlab 0 (Concon 1 (Input 4)) -}
  [[b, d], [d, a]] ->= [ [b, a] , [a, b] , [b, a] ] {- Semlab 0 (Concon 2 (Input 4)) -}
  [[b, d], [d, d]] ->= [ [b, a] , [a, b] , [b, d] ] {- Semlab 0 (Concon 3 (Input 4)) -}
  [[c, d], [d, b]] ->= [ [c, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 0 (Input 4)) -}
  [[c, d], [d, c]] ->= [ [c, a] , [a, b] , [b, c] ] {- Semlab 1 (Concon 1 (Input 4)) -}
  [[c, d], [d, a]] ->= [ [c, a] , [a, b] , [b, a] ] {- Semlab 1 (Concon 2 (Input 4)) -}
  [[c, d], [d, d]] ->= [ [c, a] , [a, b] , [b, d] ] {- Semlab 1 (Concon 3 (Input 4)) -}
  [[a, d], [d, b]] ->= [ [a, a] , [a, b] , [b, b] ] {- Semlab 2 (Concon 0 (Input 4)) -}
  [[a, d], [d, c]] ->= [ [a, a] , [a, b] , [b, c] ] {- Semlab 2 (Concon 1 (Input 4)) -}
  [[a, d], [d, a]] ->= [ [a, a] , [a, b] , [b, a] ] {- Semlab 2 (Concon 2 (Input 4)) -}
  [[a, d], [d, d]] ->= [ [a, a] , [a, b] , [b, d] ] {- Semlab 2 (Concon 3 (Input 4)) -}
  [[d, d], [d, b]] ->= [ [d, a] , [a, b] , [b, b] ] {- Semlab 3 (Concon 0 (Input 4)) -}
  [[d, d], [d, c]] ->= [ [d, a] , [a, b] , [b, c] ] {- Semlab 3 (Concon 1 (Input 4)) -}
  [[d, d], [d, a]] ->= [ [d, a] , [a, b] , [b, a] ] {- Semlab 3 (Concon 2 (Input 4)) -}
  [[d, d], [d, d]] ->= [ [d, a] , [a, b] , [b, d] ] {- Semlab 3 (Concon 3 (Input 4)) -}
reason
  ( [d, d]
  , Ek 2  / 1 0 \
          \ 0 2 / )
  ( [d, a]
  , Ek 2  / 1 0 \
          \ 0 2 / )
  ( [d, b]
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( [d, c]
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( [a, d]
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( [a, a]
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( [a, b]
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( [a, c]
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( [b, d]
  , Ek 2  / 1 0 \
          \ 0 2 / )
  ( [b, a]
  , Ek 2  / 1 0 \
          \ 0 2 / )
  ( [b, b]
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( [b, c]
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( [c, d]
  , Ek 2  / 1 0 \
          \ 0 2 / )
  ( [c, a]
  , Ek 2  / 1 0 \
          \ 0 2 / )
  ( [c, c]
  , Ek 2  / 1 0 \
          \ 0 1 / )
   property Termination
has value Just True
for SRS
  [[b, b], [b, a]] -> [[b, c], [c, c], [c, a]] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, b], [b, d]] -> [[b, c], [c, c], [c, d]] {- Semlab 0 (Concon 3 (Input 1)) -}
  [[a, b], [b, a]] -> [[a, c], [c, c], [c, a]] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, b], [b, d]] -> [[a, c], [c, c], [c, d]] {- Semlab 2 (Concon 3 (Input 1)) -}
  [[d, b], [b, a]] -> [[d, c], [c, c], [c, a]] {- Semlab 3 (Concon 2 (Input 1)) -}
  [[d, b], [b, d]] -> [[d, c], [c, c], [c, d]] {- Semlab 3 (Concon 3 (Input 1)) -}
  [[b, a], [a, a], [a, b]] -> [[b, a], [a, b]] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, a], [a, a], [a, c]] -> [[b, a], [a, c]] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a], [a, a], [a, a]] -> [[b, a], [a, a]] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, a], [a, a], [a, d]] -> [[b, a], [a, d]] {- Semlab 0 (Concon 3 (Input 2)) -}
  [[c, a], [a, a], [a, b]] -> [[c, a], [a, b]] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[c, a], [a, a], [a, c]] -> [[c, a], [a, c]] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[c, a], [a, a], [a, a]] -> [[c, a], [a, a]] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, a], [a, a], [a, d]] -> [[c, a], [a, d]] {- Semlab 1 (Concon 3 (Input 2)) -}
  [[a, a], [a, a], [a, b]] -> [[a, a], [a, b]] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[a, a], [a, a], [a, c]] -> [[a, a], [a, c]] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[a, a], [a, a], [a, a]] -> [[a, a], [a, a]] {- Semlab 2 (Concon 2 (Input 2)) -}
  [[a, a], [a, a], [a, d]] -> [[a, a], [a, d]] {- Semlab 2 (Concon 3 (Input 2)) -}
  [[d, a], [a, a], [a, b]] -> [[d, a], [a, b]] {- Semlab 3 (Concon 0 (Input 2)) -}
  [[d, a], [a, a], [a, c]] -> [[d, a], [a, c]] {- Semlab 3 (Concon 1 (Input 2)) -}
  [[d, a], [a, a], [a, a]] -> [[d, a], [a, a]] {- Semlab 3 (Concon 2 (Input 2)) -}
  [[d, a], [a, a], [a, d]] -> [[d, a], [a, d]] {- Semlab 3 (Concon 3 (Input 2)) -}
  [[b, a], [a, b], [b, b]] ->= [ [b, d] , [d, b] ] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[b, a], [a, b], [b, c]] ->= [ [b, d] , [d, c] ] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[b, a], [a, b], [b, a]] ->= [ [b, d] , [d, a] ] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[b, a], [a, b], [b, d]] ->= [ [b, d] , [d, d] ] {- Semlab 0 (Concon 3 (Input 3)) -}
  [[c, a], [a, b], [b, b]] ->= [ [c, d] , [d, b] ] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[c, a], [a, b], [b, c]] ->= [ [c, d] , [d, c] ] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[c, a], [a, b], [b, a]] ->= [ [c, d] , [d, a] ] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[c, a], [a, b], [b, d]] ->= [ [c, d] , [d, d] ] {- Semlab 1 (Concon 3 (Input 3)) -}
  [[a, a], [a, b], [b, b]] ->= [ [a, d] , [d, b] ] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[a, a], [a, b], [b, c]] ->= [ [a, d] , [d, c] ] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[a, a], [a, b], [b, a]] ->= [ [a, d] , [d, a] ] {- Semlab 2 (Concon 2 (Input 3)) -}
  [[a, a], [a, b], [b, d]] ->= [ [a, d] , [d, d] ] {- Semlab 2 (Concon 3 (Input 3)) -}
  [[d, a], [a, b], [b, b]] ->= [ [d, d] , [d, b] ] {- Semlab 3 (Concon 0 (Input 3)) -}
  [[d, a], [a, b], [b, c]] ->= [ [d, d] , [d, c] ] {- Semlab 3 (Concon 1 (Input 3)) -}
  [[d, a], [a, b], [b, a]] ->= [ [d, d] , [d, a] ] {- Semlab 3 (Concon 2 (Input 3)) -}
  [[d, a], [a, b], [b, d]] ->= [ [d, d] , [d, d] ] {- Semlab 3 (Concon 3 (Input 3)) -}
  [[b, d], [d, b]] ->= [ [b, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 0 (Input 4)) -}
  [[b, d], [d, c]] ->= [ [b, a] , [a, b] , [b, c] ] {- Semlab 0 (Concon 1 (Input 4)) -}
  [[b, d], [d, a]] ->= [ [b, a] , [a, b] , [b, a] ] {- Semlab 0 (Concon 2 (Input 4)) -}
  [[b, d], [d, d]] ->= [ [b, a] , [a, b] , [b, d] ] {- Semlab 0 (Concon 3 (Input 4)) -}
  [[c, d], [d, b]] ->= [ [c, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 0 (Input 4)) -}
  [[c, d], [d, c]] ->= [ [c, a] , [a, b] , [b, c] ] {- Semlab 1 (Concon 1 (Input 4)) -}
  [[c, d], [d, a]] ->= [ [c, a] , [a, b] , [b, a] ] {- Semlab 1 (Concon 2 (Input 4)) -}
  [[c, d], [d, d]] ->= [ [c, a] , [a, b] , [b, d] ] {- Semlab 1 (Concon 3 (Input 4)) -}
  [[a, d], [d, b]] ->= [ [a, a] , [a, b] , [b, b] ] {- Semlab 2 (Concon 0 (Input 4)) -}
  [[a, d], [d, c]] ->= [ [a, a] , [a, b] , [b, c] ] {- Semlab 2 (Concon 1 (Input 4)) -}
  [[a, d], [d, a]] ->= [ [a, a] , [a, b] , [b, a] ] {- Semlab 2 (Concon 2 (Input 4)) -}
  [[a, d], [d, d]] ->= [ [a, a] , [a, b] , [b, d] ] {- Semlab 2 (Concon 3 (Input 4)) -}
  [[d, d], [d, b]] ->= [ [d, a] , [a, b] , [b, b] ] {- Semlab 3 (Concon 0 (Input 4)) -}
  [[d, d], [d, c]] ->= [ [d, a] , [a, b] , [b, c] ] {- Semlab 3 (Concon 1 (Input 4)) -}
  [[d, d], [d, a]] ->= [ [d, a] , [a, b] , [b, a] ] {- Semlab 3 (Concon 2 (Input 4)) -}
  [[d, d], [d, d]] ->= [ [d, a] , [a, b] , [b, d] ] {- Semlab 3 (Concon 3 (Input 4)) -}
reason
  ([d, d], 1/1)
  ([d, a], 1/1)
  ([d, b], 1/1)
  ([d, c], 0/1)
  ([a, d], 1/1)
  ([a, a], 1/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, d], 1/1)
  ([b, a], 1/1)
  ([b, b], 1/1)
  ([b, c], 0/1)
  ([c, d], 0/1)
  ([c, a], 0/1)
  ([c, c], 0/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, b]] ->= [ [b, d] , [d, b] ] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[b, a], [a, b], [b, c]] ->= [ [b, d] , [d, c] ] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[b, a], [a, b], [b, a]] ->= [ [b, d] , [d, a] ] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[b, a], [a, b], [b, d]] ->= [ [b, d] , [d, d] ] {- Semlab 0 (Concon 3 (Input 3)) -}
  [[c, a], [a, b], [b, b]] ->= [ [c, d] , [d, b] ] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[c, a], [a, b], [b, c]] ->= [ [c, d] , [d, c] ] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[c, a], [a, b], [b, a]] ->= [ [c, d] , [d, a] ] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[c, a], [a, b], [b, d]] ->= [ [c, d] , [d, d] ] {- Semlab 1 (Concon 3 (Input 3)) -}
  [[a, a], [a, b], [b, b]] ->= [ [a, d] , [d, b] ] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[a, a], [a, b], [b, c]] ->= [ [a, d] , [d, c] ] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[a, a], [a, b], [b, a]] ->= [ [a, d] , [d, a] ] {- Semlab 2 (Concon 2 (Input 3)) -}
  [[a, a], [a, b], [b, d]] ->= [ [a, d] , [d, d] ] {- Semlab 2 (Concon 3 (Input 3)) -}
  [[d, a], [a, b], [b, b]] ->= [ [d, d] , [d, b] ] {- Semlab 3 (Concon 0 (Input 3)) -}
  [[d, a], [a, b], [b, c]] ->= [ [d, d] , [d, c] ] {- Semlab 3 (Concon 1 (Input 3)) -}
  [[d, a], [a, b], [b, a]] ->= [ [d, d] , [d, a] ] {- Semlab 3 (Concon 2 (Input 3)) -}
  [[d, a], [a, b], [b, d]] ->= [ [d, d] , [d, d] ] {- Semlab 3 (Concon 3 (Input 3)) -}
  [[b, d], [d, b]] ->= [ [b, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 0 (Input 4)) -}
  [[b, d], [d, c]] ->= [ [b, a] , [a, b] , [b, c] ] {- Semlab 0 (Concon 1 (Input 4)) -}
  [[b, d], [d, a]] ->= [ [b, a] , [a, b] , [b, a] ] {- Semlab 0 (Concon 2 (Input 4)) -}
  [[b, d], [d, d]] ->= [ [b, a] , [a, b] , [b, d] ] {- Semlab 0 (Concon 3 (Input 4)) -}
  [[c, d], [d, b]] ->= [ [c, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 0 (Input 4)) -}
  [[c, d], [d, c]] ->= [ [c, a] , [a, b] , [b, c] ] {- Semlab 1 (Concon 1 (Input 4)) -}
  [[c, d], [d, a]] ->= [ [c, a] , [a, b] , [b, a] ] {- Semlab 1 (Concon 2 (Input 4)) -}
  [[c, d], [d, d]] ->= [ [c, a] , [a, b] , [b, d] ] {- Semlab 1 (Concon 3 (Input 4)) -}
  [[a, d], [d, b]] ->= [ [a, a] , [a, b] , [b, b] ] {- Semlab 2 (Concon 0 (Input 4)) -}
  [[a, d], [d, c]] ->= [ [a, a] , [a, b] , [b, c] ] {- Semlab 2 (Concon 1 (Input 4)) -}
  [[a, d], [d, a]] ->= [ [a, a] , [a, b] , [b, a] ] {- Semlab 2 (Concon 2 (Input 4)) -}
  [[a, d], [d, d]] ->= [ [a, a] , [a, b] , [b, d] ] {- Semlab 2 (Concon 3 (Input 4)) -}
  [[d, d], [d, b]] ->= [ [d, a] , [a, b] , [b, b] ] {- Semlab 3 (Concon 0 (Input 4)) -}
  [[d, d], [d, c]] ->= [ [d, a] , [a, b] , [b, c] ] {- Semlab 3 (Concon 1 (Input 4)) -}
  [[d, d], [d, a]] ->= [ [d, a] , [a, b] , [b, a] ] {- Semlab 3 (Concon 2 (Input 4)) -}
  [[d, d], [d, d]] ->= [ [d, a] , [a, b] , [b, d] ] {- Semlab 3 (Concon 3 (Input 4)) -}
reason
  no strict rules

property Termination
has value Just True
for SRS
  [a, b] ->= [d] {- Input 3 -}
  [d] ->= [a, b] {- Input 4 -}
reason
  no strict rules

**************************************************
skeleton: (3/2,4)\Split[(3/2,4)\TileAllAll{2}(48/32,16)\Weight(24/32,15)\Matrix{\Natural}{2}(22/32,15)\Weight(0/32,13)[],(0/2,3)[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Success : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.972194313000
  min duration 1.972194313000
  total durat. 1.972194313000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 56
      , num_strict_rules = 24
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 15
      , total_length = 284}
    , self = 92
    , parent = Nothing
    , duration = 1.972194313000
    , status = Success
    , start = 2025-09-04 08:29:44.582643407 UTC
    , finish = 2025-09-04 08:29:46.55483772 UTC
    , thread_cap_info = ("ThreadId 166", 0, False)}
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.518964981000
  min duration 0.004555793000
  total durat. 3.332812832000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 17}
    , self = 84
    , parent = Nothing
    , duration = 1.442907679000
    , status = Fail
    , start = 2025-09-04 08:29:44.30162806 UTC
    , finish = 2025-09-04 08:29:45.744535739 UTC
    , thread_cap_info = ("ThreadId 145", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 80}
    , self = 85
    , parent = Nothing
    , duration = 1.518964981000
    , status = Fail
    , start = 2025-09-04 08:29:44.30880755 UTC
    , finish = 2025-09-04 08:29:45.827772531 UTC
    , thread_cap_info = ("ThreadId 151", 0, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 2.263201851000
  min duration 0.033279339000
  total durat. 4.448601551000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 56
      , num_strict_rules = 24
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 15
      , total_length = 284}
    , self = 93
    , parent = Nothing
    , duration = 2.152120361000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:29:44.40284332 UTC
    , finish = 2025-09-04 08:29:46.554963681 UTC
    , thread_cap_info = ("ThreadId 160", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 56
      , num_strict_rules = 24
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 15
      , total_length = 284}
    , self = 91
    , parent = Nothing
    , duration = 2.263201851000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:29:44.282591883 UTC
    , finish = 2025-09-04 08:29:46.545793734 UTC
    , thread_cap_info = ("ThreadId 137", 1, False)}
Success : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 2.190808488000
  min duration 1.953261620000
  total durat. 6.228053356000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 56
      , num_strict_rules = 24
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 15
      , total_length = 284}
    , self = 94
    , parent = Nothing
    , duration = 1.953261620000
    , status = Success
    , start = 2025-09-04 08:29:44.602063739 UTC
    , finish = 2025-09-04 08:29:46.555325359 UTC
    , thread_cap_info = ("ThreadId 168", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 56
      , num_strict_rules = 24
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 15
      , total_length = 284}
    , self = 88
    , parent = Nothing
    , duration = 2.083983248000
    , status = Success
    , start = 2025-09-04 08:29:44.421600733 UTC
    , finish = 2025-09-04 08:29:46.505583981 UTC
    , thread_cap_info = ("ThreadId 162", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 56
      , num_strict_rules = 24
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 15
      , total_length = 284}
    , self = 86
    , parent = Nothing
    , duration = 2.190808488000
    , status = Success
    , start = 2025-09-04 08:29:44.252481401 UTC
    , finish = 2025-09-04 08:29:46.443289889 UTC
    , thread_cap_info = ("ThreadId 138", 1, False)}
**************************************************
F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                    = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
F                    = 4 , num_top_rules = 4 , num_weak_rules = 12 , alphabet_size = 9 , total_length
F                    = 80} , self = 81 , parent = Nothing , duration = 0.338051880000 , status
F                    = Fail , start = 2025-09-04 08:29:44.247773355 UTC , finish = 2025-09-04
F                    08:29:44.585825235 UTC , thread_cap_info = ("ThreadId 121", 0, False)}
F                    
| S                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| S                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| S                  = False\n , verbose = False}" , input_size = Size { num_rules = 56 , num_strict_rules
| S                  = 24 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 15 , total_length
| S                  = 284} , self = 86 , parent = Nothing , duration = 2.190808488000 , status
| S                  = Success , start = 2025-09-04 08:29:44.252481401 UTC , finish = 2025-09-04
| S                  08:29:46.443289889 UTC , thread_cap_info = ("ThreadId 138", 1, False)}
| S                  
| | S                Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | S                , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | S                , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | S                = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | S                , cpf = True}" , input_size = Size { num_rules = 56 , num_strict_rules
| | S                = 24 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 15 , total_length
| | S                = 284} , self = 82 , parent = Nothing , duration = 0.694846272000 , status
| | S                = Success , start = 2025-09-04 08:29:44.268559825 UTC , finish = 2025-09-04
| | S                08:29:44.963406097 UTC , thread_cap_info = ("ThreadId 139", 1, False)}
| | S                
| | | E              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | E              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E              = False\n , verbose = False}" , input_size = Size { num_rules = 56 , num_strict_rules
| | | E              = 24 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 15 , total_length
| | | E              = 284} , self = 91 , parent = Nothing , duration = 2.263201851000 , status
| | | E              = Except "AsyncCancelled" , start = 2025-09-04 08:29:44.282591883 UTC ,
| | | E              finish = 2025-09-04 08:29:46.545793734 UTC , thread_cap_info = ("ThreadId
| | | E              137", 1, False)}
| | | E              
| | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | F            = 3 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | F            = 17} , self = 79 , parent = Nothing , duration = 0.105755772000 , status
| | | | F            = Fail , start = 2025-09-04 08:29:44.299808589 UTC , finish = 2025-09-04
| | | | F            08:29:44.405564361 UTC , thread_cap_info = ("ThreadId 146", 0, False)}
| | | | F            
| | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | F          = 3 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | F          = 17} , self = 84 , parent = Nothing , duration = 1.442907679000 , status
| | | | | F          = Fail , start = 2025-09-04 08:29:44.30162806 UTC , finish = 2025-09-04
| | | | | F          08:29:45.744535739 UTC , thread_cap_info = ("ThreadId 145", 0, False)}
| | | | | F          
| | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | F        = 4 , num_top_rules = 4 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | | F        = 80} , self = 85 , parent = Nothing , duration = 1.518964981000 , status
| | | | | | F        = Fail , start = 2025-09-04 08:29:44.30880755 UTC , finish = 2025-09-04
| | | | | | F        08:29:45.827772531 UTC , thread_cap_info = ("ThreadId 151", 0, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | | F      = 4 , num_top_rules = 4 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | | | F      = 80} , self = 83 , parent = Nothing , duration = 0.738638230000 , status
| | | | | | | F      = Fail , start = 2025-09-04 08:29:44.350383246 UTC , finish = 2025-09-04
| | | | | | | F      08:29:45.089021476 UTC , thread_cap_info = ("ThreadId 152", 0, False)}
| | | | | | | F      
| | | | | | | | E    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 56 , num_strict_rules
| | | | | | | | E    = 24 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 15 , total_length
| | | | | | | | E    = 284} , self = 93 , parent = Nothing , duration = 2.152120361000 , status
| | | | | | | | E    = Except "AsyncCancelled" , start = 2025-09-04 08:29:44.40284332 UTC ,
| | | | | | | | E    finish = 2025-09-04 08:29:46.554963681 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E    160", 0, False)}
| | | | | | | | E    
| | | | F | | | |    
| | | | S | | | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | S | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | S | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 56 , num_strict_rules
| | | | S | | | |    = 24 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 15 , total_length
| | | | S | | | |    = 284} , self = 88 , parent = Nothing , duration = 2.083983248000 , status
| | | | S | | | |    = Success , start = 2025-09-04 08:29:44.421600733 UTC , finish = 2025-09-04
| | | | S | | | |    08:29:46.505583981 UTC , thread_cap_info = ("ThreadId 162", 0, False)}
| | | | S | | | |    
| | | | | | | | | S  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | S  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | S  = False\n , verbose = False}" , input_size = Size { num_rules = 56 , num_strict_rules
| | | | | | | | | S  = 24 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 15 , total_length
| | | | | | | | | S  = 284} , self = 92 , parent = Nothing , duration = 1.972194313000 , status
| | | | | | | | | S  = Success , start = 2025-09-04 08:29:44.582643407 UTC , finish = 2025-09-04
| | | | | | | | | S  08:29:46.55483772 UTC , thread_cap_info = ("ThreadId 166", 0, False)}
| | | | | | | | | S  
F | | | | | | | | |  
S | | | | | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
S | | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
S | | | | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 56 , num_strict_rules
S | | | | | | | | |  = 24 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 15 , total_length
S | | | | | | | | |  = 284} , self = 94 , parent = Nothing , duration = 1.953261620000 , status
S | | | | | | | | |  = Success , start = 2025-09-04 08:29:44.602063739 UTC , finish = 2025-09-04
S | | | | | | | | |  08:29:46.555325359 UTC , thread_cap_info = ("ThreadId 168", 0, False)}
S | | | | | | | | |  
| | S | | | | | | |  
| |   | | | | F | |  
| |   | | F |   | |  
| |   | |   F   | |  
| S   | |       | |  
|     | S       | |  
|     E         | |  
|               | S  
|               E    
S                    
