[Info] pool sizes (success) 3 seen 3 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 409 length 1948
[Info] pool sizes (success) 3 seen 3 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
CNF 409 vars 1948 clauses
last 380 length 1841
CNF 380 vars 1841 clauses
last 1083 length 5547
last 1287 length 6136
CNF 1287 vars 6136 clauses
last 1535 length 8701
last 755 length 3630
last 1187 length 7067
last 1509 length 7659
CNF 1535 vars 8701 clauses
CNF 1083 vars 5547 clauses
CNF 755 vars 3630 clauses
last 1164 length 5957
last 819 length 3972
CNF 1187 vars 7067 clauses
CNF 1509 vars 7659 clauses
last 632 length 2881
last 530 length 2517
last 616 length 2787
last 504 length 2195
last 530 length 2517
last 632 length 2881
last 2514 length 11443
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5219, clauses: 19695
last 2354 length 12001
last 9655 length 44614
last 8667 length 45783
CNF 1164 vars 5957 clauses
CNF 530 vars 2517 clauses
CNF 819 vars 3972 clauses
CNF 632 vars 2881 clauses
CNF 504 vars 2195 clauses
CNF 616 vars 2787 clauses
CNF 530 vars 2517 clauses
CNF 632 vars 2881 clauses
CNF 2514 vars 11443 clauses
last 5219 length 19695
CNF 2354 vars 12001 clauses
CNF 8667 vars 45783 clauses
CNF 9655 vars 44614 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2480, clauses: 9488
CNF 5219 vars 19695 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2161, clauses: 8440
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16574, clauses: 68686
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13872, clauses: 57775
last 2480 length 9488
last 2161 length 8440
last 16574 length 68686
last 13872 length 57775
CNF 2161 vars 8440 clauses
CNF 2480 vars 9488 clauses
CNF 16574 vars 68686 clauses
CNF 13872 vars 57775 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2161, clauses: 8440, status: Unsatisfied, time: 0.042844111s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2480, clauses: 9488, status: Satisfied, time: 0.05392672s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13872, clauses: 57775, status: Satisfied, time: 0.094316321s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 3 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 12 weak rules on 4 letters       weights
SRS with 1 strict rules and 7 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 7 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, a] -> [] {- Input 0 -}
  [] ->= [a] {- Input 1 -}
  [b] ->= [] {- Input 2 -}
  [] ->= [a, a, b, a] {- Input 3 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [[a, a], [a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [[a, a], [a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [[b, a], [a, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [[b, a], [a, b]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[a, b], [b, a]] ->= [[a, a]] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b], [b, b]] ->= [[a, b]] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, b], [b, a]] ->= [[b, a]] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, b], [b, b]] ->= [[b, b]] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[b, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 3)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 1/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [[a, a], [a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [[a, a], [a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [[b, a], [a, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, b], [b, a]] ->= [[a, a]] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 3)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 0 0 \
                | 0 4 1 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 1 6 \
                | 0 0 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[a, a]] ->= [[a, a], [a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [[a, a], [a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [[b, a], [a, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, b], [b, a]] ->= [[a, a]] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 3)) -}
reason
  no strict rules

**************************************************
skeleton: (1/3,2)\TileAllAll{2}(4/12,4)\Weight(1/7,4)\Matrix{\Natural}{3}(0/7,3)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.611379586000
  min duration 0.020433432000
  total durat. 2.938527580000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 0.547918092000
  min duration 0.005254337000
  total durat. 3.364068002000
**************************************************
F                                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                                  = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
F                                  = 10 , num_top_rules = 10 , num_weak_rules = 6 , alphabet_size = 4 , total_length
F                                  = 64} , self = 86 , parent = Nothing , duration = 0.259644849000 , status
F                                  = Fail , start = 2025-09-04 08:24:02.777553285 UTC , finish = 2025-09-04
F                                  08:24:03.037198134 UTC , thread_cap_info = ("ThreadId 105", 0, False)}
F                                  
| F                                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                                = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| F                                = 10 , num_top_rules = 10 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| F                                = 64} , self = 88 , parent = Nothing , duration = 0.307565632000 , status
| F                                = Fail , start = 2025-09-04 08:24:02.777651901 UTC , finish = 2025-09-04
| F                                08:24:03.085217533 UTC , thread_cap_info = ("ThreadId 106", 0, False)}
| F                                
| | F                              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                              = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | F                              = 17 , num_top_rules = 17 , num_weak_rules = 7 , alphabet_size = 6 , total_length
| | F                              = 96} , self = 89 , parent = Nothing , duration = 0.306328149000 , status
| | F                              = Fail , start = 2025-09-04 08:24:02.780194782 UTC , finish = 2025-09-04
| | F                              08:24:03.086522931 UTC , thread_cap_info = ("ThreadId 119", 2, False)}
| | F                              
| | | F                            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                            = False\n , verbose = False}" , input_size = Size { num_rules = 25 , num_strict_rules
| | | F                            = 18 , num_top_rules = 18 , num_weak_rules = 7 , alphabet_size = 6 , total_length
| | | F                            = 99} , self = 90 , parent = Nothing , duration = 0.345235208000 , status
| | | F                            = Fail , start = 2025-09-04 08:24:02.791548592 UTC , finish = 2025-09-04
| | | F                            08:24:03.1367838 UTC , thread_cap_info = ("ThreadId 122", 3, False)}
| | | F                            
| | | | F                          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                          = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | F                          = 17 , num_top_rules = 17 , num_weak_rules = 7 , alphabet_size = 6 , total_length
| | | | F                          = 96} , self = 85 , parent = Nothing , duration = 0.222097039000 , status
| | | | F                          = Fail , start = 2025-09-04 08:24:02.797947222 UTC , finish = 2025-09-04
| | | | F                          08:24:03.020044261 UTC , thread_cap_info = ("ThreadId 120", 2, False)}
| | | | F                          
| | | | | F                        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                        = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | F                        = 10 , num_top_rules = 10 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | F                        = 64} , self = 87 , parent = Nothing , duration = 0.224937364000 , status
| | | | | F                        = Fail , start = 2025-09-04 08:24:02.814603116 UTC , finish = 2025-09-04
| | | | | F                        08:24:03.03954048 UTC , thread_cap_info = ("ThreadId 128", 0, False)}
| | | | | F                        
| | | | | | F                      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | F                      = 10 , num_top_rules = 10 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | F                      = 64} , self = 92 , parent = Nothing , duration = 0.332699498000 , status
| | | | | | F                      = Fail , start = 2025-09-04 08:24:02.820637648 UTC , finish = 2025-09-04
| | | | | | F                      08:24:03.153337146 UTC , thread_cap_info = ("ThreadId 129", 0, False)}
| | | | | | F                      
| | | | | | | F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | F                    = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 2 , total_length
| | | | | | | F                    = 36} , self = 95 , parent = Nothing , duration = 0.375732806000 , status
| | | | | | | F                    = Fail , start = 2025-09-04 08:24:02.825215372 UTC , finish = 2025-09-04
| | | | | | | F                    08:24:03.200948178 UTC , thread_cap_info = ("ThreadId 141", 3, False)}
| | | | | | | F                    
| | | | | | | | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | F                  = 1 , num_top_rules = 0 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | | | | | F                  = 36} , self = 91 , parent = Nothing , duration = 0.321228941000 , status
| | | | | | | | F                  = Fail , start = 2025-09-04 08:24:02.826991107 UTC , finish = 2025-09-04
| | | | | | | | F                  08:24:03.148220048 UTC , thread_cap_info = ("ThreadId 149", 2, False)}
| | | | | | | | F                  
| | | | | | | | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | F                = 1 , num_top_rules = 0 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | | | | | | F                = 36} , self = 93 , parent = Nothing , duration = 0.333964285000 , status
| | | | | | | | | F                = Fail , start = 2025-09-04 08:24:02.82699265 UTC , finish = 2025-09-04
| | | | | | | | | F                08:24:03.160956935 UTC , thread_cap_info = ("ThreadId 150", 2, False)}
| | | | | | | | | F                
| | | | | | | | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | | F              = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 2 , total_length
| | | | | | | | | | F              = 36} , self = 94 , parent = Nothing , duration = 0.335069742000 , status
| | | | | | | | | | F              = Fail , start = 2025-09-04 08:24:02.844980414 UTC , finish = 2025-09-04
| | | | | | | | | | F              08:24:03.180050156 UTC , thread_cap_info = ("ThreadId 144", 2, False)}
| | | | | | | | | | F              
| | | | | | | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 69 , num_strict_rules
| | | | | | | | | | | F            = 1 , num_top_rules = 0 , num_weak_rules = 68 , alphabet_size = 13 , total_length
| | | | | | | | | | | F            = 444} , self = 101 , parent = Nothing , duration = 0.611379586000 , status
| | | | | | | | | | | F            = Fail , start = 2025-09-04 08:24:02.846400802 UTC , finish = 2025-09-04
| | | | | | | | | | | F            08:24:03.457780388 UTC , thread_cap_info = ("ThreadId 159", 0, False)}
| | | | | | | | | | | F            
| | | | | | | | | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | | | | F          = 1 , num_top_rules = 0 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | | | | | | | | | F          = 36} , self = 96 , parent = Nothing , duration = 0.373180464000 , status
| | | | | | | | | | | | F          = Fail , start = 2025-09-04 08:24:02.850573211 UTC , finish = 2025-09-04
| | | | | | | | | | | | F          08:24:03.223753675 UTC , thread_cap_info = ("ThreadId 166", 2, False)}
| | | | | | | | | | | | F          
| | | | | | | | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | | | | | F        = 1 , num_top_rules = 0 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | F        = 36} , self = 98 , parent = Nothing , duration = 0.452908742000 , status
| | | | | | | | | | | | | F        = Fail , start = 2025-09-04 08:24:02.854755986 UTC , finish = 2025-09-04
| | | | | | | | | | | | | F        08:24:03.307664728 UTC , thread_cap_info = ("ThreadId 169", 2, False)}
| | | | | | | | | | | | | F        
| | | | | | | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 69 , num_strict_rules
| | | | | | | | | | | | | | F      = 1 , num_top_rules = 0 , num_weak_rules = 68 , alphabet_size = 13 , total_length
| | | | | | | | | | | | | | F      = 444} , self = 100 , parent = Nothing , duration = 0.547918092000 , status
| | | | | | | | | | | | | | F      = Fail , start = 2025-09-04 08:24:02.857914036 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | F      08:24:03.405832128 UTC , thread_cap_info = ("ThreadId 161", 0, False)}
| | | | | | | | | | | | | | F      
| | | | | | | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | | | | | | | | | | F    = 2 , num_top_rules = 0 , num_weak_rules = 14 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | | F    = 104} , self = 97 , parent = Nothing , duration = 0.445661989000 , status
| | | | | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:24:02.860688518 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | F    08:24:03.306350507 UTC , thread_cap_info = ("ThreadId 174", 2, False)}
| | | | | | | | | | | | | | | F    
| | | | | | | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | | | | | | | | | | | F  = 2 , num_top_rules = 0 , num_weak_rules = 14 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | | | F  = 104} , self = 99 , parent = Nothing , duration = 0.481355427000 , status
| | | | | | | | | | | | | | | | F  = Fail , start = 2025-09-04 08:24:02.877772458 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | | F  08:24:03.359127885 UTC , thread_cap_info = ("ThreadId 178", 2, False)}
| | | | | | | | | | | | | | | | F  
| | | | F | | | | | | | | | | | |  
F | | |   | | | | | | | | | | | |  
  | | |   F | | | | | | | | | | |  
  F | |     | | | | | | | | | | |  
    F |     | | | | | | | | | | |  
      F     | | | | | | | | | | |  
            | | F | | | | | | | |  
E           | |   | | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E           | |   | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E           | |   | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E           | |   | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E           | |   | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E           | |   | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
E           | |   | | | | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 7 , alphabet_size
E           | |   | | | | | | | |  = 4 , total_length = 36} , self = 105 , parent = Nothing , duration = 0.381117427000
E           | |   | | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:24:03.148247611
E           | |   | | | | | | | |  UTC , finish = 2025-09-04 08:24:03.529365038 UTC , thread_cap_info = ("ThreadId
E           | |   | | | | | | | |  192", 2, False)}
E           | |   | | | | | | | |  
|           F |   | | | | | | | |  
|             |   F | | | | | | |  
| S           |     | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| S           |     | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S           |     | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| S           |     | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S           |     | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S           |     | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| S           |     | | | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 7 , alphabet_size
| S           |     | | | | | | |  = 4 , total_length = 36} , self = 103 , parent = Nothing , duration = 0.361639266000
| S           |     | | | | | | |  , status = Success , start = 2025-09-04 08:24:03.164732966 UTC , finish
| S           |     | | | | | | |  = 2025-09-04 08:24:03.526372232 UTC , thread_cap_info = ("ThreadId 193",
| S           |     | | | | | | |  0, False)}
| S           |     | | | | | | |  
| |           |     F | | | | | |  
| | S         |       | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | S         |       | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S         |       | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S         |       | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S         |       | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S         |       | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | S         |       | | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | S         |       | | | | | |  = 2 , total_length = 36} , self = 108 , parent = Nothing , duration = 0.341148102000
| | S         |       | | | | | |  , status = Success , start = 2025-09-04 08:24:03.198216436 UTC , finish
| | S         |       | | | | | |  = 2025-09-04 08:24:03.539364538 UTC , thread_cap_info = ("ThreadId 194",
| | S         |       | | | | | |  0, False)}
| | S         |       | | | | | |  
| | |         F       | | | | | |  
| | | F               | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | F               | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F               | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F               | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F               | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F               | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | F               | | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | F               | | | | | |  = 2 , total_length = 36} , self = 102 , parent = Nothing , duration = 0.306346977000
| | | F               | | | | | |  , status = Fail , start = 2025-09-04 08:24:03.219573565 UTC , finish =
| | | F               | | | | | |  2025-09-04 08:24:03.525920542 UTC , thread_cap_info = ("ThreadId 195",
| | | F               | | | | | |  0, False)}
| | | F               | | | | | |  
| | | |               | F | | | |  
| | | |               |   | | F |  
| | | |               |   F |   |  
| | | |               |     |   F  
| | | |               |     F      
| | | |               F            
| | | F                            
| S |                              
E   |                              
    S                              
