[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 12 length 33
last 12 length 33
CNF 12 vars 33 clauses
last 178 length 673
CNF 12 vars 33 clauses
last 22 length 73
last 72 length 265
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 25 length 90
last 42 length 143
last 67 length 250
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 197, clauses: 663
last 92 length 338
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 81, clauses: 235
CNF 22 vars 73 clauses
last 297 length 1216
last 231 length 958
last 1244 length 5286
CNF 72 vars 265 clauses
last 161 length 658
last 210 length 848
last 1172 length 4842
last 1244 length 5286
last 1244 length 5286
last 1172 length 4842
last 1172 length 4842
CNF 25 vars 90 clauses
CNF 42 vars 143 clauses
CNF 67 vars 250 clauses
last 197 length 663
CNF 92 vars 338 clauses
last 81 length 235
CNF 297 vars 1216 clauses
CNF 231 vars 958 clauses
CNF 1244 vars 5286 clauses
CNF 161 vars 658 clauses
CNF 210 vars 848 clauses
CNF 1172 vars 4842 clauses
CNF 1244 vars 5286 clauses
CNF 1244 vars 5286 clauses
CNF 1172 vars 4842 clauses
CNF 1172 vars 4842 clauses
CNF 197 vars 663 clauses
CNF 81 vars 235 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 934, clauses: 3391
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 197, clauses: 663, status: Unsatisfied, time: 3.72291612s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 81, clauses: 235, status: Unsatisfied, time: 3.225956319s
last 934 length 3391
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4575, clauses: 17663
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6847, clauses: 28069
CNF 934 vars 3391 clauses
last 4575 length 17663
last 6847 length 28069
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 934, clauses: 3391, status: Unsatisfied, time: 0.469024064s
CNF 4575 vars 17663 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4575, clauses: 17663, status: Satisfied, time: 0.424572952s
CNF 6847 vars 28069 clauses
last 1104 length 4710
last 1042 length 4318
CNF 1104 vars 4710 clauses
CNF 1042 vars 4318 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6847, clauses: 28069, status: Satisfied, time: 0.646866s
**************************************************
summary
**************************************************
SRS with 2 strict rules and 1 weak rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 18 strict rules and 9 weak rules on 9 letters       weights
SRS with 2 strict rules and 9 weak rules on 8 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 7 weak rules on 8 letters       Matrix   { monotone = Strict, domain = Natural, method = KBO, shape = Full, bits = 1, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 2, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 7 weak rules on 7 letters       weights
SRS with 0 strict rules and 3 weak rules on 5 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, c, b] -> [b, a, b, a] {- Input 0 -}
  [a, a] -> [a, b, a] {- Input 1 -}
  [b] ->= [b, c] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, c], [c, b], [b, a]] -> [ [a, b] , [b, a] , [a, b] , [b, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, c], [c, b], [b, c]] -> [ [a, b] , [b, a] , [a, b] , [b, a] , [ a , c ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c], [c, b], [b, b]] -> [ [a, b] , [b, a] , [a, b] , [b, a] , [ a , b ] ] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[c, a], [a, c], [c, b], [b, a]] -> [ [c, b] , [b, a] , [a, b] , [b, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[c, a], [a, c], [c, b], [b, c]] -> [ [c, b] , [b, a] , [a, b] , [b, a] , [ a , c ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[c, a], [a, c], [c, b], [b, b]] -> [ [c, b] , [b, a] , [a, b] , [b, a] , [ a , b ] ] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[b, a], [a, c], [c, b], [b, a]] -> [ [b, b] , [b, a] , [a, b] , [b, a] , [ a , a ] ] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[b, a], [a, c], [c, b], [b, c]] -> [ [b, b] , [b, a] , [a, b] , [b, a] , [ a , c ] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[b, a], [a, c], [c, b], [b, b]] -> [ [b, b] , [b, a] , [a, b] , [b, a] , [ a , b ] ] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, a], [a, a]] -> [ [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, a], [a, c]] -> [ [a, a] , [a, b] , [b, a] , [a, c] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, a], [a, b]] -> [ [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[c, a], [a, a], [a, a]] -> [ [c, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[c, a], [a, a], [a, c]] -> [ [c, a] , [a, b] , [b, a] , [a, c] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[c, a], [a, a], [a, b]] -> [ [c, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[b, a], [a, a], [a, a]] -> [ [b, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[b, a], [a, a], [a, c]] -> [ [b, a] , [a, b] , [b, a] , [a, c] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[b, a], [a, a], [a, b]] -> [ [b, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, b], [b, a]] ->= [ [a, b] , [b, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b], [b, c]] ->= [ [a, b] , [b, c] , [c, c] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, b]] ->= [ [a, b] , [b, c] , [c, b] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[c, b], [b, a]] ->= [ [c, b] , [b, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[c, b], [b, c]] ->= [ [c, b] , [b, c] , [c, c] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[c, b], [b, b]] ->= [ [c, b] , [b, c] , [c, b] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[b, b], [b, a]] ->= [ [b, b] , [b, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[b, b], [b, c]] ->= [ [b, b] , [b, c] , [c, c] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[b, b], [b, b]] ->= [ [b, b] , [b, c] , [c, b] ] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  ([a, a], 1/1)
  ([a, b], 0/1)
  ([a, c], 2/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
   property Termination
has value Just True
for SRS
  [[c, a], [a, c], [c, b], [b, c]] -> [ [c, b] , [b, a] , [a, b] , [b, a] , [ a , c ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c], [c, b], [b, c]] -> [ [b, b] , [b, a] , [a, b] , [b, a] , [ a , c ] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[a, b], [b, a]] ->= [ [a, b] , [b, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b], [b, c]] ->= [ [a, b] , [b, c] , [c, c] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, b]] ->= [ [a, b] , [b, c] , [c, b] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[c, b], [b, a]] ->= [ [c, b] , [b, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[c, b], [b, c]] ->= [ [c, b] , [b, c] , [c, c] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[c, b], [b, b]] ->= [ [c, b] , [b, c] , [c, b] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[b, b], [b, a]] ->= [ [b, b] , [b, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[b, b], [b, c]] ->= [ [b, b] , [b, c] , [c, c] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[b, b], [b, b]] ->= [ [b, b] , [b, c] , [c, b] ] {- Semlab 2 (Concon 2 (Input 2)) -}
reason
  ( [a, b]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, c]
  , St (Corner  / 1 0 2 \
                | 0 5 2 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 2 1 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 1 0 \
                | 0 0 7 |
                \ 0 0 1 /) )
  ( [b, c]
  , St (Corner  / 1 0 0 \
                | 0 1 1 |
                \ 0 0 1 /) )
  ( [c, a]
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( [c, b]
  , St (Corner  / 1 1 0 \
                | 0 0 5 |
                \ 0 0 1 /) )
  ( [c, c]
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[c, a], [a, c], [c, b], [b, c]] -> [ [c, b] , [b, a] , [a, b] , [b, a] , [ a , c ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, c], [c, b], [b, c]] -> [ [b, b] , [b, a] , [a, b] , [b, a] , [ a , c ] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[a, b], [b, a]] ->= [ [a, b] , [b, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b], [b, c]] ->= [ [a, b] , [b, c] , [c, c] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, b]] ->= [ [a, b] , [b, c] , [c, b] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[c, b], [b, a]] ->= [ [c, b] , [b, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[c, b], [b, c]] ->= [ [c, b] , [b, c] , [c, c] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, b], [b, a]] ->= [ [b, b] , [b, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[b, b], [b, c]] ->= [ [b, b] , [b, c] , [c, c] ] {- Semlab 2 (Concon 1 (Input 2)) -}
reason
  ( [a, b]
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( [a, c]
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( [b, a]
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( [b, b]
  , Ek 2  / 1 0 \
          \ 0 2 / )
  ( [b, c]
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( [c, a]
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( [c, b]
  , Ek 2  / 1 0 \
          \ 0 2 / )
  ( [c, c]
  , Ek 2  / 1 0 \
          \ 0 1 / )
   property Termination
has value Just True
for SRS
  [[a, b], [b, a]] ->= [ [a, b] , [b, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b], [b, c]] ->= [ [a, b] , [b, c] , [c, c] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, b]] ->= [ [a, b] , [b, c] , [c, b] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[c, b], [b, a]] ->= [ [c, b] , [b, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[c, b], [b, c]] ->= [ [c, b] , [b, c] , [c, c] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, b], [b, a]] ->= [ [b, b] , [b, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[b, b], [b, c]] ->= [ [b, b] , [b, c] , [c, c] ] {- Semlab 2 (Concon 1 (Input 2)) -}
reason
  ([a, b], 0/1)
  ([b, a], 1/1)
  ([b, b], 1/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
   property Termination
has value Just True
for SRS
  [[a, b], [b, c]] ->= [ [a, b] , [b, c] , [c, c] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[c, b], [b, c]] ->= [ [c, b] , [b, c] , [c, c] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, b], [b, c]] ->= [ [b, b] , [b, c] , [c, c] ] {- Semlab 2 (Concon 1 (Input 2)) -}
reason
  no strict rules

**************************************************
skeleton: (2/1,3)\TileAllAll{2}(18/9,9)\Weight(2/9,8)\Matrix{\Natural}{3}(2/7,8)\Matrix{\Natural}{2}(0/7,7)\Weight(0/3,5)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 2.981255249000
  min duration 0.001180773000
  total durat. 8.793464798000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 3}
    , self = 95
    , parent = Nothing
    , duration = 1.399262364000
    , status = Fail
    , start = 2025-09-04 07:31:49.880979627 UTC
    , finish = 2025-09-04 07:31:51.280241991 UTC
    , thread_cap_info = ("ThreadId 92", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 4}
    , self = 96
    , parent = Nothing
    , duration = 1.669115179000
    , status = Fail
    , start = 2025-09-04 07:31:49.874783348 UTC
    , finish = 2025-09-04 07:31:51.543898527 UTC
    , thread_cap_info = ("ThreadId 60", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 5}
    , self = 100
    , parent = Nothing
    , duration = 2.742651233000
    , status = Fail
    , start = 2025-09-04 07:31:49.886200007 UTC
    , finish = 2025-09-04 07:31:52.62885124 UTC
    , thread_cap_info = ("ThreadId 103", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 10}
    , self = 107
    , parent = Nothing
    , duration = 2.981255249000
    , status = Fail
    , start = 2025-09-04 07:31:50.034696422 UTC
    , finish = 2025-09-04 07:31:53.015951671 UTC
    , thread_cap_info = ("ThreadId 174", 3, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.127806659000
  min duration 3.067940727000
  total durat. 6.195747386000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 15}
    , self = 102
    , parent = Nothing
    , duration = 3.067940727000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:49.890312605 UTC
    , finish = 2025-09-04 07:31:52.958253332 UTC
    , thread_cap_info = ("ThreadId 137", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 8
      , total_length = 63}
    , self = 108
    , parent = Nothing
    , duration = 3.127806659000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:49.935523884 UTC
    , finish = 2025-09-04 07:31:53.063330543 UTC
    , thread_cap_info = ("ThreadId 164", 0, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 4.233770274000
  min duration 0.010592664000
  total durat. 11.238843091000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 8
      , total_length = 63}
    , self = 105
    , parent = Nothing
    , duration = 3.117181814000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:49.898739827 UTC
    , finish = 2025-09-04 07:31:53.015921641 UTC
    , thread_cap_info = ("ThreadId 149", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 178
      , num_strict_rules = 10
      , num_top_rules = 0
      , num_weak_rules = 168
      , alphabet_size = 37
      , total_length = 1286}
    , self = 113
    , parent = Nothing
    , duration = 3.877298339000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:50.576605554 UTC
    , finish = 2025-09-04 07:31:54.453903893 UTC
    , thread_cap_info = ("ThreadId 194", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 8
      , total_length = 63}
    , self = 112
    , parent = Nothing
    , duration = 4.233770274000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:50.050915825 UTC
    , finish = 2025-09-04 07:31:54.284686099 UTC
    , thread_cap_info = ("ThreadId 181", 3, False)}
Success : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 3.087696851000
  min duration 0.280976185000
  total durat. 6.428879448000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 8
      , total_length = 63}
    , self = 103
    , parent = Nothing
    , duration = 3.060206412000
    , status = Success
    , start = 2025-09-04 07:31:49.914003685 UTC
    , finish = 2025-09-04 07:31:52.974210097 UTC
    , thread_cap_info = ("ThreadId 151", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 8
      , total_length = 63}
    , self = 110
    , parent = Nothing
    , duration = 3.087696851000
    , status = Success
    , start = 2025-09-04 07:31:50.055596399 UTC
    , finish = 2025-09-04 07:31:53.14329325 UTC
    , thread_cap_info = ("ThreadId 183", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 2.980542328000
  min duration 0.001058910000
  total durat. 10.535773797000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 3}
    , self = 97
    , parent = Nothing
    , duration = 2.434586501000
    , status = Fail
    , start = 2025-09-04 07:31:49.881159957 UTC
    , finish = 2025-09-04 07:31:52.315746458 UTC
    , thread_cap_info = ("ThreadId 93", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 0
      , alphabet_size = 2
      , total_length = 4}
    , self = 98
    , parent = Nothing
    , duration = 2.478881338000
    , status = Fail
    , start = 2025-09-04 07:31:49.881245472 UTC
    , finish = 2025-09-04 07:31:52.36012681 UTC
    , thread_cap_info = ("ThreadId 61", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 5}
    , self = 99
    , parent = Nothing
    , duration = 2.640704720000
    , status = Fail
    , start = 2025-09-04 07:31:49.881484795 UTC
    , finish = 2025-09-04 07:31:52.522189515 UTC
    , thread_cap_info = ("ThreadId 104", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 10}
    , self = 106
    , parent = Nothing
    , duration = 2.980542328000
    , status = Fail
    , start = 2025-09-04 07:31:50.03539833 UTC
    , finish = 2025-09-04 07:31:53.015940658 UTC
    , thread_cap_info = ("ThreadId 175", 3, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.122709355000
  min duration 3.046661153000
  total durat. 6.169370508000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 15}
    , self = 101
    , parent = Nothing
    , duration = 3.046661153000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:49.890314855 UTC
    , finish = 2025-09-04 07:31:52.936976008 UTC
    , thread_cap_info = ("ThreadId 138", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 8
      , total_length = 63}
    , self = 109
    , parent = Nothing
    , duration = 3.122709355000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:49.956451464 UTC
    , finish = 2025-09-04 07:31:53.079160819 UTC
    , thread_cap_info = ("ThreadId 165", 0, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.922204044000
  min duration 0.005447976000
  total durat. 3.927652020000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 178
      , num_strict_rules = 10
      , num_top_rules = 0
      , num_weak_rules = 168
      , alphabet_size = 37
      , total_length = 1286}
    , self = 114
    , parent = Nothing
    , duration = 3.922204044000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:50.596738266 UTC
    , finish = 2025-09-04 07:31:54.51894231 UTC
    , thread_cap_info = ("ThreadId 196", 0, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.537404438000
  min duration 2.537404438000
  total durat. 2.537404438000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 10}
    , self = 130
    , parent = Nothing
    , duration = 2.537404438000
    , status = Success
    , start = 2025-09-04 07:31:53.037017635 UTC
    , finish = 2025-09-04 07:31:55.574422073 UTC
    , thread_cap_info = ("ThreadId 218", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.140660749000
  min duration 2.140660749000
  total durat. 2.140660749000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 8
      , total_length = 63}
    , self = 120
    , parent = Nothing
    , duration = 2.140660749000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:53.116134624 UTC
    , finish = 2025-09-04 07:31:55.256795373 UTC
    , thread_cap_info = ("ThreadId 221", 0, False)}
Success : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.090491721000
  min duration 2.090491721000
  total durat. 2.090491721000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 8
      , total_length = 63}
    , self = 118
    , parent = Nothing
    , duration = 2.090491721000
    , status = Success
    , start = 2025-09-04 07:31:53.137677424 UTC
    , finish = 2025-09-04 07:31:55.228169145 UTC
    , thread_cap_info = ("ThreadId 222", 0, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.011524736000
  min duration 2.011524736000
  total durat. 2.011524736000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 1
      , alphabet_size = 3
      , total_length = 10}
    , self = 117
    , parent = Nothing
    , duration = 2.011524736000
    , status = Fail
    , start = 2025-09-04 07:31:53.052841985 UTC
    , finish = 2025-09-04 07:31:55.064366721 UTC
    , thread_cap_info = ("ThreadId 219", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 4.750336215000
  min duration 4.750336215000
  total durat. 4.750336215000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 0
      , alphabet_size = 1
      , total_length = 2}
    , self = 116
    , parent = Nothing
    , duration = 4.750336215000
    , status = Fail
    , start = 2025-09-04 07:31:49.886551787 UTC
    , finish = 2025-09-04 07:31:54.636888002 UTC
    , thread_cap_info = ("ThreadId 98", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 4.733067021000
  min duration 4.733067021000
  total durat. 4.733067021000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 0
      , alphabet_size = 1
      , total_length = 2}
    , self = 115
    , parent = Nothing
    , duration = 4.733067021000
    , status = Fail
    , start = 2025-09-04 07:31:49.881370322 UTC
    , finish = 2025-09-04 07:31:54.614437343 UTC
    , thread_cap_info = ("ThreadId 97", 0, False)}
**************************************************
F                                          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                                          = False\n , verbose = False}" , input_size = Size { num_rules = 1 , num_strict_rules
F                                          = 1 , num_top_rules = 1 , num_weak_rules = 0 , alphabet_size = 2 , total_length
F                                          = 4} , self = 96 , parent = Nothing , duration = 1.669115179000 , status
F                                          = Fail , start = 2025-09-04 07:31:49.874783348 UTC , finish = 2025-09-04
F                                          07:31:51.543898527 UTC , thread_cap_info = ("ThreadId 60", 3, False)}
F                                          
| F                                        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                                        = False\n , verbose = False}" , input_size = Size { num_rules = 1 , num_strict_rules
| F                                        = 1 , num_top_rules = 1 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| F                                        = 3} , self = 95 , parent = Nothing , duration = 1.399262364000 , status
| F                                        = Fail , start = 2025-09-04 07:31:49.880979627 UTC , finish = 2025-09-04
| F                                        07:31:51.280241991 UTC , thread_cap_info = ("ThreadId 92", 0, False)}
| F                                        
| | F                                      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                                      = False\n , verbose = False}" , input_size = Size { num_rules = 1 , num_strict_rules
| | F                                      = 1 , num_top_rules = 1 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | F                                      = 3} , self = 97 , parent = Nothing , duration = 2.434586501000 , status
| | F                                      = Fail , start = 2025-09-04 07:31:49.881159957 UTC , finish = 2025-09-04
| | F                                      07:31:52.315746458 UTC , thread_cap_info = ("ThreadId 93", 0, False)}
| | F                                      
| | | F                                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                                    = False\n , verbose = False}" , input_size = Size { num_rules = 1 , num_strict_rules
| | | F                                    = 1 , num_top_rules = 1 , num_weak_rules = 0 , alphabet_size = 2 , total_length
| | | F                                    = 4} , self = 98 , parent = Nothing , duration = 2.478881338000 , status
| | | F                                    = Fail , start = 2025-09-04 07:31:49.881245472 UTC , finish = 2025-09-04
| | | F                                    07:31:52.36012681 UTC , thread_cap_info = ("ThreadId 61", 3, False)}
| | | F                                    
| | | | F                                  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F                                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F                                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F                                  = 1 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 0 , alphabet_size
| | | | F                                  = 1 , total_length = 2} , self = 115 , parent = Nothing , duration = 4.733067021000
| | | | F                                  , status = Fail , start = 2025-09-04 07:31:49.881370322 UTC , finish =
| | | | F                                  2025-09-04 07:31:54.614437343 UTC , thread_cap_info = ("ThreadId 97", 0,
| | | | F                                  False)}
| | | | F                                  
| | | | | F                                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                                = False\n , verbose = False}" , input_size = Size { num_rules = 1 , num_strict_rules
| | | | | F                                = 1 , num_top_rules = 1 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | | | F                                = 5} , self = 99 , parent = Nothing , duration = 2.640704720000 , status
| | | | | F                                = Fail , start = 2025-09-04 07:31:49.881484795 UTC , finish = 2025-09-04
| | | | | F                                07:31:52.522189515 UTC , thread_cap_info = ("ThreadId 104", 3, False)}
| | | | | F                                
| | | | | | F                              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F                              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F                              = False\n , verbose = False}" , input_size = Size { num_rules = 1 , num_strict_rules
| | | | | | F                              = 1 , num_top_rules = 1 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | | | | F                              = 5} , self = 100 , parent = Nothing , duration = 2.742651233000 , status
| | | | | | F                              = Fail , start = 2025-09-04 07:31:49.886200007 UTC , finish = 2025-09-04
| | | | | | F                              07:31:52.62885124 UTC , thread_cap_info = ("ThreadId 103", 3, False)}
| | | | | | F                              
| | | | | | | F                            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | F                            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | F                            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | F                            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F                            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F                            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 1
| | | | | | | F                            , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 0 , alphabet_size
| | | | | | | F                            = 1 , total_length = 2} , self = 116 , parent = Nothing , duration = 4.750336215000
| | | | | | | F                            , status = Fail , start = 2025-09-04 07:31:49.886551787 UTC , finish =
| | | | | | | F                            2025-09-04 07:31:54.636888002 UTC , thread_cap_info = ("ThreadId 98", 2,
| | | | | | | F                            False)}
| | | | | | | F                            
| | | | | | | | F                          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | F                          , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | F                          = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | | | | | F                          Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | | | | | F                          8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | | | | | F                          = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | | | | | F                          ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | | | | | F                          1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | F                          = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 2 ,
| | | | | | | | F                          num_top_rules = 0 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | | | | | F                          = 15} , self = 91 , parent = Nothing , duration = 0.663927273000 , status
| | | | | | | | F                          = Fail , start = 2025-09-04 07:31:49.886559585 UTC , finish = 2025-09-04
| | | | | | | | F                          07:31:50.550486858 UTC , thread_cap_info = ("ThreadId 121", 3, False)}
| | | | | | | | F                          
| | | | | | | | | E                        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | E                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | E                        = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | | | | | E                        = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | | | | | | E                        = 15} , self = 102 , parent = Nothing , duration = 3.067940727000 , status
| | | | | | | | | E                        = Except "<<timeout>>" , start = 2025-09-04 07:31:49.890312605 UTC , finish
| | | | | | | | | E                        = 2025-09-04 07:31:52.958253332 UTC , thread_cap_info = ("ThreadId 137",
| | | | | | | | | E                        1, False)}
| | | | | | | | | E                        
| | | | | | | | | | E                      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | E                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | E                      = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | | | | | | E                      = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | | | | | | | E                      = 15} , self = 101 , parent = Nothing , duration = 3.046661153000 , status
| | | | | | | | | | E                      = Except "<<timeout>>" , start = 2025-09-04 07:31:49.890314855 UTC , finish
| | | | | | | | | | E                      = 2025-09-04 07:31:52.936976008 UTC , thread_cap_info = ("ThreadId 138",
| | | | | | | | | | E                      1, False)}
| | | | | | | | | | E                      
| | | | | | | | | | | F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | | | | | F                    , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | | | | | | F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | | | | | | | | F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | | | | | | | | F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | | | | | | | | F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | | | | | | | | F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | | | | | | | | F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | | | | | F                    = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 2 ,
| | | | | | | | | | | F                    num_top_rules = 0 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | | | | | | | | F                    = 15} , self = 89 , parent = Nothing , duration = 0.194738742000 , status
| | | | | | | | | | | F                    = Fail , start = 2025-09-04 07:31:49.89793507 UTC , finish = 2025-09-04
| | | | | | | | | | | F                    07:31:50.092673812 UTC , thread_cap_info = ("ThreadId 122", 2, False)}
| | | | | | | | | | | F                    
| | | | | | | | | | | | E                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | E                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | E                  = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | | | | | | | | | E                  = 2 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 8 , total_length
| | | | | | | | | | | | E                  = 63} , self = 105 , parent = Nothing , duration = 3.117181814000 , status
| | | | | | | | | | | | E                  = Except "AsyncCancelled" , start = 2025-09-04 07:31:49.898739827 UTC ,
| | | | | | | | | | | | E                  finish = 2025-09-04 07:31:53.015921641 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | E                  149", 3, False)}
| | | | | | | | | | | | E                  
| | | | | | | | | | | | | S                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | S                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | S                = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | | | | | | | | | | S                = 2 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 8 , total_length
| | | | | | | | | | | | | S                = 63} , self = 103 , parent = Nothing , duration = 3.060206412000 , status
| | | | | | | | | | | | | S                = Success , start = 2025-09-04 07:31:49.914003685 UTC , finish = 2025-09-04
| | | | | | | | | | | | | S                07:31:52.974210097 UTC , thread_cap_info = ("ThreadId 151", 3, False)}
| | | | | | | | | | | | | S                
| | | | | | | | | | | | | | S              Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | | | | | | | | | | | | S              , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | | | | | | | | | | | | S              , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | | | | | | | | | | | | S              = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | | | | | | | | | | | | S              , cpf = True}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | | | | | | | | | | | S              = 2 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 8 , total_length
| | | | | | | | | | | | | | S              = 63} , self = 88 , parent = Nothing , duration = 0.141235776000 , status
| | | | | | | | | | | | | | S              = Success , start = 2025-09-04 07:31:49.919736688 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | S              07:31:50.060972464 UTC , thread_cap_info = ("ThreadId 163", 0, False)}
| | | | | | | | | | | | | | S              
| | | | | | | | | | | | | | | E            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | E            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | E            = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | | | | | | | | | | | | E            = 2 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 8 , total_length
| | | | | | | | | | | | | | | E            = 63} , self = 108 , parent = Nothing , duration = 3.127806659000 , status
| | | | | | | | | | | | | | | E            = Except "<<timeout>>" , start = 2025-09-04 07:31:49.935523884 UTC , finish
| | | | | | | | | | | | | | | E            = 2025-09-04 07:31:53.063330543 UTC , thread_cap_info = ("ThreadId 164",
| | | | | | | | | | | | | | | E            0, False)}
| | | | | | | | | | | | | | | E            
| | | | | | | | | | | | | | | | E          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | E          = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | | | | | | | | | | | | | E          = 2 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 8 , total_length
| | | | | | | | | | | | | | | | E          = 63} , self = 109 , parent = Nothing , duration = 3.122709355000 , status
| | | | | | | | | | | | | | | | E          = Except "<<timeout>>" , start = 2025-09-04 07:31:49.956451464 UTC , finish
| | | | | | | | | | | | | | | | E          = 2025-09-04 07:31:53.079160819 UTC , thread_cap_info = ("ThreadId 165",
| | | | | | | | | | | | | | | | E          0, False)}
| | | | | | | | | | | | | | | | E          
| | | | | | | | | | | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
| | | | | | | | | | | | | | | | | F        = 1 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | | | | | | | | | | | | | | F        = 10} , self = 107 , parent = Nothing , duration = 2.981255249000 , status
| | | | | | | | | | | | | | | | | F        = Fail , start = 2025-09-04 07:31:50.034696422 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | | | F        07:31:53.015951671 UTC , thread_cap_info = ("ThreadId 174", 3, False)}
| | | | | | | | | | | | | | | | | F        
| | | | | | | | | | | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
| | | | | | | | | | | | | | | | | | F      = 1 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| | | | | | | | | | | | | | | | | | F      = 10} , self = 106 , parent = Nothing , duration = 2.980542328000 , status
| | | | | | | | | | | | | | | | | | F      = Fail , start = 2025-09-04 07:31:50.03539833 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | | | | F      07:31:53.015940658 UTC , thread_cap_info = ("ThreadId 175", 3, False)}
| | | | | | | | | | | | | | | | | | F      
| | | | | | | | | | | | | | | | | | | E    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | | | | | | | | | | | | | | | | E    = 2 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 8 , total_length
| | | | | | | | | | | | | | | | | | | E    = 63} , self = 112 , parent = Nothing , duration = 4.233770274000 , status
| | | | | | | | | | | | | | | | | | | E    = Except "AsyncCancelled" , start = 2025-09-04 07:31:50.050915825 UTC ,
| | | | | | | | | | | | | | | | | | | E    finish = 2025-09-04 07:31:54.284686099 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | | | E    181", 3, False)}
| | | | | | | | | | | | | | | | | | | E    
| | | | | | | | | | | | | | | | | | | | S  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | | | | | S  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | | | | | S  = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | | | | | | | | | | | | | | | | | S  = 2 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 8 , total_length
| | | | | | | | | | | | | | | | | | | | S  = 63} , self = 110 , parent = Nothing , duration = 3.087696851000 , status
| | | | | | | | | | | | | | | | | | | | S  = Success , start = 2025-09-04 07:31:50.055596399 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | | | | | | S  07:31:53.14329325 UTC , thread_cap_info = ("ThreadId 183", 3, False)}
| | | | | | | | | | | | | | | | | | | | S  
| | | | | | | | | | | | | | S | | | | | |  
| | | | | | | | | | | | | | S | | | | | |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | | | | | | | | | S | | | | | |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | | | | | | | | | S | | | | | |  = Size { num_rules = 704 , num_strict_rules = 128 , num_top_rules = 0 ,
| | | | | | | | | | | | | | S | | | | | |  num_weak_rules = 576 , alphabet_size = 62 , total_length = 5440} , self
| | | | | | | | | | | | | | S | | | | | |  = 90 , parent = Nothing , duration = 0.241397552000 , status = Success
| | | | | | | | | | | | | | S | | | | | |  , start = 2025-09-04 07:31:50.076996051 UTC , finish = 2025-09-04 07:31:50.318393603
| | | | | | | | | | | | | | S | | | | | |  UTC , thread_cap_info = ("ThreadId 185", 0, False)}
| | | | | | | | | | | | | | S | | | | | |  
| | | | | | | | | | | F | | | | | | | | |  
| | | | | | | | | | |   | | S | | | | | |  
| | | | | | | | | | | F | |   | | | | | |  Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
| | | | | | | | | | | F | |   | | | | | |  = False\n , verbose = False\n , tracing = False}" , input_size = Size {
| | | | | | | | | | | F | |   | | | | | |  num_rules = 178 , num_strict_rules = 10 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | F | |   | | | | | |  = 168 , alphabet_size = 37 , total_length = 1286} , self = 92 , parent
| | | | | | | | | | | F | |   | | | | | |  = Nothing , duration = 0.247410583000 , status = Fail , start = 2025-09-04
| | | | | | | | | | | F | |   | | | | | |  07:31:50.318411394 UTC , finish = 2025-09-04 07:31:50.565821977 UTC , thread_cap_info
| | | | | | | | | | | F | |   | | | | | |  = ("ThreadId 189", 0, False)}
| | | | | | | | | | | F | |   | | | | | |  
| | | | | | | | F | | | | |   | | | | | |  
| | | | | | | |   | | F | |   | | | | | |  
| | | | | | | | E | |   | |   | | | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E | |   | |   | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E | |   | |   | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 178 , num_strict_rules
| | | | | | | | E | |   | |   | | | | | |  = 10 , num_top_rules = 0 , num_weak_rules = 168 , alphabet_size = 37 ,
| | | | | | | | E | |   | |   | | | | | |  total_length = 1286} , self = 113 , parent = Nothing , duration = 3.877298339000
| | | | | | | | E | |   | |   | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:50.576605554
| | | | | | | | E | |   | |   | | | | | |  UTC , finish = 2025-09-04 07:31:54.453903893 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E | |   | |   | | | | | |  194", 0, False)}
| | | | | | | | E | |   | |   | | | | | |  
| | | | | | | | | | | E | |   | | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | E | |   | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | E | |   | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 178 , num_strict_rules
| | | | | | | | | | | E | |   | | | | | |  = 10 , num_top_rules = 0 , num_weak_rules = 168 , alphabet_size = 37 ,
| | | | | | | | | | | E | |   | | | | | |  total_length = 1286} , self = 114 , parent = Nothing , duration = 3.922204044000
| | | | | | | | | | | E | |   | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:50.596738266
| | | | | | | | | | | E | |   | | | | | |  UTC , finish = 2025-09-04 07:31:54.51894231 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | E | |   | | | | | |  196", 0, False)}
| | | | | | | | | | | E | |   | | | | | |  
| F | | | | | | | | | | | |   | | | | | |  
F   | | | | | | | | | | | |   | | | | | |  
    F | | | | | | | | | | |   | | | | | |  
      F | | | | | | | | | |   | | | | | |  
        | F | | | | | | | |   | | | | | |  
        |   F | | | | | | |   | | | | | |  
        |     | | | E | | |   | | | | | |  
        |     | | E   | | |   | | | | | |  
        |     | |     | | S   | | | | | |  
        |     | |     | E     | | | | | |  
        |     | |     |       | | | F | |  
        |     | |     |       | | F   | |  
S       |     | |     |       | |     | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
S       |     | |     |       | |     | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
S       |     | |     |       | |     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S       |     | |     |       | |     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S       |     | |     |       | |     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S       |     | |     |       | |     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 2
S       |     | |     |       | |     | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
S       |     | |     |       | |     | |  = 3 , total_length = 10} , self = 130 , parent = Nothing , duration = 2.537404438000
S       |     | |     |       | |     | |  , status = Success , start = 2025-09-04 07:31:53.037017635 UTC , finish
S       |     | |     |       | |     | |  = 2025-09-04 07:31:55.574422073 UTC , thread_cap_info = ("ThreadId 218",
S       |     | |     |       | |     | |  3, False)}
S       |     | |     |       | |     | |  
| F     |     | |     |       | |     | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| F     |     | |     |       | |     | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F     |     | |     |       | |     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F     |     | |     |       | |     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F     |     | |     |       | |     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F     |     | |     |       | |     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 2
| F     |     | |     |       | |     | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| F     |     | |     |       | |     | |  = 3 , total_length = 10} , self = 117 , parent = Nothing , duration = 2.011524736000
| F     |     | |     |       | |     | |  , status = Fail , start = 2025-09-04 07:31:53.052841985 UTC , finish =
| F     |     | |     |       | |     | |  2025-09-04 07:31:55.064366721 UTC , thread_cap_info = ("ThreadId 219",
| F     |     | |     |       | |     | |  3, False)}
| F     |     | |     |       | |     | |  
| |     |     | |     |       E |     | |  
| |     |     | |     |         E     | |  
| | E   |     | |     |               | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | E   |     | |     |               | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E   |     | |     |               | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E   |     | |     |               | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E   |     | |     |               | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E   |     | |     |               | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | E   |     | |     |               | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size
| | E   |     | |     |               | |  = 8 , total_length = 63} , self = 120 , parent = Nothing , duration = 2.140660749000
| | E   |     | |     |               | |  , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:53.116134624
| | E   |     | |     |               | |  UTC , finish = 2025-09-04 07:31:55.256795373 UTC , thread_cap_info = ("ThreadId
| | E   |     | |     |               | |  221", 0, False)}
| | E   |     | |     |               | |  
| | | S |     | |     |               | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | S |     | |     |               | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | S |     | |     |               | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | S |     | |     |               | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S |     | |     |               | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S |     | |     |               | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | S |     | |     |               | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size
| | | S |     | |     |               | |  = 8 , total_length = 63} , self = 118 , parent = Nothing , duration = 2.090491721000
| | | S |     | |     |               | |  , status = Success , start = 2025-09-04 07:31:53.137677424 UTC , finish
| | | S |     | |     |               | |  = 2025-09-04 07:31:55.228169145 UTC , thread_cap_info = ("ThreadId 222",
| | | S |     | |     |               | |  0, False)}
| | | S |     | |     |               | |  
| | | | |     | |     |               | S  
| | | | |     | |     |               E    
| | | | |     | E     |                    
| | | | |     |       E                    
| | | | F     |                            
| | | |       F                            
| F | |                                    
|   | S                                    
|   E                                      
| S                                        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| S                                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| S                                        = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| S                                        = 2 , num_top_rules = 0 , num_weak_rules = 7 , alphabet_size = 8 , total_length
| S                                        = 53} , self = 128 , parent = Nothing , duration = 0.304684746000 , status
| S                                        = Success , start = 2025-09-04 07:31:55.257227649 UTC , finish = 2025-09-04
| S                                        07:31:55.561912395 UTC , thread_cap_info = ("ThreadId 242", 0, False)}
| S                                        
| | S                                      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | S                                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | S                                      = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | S                                      = 2 , num_top_rules = 0 , num_weak_rules = 7 , alphabet_size = 8 , total_length
| | S                                      = 53} , self = 126 , parent = Nothing , duration = 0.280976185000 , status
| | S                                      = Success , start = 2025-09-04 07:31:55.274858793 UTC , finish = 2025-09-04
| | S                                      07:31:55.555834978 UTC , thread_cap_info = ("ThreadId 243", 0, False)}
| | S                                      
| | | S                                    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | S                                    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | S                                    = Size { num_rules = 576 , num_strict_rules = 128 , num_top_rules = 0 ,
| | | S                                    num_weak_rules = 448 , alphabet_size = 62 , total_length = 4544} , self
| | | S                                    = 133 , parent = Nothing , duration = 0.224675728000 , status = Success
| | | S                                    , start = 2025-09-04 07:31:55.385688424 UTC , finish = 2025-09-04 07:31:55.610364152
| | | S                                    UTC , thread_cap_info = ("ThreadId 244", 0, False)}
| | | S                                    
| | S |                                    
| S   |                                    
S     |                                    
      S                                    
