[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 310 length 1465
CNF 310 vars 1465 clauses
last 425 length 2175
CNF 425 vars 2175 clauses
last 1150 length 5557
last 1098 length 6706
last 1040 length 5437
CNF 1098 vars 6706 clauses
last 1000 length 5208
last 592 length 2736
last 741 length 3662
CNF 1000 vars 5208 clauses
CNF 1150 vars 5557 clauses
CNF 1040 vars 5437 clauses
CNF 592 vars 2736 clauses
last 669 length 3276
last 872 length 4028
last 1394 length 7230
last 780 length 3611
last 540 length 2655
CNF 741 vars 3662 clauses
last 1626 length 9321
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3145, clauses: 11641
last 1306 length 6261
last 1908 length 9465
last 540 length 2655
last 872 length 4028
last 11623 length 71984
CNF 669 vars 3276 clauses
last 13705 length 103895
CNF 872 vars 4028 clauses
CNF 540 vars 2655 clauses
CNF 780 vars 3611 clauses
CNF 1394 vars 7230 clauses
CNF 1626 vars 9321 clauses
last 3145 length 11641
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12068, clauses: 50486
CNF 1306 vars 6261 clauses
CNF 1908 vars 9465 clauses
CNF 540 vars 2655 clauses
CNF 872 vars 4028 clauses
CNF 11623 vars 71984 clauses
CNF 13705 vars 103895 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1973, clauses: 7728
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1656, clauses: 6734
CNF 3145 vars 11641 clauses
last 12068 length 50486
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14770, clauses: 61397
last 1973 length 7728
last 1656 length 6734
CNF 12068 vars 50486 clauses
last 14770 length 61397
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3145, clauses: 11641, status: Unsatisfied, time: 0.422271396s
CNF 1656 vars 6734 clauses
CNF 1973 vars 7728 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12068, clauses: 50486, status: Satisfied, time: 0.333419896s
CNF 14770 vars 61397 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1656, clauses: 6734, status: Unsatisfied, time: 0.147841689s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1973, clauses: 7728, status: Satisfied, time: 0.154074935s
last 452 length 2261
CNF 452 vars 2261 clauses
last 711 length 3211
last 1306 length 6261
CNF 711 vars 3211 clauses
CNF 1306 vars 6261 clauses
last 1908 length 9465
CNF 1908 vars 9465 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1418, clauses: 5660
last 1418 length 5660
CNF 1418 vars 5660 clauses
**************************************************
summary
**************************************************
SRS with 1 strict rules and 1 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 4 weak rules on 4 letters       weights
SRS with 1 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 3 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, a, b, b, a] -> [] {- Input 0 -}
  [] ->= [a, a, b, a] {- Input 1 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, a], [a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, a], [a, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, a], [a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 1/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, a], [a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 0 0 \
                | 0 2 1 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 2 1 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 4 7 \
                | 0 0 1 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
reason
  no strict rules

**************************************************
skeleton: (1/1,2)\TileAllAll{2}(4/4,4)\Weight(1/3,4)\Matrix{\Natural}{3}(0/3,3)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 12
  max duration 0.803838724000
  min duration 0.019802663000
  total durat. 4.768614327000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 12
  max duration 0.834443190000
  min duration 0.008826828000
  total durat. 4.546079224000
**************************************************
F                                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                                = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
F                                = 10 , num_top_rules = 10 , num_weak_rules = 2 , alphabet_size = 4 , total_length
F                                = 52} , self = 82 , parent = Nothing , duration = 0.105150232000 , status
F                                = Fail , start = 2025-09-04 08:24:34.643765493 UTC , finish = 2025-09-04
F                                08:24:34.748915725 UTC , thread_cap_info = ("ThreadId 87", 1, False)}
F                                
| F                              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                              = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| F                              = 15 , num_top_rules = 15 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| F                              = 78} , self = 88 , parent = Nothing , duration = 0.349161426000 , status
| F                              = Fail , start = 2025-09-04 08:24:34.643859867 UTC , finish = 2025-09-04
| F                              08:24:34.993021293 UTC , thread_cap_info = ("ThreadId 91", 2, False)}
| F                              
| | F                            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                            = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | F                            = 15 , num_top_rules = 15 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | F                            = 78} , self = 86 , parent = Nothing , duration = 0.178863663000 , status
| | F                            = Fail , start = 2025-09-04 08:24:34.652206031 UTC , finish = 2025-09-04
| | F                            08:24:34.831069694 UTC , thread_cap_info = ("ThreadId 90", 2, False)}
| | F                            
| | | F                          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                          = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F                          = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 2 , total_length
| | | F                          = 28} , self = 92 , parent = Nothing , duration = 0.598095010000 , status
| | | F                          = Fail , start = 2025-09-04 08:24:34.657678201 UTC , finish = 2025-09-04
| | | F                          08:24:35.255773211 UTC , thread_cap_info = ("ThreadId 132", 3, False)}
| | | F                          
| | | | F                        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F                        = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 2 , total_length
| | | | F                        = 28} , self = 87 , parent = Nothing , duration = 0.304615807000 , status
| | | | F                        = Fail , start = 2025-09-04 08:24:34.670075905 UTC , finish = 2025-09-04
| | | | F                        08:24:34.974691712 UTC , thread_cap_info = ("ThreadId 135", 3, False)}
| | | | F                        
| | | | | F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | F                      = 15 , num_top_rules = 15 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | | F                      = 78} , self = 94 , parent = Nothing , duration = 0.604373606000 , status
| | | | | F                      = Fail , start = 2025-09-04 08:24:34.670101353 UTC , finish = 2025-09-04
| | | | | F                      08:24:35.274474959 UTC , thread_cap_info = ("ThreadId 144", 2, False)}
| | | | | F                      
| | | | | | F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | | F                    = 15 , num_top_rules = 15 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | | | F                    = 78} , self = 95 , parent = Nothing , duration = 0.640210152000 , status
| | | | | | F                    = Fail , start = 2025-09-04 08:24:34.671995683 UTC , finish = 2025-09-04
| | | | | | F                    08:24:35.312205835 UTC , thread_cap_info = ("ThreadId 145", 2, False)}
| | | | | | F                    
| | | | | | | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | F                  = 10 , num_top_rules = 10 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | | | F                  = 52} , self = 90 , parent = Nothing , duration = 0.537052037000 , status
| | | | | | | F                  = Fail , start = 2025-09-04 08:24:34.675964507 UTC , finish = 2025-09-04
| | | | | | | F                  08:24:35.213016544 UTC , thread_cap_info = ("ThreadId 150", 1, False)}
| | | | | | | F                  
| | | | | | | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | F                = 10 , num_top_rules = 10 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | | | | F                = 52} , self = 89 , parent = Nothing , duration = 0.460688947000 , status
| | | | | | | | F                = Fail , start = 2025-09-04 08:24:34.675967205 UTC , finish = 2025-09-04
| | | | | | | | F                08:24:35.136656152 UTC , thread_cap_info = ("ThreadId 151", 1, False)}
| | | | | | | | F                
| | | | | | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | | F              = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | | F              = 26} , self = 93 , parent = Nothing , duration = 0.577921848000 , status
| | | | | | | | | F              = Fail , start = 2025-09-04 08:24:34.677869205 UTC , finish = 2025-09-04
| | | | | | | | | F              08:24:35.255791053 UTC , thread_cap_info = ("ThreadId 136", 3, False)}
| | | | | | | | | F              
| | | | | | | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | | | F            = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | | | F            = 26} , self = 91 , parent = Nothing , duration = 0.527519151000 , status
| | | | | | | | | | F            = Fail , start = 2025-09-04 08:24:34.685935481 UTC , finish = 2025-09-04
| | | | | | | | | | F            08:24:35.213454632 UTC , thread_cap_info = ("ThreadId 137", 3, False)}
| | | | | | | | | | F            
| | | | | | | | | | | F          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | | | | F          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | | | | F          = 12 , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 2
| | | | | | | | | | | F          , alphabet_size = 4 , total_length = 52} , self = 102 , parent = Nothing
| | | | | | | | | | | F          , duration = 0.981377001000 , status = Fail , start = 2025-09-04 08:24:34.688719852
| | | | | | | | | | | F          UTC , finish = 2025-09-04 08:24:35.670096853 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | F          152", 1, False)}
| | | | | | | | | | | F          
| | | | | | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | | | | F        = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | | | | | F        = 68} , self = 97 , parent = Nothing , duration = 0.672015822000 , status
| | | | | | | | | | | | F        = Fail , start = 2025-09-04 08:24:34.721560336 UTC , finish = 2025-09-04
| | | | | | | | | | | | F        08:24:35.393576158 UTC , thread_cap_info = ("ThreadId 163", 3, False)}
| | | | | | | | | | | | F        
| | | | | | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | | | | | F      = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | F      = 68} , self = 96 , parent = Nothing , duration = 0.644451687000 , status
| | | | | | | | | | | | | F      = Fail , start = 2025-09-04 08:24:34.730076243 UTC , finish = 2025-09-04
| | | | | | | | | | | | | F      08:24:35.37452793 UTC , thread_cap_info = ("ThreadId 165", 3, False)}
| | | | | | | | | | | | | F      
| | | | | | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | | | | | | | | F    = 1 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 13 , total_length
| | | | | | | | | | | | | | F    = 266} , self = 100 , parent = Nothing , duration = 0.803838724000 , status
| | | | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:24:34.735878446 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | F    08:24:35.53971717 UTC , thread_cap_info = ("ThreadId 169", 3, False)}
| | | | | | | | | | | | | | F    
| | | | | | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | | | | | | | | | F  = 1 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 13 , total_length
| | | | | | | | | | | | | | | F  = 266} , self = 101 , parent = Nothing , duration = 0.834443190000 , status
| | | | | | | | | | | | | | | F  = Fail , start = 2025-09-04 08:24:34.735882378 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | F  08:24:35.570325568 UTC , thread_cap_info = ("ThreadId 171", 3, False)}
| | | | | | | | | | | | | | | F  
F | | | | | | | | | | | | | | |  
F | | | | | | | | | | | | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | | | | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | | | | | | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
F | | | | | | | | | | | | | | |  = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
F | | | | | | | | | | | | | | |  = 26} , self = 98 , parent = Nothing , duration = 0.573086169000 , status
F | | | | | | | | | | | | | | |  = Fail , start = 2025-09-04 08:24:34.83101205 UTC , finish = 2025-09-04
F | | | | | | | | | | | | | | |  08:24:35.404098219 UTC , thread_cap_info = ("ThreadId 176", 0, False)}
F | | | | | | | | | | | | | | |  
| | F | | | | | | | | | | | | |  
| | F | | | | | | | | | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | | | | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | | | | | | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | F | | | | | | | | | | | | |  = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | F | | | | | | | | | | | | |  = 26} , self = 99 , parent = Nothing , duration = 0.677331264000 , status
| | F | | | | | | | | | | | | |  = Fail , start = 2025-09-04 08:24:34.837854109 UTC , finish = 2025-09-04
| | F | | | | | | | | | | | | |  08:24:35.515185373 UTC , thread_cap_info = ("ThreadId 178", 0, False)}
| | F | | | | | | | | | | | | |  
| | | | F | | | | | | | | | | |  
| | | | S | | | | | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | S | | | | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S | | | | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S | | | | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S | | | | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S | | | | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | S | | | | | | | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | | | S | | | | | | | | | | |  = 2 , total_length = 28} , self = 103 , parent = Nothing , duration = 0.729934937000
| | | | S | | | | | | | | | | |  , status = Success , start = 2025-09-04 08:24:34.974718269 UTC , finish
| | | | S | | | | | | | | | | |  = 2025-09-04 08:24:35.704653206 UTC , thread_cap_info = ("ThreadId 180",
| | | | S | | | | | | | | | | |  3, False)}
| | | | S | | | | | | | | | | |  
| F | | | | | | | | | | | | | |  
|   | | | | | | F | | | | | | |  
|   | | | | | F   | | | | | | |  
|   | | | | |     | F | | | | |  
| E | | | | |     |   | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| E | | | | |     |   | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | | | | |     |   | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | | | | |     |   | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | | |     |   | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | | |     |   | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| E | | | | |     |   | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| E | | | | |     |   | | | | |  = 4 , total_length = 26} , self = 117 , parent = Nothing , duration = 0.522809166000
| E | | | | |     |   | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:24:35.213476832
| E | | | | |     |   | | | | |  UTC , finish = 2025-09-04 08:24:35.736285998 UTC , thread_cap_info = ("ThreadId
| E | | | | |     |   | | | | |  193", 3, False)}
| E | | | | |     |   | | | | |  
| | | F | | |     |   | | | | |  
| | |   | | |     F   | | | | |  
| | | S | | |         | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | S | | |         | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | S | | |         | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | S | | |         | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S | | |         | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S | | |         | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | S | | |         | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | | S | | |         | | | | |  = 4 , total_length = 26} , self = 106 , parent = Nothing , duration = 0.445280913000
| | | S | | |         | | | | |  , status = Success , start = 2025-09-04 08:24:35.265731717 UTC , finish
| | | S | | |         | | | | |  = 2025-09-04 08:24:35.71101263 UTC , thread_cap_info = ("ThreadId 195",
| | | S | | |         | | | | |  3, False)}
| | | S | | |         | | | | |  
| | | | | | | E       | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | | E       | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | E       | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | E       | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E       | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E       | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | | E       | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | | | | | | E       | | | | |  = 2 , total_length = 28} , self = 105 , parent = Nothing , duration = 0.440613050000
| | | | | | | E       | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:24:35.270074421
| | | | | | | E       | | | | |  UTC , finish = 2025-09-04 08:24:35.710687471 UTC , thread_cap_info = ("ThreadId
| | | | | | | E       | | | | |  194", 3, False)}
| | | | | | | E       | | | | |  
| | | | | F | |       | | | | |  
| | | | |   F |       | | | | |  
| | | | |     |       | | F | |  
| | | | |     |       | F   | |  
F | | | |     |       |     | |  
  | F | |     |       |     | |  
  |   | |     |       |     F |  
  |   | |     |       |       F  
  |   | |     |       F          
  |   | S     |                  
  |   |       E                  
  |   S                          
  E                              
