last 1339 length 5405
last 893 length 3595
CNF 1339 vars 5405 clauses
CNF 893 vars 3595 clauses
last 801 length 3229
CNF 801 vars 3229 clauses
last 1583 length 6417
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4313, clauses: 16038
CNF 1583 vars 6417 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2627, clauses: 9447
last 4313 length 16038
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10466, clauses: 43839
last 2627 length 9447
CNF 4313 vars 16038 clauses
last 10466 length 43839
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13401, clauses: 56086
CNF 2627 vars 9447 clauses
last 13401 length 56086
CNF 10466 vars 43839 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2627, clauses: 9447, status: Satisfied, time: 0.12694843s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4313, clauses: 16038, status: Satisfied, time: 0.372218371s
CNF 13401 vars 56086 clauses
last 10610 length 47230
last 843 length 3401
last 923 length 3747
last 13138 length 55036
CNF 923 vars 3747 clauses
CNF 10610 vars 47230 clauses
CNF 843 vars 3401 clauses
CNF 13138 vars 55036 clauses
last 871 length 3445
last 773 length 3113
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2630, clauses: 9459
CNF 871 vars 3445 clauses
CNF 773 vars 3113 clauses
last 13972 length 60511
last 2630 length 9459
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10464, clauses: 43833
last 9864 length 41481
last 16118 length 68713
last 12077 length 51445
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2762, clauses: 9942
CNF 13972 vars 60511 clauses
last 10464 length 43833
CNF 2630 vars 9459 clauses
CNF 9864 vars 41481 clauses
last 2762 length 9942
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10762, clauses: 45085
CNF 16118 vars 68713 clauses
CNF 10464 vars 43833 clauses
CNF 12077 vars 51445 clauses
last 10762 length 45085
CNF 2762 vars 9942 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2630, clauses: 9459, status: Unsatisfied, time: 0.582944737s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2762, clauses: 9942, status: Unsatisfied, time: 0.417219752s
CNF 10762 vars 45085 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6338, clauses: 25766
last 6338 length 25766
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10762, clauses: 45085, status: Satisfied, time: 0.517187635s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6521, clauses: 26473
CNF 6338 vars 25766 clauses
**************************************************
summary
**************************************************
SRS with 2 strict rules and 5 weak rules on 3 letters       cleaner
SRS with 2 strict rules and 4 weak rules on 3 letters       strictify
SRS with 6 rules on 3 letters       DP
SRS with 16 strict rules and 6 weak rules on 6 letters       weights
SRS with 6 strict rules and 6 weak rules on 6 letters       EDG
SRS with 6 strict rules and 6 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 3 strict rules and 6 weak rules on 6 letters       weights
SRS with 1 strict rules and 6 weak rules on 4 letters       EDG
SRS with 1 strict rules and 6 weak rules on 4 letters       Matrix   { monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [c, a, b] -> [a, c, a] {- Input 0 -}
  [c, c, c] -> [b, b, b] {- Input 1 -}
  [a, c, a] ->= [b, a, a] {- Input 2 -}
  [a, a, a] ->= [a, a, a] {- Input 3 -}
  [a, a, b] ->= [c, b, a] {- Input 4 -}
  [b, a, c] ->= [c, b, c] {- Input 5 -}
  [b, a, c] ->= [b, a, b] {- Input 6 -}
reason
  cleaner
   property Termination
has value Just True
for SRS
  [c, a, b] -> [a, c, a] {- Input 0 -}
  [c, c, c] -> [b, b, b] {- Input 1 -}
  [a, c, a] ->= [b, a, a] {- Input 2 -}
  [a, a, b] ->= [c, b, a] {- Input 4 -}
  [b, a, c] ->= [c, b, c] {- Input 5 -}
  [b, a, c] ->= [b, a, b] {- Input 6 -}
reason
  strictify
   property Termination
has value Just True
for SRS
  [c, a, b] -> [a, c, a] {- Input 0 -}
  [c, c, c] -> [b, b, b] {- Input 1 -}
  [a, c, a] -> [b, a, a] {- Strictified (Input 2) -}
  [a, a, b] -> [c, b, a] {- Strictified (Input 4) -}
  [b, a, c] -> [c, b, c] {- Strictified (Input 5) -}
  [b, a, c] -> [b, a, b] {- Strictified (Input 6) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [c, a, b] ->= [a, c, a] {- DP Nontop (Input 0) -}
  [c, c, c] ->= [b, b, b] {- DP Nontop (Input 1) -}
  [a, c, a] ->= [b, a, a] {- DP Nontop (Strictified (Input 2)) -}
  [a, a, b] ->= [c, b, a] {- DP Nontop (Strictified (Input 4)) -}
  [b, a, c] ->= [c, b, c] {- DP Nontop (Strictified (Input 5)) -}
  [b, a, c] ->= [b, a, b] {- DP Nontop (Strictified (Input 6)) -}
  [a#, a, b] |-> [a#] {- DP (Top 2) (Strictified (Input 4)) -}
  [a#, a, b] |-> [b#, a] {- DP (Top 1) (Strictified (Input 4)) -}
  [a#, a, b] |-> [c#, b, a] {- DP (Top 0) (Strictified (Input 4)) -}
  [a#, c, a] |-> [a#, a] {- DP (Top 1) (Strictified (Input 2)) -}
  [a#, c, a] |-> [b#, a, a] {- DP (Top 0) (Strictified (Input 2)) -}
  [b#, a, c] |-> [a#, b] {- DP (Top 1) (Strictified (Input 6)) -}
  [b#, a, c] |-> [b#] {- DP (Top 2) (Strictified (Input 6)) -}
  [b#, a, c] |-> [b#, a, b] {- DP (Top 0) (Strictified (Input 6)) -}
  [b#, a, c] |-> [b#, c] {- DP (Top 1) (Strictified (Input 5)) -}
  [b#, a, c] |-> [c#, b, c] {- DP (Top 0) (Strictified (Input 5)) -}
  [c#, a, b] |-> [a#] {- DP (Top 2) (Input 0) -}
  [c#, a, b] |-> [a#, c, a] {- DP (Top 0) (Input 0) -}
  [c#, a, b] |-> [c#, a] {- DP (Top 1) (Input 0) -}
  [c#, c, c] |-> [b#] {- DP (Top 2) (Input 1) -}
  [c#, c, c] |-> [b#, b] {- DP (Top 1) (Input 1) -}
  [c#, c, c] |-> [b#, b, b] {- DP (Top 0) (Input 1) -}
reason
  (a, 1/1)
  (b, 1/1)
  (c, 1/1)
  (a#, 0/1)
  (b#, 0/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [c, a, b] ->= [a, c, a] {- DP Nontop (Input 0) -}
  [c, c, c] ->= [b, b, b] {- DP Nontop (Input 1) -}
  [a, c, a] ->= [b, a, a] {- DP Nontop (Strictified (Input 2)) -}
  [a, a, b] ->= [c, b, a] {- DP Nontop (Strictified (Input 4)) -}
  [b, a, c] ->= [c, b, c] {- DP Nontop (Strictified (Input 5)) -}
  [b, a, c] ->= [b, a, b] {- DP Nontop (Strictified (Input 6)) -}
  [a#, a, b] |-> [c#, b, a] {- DP (Top 0) (Strictified (Input 4)) -}
  [a#, c, a] |-> [b#, a, a] {- DP (Top 0) (Strictified (Input 2)) -}
  [b#, a, c] |-> [b#, a, b] {- DP (Top 0) (Strictified (Input 6)) -}
  [b#, a, c] |-> [c#, b, c] {- DP (Top 0) (Strictified (Input 5)) -}
  [c#, a, b] |-> [a#, c, a] {- DP (Top 0) (Input 0) -}
  [c#, c, c] |-> [b#, b, b] {- DP (Top 0) (Input 1) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, a, b] |-> [c#, b, a] {- DP (Top 0) (Strictified (Input 4)) -}
  [c#, a, b] |-> [a#, c, a] {- DP (Top 0) (Input 0) -}
  [a#, c, a] |-> [b#, a, a] {- DP (Top 0) (Strictified (Input 2)) -}
  [b#, a, c] |-> [b#, a, b] {- DP (Top 0) (Strictified (Input 6)) -}
  [b#, a, c] |-> [c#, b, c] {- DP (Top 0) (Strictified (Input 5)) -}
  [c#, c, c] |-> [b#, b, b] {- DP (Top 0) (Input 1) -}
  [c, a, b] ->= [a, c, a] {- DP Nontop (Input 0) -}
  [c, c, c] ->= [b, b, b] {- DP Nontop (Input 1) -}
  [a, c, a] ->= [b, a, a] {- DP Nontop (Strictified (Input 2)) -}
  [a, a, b] ->= [c, b, a] {- DP Nontop (Strictified (Input 4)) -}
  [b, a, c] ->= [c, b, c] {- DP Nontop (Strictified (Input 5)) -}
  [b, a, c] ->= [b, a, b] {- DP Nontop (Strictified (Input 6)) -}
reason
  ( a
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 3A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 3A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 12A 14A 15A - \
        | 12A 14A 15A - |
        | 12A 14A 15A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 13A 13A 14A - \
        | 13A 13A 14A - |
        | 13A 13A 14A - |
        \ -   -   -   - / )
  ( c#
  , Wk  / 14A 14A 15A - \
        | 14A 14A 15A - |
        | 14A 14A 15A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [c#, a, b] |-> [a#, c, a] {- DP (Top 0) (Input 0) -}
  [b#, a, c] |-> [b#, a, b] {- DP (Top 0) (Strictified (Input 6)) -}
  [b#, a, c] |-> [c#, b, c] {- DP (Top 0) (Strictified (Input 5)) -}
  [c, a, b] ->= [a, c, a] {- DP Nontop (Input 0) -}
  [c, c, c] ->= [b, b, b] {- DP Nontop (Input 1) -}
  [a, c, a] ->= [b, a, a] {- DP Nontop (Strictified (Input 2)) -}
  [a, a, b] ->= [c, b, a] {- DP Nontop (Strictified (Input 4)) -}
  [b, a, c] ->= [c, b, c] {- DP Nontop (Strictified (Input 5)) -}
  [b, a, c] ->= [b, a, b] {- DP Nontop (Strictified (Input 6)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 2/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [b#, a, c] |-> [b#, a, b] {- DP (Top 0) (Strictified (Input 6)) -}
  [c, a, b] ->= [a, c, a] {- DP Nontop (Input 0) -}
  [c, c, c] ->= [b, b, b] {- DP Nontop (Input 1) -}
  [a, c, a] ->= [b, a, a] {- DP Nontop (Strictified (Input 2)) -}
  [a, a, b] ->= [c, b, a] {- DP Nontop (Strictified (Input 4)) -}
  [b, a, c] ->= [c, b, c] {- DP Nontop (Strictified (Input 5)) -}
  [b, a, c] ->= [b, a, b] {- DP Nontop (Strictified (Input 6)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, a, c] |-> [b#, a, b] {- DP (Top 0) (Strictified (Input 6)) -}
  [c, a, b] ->= [a, c, a] {- DP Nontop (Input 0) -}
  [c, c, c] ->= [b, b, b] {- DP Nontop (Input 1) -}
  [a, c, a] ->= [b, a, a] {- DP Nontop (Strictified (Input 2)) -}
  [a, a, b] ->= [c, b, a] {- DP Nontop (Strictified (Input 4)) -}
  [b, a, c] ->= [c, b, c] {- DP Nontop (Strictified (Input 5)) -}
  [b, a, c] ->= [b, a, b] {- DP Nontop (Strictified (Input 6)) -}
reason
  ( a
  , Wk  / 0A  1A 2A \
        | -1A -  -  |
        \ -   -  0A / )
  ( b
  , Wk  / -1A -  0A \
        | -1A 0A -  |
        \ -   -  0A / )
  ( c
  , Wk  / 0A  -1A 1A \
        | -1A 0A  -  |
        \ -   -   0A / )
  ( b#
  , Wk  / - 2A 0A \
        | - -  -  |
        \ - -  0A / )
   property Termination
has value Just True
for SRS
  [c, a, b] ->= [a, c, a] {- DP Nontop (Input 0) -}
  [c, c, c] ->= [b, b, b] {- DP Nontop (Input 1) -}
  [a, c, a] ->= [b, a, a] {- DP Nontop (Strictified (Input 2)) -}
  [a, a, b] ->= [c, b, a] {- DP Nontop (Strictified (Input 4)) -}
  [b, a, c] ->= [c, b, c] {- DP Nontop (Strictified (Input 5)) -}
  [b, a, c] ->= [b, a, b] {- DP Nontop (Strictified (Input 6)) -}
reason
  EDG

**************************************************
skeleton: (2/5,3)\Cleaner(2/4,3)\Strictify(6,3)\Deepee(16/6,6)\Weight\EDG(6/6,6)\Matrix{\Arctic}{3}(3/6,6)\Weight\EDG(1/6,4)\Matrix{\ArcticBZ}{3}(0/6,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.600864741000
  min duration 0.043499951000
  total durat. 4.684722210000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 57
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 54
      , alphabet_size = 10
      , total_length = 456}
    , self = 83
    , parent = Nothing
    , duration = 1.395506020000
    , status = Fail
    , start = 2025-09-04 08:21:18.435636369 UTC
    , finish = 2025-09-04 08:21:19.831142389 UTC
    , thread_cap_info = ("ThreadId 103", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 54
      , alphabet_size = 12
      , total_length = 576}
    , self = 84
    , parent = Nothing
    , duration = 1.600864741000
    , status = Fail
    , start = 2025-09-04 08:21:18.230291465 UTC
    , finish = 2025-09-04 08:21:19.831156206 UTC
    , thread_cap_info = ("ThreadId 95", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 1.222491831000
  min duration 0.022122110000
  total durat. 3.702918605000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 57
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 54
      , alphabet_size = 10
      , total_length = 456}
    , self = 81
    , parent = Nothing
    , duration = 1.107981114000
    , status = Fail
    , start = 2025-09-04 08:21:18.449586015 UTC
    , finish = 2025-09-04 08:21:19.557567129 UTC
    , thread_cap_info = ("ThreadId 104", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 54
      , alphabet_size = 12
      , total_length = 576}
    , self = 80
    , parent = Nothing
    , duration = 1.222491831000
    , status = Fail
    , start = 2025-09-04 08:21:18.249587456 UTC
    , finish = 2025-09-04 08:21:19.472079287 UTC
    , thread_cap_info = ("ThreadId 96", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.567838854000
  min duration 0.500445775000
  total durat. 1.068284629000
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.753998460000
  min duration 0.561029145000
  total durat. 1.315027605000
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.196839746000
  min duration 1.196839746000
  total durat. 1.196839746000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 36}
    , self = 79
    , parent = Nothing
    , duration = 1.196839746000
    , status = Fail
    , start = 2025-09-04 08:21:18.157159945 UTC
    , finish = 2025-09-04 08:21:19.353999691 UTC
    , thread_cap_info = ("ThreadId 33", 3, False)}
**************************************************
F                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                      , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                      = True})" , input_size = Size { num_rules = 6 , num_strict_rules = 6 ,
F                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                      = 36} , self = 79 , parent = Nothing , duration = 1.196839746000 , status
F                      = Fail , start = 2025-09-04 08:21:18.157159945 UTC , finish = 2025-09-04
F                      08:21:19.353999691 UTC , thread_cap_info = ("ThreadId 33", 3, False)}
F                      
| F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| F                    = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size = 6 , total_length
| F                    = 72} , self = 56 , parent = Nothing , duration = 0.272789880000 , status
| F                    = Fail , start = 2025-09-04 08:21:18.171876601 UTC , finish = 2025-09-04
| F                    08:21:18.444666481 UTC , thread_cap_info = ("ThreadId 63", 1, False)}
| F                    
| | S                  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S                  = 12 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 6 ,
| | S                  alphabet_size = 6 , total_length = 72} , self = 66 , parent = Nothing ,
| | S                  duration = 0.567838854000 , status = Success , start = 2025-09-04 08:21:18.206739273
| | S                  UTC , finish = 2025-09-04 08:21:18.774578127 UTC , thread_cap_info = ("ThreadId
| | S                  85", 1, False)}
| | S                  
| | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| | | F                = 54 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F                = 432} , self = 76 , parent = Nothing , duration = 0.803707440000 , status
| | | F                = Fail , start = 2025-09-04 08:21:18.21008669 UTC , finish = 2025-09-04
| | | F                08:21:19.01379413 UTC , thread_cap_info = ("ThreadId 89", 3, False)}
| | | F                
| | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| | | | F              = 54 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F              = 432} , self = 74 , parent = Nothing , duration = 0.684883051000 , status
| | | | F              = Fail , start = 2025-09-04 08:21:18.230270742 UTC , finish = 2025-09-04
| | | | F              08:21:18.915153793 UTC , thread_cap_info = ("ThreadId 91", 3, False)}
| | | | F              
| | | | | S            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S            = 7 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| | | | | S            = 4 , total_length = 42} , self = 58 , parent = Nothing , duration = 0.500445775000
| | | | | S            , status = Success , start = 2025-09-04 08:21:18.230276673 UTC , finish
| | | | | S            = 2025-09-04 08:21:18.730722448 UTC , thread_cap_info = ("ThreadId 88",
| | | | | S            1, False)}
| | | | | S            
| | | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 72 , num_strict_rules
| | | | | | F          = 18 , num_top_rules = 18 , num_weak_rules = 54 , alphabet_size = 12 ,
| | | | | | F          total_length = 576} , self = 84 , parent = Nothing , duration = 1.600864741000
| | | | | | F          , status = Fail , start = 2025-09-04 08:21:18.230291465 UTC , finish =
| | | | | | F          2025-09-04 08:21:19.831156206 UTC , thread_cap_info = ("ThreadId 95", 0,
| | | | | | F          False)}
| | | | | | F          
| | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 72 , num_strict_rules
| | | | | | | F        = 18 , num_top_rules = 18 , num_weak_rules = 54 , alphabet_size = 12 ,
| | | | | | | F        total_length = 576} , self = 80 , parent = Nothing , duration = 1.222491831000
| | | | | | | F        , status = Fail , start = 2025-09-04 08:21:18.249587456 UTC , finish =
| | | | | | | F        2025-09-04 08:21:19.472079287 UTC , thread_cap_info = ("ThreadId 96", 0,
| | | | | | | F        False)}
| | | | | | | F        
| | | | | | | | E      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | E      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | E      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | E      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | E      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | E      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | | | E      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| | | | | | | | E      = 4 , total_length = 42} , self = 61 , parent = Nothing , duration = 0.475513274000
| | | | | | | | E      , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:18.263364881
| | | | | | | | E      UTC , finish = 2025-09-04 08:21:18.738878155 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E      98", 1, False)}
| | | | | | | | E      
| | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 57 , num_strict_rules
| | | | | | | | | F    = 3 , num_top_rules = 3 , num_weak_rules = 54 , alphabet_size = 10 , total_length
| | | | | | | | | F    = 456} , self = 83 , parent = Nothing , duration = 1.395506020000 , status
| | | | | | | | | F    = Fail , start = 2025-09-04 08:21:18.435636369 UTC , finish = 2025-09-04
| | | | | | | | | F    08:21:19.831142389 UTC , thread_cap_info = ("ThreadId 103", 0, False)}
| | | | | | | | | F    
| F | | | | | | | |    
| E | | | | | | | |    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | | | | | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | | | | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | | | | | | | |    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | | | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | | | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| E | | | | | | | |    , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size
| E | | | | | | | |    = 6 , total_length = 72} , self = 68 , parent = Nothing , duration = 0.367375005000
| E | | | | | | | |    , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:18.444693576
| E | | | | | | | |    UTC , finish = 2025-09-04 08:21:18.812068581 UTC , thread_cap_info = ("ThreadId
| E | | | | | | | |    105", 1, False)}
| E | | | | | | | |    
| | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 57 , num_strict_rules
| | | | | | | | | | F  = 3 , num_top_rules = 3 , num_weak_rules = 54 , alphabet_size = 10 , total_length
| | | | | | | | | | F  = 456} , self = 81 , parent = Nothing , duration = 1.107981114000 , status
| | | | | | | | | | F  = Fail , start = 2025-09-04 08:21:18.449586015 UTC , finish = 2025-09-04
| | | | | | | | | | F  08:21:19.557567129 UTC , thread_cap_info = ("ThreadId 104", 0, False)}
| | | | | | | | | | F  
| | | | | S | | | | |  
| | | | |   | | E | |  
| | | | | F | |   | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F | |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | F | |   | |  = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | F | |   | |  = 42} , self = 75 , parent = Nothing , duration = 0.186463236000 , status
| | | | | F | |   | |  = Fail , start = 2025-09-04 08:21:18.739177682 UTC , finish = 2025-09-04
| | | | | F | |   | |  08:21:18.925640918 UTC , thread_cap_info = ("ThreadId 118", 1, False)}
| | | | | F | |   | |  
| | | | | | | | F | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F | |  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | | F | |  = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | F | |  = 42} , self = 73 , parent = Nothing , duration = 0.122039017000 , status
| | | | | | | | F | |  = Fail , start = 2025-09-04 08:21:18.749478797 UTC , finish = 2025-09-04
| | | | | | | | F | |  08:21:18.871517814 UTC , thread_cap_info = ("ThreadId 117", 1, False)}
| | | | | | | | F | |  
| | S | | | | | | | |  
| E   | | | | | | | |  
| F   | | | | | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F   | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   | | | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| F   | | | | | | | |  = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| F   | | | | | | | |  = 42} , self = 77 , parent = Nothing , duration = 0.446315161000 , status
| F   | | | | | | | |  = Fail , start = 2025-09-04 08:21:18.823840334 UTC , finish = 2025-09-04
| F   | | | | | | | |  08:21:19.270155495 UTC , thread_cap_info = ("ThreadId 127", 1, False)}
| F   | | | | | | | |  
| | F | | | | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | F | | | | | | | |  = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | F | | | | | | | |  = 42} , self = 78 , parent = Nothing , duration = 0.456812809000 , status
| | F | | | | | | | |  = Fail , start = 2025-09-04 08:21:18.823843054 UTC , finish = 2025-09-04
| | F | | | | | | | |  08:21:19.280655863 UTC , thread_cap_info = ("ThreadId 128", 1, False)}
| | F | | | | | | | |  
| | | | | | | | F | |  
| | | | | | | | F | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | F | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | F | |  = 7 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| | | | | | | | F | |  = 4 , total_length = 42} , self = 82 , parent = Nothing , duration = 0.753998460000
| | | | | | | | F | |  , status = Fail , start = 2025-09-04 08:21:18.892682896 UTC , finish =
| | | | | | | | F | |  2025-09-04 08:21:19.646681356 UTC , thread_cap_info = ("ThreadId 129",
| | | | | | | | F | |  1, False)}
| | | | | | | | F | |  
| | | | F | | | | | |  
| | | |   F | | | | |  
| | | F     | | | | |  
| F |       | | | | |  
| F |       | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F |       | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F |       | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F |       | | | | |  = 7 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| F |       | | | | |  = 4 , total_length = 42} , self = 85 , parent = Nothing , duration = 0.561029145000
| F |       | | | | |  , status = Fail , start = 2025-09-04 08:21:19.270179652 UTC , finish =
| F |       | | | | |  2025-09-04 08:21:19.831208797 UTC , thread_cap_info = ("ThreadId 135",
| F |       | | | | |  1, False)}
| F |       | | | | |  
| | F       | | | | |  
| | S       | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S       | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S       | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S       | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S       | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S       | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | S       | | | | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| | S       | | | | |  = 4 , total_length = 42} , self = 86 , parent = Nothing , duration = 0.770263041000
| | S       | | | | |  , status = Success , start = 2025-09-04 08:21:19.280676169 UTC , finish
| | S       | | | | |  = 2025-09-04 08:21:20.05093921 UTC , thread_cap_info = ("ThreadId 136",
| | S       | | | | |  1, False)}
| | S       | | | | |  
F | |       | | | | |  
  | |       | F | | |  
  | |       |   | | F  
  | |       |   F |    
  | |       |     F    
  | |       F          
  F |                  
E   |                  Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
E   |                  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E   |                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E   |                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E   |                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E   |                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
E   |                  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
E   |                  = 4 , total_length = 42} , self = 88 , parent = Nothing , duration = 0.190238352000
E   |                  , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:19.891565479
E   |                  UTC , finish = 2025-09-04 08:21:20.081803831 UTC , thread_cap_info = ("ThreadId
E   |                  151", 1, False)}
E   |                  
|   S                  
E                      
