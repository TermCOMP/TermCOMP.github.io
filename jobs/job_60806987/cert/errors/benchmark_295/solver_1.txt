[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 275 length 1259
last 290 length 1303
last 460 length 2113
CNF 460 vars 2113 clauses
last 245 length 1121
CNF 275 vars 1259 clauses
CNF 290 vars 1303 clauses
last 277 length 1248
CNF 245 vars 1121 clauses
CNF 277 vars 1248 clauses
last 368 length 1555
CNF 368 vars 1555 clauses
last 427 length 1837
last 689 length 3066
last 1189 length 5202
last 1722 length 8229
CNF 427 vars 1837 clauses
last 807 length 3678
last 1489 length 6449
CNF 689 vars 3066 clauses
last 2568 length 11239
CNF 1189 vars 5202 clauses
last 689 length 3066
last 1724 length 8137
last 2394 length 10303
last 807 length 3678
CNF 1722 vars 8229 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9684, clauses: 40219
CNF 807 vars 3678 clauses
CNF 1489 vars 6449 clauses
CNF 2568 vars 11239 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1474, clauses: 5711
CNF 689 vars 3066 clauses
CNF 1724 vars 8137 clauses
CNF 2394 vars 10303 clauses
CNF 807 vars 3678 clauses
last 9684 length 40219
last 1474 length 5711
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2488, clauses: 9740
CNF 1474 vars 5711 clauses
CNF 9684 vars 40219 clauses
last 2488 length 9740
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1474, clauses: 5711, status: Unsatisfied, time: 1.783740329s
CNF 2488 vars 9740 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16574, clauses: 68848
last 16574 length 68848
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9684, clauses: 40219, status: Satisfied, time: 2.076322486s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2488, clauses: 9740, status: Satisfied, time: 0.357808888s
CNF 16574 vars 68848 clauses
last 238 length 1044
last 348 length 1499
**************************************************
CNF 348 vars 1499 clauses
CNF 238 vars 1044 clauses
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 8 weak rules on 4 letters       weights
SRS with 1 strict rules and 7 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 7 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, a] -> [] {- Input 0 -}
  [] ->= [a] {- Input 1 -}
  [a] ->= [a, a, b, a] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [[a, a], [a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [[a, a], [a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [[b, a], [a, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [[b, a], [a, b]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[a, a], [a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, a], [a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a], [a, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, a], [a, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 1/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [[a, a], [a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [[a, a], [a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [[b, a], [a, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, a], [a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, a], [a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a], [a, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, a], [a, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 0 0 \
                | 0 1 2 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 1 1 \
                | 0 4 1 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[a, a]] ->= [[a, a], [a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [[a, a], [a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [[b, a], [a, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, a], [a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, a], [a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a], [a, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, a], [a, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  no strict rules

**************************************************
skeleton: (1/2,2)\TileAllAll{2}(4/8,4)\Weight(1/7,4)\Matrix{\Natural}{3}(0/7,3)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 2.761205818000
  min duration 0.052589397000
  total durat. 14.010724455000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 43}
    , self = 92
    , parent = Nothing
    , duration = 2.469999058000
    , status = Fail
    , start = 2025-09-04 08:24:36.223457608 UTC
    , finish = 2025-09-04 08:24:38.693456666 UTC
    , thread_cap_info = ("ThreadId 161", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 10
      , alphabet_size = 4
      , total_length = 74}
    , self = 93
    , parent = Nothing
    , duration = 2.475150767000
    , status = Fail
    , start = 2025-09-04 08:24:36.2183058 UTC
    , finish = 2025-09-04 08:24:38.693456567 UTC
    , thread_cap_info = ("ThreadId 148", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 29
      , num_strict_rules = 22
      , num_top_rules = 22
      , num_weak_rules = 7
      , alphabet_size = 6
      , total_length = 140}
    , self = 94
    , parent = Nothing
    , duration = 2.598737312000
    , status = Fail
    , start = 2025-09-04 08:24:36.136188984 UTC
    , finish = 2025-09-04 08:24:38.734926296 UTC
    , thread_cap_info = ("ThreadId 88", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 43}
    , self = 97
    , parent = Nothing
    , duration = 2.681192157000
    , status = Fail
    , start = 2025-09-04 08:24:36.246295759 UTC
    , finish = 2025-09-04 08:24:38.927487916 UTC
    , thread_cap_info = ("ThreadId 166", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 29
      , num_strict_rules = 22
      , num_top_rules = 22
      , num_weak_rules = 7
      , alphabet_size = 6
      , total_length = 140}
    , self = 98
    , parent = Nothing
    , duration = 2.761205818000
    , status = Fail
    , start = 2025-09-04 08:24:36.17205105 UTC
    , finish = 2025-09-04 08:24:38.933256868 UTC
    , thread_cap_info = ("ThreadId 91", 2, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 4.053610939000
  min duration 0.118019605000
  total durat. 4.171630544000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 97
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 96
      , alphabet_size = 13
      , total_length = 744}
    , self = 99
    , parent = Nothing
    , duration = 4.053610939000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:24:36.37145551 UTC
    , finish = 2025-09-04 08:24:40.425066449 UTC
    , thread_cap_info = ("ThreadId 176", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 2.637805854000
  min duration 0.012192288000
  total durat. 10.331053572000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 43}
    , self = 89
    , parent = Nothing
    , duration = 1.286223862000
    , status = Fail
    , start = 2025-09-04 08:24:36.225593412 UTC
    , finish = 2025-09-04 08:24:37.511817274 UTC
    , thread_cap_info = ("ThreadId 162", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 10
      , alphabet_size = 4
      , total_length = 74}
    , self = 90
    , parent = Nothing
    , duration = 1.350253037000
    , status = Fail
    , start = 2025-09-04 08:24:36.225594362 UTC
    , finish = 2025-09-04 08:24:37.575847399 UTC
    , thread_cap_info = ("ThreadId 150", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 29
      , num_strict_rules = 22
      , num_top_rules = 22
      , num_weak_rules = 7
      , alphabet_size = 6
      , total_length = 140}
    , self = 91
    , parent = Nothing
    , duration = 2.351883232000
    , status = Fail
    , start = 2025-09-04 08:24:36.136191082 UTC
    , finish = 2025-09-04 08:24:38.488074314 UTC
    , thread_cap_info = ("ThreadId 89", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 43}
    , self = 96
    , parent = Nothing
    , duration = 2.606435626000
    , status = Fail
    , start = 2025-09-04 08:24:36.246300329 UTC
    , finish = 2025-09-04 08:24:38.852735955 UTC
    , thread_cap_info = ("ThreadId 168", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 29
      , num_strict_rules = 22
      , num_top_rules = 22
      , num_weak_rules = 7
      , alphabet_size = 6
      , total_length = 140}
    , self = 95
    , parent = Nothing
    , duration = 2.637805854000
    , status = Fail
    , start = 2025-09-04 08:24:36.191231688 UTC
    , finish = 2025-09-04 08:24:38.829037542 UTC
    , thread_cap_info = ("ThreadId 92", 2, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 4.080288671000
  min duration 0.118185191000
  total durat. 4.198473862000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 97
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 96
      , alphabet_size = 13
      , total_length = 744}
    , self = 100
    , parent = Nothing
    , duration = 4.080288671000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:24:36.388086194 UTC
    , finish = 2025-09-04 08:24:40.468374865 UTC
    , thread_cap_info = ("ThreadId 178", 1, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 4.476845126000
  min duration 4.476845126000
  total durat. 4.476845126000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 3
      , alphabet_size = 2
      , total_length = 23}
    , self = 102
    , parent = Nothing
    , duration = 4.476845126000
    , status = Success
    , start = 2025-09-04 08:24:36.220579056 UTC
    , finish = 2025-09-04 08:24:40.697424182 UTC
    , thread_cap_info = ("ThreadId 158", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.354987973000
  min duration 3.354987973000
  total durat. 3.354987973000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 43}
    , self = 111
    , parent = Nothing
    , duration = 3.354987973000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:24:37.530322561 UTC
    , finish = 2025-09-04 08:24:40.885310534 UTC
    , thread_cap_info = ("ThreadId 186", 1, False)}
Success : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.992979471000
  min duration 1.992979471000
  total durat. 1.992979471000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 7
      , alphabet_size = 4
      , total_length = 43}
    , self = 104
    , parent = Nothing
    , duration = 1.992979471000
    , status = Success
    , start = 2025-09-04 08:24:38.745281884 UTC
    , finish = 2025-09-04 08:24:40.738261355 UTC
    , thread_cap_info = ("ThreadId 192", 1, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.514645839000
  min duration 3.514645839000
  total durat. 3.514645839000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 3
      , alphabet_size = 2
      , total_length = 23}
    , self = 101
    , parent = Nothing
    , duration = 3.514645839000
    , status = Fail
    , start = 2025-09-04 08:24:37.09027099 UTC
    , finish = 2025-09-04 08:24:40.604916829 UTC
    , thread_cap_info = ("ThreadId 183", 1, False)}
**************************************************
E                              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E                              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E                              = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
E                              = 7 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E                              = 37} , self = 81 , parent = Nothing , duration = 0.118019605000 , status
E                              = Except "AsyncCancelled" , start = 2025-09-04 08:24:36.128249252 UTC ,
E                              finish = 2025-09-04 08:24:36.246268857 UTC , thread_cap_info = ("ThreadId
E                              81", 0, False)}
E                              
| E                            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| E                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E                            = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| E                            = 7 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| E                            = 37} , self = 82 , parent = Nothing , duration = 0.118185191000 , status
| E                            = Except "AsyncCancelled" , start = 2025-09-04 08:24:36.128251516 UTC ,
| E                            finish = 2025-09-04 08:24:36.246436707 UTC , thread_cap_info = ("ThreadId
| E                            83", 0, False)}
| E                            
| | F                          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                          = False\n , verbose = False}" , input_size = Size { num_rules = 29 , num_strict_rules
| | F                          = 22 , num_top_rules = 22 , num_weak_rules = 7 , alphabet_size = 6 , total_length
| | F                          = 140} , self = 94 , parent = Nothing , duration = 2.598737312000 , status
| | F                          = Fail , start = 2025-09-04 08:24:36.136188984 UTC , finish = 2025-09-04
| | F                          08:24:38.734926296 UTC , thread_cap_info = ("ThreadId 88", 2, False)}
| | F                          
| | | F                        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                        = False\n , verbose = False}" , input_size = Size { num_rules = 29 , num_strict_rules
| | | F                        = 22 , num_top_rules = 22 , num_weak_rules = 7 , alphabet_size = 6 , total_length
| | | F                        = 140} , self = 91 , parent = Nothing , duration = 2.351883232000 , status
| | | F                        = Fail , start = 2025-09-04 08:24:36.136191082 UTC , finish = 2025-09-04
| | | F                        08:24:38.488074314 UTC , thread_cap_info = ("ThreadId 89", 2, False)}
| | | F                        
| | | | F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 29 , num_strict_rules
| | | | F                      = 22 , num_top_rules = 22 , num_weak_rules = 7 , alphabet_size = 6 , total_length
| | | | F                      = 140} , self = 98 , parent = Nothing , duration = 2.761205818000 , status
| | | | F                      = Fail , start = 2025-09-04 08:24:36.17205105 UTC , finish = 2025-09-04
| | | | F                      08:24:38.933256868 UTC , thread_cap_info = ("ThreadId 91", 2, False)}
| | | | F                      
| | | | | F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 29 , num_strict_rules
| | | | | F                    = 22 , num_top_rules = 22 , num_weak_rules = 7 , alphabet_size = 6 , total_length
| | | | | F                    = 140} , self = 95 , parent = Nothing , duration = 2.637805854000 , status
| | | | | F                    = Fail , start = 2025-09-04 08:24:36.191231688 UTC , finish = 2025-09-04
| | | | | F                    08:24:38.829037542 UTC , thread_cap_info = ("ThreadId 92", 2, False)}
| | | | | F                    
| | | | | | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | F                  = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 2 , total_length
| | | | | | F                  = 23} , self = 88 , parent = Nothing , duration = 0.892877701000 , status
| | | | | | F                  = Fail , start = 2025-09-04 08:24:36.192076009 UTC , finish = 2025-09-04
| | | | | | F                  08:24:37.08495371 UTC , thread_cap_info = ("ThreadId 137", 1, False)}
| | | | | | F                  
| | | | | | | F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | F                , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | | | | F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | | | | F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | | | | F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | | | | F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | | | | F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | F                = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 1 ,
| | | | | | | F                num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 2 , total_length
| | | | | | | F                = 10} , self = 87 , parent = Nothing , duration = 0.342104576000 , status
| | | | | | | F                = Fail , start = 2025-09-04 08:24:36.206442465 UTC , finish = 2025-09-04
| | | | | | | F                08:24:36.548547041 UTC , thread_cap_info = ("ThreadId 123", 0, False)}
| | | | | | | F                
| | | | | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | F              = 2 , num_top_rules = 0 , num_weak_rules = 10 , alphabet_size = 4 , total_length
| | | | | | | | F              = 74} , self = 93 , parent = Nothing , duration = 2.475150767000 , status
| | | | | | | | F              = Fail , start = 2025-09-04 08:24:36.2183058 UTC , finish = 2025-09-04
| | | | | | | | F              08:24:38.693456567 UTC , thread_cap_info = ("ThreadId 148", 3, False)}
| | | | | | | | F              
| | | | | | | | | S            Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | | | | S            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | S            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | S            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | S            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | S            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | | | | S            , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | | | | | | | | S            = 2 , total_length = 23} , self = 102 , parent = Nothing , duration = 4.476845126000
| | | | | | | | | S            , status = Success , start = 2025-09-04 08:24:36.220579056 UTC , finish
| | | | | | | | | S            = 2025-09-04 08:24:40.697424182 UTC , thread_cap_info = ("ThreadId 158",
| | | | | | | | | S            1, False)}
| | | | | | | | | S            
| | | | | | | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | | F          = 1 , num_top_rules = 0 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | | | | | | | F          = 43} , self = 92 , parent = Nothing , duration = 2.469999058000 , status
| | | | | | | | | | F          = Fail , start = 2025-09-04 08:24:36.223457608 UTC , finish = 2025-09-04
| | | | | | | | | | F          08:24:38.693456666 UTC , thread_cap_info = ("ThreadId 161", 1, False)}
| | | | | | | | | | F          
| | | | | | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | | | F        = 1 , num_top_rules = 0 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | | | | | | | | F        = 43} , self = 89 , parent = Nothing , duration = 1.286223862000 , status
| | | | | | | | | | | F        = Fail , start = 2025-09-04 08:24:36.225593412 UTC , finish = 2025-09-04
| | | | | | | | | | | F        08:24:37.511817274 UTC , thread_cap_info = ("ThreadId 162", 1, False)}
| | | | | | | | | | | F        
| | | | | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | | | | | F      = 2 , num_top_rules = 0 , num_weak_rules = 10 , alphabet_size = 4 , total_length
| | | | | | | | | | | | F      = 74} , self = 90 , parent = Nothing , duration = 1.350253037000 , status
| | | | | | | | | | | | F      = Fail , start = 2025-09-04 08:24:36.225594362 UTC , finish = 2025-09-04
| | | | | | | | | | | | F      08:24:37.575847399 UTC , thread_cap_info = ("ThreadId 150", 3, False)}
| | | | | | | | | | | | F      
E | | | | | | | | | | | |      
F | | | | | | | | | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | | | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | | | | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
F | | | | | | | | | | | |      = 1 , num_top_rules = 0 , num_weak_rules = 7 , alphabet_size = 4 , total_length
F | | | | | | | | | | | |      = 43} , self = 97 , parent = Nothing , duration = 2.681192157000 , status
F | | | | | | | | | | | |      = Fail , start = 2025-09-04 08:24:36.246295759 UTC , finish = 2025-09-04
F | | | | | | | | | | | |      08:24:38.927487916 UTC , thread_cap_info = ("ThreadId 166", 1, False)}
F | | | | | | | | | | | |      
| | | | | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | | | | | F    = 1 , num_top_rules = 0 , num_weak_rules = 7 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | F    = 43} , self = 96 , parent = Nothing , duration = 2.606435626000 , status
| | | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:24:36.246300329 UTC , finish = 2025-09-04
| | | | | | | | | | | | | F    08:24:38.852735955 UTC , thread_cap_info = ("ThreadId 168", 1, False)}
| | | | | | | | | | | | | F    
| E | | | | | | | | | | | |    
| E | | | | | | | | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E | | | | | | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E | | | | | | | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 97 , num_strict_rules
| E | | | | | | | | | | | |    = 1 , num_top_rules = 0 , num_weak_rules = 96 , alphabet_size = 13 , total_length
| E | | | | | | | | | | | |    = 744} , self = 99 , parent = Nothing , duration = 4.053610939000 , status
| E | | | | | | | | | | | |    = Except "AsyncCancelled" , start = 2025-09-04 08:24:36.37145551 UTC ,
| E | | | | | | | | | | | |    finish = 2025-09-04 08:24:40.425066449 UTC , thread_cap_info = ("ThreadId
| E | | | | | | | | | | | |    176", 1, False)}
| E | | | | | | | | | | | |    
| | | | | | | | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 97 , num_strict_rules
| | | | | | | | | | | | | | E  = 1 , num_top_rules = 0 , num_weak_rules = 96 , alphabet_size = 13 , total_length
| | | | | | | | | | | | | | E  = 744} , self = 100 , parent = Nothing , duration = 4.080288671000 , status
| | | | | | | | | | | | | | E  = Except "AsyncCancelled" , start = 2025-09-04 08:24:36.388086194 UTC ,
| | | | | | | | | | | | | | E  finish = 2025-09-04 08:24:40.468374865 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | E  178", 1, False)}
| | | | | | | | | | | | | | E  
| | | | | | | F | | | | | | |  
| | | | | | F   | | | | | | |  
| | | | | | F   | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | F   | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | F   | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | F   | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | F   | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | F   | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | F   | | | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | | | | | F   | | | | | | |  = 2 , total_length = 23} , self = 101 , parent = Nothing , duration = 3.514645839000
| | | | | | F   | | | | | | |  , status = Fail , start = 2025-09-04 08:24:37.09027099 UTC , finish = 2025-09-04
| | | | | | F   | | | | | | |  08:24:40.604916829 UTC , thread_cap_info = ("ThreadId 183", 1, False)}
| | | | | | F   | | | | | | |  
| | | | | | |   | | | F | | |  
| | | | | | | E | | |   | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | | E | | |   | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E | | |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E | | |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E | | |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E | | |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | | | | E | | |   | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 7 , alphabet_size
| | | | | | | E | | |   | | |  = 4 , total_length = 43} , self = 111 , parent = Nothing , duration = 3.354987973000
| | | | | | | E | | |   | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:24:37.530322561
| | | | | | | E | | |   | | |  UTC , finish = 2025-09-04 08:24:40.885310534 UTC , thread_cap_info = ("ThreadId
| | | | | | | E | | |   | | |  186", 1, False)}
| | | | | | | E | | |   | | |  
| | | | | | | | | | |   F | |  
| | | F | | | | | | |     | |  
| | |   | | | | F | |     | |  
| | |   | | | |   | F     | |  
| | F   | | | |   |       | |  
| | S   | | | |   |       | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | S   | | | |   |       | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | S   | | | |   |       | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | S   | | | |   |       | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S   | | | |   |       | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S   | | | |   |       | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | S   | | | |   |       | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 7 , alphabet_size
| | S   | | | |   |       | |  = 4 , total_length = 43} , self = 104 , parent = Nothing , duration = 1.992979471000
| | S   | | | |   |       | |  , status = Success , start = 2025-09-04 08:24:38.745281884 UTC , finish
| | S   | | | |   |       | |  = 2025-09-04 08:24:40.738261355 UTC , thread_cap_info = ("ThreadId 192",
| | S   | | | |   |       | |  1, False)}
| | S   | | | |   |       | |  
| | |   | F | |   |       | |  
| | |   |   | |   |       F |  
F | |   |   | |   |         |  
  | |   F   | |   |         |  
  E |       | |   |         |  
    |       | |   |         E  
    |       F |   |            
E   |         |   |            Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E   |         |   |            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E   |         |   |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E   |         |   |            , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E   |         |   |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E   |         |   |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
E   |         |   |            , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
E   |         |   |            = 2 , total_length = 23} , self = 106 , parent = Nothing , duration = 0.138482520000
E   |         |   |            , status = Except "AsyncCancelled" , start = 2025-09-04 08:24:40.628879454
E   |         |   |            UTC , finish = 2025-09-04 08:24:40.767361974 UTC , thread_cap_info = ("ThreadId
E   |         |   |            199", 1, False)}
E   |         |   |            
|   |         |   S            
|   S         |                
E             |                
              E                
