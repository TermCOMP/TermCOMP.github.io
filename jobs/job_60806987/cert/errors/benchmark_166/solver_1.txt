[Info] pool sizes (success) 4 seen 4 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 12 length 33
[Info] pool sizes (success) 4 seen 4 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
CNF 12 vars 33 clauses
last 12 length 33
CNF 12 vars 33 clauses
last 197 length 762
last 168 length 666
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 197, clauses: 663
last 197 length 663
CNF 168 vars 666 clauses
CNF 197 vars 663 clauses
CNF 197 vars 762 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 81, clauses: 235
last 81 length 235
CNF 81 vars 235 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 197, clauses: 663, status: Unsatisfied, time: 0.009119241s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 81, clauses: 235, status: Unsatisfied, time: 0.000286812s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 84, clauses: 252
last 84 length 252
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1142, clauses: 3966
CNF 84 vars 252 clauses
last 223 length 854
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 313, clauses: 1062
last 201 length 785
last 1142 length 3966
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3030, clauses: 12215
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 84, clauses: 252, status: Unsatisfied, time: 0.641294704s
CNF 223 vars 854 clauses
last 313 length 1062
CNF 201 vars 785 clauses
last 3030 length 12215
CNF 1142 vars 3966 clauses
last 7563 length 32629
last 7861 length 32075
CNF 313 vars 1062 clauses
last 7563 length 32629
CNF 3030 vars 12215 clauses
last 7861 length 32075
last 7563 length 32629
last 7861 length 32075
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1142, clauses: 3966, status: Unsatisfied, time: 2.528171494s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1396, clauses: 4851
CNF 7563 vars 32629 clauses
CNF 7861 vars 32075 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8697, clauses: 35152
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 313, clauses: 1062, status: Unsatisfied, time: 2.130374258s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3030, clauses: 12215, status: Unsatisfied, time: 1.670387672s
last 1396 length 4851
last 8697 length 35152
CNF 1396 vars 4851 clauses
CNF 8697 vars 35152 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1396, clauses: 4851, status: Satisfied, time: 0.36515583s
**************************************************
summary
**************************************************
SRS with 2 strict rules and 4 weak rules on 5 letters       weights
SRS with 1 strict rules and 4 weak rules on 5 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 4 weak rules on 4 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [n, s] -> [s] {- Input 0 -}
  [o, s] -> [s] {- Input 1 -}
  [t] ->= [t, c, n] {- Input 2 -}
  [c, n] ->= [n, c] {- Input 3 -}
  [c, o] ->= [o, c] {- Input 4 -}
  [c, o] ->= [o] {- Input 5 -}
reason
  (s, 0/1)
  (t, 0/1)
  (n, 0/1)
  (o, 1/1)
  (c, 0/1)
   property Termination
has value Just True
for SRS
  [n, s] -> [s] {- Input 0 -}
  [t] ->= [t, c, n] {- Input 2 -}
  [c, n] ->= [n, c] {- Input 3 -}
  [c, o] ->= [o, c] {- Input 4 -}
  [c, o] ->= [o] {- Input 5 -}
reason
  ( s
  , St (Corner  / 1 7 7 \
                | 0 7 6 |
                \ 0 0 1 /) )
  ( t
  , St (Corner  / 1 4 0 \
                | 0 0 1 |
                \ 0 0 1 /) )
  ( n
  , St (Corner  / 1 4 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( o
  , St (Corner  / 1 0 6 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( c
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [t] ->= [t, c, n] {- Input 2 -}
  [c, n] ->= [n, c] {- Input 3 -}
  [c, o] ->= [o, c] {- Input 4 -}
  [c, o] ->= [o] {- Input 5 -}
reason
  no strict rules

**************************************************
skeleton: (2/4,5)\Weight(1/4,5)\Matrix{\Natural}{3}(0/4,4)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 2.402920896000
  min duration 0.000461817000
  total durat. 2.418516394000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 18}
    , self = 78
    , parent = Nothing
    , duration = 2.402920896000
    , status = Fail
    , start = 2025-09-04 07:31:48.12383053 UTC
    , finish = 2025-09-04 07:31:50.526751426 UTC
    , thread_cap_info = ("ThreadId 133", 3, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.003780033000
  min duration 3.003780033000
  total durat. 3.003780033000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 74
      , num_strict_rules = 10
      , num_top_rules = 0
      , num_weak_rules = 64
      , alphabet_size = 24
      , total_length = 414}
    , self = 80
    , parent = Nothing
    , duration = 3.003780033000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:48.081656285 UTC
    , finish = 2025-09-04 07:31:51.085436318 UTC
    , thread_cap_info = ("ThreadId 131", 0, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.848293078000
  min duration 3.773364331000
  total durat. 7.621657409000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 74
      , num_strict_rules = 10
      , num_top_rules = 0
      , num_weak_rules = 64
      , alphabet_size = 24
      , total_length = 414}
    , self = 81
    , parent = Nothing
    , duration = 3.773364331000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:48.266392561 UTC
    , finish = 2025-09-04 07:31:52.039756892 UTC
    , thread_cap_info = ("ThreadId 158", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 74
      , num_strict_rules = 10
      , num_top_rules = 0
      , num_weak_rules = 64
      , alphabet_size = 24
      , total_length = 414}
    , self = 83
    , parent = Nothing
    , duration = 3.848293078000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:48.197443886 UTC
    , finish = 2025-09-04 07:31:52.045736964 UTC
    , thread_cap_info = ("ThreadId 152", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 2.437034383000
  min duration 0.002140671000
  total durat. 2.449960316000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 18}
    , self = 79
    , parent = Nothing
    , duration = 2.437034383000
    , status = Fail
    , start = 2025-09-04 07:31:48.124738093 UTC
    , finish = 2025-09-04 07:31:50.561772476 UTC
    , thread_cap_info = ("ThreadId 134", 3, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.939585008000
  min duration 3.939585008000
  total durat. 3.939585008000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 74
      , num_strict_rules = 10
      , num_top_rules = 0
      , num_weak_rules = 64
      , alphabet_size = 24
      , total_length = 414}
    , self = 84
    , parent = Nothing
    , duration = 3.939585008000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:48.123837652 UTC
    , finish = 2025-09-04 07:31:52.06342266 UTC
    , thread_cap_info = ("ThreadId 132", 0, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.854866664000
  min duration 3.820952177000
  total durat. 7.675818841000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 74
      , num_strict_rules = 10
      , num_top_rules = 0
      , num_weak_rules = 64
      , alphabet_size = 24
      , total_length = 414}
    , self = 85
    , parent = Nothing
    , duration = 3.820952177000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:48.282307624 UTC
    , finish = 2025-09-04 07:31:52.103259801 UTC
    , thread_cap_info = ("ThreadId 160", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 74
      , num_strict_rules = 10
      , num_top_rules = 0
      , num_weak_rules = 64
      , alphabet_size = 24
      , total_length = 414}
    , self = 86
    , parent = Nothing
    , duration = 3.854866664000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:48.248403735 UTC
    , finish = 2025-09-04 07:31:52.103270399 UTC
    , thread_cap_info = ("ThreadId 154", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.981537732000
  min duration 1.981537732000
  total durat. 1.981537732000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 18}
    , self = 91
    , parent = Nothing
    , duration = 1.981537732000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:50.584982595 UTC
    , finish = 2025-09-04 07:31:52.566520327 UTC
    , thread_cap_info = ("ThreadId 166", 3, False)}
Success : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.789361669000
  min duration 1.789361669000
  total durat. 1.789361669000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 18}
    , self = 89
    , parent = Nothing
    , duration = 1.789361669000
    , status = Success
    , start = 2025-09-04 07:31:50.6448181 UTC
    , finish = 2025-09-04 07:31:52.434179769 UTC
    , thread_cap_info = ("ThreadId 168", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 4.222048345000
  min duration 0.016110604000
  total durat. 4.238158949000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 15}
    , self = 88
    , parent = Nothing
    , duration = 4.222048345000
    , status = Fail
    , start = 2025-09-04 07:31:48.04309128 UTC
    , finish = 2025-09-04 07:31:52.265139625 UTC
    , thread_cap_info = ("ThreadId 105", 2, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.782487120000
  min duration 1.782487120000
  total durat. 1.782487120000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 0
      , alphabet_size = 1
      , total_length = 2}
    , self = 77
    , parent = Nothing
    , duration = 1.782487120000
    , status = Fail
    , start = 2025-09-04 07:31:48.02205929 UTC
    , finish = 2025-09-04 07:31:49.80454641 UTC
    , thread_cap_info = ("ThreadId 104", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 4.031229052000
  min duration 0.010455908000
  total durat. 4.041684960000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 15}
    , self = 82
    , parent = Nothing
    , duration = 4.031229052000
    , status = Fail
    , start = 2025-09-04 07:31:48.014469977 UTC
    , finish = 2025-09-04 07:31:52.045699029 UTC
    , thread_cap_info = ("ThreadId 103", 2, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 4.078943122000
  min duration 4.078943122000
  total durat. 4.078943122000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 0
      , alphabet_size = 1
      , total_length = 2}
    , self = 87
    , parent = Nothing
    , duration = 4.078943122000
    , status = Fail
    , start = 2025-09-04 07:31:48.123853017 UTC
    , finish = 2025-09-04 07:31:52.202796139 UTC
    , thread_cap_info = ("ThreadId 121", 2, False)}
**************************************************
E                        Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                        , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                        = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                        , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                        = True}" , input_size = Size { num_rules = 4 , num_strict_rules = 4 , num_top_rules
E                        = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length = 15} , self
E                        = 60 , parent = Nothing , duration = 0.181820323000 , status = Except "AsyncCancelled"
E                        , start = 2025-09-04 07:31:47.996950447 UTC , finish = 2025-09-04 07:31:48.17877077
E                        UTC , thread_cap_info = ("ThreadId 20", 1, False)}
E                        
| F                      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F                      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F                      = 4 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| F                      = 4 , total_length = 15} , self = 82 , parent = Nothing , duration = 4.031229052000
| F                      , status = Fail , start = 2025-09-04 07:31:48.014469977 UTC , finish =
| F                      2025-09-04 07:31:52.045699029 UTC , thread_cap_info = ("ThreadId 103",
| F                      2, False)}
| F                      
| | F                    Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F                    = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F                    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F                    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F                    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F                    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 1
| | F                    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 0 , alphabet_size
| | F                    = 1 , total_length = 2} , self = 77 , parent = Nothing , duration = 1.782487120000
| | F                    , status = Fail , start = 2025-09-04 07:31:48.02205929 UTC , finish = 2025-09-04
| | F                    07:31:49.80454641 UTC , thread_cap_info = ("ThreadId 104", 2, False)}
| | F                    
| | | F                  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F                  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | F                  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 3 , alphabet_size
| | | F                  = 4 , total_length = 15} , self = 88 , parent = Nothing , duration = 4.222048345000
| | | F                  , status = Fail , start = 2025-09-04 07:31:48.04309128 UTC , finish = 2025-09-04
| | | F                  07:31:52.265139625 UTC , thread_cap_info = ("ThreadId 105", 2, False)}
| | | F                  
| | | | S                Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | S                epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | S                = Size { num_rules = 125 , num_strict_rules = 25 , num_top_rules = 0 ,
| | | | S                num_weak_rules = 100 , alphabet_size = 25 , total_length = 700} , self
| | | | S                = 59 , parent = Nothing , duration = 0.108769543000 , status = Success
| | | | S                , start = 2025-09-04 07:31:48.043095073 UTC , finish = 2025-09-04 07:31:48.151864616
| | | | S                UTC , thread_cap_info = ("ThreadId 109", 3, False)}
| | | | S                
| | | | | E              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E              = False\n , verbose = False}" , input_size = Size { num_rules = 74 , num_strict_rules
| | | | | E              = 10 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 24 , total_length
| | | | | E              = 414} , self = 80 , parent = Nothing , duration = 3.003780033000 , status
| | | | | E              = Except "<<timeout>>" , start = 2025-09-04 07:31:48.081656285 UTC , finish
| | | | | E              = 2025-09-04 07:31:51.085436318 UTC , thread_cap_info = ("ThreadId 131",
| | | | | E              0, False)}
| | | | | E              
| | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | F            = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | | | | F            = 18} , self = 78 , parent = Nothing , duration = 2.402920896000 , status
| | | | | | F            = Fail , start = 2025-09-04 07:31:48.12383053 UTC , finish = 2025-09-04
| | | | | | F            07:31:50.526751426 UTC , thread_cap_info = ("ThreadId 133", 3, False)}
| | | | | | F            
| | | | | | | E          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | E          = False\n , verbose = False}" , input_size = Size { num_rules = 74 , num_strict_rules
| | | | | | | E          = 10 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 24 , total_length
| | | | | | | E          = 414} , self = 84 , parent = Nothing , duration = 3.939585008000 , status
| | | | | | | E          = Except "<<timeout>>" , start = 2025-09-04 07:31:48.123837652 UTC , finish
| | | | | | | E          = 2025-09-04 07:31:52.06342266 UTC , thread_cap_info = ("ThreadId 132",
| | | | | | | E          0, False)}
| | | | | | | E          
| | | | | | | | F        Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | F        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | F        = 1 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 0 , alphabet_size
| | | | | | | | F        = 1 , total_length = 2} , self = 87 , parent = Nothing , duration = 4.078943122000
| | | | | | | | F        , status = Fail , start = 2025-09-04 07:31:48.123853017 UTC , finish =
| | | | | | | | F        2025-09-04 07:31:52.202796139 UTC , thread_cap_info = ("ThreadId 121",
| | | | | | | | F        2, False)}
| | | | | | | | F        
| | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | | F      = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | | | | | | | F      = 18} , self = 79 , parent = Nothing , duration = 2.437034383000 , status
| | | | | | | | | F      = Fail , start = 2025-09-04 07:31:48.124738093 UTC , finish = 2025-09-04
| | | | | | | | | F      07:31:50.561772476 UTC , thread_cap_info = ("ThreadId 134", 3, False)}
| | | | | | | | | F      
| | | | S | | | | |      
E | | |   | | | | |      
E | | |   | | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E | | |   | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E | | |   | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 74 , num_strict_rules
E | | |   | | | | |      = 10 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 24 , total_length
E | | |   | | | | |      = 414} , self = 83 , parent = Nothing , duration = 3.848293078000 , status
E | | |   | | | | |      = Except "AsyncCancelled" , start = 2025-09-04 07:31:48.197443886 UTC ,
E | | |   | | | | |      finish = 2025-09-04 07:31:52.045736964 UTC , thread_cap_info = ("ThreadId
E | | |   | | | | |      152", 3, False)}
E | | |   | | | | |      
| | | | E | | | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 74 , num_strict_rules
| | | | E | | | | |      = 10 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 24 , total_length
| | | | E | | | | |      = 414} , self = 86 , parent = Nothing , duration = 3.854866664000 , status
| | | | E | | | | |      = Except "AsyncCancelled" , start = 2025-09-04 07:31:48.248403735 UTC ,
| | | | E | | | | |      finish = 2025-09-04 07:31:52.103270399 UTC , thread_cap_info = ("ThreadId
| | | | E | | | | |      154", 3, False)}
| | | | E | | | | |      
| | | | | | | | | | E    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 74 , num_strict_rules
| | | | | | | | | | E    = 10 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 24 , total_length
| | | | | | | | | | E    = 414} , self = 81 , parent = Nothing , duration = 3.773364331000 , status
| | | | | | | | | | E    = Except "AsyncCancelled" , start = 2025-09-04 07:31:48.266392561 UTC ,
| | | | | | | | | | E    finish = 2025-09-04 07:31:52.039756892 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | E    158", 2, False)}
| | | | | | | | | | E    
| | | | | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 74 , num_strict_rules
| | | | | | | | | | | E  = 10 , num_top_rules = 0 , num_weak_rules = 64 , alphabet_size = 24 , total_length
| | | | | | | | | | | E  = 414} , self = 85 , parent = Nothing , duration = 3.820952177000 , status
| | | | | | | | | | | E  = Except "AsyncCancelled" , start = 2025-09-04 07:31:48.282307624 UTC ,
| | | | | | | | | | | E  finish = 2025-09-04 07:31:52.103259801 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | E  160", 2, False)}
| | | | | | | | | | | E  
| | F | | | | | | | | |  
| |   | | | F | | | | |  
| |   | | |   | | F | |  
| | E | | |   | |   | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | E | | |   | |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | |   | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | |   | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | |   | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | |   | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | E | | |   | |   | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | E | | |   | |   | |  = 5 , total_length = 18} , self = 91 , parent = Nothing , duration = 1.981537732000
| | E | | |   | |   | |  , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:50.584982595
| | E | | |   | |   | |  UTC , finish = 2025-09-04 07:31:52.566520327 UTC , thread_cap_info = ("ThreadId
| | E | | |   | |   | |  166", 3, False)}
| | E | | |   | |   | |  
| | | | | | S | |   | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | S | |   | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | S | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | S | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | S | |   | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | | | | | S | |   | |  = 5 , total_length = 18} , self = 89 , parent = Nothing , duration = 1.789361669000
| | | | | | S | |   | |  , status = Success , start = 2025-09-04 07:31:50.6448181 UTC , finish =
| | | | | | S | |   | |  2025-09-04 07:31:52.434179769 UTC , thread_cap_info = ("ThreadId 168",
| | | | | | S | |   | |  3, False)}
| | | | | | S | |   | |  
| | | | | E | | |   | |  
| | | | |   | | |   E |  
| F | | |   | | |     |  
E   | | |   | | |     |  
    | | |   | E |     |  
    | | |   |   |     E  
    | | E   |   |        
    | |     |   F        
    | F     |            
    |       S            
    E                    
