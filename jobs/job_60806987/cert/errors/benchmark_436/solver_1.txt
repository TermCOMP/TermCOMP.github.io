[Info] pool sizes (success) 3 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 3 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 40 length 129
last 66 length 237
last 66 length 237
last 40 length 129
last 812 length 3043
last 1756 length 6899
last 1756 length 6899
last 812 length 3043
last 373 length 1565
last 244 length 973
last 8646 length 38364
last 7836 length 39116
CNF 40 vars 129 clauses
last 8646 length 38364
last 8646 length 38364
CNF 66 vars 237 clauses
last 7836 length 39116
CNF 66 vars 237 clauses
last 7836 length 39116
CNF 40 vars 129 clauses
CNF 812 vars 3043 clauses
CNF 1756 vars 6899 clauses
CNF 1756 vars 6899 clauses
CNF 812 vars 3043 clauses
CNF 373 vars 1565 clauses
CNF 244 vars 973 clauses
CNF 8646 vars 38364 clauses
CNF 8646 vars 38364 clauses
CNF 7836 vars 39116 clauses
CNF 7836 vars 39116 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1765, clauses: 6455
last 1765 length 6455
CNF 1765 vars 6455 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12386, clauses: 50941
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1765, clauses: 6455, status: Unsatisfied, time: 0.058438026s
last 12386 length 50941
CNF 12386 vars 50941 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12386, clauses: 50941, status: Satisfied, time: 0.276484145s
last 172 length 695
last 256 length 1107
CNF 172 vars 695 clauses
CNF 256 vars 1107 clauses
**************************************************
summary
**************************************************
SRS with 3 strict rules and 2 weak rules on 4 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 2 weak rules on 4 letters       split
2 sub-proofs
  1 SRS with 2 strict rules and 2 weak rules on 4 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
  SRS with 32 strict rules and 32 weak rules on 16 letters       weights
  SRS with 0 strict rules and 32 weak rules on 13 letters       no strict rules

  2 SRS with 0 strict rules and 2 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, c, a] -> [d, d] {- Input 0 -}
  [b] -> [c, c] {- Input 1 -}
  [a, a] -> [a, c, b, a] {- Input 2 -}
  [a, b] ->= [d] {- Input 3 -}
  [d] ->= [a, b] {- Input 4 -}
reason
  ( d
  , St  / 0A 1A  - \
        | -  -1A - |
        \ 0A 0A  - / )
  ( a
  , St  / 0A 0A 1A  \
        | -  -  -1A |
        \ 0A 1A -   / )
  ( b
  , St  / 0A 0A  - \
        | -  -1A - |
        \ -  0A  - / )
  ( c
  , St  / 0A - -  \
        | -  - 1A |
        \ -  - -  / )
   property Termination
has value Just True
for SRS
  [b] -> [c, c] {- Input 1 -}
  [a, a] -> [a, c, b, a] {- Input 2 -}
  [a, b] ->= [d] {- Input 3 -}
  [d] ->= [a, b] {- Input 4 -}
reason
  split
   property Termination
has value Just True
for SRS
  [b] -> [c, c] {- Input 1 -}
  [a, a] -> [a, c, b, a] {- Input 2 -}
  [a, b] ->= [d] {- Input 3 -}
  [d] ->= [a, b] {- Input 4 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[b, b], [b, b]] -> [[b, c], [c, c], [c, b]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, b], [b, c]] -> [[b, c], [c, c], [c, c]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, b], [b, a]] -> [[b, c], [c, c], [c, a]] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, b], [b, d]] -> [[b, c], [c, c], [c, d]] {- Semlab 0 (Concon 3 (Input 1)) -}
  [[c, b], [b, b]] -> [[c, c], [c, c], [c, b]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[c, b], [b, c]] -> [[c, c], [c, c], [c, c]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[c, b], [b, a]] -> [[c, c], [c, c], [c, a]] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, b], [b, d]] -> [[c, c], [c, c], [c, d]] {- Semlab 1 (Concon 3 (Input 1)) -}
  [[a, b], [b, b]] -> [[a, c], [c, c], [c, b]] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[a, b], [b, c]] -> [[a, c], [c, c], [c, c]] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[a, b], [b, a]] -> [[a, c], [c, c], [c, a]] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, b], [b, d]] -> [[a, c], [c, c], [c, d]] {- Semlab 2 (Concon 3 (Input 1)) -}
  [[d, b], [b, b]] -> [[d, c], [c, c], [c, b]] {- Semlab 3 (Concon 0 (Input 1)) -}
  [[d, b], [b, c]] -> [[d, c], [c, c], [c, c]] {- Semlab 3 (Concon 1 (Input 1)) -}
  [[d, b], [b, a]] -> [[d, c], [c, c], [c, a]] {- Semlab 3 (Concon 2 (Input 1)) -}
  [[d, b], [b, d]] -> [[d, c], [c, c], [c, d]] {- Semlab 3 (Concon 3 (Input 1)) -}
  [[b, a], [a, a], [a, b]] -> [ [b, a] , [a, c] , [c, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, a], [a, a], [a, c]] -> [ [b, a] , [a, c] , [c, b] , [b, a] , [a, c] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a], [a, a], [a, a]] -> [ [b, a] , [a, c] , [c, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, a], [a, a], [a, d]] -> [ [b, a] , [a, c] , [c, b] , [b, a] , [a, d] ] {- Semlab 0 (Concon 3 (Input 2)) -}
  [[c, a], [a, a], [a, b]] -> [ [c, a] , [a, c] , [c, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[c, a], [a, a], [a, c]] -> [ [c, a] , [a, c] , [c, b] , [b, a] , [a, c] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[c, a], [a, a], [a, a]] -> [ [c, a] , [a, c] , [c, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[c, a], [a, a], [a, d]] -> [ [c, a] , [a, c] , [c, b] , [b, a] , [a, d] ] {- Semlab 1 (Concon 3 (Input 2)) -}
  [[a, a], [a, a], [a, b]] -> [ [a, a] , [a, c] , [c, b] , [b, a] , [a, b] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[a, a], [a, a], [a, c]] -> [ [a, a] , [a, c] , [c, b] , [b, a] , [a, c] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[a, a], [a, a], [a, a]] -> [ [a, a] , [a, c] , [c, b] , [b, a] , [a, a] ] {- Semlab 2 (Concon 2 (Input 2)) -}
  [[a, a], [a, a], [a, d]] -> [ [a, a] , [a, c] , [c, b] , [b, a] , [a, d] ] {- Semlab 2 (Concon 3 (Input 2)) -}
  [[d, a], [a, a], [a, b]] -> [ [d, a] , [a, c] , [c, b] , [b, a] , [a, b] ] {- Semlab 3 (Concon 0 (Input 2)) -}
  [[d, a], [a, a], [a, c]] -> [ [d, a] , [a, c] , [c, b] , [b, a] , [a, c] ] {- Semlab 3 (Concon 1 (Input 2)) -}
  [[d, a], [a, a], [a, a]] -> [ [d, a] , [a, c] , [c, b] , [b, a] , [a, a] ] {- Semlab 3 (Concon 2 (Input 2)) -}
  [[d, a], [a, a], [a, d]] -> [ [d, a] , [a, c] , [c, b] , [b, a] , [a, d] ] {- Semlab 3 (Concon 3 (Input 2)) -}
  [[b, a], [a, b], [b, b]] ->= [ [b, d] , [d, b] ] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[b, a], [a, b], [b, c]] ->= [ [b, d] , [d, c] ] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[b, a], [a, b], [b, a]] ->= [ [b, d] , [d, a] ] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[b, a], [a, b], [b, d]] ->= [ [b, d] , [d, d] ] {- Semlab 0 (Concon 3 (Input 3)) -}
  [[c, a], [a, b], [b, b]] ->= [ [c, d] , [d, b] ] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[c, a], [a, b], [b, c]] ->= [ [c, d] , [d, c] ] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[c, a], [a, b], [b, a]] ->= [ [c, d] , [d, a] ] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[c, a], [a, b], [b, d]] ->= [ [c, d] , [d, d] ] {- Semlab 1 (Concon 3 (Input 3)) -}
  [[a, a], [a, b], [b, b]] ->= [ [a, d] , [d, b] ] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[a, a], [a, b], [b, c]] ->= [ [a, d] , [d, c] ] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[a, a], [a, b], [b, a]] ->= [ [a, d] , [d, a] ] {- Semlab 2 (Concon 2 (Input 3)) -}
  [[a, a], [a, b], [b, d]] ->= [ [a, d] , [d, d] ] {- Semlab 2 (Concon 3 (Input 3)) -}
  [[d, a], [a, b], [b, b]] ->= [ [d, d] , [d, b] ] {- Semlab 3 (Concon 0 (Input 3)) -}
  [[d, a], [a, b], [b, c]] ->= [ [d, d] , [d, c] ] {- Semlab 3 (Concon 1 (Input 3)) -}
  [[d, a], [a, b], [b, a]] ->= [ [d, d] , [d, a] ] {- Semlab 3 (Concon 2 (Input 3)) -}
  [[d, a], [a, b], [b, d]] ->= [ [d, d] , [d, d] ] {- Semlab 3 (Concon 3 (Input 3)) -}
  [[b, d], [d, b]] ->= [ [b, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 0 (Input 4)) -}
  [[b, d], [d, c]] ->= [ [b, a] , [a, b] , [b, c] ] {- Semlab 0 (Concon 1 (Input 4)) -}
  [[b, d], [d, a]] ->= [ [b, a] , [a, b] , [b, a] ] {- Semlab 0 (Concon 2 (Input 4)) -}
  [[b, d], [d, d]] ->= [ [b, a] , [a, b] , [b, d] ] {- Semlab 0 (Concon 3 (Input 4)) -}
  [[c, d], [d, b]] ->= [ [c, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 0 (Input 4)) -}
  [[c, d], [d, c]] ->= [ [c, a] , [a, b] , [b, c] ] {- Semlab 1 (Concon 1 (Input 4)) -}
  [[c, d], [d, a]] ->= [ [c, a] , [a, b] , [b, a] ] {- Semlab 1 (Concon 2 (Input 4)) -}
  [[c, d], [d, d]] ->= [ [c, a] , [a, b] , [b, d] ] {- Semlab 1 (Concon 3 (Input 4)) -}
  [[a, d], [d, b]] ->= [ [a, a] , [a, b] , [b, b] ] {- Semlab 2 (Concon 0 (Input 4)) -}
  [[a, d], [d, c]] ->= [ [a, a] , [a, b] , [b, c] ] {- Semlab 2 (Concon 1 (Input 4)) -}
  [[a, d], [d, a]] ->= [ [a, a] , [a, b] , [b, a] ] {- Semlab 2 (Concon 2 (Input 4)) -}
  [[a, d], [d, d]] ->= [ [a, a] , [a, b] , [b, d] ] {- Semlab 2 (Concon 3 (Input 4)) -}
  [[d, d], [d, b]] ->= [ [d, a] , [a, b] , [b, b] ] {- Semlab 3 (Concon 0 (Input 4)) -}
  [[d, d], [d, c]] ->= [ [d, a] , [a, b] , [b, c] ] {- Semlab 3 (Concon 1 (Input 4)) -}
  [[d, d], [d, a]] ->= [ [d, a] , [a, b] , [b, a] ] {- Semlab 3 (Concon 2 (Input 4)) -}
  [[d, d], [d, d]] ->= [ [d, a] , [a, b] , [b, d] ] {- Semlab 3 (Concon 3 (Input 4)) -}
reason
  ([d, d], 2/1)
  ([d, a], 2/1)
  ([d, b], 2/1)
  ([d, c], 1/1)
  ([a, d], 3/1)
  ([a, a], 3/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, d], 2/1)
  ([b, a], 2/1)
  ([b, b], 2/1)
  ([b, c], 1/1)
  ([c, d], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, b]] ->= [ [b, d] , [d, b] ] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[b, a], [a, b], [b, c]] ->= [ [b, d] , [d, c] ] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[b, a], [a, b], [b, a]] ->= [ [b, d] , [d, a] ] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[b, a], [a, b], [b, d]] ->= [ [b, d] , [d, d] ] {- Semlab 0 (Concon 3 (Input 3)) -}
  [[c, a], [a, b], [b, b]] ->= [ [c, d] , [d, b] ] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[c, a], [a, b], [b, c]] ->= [ [c, d] , [d, c] ] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[c, a], [a, b], [b, a]] ->= [ [c, d] , [d, a] ] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[c, a], [a, b], [b, d]] ->= [ [c, d] , [d, d] ] {- Semlab 1 (Concon 3 (Input 3)) -}
  [[a, a], [a, b], [b, b]] ->= [ [a, d] , [d, b] ] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[a, a], [a, b], [b, c]] ->= [ [a, d] , [d, c] ] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[a, a], [a, b], [b, a]] ->= [ [a, d] , [d, a] ] {- Semlab 2 (Concon 2 (Input 3)) -}
  [[a, a], [a, b], [b, d]] ->= [ [a, d] , [d, d] ] {- Semlab 2 (Concon 3 (Input 3)) -}
  [[d, a], [a, b], [b, b]] ->= [ [d, d] , [d, b] ] {- Semlab 3 (Concon 0 (Input 3)) -}
  [[d, a], [a, b], [b, c]] ->= [ [d, d] , [d, c] ] {- Semlab 3 (Concon 1 (Input 3)) -}
  [[d, a], [a, b], [b, a]] ->= [ [d, d] , [d, a] ] {- Semlab 3 (Concon 2 (Input 3)) -}
  [[d, a], [a, b], [b, d]] ->= [ [d, d] , [d, d] ] {- Semlab 3 (Concon 3 (Input 3)) -}
  [[b, d], [d, b]] ->= [ [b, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 0 (Input 4)) -}
  [[b, d], [d, c]] ->= [ [b, a] , [a, b] , [b, c] ] {- Semlab 0 (Concon 1 (Input 4)) -}
  [[b, d], [d, a]] ->= [ [b, a] , [a, b] , [b, a] ] {- Semlab 0 (Concon 2 (Input 4)) -}
  [[b, d], [d, d]] ->= [ [b, a] , [a, b] , [b, d] ] {- Semlab 0 (Concon 3 (Input 4)) -}
  [[c, d], [d, b]] ->= [ [c, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 0 (Input 4)) -}
  [[c, d], [d, c]] ->= [ [c, a] , [a, b] , [b, c] ] {- Semlab 1 (Concon 1 (Input 4)) -}
  [[c, d], [d, a]] ->= [ [c, a] , [a, b] , [b, a] ] {- Semlab 1 (Concon 2 (Input 4)) -}
  [[c, d], [d, d]] ->= [ [c, a] , [a, b] , [b, d] ] {- Semlab 1 (Concon 3 (Input 4)) -}
  [[a, d], [d, b]] ->= [ [a, a] , [a, b] , [b, b] ] {- Semlab 2 (Concon 0 (Input 4)) -}
  [[a, d], [d, c]] ->= [ [a, a] , [a, b] , [b, c] ] {- Semlab 2 (Concon 1 (Input 4)) -}
  [[a, d], [d, a]] ->= [ [a, a] , [a, b] , [b, a] ] {- Semlab 2 (Concon 2 (Input 4)) -}
  [[a, d], [d, d]] ->= [ [a, a] , [a, b] , [b, d] ] {- Semlab 2 (Concon 3 (Input 4)) -}
  [[d, d], [d, b]] ->= [ [d, a] , [a, b] , [b, b] ] {- Semlab 3 (Concon 0 (Input 4)) -}
  [[d, d], [d, c]] ->= [ [d, a] , [a, b] , [b, c] ] {- Semlab 3 (Concon 1 (Input 4)) -}
  [[d, d], [d, a]] ->= [ [d, a] , [a, b] , [b, a] ] {- Semlab 3 (Concon 2 (Input 4)) -}
  [[d, d], [d, d]] ->= [ [d, a] , [a, b] , [b, d] ] {- Semlab 3 (Concon 3 (Input 4)) -}
reason
  no strict rules

property Termination
has value Just True
for SRS
  [a, b] ->= [d] {- Input 3 -}
  [d] ->= [a, b] {- Input 4 -}
reason
  no strict rules

**************************************************
skeleton: (3/2,4)\Matrix{\ArcticBZ}{3}(2/2,4)\Split[(2/2,4)\TileAllAll{2}(32/32,16)\Weight(0/32,13)[],(0/2,3)[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 3.005229259000
  min duration 0.079390891000
  total durat. 16.515517523000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 6}
    , self = 80
    , parent = Nothing
    , duration = 2.435693227000
    , status = Fail
    , start = 2025-09-04 08:29:38.51218573 UTC
    , finish = 2025-09-04 08:29:40.947878957 UTC
    , thread_cap_info = ("ThreadId 86", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 6}
    , self = 82
    , parent = Nothing
    , duration = 2.551731925000
    , status = Fail
    , start = 2025-09-04 08:29:38.507780438 UTC
    , finish = 2025-09-04 08:29:41.059512363 UTC
    , thread_cap_info = ("ThreadId 84", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 80}
    , self = 84
    , parent = Nothing
    , duration = 2.568071526000
    , status = Fail
    , start = 2025-09-04 08:29:38.527825665 UTC
    , finish = 2025-09-04 08:29:41.095897191 UTC
    , thread_cap_info = ("ThreadId 109", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 28
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 16
      , total_length = 356}
    , self = 91
    , parent = Nothing
    , duration = 2.936361538000
    , status = Fail
    , start = 2025-09-04 08:29:39.112265151 UTC
    , finish = 2025-09-04 08:29:42.048626689 UTC
    , thread_cap_info = ("ThreadId 153", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 28
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 16
      , total_length = 356}
    , self = 92
    , parent = Nothing
    , duration = 2.939039157000
    , status = Fail
    , start = 2025-09-04 08:29:39.169576728 UTC
    , finish = 2025-09-04 08:29:42.108615885 UTC
    , thread_cap_info = ("ThreadId 158", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 20}
    , self = 90
    , parent = Nothing
    , duration = 3.005229259000
    , status = Fail
    , start = 2025-09-04 08:29:38.888210608 UTC
    , finish = 2025-09-04 08:29:41.893439867 UTC
    , thread_cap_info = ("ThreadId 142", 3, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.241194451000
  min duration 3.216887914000
  total durat. 6.458082365000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 80}
    , self = 85
    , parent = Nothing
    , duration = 3.216887914000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 08:29:38.592167274 UTC
    , finish = 2025-09-04 08:29:41.809055188 UTC
    , thread_cap_info = ("ThreadId 132", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 28
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 16
      , total_length = 356}
    , self = 86
    , parent = Nothing
    , duration = 3.241194451000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 08:29:38.567873154 UTC
    , finish = 2025-09-04 08:29:41.809067605 UTC
    , thread_cap_info = ("ThreadId 125", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 3.037890636000
  min duration 0.138639534000
  total durat. 13.520656228000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 6}
    , self = 79
    , parent = Nothing
    , duration = 2.321227109000
    , status = Fail
    , start = 2025-09-04 08:29:38.507799133 UTC
    , finish = 2025-09-04 08:29:40.829026242 UTC
    , thread_cap_info = ("ThreadId 85", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 80}
    , self = 83
    , parent = Nothing
    , duration = 2.532644978000
    , status = Fail
    , start = 2025-09-04 08:29:38.556027526 UTC
    , finish = 2025-09-04 08:29:41.088672504 UTC
    , thread_cap_info = ("ThreadId 110", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 6}
    , self = 81
    , parent = Nothing
    , duration = 2.539076995000
    , status = Fail
    , start = 2025-09-04 08:29:38.512447902 UTC
    , finish = 2025-09-04 08:29:41.051524897 UTC
    , thread_cap_info = ("ThreadId 87", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 20}
    , self = 89
    , parent = Nothing
    , duration = 2.951176976000
    , status = Fail
    , start = 2025-09-04 08:29:38.937009466 UTC
    , finish = 2025-09-04 08:29:41.888186442 UTC
    , thread_cap_info = ("ThreadId 143", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 28
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 16
      , total_length = 356}
    , self = 93
    , parent = Nothing
    , duration = 3.037890636000
    , status = Fail
    , start = 2025-09-04 08:29:39.128747171 UTC
    , finish = 2025-09-04 08:29:42.166637807 UTC
    , thread_cap_info = ("ThreadId 155", 3, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.240378518000
  min duration 3.183283578000
  total durat. 6.423662096000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 4
      , num_top_rules = 4
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 80}
    , self = 87
    , parent = Nothing
    , duration = 3.183283578000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 08:29:38.629974297 UTC
    , finish = 2025-09-04 08:29:41.813257875 UTC
    , thread_cap_info = ("ThreadId 133", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 28
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 16
      , total_length = 356}
    , self = 88
    , parent = Nothing
    , duration = 3.240378518000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 08:29:38.592145676 UTC
    , finish = 2025-09-04 08:29:41.832524194 UTC
    , thread_cap_info = ("ThreadId 126", 1, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.022062437000
  min duration 0.085005820000
  total durat. 3.107068257000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 28
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 16
      , total_length = 356}
    , self = 94
    , parent = Nothing
    , duration = 3.022062437000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:29:39.187804163 UTC
    , finish = 2025-09-04 08:29:42.2098666 UTC
    , thread_cap_info = ("ThreadId 160", 3, False)}
**************************************************
E                                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                                    = True}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules
E                                    = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 6} , self
E                                    = 66 , parent = Nothing , duration = 0.388518866000 , status = Except "AsyncCancelled"
E                                    , start = 2025-09-04 08:29:38.499579119 UTC , finish = 2025-09-04 08:29:38.888097985
E                                    UTC , thread_cap_info = ("ThreadId 20", 1, False)}
E                                    
| F                                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                                  = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
| F                                  = 2 , num_top_rules = 2 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| F                                  = 6} , self = 82 , parent = Nothing , duration = 2.551731925000 , status
| F                                  = Fail , start = 2025-09-04 08:29:38.507780438 UTC , finish = 2025-09-04
| F                                  08:29:41.059512363 UTC , thread_cap_info = ("ThreadId 84", 3, False)}
| F                                  
| | F                                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                                = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
| | F                                = 2 , num_top_rules = 2 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | F                                = 6} , self = 79 , parent = Nothing , duration = 2.321227109000 , status
| | F                                = Fail , start = 2025-09-04 08:29:38.507799133 UTC , finish = 2025-09-04
| | F                                08:29:40.829026242 UTC , thread_cap_info = ("ThreadId 85", 3, False)}
| | F                                
| | | F                              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                              = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
| | | F                              = 2 , num_top_rules = 2 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | F                              = 6} , self = 80 , parent = Nothing , duration = 2.435693227000 , status
| | | F                              = Fail , start = 2025-09-04 08:29:38.51218573 UTC , finish = 2025-09-04
| | | F                              08:29:40.947878957 UTC , thread_cap_info = ("ThreadId 86", 3, False)}
| | | F                              
| | | | F                            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                            = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
| | | | F                            = 2 , num_top_rules = 2 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | | F                            = 6} , self = 81 , parent = Nothing , duration = 2.539076995000 , status
| | | | F                            = Fail , start = 2025-09-04 08:29:38.512447902 UTC , finish = 2025-09-04
| | | | F                            08:29:41.051524897 UTC , thread_cap_info = ("ThreadId 87", 3, False)}
| | | | F                            
| | | | | F                          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | F                          , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | F                          = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | | F                          Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | | F                          8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | | F                          = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | | F                          ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | | F                          1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | F                          = True})" , input_size = Size { num_rules = 5 , num_strict_rules = 3 ,
| | | | | F                          num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | F                          = 20} , self = 77 , parent = Nothing , duration = 0.732224430000 , status
| | | | | F                          = Fail , start = 2025-09-04 08:29:38.52099476 UTC , finish = 2025-09-04
| | | | | F                          08:29:39.25321919 UTC , thread_cap_info = ("ThreadId 104", 1, False)}
| | | | | F                          
| | | | | | F                        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F                        = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | F                        = 4 , num_top_rules = 4 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | | F                        = 80} , self = 84 , parent = Nothing , duration = 2.568071526000 , status
| | | | | | F                        = Fail , start = 2025-09-04 08:29:38.527825665 UTC , finish = 2025-09-04
| | | | | | F                        08:29:41.095897191 UTC , thread_cap_info = ("ThreadId 109", 2, False)}
| | | | | | F                        
| | | | | | | F                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | | F                      , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | | | | | F                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | | | | F                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | | | | F                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | | | | F                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | | | | F                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | | | | F                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | | F                      = True})" , input_size = Size { num_rules = 5 , num_strict_rules = 3 ,
| | | | | | | F                      num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | | | F                      = 20} , self = 68 , parent = Nothing , duration = 0.395570101000 , status
| | | | | | | F                      = Fail , start = 2025-09-04 08:29:38.556008218 UTC , finish = 2025-09-04
| | | | | | | F                      08:29:38.951578319 UTC , thread_cap_info = ("ThreadId 113", 3, False)}
| | | | | | | F                      
| | | | | | | | F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | | | F                    = 4 , num_top_rules = 4 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | | | | F                    = 80} , self = 83 , parent = Nothing , duration = 2.532644978000 , status
| | | | | | | | F                    = Fail , start = 2025-09-04 08:29:38.556027526 UTC , finish = 2025-09-04
| | | | | | | | F                    08:29:41.088672504 UTC , thread_cap_info = ("ThreadId 110", 2, False)}
| | | | | | | | F                    
| | | | | | | | | E                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | E                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | E                  = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | | | | | | | E                  = 28 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 16 , total_length
| | | | | | | | | E                  = 356} , self = 86 , parent = Nothing , duration = 3.241194451000 , status
| | | | | | | | | E                  = Except "<<timeout>>" , start = 2025-09-04 08:29:38.567873154 UTC , finish
| | | | | | | | | E                  = 2025-09-04 08:29:41.809067605 UTC , thread_cap_info = ("ThreadId 125",
| | | | | | | | | E                  1, False)}
| | | | | | | | | E                  
| | | | | | | | | | E                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | E                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | E                = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | | | | | | | | E                = 28 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 16 , total_length
| | | | | | | | | | E                = 356} , self = 88 , parent = Nothing , duration = 3.240378518000 , status
| | | | | | | | | | E                = Except "<<timeout>>" , start = 2025-09-04 08:29:38.592145676 UTC , finish
| | | | | | | | | | E                = 2025-09-04 08:29:41.832524194 UTC , thread_cap_info = ("ThreadId 126",
| | | | | | | | | | E                1, False)}
| | | | | | | | | | E                
| | | | | | | | | | | E              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | E              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | E              = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | | | | | | E              = 4 , num_top_rules = 4 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | | | | | | | E              = 80} , self = 85 , parent = Nothing , duration = 3.216887914000 , status
| | | | | | | | | | | E              = Except "<<timeout>>" , start = 2025-09-04 08:29:38.592167274 UTC , finish
| | | | | | | | | | | E              = 2025-09-04 08:29:41.809055188 UTC , thread_cap_info = ("ThreadId 132",
| | | | | | | | | | | E              2, False)}
| | | | | | | | | | | E              
| | | | | | | | | | | | S            Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | | | | | | | | | | S            , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | | | | | | | | | | S            , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | | | | | | | | | | S            = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | | | | | | | | | | S            , cpf = True}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | | | | | | | | | | S            = 28 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 16 , total_length
| | | | | | | | | | | | S            = 356} , self = 78 , parent = Nothing , duration = 0.721393084000 , status
| | | | | | | | | | | | S            = Success , start = 2025-09-04 08:29:38.629961955 UTC , finish = 2025-09-04
| | | | | | | | | | | | S            08:29:39.351355039 UTC , thread_cap_info = ("ThreadId 127", 1, False)}
| | | | | | | | | | | | S            
| | | | | | | | | | | | | E          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | E          = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | | | | | | | | E          = 4 , num_top_rules = 4 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | | | | | | | | | E          = 80} , self = 87 , parent = Nothing , duration = 3.183283578000 , status
| | | | | | | | | | | | | E          = Except "<<timeout>>" , start = 2025-09-04 08:29:38.629974297 UTC , finish
| | | | | | | | | | | | | E          = 2025-09-04 08:29:41.813257875 UTC , thread_cap_info = ("ThreadId 133",
| | | | | | | | | | | | | E          2, False)}
| | | | | | | | | | | | | E          
| | | | | | | | | | | | | | S        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | | | | | | | | | S        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | | | | | | | | | S        = Size { num_rules = 80 , num_strict_rules = 48 , num_top_rules = 0 , num_weak_rules
| | | | | | | | | | | | | | S        = 32 , alphabet_size = 16 , total_length = 480} , self = 70 , parent =
| | | | | | | | | | | | | | S        Nothing , duration = 0.267154485000 , status = Success , start = 2025-09-04
| | | | | | | | | | | | | | S        08:29:38.694384964 UTC , finish = 2025-09-04 08:29:38.961539449 UTC , thread_cap_info
| | | | | | | | | | | | | | S        = ("ThreadId 135", 3, False)}
| | | | | | | | | | | | | | S        
E | | | | | | | | | | | | | |        
F | | | | | | | | | | | | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | | | | | | | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | | | | | | | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
F | | | | | | | | | | | | | |        = 3 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 4 , total_length
F | | | | | | | | | | | | | |        = 20} , self = 90 , parent = Nothing , duration = 3.005229259000 , status
F | | | | | | | | | | | | | |        = Fail , start = 2025-09-04 08:29:38.888210608 UTC , finish = 2025-09-04
F | | | | | | | | | | | | | |        08:29:41.893439867 UTC , thread_cap_info = ("ThreadId 142", 3, False)}
F | | | | | | | | | | | | | |        
| | | | | | | | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | | | | | | | | F      = 3 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | | F      = 20} , self = 89 , parent = Nothing , duration = 2.951176976000 , status
| | | | | | | | | | | | | | | F      = Fail , start = 2025-09-04 08:29:38.937009466 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | F      08:29:41.888186442 UTC , thread_cap_info = ("ThreadId 143", 3, False)}
| | | | | | | | | | | | | | | F      
| | | | | | | F | | | | | | | |      
| | | | | | |   | | | | | | S |      
| | | | | | | F | | | | | |   |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F | | | | | |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F | | | | | |   |      = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | | | | | F | | | | | |   |      = 28 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 16 , total_length
| | | | | | | F | | | | | |   |      = 356} , self = 91 , parent = Nothing , duration = 2.936361538000 , status
| | | | | | | F | | | | | |   |      = Fail , start = 2025-09-04 08:29:39.112265151 UTC , finish = 2025-09-04
| | | | | | | F | | | | | |   |      08:29:42.048626689 UTC , thread_cap_info = ("ThreadId 153", 3, False)}
| | | | | | | F | | | | | |   |      
| | | | | | | | | | | | | | F |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | F |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | F |      = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | | | | | | | | | | | | F |      = 28 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 16 , total_length
| | | | | | | | | | | | | | F |      = 356} , self = 93 , parent = Nothing , duration = 3.037890636000 , status
| | | | | | | | | | | | | | F |      = Fail , start = 2025-09-04 08:29:39.128747171 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | F |      08:29:42.166637807 UTC , thread_cap_info = ("ThreadId 155", 3, False)}
| | | | | | | | | | | | | | F |      
| | | | | | | | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | | | | | | | | | | | | | | F    = 28 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 16 , total_length
| | | | | | | | | | | | | | | | F    = 356} , self = 92 , parent = Nothing , duration = 2.939039157000 , status
| | | | | | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:29:39.169576728 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | | F    08:29:42.108615885 UTC , thread_cap_info = ("ThreadId 158", 3, False)}
| | | | | | | | | | | | | | | | F    
| | | | | | | | | | | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | | | | | | | | | | | | | | | E  = 28 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 16 , total_length
| | | | | | | | | | | | | | | | | E  = 356} , self = 94 , parent = Nothing , duration = 3.022062437000 , status
| | | | | | | | | | | | | | | | | E  = Except "AsyncCancelled" , start = 2025-09-04 08:29:39.187804163 UTC ,
| | | | | | | | | | | | | | | | | E  finish = 2025-09-04 08:29:42.2098666 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | | | | E  160", 3, False)}
| | | | | | | | | | | | | | | | | E  
| | | | | F | | | | | | | | | | | |  
| | | | |   | | | | | | S | | | | |  
| | F | |   | | | | | |   | | | | |  
| |   F |   | | | | | |   | | | | |  
| |     F   | | | | | |   | | | | |  
| F         | | | | | |   | | | | |  
|           | | F | | |   | | | | |  
|           F |   | | |   | | | | |  
|             |   | | E   | | | | |  
|             |   E |     | | | | |  
|             |     |     E | | | |  
|             |     E       | | | |  
|             |             | F | |  
F             |             |   | |  
S             |             |   | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
S             |             |   | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
S             |             |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S             |             |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S             |             |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S             |             |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
S             |             |   | |  , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
S             |             |   | |  = 4 , total_length = 20} , self = 96 , parent = Nothing , duration = 0.636726590000
S             |             |   | |  , status = Success , start = 2025-09-04 08:29:41.893467159 UTC , finish
S             |             |   | |  = 2025-09-04 08:29:42.530193749 UTC , thread_cap_info = ("ThreadId 187",
S             |             |   | |  3, False)}
S             |             |   | |  
| F           |             |   | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| F           |             |   | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F           |             |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F           |             |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F           |             |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F           |             |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| F           |             |   | |  , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| F           |             |   | |  = 4 , total_length = 20} , self = 95 , parent = Nothing , duration = 0.381484167000
| F           |             |   | |  , status = Fail , start = 2025-09-04 08:29:41.929381418 UTC , finish =
| F           |             |   | |  2025-09-04 08:29:42.310865585 UTC , thread_cap_info = ("ThreadId 188",
| F           |             |   | |  3, False)}
| F           |             |   | |  
| |           F             |   | |  
| |                         |   F |  
| |                         F     |  
| |                               E  
| F                                  
| E                                  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| E                                  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E                                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E                                  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E                                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E                                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| E                                  , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| E                                  = 4 , total_length = 20} , self = 98 , parent = Nothing , duration = 0.320781906000
| E                                  , status = Except "AsyncCancelled" , start = 2025-09-04 08:29:42.330385867
| E                                  UTC , finish = 2025-09-04 08:29:42.651167773 UTC , thread_cap_info = ("ThreadId
| E                                  194", 3, False)}
| E                                  
S |                                  
  E                                  
F                                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F                                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                                    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
F                                    = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 4 , total_length
F                                    = 15} , self = 108 , parent = Nothing , duration = 0.138639534000 , status
F                                    = Fail , start = 2025-09-04 08:29:42.750060427 UTC , finish = 2025-09-04
F                                    08:29:42.888699961 UTC , thread_cap_info = ("ThreadId 207", 3, False)}
F                                    
F                                    
