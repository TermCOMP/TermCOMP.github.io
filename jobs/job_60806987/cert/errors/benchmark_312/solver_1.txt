[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 1284 length 9640
CNF 1284 vars 9640 clauses
last 1499 length 7578
last 1757 length 10586
last 1584 length 8827
last 1641 length 8390
CNF 1499 vars 7578 clauses
CNF 1757 vars 10586 clauses
CNF 1584 vars 8827 clauses
CNF 1641 vars 8390 clauses
last 530 length 2457
CNF 530 vars 2457 clauses
last 704 length 3428
last 3467 length 21662
CNF 704 vars 3428 clauses
last 791 length 4054
last 3959 length 27109
CNF 3959 vars 27109 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1655, clauses: 6734
last 1655 length 6734
CNF 3467 vars 21662 clauses
CNF 1655 vars 6734 clauses
last 969 length 5236
CNF 791 vars 4054 clauses
last 1466 length 7050
last 969 length 5236
last 1828 length 8644
last 791 length 4054
last 4035 length 27717
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12068, clauses: 50486
last 3787 length 23339
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1655, clauses: 6734, status: Unsatisfied, time: 0.2381974s
CNF 969 vars 5236 clauses
CNF 1466 vars 7050 clauses
CNF 969 vars 5236 clauses
CNF 1828 vars 8644 clauses
CNF 791 vars 4054 clauses
CNF 4035 vars 27717 clauses
last 12068 length 50486
CNF 3787 vars 23339 clauses
last 22430 length 176164
CNF 12068 vars 50486 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1978, clauses: 7877
last 1978 length 7877
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12068, clauses: 50486, status: Satisfied, time: 0.866322971s
CNF 1978 vars 7877 clauses
last 25726 length 270419
CNF 22430 vars 176164 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1978, clauses: 7877, status: Satisfied, time: 0.272710563s
CNF 25726 vars 270419 clauses
last 513 length 2398
last 509 length 2568
CNF 513 vars 2398 clauses
CNF 509 vars 2568 clauses
last 1828 length 8644
last 1466 length 7050
CNF 1828 vars 8644 clauses
CNF 1466 vars 7050 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1422, clauses: 5751
last 1422 length 5751
CNF 1422 vars 5751 clauses
**************************************************
summary
**************************************************
SRS with 1 strict rules and 1 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 4 weak rules on 4 letters       weights
SRS with 1 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 3 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, a] -> [] {- Input 0 -}
  [] ->= [a, a, b, a, b, a] {- Input 1 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 1/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 5 5 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 5 3 \
                | 0 0 3 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
reason
  no strict rules

**************************************************
skeleton: (1/1,2)\TileAllAll{2}(4/4,4)\Weight(1/3,4)\Matrix{\Natural}{3}(0/3,3)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 11
  max duration 1.523807037000
  min duration 0.042869439000
  total durat. 5.748872151000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 8
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 76}
    , self = 97
    , parent = Nothing
    , duration = 1.045302289000
    , status = Fail
    , start = 2025-09-04 08:23:48.025315458 UTC
    , finish = 2025-09-04 08:23:49.070617747 UTC
    , thread_cap_info = ("ThreadId 171", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 30}
    , self = 98
    , parent = Nothing
    , duration = 1.046369699000
    , status = Fail
    , start = 2025-09-04 08:23:48.044437944 UTC
    , finish = 2025-09-04 08:23:49.090807643 UTC
    , thread_cap_info = ("ThreadId 162", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 24
      , num_strict_rules = 21
      , num_top_rules = 21
      , num_weak_rules = 3
      , alphabet_size = 6
      , total_length = 129}
    , self = 100
    , parent = Nothing
    , duration = 1.263723371000
    , status = Fail
    , start = 2025-09-04 08:23:48.010617654 UTC
    , finish = 2025-09-04 08:23:49.274341025 UTC
    , thread_cap_info = ("ThreadId 159", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 13
      , total_length = 328}
    , self = 112
    , parent = Nothing
    , duration = 1.523807037000
    , status = Fail
    , start = 2025-09-04 08:23:48.123269646 UTC
    , finish = 2025-09-04 08:23:49.647076683 UTC
    , thread_cap_info = ("ThreadId 180", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 11
  max duration 1.607210993000
  min duration 0.035711929000
  total durat. 6.109856503000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 30}
    , self = 96
    , parent = Nothing
    , duration = 1.064048438000
    , status = Fail
    , start = 2025-09-04 08:23:47.989415356 UTC
    , finish = 2025-09-04 08:23:49.053463794 UTC
    , thread_cap_info = ("ThreadId 163", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 24
      , num_strict_rules = 21
      , num_top_rules = 21
      , num_weak_rules = 3
      , alphabet_size = 6
      , total_length = 129}
    , self = 99
    , parent = Nothing
    , duration = 1.102222882000
    , status = Fail
    , start = 2025-09-04 08:23:48.010621799 UTC
    , finish = 2025-09-04 08:23:49.112844681 UTC
    , thread_cap_info = ("ThreadId 165", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 13
      , total_length = 328}
    , self = 120
    , parent = Nothing
    , duration = 1.607210993000
    , status = Fail
    , start = 2025-09-04 08:23:48.123275095 UTC
    , finish = 2025-09-04 08:23:49.730486088 UTC
    , thread_cap_info = ("ThreadId 182", 3, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.354582394000
  min duration 1.354582394000
  total durat. 1.354582394000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 2
      , total_length = 28}
    , self = 101
    , parent = Nothing
    , duration = 1.354582394000
    , status = Success
    , start = 2025-09-04 08:23:47.984315307 UTC
    , finish = 2025-09-04 08:23:49.338897701 UTC
    , thread_cap_info = ("ThreadId 166", 3, False)}
**************************************************
F                          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                          = True}" , input_size = Size { num_rules = 2 , num_strict_rules = 1 , num_top_rules
F                          = 0 , num_weak_rules = 1 , alphabet_size = 2 , total_length = 10} , self
F                          = 81 , parent = Nothing , duration = 0.118382158000 , status = Fail , start
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1422, clauses: 5751, status: Unsatisfied, time: 0.028108229s
F                          = 2025-09-04 08:23:47.865876725 UTC , finish = 2025-09-04 08:23:47.984258883
F                          UTC , thread_cap_info = ("ThreadId 91", 2, False)}
F                          
| F                        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                        = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| F                        = 21 , num_top_rules = 21 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| F                        = 129} , self = 91 , parent = Nothing , duration = 0.262952329000 , status
| F                        = Fail , start = 2025-09-04 08:23:47.88973794 UTC , finish = 2025-09-04
| F                        08:23:48.152690269 UTC , thread_cap_info = ("ThreadId 123", 2, False)}
| F                        
| | F                      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | F                      = 21 , num_top_rules = 21 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | F                      = 129} , self = 86 , parent = Nothing , duration = 0.114624320000 , status
| | F                      = Fail , start = 2025-09-04 08:23:47.909409965 UTC , finish = 2025-09-04
| | F                      08:23:48.024034285 UTC , thread_cap_info = ("ThreadId 124", 2, False)}
| | F                      
| | | F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | F                    = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | F                    = 30} , self = 92 , parent = Nothing , duration = 0.306560261000 , status
| | | F                    = Fail , start = 2025-09-04 08:23:47.966567473 UTC , finish = 2025-09-04
| | | F                    08:23:48.273127734 UTC , thread_cap_info = ("ThreadId 149", 2, False)}
| | | F                    
| | | | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F                  = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | F                  = 30} , self = 94 , parent = Nothing , duration = 0.982962200000 , status
| | | | F                  = Fail , start = 2025-09-04 08:23:47.966575879 UTC , finish = 2025-09-04
| | | | F                  08:23:48.949538079 UTC , thread_cap_info = ("ThreadId 151", 2, False)}
| | | | F                  
F | | | |                  
S | | | |                  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
S | | | |                  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
S | | | |                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S | | | |                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S | | | |                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S | | | |                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
S | | | |                  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
S | | | |                  = 2 , total_length = 28} , self = 101 , parent = Nothing , duration = 1.354582394000
S | | | |                  , status = Success , start = 2025-09-04 08:23:47.984315307 UTC , finish
S | | | |                  = 2025-09-04 08:23:49.338897701 UTC , thread_cap_info = ("ThreadId 166",
S | | | |                  3, False)}
S | | | |                  
| | | | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | F                = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | F                = 30} , self = 96 , parent = Nothing , duration = 1.064048438000 , status
| | | | | F                = Fail , start = 2025-09-04 08:23:47.989415356 UTC , finish = 2025-09-04
| | | | | F                08:23:49.053463794 UTC , thread_cap_info = ("ThreadId 163", 2, False)}
| | | | | F                
| | | | | | F              Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | F              = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | F              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | F              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | F              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | F              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | F              , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | | | | | F              = 2 , total_length = 28} , self = 93 , parent = Nothing , duration = 0.680717130000
| | | | | | F              , status = Fail , start = 2025-09-04 08:23:47.989481683 UTC , finish =
| | | | | | F              2025-09-04 08:23:48.670198813 UTC , thread_cap_info = ("ThreadId 168",
| | | | | | F              3, False)}
| | | | | | F              
| | | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | | | | F            = 21 , num_top_rules = 21 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | | | | F            = 129} , self = 100 , parent = Nothing , duration = 1.263723371000 , status
| | | | | | | F            = Fail , start = 2025-09-04 08:23:48.010617654 UTC , finish = 2025-09-04
| | | | | | | F            08:23:49.274341025 UTC , thread_cap_info = ("ThreadId 159", 2, False)}
| | | | | | | F            
| | | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | | | | | F          = 21 , num_top_rules = 21 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | | | | | F          = 129} , self = 99 , parent = Nothing , duration = 1.102222882000 , status
| | | | | | | | F          = Fail , start = 2025-09-04 08:23:48.010621799 UTC , finish = 2025-09-04
| | | | | | | | F          08:23:49.112844681 UTC , thread_cap_info = ("ThreadId 165", 2, False)}
| | | | | | | | F          
| | F | | | | | |          
| | F | | | | | |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | | | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | | | |          = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F | | | | | |          = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | F | | | | | |          = 76} , self = 97 , parent = Nothing , duration = 1.045302289000 , status
| | F | | | | | |          = Fail , start = 2025-09-04 08:23:48.025315458 UTC , finish = 2025-09-04
| | F | | | | | |          08:23:49.070617747 UTC , thread_cap_info = ("ThreadId 171", 3, False)}
| | F | | | | | |          
| | | | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | F        = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | | F        = 76} , self = 95 , parent = Nothing , duration = 0.985160029000 , status
| | | | | | | | | F        = Fail , start = 2025-09-04 08:23:48.030011937 UTC , finish = 2025-09-04
| | | | | | | | | F        08:23:49.015171966 UTC , thread_cap_info = ("ThreadId 174", 3, False)}
| | | | | | | | | F        
| | | | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | | | F      = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | | | F      = 30} , self = 98 , parent = Nothing , duration = 1.046369699000 , status
| | | | | | | | | | F      = Fail , start = 2025-09-04 08:23:48.044437944 UTC , finish = 2025-09-04
| | | | | | | | | | F      08:23:49.090807643 UTC , thread_cap_info = ("ThreadId 162", 2, False)}
| | | | | | | | | | F      
| | | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | | | | | F    = 1 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 13 , total_length
| | | | | | | | | | | F    = 328} , self = 112 , parent = Nothing , duration = 1.523807037000 , status
| | | | | | | | | | | F    = Fail , start = 2025-09-04 08:23:48.123269646 UTC , finish = 2025-09-04
| | | | | | | | | | | F    08:23:49.647076683 UTC , thread_cap_info = ("ThreadId 180", 3, False)}
| | | | | | | | | | | F    
| | | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | | | | | | F  = 1 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 13 , total_length
| | | | | | | | | | | | F  = 328} , self = 120 , parent = Nothing , duration = 1.607210993000 , status
| | | | | | | | | | | | F  = Fail , start = 2025-09-04 08:23:48.123275095 UTC , finish = 2025-09-04
| | | | | | | | | | | | F  08:23:49.730486088 UTC , thread_cap_info = ("ThreadId 182", 3, False)}
| | | | | | | | | | | | F  
| F | | | | | | | | | | |  
|   | F | | | | | | | | |  
|   |   | | F | | | | | |  
| E |   | |   | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| E |   | |   | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E |   | |   | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E |   | |   | | | | | |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E |   | |   | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E |   | |   | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| E |   | |   | | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| E |   | |   | | | | | |  = 2 , total_length = 28} , self = 103 , parent = Nothing , duration = 0.860477380000
| E |   | |   | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:23:48.689847851
| E |   | |   | | | | | |  UTC , finish = 2025-09-04 08:23:49.550325231 UTC , thread_cap_info = ("ThreadId
| E |   | |   | | | | | |  191", 3, False)}
| E |   | |   | | | | | |  
| | |   F |   | | | | | |  
| | |     |   | | F | | |  
| | |     F   | |   | | |  
| | F         | |   | | |  
| | E         | |   | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | E         | |   | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E         | |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E         | |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E         | |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E         | |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | E         | |   | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | E         | |   | | |  = 4 , total_length = 30} , self = 116 , parent = Nothing , duration = 0.593045175000
| | E         | |   | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:23:49.077792561
| | E         | |   | | |  UTC , finish = 2025-09-04 08:23:49.670837736 UTC , thread_cap_info = ("ThreadId
| | E         | |   | | |  193", 2, False)}
| | E         | |   | | |  
| | |         | |   F | |  
| | |         | F     | |  
| | | S       |       | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | S       |       | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | S       |       | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | S       |       | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S       |       | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S       |       | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | S       |       | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | | S       |       | |  = 4 , total_length = 30} , self = 105 , parent = Nothing , duration = 0.404065259000
| | | S       |       | |  , status = Success , start = 2025-09-04 08:23:49.189997277 UTC , finish
| | | S       |       | |  = 2025-09-04 08:23:49.594062536 UTC , thread_cap_info = ("ThreadId 196",
| | | S       |       | |  2, False)}
| | | S       |       | |  
| | | |       F       | |  
S | | |               | |  
  E | |               | |  
    | S               | |  
    |                 F |  
    E                   |  
                        F  
