[Info] pool sizes (success) 9 seen 9 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 9 seen 9 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 461 length 1790
CNF 461 vars 1790 clauses
last 418 length 1628
CNF 418 vars 1628 clauses
last 593 length 2300
last 545 length 2105
CNF 593 vars 2300 clauses
CNF 545 vars 2105 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3537, clauses: 12943
last 3537 length 12943
CNF 3537 vars 12943 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3537, clauses: 12943, status: Satisfied, time: 0.164585476s
last 567 length 2208
CNF 567 vars 2208 clauses
last 512 length 1986
CNF 512 vars 1986 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3285, clauses: 12096
last 3285 length 12096
CNF 3285 vars 12096 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3285, clauses: 12096, status: Satisfied, time: 1.44788337s
**************************************************
summary
**************************************************
SRS with 6 strict rules and 9 weak rules on 7 letters       weights
SRS with 3 strict rules and 9 weak rules on 7 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 9 weak rules on 6 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 9 weak rules on 6 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [p, s] -> [s] {- Input 0 -}
  [n, s] -> [s] {- Input 1 -}
  [o, s] -> [s] {- Input 2 -}
  [o, n] -> [n, o] {- Input 3 -}
  [o, m] -> [n, o] {- Input 4 -}
  [n, o, p] -> [o, n] {- Input 5 -}
  [t] ->= [t, c, n] {- Input 6 -}
  [p, n] ->= [m, p] {- Input 7 -}
  [p, m] ->= [m, p] {- Input 8 -}
  [n, p] ->= [p, n] {- Input 9 -}
  [c, p] ->= [p, c] {- Input 10 -}
  [c, m] ->= [m, c] {- Input 11 -}
  [c, n] ->= [n, c] {- Input 12 -}
  [c, o] ->= [o, c] {- Input 13 -}
  [c, o] ->= [o] {- Input 14 -}
reason
  (s, 0/1)
  (t, 0/1)
  (n, 0/1)
  (p, 1/1)
  (o, 1/1)
  (c, 0/1)
  (m, 0/1)
   property Termination
has value Just True
for SRS
  [n, s] -> [s] {- Input 1 -}
  [o, n] -> [n, o] {- Input 3 -}
  [o, m] -> [n, o] {- Input 4 -}
  [t] ->= [t, c, n] {- Input 6 -}
  [p, n] ->= [m, p] {- Input 7 -}
  [p, m] ->= [m, p] {- Input 8 -}
  [n, p] ->= [p, n] {- Input 9 -}
  [c, p] ->= [p, c] {- Input 10 -}
  [c, m] ->= [m, c] {- Input 11 -}
  [c, n] ->= [n, c] {- Input 12 -}
  [c, o] ->= [o, c] {- Input 13 -}
  [c, o] ->= [o] {- Input 14 -}
reason
  ( s
  , St (Corner  / 1 7 7 \
                | 0 0 2 |
                \ 0 0 1 /) )
  ( t
  , St (Corner  / 1 6 1 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( n
  , St (Corner  / 1 4 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( p
  , St (Corner  / 1 1 3 \
                | 0 4 0 |
                \ 0 0 1 /) )
  ( o
  , St (Corner  / 1 2 3 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( c
  , St (Corner  / 1 1 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( m
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [o, n] -> [n, o] {- Input 3 -}
  [o, m] -> [n, o] {- Input 4 -}
  [t] ->= [t, c, n] {- Input 6 -}
  [p, n] ->= [m, p] {- Input 7 -}
  [p, m] ->= [m, p] {- Input 8 -}
  [n, p] ->= [p, n] {- Input 9 -}
  [c, p] ->= [p, c] {- Input 10 -}
  [c, m] ->= [m, c] {- Input 11 -}
  [c, n] ->= [n, c] {- Input 12 -}
  [c, o] ->= [o, c] {- Input 13 -}
  [c, o] ->= [o] {- Input 14 -}
reason
  ( t
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( n
  , St (Corner  / 1 0 0 \
                | 0 4 6 |
                \ 0 0 1 /) )
  ( p
  , St (Corner  / 1 0 5 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( o
  , St (Corner  / 1 1 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( c
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( m
  , St (Corner  / 1 0 0 \
                | 0 4 6 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [t] ->= [t, c, n] {- Input 6 -}
  [p, n] ->= [m, p] {- Input 7 -}
  [p, m] ->= [m, p] {- Input 8 -}
  [n, p] ->= [p, n] {- Input 9 -}
  [c, p] ->= [p, c] {- Input 10 -}
  [c, m] ->= [m, c] {- Input 11 -}
  [c, n] ->= [n, c] {- Input 12 -}
  [c, o] ->= [o, c] {- Input 13 -}
  [c, o] ->= [o] {- Input 14 -}
reason
  no strict rules

**************************************************
skeleton: (6/9,7)\Weight(3/9,7)\Matrix{\Natural}{3}(2/9,6)\Matrix{\Natural}{3}(0/9,6)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.001088151000
  min duration 3.001088151000
  total durat. 3.001088151000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 412
      , num_strict_rules = 88
      , num_top_rules = 0
      , num_weak_rules = 324
      , alphabet_size = 48
      , total_length = 2402}
    , self = 80
    , parent = Nothing
    , duration = 3.001088151000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:50.103725503 UTC
    , finish = 2025-09-04 07:31:53.104813654 UTC
    , thread_cap_info = ("ThreadId 120", 3, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.164562259000
  min duration 1.446815490000
  total durat. 4.611377749000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 412
      , num_strict_rules = 88
      , num_top_rules = 0
      , num_weak_rules = 324
      , alphabet_size = 48
      , total_length = 2402}
    , self = 75
    , parent = Nothing
    , duration = 1.446815490000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:50.617997997 UTC
    , finish = 2025-09-04 07:31:52.064813487 UTC
    , thread_cap_info = ("ThreadId 139", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 412
      , num_strict_rules = 88
      , num_top_rules = 0
      , num_weak_rules = 324
      , alphabet_size = 48
      , total_length = 2402}
    , self = 85
    , parent = Nothing
    , duration = 3.164562259000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:50.660303678 UTC
    , finish = 2025-09-04 07:31:53.824865937 UTC
    , thread_cap_info = ("ThreadId 143", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.090443082000
  min duration 0.031075221000
  total durat. 1.222613174000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 6
      , total_length = 43}
    , self = 82
    , parent = Nothing
    , duration = 1.090443082000
    , status = Fail
    , start = 2025-09-04 07:31:52.263228391 UTC
    , finish = 2025-09-04 07:31:53.353671473 UTC
    , thread_cap_info = ("ThreadId 161", 0, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.004617462000
  min duration 3.004617462000
  total durat. 3.004617462000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 412
      , num_strict_rules = 88
      , num_top_rules = 0
      , num_weak_rules = 324
      , alphabet_size = 48
      , total_length = 2402}
    , self = 81
    , parent = Nothing
    , duration = 3.004617462000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:50.105263149 UTC
    , finish = 2025-09-04 07:31:53.109880611 UTC
    , thread_cap_info = ("ThreadId 121", 3, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 4.200861704000
  min duration 1.503379898000
  total durat. 5.704241602000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 412
      , num_strict_rules = 88
      , num_top_rules = 0
      , num_weak_rules = 324
      , alphabet_size = 48
      , total_length = 2402}
    , self = 76
    , parent = Nothing
    , duration = 1.503379898000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:50.624820044 UTC
    , finish = 2025-09-04 07:31:52.128199942 UTC
    , thread_cap_info = ("ThreadId 141", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 412
      , num_strict_rules = 88
      , num_top_rules = 0
      , num_weak_rules = 324
      , alphabet_size = 48
      , total_length = 2402}
    , self = 86
    , parent = Nothing
    , duration = 4.200861704000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:50.666085124 UTC
    , finish = 2025-09-04 07:31:54.866946828 UTC
    , thread_cap_info = ("ThreadId 145", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.240761840000
  min duration 0.740611387000
  total durat. 2.981373227000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 6
      , total_length = 43}
    , self = 91
    , parent = Nothing
    , duration = 2.240761840000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:53.225006699 UTC
    , finish = 2025-09-04 07:31:55.465768539 UTC
    , thread_cap_info = ("ThreadId 170", 0, False)}
Success : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.788992260000
  min duration 0.225682108000
  total durat. 2.014674368000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 11
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 6
      , total_length = 43}
    , self = 89
    , parent = Nothing
    , duration = 1.788992260000
    , status = Success
    , start = 2025-09-04 07:31:53.529591038 UTC
    , finish = 2025-09-04 07:31:55.318583298 UTC
    , thread_cap_info = ("ThreadId 171", 0, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.344618958000
  min duration 1.344618958000
  total durat. 1.344618958000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 7
      , total_length = 46}
    , self = 72
    , parent = Nothing
    , duration = 1.344618958000
    , status = Fail
    , start = 2025-09-04 07:31:49.96483489 UTC
    , finish = 2025-09-04 07:31:51.309453848 UTC
    , thread_cap_info = ("ThreadId 88", 0, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 8
  max duration 0.595758226000
  min duration 0.000129841000
  total durat. 1.300567025000
Fail : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 12
  max duration 1.081680266000
  min duration 0.000033156000
  total durat. 1.273598714000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 348
      , num_strict_rules = 60
      , num_top_rules = 0
      , num_weak_rules = 288
      , alphabet_size = 36
      , total_length = 2052}
    , self = 87
    , parent = Nothing
    , duration = 1.081680266000
    , status = Fail
    , start = 2025-09-04 07:31:53.859276779 UTC
    , finish = 2025-09-04 07:31:54.940957045 UTC
    , thread_cap_info = ("ThreadId 175", 0, False)}
**************************************************
F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                    , closure = Backward\n , start_strict_only = True\n , max_closure_length
F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                    = True})" , input_size = Size { num_rules = 12 , num_strict_rules = 3 ,
F                    num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 7 , total_length
F                    = 46} , self = 69 , parent = Nothing , duration = 0.853374269000 , status
F                    = Fail , start = 2025-09-04 07:31:49.953136566 UTC , finish = 2025-09-04
F                    07:31:50.806510835 UTC , thread_cap_info = ("ThreadId 80", 3, False)}
F                    
| F                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| F                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
| F                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| F                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| F                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| F                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| F                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| F                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| F                  = True})" , input_size = Size { num_rules = 12 , num_strict_rules = 3 ,
| F                  num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 7 , total_length
| F                  = 46} , self = 72 , parent = Nothing , duration = 1.344618958000 , status
| F                  = Fail , start = 2025-09-04 07:31:49.96483489 UTC , finish = 2025-09-04
| F                  07:31:51.309453848 UTC , thread_cap_info = ("ThreadId 88", 0, False)}
| F                  
| | E                Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | E                epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | E                = Size { num_rules = 852 , num_strict_rules = 564 , num_top_rules = 564
| | E                , num_weak_rules = 288 , alphabet_size = 60 , total_length = 4434} , self
| | E                = 53 , parent = Nothing , duration = 0.219580683000 , status = Except "AsyncCancelled"
| | E                , start = 2025-09-04 07:31:50.005441106 UTC , finish = 2025-09-04 07:31:50.225021789
| | E                UTC , thread_cap_info = ("ThreadId 105", 2, False)}
| | E                
| | | S              Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | S              , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | S              , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | S              = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | S              , cpf = True}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | S              = 3 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 7 , total_length
| | | S              = 46} , self = 54 , parent = Nothing , duration = 0.203031071000 , status
| | | S              = Success , start = 2025-09-04 07:31:50.031436581 UTC , finish = 2025-09-04
| | | S              07:31:50.234467652 UTC , thread_cap_info = ("ThreadId 95", 0, False)}
| | | S              
| | | | E            Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | E            epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | E            = Size { num_rules = 892 , num_strict_rules = 604 , num_top_rules = 604
| | | | E            , num_weak_rules = 288 , alphabet_size = 64 , total_length = 4624} , self
| | | | E            = 57 , parent = Nothing , duration = 0.253314262000 , status = Except "AsyncCancelled"
| | | | E            , start = 2025-09-04 07:31:50.031505138 UTC , finish = 2025-09-04 07:31:50.2848194
| | | | E            UTC , thread_cap_info = ("ThreadId 107", 2, False)}
| | | | E            
| | | | | E          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E          = False\n , verbose = False}" , input_size = Size { num_rules = 412 , num_strict_rules
| | | | | E          = 88 , num_top_rules = 0 , num_weak_rules = 324 , alphabet_size = 48 ,
| | | | | E          total_length = 2402} , self = 80 , parent = Nothing , duration = 3.001088151000
| | | | | E          , status = Except "<<timeout>>" , start = 2025-09-04 07:31:50.103725503
| | | | | E          UTC , finish = 2025-09-04 07:31:53.104813654 UTC , thread_cap_info = ("ThreadId
| | | | | E          120", 3, False)}
| | | | | E          
| | | | | | E        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | E        = False\n , verbose = False}" , input_size = Size { num_rules = 412 , num_strict_rules
| | | | | | E        = 88 , num_top_rules = 0 , num_weak_rules = 324 , alphabet_size = 48 ,
| | | | | | E        total_length = 2402} , self = 81 , parent = Nothing , duration = 3.004617462000
| | | | | | E        , status = Except "<<timeout>>" , start = 2025-09-04 07:31:50.105263149
| | | | | | E        UTC , finish = 2025-09-04 07:31:53.109880611 UTC , thread_cap_info = ("ThreadId
| | | | | | E        121", 3, False)}
| | | | | | E        
| | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | F      = 3 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 7 , total_length
| | | | | | | F      = 46} , self = 56 , parent = Nothing , duration = 0.125471389000 , status
| | | | | | | F      = Fail , start = 2025-09-04 07:31:50.145113606 UTC , finish = 2025-09-04
| | | | | | | F      07:31:50.270584995 UTC , thread_cap_info = ("ThreadId 122", 0, False)}
| | | | | | | F      
| | E | | | | |      
| | F | | | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F | | | | |      = 3 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 7 , total_length
| | F | | | | |      = 46} , self = 58 , parent = Nothing , duration = 0.101094871000 , status
| | F | | | | |      = Fail , start = 2025-09-04 07:31:50.225029662 UTC , finish = 2025-09-04
| | F | | | | |      07:31:50.326124533 UTC , thread_cap_info = ("ThreadId 125", 0, False)}
| | F | | | | |      
| | | S | | | |      
| | | S | | | |      Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | S | | | |      epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | S | | | |      = Size { num_rules = 588 , num_strict_rules = 147 , num_top_rules = 0 ,
| | | S | | | |      num_weak_rules = 441 , alphabet_size = 49 , total_length = 3430} , self
| | | S | | | |      = 60 , parent = Nothing , duration = 0.319147455000 , status = Success
| | | S | | | |      , start = 2025-09-04 07:31:50.24552885 UTC , finish = 2025-09-04 07:31:50.564676305
| | | S | | | |      UTC , thread_cap_info = ("ThreadId 128", 0, False)}
| | | S | | | |      
| | | | | | | F      
| | | | | | | S      Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | | S      epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | | S      = Size { num_rules = 588 , num_strict_rules = 147 , num_top_rules = 0 ,
| | | | | | | S      num_weak_rules = 441 , alphabet_size = 49 , total_length = 3430} , self
| | | | | | | S      = 59 , parent = Nothing , duration = 0.260451779000 , status = Success
| | | | | | | S      , start = 2025-09-04 07:31:50.284813721 UTC , finish = 2025-09-04 07:31:50.5452655
| | | | | | | S      UTC , thread_cap_info = ("ThreadId 129", 0, False)}
| | | | | | | S      
| | | | E | | |      
| | | | E | | |      Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | E | | |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | | E | | |      , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size
| | | | E | | |      = 7 , total_length = 46} , self = 70 , parent = Nothing , duration = 0.740611387000
| | | | E | | |      , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:50.325368084
| | | | E | | |      UTC , finish = 2025-09-04 07:31:51.065979471 UTC , thread_cap_info = ("ThreadId
| | | | E | | |      130", 0, False)}
| | | | E | | |      
| | F | | | | |      
| | S | | | | |      Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | S | | | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | S | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | S | | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | S | | | | |      , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size
| | S | | | | |      = 7 , total_length = 46} , self = 67 , parent = Nothing , duration = 0.225682108000
| | S | | | | |      , status = Success , start = 2025-09-04 07:31:50.524842682 UTC , finish
| | S | | | | |      = 2025-09-04 07:31:50.75052479 UTC , thread_cap_info = ("ThreadId 131",
| | S | | | | |      0, False)}
| | S | | | | |      
| | | | | | | S      
| | | S | | |        
| | | E | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | E | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 412 , num_strict_rules
| | | E | | |        = 88 , num_top_rules = 0 , num_weak_rules = 324 , alphabet_size = 48 ,
| | | E | | |        total_length = 2402} , self = 75 , parent = Nothing , duration = 1.446815490000
| | | E | | |        , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:50.617997997
| | | E | | |        UTC , finish = 2025-09-04 07:31:52.064813487 UTC , thread_cap_info = ("ThreadId
| | | E | | |        139", 0, False)}
| | | E | | |        
| | | | | | | E      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 412 , num_strict_rules
| | | | | | | E      = 88 , num_top_rules = 0 , num_weak_rules = 324 , alphabet_size = 48 ,
| | | | | | | E      total_length = 2402} , self = 76 , parent = Nothing , duration = 1.503379898000
| | | | | | | E      , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:50.624820044
| | | | | | | E      UTC , finish = 2025-09-04 07:31:52.128199942 UTC , thread_cap_info = ("ThreadId
| | | | | | | E      141", 0, False)}
| | | | | | | E      
| | | | | | | | E    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 412 , num_strict_rules
| | | | | | | | E    = 88 , num_top_rules = 0 , num_weak_rules = 324 , alphabet_size = 48 ,
| | | | | | | | E    total_length = 2402} , self = 85 , parent = Nothing , duration = 3.164562259000
| | | | | | | | E    , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:50.660303678
| | | | | | | | E    UTC , finish = 2025-09-04 07:31:53.824865937 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E    143", 0, False)}
| | | | | | | | E    
| | | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 412 , num_strict_rules
| | | | | | | | | E  = 88 , num_top_rules = 0 , num_weak_rules = 324 , alphabet_size = 48 ,
| | | | | | | | | E  total_length = 2402} , self = 86 , parent = Nothing , duration = 4.200861704000
| | | | | | | | | E  , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:50.666085124
| | | | | | | | | E  UTC , finish = 2025-09-04 07:31:54.866946828 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E  145", 0, False)}
| | | | | | | | | E  
| | S | | | | | | |  
F |   | | | | | | |  
  |   | E | | | | |  
  F   |   | | | | |  
F     |   | | | | |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
F     |   | | | | |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
F     |   | | | | |  = Size { num_rules = 11 , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules
F     |   | | | | |  = 9 , alphabet_size = 6 , total_length = 43} , self = 74 , parent = Nothing
F     |   | | | | |  , duration = 0.100910097000 , status = Fail , start = 2025-09-04 07:31:51.928763456
F     |   | | | | |  UTC , finish = 2025-09-04 07:31:52.029673553 UTC , thread_cap_info = ("ThreadId
F     |   | | | | |  153", 0, False)}
F     |   | | | | |  
F     |   | | | | |  
      E   | | | | |  
          | | E | |  
F         | |   | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F         | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F         | |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
F         | |   | |  = 2 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 6 , total_length
F         | |   | |  = 43} , self = 79 , parent = Nothing , duration = 0.722735417000 , status
F         | |   | |  = Fail , start = 2025-09-04 07:31:52.245727858 UTC , finish = 2025-09-04
F         | |   | |  07:31:52.968463275 UTC , thread_cap_info = ("ThreadId 160", 0, False)}
F         | |   | |  
| F       | |   | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F       | |   | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F       | |   | |  = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| F       | |   | |  = 2 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 6 , total_length
| F       | |   | |  = 43} , self = 82 , parent = Nothing , duration = 1.090443082000 , status
| F       | |   | |  = Fail , start = 2025-09-04 07:31:52.263228391 UTC , finish = 2025-09-04
| F       | |   | |  07:31:53.353671473 UTC , thread_cap_info = ("ThreadId 161", 0, False)}
| F       | |   | |  
F |       | |   | |  
S |       | |   | |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
S |       | |   | |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
S |       | |   | |  = Size { num_rules = 396 , num_strict_rules = 72 , num_top_rules = 0 ,
S |       | |   | |  num_weak_rules = 324 , alphabet_size = 36 , total_length = 2340} , self
S |       | |   | |  = 83 , parent = Nothing , duration = 0.595758226000 , status = Success
S |       | |   | |  , start = 2025-09-04 07:31:52.973534746 UTC , finish = 2025-09-04 07:31:53.569292972
S |       | |   | |  UTC , thread_cap_info = ("ThreadId 164", 0, False)}
S |       | |   | |  
| |       E |   | |  
| |         E   | |  
| | E           | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | E           | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E           | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E           | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E           | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E           | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | E           | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size
| | E           | |  = 6 , total_length = 43} , self = 91 , parent = Nothing , duration = 2.240761840000
| | E           | |  , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:53.225006699
| | E           | |  UTC , finish = 2025-09-04 07:31:55.465768539 UTC , thread_cap_info = ("ThreadId
| | E           | |  170", 0, False)}
| | E           | |  
| F |           | |  
| S |           | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| S |           | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S |           | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| S |           | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S |           | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S |           | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| S |           | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size
| S |           | |  = 6 , total_length = 43} , self = 89 , parent = Nothing , duration = 1.788992260000
| S |           | |  , status = Success , start = 2025-09-04 07:31:53.529591038 UTC , finish
| S |           | |  = 2025-09-04 07:31:55.318583298 UTC , thread_cap_info = ("ThreadId 171",
| S |           | |  0, False)}
| S |           | |  
S | |           | |  
  | |           E |  
F | |             |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
F | |             |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
F | |             |  = Size { num_rules = 348 , num_strict_rules = 60 , num_top_rules = 0 ,
F | |             |  num_weak_rules = 288 , alphabet_size = 36 , total_length = 2052} , self
F | |             |  = 87 , parent = Nothing , duration = 1.081680266000 , status = Fail , start
F | |             |  = 2025-09-04 07:31:53.859276779 UTC , finish = 2025-09-04 07:31:54.940957045
F | |             |  UTC , thread_cap_info = ("ThreadId 175", 0, False)}
F | |             |  
| | |             E  
F | |                
  S |                
    E                
