[Info] pool sizes (success) 2 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 186 length 735
last 186 length 735
CNF 186 vars 735 clauses
last 268 length 1147
last 268 length 1147
CNF 186 vars 735 clauses
last 1609 length 6766
last 1204 length 4927
last 1932 length 9896
last 1601 length 6748
last 1212 length 4953
last 1702 length 7849
last 464 length 1938
last 486 length 2101
CNF 268 vars 1147 clauses
last 1932 length 9896
CNF 268 vars 1147 clauses
last 1702 length 7849
CNF 1609 vars 6766 clauses
CNF 1932 vars 9896 clauses
CNF 1204 vars 4927 clauses
CNF 1601 vars 6748 clauses
CNF 1212 vars 4953 clauses
CNF 1702 vars 7849 clauses
last 4143 length 19953
CNF 464 vars 1938 clauses
CNF 486 vars 2101 clauses
last 5320 length 28900
CNF 1932 vars 9896 clauses
CNF 1702 vars 7849 clauses
CNF 4143 vars 19953 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3556, clauses: 14499
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1284, clauses: 5125
CNF 5320 vars 28900 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9412, clauses: 39234
last 3556 length 14499
last 1284 length 5125
last 9412 length 39234
CNF 3556 vars 14499 clauses
CNF 1284 vars 5125 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1284, clauses: 5125, status: Unsatisfied, time: 0.069501377s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3556, clauses: 14499, status: Unsatisfied, time: 0.140556892s
CNF 9412 vars 39234 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 26654, clauses: 111562
last 26654 length 111562
CNF 26654 vars 111562 clauses
last 20701 length 102876
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9412, clauses: 39234, status: Satisfied, time: 0.238585876s
CNF 20701 vars 102876 clauses
last 24777 length 113210
**************************************************
summary
**************************************************
SRS with 1 strict rules and 1 weak rules on 2 letters       mirror
SRS with 1 strict rules and 1 weak rules on 2 letters       context
SRS with 2 strict rules and 1 weak rules on 2 letters       mirror
SRS with 2 strict rules and 1 weak rules on 2 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 1 weak rules on 2 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, a, b, a] -> [] {- Input 0 -}
  [a, b] ->= [b, b, a, a] {- Input 1 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, b, a, b, a] -> [] {- Mirror (Input 0) -}
  [b, a] ->= [a, a, b, b] {- Mirror (Input 1) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a, b, a, b, a] -> [a] {- Mirror (Input 0) -}
  [b, a, b, a, b, a] -> [b] {- Mirror (Input 0) -}
  [b, a] ->= [a, a, b, b] {- Mirror (Input 1) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, b, a, b, a, a] -> [a] {- Input 0 -}
  [a, b, a, b, a, b] -> [b] {- Input 0 -}
  [a, b] ->= [b, b, a, a] {- Input 1 -}
reason
  ( a
  , St  / 0A -1A -   \
        | 0A -   -1A |
        \ 0A 0A  -   / )
  ( b
  , St  / 0A  -1A 0A \
        | -1A -2A 1A |
        \ -   -1A -  / )
   property Termination
has value Just True
for SRS
  [a, b] ->= [b, b, a, a] {- Input 1 -}
reason
  no strict rules

**************************************************
skeleton: \Mirror(1/1,2)\Context\Mirror(2/1,2)\Matrix{\ArcticBZ}{3}(0/1,2)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.356210729000
  min duration 0.070820557000
  total durat. 1.580565226000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 0.401146997000
  min duration 0.169843028000
  total durat. 1.863134470000
**************************************************
F                            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                            = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
F                            = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 3 , total_length
F                            = 13} , self = 89 , parent = Nothing , duration = 0.201118442000 , status
F                            = Fail , start = 2025-09-04 07:32:20.689806148 UTC , finish = 2025-09-04
F                            07:32:20.89092459 UTC , thread_cap_info = ("ThreadId 82", 2, False)}
F                            
| F                          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                          = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| F                          = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 3 , total_length
| F                          = 13} , self = 88 , parent = Nothing , duration = 0.169843028000 , status
| F                          = Fail , start = 2025-09-04 07:32:20.695638382 UTC , finish = 2025-09-04
| F                          07:32:20.86548141 UTC , thread_cap_info = ("ThreadId 85", 1, False)}
| F                          
| | F                        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                        = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | F                        = 7 , num_top_rules = 7 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | F                        = 69} , self = 93 , parent = Nothing , duration = 0.216077955000 , status
| | F                        = Fail , start = 2025-09-04 07:32:20.701517855 UTC , finish = 2025-09-04
| | F                        07:32:20.91759581 UTC , thread_cap_info = ("ThreadId 96", 1, False)}
| | F                        
| | | F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | F                      = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | F                      = 60} , self = 95 , parent = Nothing , duration = 0.214412873000 , status
| | | F                      = Fail , start = 2025-09-04 07:32:20.708367774 UTC , finish = 2025-09-04
| | | F                      07:32:20.922780647 UTC , thread_cap_info = ("ThreadId 126", 3, False)}
| | | F                      
| | | | F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | F                    = 7 , num_top_rules = 7 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | F                    = 69} , self = 90 , parent = Nothing , duration = 0.179149893000 , status
| | | | F                    = Fail , start = 2025-09-04 07:32:20.713667358 UTC , finish = 2025-09-04
| | | | F                    07:32:20.892817251 UTC , thread_cap_info = ("ThreadId 95", 1, False)}
| | | | F                    
| | | | | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | F                  = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | F                  = 60} , self = 91 , parent = Nothing , duration = 0.182342442000 , status
| | | | | F                  = Fail , start = 2025-09-04 07:32:20.71367528 UTC , finish = 2025-09-04
| | | | | F                  07:32:20.896017722 UTC , thread_cap_info = ("ThreadId 128", 3, False)}
| | | | | F                  
| | | | | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | | | F                = 7 , num_top_rules = 7 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | | F                = 69} , self = 92 , parent = Nothing , duration = 0.177626720000 , status
| | | | | | F                = Fail , start = 2025-09-04 07:32:20.723427301 UTC , finish = 2025-09-04
| | | | | | F                07:32:20.901054021 UTC , thread_cap_info = ("ThreadId 143", 2, False)}
| | | | | | F                
| | | | | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | | | | F              = 7 , num_top_rules = 7 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | | | F              = 69} , self = 94 , parent = Nothing , duration = 0.183762073000 , status
| | | | | | | F              = Fail , start = 2025-09-04 07:32:20.734196908 UTC , finish = 2025-09-04
| | | | | | | F              07:32:20.917958981 UTC , thread_cap_info = ("ThreadId 144", 2, False)}
| | | | | | | F              
| | | | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | | | | F            = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size = 2 , total_length
| | | | | | | | F            = 20} , self = 96 , parent = Nothing , duration = 0.189520951000 , status
| | | | | | | | F            = Fail , start = 2025-09-04 07:32:20.750772321 UTC , finish = 2025-09-04
| | | | | | | | F            07:32:20.940293272 UTC , thread_cap_info = ("ThreadId 155", 1, False)}
| | | | | | | | F            
| | | | | | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | F          = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | | | F          = 60} , self = 99 , parent = Nothing , duration = 0.306433081000 , status
| | | | | | | | | F          = Fail , start = 2025-09-04 07:32:20.750872138 UTC , finish = 2025-09-04
| | | | | | | | | F          07:32:21.057305219 UTC , thread_cap_info = ("ThreadId 162", 2, False)}
| | | | | | | | | F          
| | | | | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | | F        = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | | | | F        = 60} , self = 98 , parent = Nothing , duration = 0.301377764000 , status
| | | | | | | | | | F        = Fail , start = 2025-09-04 07:32:20.750873192 UTC , finish = 2025-09-04
| | | | | | | | | | F        07:32:21.052250956 UTC , thread_cap_info = ("ThreadId 164", 2, False)}
| | | | | | | | | | F        
| | | | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | | | | | | | F      = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size = 2 , total_length
| | | | | | | | | | | F      = 20} , self = 97 , parent = Nothing , duration = 0.207465769000 , status
| | | | | | | | | | | F      = Fail , start = 2025-09-04 07:32:20.752610183 UTC , finish = 2025-09-04
| | | | | | | | | | | F      07:32:20.960075952 UTC , thread_cap_info = ("ThreadId 156", 1, False)}
| | | | | | | | | | | F      
| | | | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | | | | | F    = 8 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | | | | | | F    = 104} , self = 100 , parent = Nothing , duration = 0.356210729000 , status
| | | | | | | | | | | | F    = Fail , start = 2025-09-04 07:32:20.761921813 UTC , finish = 2025-09-04
| | | | | | | | | | | | F    07:32:21.118132542 UTC , thread_cap_info = ("ThreadId 169", 2, False)}
| | | | | | | | | | | | F    
| | | | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | | | | | | F  = 8 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | F  = 104} , self = 101 , parent = Nothing , duration = 0.401146997000 , status
| | | | | | | | | | | | | F  = Fail , start = 2025-09-04 07:32:20.761923015 UTC , finish = 2025-09-04
| | | | | | | | | | | | | F  07:32:21.163070012 UTC , thread_cap_info = ("ThreadId 171", 2, False)}
| | | | | | | | | | | | | F  
| F | | | | | | | | | | | |  
F   | | | | | | | | | | | |  
    | | F | | | | | | | | |  
    | |   F | | | | | | | |  
    | |     F | | | | | | |  
    F |       | | | | | | |  
      |       F | | | | | |  
      F         | | | | | |  
F               | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
F               | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F               | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F               | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F               | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F               | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
F               | | | | | |  , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
F               | | | | | |  = 4 , total_length = 60} , self = 103 , parent = Nothing , duration = 0.352071099000
F               | | | | | |  , status = Fail , start = 2025-09-04 07:32:20.922822308 UTC , finish =
F               | | | | | |  2025-09-04 07:32:21.274893407 UTC , thread_cap_info = ("ThreadId 187",
F               | | | | | |  3, False)}
F               | | | | | |  
|               F | | | | |  
| S               | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| S               | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S               | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S               | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S               | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S               | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| S               | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| S               | | | | |  = 2 , total_length = 20} , self = 104 , parent = Nothing , duration = 0.459208723000
| S               | | | | |  , status = Success , start = 2025-09-04 07:32:20.955635884 UTC , finish
| S               | | | | |  = 2025-09-04 07:32:21.414844607 UTC , thread_cap_info = ("ThreadId 188",
| S               | | | | |  2, False)}
| S               | | | | |  
| |               | | F | |  
| | F             | |   | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | F             | |   | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F             | |   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F             | |   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F             | |   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F             | |   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | F             | |   | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| | F             | |   | |  = 2 , total_length = 20} , self = 102 , parent = Nothing , duration = 0.232762296000
| | F             | |   | |  , status = Fail , start = 2025-09-04 07:32:20.975746905 UTC , finish =
| | F             | |   | |  2025-09-04 07:32:21.208509201 UTC , thread_cap_info = ("ThreadId 189",
| | F             | |   | |  2, False)}
| | F             | |   | |  
| | |             | F   | |  
| | |             F     | |  
| | |                   F |  
| | |                     F  
| | F                        
| | E                        Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | E                        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E                        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E                        , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E                        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E                        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | E                        , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| | E                        = 2 , total_length = 20} , self = 106 , parent = Nothing , duration = 0.168023305000
| | E                        , status = Except "AsyncCancelled" , start = 2025-09-04 07:32:21.265661697
| | E                        UTC , finish = 2025-09-04 07:32:21.433685002 UTC , thread_cap_info = ("ThreadId
| | E                        196", 2, False)}
| | E                        
F | |                        
  S |                        
    E                        
