[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 234 length 923
CNF 234 vars 923 clauses
last 238 length 999
last 412 length 1691
last 238 length 999
last 412 length 1691
CNF 238 vars 999 clauses
last 262 length 1030
last 476 length 1923
last 2536 length 10325
last 2260 length 9410
CNF 412 vars 1691 clauses
last 2536 length 10325
CNF 412 vars 1691 clauses
CNF 238 vars 999 clauses
last 2260 length 9410
last 4205 length 16645
CNF 262 vars 1030 clauses
CNF 476 vars 1923 clauses
CNF 2536 vars 10325 clauses
CNF 2260 vars 9410 clauses
last 7618 length 30942
CNF 2536 vars 10325 clauses
CNF 4205 vars 16645 clauses
CNF 2260 vars 9410 clauses
CNF 7618 vars 30942 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1550, clauses: 5707
last 1550 length 5707
CNF 1550 vars 5707 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1550, clauses: 5707, status: Unsatisfied, time: 0.589257353s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8787, clauses: 35999
last 8787 length 35999
CNF 8787 vars 35999 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8787, clauses: 35999, status: Satisfied, time: 0.420849881s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7314, clauses: 28070
last 7314 length 28070
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 3 letters       mirror
SRS with 1 strict rules and 2 weak rules on 3 letters       context
SRS with 1 strict rules and 6 weak rules on 3 letters       mirror
SRS with 1 strict rules and 6 weak rules on 3 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, c] -> [c] {- Input 0 -}
  [] ->= [a, b] {- Input 1 -}
  [a, b] ->= [] {- Input 2 -}
reason
CNF 7314 vars 28070 clauses
  mirror
   property Termination
has value Just True
for SRS
  [c, a, a] -> [c] {- Mirror (Input 0) -}
  [] ->= [b, a] {- Mirror (Input 1) -}
  [b, a] ->= [] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [c, a, a] -> [c] {- Mirror (Input 0) -}
  [a] ->= [a, b, a] {- Mirror (Input 1) -}
  [b] ->= [b, b, a] {- Mirror (Input 1) -}
  [c] ->= [c, b, a] {- Mirror (Input 1) -}
  [a, b, a] ->= [a] {- Mirror (Input 2) -}
  [b, b, a] ->= [b] {- Mirror (Input 2) -}
  [c, b, a] ->= [c] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a, c] -> [c] {- Input 0 -}
  [a] ->= [a, b, a] {- Input 1 -}
  [b] ->= [a, b, b] {- Input 1 -}
  [c] ->= [a, b, c] {- Input 1 -}
  [a, b, a] ->= [a] {- Input 2 -}
  [a, b, b] ->= [b] {- Input 2 -}
  [a, b, c] ->= [c] {- Input 2 -}
reason
  ( a
  , St  / 0A 2A 2A \
        | -  -  1A |
        \ -  0A -  / )
  ( b
  , St  / 0A 1A  2A \
        | -  -   0A |
        \ -  -1A -  / )
  ( c
  , St  / 0A  - - \
        | -1A - - |
        \ -   - - / )
   property Termination
has value Just True
for SRS
  [a] ->= [a, b, a] {- Input 1 -}
  [b] ->= [a, b, b] {- Input 1 -}
  [c] ->= [a, b, c] {- Input 1 -}
  [a, b, a] ->= [a] {- Input 2 -}
  [a, b, b] ->= [b] {- Input 2 -}
  [a, b, c] ->= [c] {- Input 2 -}
reason
  no strict rules

**************************************************
skeleton: \Mirror(1/2,3)\Context\Mirror(1/6,3)\Matrix{\ArcticBZ}{3}(0/6,3)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 1.582122395000
  min duration 1.375979901000
  total durat. 8.611447626000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 34}
    , self = 77
    , parent = Nothing
    , duration = 1.375979901000
    , status = Fail
    , start = 2025-09-04 08:27:31.82810827 UTC
    , finish = 2025-09-04 08:27:33.204088171 UTC
    , thread_cap_info = ("ThreadId 116", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 126}
    , self = 83
    , parent = Nothing
    , duration = 1.394041575000
    , status = Fail
    , start = 2025-09-04 08:27:31.962172863 UTC
    , finish = 2025-09-04 08:27:33.356214438 UTC
    , thread_cap_info = ("ThreadId 145", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 28}
    , self = 80
    , parent = Nothing
    , duration = 1.399389813000
    , status = Fail
    , start = 2025-09-04 08:27:31.882248437 UTC
    , finish = 2025-09-04 08:27:33.28163825 UTC
    , thread_cap_info = ("ThreadId 135", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 34}
    , self = 76
    , parent = Nothing
    , duration = 1.401344868000
    , status = Fail
    , start = 2025-09-04 08:27:31.795418151 UTC
    , finish = 2025-09-04 08:27:33.196763019 UTC
    , thread_cap_info = ("ThreadId 101", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 126}
    , self = 81
    , parent = Nothing
    , duration = 1.458569074000
    , status = Fail
    , start = 2025-09-04 08:27:31.839140552 UTC
    , finish = 2025-09-04 08:27:33.297709626 UTC
    , thread_cap_info = ("ThreadId 124", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 63
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 54
      , alphabet_size = 9
      , total_length = 378}
    , self = 89
    , parent = Nothing
    , duration = 1.582122395000
    , status = Fail
    , start = 2025-09-04 08:27:31.990206997 UTC
    , finish = 2025-09-04 08:27:33.572329392 UTC
    , thread_cap_info = ("ThreadId 153", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 1.584081540000
  min duration 0.700564786000
  total durat. 7.945015361000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 28}
    , self = 79
    , parent = Nothing
    , duration = 1.353919699000
    , status = Fail
    , start = 2025-09-04 08:27:31.910193064 UTC
    , finish = 2025-09-04 08:27:33.264112763 UTC
    , thread_cap_info = ("ThreadId 139", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 34}
    , self = 78
    , parent = Nothing
    , duration = 1.375972988000
    , status = Fail
    , start = 2025-09-04 08:27:31.82813487 UTC
    , finish = 2025-09-04 08:27:33.204107858 UTC
    , thread_cap_info = ("ThreadId 117", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 63
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 54
      , alphabet_size = 9
      , total_length = 378}
    , self = 87
    , parent = Nothing
    , duration = 1.458853796000
    , status = Fail
    , start = 2025-09-04 08:27:32.0120673 UTC
    , finish = 2025-09-04 08:27:33.470921096 UTC
    , thread_cap_info = ("ThreadId 155", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 126}
    , self = 82
    , parent = Nothing
    , duration = 1.471622552000
    , status = Fail
    , start = 2025-09-04 08:27:31.839144711 UTC
    , finish = 2025-09-04 08:27:33.310767263 UTC
    , thread_cap_info = ("ThreadId 126", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 126}
    , self = 88
    , parent = Nothing
    , duration = 1.584081540000
    , status = Fail
    , start = 2025-09-04 08:27:31.973870427 UTC
    , finish = 2025-09-04 08:27:33.557951967 UTC
    , thread_cap_info = ("ThreadId 146", 0, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.558414388000
  min duration 1.558414388000
  total durat. 1.558414388000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 28}
    , self = 93
    , parent = Nothing
    , duration = 1.558414388000
    , status = Success
    , start = 2025-09-04 08:27:33.264150814 UTC
    , finish = 2025-09-04 08:27:34.822565202 UTC
    , thread_cap_info = ("ThreadId 168", 3, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.568498371000
  min duration 1.568498371000
  total durat. 1.568498371000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 3
      , total_length = 8}
    , self = 84
    , parent = Nothing
    , duration = 1.568498371000
    , status = Fail
    , start = 2025-09-04 08:27:31.836165105 UTC
    , finish = 2025-09-04 08:27:33.404663476 UTC
    , thread_cap_info = ("ThreadId 107", 3, False)}
Fail : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 23
  max duration 1.268318988000
  min duration 0.000009103000
  total durat. 2.247122526000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 2187
      , num_strict_rules = 729
      , num_top_rules = 0
      , num_weak_rules = 1458
      , alphabet_size = 81
      , total_length = 14580}
    , self = 91
    , parent = Nothing
    , duration = 1.268318988000
    , status = Fail
    , start = 2025-09-04 08:27:33.450082179 UTC
    , finish = 2025-09-04 08:27:34.718401167 UTC
    , thread_cap_info = ("ThreadId 175", 0, False)}
**************************************************
F                            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                            = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
F                            = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 4 , total_length
F                            = 34} , self = 76 , parent = Nothing , duration = 1.401344868000 , status
F                            = Fail , start = 2025-09-04 08:27:31.795418151 UTC , finish = 2025-09-04
F                            08:27:33.196763019 UTC , thread_cap_info = ("ThreadId 101", 0, False)}
F                            
| F                          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                          = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| F                          = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| F                          = 34} , self = 75 , parent = Nothing , duration = 0.700564786000 , status
| F                          = Fail , start = 2025-09-04 08:27:31.815899123 UTC , finish = 2025-09-04
| F                          08:27:32.516463909 UTC , thread_cap_info = ("ThreadId 102", 0, False)}
| F                          
| | F                        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                        = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | F                        = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | F                        = 34} , self = 77 , parent = Nothing , duration = 1.375979901000 , status
| | F                        = Fail , start = 2025-09-04 08:27:31.82810827 UTC , finish = 2025-09-04
| | F                        08:27:33.204088171 UTC , thread_cap_info = ("ThreadId 116", 0, False)}
| | F                        
| | | F                      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | F                      = 6 , num_top_rules = 6 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | F                      = 34} , self = 78 , parent = Nothing , duration = 1.375972988000 , status
| | | F                      = Fail , start = 2025-09-04 08:27:31.82813487 UTC , finish = 2025-09-04
| | | F                      08:27:33.204107858 UTC , thread_cap_info = ("ThreadId 117", 0, False)}
| | | F                      
| | | | F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | F                    , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | F                    = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 1 ,
| | | | F                    num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 3 , total_length
| | | | F                    = 8} , self = 84 , parent = Nothing , duration = 1.568498371000 , status
| | | | F                    = Fail , start = 2025-09-04 08:27:31.836165105 UTC , finish = 2025-09-04
| | | | F                    08:27:33.404663476 UTC , thread_cap_info = ("ThreadId 107", 3, False)}
| | | | F                    
| | | | | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | F                  = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | F                  = 126} , self = 81 , parent = Nothing , duration = 1.458569074000 , status
| | | | | F                  = Fail , start = 2025-09-04 08:27:31.839140552 UTC , finish = 2025-09-04
| | | | | F                  08:27:33.297709626 UTC , thread_cap_info = ("ThreadId 124", 1, False)}
| | | | | F                  
| | | | | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | F                = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | F                = 126} , self = 82 , parent = Nothing , duration = 1.471622552000 , status
| | | | | | F                = Fail , start = 2025-09-04 08:27:31.839144711 UTC , finish = 2025-09-04
| | | | | | F                08:27:33.310767263 UTC , thread_cap_info = ("ThreadId 126", 1, False)}
| | | | | | F                
| | | | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | F              = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 3 , total_length
| | | | | | | F              = 28} , self = 80 , parent = Nothing , duration = 1.399389813000 , status
| | | | | | | F              = Fail , start = 2025-09-04 08:27:31.882248437 UTC , finish = 2025-09-04
| | | | | | | F              08:27:33.28163825 UTC , thread_cap_info = ("ThreadId 135", 3, False)}
| | | | | | | F              
| | | | | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | | F            = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 3 , total_length
| | | | | | | | F            = 28} , self = 79 , parent = Nothing , duration = 1.353919699000 , status
| | | | | | | | F            = Fail , start = 2025-09-04 08:27:31.910193064 UTC , finish = 2025-09-04
| | | | | | | | F            08:27:33.264112763 UTC , thread_cap_info = ("ThreadId 139", 3, False)}
| | | | | | | | F            
| | | | | | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | | F          = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | | | | F          = 126} , self = 83 , parent = Nothing , duration = 1.394041575000 , status
| | | | | | | | | F          = Fail , start = 2025-09-04 08:27:31.962172863 UTC , finish = 2025-09-04
| | | | | | | | | F          08:27:33.356214438 UTC , thread_cap_info = ("ThreadId 145", 0, False)}
| | | | | | | | | F          
| | | | | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | | | F        = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | | | | | F        = 126} , self = 88 , parent = Nothing , duration = 1.584081540000 , status
| | | | | | | | | | F        = Fail , start = 2025-09-04 08:27:31.973870427 UTC , finish = 2025-09-04
| | | | | | | | | | F        08:27:33.557951967 UTC , thread_cap_info = ("ThreadId 146", 0, False)}
| | | | | | | | | | F        
| | | | | | | | | | | S      Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | | | | | | | | | S      , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | | | | | | | | | S      , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | | | | | | | | | S      = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | | | | | | | | | S      , cpf = True}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | | | | S      = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | | | | | | S      = 126} , self = 74 , parent = Nothing , duration = 0.504895239000 , status
| | | | | | | | | | | S      = Success , start = 2025-09-04 08:27:31.990174451 UTC , finish = 2025-09-04
| | | | | | | | | | | S      08:27:32.49506969 UTC , thread_cap_info = ("ThreadId 147", 0, False)}
| | | | | | | | | | | S      
| | | | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 63 , num_strict_rules
| | | | | | | | | | | | F    = 9 , num_top_rules = 0 , num_weak_rules = 54 , alphabet_size = 9 , total_length
| | | | | | | | | | | | F    = 378} , self = 89 , parent = Nothing , duration = 1.582122395000 , status
| | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:27:31.990206997 UTC , finish = 2025-09-04
| | | | | | | | | | | | F    08:27:33.572329392 UTC , thread_cap_info = ("ThreadId 153", 3, False)}
| | | | | | | | | | | | F    
| | | | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 63 , num_strict_rules
| | | | | | | | | | | | | F  = 9 , num_top_rules = 0 , num_weak_rules = 54 , alphabet_size = 9 , total_length
| | | | | | | | | | | | | F  = 378} , self = 87 , parent = Nothing , duration = 1.458853796000 , status
| | | | | | | | | | | | | F  = Fail , start = 2025-09-04 08:27:32.0120673 UTC , finish = 2025-09-04
| | | | | | | | | | | | | F  08:27:33.470921096 UTC , thread_cap_info = ("ThreadId 155", 3, False)}
| | | | | | | | | | | | | F  
| | | | | | | | | | | S | |  
| | | | | | | | | | | F | |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | | | | | | F | |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | | | | | | F | |  = Size { num_rules = 2187 , num_strict_rules = 729 , num_top_rules = 0
| | | | | | | | | | | F | |  , num_weak_rules = 1458 , alphabet_size = 81 , total_length = 14580} ,
| | | | | | | | | | | F | |  self = 85 , parent = Nothing , duration = 0.909664533000 , status = Fail
| | | | | | | | | | | F | |  , start = 2025-09-04 08:27:32.510991698 UTC , finish = 2025-09-04 08:27:33.420656231
| | | | | | | | | | | F | |  UTC , thread_cap_info = ("ThreadId 160", 0, False)}
| | | | | | | | | | | F | |  
| F | | | | | | | | | | | |  
F   | | | | | | | | | | | |  
    F | | | | | | | | | | |  
      F | | | | | | | | | |  
        | | | | F | | | | |  
S       | | | |   | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
S       | | | |   | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
S       | | | |   | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S       | | | |   | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S       | | | |   | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S       | | | |   | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
S       | | | |   | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
S       | | | |   | | | | |  = 3 , total_length = 28} , self = 93 , parent = Nothing , duration = 1.558414388000
S       | | | |   | | | | |  , status = Success , start = 2025-09-04 08:27:33.264150814 UTC , finish
S       | | | |   | | | | |  = 2025-09-04 08:27:34.822565202 UTC , thread_cap_info = ("ThreadId 168",
S       | | | |   | | | | |  3, False)}
S       | | | |   | | | | |  
|       | | | F   | | | | |  
| F     | | |     | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| F     | | |     | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F     | | |     | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F     | | |     | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F     | | |     | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F     | | |     | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| F     | | |     | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| F     | | |     | | | | |  = 3 , total_length = 28} , self = 90 , parent = Nothing , duration = 0.893343351000
| F     | | |     | | | | |  , status = Fail , start = 2025-09-04 08:27:33.29308229 UTC , finish = 2025-09-04
| F     | | |     | | | | |  08:27:34.186425641 UTC , thread_cap_info = ("ThreadId 169", 3, False)}
| F     | | |     | | | | |  
| |     | F |     | | | | |  
| |     |   F     | | | | |  
| |     |         F | | | |  
| |     F           | | | |  
| |                 | F | |  
| | F               |   | |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | F               |   | |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | F               |   | |  = Size { num_rules = 2187 , num_strict_rules = 729 , num_top_rules = 0
| | F               |   | |  , num_weak_rules = 1458 , alphabet_size = 81 , total_length = 14580} ,
| | F               |   | |  self = 91 , parent = Nothing , duration = 1.268318988000 , status = Fail
| | F               |   | |  , start = 2025-09-04 08:27:33.450082179 UTC , finish = 2025-09-04 08:27:34.718401167
| | F               |   | |  UTC , thread_cap_info = ("ThreadId 175", 0, False)}
| | F               |   | |  
| | |               |   | F  
| | |               F   |    
| | |                   F    
| F |                        
| E |                        Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| E |                        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E |                        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E |                        , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E |                        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E |                        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| E |                        , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| E |                        = 3 , total_length = 28} , self = 95 , parent = Nothing , duration = 0.683417775000
| E |                        , status = Except "AsyncCancelled" , start = 2025-09-04 08:27:34.230448209
| E |                        UTC , finish = 2025-09-04 08:27:34.913865984 UTC , thread_cap_info = ("ThreadId
| E |                        179", 3, False)}
| E |                        
| | F                        
S |                          
  E                          
