[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 52 length 207
last 46 length 173
last 52 length 207
last 46 length 173
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
CNF 52 vars 207 clauses
CNF 46 vars 173 clauses
last 441 length 1873
last 428 length 1849
last 342 length 1443
last 46 length 173
last 52 length 207
last 46 length 173
last 441 length 1873
CNF 52 vars 207 clauses
CNF 46 vars 173 clauses
last 52 length 207
last 503 length 2167
last 503 length 2167
last 1176 length 5292
last 1266 length 5318
last 5528 length 26804
last 7703 length 39382
CNF 441 vars 1873 clauses
CNF 428 vars 1849 clauses
CNF 342 vars 1443 clauses
CNF 52 vars 207 clauses
CNF 46 vars 173 clauses
CNF 46 vars 173 clauses
CNF 441 vars 1873 clauses
CNF 52 vars 207 clauses
CNF 503 vars 2167 clauses
CNF 503 vars 2167 clauses
CNF 1176 vars 5292 clauses
CNF 1266 vars 5318 clauses
CNF 5528 vars 26804 clauses
CNF 7703 vars 39382 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1344, clauses: 5196
last 1344 length 5196
CNF 1344 vars 5196 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2137, clauses: 8112
last 2137 length 8112
CNF 2137 vars 8112 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1344, clauses: 5196, status: Unsatisfied, time: 0.608414096s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2137, clauses: 8112, status: Satisfied, time: 0.167829728s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8424, clauses: 34936
last 8424 length 34936
CNF 8424 vars 34936 clauses
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 8 weak rules on 4 letters       weights
SRS with 1 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 5 weak rules on 4 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, a] -> [] {- Input 0 -}
  [] ->= [a] {- Input 1 -}
  [b] ->= [a, b, a, b] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [[a, a], [a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [[a, a], [a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [[b, a], [a, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [[b, a], [a, b]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[a, b], [b, a]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b], [b, b]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, b], [b, a]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, b], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 1/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [[a, a], [a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [[a, a], [a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [[b, a], [a, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, b], [b, a]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b], [b, b]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 0 0 \
                | 0 1 3 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 2 0 \
                | 0 2 2 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[a, a]] ->= [[a, a], [a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [[a, a], [a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [[b, a], [a, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, b], [b, a]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b], [b, b]] ->= [ [a, a] , [a, b] , [b, a] , [a, b] , [b, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
reason
  no strict rules

**************************************************
skeleton: (1/2,2)\TileAllAll{2}(4/8,4)\Weight(1/5,4)\Matrix{\Natural}{3}(0/5,4)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8424, clauses: 34936, status: Satisfied, time: 0.241864638s
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 2.384795086000
  min duration 0.832444455000
  total durat. 13.441022596000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 1
      , alphabet_size = 2
      , total_length = 8}
    , self = 90
    , parent = Nothing
    , duration = 1.443516327000
    , status = Fail
    , start = 2025-09-04 08:24:35.665493609 UTC
    , finish = 2025-09-04 08:24:37.109009936 UTC
    , thread_cap_info = ("ThreadId 155", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 29}
    , self = 87
    , parent = Nothing
    , duration = 1.460043078000
    , status = Fail
    , start = 2025-09-04 08:24:35.642938014 UTC
    , finish = 2025-09-04 08:24:37.102981092 UTC
    , thread_cap_info = ("ThreadId 139", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 3
      , alphabet_size = 2
      , total_length = 23}
    , self = 91
    , parent = Nothing
    , duration = 1.524669402000
    , status = Fail
    , start = 2025-09-04 08:24:35.618609375 UTC
    , finish = 2025-09-04 08:24:37.143278777 UTC
    , thread_cap_info = ("ThreadId 105", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 1
      , alphabet_size = 2
      , total_length = 8}
    , self = 92
    , parent = Nothing
    , duration = 1.529984595000
    , status = Fail
    , start = 2025-09-04 08:24:35.673096259 UTC
    , finish = 2025-09-04 08:24:37.203080854 UTC
    , thread_cap_info = ("ThreadId 158", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 29}
    , self = 94
    , parent = Nothing
    , duration = 1.654668521000
    , status = Fail
    , start = 2025-09-04 08:24:35.633392709 UTC
    , finish = 2025-09-04 08:24:37.28806123 UTC
    , thread_cap_info = ("ThreadId 137", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 8
      , alphabet_size = 4
      , total_length = 60}
    , self = 98
    , parent = Nothing
    , duration = 1.699307862000
    , status = Fail
    , start = 2025-09-04 08:24:35.673328557 UTC
    , finish = 2025-09-04 08:24:37.372636419 UTC
    , thread_cap_info = ("ThreadId 159", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 49
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 48
      , alphabet_size = 16
      , total_length = 312}
    , self = 101
    , parent = Nothing
    , duration = 2.384795086000
    , status = Fail
    , start = 2025-09-04 08:24:35.759269471 UTC
    , finish = 2025-09-04 08:24:38.144064557 UTC
    , thread_cap_info = ("ThreadId 170", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 1.756635769000
  min duration 0.731788382000
  total durat. 12.856514035000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 1
      , alphabet_size = 2
      , total_length = 8}
    , self = 89
    , parent = Nothing
    , duration = 1.443264027000
    , status = Fail
    , start = 2025-09-04 08:24:35.665719831 UTC
    , finish = 2025-09-04 08:24:37.108983858 UTC
    , thread_cap_info = ("ThreadId 156", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 3
      , alphabet_size = 2
      , total_length = 23}
    , self = 88
    , parent = Nothing
    , duration = 1.490293018000
    , status = Fail
    , start = 2025-09-04 08:24:35.618614997 UTC
    , finish = 2025-09-04 08:24:37.108908015 UTC
    , thread_cap_info = ("ThreadId 108", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 1
      , alphabet_size = 2
      , total_length = 8}
    , self = 93
    , parent = Nothing
    , duration = 1.527380651000
    , status = Fail
    , start = 2025-09-04 08:24:35.696966988 UTC
    , finish = 2025-09-04 08:24:37.224347639 UTC
    , thread_cap_info = ("ThreadId 165", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 29}
    , self = 95
    , parent = Nothing
    , duration = 1.635341147000
    , status = Fail
    , start = 2025-09-04 08:24:35.673609744 UTC
    , finish = 2025-09-04 08:24:37.308950891 UTC
    , thread_cap_info = ("ThreadId 143", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 29}
    , self = 96
    , parent = Nothing
    , duration = 1.676802988000
    , status = Fail
    , start = 2025-09-04 08:24:35.653937052 UTC
    , finish = 2025-09-04 08:24:37.33074004 UTC
    , thread_cap_info = ("ThreadId 141", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 8
      , alphabet_size = 4
      , total_length = 60}
    , self = 97
    , parent = Nothing
    , duration = 1.683257449000
    , status = Fail
    , start = 2025-09-04 08:24:35.673331947 UTC
    , finish = 2025-09-04 08:24:37.356589396 UTC
    , thread_cap_info = ("ThreadId 161", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 49
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 48
      , alphabet_size = 16
      , total_length = 312}
    , self = 99
    , parent = Nothing
    , duration = 1.756635769000
    , status = Fail
    , start = 2025-09-04 08:24:35.773687199 UTC
    , finish = 2025-09-04 08:24:37.530322968 UTC
    , thread_cap_info = ("ThreadId 172", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.014341078000
  min duration 1.014341078000
  total durat. 1.014341078000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 29}
    , self = 104
    , parent = Nothing
    , duration = 1.014341078000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:24:37.309601684 UTC
    , finish = 2025-09-04 08:24:38.323942762 UTC
    , thread_cap_info = ("ThreadId 191", 1, False)}
**************************************************
E                                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                                    = True}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules
E                                    = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 6} , self
E                                    = 79 , parent = Nothing , duration = 0.153716849000 , status = Except "AsyncCancelled"
E                                    , start = 2025-09-04 08:24:35.605189998 UTC , finish = 2025-09-04 08:24:35.758906847
E                                    UTC , thread_cap_info = ("ThreadId 20", 1, False)}
E                                    
| F                                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                                  = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| F                                  = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 2 , total_length
| F                                  = 8} , self = 83 , parent = Nothing , duration = 0.731788382000 , status
| F                                  = Fail , start = 2025-09-04 08:24:35.606305796 UTC , finish = 2025-09-04
| F                                  08:24:36.338094178 UTC , thread_cap_info = ("ThreadId 59", 2, False)}
| F                                  
| | F                                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                                = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | F                                = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 2 , total_length
| | F                                = 8} , self = 84 , parent = Nothing , duration = 0.832444455000 , status
| | F                                = Fail , start = 2025-09-04 08:24:35.612499623 UTC , finish = 2025-09-04
| | F                                08:24:36.444944078 UTC , thread_cap_info = ("ThreadId 61", 2, False)}
| | F                                
| | | F                              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                              = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | F                              = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 2 , total_length
| | | F                              = 8} , self = 85 , parent = Nothing , duration = 0.911750604000 , status
| | | F                              = Fail , start = 2025-09-04 08:24:35.612681376 UTC , finish = 2025-09-04
| | | F                              08:24:36.52443198 UTC , thread_cap_info = ("ThreadId 62", 2, False)}
| | | F                              
| | | | F                            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                            = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | F                            = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 2 , total_length
| | | | F                            = 8} , self = 86 , parent = Nothing , duration = 0.911593270000 , status
| | | | F                            = Fail , start = 2025-09-04 08:24:35.612855601 UTC , finish = 2025-09-04
| | | | F                            08:24:36.524448871 UTC , thread_cap_info = ("ThreadId 58", 2, False)}
| | | | F                            
| | | | | F                          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                          = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | F                          = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 2 , total_length
| | | | | F                          = 23} , self = 91 , parent = Nothing , duration = 1.524669402000 , status
| | | | | F                          = Fail , start = 2025-09-04 08:24:35.618609375 UTC , finish = 2025-09-04
| | | | | F                          08:24:37.143278777 UTC , thread_cap_info = ("ThreadId 105", 3, False)}
| | | | | F                          
| | | | | | F                        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F                        = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | F                        = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 2 , total_length
| | | | | | F                        = 23} , self = 88 , parent = Nothing , duration = 1.490293018000 , status
| | | | | | F                        = Fail , start = 2025-09-04 08:24:35.618614997 UTC , finish = 2025-09-04
| | | | | | F                        08:24:37.108908015 UTC , thread_cap_info = ("ThreadId 108", 3, False)}
| | | | | | F                        
| | | | | | | F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | F                      = 1 , num_top_rules = 0 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | | | | F                      = 29} , self = 94 , parent = Nothing , duration = 1.654668521000 , status
| | | | | | | F                      = Fail , start = 2025-09-04 08:24:35.633392709 UTC , finish = 2025-09-04
| | | | | | | F                      08:24:37.28806123 UTC , thread_cap_info = ("ThreadId 137", 1, False)}
| | | | | | | F                      
| | | | | | | | F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | | F                    = 1 , num_top_rules = 0 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | | | | | F                    = 29} , self = 87 , parent = Nothing , duration = 1.460043078000 , status
| | | | | | | | F                    = Fail , start = 2025-09-04 08:24:35.642938014 UTC , finish = 2025-09-04
| | | | | | | | F                    08:24:37.102981092 UTC , thread_cap_info = ("ThreadId 139", 1, False)}
| | | | | | | | F                    
| | | | | | | | | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | | | F                  = 1 , num_top_rules = 0 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | | | | | | F                  = 29} , self = 96 , parent = Nothing , duration = 1.676802988000 , status
| | | | | | | | | F                  = Fail , start = 2025-09-04 08:24:35.653937052 UTC , finish = 2025-09-04
| | | | | | | | | F                  08:24:37.33074004 UTC , thread_cap_info = ("ThreadId 141", 1, False)}
| | | | | | | | | F                  
| | | | | | | | | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | | | | | | F                = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 2 , total_length
| | | | | | | | | | F                = 8} , self = 90 , parent = Nothing , duration = 1.443516327000 , status
| | | | | | | | | | F                = Fail , start = 2025-09-04 08:24:35.665493609 UTC , finish = 2025-09-04
| | | | | | | | | | F                08:24:37.109009936 UTC , thread_cap_info = ("ThreadId 155", 3, False)}
| | | | | | | | | | F                
| | | | | | | | | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | | | | | | | F              = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 2 , total_length
| | | | | | | | | | | F              = 8} , self = 89 , parent = Nothing , duration = 1.443264027000 , status
| | | | | | | | | | | F              = Fail , start = 2025-09-04 08:24:35.665719831 UTC , finish = 2025-09-04
| | | | | | | | | | | F              08:24:37.108983858 UTC , thread_cap_info = ("ThreadId 156", 3, False)}
| | | | | | | | | | | F              
| | | | | | | | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | | | | | | | | F            = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 2 , total_length
| | | | | | | | | | | | F            = 8} , self = 92 , parent = Nothing , duration = 1.529984595000 , status
| | | | | | | | | | | | F            = Fail , start = 2025-09-04 08:24:35.673096259 UTC , finish = 2025-09-04
| | | | | | | | | | | | F            08:24:37.203080854 UTC , thread_cap_info = ("ThreadId 158", 3, False)}
| | | | | | | | | | | | F            
| | | | | | | | | | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | | | | | | | F          = 2 , num_top_rules = 0 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | F          = 60} , self = 98 , parent = Nothing , duration = 1.699307862000 , status
| | | | | | | | | | | | | F          = Fail , start = 2025-09-04 08:24:35.673328557 UTC , finish = 2025-09-04
| | | | | | | | | | | | | F          08:24:37.372636419 UTC , thread_cap_info = ("ThreadId 159", 3, False)}
| | | | | | | | | | | | | F          
| | | | | | | | | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | | | | | | | | F        = 2 , num_top_rules = 0 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | F        = 60} , self = 97 , parent = Nothing , duration = 1.683257449000 , status
| | | | | | | | | | | | | | F        = Fail , start = 2025-09-04 08:24:35.673331947 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | F        08:24:37.356589396 UTC , thread_cap_info = ("ThreadId 161", 3, False)}
| | | | | | | | | | | | | | F        
| | | | | | | | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | | | | | | | | | F      = 1 , num_top_rules = 0 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | | F      = 29} , self = 95 , parent = Nothing , duration = 1.635341147000 , status
| | | | | | | | | | | | | | | F      = Fail , start = 2025-09-04 08:24:35.673609744 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | F      08:24:37.308950891 UTC , thread_cap_info = ("ThreadId 143", 1, False)}
| | | | | | | | | | | | | | | F      
| | | | | | | | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | | | | | | | | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 1 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | | | F    = 8} , self = 93 , parent = Nothing , duration = 1.527380651000 , status
| | | | | | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:24:35.696966988 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | | F    08:24:37.224347639 UTC , thread_cap_info = ("ThreadId 165", 3, False)}
| | | | | | | | | | | | | | | | F    
E | | | | | | | | | | | | | | | |    
F | | | | | | | | | | | | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | | | | | | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | | | | | | | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 49 , num_strict_rules
F | | | | | | | | | | | | | | | |    = 1 , num_top_rules = 0 , num_weak_rules = 48 , alphabet_size = 16 , total_length
F | | | | | | | | | | | | | | | |    = 312} , self = 101 , parent = Nothing , duration = 2.384795086000 , status
F | | | | | | | | | | | | | | | |    = Fail , start = 2025-09-04 08:24:35.759269471 UTC , finish = 2025-09-04
F | | | | | | | | | | | | | | | |    08:24:38.144064557 UTC , thread_cap_info = ("ThreadId 170", 1, False)}
F | | | | | | | | | | | | | | | |    
| | | | | | | | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 49 , num_strict_rules
| | | | | | | | | | | | | | | | | F  = 1 , num_top_rules = 0 , num_weak_rules = 48 , alphabet_size = 16 , total_length
| | | | | | | | | | | | | | | | | F  = 312} , self = 99 , parent = Nothing , duration = 1.756635769000 , status
| | | | | | | | | | | | | | | | | F  = Fail , start = 2025-09-04 08:24:35.773687199 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | | | F  08:24:37.530322968 UTC , thread_cap_info = ("ThreadId 172", 1, False)}
| | | | | | | | | | | | | | | | | F  
| F | | | | | | | | | | | | | | | |  
|   F | | | | | | | | | | | | | | |  
|     F | | | | | | | | | | | | | |  
|       F | | | | | | | | | | | | |  
|         | | | F | | | | | | | | |  
|         | F |   | | | | | | | | |  
|         |   |   | | F | | | | | |  
|         |   |   | F   | | | | | |  
|         F   |   |     | | | | | |  
|             |   |     F | | | | |  
| F           |   |       | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| F           |   |       | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F           |   |       | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F           |   |       | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F           |   |       | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F           |   |       | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| F           |   |       | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| F           |   |       | | | | |  = 2 , total_length = 23} , self = 100 , parent = Nothing , duration = 0.934565027000
| F           |   |       | | | | |  , status = Fail , start = 2025-09-04 08:24:37.203104996 UTC , finish =
| F           |   |       | | | | |  2025-09-04 08:24:38.137670023 UTC , thread_cap_info = ("ThreadId 190",
| F           |   |       | | | | |  3, False)}
| F           |   |       | | | | |  
| |           |   |       | | | F |  
| |           F   |       | | |   |  
| |               |       | | F   |  
| | E             |       | |     |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | E             |       | |     |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E             |       | |     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E             |       | |     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E             |       | |     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E             |       | |     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | E             |       | |     |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 5 , alphabet_size
| | E             |       | |     |  = 4 , total_length = 29} , self = 104 , parent = Nothing , duration = 1.014341078000
| | E             |       | |     |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:24:37.309601684
| | E             |       | |     |  UTC , finish = 2025-09-04 08:24:38.323942762 UTC , thread_cap_info = ("ThreadId
| | E             |       | |     |  191", 1, False)}
| | E             |       | |     |  
| | |             F       | |     |  
| | |                     | F     |  
| | | S                   |       |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | S                   |       |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | S                   |       |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | S                   |       |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S                   |       |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S                   |       |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | S                   |       |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 5 , alphabet_size
| | | S                   |       |  = 4 , total_length = 29} , self = 102 , parent = Nothing , duration = 0.897567452000
| | | S                   |       |  , status = Success , start = 2025-09-04 08:24:37.356676558 UTC , finish
| | | S                   |       |  = 2025-09-04 08:24:38.25424401 UTC , thread_cap_info = ("ThreadId 192",
| | | S                   |       |  1, False)}
| | | S                   |       |  
| | | |                   F       |  
| | | |                           F  
| F | |                              
F   | |                              
    | S                              
    E                                
