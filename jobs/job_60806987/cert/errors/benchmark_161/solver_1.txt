[Info] pool sizes (success) 13 seen 13 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 13 seen 13 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 2479 length 10597
last 442 length 1838
last 2664 length 11430
CNF 442 vars 1838 clauses
CNF 2479 vars 10597 clauses
last 320 length 1372
last 2216 length 9229
CNF 320 vars 1372 clauses
last 2367 length 9982
CNF 2216 vars 9229 clauses
CNF 2367 vars 9982 clauses
CNF 2664 vars 11430 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5752, clauses: 23454
last 5752 length 23454
CNF 5752 vars 23454 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5752, clauses: 23454, status: Satisfied, time: 1.136036108s
last 1955 length 8244
last 1782 length 7434
CNF 1955 vars 8244 clauses
CNF 1782 vars 7434 clauses
last 1777 length 7482
last 1596 length 6662
CNF 1777 vars 7482 clauses
CNF 1596 vars 6662 clauses
last 1599 length 6720
CNF 1599 vars 6720 clauses
last 1410 length 5890
CNF 1410 vars 5890 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3983, clauses: 15933
last 3983 length 15933
CNF 3983 vars 15933 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3983, clauses: 15933, status: Satisfied, time: 0.587379857s
**************************************************
summary
**************************************************
SRS with 3 strict rules and 13 weak rules on 8 letters       weights
SRS with 1 strict rules and 13 weak rules on 8 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 11 weak rules on 7 letters       Matrix   { monotone = Strict, domain = Natural, method = KBO, shape = Full, bits = 1, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 2, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 10 weak rules on 7 letters       Matrix   { monotone = Strict, domain = Natural, method = KBO, shape = Full, bits = 1, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 2, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 9 weak rules on 7 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 9 weak rules on 7 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [d, d, n, n] -> [d, d] {- Input 0 -}
  [d, d, o, o] -> [d, d] {- Input 1 -}
  [o, o, u, u] -> [u, u] {- Input 2 -}
  [t, t, u, u] ->= [t, t, c, c, d, d] {- Input 3 -}
  [d, d, f, f] ->= [f, f, d, d] {- Input 4 -}
  [d, d, g, g] ->= [u, u, g, g] {- Input 5 -}
  [f, f, u, u] ->= [u, u, f, f] {- Input 6 -}
  [n, n, u, u] ->= [u, u] {- Input 7 -}
  [f, f] ->= [f, f, n, n] {- Input 8 -}
  [t, t] ->= [t, t, c, c, n, n] {- Input 9 -}
  [c, c, n, n] ->= [n, n, c, c] {- Input 10 -}
  [c, c, o, o] ->= [o, o, c, c] {- Input 11 -}
  [c, c, o, o] ->= [o, o] {- Input 12 -}
  [c, c, f, f] ->= [f, f, c, c] {- Input 13 -}
  [c, c, u, u] ->= [u, u, c, c] {- Input 14 -}
  [c, c, d, d] ->= [d, d, c, c] {- Input 15 -}
reason
  (d, 0/1)
  (t, 0/1)
  (n, 0/1)
  (g, 0/1)
  (f, 0/1)
  (o, 1/1)
  (u, 0/1)
  (c, 0/1)
   property Termination
has value Just True
for SRS
  [d, d, n, n] -> [d, d] {- Input 0 -}
  [t, t, u, u] ->= [t, t, c, c, d, d] {- Input 3 -}
  [d, d, f, f] ->= [f, f, d, d] {- Input 4 -}
  [d, d, g, g] ->= [u, u, g, g] {- Input 5 -}
  [f, f, u, u] ->= [u, u, f, f] {- Input 6 -}
  [n, n, u, u] ->= [u, u] {- Input 7 -}
  [f, f] ->= [f, f, n, n] {- Input 8 -}
  [t, t] ->= [t, t, c, c, n, n] {- Input 9 -}
  [c, c, n, n] ->= [n, n, c, c] {- Input 10 -}
  [c, c, o, o] ->= [o, o, c, c] {- Input 11 -}
  [c, c, o, o] ->= [o, o] {- Input 12 -}
  [c, c, f, f] ->= [f, f, c, c] {- Input 13 -}
  [c, c, u, u] ->= [u, u, c, c] {- Input 14 -}
  [c, c, d, d] ->= [d, d, c, c] {- Input 15 -}
reason
  ( d
  , St (Corner  / 1 1 1 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( t
  , St (Corner  / 1 1 0 \
                | 0 1 3 |
                \ 0 0 1 /) )
  ( n
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( g
  , St (Corner  / 1 0 0 \
                | 0 0 7 |
                \ 0 0 1 /) )
  ( f
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( o
  , St (Corner  / 1 3 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( u
  , St (Corner  / 1 0 3 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( c
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [d, d, n, n] -> [d, d] {- Input 0 -}
  [d, d, f, f] ->= [f, f, d, d] {- Input 4 -}
  [f, f, u, u] ->= [u, u, f, f] {- Input 6 -}
  [n, n, u, u] ->= [u, u] {- Input 7 -}
  [f, f] ->= [f, f, n, n] {- Input 8 -}
  [t, t] ->= [t, t, c, c, n, n] {- Input 9 -}
  [c, c, n, n] ->= [n, n, c, c] {- Input 10 -}
  [c, c, o, o] ->= [o, o, c, c] {- Input 11 -}
  [c, c, o, o] ->= [o, o] {- Input 12 -}
  [c, c, f, f] ->= [f, f, c, c] {- Input 13 -}
  [c, c, u, u] ->= [u, u, c, c] {- Input 14 -}
  [c, c, d, d] ->= [d, d, c, c] {- Input 15 -}
reason
  ( d
  , Ek 2  / 2 0 \
          \ 0 1 / )
  ( t
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( n
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( f
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( o
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( u
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( c
  , Ek 2  / 1 0 \
          \ 0 1 / )
   property Termination
has value Just True
for SRS
  [d, d, n, n] -> [d, d] {- Input 0 -}
  [f, f, u, u] ->= [u, u, f, f] {- Input 6 -}
  [n, n, u, u] ->= [u, u] {- Input 7 -}
  [f, f] ->= [f, f, n, n] {- Input 8 -}
  [t, t] ->= [t, t, c, c, n, n] {- Input 9 -}
  [c, c, n, n] ->= [n, n, c, c] {- Input 10 -}
  [c, c, o, o] ->= [o, o, c, c] {- Input 11 -}
  [c, c, o, o] ->= [o, o] {- Input 12 -}
  [c, c, f, f] ->= [f, f, c, c] {- Input 13 -}
  [c, c, u, u] ->= [u, u, c, c] {- Input 14 -}
  [c, c, d, d] ->= [d, d, c, c] {- Input 15 -}
reason
  ( d
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( t
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( n
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( f
  , Ek 2  / 2 0 \
          \ 0 1 / )
  ( o
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( u
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( c
  , Ek 2  / 1 0 \
          \ 0 1 / )
   property Termination
has value Just True
for SRS
  [d, d, n, n] -> [d, d] {- Input 0 -}
  [n, n, u, u] ->= [u, u] {- Input 7 -}
  [f, f] ->= [f, f, n, n] {- Input 8 -}
  [t, t] ->= [t, t, c, c, n, n] {- Input 9 -}
  [c, c, n, n] ->= [n, n, c, c] {- Input 10 -}
  [c, c, o, o] ->= [o, o, c, c] {- Input 11 -}
  [c, c, o, o] ->= [o, o] {- Input 12 -}
  [c, c, f, f] ->= [f, f, c, c] {- Input 13 -}
  [c, c, u, u] ->= [u, u, c, c] {- Input 14 -}
  [c, c, d, d] ->= [d, d, c, c] {- Input 15 -}
reason
  ( d
  , St (Corner  / 1 2 0 \
                | 0 1 1 |
                \ 0 0 1 /) )
  ( t
  , St (Corner  / 1 0 3 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( n
  , St (Corner  / 1 0 0 \
                | 0 2 1 |
                \ 0 0 1 /) )
  ( f
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( o
  , St (Corner  / 1 0 2 \
                | 0 0 2 |
                \ 0 0 1 /) )
  ( u
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( c
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [n, n, u, u] ->= [u, u] {- Input 7 -}
  [f, f] ->= [f, f, n, n] {- Input 8 -}
  [t, t] ->= [t, t, c, c, n, n] {- Input 9 -}
  [c, c, n, n] ->= [n, n, c, c] {- Input 10 -}
  [c, c, o, o] ->= [o, o, c, c] {- Input 11 -}
  [c, c, o, o] ->= [o, o] {- Input 12 -}
  [c, c, f, f] ->= [f, f, c, c] {- Input 13 -}
  [c, c, u, u] ->= [u, u, c, c] {- Input 14 -}
  [c, c, d, d] ->= [d, d, c, c] {- Input 15 -}
reason
  no strict rules

**************************************************
skeleton: (3/13,8)\Weight(1/13,8)\Matrix{\Natural}{3}(1/11,7)\Matrix{\Natural}{2}(1/10,7)\Matrix{\Natural}{2}(1/9,7)\Matrix{\Natural}{3}(0/9,7)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.014694677000
  min duration 3.014694677000
  total durat. 3.014694677000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 6584}
    , self = 65
    , parent = Nothing
    , duration = 3.014694677000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:50.83214266 UTC
    , finish = 2025-09-04 07:31:53.846837337 UTC
    , thread_cap_info = ("ThreadId 118", 1, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 3.120433837000
  min duration 2.691008070000
  total durat. 8.911990177000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 6584}
    , self = 71
    , parent = Nothing
    , duration = 2.691008070000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:51.455465105 UTC
    , finish = 2025-09-04 07:31:54.146473175 UTC
    , thread_cap_info = ("ThreadId 125", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 434
      , num_strict_rules = 42
      , num_top_rules = 0
      , num_weak_rules = 392
      , alphabet_size = 49
      , total_length = 3976}
    , self = 109
    , parent = Nothing
    , duration = 3.100548270000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:57.790223947 UTC
    , finish = 2025-09-04 07:32:00.890772217 UTC
    , thread_cap_info = ("ThreadId 202", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 6584}
    , self = 99
    , parent = Nothing
    , duration = 3.120433837000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:54.108807433 UTC
    , finish = 2025-09-04 07:31:57.22924127 UTC
    , thread_cap_info = ("ThreadId 142", 0, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.024119493000
  min duration 3.024119493000
  total durat. 3.024119493000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 6584}
    , self = 66
    , parent = Nothing
    , duration = 3.024119493000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:50.844978068 UTC
    , finish = 2025-09-04 07:31:53.869097561 UTC
    , thread_cap_info = ("ThreadId 119", 1, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 3.198448740000
  min duration 2.700920662000
  total durat. 8.995317166000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 6584}
    , self = 72
    , parent = Nothing
    , duration = 2.700920662000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:51.468155611 UTC
    , finish = 2025-09-04 07:31:54.169076273 UTC
    , thread_cap_info = ("ThreadId 127", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 434
      , num_strict_rules = 42
      , num_top_rules = 0
      , num_weak_rules = 392
      , alphabet_size = 49
      , total_length = 3976}
    , self = 110
    , parent = Nothing
    , duration = 3.095947764000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:57.809301367 UTC
    , finish = 2025-09-04 07:32:00.905249131 UTC
    , thread_cap_info = ("ThreadId 204", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 6584}
    , self = 101
    , parent = Nothing
    , duration = 3.198448740000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:54.108823575 UTC
    , finish = 2025-09-04 07:31:57.307272315 UTC
    , thread_cap_info = ("ThreadId 144", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.775604726000
  min duration 1.581964305000
  total durat. 4.357569031000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 7
      , total_length = 72}
    , self = 107
    , parent = Nothing
    , duration = 1.581964305000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:56.96887411 UTC
    , finish = 2025-09-04 07:31:58.550838415 UTC
    , thread_cap_info = ("ThreadId 194", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 13
      , alphabet_size = 8
      , total_length = 106}
    , self = 62
    , parent = Nothing
    , duration = 2.775604726000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:50.992159175 UTC
    , finish = 2025-09-04 07:31:53.767763901 UTC
    , thread_cap_info = ("ThreadId 120", 0, False)}
Success : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.493643919000
  min duration 1.081174321000
  total durat. 3.574818240000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 7
      , total_length = 72}
    , self = 105
    , parent = Nothing
    , duration = 1.081174321000
    , status = Success
    , start = 2025-09-04 07:31:57.229261438 UTC
    , finish = 2025-09-04 07:31:58.310435759 UTC
    , thread_cap_info = ("ThreadId 197", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 13
      , alphabet_size = 8
      , total_length = 106}
    , self = 60
    , parent = Nothing
    , duration = 2.493643919000
    , status = Success
    , start = 2025-09-04 07:31:51.004962064 UTC
    , finish = 2025-09-04 07:31:53.498605983 UTC
    , thread_cap_info = ("ThreadId 121", 0, False)}
Except "AsyncCancelled" : "Unlabel\n { accept_null_strict = True\n , produce_null_strict = False\n , verbose = False\n , tracing = False}"
  total number 2
  max duration 1.118618216000
  min duration 0.076960773000
  total durat. 1.195578989000
  Info
    { what = "Unlabel\n  { accept_null_strict = True\n  , produce_null_strict = False\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 518
      , num_strict_rules = 42
      , num_top_rules = 0
      , num_weak_rules = 476
      , alphabet_size = 49
      , total_length = 4816}
    , self = 82
    , parent = Nothing
    , duration = 1.118618216000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:54.810662847 UTC
    , finish = 2025-09-04 07:31:55.929281063 UTC
    , thread_cap_info = ("ThreadId 161", 0, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 10
  max duration 2.009705463000
  min duration 0.000099057000
  total durat. 3.958913123000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 896
      , num_strict_rules = 64
      , num_top_rules = 0
      , num_weak_rules = 832
      , alphabet_size = 64
      , total_length = 8576}
    , self = 59
    , parent = Nothing
    , duration = 2.009705463000
    , status = Success
    , start = 2025-09-04 07:31:50.806410012 UTC
    , finish = 2025-09-04 07:31:52.816115475 UTC
    , thread_cap_info = ("ThreadId 111", 0, False)}
**************************************************
E                Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                = True}" , input_size = Size { num_rules = 13 , num_strict_rules = 13 ,
E                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 8 , total_length
E                = 100} , self = 40 , parent = Nothing , duration = 0.155929035000 , status
E                = Except "AsyncCancelled" , start = 2025-09-04 07:31:50.469017752 UTC ,
E                finish = 2025-09-04 07:31:50.624946787 UTC , thread_cap_info = ("ThreadId
E                20", 2, False)}
E                
| F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F              = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| F              = 2 , num_top_rules = 2 , num_weak_rules = 13 , alphabet_size = 9 , total_length
| F              = 118} , self = 54 , parent = Nothing , duration = 0.367760606000 , status
| F              = Fail , start = 2025-09-04 07:31:50.477249029 UTC , finish = 2025-09-04
| F              07:31:50.845009635 UTC , thread_cap_info = ("ThreadId 74", 3, False)}
| F              
| | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | F            = 2 , num_top_rules = 2 , num_weak_rules = 13 , alphabet_size = 9 , total_length
| | F            = 118} , self = 45 , parent = Nothing , duration = 0.220187470000 , status
| | F            = Fail , start = 2025-09-04 07:31:50.491430446 UTC , finish = 2025-09-04
| | F            07:31:50.711617916 UTC , thread_cap_info = ("ThreadId 75", 3, False)}
| | F            
| | | S          Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | S          , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | S          , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | S          = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | S          , cpf = True}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | S          = 1 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size = 8 , total_length
| | | S          = 106} , self = 47 , parent = Nothing , duration = 0.269903896000 , status
| | | S          = Success , start = 2025-09-04 07:31:50.524967295 UTC , finish = 2025-09-04
| | | S          07:31:50.794871191 UTC , thread_cap_info = ("ThreadId 84", 0, False)}
| | | S          
| | | | S        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | S        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | S        = Size { num_rules = 896 , num_strict_rules = 64 , num_top_rules = 0 ,
| | | | S        num_weak_rules = 832 , alphabet_size = 64 , total_length = 8576} , self
| | | | S        = 42 , parent = Nothing , duration = 0.148363975000 , status = Success
| | | | S        , start = 2025-09-04 07:31:50.536095443 UTC , finish = 2025-09-04 07:31:50.684459418
| | | | S        UTC , thread_cap_info = ("ThreadId 92", 1, False)}
| | | | S        
| | | | | E      Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | E      epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | E      = Size { num_rules = 832 , num_strict_rules = 832 , num_top_rules = 0 ,
| | | | | E      num_weak_rules = 0 , alphabet_size = 64 , total_length = 8064} , self =
| | | | | E      44 , parent = Nothing , duration = 0.148548310000 , status = Except "AsyncCancelled"
| | | | | E      , start = 2025-09-04 07:31:50.536406393 UTC , finish = 2025-09-04 07:31:50.684954703
| | | | | E      UTC , thread_cap_info = ("ThreadId 93", 2, False)}
| | | | | E      
| | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | | F    = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | | F    = 20} , self = 48 , parent = Nothing , duration = 0.176963261000 , status
| | | | | | F    = Fail , start = 2025-09-04 07:31:50.623457874 UTC , finish = 2025-09-04
| | | | | | F    07:31:50.800421135 UTC , thread_cap_info = ("ThreadId 101", 3, False)}
| | | | | | F    
E | | | | | |    
F | | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
F | | | | | |    = 1 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size = 8 , total_length
F | | | | | |    = 106} , self = 49 , parent = Nothing , duration = 0.158984914000 , status
F | | | | | |    = Fail , start = 2025-09-04 07:31:50.647489069 UTC , finish = 2025-09-04
F | | | | | |    07:31:50.806473983 UTC , thread_cap_info = ("ThreadId 96", 3, False)}
F | | | | | |    
| | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | F  = 1 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size = 8 , total_length
| | | | | | | F  = 106} , self = 52 , parent = Nothing , duration = 0.166569380000 , status
| | | | | | | F  = Fail , start = 2025-09-04 07:31:50.664961777 UTC , finish = 2025-09-04
| | | | | | | F  07:31:50.831531157 UTC , thread_cap_info = ("ThreadId 97", 3, False)}
| | | | | | | F  
| | | | S | | |  
| | | |   E | |  
| | F |     | |  
| | S |     | |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | S |     | |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | S |     | |  = Size { num_rules = 896 , num_strict_rules = 64 , num_top_rules = 0 ,
| | S |     | |  num_weak_rules = 832 , alphabet_size = 64 , total_length = 8576} , self
| | S |     | |  = 55 , parent = Nothing , duration = 0.459781045000 , status = Success
| | S |     | |  , start = 2025-09-04 07:31:50.712671202 UTC , finish = 2025-09-04 07:31:51.172452247
| | S |     | |  UTC , thread_cap_info = ("ThreadId 106", 3, False)}
| | S |     | |  
| | | S     | |  
| | |       F |  
| | | S       |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | S       |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | S       |  = Size { num_rules = 896 , num_strict_rules = 64 , num_top_rules = 0 ,
| | | S       |  num_weak_rules = 832 , alphabet_size = 64 , total_length = 8576} , self
| | | S       |  = 59 , parent = Nothing , duration = 2.009705463000 , status = Success
| | | S       |  , start = 2025-09-04 07:31:50.806410012 UTC , finish = 2025-09-04 07:31:52.816115475
| | | S       |  UTC , thread_cap_info = ("ThreadId 111", 0, False)}
| | | S       |  
F | | |       |  
  | | |       F  
E | | |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E | | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E | | |          = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
E | | |          = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
E | | |          total_length = 6584} , self = 65 , parent = Nothing , duration = 3.014694677000
E | | |          , status = Except "<<timeout>>" , start = 2025-09-04 07:31:50.83214266
E | | |          UTC , finish = 2025-09-04 07:31:53.846837337 UTC , thread_cap_info = ("ThreadId
E | | |          118", 1, False)}
E | | |          
| | | | E        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E        = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | | | E        = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| | | | E        total_length = 6584} , self = 66 , parent = Nothing , duration = 3.024119493000
| | | | E        , status = Except "<<timeout>>" , start = 2025-09-04 07:31:50.844978068
| | | | E        UTC , finish = 2025-09-04 07:31:53.869097561 UTC , thread_cap_info = ("ThreadId
| | | | E        119", 1, False)}
| | | | E        
| F | | |        
| E | | |        Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| E | | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| E | | |        , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size
| E | | |        = 8 , total_length = 106} , self = 62 , parent = Nothing , duration = 2.775604726000
| E | | |        , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:50.992159175
| E | | |        UTC , finish = 2025-09-04 07:31:53.767763901 UTC , thread_cap_info = ("ThreadId
| E | | |        120", 0, False)}
| E | | |        
| | | | | S      Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | S      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | S      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | S      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | S      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | S      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | | | | S      , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size
| | | | | S      = 8 , total_length = 106} , self = 60 , parent = Nothing , duration = 2.493643919000
| | | | | S      , status = Success , start = 2025-09-04 07:31:51.004962064 UTC , finish
| | | | | S      = 2025-09-04 07:31:53.498605983 UTC , thread_cap_info = ("ThreadId 121",
| | | | | S      0, False)}
| | | | | S      
| | S | | |      
| | F | | |      Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
| | F | | |      = False\n , verbose = False\n , tracing = False}" , input_size = Size {
| | F | | |      num_rules = 692 , num_strict_rules = 56 , num_top_rules = 0 , num_weak_rules
| | F | | |      = 636 , alphabet_size = 62 , total_length = 6584} , self = 56 , parent
| | F | | |      = Nothing , duration = 0.237455345000 , status = Fail , start = 2025-09-04
| | F | | |      07:31:51.17247726 UTC , finish = 2025-09-04 07:31:51.409932605 UTC , thread_cap_info
| | F | | |      = ("ThreadId 122", 3, False)}
| | F | | |      
| | F | | |      
| | E | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | E | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | E | | |      = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| | E | | |      total_length = 6584} , self = 71 , parent = Nothing , duration = 2.691008070000
| | E | | |      , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:51.455465105
| | E | | |      UTC , finish = 2025-09-04 07:31:54.146473175 UTC , thread_cap_info = ("ThreadId
| | E | | |      125", 3, False)}
| | E | | |      
| | | | | | E    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | | | | | E    = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| | | | | | E    total_length = 6584} , self = 72 , parent = Nothing , duration = 2.700920662000
| | | | | | E    , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:51.468155611
| | | | | | E    UTC , finish = 2025-09-04 07:31:54.169076273 UTC , thread_cap_info = ("ThreadId
| | | | | | E    127", 3, False)}
| | | | | | E    
| | | S | | |    
| | | F | | |    Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
| | | F | | |    = False\n , verbose = False\n , tracing = False}" , input_size = Size {
| | | F | | |    num_rules = 692 , num_strict_rules = 56 , num_top_rules = 0 , num_weak_rules
| | | F | | |    = 636 , alphabet_size = 62 , total_length = 6584} , self = 63 , parent
| | | F | | |    = Nothing , duration = 0.283238662000 , status = Fail , start = 2025-09-04
| | | F | | |    07:31:53.484979279 UTC , finish = 2025-09-04 07:31:53.768217941 UTC , thread_cap_info
| | | F | | |    = ("ThreadId 130", 0, False)}
| | | F | | |    
| | | | | S |    
| E | | |   |    
|   | F |   |    
| F |   |   |    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| F |   |   |    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| F |   |   |    = Size { num_rules = 692 , num_strict_rules = 56 , num_top_rules = 0 ,
| F |   |   |    num_weak_rules = 636 , alphabet_size = 62 , total_length = 6584} , self
| F |   |   |    = 68 , parent = Nothing , duration = 0.215259772000 , status = Fail , start
| F |   |   |    = 2025-09-04 07:31:53.825021091 UTC , finish = 2025-09-04 07:31:54.040280863
| F |   |   |    UTC , thread_cap_info = ("ThreadId 133", 0, False)}
| F |   |   |    
E | |   |   |    
  | |   E   |    
  F |       |    
E   |       |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E   |       |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E   |       |    = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
E   |       |    = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
E   |       |    total_length = 6584} , self = 99 , parent = Nothing , duration = 3.120433837000
E   |       |    , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:54.108807433
E   |       |    UTC , finish = 2025-09-04 07:31:57.22924127 UTC , thread_cap_info = ("ThreadId
E   |       |    142", 0, False)}
E   |       |    
| E |       |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| E |       |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E |       |    = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| E |       |    = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| E |       |    total_length = 6584} , self = 101 , parent = Nothing , duration = 3.198448740000
| E |       |    , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:54.108823575
| E |       |    UTC , finish = 2025-09-04 07:31:57.307272315 UTC , thread_cap_info = ("ThreadId
| E |       |    144", 0, False)}
| E |       |    
| | E       |    
| |         E    
| | S            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | S            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | S            = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | S            = 1 , num_top_rules = 0 , num_weak_rules = 11 , alphabet_size = 7 , total_length
| | S            = 88} , self = 75 , parent = Nothing , duration = 0.436069848000 , status
| | S            = Success , start = 2025-09-04 07:31:54.169124888 UTC , finish = 2025-09-04
| | S            07:31:54.605194736 UTC , thread_cap_info = ("ThreadId 152", 0, False)}
| | S            
| | | S          Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | S          , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | S          , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | S          = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | S          , cpf = True}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | S          = 1 , num_top_rules = 0 , num_weak_rules = 11 , alphabet_size = 7 , total_length
| | | S          = 88} , self = 74 , parent = Nothing , duration = 0.159425659000 , status
| | | S          = Success , start = 2025-09-04 07:31:54.189141973 UTC , finish = 2025-09-04
| | | S          07:31:54.348567632 UTC , thread_cap_info = ("ThreadId 153", 0, False)}
| | | S          
| | | | S        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | S        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | S        = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | S        = 1 , num_top_rules = 0 , num_weak_rules = 11 , alphabet_size = 7 , total_length
| | | | S        = 88} , self = 77 , parent = Nothing , duration = 0.471918280000 , status
| | | | S        = Success , start = 2025-09-04 07:31:54.227780353 UTC , finish = 2025-09-04
| | | | S        07:31:54.699698633 UTC , thread_cap_info = ("ThreadId 154", 0, False)}
| | | | S        
| | | S |        
| | | S |        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | S |        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | S |        = Size { num_rules = 588 , num_strict_rules = 49 , num_top_rules = 0 ,
| | | S |        num_weak_rules = 539 , alphabet_size = 49 , total_length = 5488} , self
| | | S |        = 80 , parent = Nothing , duration = 0.434980649000 , status = Success
| | | S |        , start = 2025-09-04 07:31:54.368050659 UTC , finish = 2025-09-04 07:31:54.803031308
| | | S |        UTC , thread_cap_info = ("ThreadId 156", 0, False)}
| | | S |        
| | S | |        
| |   | S        
| |   S          
| | E            Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
| | E            = False\n , verbose = False\n , tracing = False}" , input_size = Size {
| | E            num_rules = 518 , num_strict_rules = 42 , num_top_rules = 0 , num_weak_rules
| | E            = 476 , alphabet_size = 49 , total_length = 4816} , self = 82 , parent
| | E            = Nothing , duration = 1.118618216000 , status = Except "AsyncCancelled"
| | E            , start = 2025-09-04 07:31:54.810662847 UTC , finish = 2025-09-04 07:31:55.929281063
| | E            UTC , thread_cap_info = ("ThreadId 161", 0, False)}
| | E            
| | E            
| | S            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | S            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | S            = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | S            = 1 , num_top_rules = 0 , num_weak_rules = 10 , alphabet_size = 7 , total_length
| | S            = 80} , self = 86 , parent = Nothing , duration = 0.386927865000 , status
| | S            = Success , start = 2025-09-04 07:31:55.9491683 UTC , finish = 2025-09-04
| | S            07:31:56.336096165 UTC , thread_cap_info = ("ThreadId 170", 0, False)}
| | S            
| | | S          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | S          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | S          = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | S          = 1 , num_top_rules = 0 , num_weak_rules = 10 , alphabet_size = 7 , total_length
| | | S          = 80} , self = 88 , parent = Nothing , duration = 0.440103316000 , status
| | | S          = Success , start = 2025-09-04 07:31:55.969178812 UTC , finish = 2025-09-04
| | | S          07:31:56.409282128 UTC , thread_cap_info = ("ThreadId 171", 0, False)}
| | | S          
| | | | S        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | S        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | S        = Size { num_rules = 539 , num_strict_rules = 49 , num_top_rules = 0 ,
| | | | S        num_weak_rules = 490 , alphabet_size = 49 , total_length = 4998} , self
| | | | S        = 91 , parent = Nothing , duration = 0.459189747000 , status = Success
| | | | S        , start = 2025-09-04 07:31:56.089296521 UTC , finish = 2025-09-04 07:31:56.548486268
| | | | S        UTC , thread_cap_info = ("ThreadId 173", 0, False)}
| | | | S        
| | S | |        
| |   S |        
| |     S        
| | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F            = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | F            = 1 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 7 , total_length
| | F            = 72} , self = 97 , parent = Nothing , duration = 0.251641966000 , status
| | F            = Fail , start = 2025-09-04 07:31:56.665010581 UTC , finish = 2025-09-04
| | F            07:31:56.916652547 UTC , thread_cap_info = ("ThreadId 188", 0, False)}
| | F            
| | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | F          = 1 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 7 , total_length
| | | F          = 72} , self = 98 , parent = Nothing , duration = 0.401945394000 , status
| | | F          = Fail , start = 2025-09-04 07:31:56.730477266 UTC , finish = 2025-09-04
| | | F          07:31:57.13242266 UTC , thread_cap_info = ("ThreadId 190", 0, False)}
| | | F          
| | | | S        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | S        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | S        = Size { num_rules = 490 , num_strict_rules = 49 , num_top_rules = 0 ,
| | | | S        num_weak_rules = 441 , alphabet_size = 49 , total_length = 4508} , self
| | | | S        = 100 , parent = Nothing , duration = 0.435076453000 , status = Success
| | | | S        , start = 2025-09-04 07:31:56.810913408 UTC , finish = 2025-09-04 07:31:57.245989861
| | | | S        UTC , thread_cap_info = ("ThreadId 191", 0, False)}
| | | | S        
| | F | |        
| | E | |        Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | E | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | E | |        , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size
| | E | |        = 7 , total_length = 72} , self = 107 , parent = Nothing , duration = 1.581964305000
| | E | |        , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:56.96887411
| | E | |        UTC , finish = 2025-09-04 07:31:58.550838415 UTC , thread_cap_info = ("ThreadId
| | E | |        194", 0, False)}
| | E | |        
| | | F |        
E | |   |        
S | |   |        Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
S | |   |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
S | |   |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
S | |   |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S | |   |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S | |   |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
S | |   |        , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size
S | |   |        = 7 , total_length = 72} , self = 105 , parent = Nothing , duration = 1.081174321000
S | |   |        , status = Success , start = 2025-09-04 07:31:57.229261438 UTC , finish
S | |   |        = 2025-09-04 07:31:58.310435759 UTC , thread_cap_info = ("ThreadId 197",
S | |   |        0, False)}
S | |   |        
| | |   S        
| E |            
| F |            Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| F |            epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| F |            = Size { num_rules = 434 , num_strict_rules = 42 , num_top_rules = 0 ,
| F |            num_weak_rules = 392 , alphabet_size = 49 , total_length = 3976} , self
| F |            = 103 , parent = Nothing , duration = 0.108846843000 , status = Fail ,
| F |            start = 2025-09-04 07:31:57.547260548 UTC , finish = 2025-09-04 07:31:57.656107391
| F |            UTC , thread_cap_info = ("ThreadId 199", 0, False)}
| F |            
| F |            
| E |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E |            = False\n , verbose = False}" , input_size = Size { num_rules = 434 , num_strict_rules
| E |            = 42 , num_top_rules = 0 , num_weak_rules = 392 , alphabet_size = 49 ,
| E |            total_length = 3976} , self = 109 , parent = Nothing , duration = 3.100548270000
| E |            , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:57.790223947
| E |            UTC , finish = 2025-09-04 07:32:00.890772217 UTC , thread_cap_info = ("ThreadId
| E |            202", 0, False)}
| E |            
| | | E          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E          = False\n , verbose = False}" , input_size = Size { num_rules = 434 , num_strict_rules
| | | E          = 42 , num_top_rules = 0 , num_weak_rules = 392 , alphabet_size = 49 ,
| | | E          total_length = 3976} , self = 110 , parent = Nothing , duration = 3.095947764000
| | | E          , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:57.809301367
| | | E          UTC , finish = 2025-09-04 07:32:00.905249131 UTC , thread_cap_info = ("ThreadId
| | | E          204", 0, False)}
| | | E          
S | | |          
  | E |          
  E   |          
      E          
