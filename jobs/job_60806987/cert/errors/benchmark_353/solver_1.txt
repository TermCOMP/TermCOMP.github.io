[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 502 length 2293
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 592 length 2687
CNF 592 vars 2687 clauses
CNF 502 vars 2293 clauses
last 504 length 2263
CNF 504 vars 2263 clauses
last 674 length 3337
CNF 674 vars 3337 clauses
last 403 length 1717
CNF 403 vars 1717 clauses
last 435 length 1866
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2915, clauses: 10698
last 2915 length 10698
CNF 2915 vars 10698 clauses
CNF 435 vars 1866 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2915, clauses: 10698, status: Unsatisfied, time: 0.070162297s
last 1308 length 5907
last 1071 length 4547
last 1330 length 6237
last 1258 length 5689
last 1071 length 4547
CNF 1308 vars 5907 clauses
last 1258 length 5689
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2079, clauses: 7890
CNF 1330 vars 6237 clauses
CNF 1071 vars 4547 clauses
CNF 1258 vars 5689 clauses
last 4056 length 17575
last 5404 length 24034
CNF 1071 vars 4547 clauses
last 2079 length 7890
CNF 1258 vars 5689 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13827, clauses: 57266
CNF 2079 vars 7890 clauses
last 13827 length 57266
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5116, clauses: 19399
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2079, clauses: 7890, status: Unsatisfied, time: 2.187128241s
CNF 13827 vars 57266 clauses
last 5116 length 19399
CNF 5116 vars 19399 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13827, clauses: 57266, status: Satisfied, time: 3.089150711s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5116, clauses: 19399, status: Unsatisfied, time: 2.388793988s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 3 letters       mirror
SRS with 1 strict rules and 2 weak rules on 3 letters       context
SRS with 1 strict rules and 6 weak rules on 3 letters       mirror
SRS with 1 strict rules and 6 weak rules on 3 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, c] -> [c] {- Input 0 -}
  [a, b] ->= [] {- Input 1 -}
  [] ->= [b, a, a] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [c, b] -> [c] {- Mirror (Input 0) -}
  [b, a] ->= [] {- Mirror (Input 1) -}
  [] ->= [a, a, b] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [c, b] -> [c] {- Mirror (Input 0) -}
  [a, b, a] ->= [a] {- Mirror (Input 1) -}
  [b, b, a] ->= [b] {- Mirror (Input 1) -}
  [c, b, a] ->= [c] {- Mirror (Input 1) -}
  [a] ->= [a, a, a, b] {- Mirror (Input 2) -}
  [b] ->= [b, a, a, b] {- Mirror (Input 2) -}
  [c] ->= [c, a, a, b] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, c] -> [c] {- Input 0 -}
  [a, b, a] ->= [a] {- Input 1 -}
  [a, b, b] ->= [b] {- Input 1 -}
  [a, b, c] ->= [c] {- Input 1 -}
  [a] ->= [b, a, a, a] {- Input 2 -}
  [b] ->= [b, a, a, b] {- Input 2 -}
  [c] ->= [b, a, a, c] {- Input 2 -}
reason
  ( a
  , St  / 0A -2A -1A \
        | -  -1A -   |
        \ -  -2A -   / )
  ( b
  , St  / 0A 0A 2A  \
        | -  1A 0A  |
        \ -  0A -1A / )
  ( c
  , St  / 0A  - -2A \
        | 0A  - -1A |
        \ -1A - -2A / )
   property Termination
has value Just True
for SRS
  [a, b, a] ->= [a] {- Input 1 -}
  [a, b, b] ->= [b] {- Input 1 -}
  [a, b, c] ->= [c] {- Input 1 -}
  [a] ->= [b, a, a, a] {- Input 2 -}
  [b] ->= [b, a, a, b] {- Input 2 -}
  [c] ->= [b, a, a, c] {- Input 2 -}
reason
  no strict rules

**************************************************
skeleton: \Mirror(1/2,3)\Context\Mirror(1/6,3)\Matrix{\ArcticBZ}{3}(0/6,3)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 2.473647001000
  min duration 0.031875935000
  total durat. 4.992151530000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 26
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 100}
    , self = 83
    , parent = Nothing
    , duration = 2.147954490000
    , status = Fail
    , start = 2025-09-04 08:26:06.395282519 UTC
    , finish = 2025-09-04 08:26:08.543237009 UTC
    , thread_cap_info = ("ThreadId 146", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 69}
    , self = 88
    , parent = Nothing
    , duration = 2.473647001000
    , status = Fail
    , start = 2025-09-04 08:26:06.391212986 UTC
    , finish = 2025-09-04 08:26:08.864859987 UTC
    , thread_cap_info = ("ThreadId 148", 1, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 4.594004835000
  min duration 0.048155322000
  total durat. 11.123635377000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 39
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 36
      , alphabet_size = 9
      , total_length = 249}
    , self = 90
    , parent = Nothing
    , duration = 3.136362900000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:26:06.858663746 UTC
    , finish = 2025-09-04 08:26:09.995026646 UTC
    , thread_cap_info = ("ThreadId 161", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 69}
    , self = 91
    , parent = Nothing
    , duration = 3.345112320000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:26:06.896545477 UTC
    , finish = 2025-09-04 08:26:10.241657797 UTC
    , thread_cap_info = ("ThreadId 165", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 438
      , num_strict_rules = 81
      , num_top_rules = 0
      , num_weak_rules = 357
      , alphabet_size = 81
      , total_length = 2886}
    , self = 96
    , parent = Nothing
    , duration = 4.594004835000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:26:08.744433425 UTC
    , finish = 2025-09-04 08:26:13.33843826 UTC
    , thread_cap_info = ("ThreadId 178", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 2.585064487000
  min duration 0.033712774000
  total durat. 5.088185656000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 26
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 100}
    , self = 87
    , parent = Nothing
    , duration = 2.340621192000
    , status = Fail
    , start = 2025-09-04 08:26:06.414870188 UTC
    , finish = 2025-09-04 08:26:08.75549138 UTC
    , thread_cap_info = ("ThreadId 147", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 69}
    , self = 89
    , parent = Nothing
    , duration = 2.585064487000
    , status = Fail
    , start = 2025-09-04 08:26:06.395289044 UTC
    , finish = 2025-09-04 08:26:08.980353531 UTC
    , thread_cap_info = ("ThreadId 149", 1, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 4.686997678000
  min duration 0.034251678000
  total durat. 11.715668291000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 39
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 36
      , alphabet_size = 9
      , total_length = 249}
    , self = 92
    , parent = Nothing
    , duration = 3.447829458000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:26:06.874935246 UTC
    , finish = 2025-09-04 08:26:10.322764704 UTC
    , thread_cap_info = ("ThreadId 163", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 69}
    , self = 93
    , parent = Nothing
    , duration = 3.546589477000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:26:06.918193234 UTC
    , finish = 2025-09-04 08:26:10.464782711 UTC
    , thread_cap_info = ("ThreadId 167", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 438
      , num_strict_rules = 81
      , num_top_rules = 0
      , num_weak_rules = 357
      , alphabet_size = 81
      , total_length = 2886}
    , self = 97
    , parent = Nothing
    , duration = 4.686997678000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:26:08.755475805 UTC
    , finish = 2025-09-04 08:26:13.442473483 UTC
    , thread_cap_info = ("ThreadId 180", 1, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 7.106241384000
  min duration 7.106241384000
  total durat. 7.106241384000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 30}
    , self = 98
    , parent = Nothing
    , duration = 7.106241384000
    , status = Success
    , start = 2025-09-04 08:26:06.51931866 UTC
    , finish = 2025-09-04 08:26:13.625560044 UTC
    , thread_cap_info = ("ThreadId 154", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.241103431000
  min duration 2.241103431000
  total durat. 2.241103431000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 30}
    , self = 101
    , parent = Nothing
    , duration = 2.241103431000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:26:11.418416816 UTC
    , finish = 2025-09-04 08:26:13.659520247 UTC
    , thread_cap_info = ("ThreadId 192", 1, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 4.637854336000
  min duration 3.635967102000
  total durat. 8.273821438000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 15
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 69}
    , self = 100
    , parent = Nothing
    , duration = 3.635967102000
    , status = Fail
    , start = 2025-09-04 08:26:09.995048054 UTC
    , finish = 2025-09-04 08:26:13.631015156 UTC
    , thread_cap_info = ("ThreadId 185", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 30}
    , self = 95
    , parent = Nothing
    , duration = 4.637854336000
    , status = Fail
    , start = 2025-09-04 08:26:06.67843929 UTC
    , finish = 2025-09-04 08:26:11.316293626 UTC
    , thread_cap_info = ("ThreadId 160", 1, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 4.528678829000
  min duration 4.528678829000
  total durat. 4.528678829000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 3
      , total_length = 8}
    , self = 94
    , parent = Nothing
    , duration = 4.528678829000
    , status = Fail
    , start = 2025-09-04 08:26:06.30269678 UTC
    , finish = 2025-09-04 08:26:10.831375609 UTC
    , thread_cap_info = ("ThreadId 103", 1, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 4
  max duration 1.666013696000
  min duration 0.000216197000
  total durat. 1.701961420000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 1215
      , num_strict_rules = 243
      , num_top_rules = 0
      , num_weak_rules = 972
      , alphabet_size = 81
      , total_length = 8019}
    , self = 82
    , parent = Nothing
    , duration = 1.666013696000
    , status = Success
    , start = 2025-09-04 08:26:06.614485346 UTC
    , finish = 2025-09-04 08:26:08.280499042 UTC
    , thread_cap_info = ("ThreadId 156", 1, False)}
**************************************************
F                        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                        , closure = Backward\n , start_strict_only = True\n , max_closure_length
F                        = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                        Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                        8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                        = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                        ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                        1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                        = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 1 ,
F                        num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 3 , total_length
F                        = 8} , self = 94 , parent = Nothing , duration = 4.528678829000 , status
F                        = Fail , start = 2025-09-04 08:26:06.30269678 UTC , finish = 2025-09-04
F                        08:26:10.831375609 UTC , thread_cap_info = ("ThreadId 103", 1, False)}
F                        
| F                      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F                      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F                      = 12 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 ,
| F                      alphabet_size = 4 , total_length = 46} , self = 79 , parent = Nothing ,
| F                      duration = 0.343560150000 , status = Fail , start = 2025-09-04 08:26:06.334834809
| F                      UTC , finish = 2025-09-04 08:26:06.678394959 UTC , thread_cap_info = ("ThreadId
| F                      122", 2, False)}
| F                      
| | F                    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | F                    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | F                    = Size { num_rules = 26 , num_strict_rules = 18 , num_top_rules = 18 ,
| | F                    num_weak_rules = 8 , alphabet_size = 8 , total_length = 100} , self = 73
| | F                    , parent = Nothing , duration = 0.102408571000 , status = Fail , start
| | F                    = 2025-09-04 08:26:06.355106232 UTC , finish = 2025-09-04 08:26:06.457514803
| | F                    UTC , thread_cap_info = ("ThreadId 119", 0, False)}
| | F                    
| | | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | F                  = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 3 , total_length
| | | F                  = 30} , self = 77 , parent = Nothing , duration = 0.258788090000 , status
| | | F                  = Fail , start = 2025-09-04 08:26:06.355677396 UTC , finish = 2025-09-04
| | | F                  08:26:06.614465486 UTC , thread_cap_info = ("ThreadId 134", 1, False)}
| | | F                  
| | | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | | F                = 3 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | F                = 69} , self = 88 , parent = Nothing , duration = 2.473647001000 , status
| | | | F                = Fail , start = 2025-09-04 08:26:06.391212986 UTC , finish = 2025-09-04
| | | | F                08:26:08.864859987 UTC , thread_cap_info = ("ThreadId 148", 1, False)}
| | | | F                
| | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 26 , num_strict_rules
| | | | | F              = 18 , num_top_rules = 18 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | | F              = 100} , self = 83 , parent = Nothing , duration = 2.147954490000 , status
| | | | | F              = Fail , start = 2025-09-04 08:26:06.395282519 UTC , finish = 2025-09-04
| | | | | F              08:26:08.543237009 UTC , thread_cap_info = ("ThreadId 146", 0, False)}
| | | | | F              
| | | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | | | | F            = 3 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | | F            = 69} , self = 89 , parent = Nothing , duration = 2.585064487000 , status
| | | | | | F            = Fail , start = 2025-09-04 08:26:06.395289044 UTC , finish = 2025-09-04
| | | | | | F            08:26:08.980353531 UTC , thread_cap_info = ("ThreadId 149", 1, False)}
| | | | | | F            
| | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 26 , num_strict_rules
| | | | | | | F          = 18 , num_top_rules = 18 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | | | | F          = 100} , self = 87 , parent = Nothing , duration = 2.340621192000 , status
| | | | | | | F          = Fail , start = 2025-09-04 08:26:06.414870188 UTC , finish = 2025-09-04
| | | | | | | F          08:26:08.75549138 UTC , thread_cap_info = ("ThreadId 147", 0, False)}
| | | | | | | F          
| | | | | | | | S        Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | | | | | | S        , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | | | | | | S        , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | | | | | | S        = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | | | | | | S        , cpf = True}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | | | | | | S        = 3 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | | | | S        = 69} , self = 76 , parent = Nothing , duration = 0.192941156000 , status
| | | | | | | | S        = Success , start = 2025-09-04 08:26:06.421467369 UTC , finish = 2025-09-04
| | | | | | | | S        08:26:06.614408525 UTC , thread_cap_info = ("ThreadId 145", 1, False)}
| | | | | | | | S        
| | F | | | | | |        
| | S | | | | | |        Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | S | | | | | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S | | | | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S | | | | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S | | | | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S | | | | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | S | | | | | |        , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | S | | | | | |        = 3 , total_length = 30} , self = 98 , parent = Nothing , duration = 7.106241384000
| | S | | | | | |        , status = Success , start = 2025-09-04 08:26:06.51931866 UTC , finish
| | S | | | | | |        = 2025-09-04 08:26:13.625560044 UTC , thread_cap_info = ("ThreadId 154",
| | S | | | | | |        1, False)}
| | S | | | | | |        
| | | | | | | | S        
| | | F | | | |          
| | | S | | | |          Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | S | | | |          epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | S | | | |          = Size { num_rules = 1215 , num_strict_rules = 243 , num_top_rules = 0
| | | S | | | |          , num_weak_rules = 972 , alphabet_size = 81 , total_length = 8019} , self
| | | S | | | |          = 82 , parent = Nothing , duration = 1.666013696000 , status = Success
| | | S | | | |          , start = 2025-09-04 08:26:06.614485346 UTC , finish = 2025-09-04 08:26:08.280499042
| | | S | | | |          UTC , thread_cap_info = ("ThreadId 156", 1, False)}
| | | S | | | |          
| F | | | | | |          
| F | | | | | |          Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| F | | | | | |          = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F | | | | | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F | | | | | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F | | | | | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F | | | | | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| F | | | | | |          , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| F | | | | | |          = 3 , total_length = 30} , self = 95 , parent = Nothing , duration = 4.637854336000
| F | | | | | |          , status = Fail , start = 2025-09-04 08:26:06.67843929 UTC , finish = 2025-09-04
| F | | | | | |          08:26:11.316293626 UTC , thread_cap_info = ("ThreadId 160", 1, False)}
| F | | | | | |          
| | | | | | | | E        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E        = False\n , verbose = False}" , input_size = Size { num_rules = 39 , num_strict_rules
| | | | | | | | E        = 3 , num_top_rules = 0 , num_weak_rules = 36 , alphabet_size = 9 , total_length
| | | | | | | | E        = 249} , self = 90 , parent = Nothing , duration = 3.136362900000 , status
| | | | | | | | E        = Except "AsyncCancelled" , start = 2025-09-04 08:26:06.858663746 UTC ,
| | | | | | | | E        finish = 2025-09-04 08:26:09.995026646 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E        161", 1, False)}
| | | | | | | | E        
| | | | | | | | | E      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 39 , num_strict_rules
| | | | | | | | | E      = 3 , num_top_rules = 0 , num_weak_rules = 36 , alphabet_size = 9 , total_length
| | | | | | | | | E      = 249} , self = 92 , parent = Nothing , duration = 3.447829458000 , status
| | | | | | | | | E      = Except "AsyncCancelled" , start = 2025-09-04 08:26:06.874935246 UTC ,
| | | | | | | | | E      finish = 2025-09-04 08:26:10.322764704 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E      163", 1, False)}
| | | | | | | | | E      
| | | | | | | | | | E    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | | | | | | | | E    = 3 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | | | | | | E    = 69} , self = 91 , parent = Nothing , duration = 3.345112320000 , status
| | | | | | | | | | E    = Except "AsyncCancelled" , start = 2025-09-04 08:26:06.896545477 UTC ,
| | | | | | | | | | E    finish = 2025-09-04 08:26:10.241657797 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | E    165", 1, False)}
| | | | | | | | | | E    
| | | | | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 15 , num_strict_rules
| | | | | | | | | | | E  = 3 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | | | | | | | E  = 69} , self = 93 , parent = Nothing , duration = 3.546589477000 , status
| | | | | | | | | | | E  = Except "AsyncCancelled" , start = 2025-09-04 08:26:06.918193234 UTC ,
| | | | | | | | | | | E  finish = 2025-09-04 08:26:10.464782711 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | E  167", 1, False)}
| | | | | | | | | | | E  
| | | S | | | | | | | |  
| | | F | | | | | | | |  Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
| | | F | | | | | | | |  = False\n , verbose = False\n , tracing = False}" , input_size = Size {
| | | F | | | | | | | |  num_rules = 438 , num_strict_rules = 81 , num_top_rules = 0 , num_weak_rules
| | | F | | | | | | | |  = 357 , alphabet_size = 81 , total_length = 2886} , self = 84 , parent
| | | F | | | | | | | |  = Nothing , duration = 0.340561405000 , status = Fail , start = 2025-09-04
| | | F | | | | | | | |  08:26:08.337564386 UTC , finish = 2025-09-04 08:26:08.678125791 UTC , thread_cap_info
| | | F | | | | | | | |  = ("ThreadId 173", 1, False)}
| | | F | | | | | | | |  
| | | | | F | | | | | |  
| | | F |   | | | | | |  
| | | E |   | | | | | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | E |   | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E |   | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 438 , num_strict_rules
| | | E |   | | | | | |  = 81 , num_top_rules = 0 , num_weak_rules = 357 , alphabet_size = 81 ,
| | | E |   | | | | | |  total_length = 2886} , self = 96 , parent = Nothing , duration = 4.594004835000
| | | E |   | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:26:08.744433425
| | | E |   | | | | | |  UTC , finish = 2025-09-04 08:26:13.33843826 UTC , thread_cap_info = ("ThreadId
| | | E |   | | | | | |  178", 1, False)}
| | | E |   | | | | | |  
| | | | | E | | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 438 , num_strict_rules
| | | | | E | | | | | |  = 81 , num_top_rules = 0 , num_weak_rules = 357 , alphabet_size = 81 ,
| | | | | E | | | | | |  total_length = 2886} , self = 97 , parent = Nothing , duration = 4.686997678000
| | | | | E | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:26:08.755475805
| | | | | E | | | | | |  UTC , finish = 2025-09-04 08:26:13.442473483 UTC , thread_cap_info = ("ThreadId
| | | | | E | | | | | |  180", 1, False)}
| | | | | E | | | | | |  
| | | | | | | F | | | |  
| | | | F | |   | | | |  
| | | |   | F   | | | |  
| | | |   |     E | | |  
| | | | F |       | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | F |       | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | F |       | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | F |       | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F |       | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F |       | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 15
| | | | F |       | | |  , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size
| | | | F |       | | |  = 9 , total_length = 69} , self = 100 , parent = Nothing , duration = 3.635967102000
| | | | F |       | | |  , status = Fail , start = 2025-09-04 08:26:09.995048054 UTC , finish =
| | | | F |       | | |  2025-09-04 08:26:13.631015156 UTC , thread_cap_info = ("ThreadId 185",
| | | | F |       | | |  1, False)}
| | | | F |       | | |  
| | | | | |       | E |  
| | | | | |       E   |  
| | | | | |           E  
F | | | | |              
  F | | | |              
E   | | | |              Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E   | | | |              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E   | | | |              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E   | | | |              , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E   | | | |              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E   | | | |              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
E   | | | |              , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
E   | | | |              = 3 , total_length = 30} , self = 101 , parent = Nothing , duration = 2.241103431000
E   | | | |              , status = Except "AsyncCancelled" , start = 2025-09-04 08:26:11.418416816
E   | | | |              UTC , finish = 2025-09-04 08:26:13.659520247 UTC , thread_cap_info = ("ThreadId
E   | | | |              192", 1, False)}
E   | | | |              
|   | E | |              
|   |   | E              
|   S   |                
|       F                
E                        
