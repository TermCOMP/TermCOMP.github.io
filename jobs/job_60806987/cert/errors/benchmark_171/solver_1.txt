last 375 length 1446
last 398 length 1568
last 12 length 33
CNF 398 vars 1568 clauses
CNF 375 vars 1446 clauses
CNF 12 vars 33 clauses
last 12 length 33
CNF 12 vars 33 clauses
[Info] pool sizes (success) 9 seen 9 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 9 seen 9 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 197, clauses: 663
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 81, clauses: 235
last 197 length 663
last 683 length 2714
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2468, clauses: 8562
last 81 length 235
last 618 length 2413
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8107, clauses: 33159
CNF 197 vars 663 clauses
CNF 683 vars 2714 clauses
last 2468 length 8562
CNF 81 vars 235 clauses
CNF 618 vars 2413 clauses
last 8107 length 33159
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 197, clauses: 663, status: Unsatisfied, time: 1.17475177s
CNF 2468 vars 8562 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 81, clauses: 235, status: Unsatisfied, time: 1.633588585s
CNF 8107 vars 33159 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2468, clauses: 8562, status: Unsatisfied, time: 1.524532336s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4404, clauses: 16172
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8107, clauses: 33159, status: Unsatisfied, time: 1.262606948s
last 4404 length 16172
CNF 4404 vars 16172 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4404, clauses: 16172, status: Satisfied, time: 0.280146849s
last 545 length 2151
CNF 545 vars 2151 clauses
last 487 length 1886
CNF 487 vars 1886 clauses
last 443 length 1712
last 487 length 1919
CNF 487 vars 1919 clauses
CNF 443 vars 1712 clauses
last 399 length 1538
last 429 length 1687
CNF 399 vars 1538 clauses
CNF 429 vars 1687 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2959, clauses: 10641
last 2959 length 10641
CNF 2959 vars 10641 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2959, clauses: 10641, status: Satisfied, time: 0.228297323s
**************************************************
summary
**************************************************
SRS with 7 strict rules and 9 weak rules on 8 letters       weights
SRS with 5 strict rules and 9 weak rules on 8 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 9 weak rules on 7 letters       weights
SRS with 3 strict rules and 9 weak rules on 7 letters       Matrix   { monotone = Strict, domain = Natural, method = KBO, shape = Full, bits = 1, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 2, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 2 strict rules and 9 weak rules on 7 letters       Matrix   { monotone = Strict, domain = Natural, method = KBO, shape = Full, bits = 1, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 2, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 9 weak rules on 7 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 9 weak rules on 7 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [t, u] -> [t, c, d] {- Input 0 -}
  [d, f] -> [f, d] {- Input 1 -}
  [d, g] -> [u, g] {- Input 2 -}
  [f, u] -> [u, f] {- Input 3 -}
  [d, n] -> [d] {- Input 4 -}
  [d, o] -> [d] {- Input 5 -}
  [o, u] -> [u] {- Input 6 -}
  [n, u] ->= [u] {- Input 7 -}
  [f] ->= [f, n] {- Input 8 -}
  [t] ->= [t, c, n] {- Input 9 -}
  [c, n] ->= [n, c] {- Input 10 -}
  [c, o] ->= [o, c] {- Input 11 -}
  [c, o] ->= [o] {- Input 12 -}
  [c, f] ->= [f, c] {- Input 13 -}
  [c, u] ->= [u, c] {- Input 14 -}
  [c, d] ->= [d, c] {- Input 15 -}
reason
  (d, 0/1)
  (t, 0/1)
  (n, 0/1)
  (g, 0/1)
  (f, 0/1)
  (o, 1/1)
  (u, 0/1)
  (c, 0/1)
   property Termination
has value Just True
for SRS
  [t, u] -> [t, c, d] {- Input 0 -}
  [d, f] -> [f, d] {- Input 1 -}
  [d, g] -> [u, g] {- Input 2 -}
  [f, u] -> [u, f] {- Input 3 -}
  [d, n] -> [d] {- Input 4 -}
  [n, u] ->= [u] {- Input 7 -}
  [f] ->= [f, n] {- Input 8 -}
  [t] ->= [t, c, n] {- Input 9 -}
  [c, n] ->= [n, c] {- Input 10 -}
  [c, o] ->= [o, c] {- Input 11 -}
  [c, o] ->= [o] {- Input 12 -}
  [c, f] ->= [f, c] {- Input 13 -}
  [c, u] ->= [u, c] {- Input 14 -}
  [c, d] ->= [d, c] {- Input 15 -}
reason
  ( d
  , St (Corner  / 1 1 5 \
                | 0 3 0 |
                \ 0 0 1 /) )
  ( t
  , St (Corner  / 1 3 0 \
                | 0 0 1 |
                \ 0 0 1 /) )
  ( n
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( g
  , St (Corner  / 1 3 1 \
                | 0 0 2 |
                \ 0 0 1 /) )
  ( f
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( o
  , St (Corner  / 1 5 3 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( u
  , St (Corner  / 1 0 5 \
                | 0 3 0 |
                \ 0 0 1 /) )
  ( c
  , St (Corner  / 1 2 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [t, u] -> [t, c, d] {- Input 0 -}
  [d, f] -> [f, d] {- Input 1 -}
  [f, u] -> [u, f] {- Input 3 -}
  [d, n] -> [d] {- Input 4 -}
  [n, u] ->= [u] {- Input 7 -}
  [f] ->= [f, n] {- Input 8 -}
  [t] ->= [t, c, n] {- Input 9 -}
  [c, n] ->= [n, c] {- Input 10 -}
  [c, o] ->= [o, c] {- Input 11 -}
  [c, o] ->= [o] {- Input 12 -}
  [c, f] ->= [f, c] {- Input 13 -}
  [c, u] ->= [u, c] {- Input 14 -}
  [c, d] ->= [d, c] {- Input 15 -}
reason
  (d, 0/1)
  (t, 0/1)
  (n, 0/1)
  (f, 0/1)
  (o, 0/1)
  (u, 1/1)
  (c, 0/1)
   property Termination
has value Just True
for SRS
  [d, f] -> [f, d] {- Input 1 -}
  [f, u] -> [u, f] {- Input 3 -}
  [d, n] -> [d] {- Input 4 -}
  [n, u] ->= [u] {- Input 7 -}
  [f] ->= [f, n] {- Input 8 -}
  [t] ->= [t, c, n] {- Input 9 -}
  [c, n] ->= [n, c] {- Input 10 -}
  [c, o] ->= [o, c] {- Input 11 -}
  [c, o] ->= [o] {- Input 12 -}
  [c, f] ->= [f, c] {- Input 13 -}
  [c, u] ->= [u, c] {- Input 14 -}
  [c, d] ->= [d, c] {- Input 15 -}
reason
  ( d
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( t
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( n
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( f
  , Ek 2  / 1 0 \
          \ 0 2 / )
  ( o
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( u
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( c
  , Ek 2  / 1 0 \
          \ 0 1 / )
   property Termination
has value Just True
for SRS
  [f, u] -> [u, f] {- Input 3 -}
  [d, n] -> [d] {- Input 4 -}
  [n, u] ->= [u] {- Input 7 -}
  [f] ->= [f, n] {- Input 8 -}
  [t] ->= [t, c, n] {- Input 9 -}
  [c, n] ->= [n, c] {- Input 10 -}
  [c, o] ->= [o, c] {- Input 11 -}
  [c, o] ->= [o] {- Input 12 -}
  [c, f] ->= [f, c] {- Input 13 -}
  [c, u] ->= [u, c] {- Input 14 -}
  [c, d] ->= [d, c] {- Input 15 -}
reason
  ( d
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( t
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( n
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( f
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( o
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( u
  , Ek 2  / 1 0 \
          \ 0 2 / )
  ( c
  , Ek 2  / 1 0 \
          \ 0 1 / )
   property Termination
has value Just True
for SRS
  [d, n] -> [d] {- Input 4 -}
  [n, u] ->= [u] {- Input 7 -}
  [f] ->= [f, n] {- Input 8 -}
  [t] ->= [t, c, n] {- Input 9 -}
  [c, n] ->= [n, c] {- Input 10 -}
  [c, o] ->= [o, c] {- Input 11 -}
  [c, o] ->= [o] {- Input 12 -}
  [c, f] ->= [f, c] {- Input 13 -}
  [c, u] ->= [u, c] {- Input 14 -}
  [c, d] ->= [d, c] {- Input 15 -}
reason
  ( d
  , St (Corner  / 1 2 5 \
                | 0 0 4 |
                \ 0 0 1 /) )
  ( t
  , St (Corner  / 1 0 4 \
                | 0 0 1 |
                \ 0 0 1 /) )
  ( n
  , St (Corner  / 1 0 0 \
                | 0 4 2 |
                \ 0 0 1 /) )
  ( f
  , St (Corner  / 1 0 4 \
                | 0 0 2 |
                \ 0 0 1 /) )
  ( o
  , St (Corner  / 1 0 5 \
                | 0 0 2 |
                \ 0 0 1 /) )
  ( u
  , St (Corner  / 1 0 5 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( c
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [n, u] ->= [u] {- Input 7 -}
  [f] ->= [f, n] {- Input 8 -}
  [t] ->= [t, c, n] {- Input 9 -}
  [c, n] ->= [n, c] {- Input 10 -}
  [c, o] ->= [o, c] {- Input 11 -}
  [c, o] ->= [o] {- Input 12 -}
  [c, f] ->= [f, c] {- Input 13 -}
  [c, u] ->= [u, c] {- Input 14 -}
  [c, d] ->= [d, c] {- Input 15 -}
reason
  no strict rules

**************************************************
skeleton: (7/9,8)\Weight(5/9,8)\Matrix{\Natural}{3}(4/9,7)\Weight(3/9,7)\Matrix{\Natural}{2}(2/9,7)\Matrix{\Natural}{2}(1/9,7)\Matrix{\Natural}{3}(0/9,7)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.880778628000
  min duration 0.012792570000
  total durat. 2.029805328000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 5
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 8
      , total_length = 53}
    , self = 66
    , parent = Nothing
    , duration = 1.880778628000
    , status = Fail
    , start = 2025-09-04 07:31:50.585281613 UTC
    , finish = 2025-09-04 07:31:52.466060241 UTC
    , thread_cap_info = ("ThreadId 113", 1, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.019913894000
  min duration 3.019913894000
  total durat. 3.019913894000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 266
      , num_top_rules = 0
      , num_weak_rules = 426
      , alphabet_size = 62
      , total_length = 3984}
    , self = 93
    , parent = Nothing
    , duration = 3.019913894000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:51.161579605 UTC
    , finish = 2025-09-04 07:31:54.181493499 UTC
    , thread_cap_info = ("ThreadId 144", 2, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.113691106000
  min duration 3.096428120000
  total durat. 6.210119226000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 266
      , num_top_rules = 0
      , num_weak_rules = 426
      , alphabet_size = 62
      , total_length = 3984}
    , self = 71
    , parent = Nothing
    , duration = 3.096428120000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:50.94826381 UTC
    , finish = 2025-09-04 07:31:54.04469193 UTC
    , thread_cap_info = ("ThreadId 130", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 266
      , num_top_rules = 0
      , num_weak_rules = 426
      , alphabet_size = 62
      , total_length = 3984}
    , self = 73
    , parent = Nothing
    , duration = 3.113691106000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:50.948264142 UTC
    , finish = 2025-09-04 07:31:54.061955248 UTC
    , thread_cap_info = ("ThreadId 129", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.423892045000
  min duration 0.008049424000
  total durat. 1.537474349000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 5
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 8
      , total_length = 53}
    , self = 65
    , parent = Nothing
    , duration = 1.423892045000
    , status = Fail
    , start = 2025-09-04 07:31:50.585285525 UTC
    , finish = 2025-09-04 07:31:52.00917757 UTC
    , thread_cap_info = ("ThreadId 114", 1, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.002250871000
  min duration 3.002250871000
  total durat. 3.002250871000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 266
      , num_top_rules = 0
      , num_weak_rules = 426
      , alphabet_size = 62
      , total_length = 3984}
    , self = 105
    , parent = Nothing
    , duration = 3.002250871000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:51.224452827 UTC
    , finish = 2025-09-04 07:31:54.226703698 UTC
    , thread_cap_info = ("ThreadId 146", 2, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.133553707000
  min duration 3.113680367000
  total durat. 6.247234074000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 266
      , num_top_rules = 0
      , num_weak_rules = 426
      , alphabet_size = 62
      , total_length = 3984}
    , self = 72
    , parent = Nothing
    , duration = 3.113680367000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:50.948268837 UTC
    , finish = 2025-09-04 07:31:54.061949204 UTC
    , thread_cap_info = ("ThreadId 135", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 266
      , num_top_rules = 0
      , num_weak_rules = 426
      , alphabet_size = 62
      , total_length = 3984}
    , self = 76
    , parent = Nothing
    , duration = 3.133553707000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:50.948270338 UTC
    , finish = 2025-09-04 07:31:54.081824045 UTC
    , thread_cap_info = ("ThreadId 133", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.778106498000
  min duration 0.518616249000
  total durat. 2.296722747000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 5
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 8
      , total_length = 53}
    , self = 77
    , parent = Nothing
    , duration = 1.778106498000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:52.303757559 UTC
    , finish = 2025-09-04 07:31:54.081864057 UTC
    , thread_cap_info = ("ThreadId 150", 1, False)}
Success : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.500352489000
  min duration 0.313307526000
  total durat. 1.813660015000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 5
      , num_top_rules = 0
      , num_weak_rules = 9
      , alphabet_size = 8
      , total_length = 53}
    , self = 74
    , parent = Nothing
    , duration = 1.500352489000
    , status = Success
    , start = 2025-09-04 07:31:52.5623146 UTC
    , finish = 2025-09-04 07:31:54.062667089 UTC
    , thread_cap_info = ("ThreadId 152", 1, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 3.312939902000
  min duration 2.251160690000
  total durat. 5.564100592000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 0
      , alphabet_size = 1
      , total_length = 2}
    , self = 68
    , parent = Nothing
    , duration = 2.251160690000
    , status = Fail
    , start = 2025-09-04 07:31:50.530959097 UTC
    , finish = 2025-09-04 07:31:52.782119787 UTC
    , thread_cap_info = ("ThreadId 74", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 8
      , alphabet_size = 7
      , total_length = 33}
    , self = 70
    , parent = Nothing
    , duration = 3.312939902000
    , status = Fail
    , start = 2025-09-04 07:31:50.508479167 UTC
    , finish = 2025-09-04 07:31:53.821419069 UTC
    , thread_cap_info = ("ThreadId 73", 0, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 2.572943701000
  min duration 2.073077947000
  total durat. 4.646021648000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 0
      , alphabet_size = 1
      , total_length = 2}
    , self = 67
    , parent = Nothing
    , duration = 2.073077947000
    , status = Fail
    , start = 2025-09-04 07:31:50.508470692 UTC
    , finish = 2025-09-04 07:31:52.581548639 UTC
    , thread_cap_info = ("ThreadId 72", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 8
      , alphabet_size = 7
      , total_length = 33}
    , self = 69
    , parent = Nothing
    , duration = 2.572943701000
    , status = Fail
    , start = 2025-09-04 07:31:50.508476128 UTC
    , finish = 2025-09-04 07:31:53.081419829 UTC
    , thread_cap_info = ("ThreadId 71", 0, False)}
**************************************************
E                        Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                        , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                        = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                        , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                        = True}" , input_size = Size { num_rules = 9 , num_strict_rules = 9 , num_top_rules
E                        = 0 , num_weak_rules = 0 , alphabet_size = 7 , total_length = 33} , self
E                        = 49 , parent = Nothing , duration = 0.282299641000 , status = Except "AsyncCancelled"
E                        , start = 2025-09-04 07:31:50.471731118 UTC , finish = 2025-09-04 07:31:50.754030759
E                        UTC , thread_cap_info = ("ThreadId 20", 3, False)}
E                        
| F                      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F                      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F                      = 1 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 0 , alphabet_size
| F                      = 1 , total_length = 2} , self = 67 , parent = Nothing , duration = 2.073077947000
| F                      , status = Fail , start = 2025-09-04 07:31:50.508470692 UTC , finish =
| F                      2025-09-04 07:31:52.581548639 UTC , thread_cap_info = ("ThreadId 72", 0,
| F                      False)}
| F                      
| | F                    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F                    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F                    = 9 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size
| | F                    = 7 , total_length = 33} , self = 69 , parent = Nothing , duration = 2.572943701000
| | F                    , status = Fail , start = 2025-09-04 07:31:50.508476128 UTC , finish =
| | F                    2025-09-04 07:31:53.081419829 UTC , thread_cap_info = ("ThreadId 71", 0,
| | F                    False)}
| | F                    
| | | F                  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | F                  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | F                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | F                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | | F                  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 8 , alphabet_size
| | | F                  = 7 , total_length = 33} , self = 70 , parent = Nothing , duration = 3.312939902000
| | | F                  , status = Fail , start = 2025-09-04 07:31:50.508479167 UTC , finish =
| | | F                  2025-09-04 07:31:53.821419069 UTC , thread_cap_info = ("ThreadId 73", 0,
| | | F                  False)}
| | | F                  
| | | | F                Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F                = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 1
| | | | F                , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 0 , alphabet_size
| | | | F                = 1 , total_length = 2} , self = 68 , parent = Nothing , duration = 2.251160690000
| | | | F                , status = Fail , start = 2025-09-04 07:31:50.530959097 UTC , finish =
| | | | F                2025-09-04 07:31:52.782119787 UTC , thread_cap_info = ("ThreadId 74", 0,
| | | | F                False)}
| | | | F                
| | | | | S              Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | | | S              , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | | | S              , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | | | S              = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | | | S              , cpf = True}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | S              = 5 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 8 , total_length
| | | | | S              = 53} , self = 51 , parent = Nothing , duration = 0.278660414000 , status
| | | | | S              = Success , start = 2025-09-04 07:31:50.563124382 UTC , finish = 2025-09-04
| | | | | S              07:31:50.841784796 UTC , thread_cap_info = ("ThreadId 88", 1, False)}
| | | | | S              
| | | | | | S            Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | | | | S            , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | | | | S            , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | | | | S            = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | | | | S            , cpf = True}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | S            = 5 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 8 , total_length
| | | | | | S            = 53} , self = 48 , parent = Nothing , duration = 0.149236887000 , status
| | | | | | S            = Success , start = 2025-09-04 07:31:50.580267716 UTC , finish = 2025-09-04
| | | | | | S            07:31:50.729504603 UTC , thread_cap_info = ("ThreadId 108", 1, False)}
| | | | | | S            
| | | | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | F          = 5 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 8 , total_length
| | | | | | | F          = 53} , self = 66 , parent = Nothing , duration = 1.880778628000 , status
| | | | | | | F          = Fail , start = 2025-09-04 07:31:50.585281613 UTC , finish = 2025-09-04
| | | | | | | F          07:31:52.466060241 UTC , thread_cap_info = ("ThreadId 113", 1, False)}
| | | | | | | F          
| | | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | | F        = 5 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 8 , total_length
| | | | | | | | F        = 53} , self = 65 , parent = Nothing , duration = 1.423892045000 , status
| | | | | | | | F        = Fail , start = 2025-09-04 07:31:50.585285525 UTC , finish = 2025-09-04
| | | | | | | | F        07:31:52.00917757 UTC , thread_cap_info = ("ThreadId 114", 1, False)}
| | | | | | | | F        
| | | | | | | | | S      Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | | | | | | | S      , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | | | | | | | S      , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | | | | | | | S      = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | | | | | | | S      , cpf = True}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | | | S      = 5 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 8 , total_length
| | | | | | | | | S      = 53} , self = 50 , parent = Nothing , duration = 0.151170890000 , status
| | | | | | | | | S      = Success , start = 2025-09-04 07:31:50.604087378 UTC , finish = 2025-09-04
| | | | | | | | | S      07:31:50.755258268 UTC , thread_cap_info = ("ThreadId 115", 1, False)}
| | | | | | | | | S      
| | | | | | S | | |      
E | | | | |   | | |      
S | | | | |   | | |      Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
S | | | | |   | | |      epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
S | | | | |   | | |      = Size { num_rules = 896 , num_strict_rules = 320 , num_top_rules = 0 ,
S | | | | |   | | |      num_weak_rules = 576 , alphabet_size = 64 , total_length = 5184} , self
S | | | | |   | | |      = 53 , parent = Nothing , duration = 0.117609318000 , status = Success
S | | | | |   | | |      , start = 2025-09-04 07:31:50.754036371 UTC , finish = 2025-09-04 07:31:50.871645689
S | | | | |   | | |      UTC , thread_cap_info = ("ThreadId 118", 1, False)}
S | | | | |   | | |      
| | | | | |   | | S      
| | | | | | S | |        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | S | |        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | S | |        = Size { num_rules = 896 , num_strict_rules = 320 , num_top_rules = 0 ,
| | | | | | S | |        num_weak_rules = 576 , alphabet_size = 64 , total_length = 5184} , self
| | | | | | S | |        = 52 , parent = Nothing , duration = 0.116355296000 , status = Success
| | | | | | S | |        , start = 2025-09-04 07:31:50.755290458 UTC , finish = 2025-09-04 07:31:50.871645754
| | | | | | S | |        UTC , thread_cap_info = ("ThreadId 120", 1, False)}
| | | | | | S | |        
| | | | | S | | |        
| | | | | S | | |        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | S | | |        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | S | | |        = Size { num_rules = 896 , num_strict_rules = 320 , num_top_rules = 0 ,
| | | | | S | | |        num_weak_rules = 576 , alphabet_size = 64 , total_length = 5184} , self
| | | | | S | | |        = 60 , parent = Nothing , duration = 0.189253268000 , status = Success
| | | | | S | | |        , start = 2025-09-04 07:31:50.841806531 UTC , finish = 2025-09-04 07:31:51.031059799
| | | | | S | | |        UTC , thread_cap_info = ("ThreadId 121", 2, False)}
| | | | | S | | |        
S | | | | | | | |        
  | | | | | S | |        
E | | | | |   | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E | | | | |   | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E | | | | |   | |        = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
E | | | | |   | |        = 266 , num_top_rules = 0 , num_weak_rules = 426 , alphabet_size = 62 ,
E | | | | |   | |        total_length = 3984} , self = 71 , parent = Nothing , duration = 3.096428120000
E | | | | |   | |        , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:50.94826381
E | | | | |   | |        UTC , finish = 2025-09-04 07:31:54.04469193 UTC , thread_cap_info = ("ThreadId
E | | | | |   | |        130", 3, False)}
E | | | | |   | |        
| | | | | | E | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | E | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | E | |        = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | | | | | E | |        = 266 , num_top_rules = 0 , num_weak_rules = 426 , alphabet_size = 62 ,
| | | | | | E | |        total_length = 3984} , self = 73 , parent = Nothing , duration = 3.113691106000
| | | | | | E | |        , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:50.948264142
| | | | | | E | |        UTC , finish = 2025-09-04 07:31:54.061955248 UTC , thread_cap_info = ("ThreadId
| | | | | | E | |        129", 1, False)}
| | | | | | E | |        
| | | | | | | | | E      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | | | | | | | | E      = 266 , num_top_rules = 0 , num_weak_rules = 426 , alphabet_size = 62 ,
| | | | | | | | | E      total_length = 3984} , self = 72 , parent = Nothing , duration = 3.113680367000
| | | | | | | | | E      , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:50.948268837
| | | | | | | | | E      UTC , finish = 2025-09-04 07:31:54.061949204 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E      135", 3, False)}
| | | | | | | | | E      
| | | | | | | | | | E    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | | | | | | | | | E    = 266 , num_top_rules = 0 , num_weak_rules = 426 , alphabet_size = 62 ,
| | | | | | | | | | E    total_length = 3984} , self = 76 , parent = Nothing , duration = 3.133553707000
| | | | | | | | | | E    , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:50.948270338
| | | | | | | | | | E    UTC , finish = 2025-09-04 07:31:54.081824045 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | E    133", 1, False)}
| | | | | | | | | | E    
| | | | | S | | | | |    
| | | | | E | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | | | | E | | | | |    = 266 , num_top_rules = 0 , num_weak_rules = 426 , alphabet_size = 62 ,
| | | | | E | | | | |    total_length = 3984} , self = 93 , parent = Nothing , duration = 3.019913894000
| | | | | E | | | | |    , status = Except "<<timeout>>" , start = 2025-09-04 07:31:51.161579605
| | | | | E | | | | |    UTC , finish = 2025-09-04 07:31:54.181493499 UTC , thread_cap_info = ("ThreadId
| | | | | E | | | | |    144", 2, False)}
| | | | | E | | | | |    
| | | | | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | | | | | | | | | | E  = 266 , num_top_rules = 0 , num_weak_rules = 426 , alphabet_size = 62 ,
| | | | | | | | | | | E  total_length = 3984} , self = 105 , parent = Nothing , duration = 3.002250871000
| | | | | | | | | | | E  , status = Except "<<timeout>>" , start = 2025-09-04 07:31:51.224452827
| | | | | | | | | | | E  UTC , finish = 2025-09-04 07:31:54.226703698 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | E  146", 2, False)}
| | | | | | | | | | | E  
| | | | | | | | F | | |  
| | | | | | | | E | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | | | E | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | E | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | E | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | E | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | E | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | | | | | | | E | | |  , num_strict_rules = 5 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size
| | | | | | | | E | | |  = 8 , total_length = 53} , self = 77 , parent = Nothing , duration = 1.778106498000
| | | | | | | | E | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:52.303757559
| | | | | | | | E | | |  UTC , finish = 2025-09-04 07:31:54.081864057 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E | | |  150", 1, False)}
| | | | | | | | E | | |  
| | | | | | | F | | | |  
| | | | | | | S | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | | S | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | S | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | S | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | S | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | S | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | | | | | | S | | | |  , num_strict_rules = 5 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size
| | | | | | | S | | | |  = 8 , total_length = 53} , self = 74 , parent = Nothing , duration = 1.500352489000
| | | | | | | S | | | |  , status = Success , start = 2025-09-04 07:31:52.5623146 UTC , finish =
| | | | | | | S | | | |  2025-09-04 07:31:54.062667089 UTC , thread_cap_info = ("ThreadId 152",
| | | | | | | S | | | |  1, False)}
| | | | | | | S | | | |  
| F | | | | | | | | | |  
|   | | F | | | | | | |  
|   F |   | | | | | | |  
|     F   | | | | | | |  
E         | | | | | | |  
          | | | | E | |  
          | E | |   | |  
          |   S |   | |  
          |     |   E |  
          |     E     |  
          E           |  
F                     |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                     |  = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
F                     |  = 1 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size = 7 , total_length
F                     |  = 36} , self = 109 , parent = Nothing , duration = 0.100864464000 , status
F                     |  = Fail , start = 2025-09-04 07:31:54.221647416 UTC , finish = 2025-09-04
F                     |  07:31:54.32251188 UTC , thread_cap_info = ("ThreadId 207", 1, False)}
F                     |  
|                     E  
F                        
E                        Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E                        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E                        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E                        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E                        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E                        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
E                        , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size
E                        = 7 , total_length = 36} , self = 115 , parent = Nothing , duration = 0.518616249000
E                        , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:54.322800729
E                        UTC , finish = 2025-09-04 07:31:54.841416978 UTC , thread_cap_info = ("ThreadId
E                        216", 1, False)}
E                        
| S                      Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| S                      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S                      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| S                      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S                      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S                      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| S                      , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size
| S                      = 7 , total_length = 36} , self = 113 , parent = Nothing , duration = 0.313307526000
| S                      , status = Success , start = 2025-09-04 07:31:54.341426377 UTC , finish
| S                      = 2025-09-04 07:31:54.654733903 UTC , thread_cap_info = ("ThreadId 217",
| S                      1, False)}
| S                      
| S                      
E                        
