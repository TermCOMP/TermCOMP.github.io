[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 425 length 2175
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
CNF 425 vars 2175 clauses
last 310 length 1465
CNF 310 vars 1465 clauses
last 741 length 3662
CNF 741 vars 3662 clauses
last 1000 length 5208
CNF 1000 vars 5208 clauses
last 669 length 3276
last 1098 length 6706
CNF 669 vars 3276 clauses
CNF 1098 vars 6706 clauses
last 1150 length 5557
CNF 1150 vars 5557 clauses
last 1040 length 5437
CNF 1040 vars 5437 clauses
last 1394 length 7230
last 322 length 1491
last 1626 length 9321
CNF 322 vars 1491 clauses
last 423 length 1885
CNF 1394 vars 7230 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4259, clauses: 16104
last 534 length 2470
last 685 length 3241
CNF 1626 vars 9321 clauses
last 1099 length 5324
last 1707 length 8947
last 685 length 3241
last 534 length 2470
CNF 423 vars 1885 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10672, clauses: 44499
last 4259 length 16104
last 11613 length 71992
CNF 534 vars 2470 clauses
CNF 685 vars 3241 clauses
CNF 1099 vars 5324 clauses
CNF 1707 vars 8947 clauses
CNF 534 vars 2470 clauses
CNF 685 vars 3241 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1414, clauses: 5553
last 10672 length 44499
CNF 4259 vars 16104 clauses
CNF 11613 vars 71992 clauses
last 13690 length 103660
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1970, clauses: 7684
last 1414 length 5553
CNF 10672 vars 44499 clauses
last 1970 length 7684
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14770, clauses: 61370
CNF 1414 vars 5553 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4259, clauses: 16104, status: Unsatisfied, time: 0.533231229s
last 14770 length 61370
CNF 1970 vars 7684 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1414, clauses: 5553, status: Unsatisfied, time: 0.280601277s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10672, clauses: 44499, status: Unsatisfied, time: 0.451418929s
CNF 13690 vars 103660 clauses
CNF 14770 vars 61370 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1970, clauses: 7684, status: Satisfied, time: 0.196849149s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5128, clauses: 21055
last 5128 length 21055
CNF 5128 vars 21055 clauses
**************************************************
summary
**************************************************
SRS with 1 strict rules and 1 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 4 weak rules on 4 letters       weights
SRS with 1 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 3 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, b, a] -> [b] {- Input 0 -}
  [] ->= [a, a, b, a] {- Input 1 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, b], [b, b], [b, a], [a, a]] -> [ [a, b] , [ b , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, b], [b, b], [b, a], [a, b]] -> [ [a, b] , [ b , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, b], [b, a], [a, a]] -> [ [b, b] , [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, b], [b, a], [a, b]] -> [ [b, b] , [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 1/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, b], [b, b], [b, a], [a, b]] -> [ [b, b] , [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 0 0 \
                | 0 4 0 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 1 2 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 1 0 \
                | 0 0 7 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
reason
  no strict rules

**************************************************
skeleton: (1/1,2)\TileAllAll{2}(4/4,4)\Weight(1/3,4)\Matrix{\Natural}{3}(0/3,3)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.737190986000
  min duration 0.013977821000
  total durat. 3.069628690000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 1.056970093000
  min duration 0.012313307000
  total durat. 3.878927652000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 14
      , total_length = 266}
    , self = 106
    , parent = Nothing
    , duration = 1.056970093000
    , status = Fail
    , start = 2025-09-04 08:23:42.302632008 UTC
    , finish = 2025-09-04 08:23:43.359602101 UTC
    , thread_cap_info = ("ThreadId 180", 0, False)}
**************************************************
F                          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                          = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
F                          = 15 , num_top_rules = 15 , num_weak_rules = 3 , alphabet_size = 6 , total_length
F                          = 78} , self = 90 , parent = Nothing , duration = 0.369468989000 , status
F                          = Fail , start = 2025-09-04 08:23:42.184301825 UTC , finish = 2025-09-04
F                          08:23:42.553770814 UTC , thread_cap_info = ("ThreadId 133", 2, False)}
F                          
| F                        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                        = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| F                        = 15 , num_top_rules = 15 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| F                        = 78} , self = 91 , parent = Nothing , duration = 0.456173436000 , status
| F                        = Fail , start = 2025-09-04 08:23:42.188851878 UTC , finish = 2025-09-04
| F                        08:23:42.645025314 UTC , thread_cap_info = ("ThreadId 134", 2, False)}
| F                        
| | F                      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F                      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F                      = 18 , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 3
| | F                      , alphabet_size = 6 , total_length = 78} , self = 100 , parent = Nothing
| | F                      , duration = 0.992969013000 , status = Fail , start = 2025-09-04 08:23:42.204676052
| | F                      UTC , finish = 2025-09-04 08:23:43.197645065 UTC , thread_cap_info = ("ThreadId
| | F                      143", 0, False)}
| | F                      
| | | F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | F                    = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 2 , total_length
| | | F                    = 18} , self = 92 , parent = Nothing , duration = 0.492503120000 , status
| | | F                    = Fail , start = 2025-09-04 08:23:42.226430542 UTC , finish = 2025-09-04
| | | F                    08:23:42.718933662 UTC , thread_cap_info = ("ThreadId 145", 2, False)}
| | | F                    
| | | | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F                  = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | F                  = 26} , self = 93 , parent = Nothing , duration = 0.519319101000 , status
| | | | F                  = Fail , start = 2025-09-04 08:23:42.252932679 UTC , finish = 2025-09-04
| | | | F                  08:23:42.77225178 UTC , thread_cap_info = ("ThreadId 161", 2, False)}
| | | | F                  
| | | | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | F                = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | F                = 26} , self = 94 , parent = Nothing , duration = 0.552637244000 , status
| | | | | F                = Fail , start = 2025-09-04 08:23:42.258259437 UTC , finish = 2025-09-04
| | | | | F                08:23:42.810896681 UTC , thread_cap_info = ("ThreadId 162", 2, False)}
| | | | | F                
| | | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | F              = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | F              = 56} , self = 96 , parent = Nothing , duration = 0.646588107000 , status
| | | | | | F              = Fail , start = 2025-09-04 08:23:42.267474918 UTC , finish = 2025-09-04
| | | | | | F              08:23:42.914063025 UTC , thread_cap_info = ("ThreadId 166", 2, False)}
| | | | | | F              
| | | | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | F            = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | F            = 56} , self = 95 , parent = Nothing , duration = 0.559180642000 , status
| | | | | | | F            = Fail , start = 2025-09-04 08:23:42.269627964 UTC , finish = 2025-09-04
| | | | | | | F            08:23:42.828808606 UTC , thread_cap_info = ("ThreadId 168", 2, False)}
| | | | | | | F            
| | | | | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | | F          = 1 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 14 , total_length
| | | | | | | | F          = 266} , self = 99 , parent = Nothing , duration = 0.737190986000 , status
| | | | | | | | F          = Fail , start = 2025-09-04 08:23:42.275665304 UTC , finish = 2025-09-04
| | | | | | | | F          08:23:43.01285629 UTC , thread_cap_info = ("ThreadId 178", 0, False)}
| | | | | | | | F          
| | | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | | F        = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | | F        = 26} , self = 97 , parent = Nothing , duration = 0.635549104000 , status
| | | | | | | | | F        = Fail , start = 2025-09-04 08:23:42.281508221 UTC , finish = 2025-09-04
| | | | | | | | | F        08:23:42.917057325 UTC , thread_cap_info = ("ThreadId 170", 2, False)}
| | | | | | | | | F        
| | | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | | | F      = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | | | F      = 26} , self = 98 , parent = Nothing , duration = 0.629062081000 , status
| | | | | | | | | | F      = Fail , start = 2025-09-04 08:23:42.302616877 UTC , finish = 2025-09-04
| | | | | | | | | | F      08:23:42.931678958 UTC , thread_cap_info = ("ThreadId 172", 2, False)}
| | | | | | | | | | F      
| | | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | | | | | F    = 1 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 14 , total_length
| | | | | | | | | | | F    = 266} , self = 106 , parent = Nothing , duration = 1.056970093000 , status
| | | | | | | | | | | F    = Fail , start = 2025-09-04 08:23:42.302632008 UTC , finish = 2025-09-04
| | | | | | | | | | | F    08:23:43.359602101 UTC , thread_cap_info = ("ThreadId 180", 0, False)}
| | | | | | | | | | | F    
| | | | | | | | | | | | F  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | | | | | | | F  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | | | | | | | | F  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | | | | | | | | | | | F  = 2 , total_length = 18} , self = 102 , parent = Nothing , duration = 0.874771292000
| | | | | | | | | | | | F  , status = Fail , start = 2025-09-04 08:23:42.334298396 UTC , finish =
| | | | | | | | | | | | F  2025-09-04 08:23:43.209069688 UTC , thread_cap_info = ("ThreadId 182",
| | | | | | | | | | | | F  2, False)}
| | | | | | | | | | | | F  
F | | | | | | | | | | | |  
  F | | | | | | | | | | |  
    | F | | | | | | | | |  
F   |   | | | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
F   |   | | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F   |   | | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F   |   | | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F   |   | | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F   |   | | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
F   |   | | | | | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
F   |   | | | | | | | | |  = 2 , total_length = 18} , self = 101 , parent = Nothing , duration = 0.487248692000
F   |   | | | | | | | | |  , status = Fail , start = 2025-09-04 08:23:42.718969035 UTC , finish =
F   |   | | | | | | | | |  2025-09-04 08:23:43.206217727 UTC , thread_cap_info = ("ThreadId 190",
F   |   | | | | | | | | |  2, False)}
F   |   | | | | | | | | |  
|   |   F | | | | | | | |  
| E |     | | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| E |     | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E |     | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E |     | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E |     | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E |     | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| E |     | | | | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| E |     | | | | | | | |  = 4 , total_length = 26} , self = 105 , parent = Nothing , duration = 0.581397235000
| E |     | | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:23:42.772291358
| E |     | | | | | | | |  UTC , finish = 2025-09-04 08:23:43.353688593 UTC , thread_cap_info = ("ThreadId
| E |     | | | | | | | |  193", 2, False)}
| E |     | | | | | | | |  
| | |     F | | | | | | |  
| | |       | F | | | | |  
| | | S     |   | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | S     |   | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | S     |   | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | S     |   | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S     |   | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S     |   | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | S     |   | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | | S     |   | | | | |  = 4 , total_length = 26} , self = 103 , parent = Nothing , duration = 0.481836694000
| | | S     |   | | | | |  , status = Success , start = 2025-09-04 08:23:42.828828088 UTC , finish
| | | S     |   | | | | |  = 2025-09-04 08:23:43.310664782 UTC , thread_cap_info = ("ThreadId 194",
| | | S     |   | | | | |  2, False)}
| | | S     |   | | | | |  
| | | |     F   | | | | |  
| | | |         | F | | |  
| | | |         |   F | |  
| | | |         F     | |  
| | F |               | |  
F |   |               | |  
  |   |               | F  
  |   S               |    
  E                   |    
                      F    
