[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 519 length 2685
CNF 519 vars 2685 clauses
last 803 length 3900
last 717 length 3460
CNF 803 vars 3900 clauses
last 1688 length 9559
last 1160 length 6944
CNF 717 vars 3460 clauses
last 1442 length 7414
CNF 1688 vars 9559 clauses
last 661 length 3295
last 1048 length 5392
CNF 1160 vars 6944 clauses
last 1551 length 8163
last 1703 length 9995
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3340, clauses: 12517
last 547 length 2416
last 581 length 2581
last 843 length 4679
last 843 length 4679
last 661 length 3295
last 1449 length 6718
last 1793 length 8158
last 12127 length 73389
CNF 1442 vars 7414 clauses
CNF 661 vars 3295 clauses
last 13303 length 104405
last 3340 length 12517
CNF 1048 vars 5392 clauses
CNF 1551 vars 8163 clauses
CNF 843 vars 4679 clauses
CNF 547 vars 2416 clauses
CNF 581 vars 2581 clauses
CNF 1703 vars 9995 clauses
CNF 661 vars 3295 clauses
CNF 1793 vars 8158 clauses
CNF 843 vars 4679 clauses
CNF 1449 vars 6718 clauses
CNF 12127 vars 73389 clauses
CNF 3340 vars 12517 clauses
CNF 13303 vars 104405 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1924, clauses: 7398
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2102, clauses: 8285
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13646, clauses: 56458
last 1924 length 7398
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14860, clauses: 62055
last 2102 length 8285
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3340, clauses: 12517, status: Unsatisfied, time: 0.414564473s
last 13646 length 56458
CNF 1924 vars 7398 clauses
last 14860 length 62055
CNF 2102 vars 8285 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1924, clauses: 7398, status: Satisfied, time: 0.058549952s
CNF 13646 vars 56458 clauses
CNF 14860 vars 62055 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2102, clauses: 8285, status: Unsatisfied, time: 0.067438783s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14860, clauses: 62055, status: Satisfied, time: 0.191657533s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 8 weak rules on 4 letters       weights
SRS with 1 strict rules and 4 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 4 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, a, b] -> [] {- Input 0 -}
  [a] ->= [] {- Input 1 -}
  [] ->= [b, a, b, b] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[b, b], [b, a], [a, a], [a, b], [b, b]] -> [ [ b , b ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[b, b], [b, a], [a, a], [a, b], [b, a]] -> [ [ b , a ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, b], [b, a], [a, a], [a, b], [b, b]] -> [ [ a , b ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[a, b], [b, a], [a, a], [a, b], [b, a]] -> [ [ a , a ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, b]] ->= [[b, b]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, a], [a, a]] ->= [[b, a]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, b]] ->= [[a, b]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, a], [a, a]] ->= [[a, a]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, a] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[a, a]] ->= [ [a, b] , [b, a] , [a, b] , [b, b] , [b, a] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  ([a, a], 1/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
   property Termination
has value Just True
for SRS
  [[a, b], [b, a], [a, a], [a, b], [b, a]] -> [ [ a , a ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, b]] ->= [[b, b]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, a] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 1 (Concon 0 (Input 2)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 7 \
                | 0 2 1 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 1 0 \
                | 0 2 0 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[b, a], [a, b]] ->= [[b, b]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, a] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 1 (Concon 0 (Input 2)) -}
reason
  no strict rules

**************************************************
skeleton: (1/2,2)\TileAllAll{2}(4/8,4)\Weight(1/4,4)\Matrix{\Natural}{3}(0/4,3)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.749404147000
  min duration 0.266176786000
  total durat. 4.745744925000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.753127656000
  min duration 0.036764342000
  total durat. 4.813159652000
**************************************************
F                                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                                    = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
F                                    = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size = 4 , total_length
F                                    = 58} , self = 85 , parent = Nothing , duration = 0.266176786000 , status
F                                    = Fail , start = 2025-09-04 08:27:40.217400759 UTC , finish = 2025-09-04
F                                    08:27:40.483577545 UTC , thread_cap_info = ("ThreadId 89", 2, False)}
F                                    
| F                                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                                  = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| F                                  = 16 , num_top_rules = 16 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| F                                  = 84} , self = 86 , parent = Nothing , duration = 0.447653620000 , status
| F                                  = Fail , start = 2025-09-04 08:27:40.218095284 UTC , finish = 2025-09-04
| F                                  08:27:40.665748904 UTC , thread_cap_info = ("ThreadId 94", 1, False)}
| F                                  
| | F                                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                                = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | F                                = 16 , num_top_rules = 16 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | F                                = 84} , self = 88 , parent = Nothing , duration = 0.496098097000 , status
| | F                                = Fail , start = 2025-09-04 08:27:40.223732042 UTC , finish = 2025-09-04
| | F                                08:27:40.719830139 UTC , thread_cap_info = ("ThreadId 93", 1, False)}
| | F                                
| | | F                              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                              = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | F                              = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | F                              = 58} , self = 89 , parent = Nothing , duration = 0.509366307000 , status
| | | F                              = Fail , start = 2025-09-04 08:27:40.236925534 UTC , finish = 2025-09-04
| | | F                              08:27:40.746291841 UTC , thread_cap_info = ("ThreadId 124", 2, False)}
| | | F                              
| | | | F                            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                            = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | F                            = 16 , num_top_rules = 16 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | F                            = 84} , self = 90 , parent = Nothing , duration = 0.509785491000 , status
| | | | F                            = Fail , start = 2025-09-04 08:27:40.237195195 UTC , finish = 2025-09-04
| | | | F                            08:27:40.746980686 UTC , thread_cap_info = ("ThreadId 119", 1, False)}
| | | | F                            
| | | | | F                          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                          = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | | F                          = 16 , num_top_rules = 16 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | F                          = 84} , self = 96 , parent = Nothing , duration = 0.688869232000 , status
| | | | | F                          = Fail , start = 2025-09-04 08:27:40.237198916 UTC , finish = 2025-09-04
| | | | | F                          08:27:40.926068148 UTC , thread_cap_info = ("ThreadId 120", 1, False)}
| | | | | F                          
| | | | | | F                        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F                        = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | F                        = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | F                        = 58} , self = 87 , parent = Nothing , duration = 0.441276384000 , status
| | | | | | F                        = Fail , start = 2025-09-04 08:27:40.241786955 UTC , finish = 2025-09-04
| | | | | | F                        08:27:40.683063339 UTC , thread_cap_info = ("ThreadId 125", 2, False)}
| | | | | | F                        
| | | | | | | F                      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F                      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F                      = 14 , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 4
| | | | | | | F                      , alphabet_size = 4 , total_length = 58} , self = 101 , parent = Nothing
| | | | | | | F                      , duration = 0.858953393000 , status = Fail , start = 2025-09-04 08:27:40.263460886
| | | | | | | F                      UTC , finish = 2025-09-04 08:27:41.122414279 UTC , thread_cap_info = ("ThreadId
| | | | | | | F                      136", 2, False)}
| | | | | | | F                      
| | | | | | | | F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | F                    = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | | F                    = 27} , self = 91 , parent = Nothing , duration = 0.485186645000 , status
| | | | | | | | F                    = Fail , start = 2025-09-04 08:27:40.263527178 UTC , finish = 2025-09-04
| | | | | | | | F                    08:27:40.748713823 UTC , thread_cap_info = ("ThreadId 146", 0, False)}
| | | | | | | | F                    
| | | | | | | | | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | | F                  = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | | | F                  = 27} , self = 92 , parent = Nothing , duration = 0.486289830000 , status
| | | | | | | | | F                  = Fail , start = 2025-09-04 08:27:40.277612008 UTC , finish = 2025-09-04
| | | | | | | | | F                  08:27:40.763901838 UTC , thread_cap_info = ("ThreadId 147", 0, False)}
| | | | | | | | | F                  
| | | | | | | | | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | | | | F                = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 2 , total_length
| | | | | | | | | | F                = 30} , self = 93 , parent = Nothing , duration = 0.504226385000 , status
| | | | | | | | | | F                = Fail , start = 2025-09-04 08:27:40.301781252 UTC , finish = 2025-09-04
| | | | | | | | | | F                08:27:40.806007637 UTC , thread_cap_info = ("ThreadId 150", 3, False)}
| | | | | | | | | | F                
| | | | | | | | | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | | | | | F              = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 2 , total_length
| | | | | | | | | | | F              = 30} , self = 94 , parent = Nothing , duration = 0.561084594000 , status
| | | | | | | | | | | F              = Fail , start = 2025-09-04 08:27:40.320539006 UTC , finish = 2025-09-04
| | | | | | | | | | | F              08:27:40.8816236 UTC , thread_cap_info = ("ThreadId 151", 2, False)}
| | | | | | | | | | | F              
| | | | | | | | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | | | | | | F            = 2 , num_top_rules = 0 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | | | | | | | | | | | F            = 74} , self = 97 , parent = Nothing , duration = 0.637906852000 , status
| | | | | | | | | | | | F            = Fail , start = 2025-09-04 08:27:40.327611798 UTC , finish = 2025-09-04
| | | | | | | | | | | | F            08:27:40.96551865 UTC , thread_cap_info = ("ThreadId 167", 1, False)}
| | | | | | | | | | | | F            
| | | | | | | | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | | | | | | F          = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | F          = 27} , self = 98 , parent = Nothing , duration = 0.697010599000 , status
| | | | | | | | | | | | | F          = Fail , start = 2025-09-04 08:27:40.327612658 UTC , finish = 2025-09-04
| | | | | | | | | | | | | F          08:27:41.024623257 UTC , thread_cap_info = ("ThreadId 165", 3, False)}
| | | | | | | | | | | | | F          
| | | | | | | | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | | | | | | | F        = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | F        = 27} , self = 95 , parent = Nothing , duration = 0.587594215000 , status
| | | | | | | | | | | | | | F        = Fail , start = 2025-09-04 08:27:40.338094742 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | F        08:27:40.925688957 UTC , thread_cap_info = ("ThreadId 163", 3, False)}
| | | | | | | | | | | | | | F        
| | | | | | | | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | | | | | | | | | F      = 2 , num_top_rules = 0 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | | F      = 74} , self = 99 , parent = Nothing , duration = 0.701083395000 , status
| | | | | | | | | | | | | | | F      = Fail , start = 2025-09-04 08:27:40.342760731 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | F      08:27:41.043844126 UTC , thread_cap_info = ("ThreadId 169", 1, False)}
| | | | | | | | | | | | | | | F      
| | | | | | | | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 37 , num_strict_rules
| | | | | | | | | | | | | | | | F    = 1 , num_top_rules = 0 , num_weak_rules = 36 , alphabet_size = 13 , total_length
| | | | | | | | | | | | | | | | F    = 284} , self = 100 , parent = Nothing , duration = 0.749404147000 , status
| | | | | | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:27:40.36248539 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | | F    08:27:41.111889537 UTC , thread_cap_info = ("ThreadId 173", 3, False)}
| | | | | | | | | | | | | | | | F    
| | | | | | | | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 37 , num_strict_rules
| | | | | | | | | | | | | | | | | F  = 1 , num_top_rules = 0 , num_weak_rules = 36 , alphabet_size = 13 , total_length
| | | | | | | | | | | | | | | | | F  = 284} , self = 102 , parent = Nothing , duration = 0.753127656000 , status
| | | | | | | | | | | | | | | | | F  = Fail , start = 2025-09-04 08:27:40.369303074 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | | | F  08:27:41.12243073 UTC , thread_cap_info = ("ThreadId 175", 3, False)}
| | | | | | | | | | | | | | | | | F  
F | | | | | | | | | | | | | | | | |  
  F | | | | | | | | | | | | | | | |  
    | | | | F | | | | | | | | | | |  
    F | | |   | | | | | | | | | | |  
      F | |   | | | | | | | | | | |  
        F |   | | | | | | | | | | |  
          |   | F | | | | | | | | |  
E         |   |   | | | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E         |   |   | | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E         |   |   | | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E         |   |   | | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E         |   |   | | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E         |   |   | | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
E         |   |   | | | | | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
E         |   |   | | | | | | | | |  = 4 , total_length = 27} , self = 109 , parent = Nothing , duration = 0.570307058000
E         |   |   | | | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:27:40.748740758
E         |   |   | | | | | | | | |  UTC , finish = 2025-09-04 08:27:41.319047816 UTC , thread_cap_info = ("ThreadId
E         |   |   | | | | | | | | |  192", 0, False)}
E         |   |   | | | | | | | | |  
|         |   |   F | | | | | | | |  
| S       |   |     | | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| S       |   |     | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S       |   |     | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| S       |   |     | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S       |   |     | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S       |   |     | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| S       |   |     | | | | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| S       |   |     | | | | | | | |  = 4 , total_length = 27} , self = 103 , parent = Nothing , duration = 0.418339592000
| S       |   |     | | | | | | | |  , status = Success , start = 2025-09-04 08:27:40.764014132 UTC , finish
| S       |   |     | | | | | | | |  = 2025-09-04 08:27:41.182353724 UTC , thread_cap_info = ("ThreadId 193",
| S       |   |     | | | | | | | |  0, False)}
| S       |   |     | | | | | | | |  
| |       |   |     F | | | | | | |  
| | S     |   |       | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | S     |   |       | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S     |   |       | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S     |   |       | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S     |   |       | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S     |   |       | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | S     |   |       | | | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | S     |   |       | | | | | | |  = 2 , total_length = 30} , self = 106 , parent = Nothing , duration = 0.434806211000
| | S     |   |       | | | | | | |  , status = Success , start = 2025-09-04 08:27:40.881610902 UTC , finish
| | S     |   |       | | | | | | |  = 2025-09-04 08:27:41.316417113 UTC , thread_cap_info = ("ThreadId 194",
| | S     |   |       | | | | | | |  3, False)}
| | S     |   |       | | | | | | |  
| | |     |   |       F | | | | | |  
| | | F   |   |         | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | F   |   |         | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | F   |   |         | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | F   |   |         | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | F   |   |         | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | F   |   |         | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | F   |   |         | | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | | F   |   |         | | | | | |  = 2 , total_length = 30} , self = 105 , parent = Nothing , duration = 0.320006353000
| | | F   |   |         | | | | | |  , status = Fail , start = 2025-09-04 08:27:40.881766127 UTC , finish =
| | | F   |   |         | | | | | |  2025-09-04 08:27:41.20177248 UTC , thread_cap_info = ("ThreadId 195", 3,
| | | F   |   |         | | | | | |  False)}
| | | F   |   |         | | | | | |  
| | | |   |   |         | | F | | |  
| | | |   F   |         | |   | | |  
| | | |       |         F |   | | |  
| | | |       |           F   | | |  
| | | |       |               F | |  
| | | |       |                 F |  
| | | |       F                   |  
| | | |                           F  
| S | |                              
|   | F                              
|   S                                
E                                    
