[Info] pool sizes (success) 3 seen 3 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 3 seen 3 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 553 length 2423
last 174 length 709
last 174 length 709
last 553 length 2423
CNF 174 vars 709 clauses
last 376 length 1587
last 651 length 2751
CNF 376 vars 1587 clauses
CNF 174 vars 709 clauses
CNF 651 vars 2751 clauses
CNF 553 vars 2423 clauses
CNF 553 vars 2423 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1253, clauses: 4323
last 1253 length 4323
CNF 1253 vars 4323 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1253, clauses: 4323, status: Unsatisfied, time: 0.022982054s
**************************************************Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3288, clauses: 13337
last 3982 length 19248

last 4028 length 19366
last 3288 length 13337
CNF 3982 vars 19248 clauses
CNF 4028 vars 19366 clauses
summary
**************************************************
SRS with 1 strict rules and 5 weak rules on 5 letters       split
2 sub-proofs
  1 SRS with 3 strict rules and 3 weak rules on 5 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
  SRS with 75 strict rules and 75 weak rules on 25 letters       weights
  SRS with 0 strict rules and 16 weak rules on 12 letters       no strict rules

  2 SRS with 0 strict rules and 3 weak rules on 4 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, p, b] -> [b, q, b] {- Input 0 -}
  [1, p, 0, 1, 0] ->= [p] {- Input 1 -}
  [q] ->= [0, q, 0] {- Input 2 -}
  [q] ->= [1, q, 1] {- Input 3 -}
  [q] ->= [0, p, 0] {- Input 4 -}
  [q] ->= [1, p, 1] {- Input 5 -}
reason
  split
   property Termination
has value Just True
for SRS
  [b, p, b] -> [b, q, b] {- Input 0 -}
  [1, p, 0, 1, 0] ->= [p] {- Input 1 -}
  [q] ->= [0, q, 0] {- Input 2 -}
  [q] ->= [1, q, 1] {- Input 3 -}
  [q] -> [0, p, 0] {- Input 4 -}
  [q] -> [1, p, 1] {- Input 5 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[b, b], [b, p], [p, b], [b, b]] -> [ [b, b] , [b, q] , [q, b] , [ b , b ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[b, b], [b, p], [p, b], [b, p]] -> [ [b, b] , [b, q] , [q, b] , [ b , p ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, b], [b, p], [p, b], [b, q]] -> [ [b, b] , [b, q] , [q, b] , [ b , q ] ] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, b], [b, p], [p, b], [b, 1]] -> [ [b, b] , [b, q] , [q, b] , [ b , 1 ] ] {- Semlab 0 (Concon 3 (Input 0)) -}
  [[b, b], [b, p], [p, b], [b, 0]] -> [ [b, b] , [b, q] , [q, b] , [ b , 0 ] ] {- Semlab 0 (Concon 4 (Input 0)) -}
  [[p, b], [b, p], [p, b], [b, b]] -> [ [p, b] , [b, q] , [q, b] , [ b , b ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[p, b], [b, p], [p, b], [b, p]] -> [ [p, b] , [b, q] , [q, b] , [ b , p ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[p, b], [b, p], [p, b], [b, q]] -> [ [p, b] , [b, q] , [q, b] , [ b , q ] ] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[p, b], [b, p], [p, b], [b, 1]] -> [ [p, b] , [b, q] , [q, b] , [ b , 1 ] ] {- Semlab 1 (Concon 3 (Input 0)) -}
  [[p, b], [b, p], [p, b], [b, 0]] -> [ [p, b] , [b, q] , [q, b] , [ b , 0 ] ] {- Semlab 1 (Concon 4 (Input 0)) -}
  [[q, b], [b, p], [p, b], [b, b]] -> [ [q, b] , [b, q] , [q, b] , [ b , b ] ] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[q, b], [b, p], [p, b], [b, p]] -> [ [q, b] , [b, q] , [q, b] , [ b , p ] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[q, b], [b, p], [p, b], [b, q]] -> [ [q, b] , [b, q] , [q, b] , [ b , q ] ] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[q, b], [b, p], [p, b], [b, 1]] -> [ [q, b] , [b, q] , [q, b] , [ b , 1 ] ] {- Semlab 2 (Concon 3 (Input 0)) -}
  [[q, b], [b, p], [p, b], [b, 0]] -> [ [q, b] , [b, q] , [q, b] , [ b , 0 ] ] {- Semlab 2 (Concon 4 (Input 0)) -}
  [[1, b], [b, p], [p, b], [b, b]] -> [ [1, b] , [b, q] , [q, b] , [ b , b ] ] {- Semlab 3 (Concon 0 (Input 0)) -}
  [[1, b], [b, p], [p, b], [b, p]] -> [ [1, b] , [b, q] , [q, b] , [ b , p ] ] {- Semlab 3 (Concon 1 (Input 0)) -}
  [[1, b], [b, p], [p, b], [b, q]] -> [ [1, b] , [b, q] , [q, b] , [ b , q ] ] {- Semlab 3 (Concon 2 (Input 0)) -}
  [[1, b], [b, p], [p, b], [b, 1]] -> [ [1, b] , [b, q] , [q, b] , [ b , 1 ] ] {- Semlab 3 (Concon 3 (Input 0)) -}
  [[1, b], [b, p], [p, b], [b, 0]] -> [ [1, b] , [b, q] , [q, b] , [ b , 0 ] ] {- Semlab 3 (Concon 4 (Input 0)) -}
  [[0, b], [b, p], [p, b], [b, b]] -> [ [0, b] , [b, q] , [q, b] , [ b , b ] ] {- Semlab 4 (Concon 0 (Input 0)) -}
  [[0, b], [b, p], [p, b], [b, p]] -> [ [0, b] , [b, q] , [q, b] , [ b , p ] ] {- Semlab 4 (Concon 1 (Input 0)) -}
  [[0, b], [b, p], [p, b], [b, q]] -> [ [0, b] , [b, q] , [q, b] , [ b , q ] ] {- Semlab 4 (Concon 2 (Input 0)) -}
  [[0, b], [b, p], [p, b], [b, 1]] -> [ [0, b] , [b, q] , [q, b] , [ b , 1 ] ] {- Semlab 4 (Concon 3 (Input 0)) -}
  [[0, b], [b, p], [p, b], [b, 0]] -> [ [0, b] , [b, q] , [q, b] , [ b , 0 ] ] {- Semlab 4 (Concon 4 (Input 0)) -}
  [[b, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, b]] ->= [ [b, p] , [ p , b ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, p]] ->= [ [b, p] , [ p , p ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, q]] ->= [ [b, p] , [ p , q ] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, 1]] ->= [ [b, p] , [ p , 1 ] ] {- Semlab 0 (Concon 3 (Input 1)) -}
  [[b, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, 0]] ->= [ [b, p] , [ p , 0 ] ] {- Semlab 0 (Concon 4 (Input 1)) -}
  [[p, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, b]] ->= [ [p, p] , [ p , b ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[p, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, p]] ->= [ [p, p] , [ p , p ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[p, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, q]] ->= [ [p, p] , [ p , q ] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[p, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, 1]] ->= [ [p, p] , [ p , 1 ] ] {- Semlab 1 (Concon 3 (Input 1)) -}
  [[p, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, 0]] ->= [ [p, p] , [ p , 0 ] ] {- Semlab 1 (Concon 4 (Input 1)) -}
  [[q, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, b]] ->= [ [q, p] , [ p , b ] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[q, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, p]] ->= [ [q, p] , [ p , p ] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[q, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, q]] ->= [ [q, p] , [ p , q ] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[q, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, 1]] ->= [ [q, p] , [ p , 1 ] ] {- Semlab 2 (Concon 3 (Input 1)) -}last 4565 length 25970

  [[q, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, 0]] ->= [ [q, p] , [ p , 0 ] ] {- Semlab 2 (Concon 4 (Input 1)) -}
  [[1, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, b]] ->= [ [1, p] , [ p , b ] ] {- Semlab 3 (Concon 0 (Input 1)) -}
  [[1, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, p]] ->= [ [1, p] , [ p , p ] ] {- Semlab 3 (Concon 1 (Input 1)) -}CNF 3288 vars 13337 clauses

  last 4635 length 25804
[[1, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, q]] ->= [ [1, p] , [ p , q ] ] {- Semlab 3 (Concon 2 (Input 1)) -}
  [[1, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, 1]] ->= [ [1, p] , [ p , 1 ] ] {- Semlab 3 (Concon 3 (Input 1)) -}
  [[1, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, 0]] ->= [ [1, p] , [ p , 0 ] ] {- Semlab 3 (Concon 4 (Input 1)) -}
  [[0, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, b]] ->= [ [0, p] , [ p , b ] ] {- Semlab 4 (Concon 0 (Input 1)) -}
  [[0, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, p]] ->= [ [0, p] , [ p , p ] ] {- Semlab 4 (Concon 1 (Input 1)) -}
  [[0, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, q]] ->= [ [0, p] , [ p , q ] ] {- Semlab 4 (Concon 2 (Input 1)) -}
  [[0, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, 1]] ->= [ [0, p] , [ p , 1 ] ] {- Semlab 4 (Concon 3 (Input 1)) -}
  [[0, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, 0]] ->= [ [0, p] , [ p , 0 ] ] {- Semlab 4 (Concon 4 (Input 1)) -}
  [[b, q], [q, b]] ->= [ [b, 0] , [0, q] , [q, 0] , [0, b] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, q], [q, p]] ->= [ [b, 0] , [0, q] , [q, 0] , [0, p] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, q], [q, q]] ->= [ [b, 0] , [0, q] , [q, 0] , [0, q] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[b, q], [q, 1]] ->= [ [b, 0] , [0, q] , [q, 0] , [0, 1] ] {- Semlab 0 (Concon 3 (Input 2)) -}
  [[b, q], [q, 0]] ->= [ [b, 0] , [0, q] , [q, 0] , [0, 0] ] {- Semlab 0 (Concon 4 (Input 2)) -}
  [[p, q], [q, b]] ->= [ [p, 0] , [0, q] , [q, 0] , [0, b] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[p, q], [q, p]] ->= [ [p, 0] , [0, q] , [q, 0] , [0, p] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[p, q], [q, q]] ->= [ [p, 0] , [0, q] , [q, 0] , [0, q] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[p, q], [q, 1]] ->= [ [p, 0] , [0, q] , [q, 0] , [0, 1] ] {- Semlab 1 (Concon 3 (Input 2)) -}
  [[p, q], [q, 0]] ->= [ [p, 0] , [0, q] , [q, 0] , [0, 0] ] {- Semlab 1 (Concon 4 (Input 2)) -}
  [[q, q], [q, b]] ->= [ [q, 0] , [0, q] , [q, 0] , [0, b] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[q, q], [q, p]] ->= [ [q, 0] , [0, q] , [q, 0] , [0, p] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[q, q], [q, q]] ->= [ [q, 0] , [0, q] , [q, 0] , [0, q] ] {- Semlab 2 (Concon 2 (Input 2)) -}
  [[q, q], [q, 1]] ->= [ [q, 0] , [0, q] , [q, 0] , [0, 1] ] {- Semlab 2 (Concon 3 (Input 2)) -}
  [[q, q], [q, 0]] ->= [ [q, 0] , [0, q] , [q, 0] , [0, 0] ] {- Semlab 2 (Concon 4 (Input 2)) -}
  [[1, q], [q, b]] ->= [ [1, 0] , [0, q] , [q, 0] , [0, b] ] {- Semlab 3 (Concon 0 (Input 2)) -}
  [[1, q], [q, p]] ->= [ [1, 0] , [0, q] , [q, 0] , [0, p] ] {- Semlab 3 (Concon 1 (Input 2)) -}
  [[1, q], [q, q]] ->= [ [1, 0] , [0, q] , [q, 0] , [0, q] ] {- Semlab 3 (Concon 2 (Input 2)) -}
  [[1, q], [q, 1]] ->= [ [1, 0] , [0, q] , [q, 0] , [0, 1] ] {- Semlab 3 (Concon 3 (Input 2)) -}
  [[1, q], [q, 0]] ->= [ [1, 0] , [0, q] , [q, 0] , [0, 0] ] {- Semlab 3 (Concon 4 (Input 2)) -}
  [[0, q], [q, b]] ->= [ [0, 0] , [0, q] , [q, 0] , [0, b] ] {- Semlab 4 (Concon 0 (Input 2)) -}
  [[0, q], [q, p]] ->= [ [0, 0] , [0, q] , [q, 0] , [0, p] ] {- Semlab 4 (Concon 1 (Input 2)) -}
  [[0, q], [q, q]] ->= [ [0, 0] , [0, q] , [q, 0] , [0, q] ] {- Semlab 4 (Concon 2 (Input 2)) -}
  [[0, q], [q, 1]] ->= [ [0, 0] , [0, q] , [q, 0] , [0, 1] ] {- Semlab 4 (Concon 3 (Input 2)) -}
  [[0, q], [q, 0]] ->= [ [0, 0] , [0, q] , [q, 0] , [0, 0] ] {- Semlab 4 (Concon 4 (Input 2)) -}
  [[b, q], [q, b]] ->= [ [b, 1] , [1, q] , [q, 1] , [1, b] ] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[b, q], [q, p]] ->= [ [b, 1] , [1, q] , [q, 1] , [1, p] ] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[b, q], [q, q]] ->= [ [b, 1] , [1, q] , [q, 1] , [1, q] ] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[b, q], [q, 1]] ->= [ [b, 1] , [1, q] , [q, 1] , [1, 1] ] {- Semlab 0 (Concon 3 (Input 3)) -}
  [[b, q], [q, 0]] ->= [ [b, 1] , [1, q] , [q, 1] , [1, 0] ] {- Semlab 0 (Concon 4 (Input 3)) -}
  [[p, q], [q, b]] ->= [ [p, 1] , [1, q] , [q, 1] , [1, b] ] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[p, q], [q, p]] ->= [ [p, 1] , [1, q] , [q, 1] , [1, p] ] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[p, q], [q, q]] ->= [ [p, 1] , [1, q] , [q, 1] , [1, q] ] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[p, q], [q, 1]] ->= [ [p, 1] , [1, q] , [q, 1] , [1, 1] ] {- Semlab 1 (Concon 3 (Input 3)) -}
  [[p, q], [q, 0]] ->= [ [p, 1] , [1, q] , [q, 1] , [1, 0] ] {- Semlab 1 (Concon 4 (Input 3)) -}
  [[q, q], [q, b]] ->= [ [q, 1] , [1, q] , [q, 1] , [1, b] ] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[q, q], [q, p]] ->= [ [q, 1] , [1, q] , [q, 1] , [1, p] ] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[q, q], [q, q]] ->= [ [q, 1] , [1, q] , [q, 1] , [1, q] ] {- Semlab 2 (Concon 2 (Input 3)) -}
  [[q, q], [q, 1]] ->= [ [q, 1] , [1, q] , [q, 1] , [1, 1] ] {- Semlab 2 (Concon 3 (Input 3)) -}
  [[q, q], [q, 0]] ->= [ [q, 1] , [1, q] , [q, 1] , [1, 0] ] {- Semlab 2 (Concon 4 (Input 3)) -}
  [[1, q], [q, b]] ->= [ [1, 1] , [1, q] , [q, 1] , [1, b] ] {- Semlab 3 (Concon 0 (Input 3)) -}
  [[1, q], [q, p]] ->= [ [1, 1] , [1, q] , [q, 1] , [1, p] ] {- Semlab 3 (Concon 1 (Input 3)) -}
  [[1, q], [q, q]] ->= [ [1, 1] , [1, q] , [q, 1] , [1, q] ] {- Semlab 3 (Concon 2 (Input 3)) -}
  [[1, q], [q, 1]] ->= [ [1, 1] , [1, q] , [q, 1] , [1, 1] ] {- Semlab 3 (Concon 3 (Input 3)) -}
  [[1, q], [q, 0]] ->= [ [1, 1] , [1, q] , [q, 1] , [1, 0] ] {- Semlab 3 (Concon 4 (Input 3)) -}
  [[0, q], [q, b]] ->= [ [0, 1] , [1, q] , [q, 1] , [1, b] ] {- Semlab 4 (Concon 0 (Input 3)) -}
  [[0, q], [q, p]] ->= [ [0, 1] , [1, q] , [q, 1] , [1, p] ] {- Semlab 4 (Concon 1 (Input 3)) -}
  [[0, q], [q, q]] ->= [ [0, 1] , [1, q] , [q, 1] , [1, q] ] {- Semlab 4 (Concon 2 (Input 3)) -}
  [[0, q], [q, 1]] ->= [ [0, 1] , [1, q] , [q, 1] , [1, 1] ] {- Semlab 4 (Concon 3 (Input 3)) -}
  [[0, q], [q, 0]] ->= [ [0, 1] , [1, q] , [q, 1] , [1, 0] ] {- Semlab 4 (Concon 4 (Input 3)) -}
  [[b, q], [q, b]] -> [ [b, 0] , [0, p] , [p, 0] , [0, b] ] {- Semlab 0 (Concon 0 (Input 4)) -}
  [[b, q], [q, p]] -> [ [b, 0] , [0, p] , [p, 0] , [0, p] ] {- Semlab 0 (Concon 1 (Input 4)) -}
  [[b, q], [q, q]] -> [ [b, 0] , [0, p] , [p, 0] , [0, q] ] {- Semlab 0 (Concon 2 (Input 4)) -}
  [[b, q], [q, 1]] -> [ [b, 0] , [0, p] , [p, 0] , [0, 1] ] {- Semlab 0 (Concon 3 (Input 4)) -}
  [[b, q], [q, 0]] -> [ [b, 0] , [0, p] , [p, 0] , [0, 0] ] {- Semlab 0 (Concon 4 (Input 4)) -}
  [[p, q], [q, b]] -> [ [p, 0] , [0, p] , [p, 0] , [0, b] ] {- Semlab 1 (Concon 0 (Input 4)) -}
  [[p, q], [q, p]] -> [ [p, 0] , [0, p] , [p, 0] , [0, p] ] {- Semlab 1 (Concon 1 (Input 4)) -}
  [[p, q], [q, q]] -> [ [p, 0] , [0, p] , [p, 0] , [0, q] ] {- Semlab 1 (Concon 2 (Input 4)) -}
  [[p, q], [q, 1]] -> [ [p, 0] , [0, p] , [p, 0] , [0, 1] ] {- Semlab 1 (Concon 3 (Input 4)) -}
  [[p, q], [q, 0]] -> [ [p, 0] , [0, p] , [p, 0] , [0, 0] ] {- Semlab 1 (Concon 4 (Input 4)) -}
  [[q, q], [q, b]] -> [ [q, 0] , [0, p] , [p, 0] , [0, b] ] {- Semlab 2 (Concon 0 (Input 4)) -}
  [[q, q], [q, p]] -> [ [q, 0] , [0, p] , [p, 0] , [0, p] ] {- Semlab 2 (Concon 1 (Input 4)) -}
  [[q, q], [q, q]] -> [ [q, 0] , [0, p] , [p, 0] , [0, q] ] {- Semlab 2 (Concon 2 (Input 4)) -}
  [[q, q], [q, 1]] -> [ [q, 0] , [0, p] , [p, 0] , [0, 1] ] {- Semlab 2 (Concon 3 (Input 4)) -}
  [[q, q], [q, 0]] -> [ [q, 0] , [0, p] , [p, 0] , [0, 0] ] {- Semlab 2 (Concon 4 (Input 4)) -}
  [[1, q], [q, b]] -> [ [1, 0] , [0, p] , [p, 0] , [0, b] ] {- Semlab 3 (Concon 0 (Input 4)) -}
  [[1, q], [q, p]] -> [ [1, 0] , [0, p] , [p, 0] , [0, p] ] {- Semlab 3 (Concon 1 (Input 4)) -}
  [[1, q], [q, q]] -> [ [1, 0] , [0, p] , [p, 0] , [0, q] ] {- Semlab 3 (Concon 2 (Input 4)) -}
  [[1, q], [q, 1]] -> [ [1, 0] , [0, p] , [p, 0] , [0, 1] ] {- Semlab 3 (Concon 3 (Input 4)) -}
  [[1, q], [q, 0]] -> [ [1, 0] , [0, p] , [p, 0] , [0, 0] ] {- Semlab 3 (Concon 4 (Input 4)) -}
  [[0, q], [q, b]] -> [ [0, 0] , [0, p] , [p, 0] , [0, b] ] {- Semlab 4 (Concon 0 (Input 4)) -}
  [[0, q], [q, p]] -> [ [0, 0] , [0, p] , [p, 0] , [0, p] ] {- Semlab 4 (Concon 1 (Input 4)) -}
  [[0, q], [q, q]] -> [ [0, 0] , [0, p] , [p, 0] , [0, q] ] {- Semlab 4 (Concon 2 (Input 4)) -}
  [[0, q], [q, 1]] -> [ [0, 0] , [0, p] , [p, 0] , [0, 1] ] {- Semlab 4 (Concon 3 (Input 4)) -}
  [[0, q], [q, 0]] -> [ [0, 0] , [0, p] , [p, 0] , [0, 0] ] {- Semlab 4 (Concon 4 (Input 4)) -}
  [[b, q], [q, b]] -> [ [b, 1] , [1, p] , [p, 1] , [1, b] ] {- Semlab 0 (Concon 0 (Input 5)) -}
  [[b, q], [q, p]] -> [ [b, 1] , [1, p] , [p, 1] , [1, p] ] {- Semlab 0 (Concon 1 (Input 5)) -}
  [[b, q], [q, q]] -> [ [b, 1] , [1, p] , [p, 1] , [1, q] ] {- Semlab 0 (Concon 2 (Input 5)) -}
  [[b, q], [q, 1]] -> [ [b, 1] , [1, p] , [p, 1] , [1, 1] ] {- Semlab 0 (Concon 3 (Input 5)) -}
  [[b, q], [q, 0]] -> [ [b, 1] , [1, p] , [p, 1] , [1, 0] ] {- Semlab 0 (Concon 4 (Input 5)) -}
  [[p, q], [q, b]] -> [ [p, 1] , [1, p] , [p, 1] , [1, b] ] {- Semlab 1 (Concon 0 (Input 5)) -}
  [[p, q], [q, p]] -> [ [p, 1] , [1, p] , [p, 1] , [1, p] ] {- Semlab 1 (Concon 1 (Input 5)) -}
  [[p, q], [q, q]] -> [ [p, 1] , [1, p] , [p, 1] , [1, q] ] {- Semlab 1 (Concon 2 (Input 5)) -}
  [[p, q], [q, 1]] -> [ [p, 1] , [1, p] , [p, 1] , [1, 1] ] {- Semlab 1 (Concon 3 (Input 5)) -}
  [[p, q], [q, 0]] -> [ [p, 1] , [1, p] , [p, 1] , [1, 0] ] {- Semlab 1 (Concon 4 (Input 5)) -}
  [[q, q], [q, b]] -> [ [q, 1] , [1, p] , [p, 1] , [1, b] ] {- Semlab 2 (Concon 0 (Input 5)) -}
  [[q, q], [q, p]] -> [ [q, 1] , [1, p] , [p, 1] , [1, p] ] {- Semlab 2 (Concon 1 (Input 5)) -}
  [[q, q], [q, q]] -> [ [q, 1] , [1, p] , [p, 1] , [1, q] ] {- Semlab 2 (Concon 2 (Input 5)) -}
  [[q, q], [q, 1]] -> [ [q, 1] , [1, p] , [p, 1] , [1, 1] ] {- Semlab 2 (Concon 3 (Input 5)) -}
  [[q, q], [q, 0]] -> [ [q, 1] , [1, p] , [p, 1] , [1, 0] ] {- Semlab 2 (Concon 4 (Input 5)) -}
  [[1, q], [q, b]] -> [ [1, 1] , [1, p] , [p, 1] , [1, b] ] {- Semlab 3 (Concon 0 (Input 5)) -}
  [[1, q], [q, p]] -> [ [1, 1] , [1, p] , [p, 1] , [1, p] ] {- Semlab 3 (Concon 1 (Input 5)) -}
  [[1, q], [q, q]] -> [ [1, 1] , [1, p] , [p, 1] , [1, q] ] {- Semlab 3 (Concon 2 (Input 5)) -}
  [[1, q], [q, 1]] -> [ [1, 1] , [1, p] , [p, 1] , [1, 1] ] {- Semlab 3 (Concon 3 (Input 5)) -}
  [[1, q], [q, 0]] -> [ [1, 1] , [1, p] , [p, 1] , [1, 0] ] {- Semlab 3 (Concon 4 (Input 5)) -}
  [[0, q], [q, b]] -> [ [0, 1] , [1, p] , [p, 1] , [1, b] ] {- Semlab 4 (Concon 0 (Input 5)) -}
  [[0, q], [q, p]] -> [ [0, 1] , [1, p] , [p, 1] , [1, p] ] {- Semlab 4 (Concon 1 (Input 5)) -}
  [[0, q], [q, q]] -> [ [0, 1] , [1, p] , [p, 1] , [1, q] ] {- Semlab 4 (Concon 2 (Input 5)) -}
  [[0, q], [q, 1]] -> [ [0, 1] , [1, p] , [p, 1] , [1, 1] ] {- Semlab 4 (Concon 3 (Input 5)) -}
  [[0, q], [q, 0]] -> [ [0, 1] , [1, p] , [p, 1] , [1, 0] ] {- Semlab 4 (Concon 4 (Input 5)) -}
reason
  ([1, 1], 0/1)
  ([1, p], 9/1)
  ([1, b], 0/1)
  ([1, 0], 0/1)
  ([1, q], 5/1)
  ([p, 1], 1/1)
  ([p, p], 0/1)
  ([p, b], 25/2)
  ([p, 0], 10/1)
  ([p, q], 15/1)
  ([b, 1], 6/1)
  ([b, p], 25/2)
  ([b, b], 0/1)
  ([b, 0], 0/1)
  ([b, q], 12/1)
  ([0, 1], 0/1)
  ([0, p], 0/1)
  ([0, b], 5/1)
  ([0, 0], 0/1)
  ([0, q], 5/1)
  ([q, 1], 6/1)
  ([q, p], 15/1)
  ([q, b], 12/1)
  ([q, 0], 6/1)
  ([q, q], 23/1)
   property Termination
has value Just True
for SRS
  [[q, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, q]] ->= [ [q, p] , [ p , q ] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[q, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, 0]] ->= [ [q, p] , [ p , 0 ] ] {- Semlab 2 (Concon 4 (Input 1)) -}
  [[1, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, q]] ->= [ [1, p] , [ p , q ] ] {- Semlab 3 (Concon 2 (Input 1)) -}
  [[1, 1], [1, p], [p, 0], [0, 1], [1, 0], [0, 0]] ->= [ [1, p] , [ p , 0 ] ] {- Semlab 3 (Concon 4 (Input 1)) -}
  [[p, q], [q, 1]] ->= [ [p, 0] , [0, q] , [q, 0] , [0, 1] ] {- Semlab 1 (Concon 3 (Input 2)) -}
  [[p, q], [q, 0]] ->= [ [p, 0] , [0, q] , [q, 0] , [0, 0] ] {- Semlab 1 (Concon 4 (Input 2)) -}
  [[1, q], [q, 1]] ->= [ [1, 0] , [0, q] , [q, 0] , [0, 1] ] {- Semlab 3 (Concon 3 (Input 2)) -}
  [[1, q], [q, 0]] ->= [ [1, 0] , [0, q] , [q, 0] , [0, 0] ] {- Semlab 3 (Concon 4 (Input 2)) -}
  [[0, q], [q, 1]] ->= [ [0, 0] , [0, q] , [q, 0] , [0, 1] ] {- Semlab 4 (Concon 3 (Input 2)) -}
  [[0, q], [q, 0]] ->= [ [0, 0] , [0, q] , [q, 0] , [0, 0] ] {- Semlab 4 (Concon 4 (Input 2)) -}
  [[1, q], [q, p]] ->= [ [1, 1] , [1, q] , [q, 1] , [1, p] ] {- Semlab 3 (Concon 1 (Input 3)) -}
  [[1, q], [q, 1]] ->= [ [1, 1] , [1, q] , [q, 1] , [1, 1] ] {- Semlab 3 (Concon 3 (Input 3)) -}
  [[1, q], [q, 0]] ->= [ [1, 1] , [1, q] , [q, 1] , [1, 0] ] {- Semlab 3 (Concon 4 (Input 3)) -}
  [[0, q], [q, p]] ->= [ [0, 1] , [1, q] , [q, 1] , [1, p] ] {- Semlab 4 (Concon 1 (Input 3)) -}
  [[0, q], [q, 1]] ->= [ [0, 1] , [1, q] , [q, 1] , [1, 1] ] {- Semlab 4 (Concon 3 (Input 3)) -}
  [[0, q], [q, 0]] ->= [ [0, 1] , [1, q] , [q, 1] , [1, 0] ] {- Semlab 4 (Concon 4 (Input 3)) -}
reason
  no strict rules

property Termination
has value Just True
for SRS
  [1, p, 0, 1, 0] ->= [p] {- Input 1 -}
  [q] ->= [0, q, 0] {- Input 2 -}
  [q] ->= [1, q, 1] {- Input 3 -}
reason
  no strict rules

**************************************************
skeleton: (1/5,5)\Split[(3/3,5)\TileAllAll{2}(75/75,25)\Weight(0/16,12)[],(0/3,4)[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3288, clauses: 13337, status: Unsatisfied, time: 0.071483546s
{verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 4565 vars 25970 clauses
CNF 4635 vars 25804 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************

**************************************************
   
