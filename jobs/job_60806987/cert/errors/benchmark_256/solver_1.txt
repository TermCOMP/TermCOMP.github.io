last 1086 length 4365
CNF 1086 vars 4365 clauses
last 1334 length 5405
CNF 1334 vars 5405 clauses
last 786 length 3109
last 606 length 2449
CNF 786 vars 3109 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3403, clauses: 12664
CNF 606 vars 2449 clauses
last 7702 length 33357
last 3403 length 12664
last 11781 length 49861
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2195, clauses: 7962
last 12190 length 53030
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9802, clauses: 40841
last 8028 length 34737
CNF 7702 vars 33357 clauses
last 12207 length 51645
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7800, clauses: 32531
last 15547 length 66177
CNF 3403 vars 12664 clauses
CNF 11781 vars 49861 clauses
last 2195 length 7962
CNF 12190 vars 53030 clauses
last 9802 length 40841
CNF 8028 vars 34737 clauses
last 7800 length 32531
CNF 12207 vars 51645 clauses
CNF 15547 vars 66177 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3403, clauses: 12664, status: Satisfied, time: 0.588200496s
CNF 2195 vars 7962 clauses
CNF 9802 vars 40841 clauses
CNF 7800 vars 32531 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7800, clauses: 32531, status: Satisfied, time: 0.476503722s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2195, clauses: 7962, status: Unsatisfied, time: 0.540994871s
last 1060 length 4293
CNF 1060 vars 4293 clauses
last 880 length 3523
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18260, clauses: 71169
last 18260 length 71169
CNF 18260 vars 71169 clauses
CNF 880 vars 3523 clauses
last 786 length 3109
CNF 786 vars 3109 clauses
last 606 length 2449
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2797, clauses: 10291
last 2797 length 10291
CNF 606 vars 2449 clauses
CNF 2797 vars 10291 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8799, clauses: 36679
last 8799 length 36679
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18260, clauses: 71169, status: Satisfied, time: 0.30046115s
CNF 8799 vars 36679 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2195, clauses: 7962
last 2195 length 7962
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2797, clauses: 10291, status: Satisfied, time: 0.17355477s
CNF 2195 vars 7962 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2195, clauses: 7962, status: Unsatisfied, time: 0.238290268s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14345, clauses: 53643
last 14345 length 53643
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7800, clauses: 32531
last 7800 length 32531
CNF 7800 vars 32531 clauses
last 912 length 3713
CNF 912 vars 3713 clauses
last 862 length 3469
CNF 862 vars 3469 clauses
CNF 14345 vars 53643 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2577, clauses: 9338
last 2577 length 9338
CNF 2577 vars 9338 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4753, clauses: 19359
last 4753 length 19359
CNF 4753 vars 19359 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8751, clauses: 36481
last 8751 length 36481
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7800, clauses: 32531, status: Unsatisfied, time: 0.290556959s
CNF 8751 vars 36481 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2577, clauses: 9338, status: Unsatisfied, time: 0.199367623s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14345, clauses: 53643, status: Satisfied, time: 0.419723424s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5330, clauses: 21701
last 5330 length 21701
CNF 5330 vars 21701 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3601, clauses: 13909
last 3601 length 13909
CNF 3601 vars 13909 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4753, clauses: 19359, status: Unsatisfied, time: 0.717309156s
last 15547 length 66177
CNF 15547 vars 66177 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3601, clauses: 13909, status: Unsatisfied, time: 0.688173727s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13563, clauses: 57398
last 13563 length 57398
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5330, clauses: 21701, status: Unsatisfied, time: 1.245347372s
CNF 13563 vars 57398 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8751, clauses: 36481, status: Unsatisfied, time: 1.404616637s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6775, clauses: 25980
last 6775 length 25980
CNF 6775 vars 25980 clauses
last 12190 length 53030
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4208, clauses: 16220
last 4208 length 16220
CNF 4208 vars 16220 clauses
last 7940 length 34365
CNF 12190 vars 53030 clauses
last 11957 length 50597
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 15052, clauses: 63561
last 15052 length 63561
CNF 15052 vars 63561 clauses
CNF 7940 vars 34365 clauses
CNF 11957 vars 50597 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4208, clauses: 16220, status: Unsatisfied, time: 0.935074309s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18260, clauses: 71169
last 18260 length 71169
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7919, clauses: 30237
CNF 18260 vars 71169 clauses
last 7919 length 30237
CNF 7919 vars 30237 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14045, clauses: 52482
last 14045 length 52482
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18260, clauses: 71169, status: Satisfied, time: 0.897983078s
CNF 14045 vars 52482 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14045, clauses: 52482, status: Satisfied, time: 1.522568636s
last 12190 length 53030
last 15547 length 66177
CNF 15547 vars 66177 clauses
CNF 12190 vars 53030 clauses
last 9738 length 42655
last 12667 length 53821
CNF 9738 vars 42655 clauses
CNF 12667 vars 53821 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18260, clauses: 71169
last 18260 length 71169
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6775, clauses: 25980, status: Unsatisfied, time: 6.685117661s
CNF 18260 vars 71169 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14616, clauses: 55199
last 14616 length 55199
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 18260, clauses: 71169, status: Satisfied, time: 1.01271693s
CNF 14616 vars 55199 clauses
Matrix {monotone = Weak, domain = Arctic, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 5, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16758, clauses: 78371
last 16758 length 78371
**************************************************
summary
**************************************************
SRS with 4 strict rules and 2 weak rules on 3 letters       cleaner
SRS with 4 strict rules and 1 weak rules on 3 letters       strictify
SRS with 5 rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 45 rules on 9 letters       mirror
SRS with 45 rules on 9 letters       DP
SRS with 144 strict rules and 45 weak rules on 18 letters       weights
SRS with 45 strict rules and 45 weak rules on 18 letters       EDG
3 sub-proofs
  1 SRS with 15 strict rules and 45 weak rules on 12 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 9 strict rules and 45 weak rules on 12 letters       weights
  SRS with 0 strict rules and 45 weak rules on 9 letters       EDG

  2 SRS with 15 strict rules and 45 weak rules on 12 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 9 strict rules and 45 weak rules on 12 letters       weights
  SRS with 0 strict rules and 45 weak rules on 9 letters       EDG

  3 SRS with 15 strict rules and 45 weak rules on 12 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 9 strict rules and 45 weak rules on 12 letters       weights
  SRS with 0 strict rules and 45 weak rules on 9 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, c, b] -> [b, b, a] {- Input 0 -}
  [a, c, b] -> [a, c, c] {- Input 1 -}
  [b, b, b] -> [a, a, c] {- Input 2 -}
  [c, a, c] -> [b, b, b] {- Input 3 -}
  [b, a, b] ->= [b, a, b] {- Input 4 -}
  [b, a, a] ->= [b, a, b] {- Input 5 -}
reason
  cleaner
   property Termination
has value Just True
for SRS
  [a, c, b] -> [b, b, a] {- Input 0 -}
  [a, c, b] -> [a, c, c] {- Input 1 -}
  [b, b, b] -> [a, a, c] {- Input 2 -}
  [c, a, c] -> [b, b, b] {- Input 3 -}
  [b, a, a] ->= [b, a, b] {- Input 5 -}
reason
  strictify
   property Termination
has value Just True
for SRS
  [a, c, b] -> [b, b, a] {- Input 0 -}
  [a, c, b] -> [a, c, c] {- Input 1 -}
  [b, b, b] -> [a, a, c] {- Input 2 -}
  [c, a, c] -> [b, b, b] {- Input 3 -}
  [b, a, a] -> [b, a, b] {- Strictified (Input 5) -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, c], [c, b], [b, a]] -> [ [a, b] , [b, b] , [b, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, c], [c, b], [b, c]] -> [ [a, b] , [b, b] , [b, a] , [ a , c ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, c], [c, b], [b, b]] -> [ [a, b] , [b, b] , [b, a] , [ a , b ] ] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[c, a], [a, c], [c, b], [b, a]] -> [ [c, b] , [b, b] , [b, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[c, a], [a, c], [c, b], [b, c]] -> [ [c, b] , [b, b] , [b, a] , [ a , c ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[c, a], [a, c], [c, b], [b, b]] -> [ [c, b] , [b, b] , [b, a] , [ a , b ] ] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[b, a], [a, c], [c, b], [b, a]] -> [ [b, b] , [b, b] , [b, a] , [ a , a ] ] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[b, a], [a, c], [c, b], [b, c]] -> [ [b, b] , [b, b] , [b, a] , [ a , c ] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[b, a], [a, c], [c, b], [b, b]] -> [ [b, b] , [b, b] , [b, a] , [ a , b ] ] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a], [a, c], [c, b], [b, a]] -> [ [a, a] , [a, c] , [c, c] , [ c , a ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, c], [c, b], [b, c]] -> [ [a, a] , [a, c] , [c, c] , [ c , c ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, c], [c, b], [b, b]] -> [ [a, a] , [a, c] , [c, c] , [ c , b ] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[c, a], [a, c], [c, b], [b, a]] -> [ [c, a] , [a, c] , [c, c] , [ c , a ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[c, a], [a, c], [c, b], [b, c]] -> [ [c, a] , [a, c] , [c, c] , [ c , c ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[c, a], [a, c], [c, b], [b, b]] -> [ [c, a] , [a, c] , [c, c] , [ c , b ] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[b, a], [a, c], [c, b], [b, a]] -> [ [b, a] , [a, c] , [c, c] , [ c , a ] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[b, a], [a, c], [c, b], [b, c]] -> [ [b, a] , [a, c] , [c, c] , [ c , c ] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[b, a], [a, c], [c, b], [b, b]] -> [ [b, a] , [a, c] , [c, c] , [ c , b ] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, b], [b, b], [b, b], [b, a]] -> [ [a, a] , [a, a] , [a, c] , [ c , a ] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b], [b, b], [b, b], [b, c]] -> [ [a, a] , [a, a] , [a, c] , [ c , c ] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b], [b, b], [b, b], [b, b]] -> [ [a, a] , [a, a] , [a, c] , [ c , b ] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[c, b], [b, b], [b, b], [b, a]] -> [ [c, a] , [a, a] , [a, c] , [ c , a ] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[c, b], [b, b], [b, b], [b, c]] -> [ [c, a] , [a, a] , [a, c] , [ c , c ] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[c, b], [b, b], [b, b], [b, b]] -> [ [c, a] , [a, a] , [a, c] , [ c , b ] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[b, b], [b, b], [b, b], [b, a]] -> [ [b, a] , [a, a] , [a, c] , [ c , a ] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[b, b], [b, b], [b, b], [b, c]] -> [ [b, a] , [a, a] , [a, c] , [ c , c ] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[b, b], [b, b], [b, b], [b, b]] -> [ [b, a] , [a, a] , [a, c] , [ c , b ] ] {- Semlab 2 (Concon 2 (Input 2)) -}
  [[a, c], [c, a], [a, c], [c, a]] -> [ [a, b] , [b, b] , [b, b] , [ b , a ] ] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[a, c], [c, a], [a, c], [c, c]] -> [ [a, b] , [b, b] , [b, b] , [ b , c ] ] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[a, c], [c, a], [a, c], [c, b]] -> [ [a, b] , [b, b] , [b, b] , [ b , b ] ] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[c, c], [c, a], [a, c], [c, a]] -> [ [c, b] , [b, b] , [b, b] , [ b , a ] ] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[c, c], [c, a], [a, c], [c, c]] -> [ [c, b] , [b, b] , [b, b] , [ b , c ] ] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[c, c], [c, a], [a, c], [c, b]] -> [ [c, b] , [b, b] , [b, b] , [ b , b ] ] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[b, c], [c, a], [a, c], [c, a]] -> [ [b, b] , [b, b] , [b, b] , [ b , a ] ] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[b, c], [c, a], [a, c], [c, c]] -> [ [b, b] , [b, b] , [b, b] , [ b , c ] ] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[b, c], [c, a], [a, c], [c, b]] -> [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- Semlab 2 (Concon 2 (Input 3)) -}
  [[a, b], [b, a], [a, a], [a, a]] -> [ [a, b] , [b, a] , [a, b] , [ b , a ] ] {- Semlab 0 (Concon 0 (Strictified (Input 5))) -}
  [[a, b], [b, a], [a, a], [a, c]] -> [ [a, b] , [b, a] , [a, b] , [ b , c ] ] {- Semlab 0 (Concon 1 (Strictified (Input 5))) -}
  [[a, b], [b, a], [a, a], [a, b]] -> [ [a, b] , [b, a] , [a, b] , [ b , b ] ] {- Semlab 0 (Concon 2 (Strictified (Input 5))) -}
  [[c, b], [b, a], [a, a], [a, a]] -> [ [c, b] , [b, a] , [a, b] , [ b , a ] ] {- Semlab 1 (Concon 0 (Strictified (Input 5))) -}
  [[c, b], [b, a], [a, a], [a, c]] -> [ [c, b] , [b, a] , [a, b] , [ b , c ] ] {- Semlab 1 (Concon 1 (Strictified (Input 5))) -}
  [[c, b], [b, a], [a, a], [a, b]] -> [ [c, b] , [b, a] , [a, b] , [ b , b ] ] {- Semlab 1 (Concon 2 (Strictified (Input 5))) -}
  [[b, b], [b, a], [a, a], [a, a]] -> [ [b, b] , [b, a] , [a, b] , [ b , a ] ] {- Semlab 2 (Concon 0 (Strictified (Input 5))) -}
  [[b, b], [b, a], [a, a], [a, c]] -> [ [b, b] , [b, a] , [a, b] , [ b , c ] ] {- Semlab 2 (Concon 1 (Strictified (Input 5))) -}
  [[b, b], [b, a], [a, a], [a, b]] -> [ [b, b] , [b, a] , [a, b] , [ b , b ] ] {- Semlab 2 (Concon 2 (Strictified (Input 5))) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [[b, a], [c, b], [a, c], [a, a]] -> [ [a, a] , [b, a] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 0 (Input 0))) -}
  [[b, c], [c, b], [a, c], [a, a]] -> [ [a, c] , [b, a] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 0))) -}
  [[b, b], [c, b], [a, c], [a, a]] -> [ [a, b] , [b, a] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 2 (Input 0))) -}
  [[b, a], [c, b], [a, c], [c, a]] -> [ [a, a] , [b, a] , [b, b] , [ c , b ] ] {- Mirror (Semlab 1 (Concon 0 (Input 0))) -}
  [[b, c], [c, b], [a, c], [c, a]] -> [ [a, c] , [b, a] , [b, b] , [ c , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 0))) -}
  [[b, b], [c, b], [a, c], [c, a]] -> [ [a, b] , [b, a] , [b, b] , [ c , b ] ] {- Mirror (Semlab 1 (Concon 2 (Input 0))) -}
  [[b, a], [c, b], [a, c], [b, a]] -> [ [a, a] , [b, a] , [b, b] , [ b , b ] ] {- Mirror (Semlab 2 (Concon 0 (Input 0))) -}
  [[b, c], [c, b], [a, c], [b, a]] -> [ [a, c] , [b, a] , [b, b] , [ b , b ] ] {- Mirror (Semlab 2 (Concon 1 (Input 0))) -}
  [[b, b], [c, b], [a, c], [b, a]] -> [ [a, b] , [b, a] , [b, b] , [ b , b ] ] {- Mirror (Semlab 2 (Concon 2 (Input 0))) -}
  [[b, a], [c, b], [a, c], [a, a]] -> [ [c, a] , [c, c] , [a, c] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 0 (Input 1))) -}
  [[b, c], [c, b], [a, c], [a, a]] -> [ [c, c] , [c, c] , [a, c] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 1 (Input 1))) -}
  [[b, b], [c, b], [a, c], [a, a]] -> [ [c, b] , [c, c] , [a, c] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 2 (Input 1))) -}
  [[b, a], [c, b], [a, c], [c, a]] -> [ [c, a] , [c, c] , [a, c] , [ c , a ] ] {- Mirror (Semlab 1 (Concon 0 (Input 1))) -}
  [[b, c], [c, b], [a, c], [c, a]] -> [ [c, c] , [c, c] , [a, c] , [ c , a ] ] {- Mirror (Semlab 1 (Concon 1 (Input 1))) -}
  [[b, b], [c, b], [a, c], [c, a]] -> [ [c, b] , [c, c] , [a, c] , [ c , a ] ] {- Mirror (Semlab 1 (Concon 2 (Input 1))) -}
  [[b, a], [c, b], [a, c], [b, a]] -> [ [c, a] , [c, c] , [a, c] , [ b , a ] ] {- Mirror (Semlab 2 (Concon 0 (Input 1))) -}
  [[b, c], [c, b], [a, c], [b, a]] -> [ [c, c] , [c, c] , [a, c] , [ b , a ] ] {- Mirror (Semlab 2 (Concon 1 (Input 1))) -}
  [[b, b], [c, b], [a, c], [b, a]] -> [ [c, b] , [c, c] , [a, c] , [ b , a ] ] {- Mirror (Semlab 2 (Concon 2 (Input 1))) -}
  [[b, a], [b, b], [b, b], [a, b]] -> [ [c, a] , [a, c] , [a, a] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 0 (Input 2))) -}
  [[b, c], [b, b], [b, b], [a, b]] -> [ [c, c] , [a, c] , [a, a] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 1 (Input 2))) -}
  [[b, b], [b, b], [b, b], [a, b]] -> [ [c, b] , [a, c] , [a, a] , [ a , a ] ] {- Mirror (Semlab 0 (Concon 2 (Input 2))) -}
  [[b, a], [b, b], [b, b], [c, b]] -> [ [c, a] , [a, c] , [a, a] , [ c , a ] ] {- Mirror (Semlab 1 (Concon 0 (Input 2))) -}
  [[b, c], [b, b], [b, b], [c, b]] -> [ [c, c] , [a, c] , [a, a] , [ c , a ] ] {- Mirror (Semlab 1 (Concon 1 (Input 2))) -}
  [[b, b], [b, b], [b, b], [c, b]] -> [ [c, b] , [a, c] , [a, a] , [ c , a ] ] {- Mirror (Semlab 1 (Concon 2 (Input 2))) -}
  [[b, a], [b, b], [b, b], [b, b]] -> [ [c, a] , [a, c] , [a, a] , [ b , a ] ] {- Mirror (Semlab 2 (Concon 0 (Input 2))) -}
  [[b, c], [b, b], [b, b], [b, b]] -> [ [c, c] , [a, c] , [a, a] , [ b , a ] ] {- Mirror (Semlab 2 (Concon 1 (Input 2))) -}
  [[b, b], [b, b], [b, b], [b, b]] -> [ [c, b] , [a, c] , [a, a] , [ b , a ] ] {- Mirror (Semlab 2 (Concon 2 (Input 2))) -}
  [[c, a], [a, c], [c, a], [a, c]] -> [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 0 (Input 3))) -}
  [[c, c], [a, c], [c, a], [a, c]] -> [ [b, c] , [b, b] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Input 3))) -}
  [[c, b], [a, c], [c, a], [a, c]] -> [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 2 (Input 3))) -}
  [[c, a], [a, c], [c, a], [c, c]] -> [ [b, a] , [b, b] , [b, b] , [ c , b ] ] {- Mirror (Semlab 1 (Concon 0 (Input 3))) -}
  [[c, c], [a, c], [c, a], [c, c]] -> [ [b, c] , [b, b] , [b, b] , [ c , b ] ] {- Mirror (Semlab 1 (Concon 1 (Input 3))) -}
  [[c, b], [a, c], [c, a], [c, c]] -> [ [b, b] , [b, b] , [b, b] , [ c , b ] ] {- Mirror (Semlab 1 (Concon 2 (Input 3))) -}
  [[c, a], [a, c], [c, a], [b, c]] -> [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- Mirror (Semlab 2 (Concon 0 (Input 3))) -}
  [[c, c], [a, c], [c, a], [b, c]] -> [ [b, c] , [b, b] , [b, b] , [ b , b ] ] {- Mirror (Semlab 2 (Concon 1 (Input 3))) -}
  [[c, b], [a, c], [c, a], [b, c]] -> [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- Mirror (Semlab 2 (Concon 2 (Input 3))) -}
  [[a, a], [a, a], [b, a], [a, b]] -> [ [b, a] , [a, b] , [b, a] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 0 (Strictified (Input 5)))) -}
  [[a, c], [a, a], [b, a], [a, b]] -> [ [b, c] , [a, b] , [b, a] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 1 (Strictified (Input 5)))) -}
  [[a, b], [a, a], [b, a], [a, b]] -> [ [b, b] , [a, b] , [b, a] , [ a , b ] ] {- Mirror (Semlab 0 (Concon 2 (Strictified (Input 5)))) -}
  [[a, a], [a, a], [b, a], [c, b]] -> [ [b, a] , [a, b] , [b, a] , [ c , b ] ] {- Mirror (Semlab 1 (Concon 0 (Strictified (Input 5)))) -}
  [[a, c], [a, a], [b, a], [c, b]] -> [ [b, c] , [a, b] , [b, a] , [ c , b ] ] {- Mirror (Semlab 1 (Concon 1 (Strictified (Input 5)))) -}
  [[a, b], [a, a], [b, a], [c, b]] -> [ [b, b] , [a, b] , [b, a] , [ c , b ] ] {- Mirror (Semlab 1 (Concon 2 (Strictified (Input 5)))) -}
  [[a, a], [a, a], [b, a], [b, b]] -> [ [b, a] , [a, b] , [b, a] , [ b , b ] ] {- Mirror (Semlab 2 (Concon 0 (Strictified (Input 5)))) -}
  [[a, c], [a, a], [b, a], [b, b]] -> [ [b, c] , [a, b] , [b, a] , [ b , b ] ] {- Mirror (Semlab 2 (Concon 1 (Strictified (Input 5)))) -}
  [[a, b], [a, a], [b, a], [b, b]] -> [ [b, b] , [a, b] , [b, a] , [ b , b ] ] {- Mirror (Semlab 2 (Concon 2 (Strictified (Input 5)))) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [[b, a], [c, b], [a, c], [a, a]] ->= [ [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [a, c] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [c, a]] ->= [ [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [a, c] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [a, b] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [b, a]] ->= [ [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [a, c] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [a, a]] ->= [ [c, a] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [c, c] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [c, b] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [c, a]] ->= [ [c, a] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [c, c] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [c, b] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [b, a]] ->= [ [c, a] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [c, c] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [c, b] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [b, b], [a, b]] ->= [ [c, a] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [a, b]] ->= [ [c, c] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [a, b]] ->= [ [c, b] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [b, b], [c, b]] ->= [ [c, a] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [c, b]] ->= [ [c, c] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [c, b]] ->= [ [c, b] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [b, b], [b, b]] ->= [ [c, a] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [b, b]] ->= [ [c, c] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [b, b]] ->= [ [c, b] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [a, c], [c, a], [a, c]] ->= [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [a, c]] ->= [ [b, c] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [a, c]] ->= [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c], [c, a], [c, c]] ->= [ [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [c, c]] ->= [ [b, c] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [c, c]] ->= [ [b, b] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c], [c, a], [b, c]] ->= [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [b, c]] ->= [ [b, c] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [b, c]] ->= [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, a], [a, a], [b, a], [a, b]] ->= [ [b, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [a, b]] ->= [ [b, c] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [a, b]] ->= [ [b, b] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a], [a, a], [b, a], [c, b]] ->= [ [b, a] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [c, b]] ->= [ [b, c] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [c, b]] ->= [ [b, b] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a], [a, a], [b, a], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [b, b]] ->= [ [b, c] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [b, b]] ->= [ [b, b] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a]#, [a, a], [b, a], [a, b]] |-> [ [a, b]# , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Strictified (Input 5))))) -}
  [[a, a]#, [a, a], [b, a], [a, b]] |-> [ [b, a]# , [a, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Strictified (Input 5))))) -}
  [[a, a]#, [a, a], [b, a], [b, b]] |-> [ [a, b]# , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Strictified (Input 5))))) -}
  [[a, a]#, [a, a], [b, a], [b, b]] |-> [ [b, a]# , [a, b] , [b, a] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Strictified (Input 5))))) -}
  [[a, a]#, [a, a], [b, a], [c, b]] |-> [ [a, b]# , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Strictified (Input 5))))) -}
  [[a, a]#, [a, a], [b, a], [c, b]] |-> [ [b, a]# , [a, b] , [b, a] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Strictified (Input 5))))) -}
  [[a, b]#, [a, a], [b, a], [a, b]] |-> [ [a, b]# , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Strictified (Input 5))))) -}
  [[a, b]#, [a, a], [b, a], [a, b]] |-> [ [b, b]# , [a, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Strictified (Input 5))))) -}
  [[a, b]#, [a, a], [b, a], [b, b]] |-> [ [a, b]# , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Strictified (Input 5))))) -}
  [[a, b]#, [a, a], [b, a], [b, b]] |-> [ [b, b]# , [a, b] , [b, a] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Strictified (Input 5))))) -}
  [[a, b]#, [a, a], [b, a], [c, b]] |-> [ [a, b]# , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Strictified (Input 5))))) -}
  [[a, b]#, [a, a], [b, a], [c, b]] |-> [ [b, b]# , [a, b] , [b, a] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Strictified (Input 5))))) -}
  [[a, c]#, [a, a], [b, a], [a, b]] |-> [ [a, b]# , [b, a] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Strictified (Input 5))))) -}
  [[a, c]#, [a, a], [b, a], [a, b]] |-> [ [b, c]# , [a, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Strictified (Input 5))))) -}
  [[a, c]#, [a, a], [b, a], [b, b]] |-> [ [a, b]# , [b, a] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Strictified (Input 5))))) -}
  [[a, c]#, [a, a], [b, a], [b, b]] |-> [ [b, c]# , [a, b] , [b, a] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Strictified (Input 5))))) -}
  [[a, c]#, [a, a], [b, a], [c, b]] |-> [ [a, b]# , [b, a] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Strictified (Input 5))))) -}
  [[a, c]#, [a, a], [b, a], [c, b]] |-> [ [b, c]# , [a, b] , [b, a] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Strictified (Input 5))))) -}
  [[b, a]#, [b, b], [b, b], [a, b]] |-> [ [ a , a ]# ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [b, b], [a, b]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [b, b], [a, b]] |-> [ [a, c]# , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [b, b], [a, b]] |-> [ [c, a]# , [a, c] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [b, b], [b, b]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [b, b], [b, b]] |-> [ [a, c]# , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [b, b], [b, b]] |-> [ [ b , a ]# ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [b, b], [b, b]] |-> [ [c, a]# , [a, c] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [b, b], [c, b]] |-> [ [a, a]# , [ c , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [b, b], [c, b]] |-> [ [a, c]# , [a, a] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [b, b], [c, b]] |-> [ [ c , a ]# ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [b, b], [c, b]] |-> [ [c, a]# , [a, c] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [c, b], [a, c], [a, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [c, b], [a, c], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [c, b], [a, c], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [c, b], [a, c], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [c, b], [a, c], [a, a]] |-> [ [c, a]# , [c, c] , [a, c] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [c, b], [a, c], [a, a]] |-> [ [c, c]# , [a, c] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [c, b], [a, c], [b, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[b, a]#, [c, b], [a, c], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[b, a]#, [c, b], [a, c], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[b, a]#, [c, b], [a, c], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[b, a]#, [c, b], [a, c], [b, a]] |-> [ [c, a]# , [c, c] , [a, c] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [c, b], [a, c], [b, a]] |-> [ [c, c]# , [a, c] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [c, b], [a, c], [c, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [c, b], [a, c], [c, a]] |-> [ [b, a]# , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [c, b], [a, c], [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [c, b], [a, c], [c, a]] |-> [ [c, a]# , [c, c] , [a, c] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a]#, [c, b], [a, c], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [c, b], [a, c], [c, a]] |-> [ [c, c]# , [a, c] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b]#, [b, b], [b, b], [a, b]] |-> [ [ a , a ]# ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, b]#, [b, b], [b, b], [a, b]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, b]#, [b, b], [b, b], [a, b]] |-> [ [a, c]# , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, b]#, [b, b], [b, b], [a, b]] |-> [ [c, b]# , [a, c] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, b]#, [b, b], [b, b], [b, b]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, b]#, [b, b], [b, b], [b, b]] |-> [ [a, c]# , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, b]#, [b, b], [b, b], [b, b]] |-> [ [ b , a ]# ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, b]#, [b, b], [b, b], [b, b]] |-> [ [c, b]# , [a, c] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, b]#, [b, b], [b, b], [c, b]] |-> [ [a, a]# , [ c , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, b]#, [b, b], [b, b], [c, b]] |-> [ [a, c]# , [a, a] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, b]#, [b, b], [b, b], [c, b]] |-> [ [ c , a ]# ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, b]#, [b, b], [b, b], [c, b]] |-> [ [c, b]# , [a, c] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, b]#, [c, b], [a, c], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, b]#, [c, b], [a, c], [a, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, b]#, [c, b], [a, c], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, b]#, [c, b], [a, c], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, b]#, [c, b], [a, c], [a, a]] |-> [ [c, b]# , [c, c] , [a, c] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, b]#, [c, b], [a, c], [a, a]] |-> [ [c, c]# , [a, c] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, b]#, [c, b], [a, c], [b, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, b]#, [c, b], [a, c], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, b]#, [c, b], [a, c], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, b]#, [c, b], [a, c], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, b]#, [c, b], [a, c], [b, a]] |-> [ [c, b]# , [c, c] , [a, c] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, b]#, [c, b], [a, c], [b, a]] |-> [ [c, c]# , [a, c] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, b]#, [c, b], [a, c], [c, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, b]#, [c, b], [a, c], [c, a]] |-> [ [b, a]# , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, b]#, [c, b], [a, c], [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, b]#, [c, b], [a, c], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, b]#, [c, b], [a, c], [c, a]] |-> [ [c, b]# , [c, c] , [a, c] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, b]#, [c, b], [a, c], [c, a]] |-> [ [c, c]# , [a, c] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b], [b, b], [a, b]] |-> [ [ a , a ]# ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c]#, [b, b], [b, b], [a, b]] |-> [ [a, a]# , [ a , a ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c]#, [b, b], [b, b], [a, b]] |-> [ [a, c]# , [a, a] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c]#, [b, b], [b, b], [a, b]] |-> [ [c, c]# , [a, c] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c]#, [b, b], [b, b], [b, b]] |-> [ [a, a]# , [ b , a ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c]#, [b, b], [b, b], [b, b]] |-> [ [a, c]# , [a, a] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c]#, [b, b], [b, b], [b, b]] |-> [ [ b , a ]# ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c]#, [b, b], [b, b], [b, b]] |-> [ [c, c]# , [a, c] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c]#, [b, b], [b, b], [c, b]] |-> [ [a, a]# , [ c , a ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c]#, [b, b], [b, b], [c, b]] |-> [ [a, c]# , [a, a] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c]#, [b, b], [b, b], [c, b]] |-> [ [ c , a ]# ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c]#, [b, b], [b, b], [c, b]] |-> [ [c, c]# , [a, c] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c]#, [c, b], [a, c], [a, a]] |-> [ [ a , b ]# ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, c]#, [c, b], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, c]#, [c, b], [a, c], [a, a]] |-> [ [b, a]# , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, c]#, [c, b], [a, c], [a, a]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, c]#, [c, b], [a, c], [a, a]] |-> [ [c, c]# , [a, c] , [ a , a ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c]#, [c, b], [a, c], [a, a]] |-> [ [c, c]# , [c, c] , [a, c] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c]#, [c, b], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[b, c]#, [c, b], [a, c], [b, a]] |-> [ [b, a]# , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[b, c]#, [c, b], [a, c], [b, a]] |-> [ [ b , b ]# ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[b, c]#, [c, b], [a, c], [b, a]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[b, c]#, [c, b], [a, c], [b, a]] |-> [ [c, c]# , [a, c] , [ b , a ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c]#, [c, b], [a, c], [b, a]] |-> [ [c, c]# , [c, c] , [a, c] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c]#, [c, b], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, c]#, [c, b], [a, c], [c, a]] |-> [ [b, a]# , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, c]#, [c, b], [a, c], [c, a]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, c]#, [c, b], [a, c], [c, a]] |-> [ [ c , b ]# ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, c]#, [c, b], [a, c], [c, a]] |-> [ [c, c]# , [a, c] , [ c , a ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, c]#, [c, b], [a, c], [c, a]] |-> [ [c, c]# , [c, c] , [a, c] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[c, a]#, [a, c], [c, a], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, a]#, [a, c], [c, a], [a, c]] |-> [ [b, a]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, a]#, [a, c], [c, a], [a, c]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, a]#, [a, c], [c, a], [a, c]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, a]#, [a, c], [c, a], [b, c]] |-> [ [b, a]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, a]#, [a, c], [c, a], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, a]#, [a, c], [c, a], [b, c]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, a]#, [a, c], [c, a], [b, c]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, a]#, [a, c], [c, a], [c, c]] |-> [ [b, a]# , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, a]#, [a, c], [c, a], [c, c]] |-> [ [b, b]# , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, a]#, [a, c], [c, a], [c, c]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, a]#, [a, c], [c, a], [c, c]] |-> [ [ c , b ]# ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b]#, [a, c], [c, a], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, b]#, [a, c], [c, a], [a, c]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, b]#, [a, c], [c, a], [a, c]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, b]#, [a, c], [c, a], [a, c]] |-> [ [b, b]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, b]#, [a, c], [c, a], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[c, b]#, [a, c], [c, a], [b, c]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[c, b]#, [a, c], [c, a], [b, c]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[c, b]#, [a, c], [c, a], [b, c]] |-> [ [b, b]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[c, b]#, [a, c], [c, a], [c, c]] |-> [ [b, b]# , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, b]#, [a, c], [c, a], [c, c]] |-> [ [b, b]# , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, b]#, [a, c], [c, a], [c, c]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, b]#, [a, c], [c, a], [c, c]] |-> [ [ c , b ]# ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, c]#, [a, c], [c, a], [a, c]] |-> [ [ a , b ]# ] {- DP (Top 3) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c]#, [a, c], [c, a], [a, c]] |-> [ [b, b]# , [ a , b ] ] {- DP (Top 2) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c]#, [a, c], [c, a], [a, c]] |-> [ [b, b]# , [b, b] , [ a , b ] ] {- DP (Top 1) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c]#, [a, c], [c, a], [a, c]] |-> [ [b, c]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c]#, [a, c], [c, a], [b, c]] |-> [ [ b , b ]# ] {- DP (Top 3) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c]#, [a, c], [c, a], [b, c]] |-> [ [b, b]# , [ b , b ] ] {- DP (Top 2) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c]#, [a, c], [c, a], [b, c]] |-> [ [b, b]# , [b, b] , [ b , b ] ] {- DP (Top 1) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c]#, [a, c], [c, a], [b, c]] |-> [ [b, c]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c]#, [a, c], [c, a], [c, c]] |-> [ [b, b]# , [b, b] , [ c , b ] ] {- DP (Top 1) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c]#, [a, c], [c, a], [c, c]] |-> [ [b, b]# , [ c , b ] ] {- DP (Top 2) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c]#, [a, c], [c, a], [c, c]] |-> [ [b, c]# , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, c]#, [a, c], [c, a], [c, c]] |-> [ [ c , b ]# ] {- DP (Top 3) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
reason
  ([a, a], 2/1)
  ([a, b], 2/1)
  ([a, c], 2/1)
  ([b, a], 2/1)
  ([b, b], 2/1)
  ([b, c], 2/1)
  ([c, a], 2/1)
  ([c, b], 2/1)
  ([c, c], 2/1)
  ([a, a]#, 1/1)
  ([a, b]#, 1/1)
  ([a, c]#, 1/1)
  ([b, a]#, 1/1)
  ([b, b]#, 1/1)
  ([b, c]#, 1/1)
  ([c, a]#, 1/1)
  ([c, b]#, 1/1)
  ([c, c]#, 1/1)
   property Termination
has value Just True
for SRS
  [[b, a], [c, b], [a, c], [a, a]] ->= [ [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [a, c] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [c, a]] ->= [ [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [a, c] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [a, b] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [b, a]] ->= [ [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [a, c] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [a, a]] ->= [ [c, a] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [c, c] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [c, b] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [c, a]] ->= [ [c, a] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [c, c] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [c, b] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [b, a]] ->= [ [c, a] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [c, c] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [c, b] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [b, b], [a, b]] ->= [ [c, a] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [a, b]] ->= [ [c, c] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [a, b]] ->= [ [c, b] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [b, b], [c, b]] ->= [ [c, a] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [c, b]] ->= [ [c, c] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [c, b]] ->= [ [c, b] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [b, b], [b, b]] ->= [ [c, a] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [b, b]] ->= [ [c, c] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [b, b]] ->= [ [c, b] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [a, c], [c, a], [a, c]] ->= [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [a, c]] ->= [ [b, c] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [a, c]] ->= [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c], [c, a], [c, c]] ->= [ [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [c, c]] ->= [ [b, c] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [c, c]] ->= [ [b, b] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c], [c, a], [b, c]] ->= [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [b, c]] ->= [ [b, c] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [b, c]] ->= [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, a], [a, a], [b, a], [a, b]] ->= [ [b, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [a, b]] ->= [ [b, c] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [a, b]] ->= [ [b, b] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a], [a, a], [b, a], [c, b]] ->= [ [b, a] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [c, b]] ->= [ [b, c] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [c, b]] ->= [ [b, b] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a], [a, a], [b, a], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [b, b]] ->= [ [b, c] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [b, b]] ->= [ [b, b] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a]#, [a, a], [b, a], [a, b]] |-> [ [b, a]# , [a, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Strictified (Input 5))))) -}
  [[a, a]#, [a, a], [b, a], [b, b]] |-> [ [b, a]# , [a, b] , [b, a] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Strictified (Input 5))))) -}
  [[a, a]#, [a, a], [b, a], [c, b]] |-> [ [b, a]# , [a, b] , [b, a] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Strictified (Input 5))))) -}
  [[a, b]#, [a, a], [b, a], [a, b]] |-> [ [b, b]# , [a, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Strictified (Input 5))))) -}
  [[a, b]#, [a, a], [b, a], [b, b]] |-> [ [b, b]# , [a, b] , [b, a] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Strictified (Input 5))))) -}
  [[a, b]#, [a, a], [b, a], [c, b]] |-> [ [b, b]# , [a, b] , [b, a] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Strictified (Input 5))))) -}
  [[a, c]#, [a, a], [b, a], [a, b]] |-> [ [b, c]# , [a, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Strictified (Input 5))))) -}
  [[a, c]#, [a, a], [b, a], [b, b]] |-> [ [b, c]# , [a, b] , [b, a] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Strictified (Input 5))))) -}
  [[a, c]#, [a, a], [b, a], [c, b]] |-> [ [b, c]# , [a, b] , [b, a] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Strictified (Input 5))))) -}
  [[b, a]#, [b, b], [b, b], [a, b]] |-> [ [c, a]# , [a, c] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [b, b], [b, b]] |-> [ [c, a]# , [a, c] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [b, b], [c, b]] |-> [ [c, a]# , [a, c] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, a]#, [c, b], [a, c], [a, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, a]#, [c, b], [a, c], [a, a]] |-> [ [c, a]# , [c, c] , [a, c] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [c, b], [a, c], [b, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[b, a]#, [c, b], [a, c], [b, a]] |-> [ [c, a]# , [c, c] , [a, c] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [c, b], [a, c], [c, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [c, b], [a, c], [c, a]] |-> [ [c, a]# , [c, c] , [a, c] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, b]#, [b, b], [b, b], [a, b]] |-> [ [c, b]# , [a, c] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, b]#, [b, b], [b, b], [b, b]] |-> [ [c, b]# , [a, c] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, b]#, [b, b], [b, b], [c, b]] |-> [ [c, b]# , [a, c] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, b]#, [c, b], [a, c], [a, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, b]#, [c, b], [a, c], [a, a]] |-> [ [c, b]# , [c, c] , [a, c] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, b]#, [c, b], [a, c], [b, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, b]#, [c, b], [a, c], [b, a]] |-> [ [c, b]# , [c, c] , [a, c] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, b]#, [c, b], [a, c], [c, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, b]#, [c, b], [a, c], [c, a]] |-> [ [c, b]# , [c, c] , [a, c] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, c]#, [b, b], [b, b], [a, b]] |-> [ [c, c]# , [a, c] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c]#, [b, b], [b, b], [b, b]] |-> [ [c, c]# , [a, c] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c]#, [b, b], [b, b], [c, b]] |-> [ [c, c]# , [a, c] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, c]#, [c, b], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, c]#, [c, b], [a, c], [a, a]] |-> [ [c, c]# , [c, c] , [a, c] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c]#, [c, b], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[b, c]#, [c, b], [a, c], [b, a]] |-> [ [c, c]# , [c, c] , [a, c] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c]#, [c, b], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, c]#, [c, b], [a, c], [c, a]] |-> [ [c, c]# , [c, c] , [a, c] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[c, a]#, [a, c], [c, a], [a, c]] |-> [ [b, a]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, a]#, [a, c], [c, a], [b, c]] |-> [ [b, a]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, a]#, [a, c], [c, a], [c, c]] |-> [ [b, a]# , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, b]#, [a, c], [c, a], [a, c]] |-> [ [b, b]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, b]#, [a, c], [c, a], [b, c]] |-> [ [b, b]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[c, b]#, [a, c], [c, a], [c, c]] |-> [ [b, b]# , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, c]#, [a, c], [c, a], [a, c]] |-> [ [b, c]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, c]#, [a, c], [c, a], [b, c]] |-> [ [b, c]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, c]#, [a, c], [c, a], [c, c]] |-> [ [b, c]# , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, a], [b, a], [a, b]] |-> [ [b, a]# , [a, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Strictified (Input 5))))) -}
  [[b, a]#, [b, b], [b, b], [a, b]] |-> [ [c, a]# , [a, c] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[c, a]#, [a, c], [c, a], [a, c]] |-> [ [b, a]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[b, a]#, [b, b], [b, b], [b, b]] |-> [ [c, a]# , [a, c] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[c, a]#, [a, c], [c, a], [b, c]] |-> [ [b, a]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[b, a]#, [b, b], [b, b], [c, b]] |-> [ [c, a]# , [a, c] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[c, a]#, [a, c], [c, a], [c, c]] |-> [ [b, a]# , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[b, a]#, [c, b], [a, c], [a, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[a, a]#, [a, a], [b, a], [b, b]] |-> [ [b, a]# , [a, b] , [b, a] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Strictified (Input 5))))) -}
  [[b, a]#, [c, b], [a, c], [a, a]] |-> [ [c, a]# , [c, c] , [a, c] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, a]#, [c, b], [a, c], [b, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[a, a]#, [a, a], [b, a], [c, b]] |-> [ [b, a]# , [a, b] , [b, a] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Strictified (Input 5))))) -}
  [[b, a]#, [c, b], [a, c], [b, a]] |-> [ [c, a]# , [c, c] , [a, c] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [c, b], [a, c], [c, a]] |-> [ [a, a]# , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, a]#, [c, b], [a, c], [c, a]] |-> [ [c, a]# , [c, c] , [a, c] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14616, clauses: 55199, status: Satisfied, time: 0.756477258s
[[b, a], [c, b], [a, c], [a, a]] ->= [ [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [a, c] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [c, a]] ->= [ [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [a, c] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [a, b] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [b, a]] ->= [ [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [a, c] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [a, a]] ->= [ [c, a] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [c, c] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [c, b] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [c, a]] ->= [ [c, a] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [c, c] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [c, b] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [b, a]] ->= [ [c, a] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [c, c] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [c, b] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [b, b], [a, b]] ->= [ [c, a] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [a, b]] ->= [ [c, c] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [a, b]] ->= [ [c, b] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [b, b], [c, b]] ->= [ [c, a] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [c, b]] ->= [ [c, c] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [c, b]] ->= [ [c, b] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [b, b], [b, b]] ->= [ [c, a] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [b, b]] ->= [ [c, c] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [b, b]] ->= [ [c, b] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [a, c], [c, a], [a, c]] ->= [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [a, c]] ->= [ [b, c] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [a, c]] ->= [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c], [c, a], [c, c]] ->= [ [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [c, c]] ->= [ [b, c] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [c, c]] ->= [ [b, b] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c], [c, a], [b, c]] ->= [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [b, c]] ->= [ [b, c] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [b, c]] ->= [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, a], [a, a], [b, a], [a, b]] ->= [ [b, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [a, b]] ->= [ [b, c] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [a, b]] ->= [ [b, b] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a], [a, a], [b, a], [c, b]] ->= [ [b, a] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [c, b]] ->= [ [b, c] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [c, b]] ->= [ [b, b] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a], [a, a], [b, a], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [b, b]] ->= [ [b, c] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [b, b]] ->= [ [b, b] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Strictified (Input 5))))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, c]
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [b, a]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, b]
  , Wk  / 0A  3A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, c]
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [c, a]
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [c, b]
  , Wk  / 3A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [c, c]
  , Wk  / 3A 3A 6A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [a, a]#
  , Wk  / 9A 9A 12A - \
        | 9A 9A 12A - |
        | 9A 9A 12A - |
        \ -  -  -   - / )
  ( [b, a]#
  , Wk  / 12A 12A 12A - \
        | 12A 12A 12A - |
        | 12A 12A 12A - |
        \ -   -   -   - / )
  ( [c, a]#
  , Wk  / 12A 15A 15A - \
        | 12A 15A 15A - |
        | 12A 15A 15A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [[a, a]#, [a, a], [b, a], [a, b]] |-> [ [b, a]# , [a, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Strictified (Input 5))))) -}
  [[b, a]#, [b, b], [b, b], [a, b]] |-> [ [c, a]# , [a, c] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [b, b], [b, b]] |-> [ [c, a]# , [a, c] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, a]#, [b, b], [b, b], [c, b]] |-> [ [c, a]# , [a, c] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[a, a]#, [a, a], [b, a], [b, b]] |-> [ [b, a]# , [a, b] , [b, a] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Strictified (Input 5))))) -}
  [[b, a]#, [c, b], [a, c], [a, a]] |-> [ [c, a]# , [c, c] , [a, c] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[a, a]#, [a, a], [b, a], [c, b]] |-> [ [b, a]# , [a, b] , [b, a] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Strictified (Input 5))))) -}
  [[b, a]#, [c, b], [a, c], [b, a]] |-> [ [c, a]# , [c, c] , [a, c] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, a]#, [c, b], [a, c], [c, a]] |-> [ [c, a]# , [c, c] , [a, c] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [a, a]] ->= [ [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [a, c] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [c, a]] ->= [ [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [a, c] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [a, b] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [b, a]] ->= [ [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [a, c] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [a, a]] ->= [ [c, a] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [c, c] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [c, b] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [c, a]] ->= [ [c, a] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [c, c] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [c, b] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [b, a]] ->= [ [c, a] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [c, c] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [c, b] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [b, b], [a, b]] ->= [ [c, a] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [a, b]] ->= [ [c, c] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [a, b]] ->= [ [c, b] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [b, b], [c, b]] ->= [ [c, a] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [c, b]] ->= [ [c, c] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [c, b]] ->= [ [c, b] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [b, b], [b, b]] ->= [ [c, a] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [b, b]] ->= [ [c, c] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [b, b]] ->= [ [c, b] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [a, c], [c, a], [a, c]] ->= [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [a, c]] ->= [ [b, c] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [a, c]] ->= [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c], [c, a], [c, c]] ->= [ [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [c, c]] ->= [ [b, c] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [c, c]] ->= [ [b, b] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c], [c, a], [b, c]] ->= [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [b, c]] ->= [ [b, c] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [b, c]] ->= [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, a], [a, a], [b, a], [a, b]] ->= [ [b, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [a, b]] ->= [ [b, c] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [a, b]] ->= [ [b, b] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a], [a, a], [b, a], [c, b]] ->= [ [b, a] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [c, b]] ->= [ [b, c] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [c, b]] ->= [ [b, b] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a], [a, a], [b, a], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [b, b]] ->= [ [b, c] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [b, b]] ->= [ [b, b] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Strictified (Input 5))))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, a]#, 2/1)
  ([b, a]#, 1/1)
  ([c, a]#, 0/1)
   property Termination
has value Just True
for SRS
  [[b, a], [c, b], [a, c], [a, a]] ->= [ [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [a, c] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [c, a]] ->= [ [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [a, c] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [a, b] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [b, a]] ->= [ [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [a, c] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [a, a]] ->= [ [c, a] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [c, c] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [c, b] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [c, a]] ->= [ [c, a] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [c, c] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [c, b] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [b, a]] ->= [ [c, a] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [c, c] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [c, b] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [b, b], [a, b]] ->= [ [c, a] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [a, b]] ->= [ [c, c] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [a, b]] ->= [ [c, b] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [b, b], [c, b]] ->= [ [c, a] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [c, b]] ->= [ [c, c] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [c, b]] ->= [ [c, b] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [b, b], [b, b]] ->= [ [c, a] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [b, b]] ->= [ [c, c] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [b, b]] ->= [ [c, b] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [a, c], [c, a], [a, c]] ->= [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [a, c]] ->= [ [b, c] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [a, c]] ->= [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c], [c, a], [c, c]] ->= [ [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [c, c]] ->= [ [b, c] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [c, c]] ->= [ [b, b] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c], [c, a], [b, c]] ->= [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [b, c]] ->= [ [b, c] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [b, c]] ->= [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}CNF 16758 vars 78371 clauses

  [[a, a], [a, a], [b, a], [a, b]] ->= [ [b, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [a, b]] ->= [ [b, c] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [a, b]] ->= [ [b, b] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a], [a, a], [b, a], [c, b]] ->= [ [b, a] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [c, b]] ->= [ [b, c] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [c, b]] ->= [ [b, b] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a], [a, a], [b, a], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [b, b]] ->= [ [b, c] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [b, b]] ->= [ [b, b] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Strictified (Input 5))))) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [[a, b]#, [a, a], [b, a], [a, b]] |-> [ [b, b]# , [a, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Strictified (Input 5))))) -}
  [[b, b]#, [b, b], [b, b], [a, b]] |-> [ [c, b]# , [a, c] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[c, b]#, [a, c], [c, a], [a, c]] |-> [ [b, b]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[b, b]#, [b, b], [b, b], [b, b]] |-> [ [c, b]# , [a, c] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, b]#, [a, c], [c, a], [b, c]] |-> [ [b, b]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[b, b]#, [b, b], [b, b], [c, b]] |-> [ [c, b]# , [a, c] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[c, b]#, [a, c], [c, a], [c, c]] |-> [ [b, b]# , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[b, b]#, [c, b], [a, c], [a, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[a, b]#, [a, a], [b, a], [b, b]] |-> [ [b, b]# , [a, b] , [b, a] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Strictified (Input 5))))) -}
  [[b, b]#, [c, b], [a, c], [a, a]] |-> [ [c, b]# , [c, c] , [a, c] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, b]#, [c, b], [a, c], [b, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[a, b]#, [a, a], [b, a], [c, b]] |-> [ [b, b]# , [a, b] , [b, a] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Strictified (Input 5))))) -}
  [[b, b]#, [c, b], [a, c], [b, a]] |-> [ [c, b]# , [c, c] , [a, c] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, b]#, [c, b], [a, c], [c, a]] |-> [ [a, b]# , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, b]#, [c, b], [a, c], [c, a]] |-> [ [c, b]# , [c, c] , [a, c] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [a, a]] ->= [ [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [a, c] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [c, a]] ->= [ [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [a, c] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [a, b] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [b, a]] ->= [ [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [a, c] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [a, a]] ->= [ [c, a] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [c, c] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [c, b] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [c, a]] ->= [ [c, a] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [c, c] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [c, b] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [b, a]] ->= [ [c, a] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [c, c] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [c, b] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [b, b], [a, b]] ->= [ [c, a] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [a, b]] ->= [ [c, c] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [a, b]] ->= [ [c, b] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [b, b], [c, b]] ->= [ [c, a] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [c, b]] ->= [ [c, c] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [c, b]] ->= [ [c, b] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [b, b], [b, b]] ->= [ [c, a] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [b, b]] ->= [ [c, c] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [b, b]] ->= [ [c, b] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [a, c], [c, a], [a, c]] ->= [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [a, c]] ->= [ [b, c] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [a, c]] ->= [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c], [c, a], [c, c]] ->= [ [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [c, c]] ->= [ [b, c] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [c, c]] ->= [ [b, b] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c], [c, a], [b, c]] ->= [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [b, c]] ->= [ [b, c] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [b, c]] ->= [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, a], [a, a], [b, a], [a, b]] ->= [ [b, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [a, b]] ->= [ [b, c] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [a, b]] ->= [ [b, b] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a], [a, a], [b, a], [c, b]] ->= [ [b, a] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [c, b]] ->= [ [b, c] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [c, b]] ->= [ [b, b] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a], [a, a], [b, a], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [b, b]] ->= [ [b, c] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [b, b]] ->= [ [b, b] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Strictified (Input 5))))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, c]
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [b, a]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, b]
  , Wk  / 0A  3A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, c]
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [c, a]
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [c, b]
  , Wk  / 3A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [c, c]
  , Wk  / 3A 3A 6A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [a, b]#
  , Wk  / 9A 9A 12A - \
        | 9A 9A 12A - |
        | 9A 9A 12A - |
        \ -  -  -   - / )
  ( [b, b]#
  , Wk  / 12A 12A 12A - \
        | 12A 12A 12A - |
        | 12A 12A 12A - |
        \ -   -   -   - / )
  ( [c, b]#
  , Wk  / 12A 15A 15A - \
        | 12A 15A 15A - |
        | 12A 15A 15A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [[a, b]#, [a, a], [b, a], [a, b]] |-> [ [b, b]# , [a, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Strictified (Input 5))))) -}
  [[b, b]#, [b, b], [b, b], [a, b]] |-> [ [c, b]# , [a, c] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, b]#, [b, b], [b, b], [b, b]] |-> [ [c, b]# , [a, c] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[b, b]#, [b, b], [b, b], [c, b]] |-> [ [c, b]# , [a, c] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[a, b]#, [a, a], [b, a], [b, b]] |-> [ [b, b]# , [a, b] , [b, a] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Strictified (Input 5))))) -}
  [[b, b]#, [c, b], [a, c], [a, a]] |-> [ [c, b]# , [c, c] , [a, c] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[a, b]#, [a, a], [b, a], [c, b]] |-> [ [b, b]# , [a, b] , [b, a] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Strictified (Input 5))))) -}
  [[b, b]#, [c, b], [a, c], [b, a]] |-> [ [c, b]# , [c, c] , [a, c] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, b]#, [c, b], [a, c], [c, a]] |-> [ [c, b]# , [c, c] , [a, c] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [a, a]] ->= [ [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [a, c] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [c, a]] ->= [ [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [a, c] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [a, b] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [b, a]] ->= [ [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [a, c] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [a, a]] ->= [ [c, a] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [c, c] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [c, b] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [c, a]] ->= [ [c, a] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [c, c] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [c, b] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [b, a]] ->= [ [c, a] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [c, c] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [c, b] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [b, b], [a, b]] ->= [ [c, a] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [a, b]] ->= [ [c, c] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [a, b]] ->= [ [c, b] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [b, b], [c, b]] ->= [ [c, a] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [c, b]] ->= [ [c, c] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [c, b]] ->= [ [c, b] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [b, b], [b, b]] ->= [ [c, a] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [b, b]] ->= [ [c, c] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [b, b]] ->= [ [c, b] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [a, c], [c, a], [a, c]] ->= [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [a, c]] ->= [ [b, c] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [a, c]] ->= [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c], [c, a], [c, c]] ->= [ [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [c, c]] ->= [ [b, c] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [c, c]] ->= [ [b, b] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c], [c, a], [b, c]] ->= [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [b, c]] ->= [ [b, c] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [b, c]] ->= [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, a], [a, a], [b, a], [a, b]] ->= [ [b, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [a, b]] ->= [ [b, c] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [a, b]] ->= [ [b, b] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a], [a, a], [b, a], [c, b]] ->= [ [b, a] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [c, b]] ->= [ [b, c] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [c, b]] ->= [ [b, b] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a], [a, a], [b, a], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [b, b]] ->= [ [b, c] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [b, b]] ->= [ [b, b] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Strictified (Input 5))))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, b]#, 2/1)
  ([b, b]#, 1/1)
  ([c, b]#, 0/1)
   property Termination
has value Just True
for SRS
  [[b, a], [c, b], [a, c], [a, a]] ->= [ [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [a, c] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [c, a]] ->= [ [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [a, c] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [a, b] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [b, a]] ->= [ [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [a, c] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [a, a]] ->= [ [c, a] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [c, c] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [c, b] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [c, a]] ->= [ [c, a] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [c, c] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [c, b] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [b, a]] ->= [ [c, a] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [c, c] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [c, b] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [b, b], [a, b]] ->= [ [c, a] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [a, b]] ->= [ [c, c] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [a, b]] ->= [ [c, b] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [b, b], [c, b]] ->= [ [c, a] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [c, b]] ->= [ [c, c] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [c, b]] ->= [ [c, b] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [b, b], [b, b]] ->= [ [c, a] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [b, b]] ->= [ [c, c] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [b, b]] ->= [ [c, b] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [a, c], [c, a], [a, c]] ->= [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [a, c]] ->= [ [b, c] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [a, c]] ->= [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c], [c, a], [c, c]] ->= [ [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [c, c]] ->= [ [b, c] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [c, c]] ->= [ [b, b] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c], [c, a], [b, c]] ->= [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [b, c]] ->= [ [b, c] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [b, c]] ->= [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, a], [a, a], [b, a], [a, b]] ->= [ [b, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [a, b]] ->= [ [b, c] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [a, b]] ->= [ [b, b] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a], [a, a], [b, a], [c, b]] ->= [ [b, a] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [c, b]] ->= [ [b, c] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [c, b]] ->= [ [b, b] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a], [a, a], [b, a], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [b, b]] ->= [ [b, c] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [b, b]] ->= [ [b, b] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Strictified (Input 5))))) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [[a, c]#, [a, a], [b, a], [a, b]] |-> [ [b, c]# , [a, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Strictified (Input 5))))) -}
  [[b, c]#, [b, b], [b, b], [a, b]] |-> [ [c, c]# , [a, c] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[c, c]#, [a, c], [c, a], [a, c]] |-> [ [b, c]# , [b, b] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[b, c]#, [b, b], [b, b], [b, b]] |-> [ [c, c]# , [a, c] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[c, c]#, [a, c], [c, a], [b, c]] |-> [ [b, c]# , [b, b] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[b, c]#, [b, b], [b, b], [c, b]] |-> [ [c, c]# , [a, c] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[c, c]#, [a, c], [c, a], [c, c]] |-> [ [b, c]# , [b, b] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[b, c]#, [c, b], [a, c], [a, a]] |-> [ [a, c]# , [b, a] , [b, b] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a], [b, a], [b, b]] |-> [ [b, c]# , [a, b] , [b, a] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Strictified (Input 5))))) -}
  [[b, c]#, [c, b], [a, c], [a, a]] |-> [ [c, c]# , [c, c] , [a, c] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, c]#, [c, b], [a, c], [b, a]] |-> [ [a, c]# , [b, a] , [b, b] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[a, c]#, [a, a], [b, a], [c, b]] |-> [ [b, c]# , [a, b] , [b, a] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Strictified (Input 5))))) -}
  [[b, c]#, [c, b], [a, c], [b, a]] |-> [ [c, c]# , [c, c] , [a, c] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c]#, [c, b], [a, c], [c, a]] |-> [ [a, c]# , [b, a] , [b, b] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, c]#, [c, b], [a, c], [c, a]] |-> [ [c, c]# , [c, c] , [a, c] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [a, a]] ->= [ [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [a, c] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [c, a]] ->= [ [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [a, c] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [a, b] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [b, a]] ->= [ [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [a, c] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [a, a]] ->= [ [c, a] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [c, c] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [c, b] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [c, a]] ->= [ [c, a] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [c, c] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [c, b] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [b, a]] ->= [ [c, a] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [c, c] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [c, b] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [b, b], [a, b]] ->= [ [c, a] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [a, b]] ->= [ [c, c] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [a, b]] ->= [ [c, b] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [b, b], [c, b]] ->= [ [c, a] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [c, b]] ->= [ [c, c] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [c, b]] ->= [ [c, b] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [b, b], [b, b]] ->= [ [c, a] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [b, b]] ->= [ [c, c] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [b, b]] ->= [ [c, b] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [a, c], [c, a], [a, c]] ->= [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [a, c]] ->= [ [b, c] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [a, c]] ->= [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c], [c, a], [c, c]] ->= [ [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [c, c]] ->= [ [b, c] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [c, c]] ->= [ [b, b] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c], [c, a], [b, c]] ->= [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [b, c]] ->= [ [b, c] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [b, c]] ->= [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, a], [a, a], [b, a], [a, b]] ->= [ [b, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [a, b]] ->= [ [b, c] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [a, b]] ->= [ [b, b] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a], [a, a], [b, a], [c, b]] ->= [ [b, a] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [c, b]] ->= [ [b, c] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [c, b]] ->= [ [b, b] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a], [a, a], [b, a], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [b, b]] ->= [ [b, c] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [b, b]] ->= [ [b, b] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Strictified (Input 5))))) -}
reason
  ( [a, a]
  , Wk  / 0A  0A 0A - \
        | 0A  0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [a, b]
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [a, c]
  , Wk  / 0A  0A  0A  - \
        | 0A  0A  0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( [b, a]
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, b]
  , Wk  / 0A  3A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [b, c]
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( [c, a]
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [c, b]
  , Wk  / 3A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( [c, c]
  , Wk  / 3A 3A 6A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( [a, c]#
  , Wk  / 9A 9A 12A - \
        | 9A 9A 12A - |
        | 9A 9A 12A - |
        \ -  -  -   - / )
  ( [b, c]#
  , Wk  / 12A 12A 12A - \
        | 12A 12A 12A - |
        | 12A 12A 12A - |
        \ -   -   -   - / )
  ( [c, c]#
  , Wk  / 12A 15A 15A - \
        | 12A 15A 15A - |
        | 12A 15A 15A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [[a, c]#, [a, a], [b, a], [a, b]] |-> [ [b, c]# , [a, b] , [b, a] , [ a , b ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Strictified (Input 5))))) -}
  [[b, c]#, [b, b], [b, b], [a, b]] |-> [ [c, c]# , [a, c] , [a, a] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, c]#, [b, b], [b, b], [b, b]] |-> [ [c, c]# , [a, c] , [a, a] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, c]#, [b, b], [b, b], [c, b]] |-> [ [c, c]# , [a, c] , [a, a] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[a, c]#, [a, a], [b, a], [b, b]] |-> [ [b, c]# , [a, b] , [b, a] , [ b , b ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Strictified (Input 5))))) -}
  [[b, c]#, [c, b], [a, c], [a, a]] |-> [ [c, c]# , [c, c] , [a, c] , [ a , a ] ] {- DP (Top 0) (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[a, c]#, [a, a], [b, a], [c, b]] |-> [ [b, c]# , [a, b] , [b, a] , [ c , b ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Strictified (Input 5))))) -}
  [[b, c]#, [c, b], [a, c], [b, a]] |-> [ [c, c]# , [c, c] , [a, c] , [ b , a ] ] {- DP (Top 0) (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, c]#, [c, b], [a, c], [c, a]] |-> [ [c, c]# , [c, c] , [a, c] , [ c , a ] ] {- DP (Top 0) (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [a, a]] ->= [ [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [a, c] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [c, a]] ->= [ [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [a, c] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [a, b] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [b, a]] ->= [ [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [a, c] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [a, a]] ->= [ [c, a] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [c, c] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [c, b] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [c, a]] ->= [ [c, a] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [c, c] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [c, b] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [b, a]] ->= [ [c, a] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [c, c] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [c, b] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [b, b], [a, b]] ->= [ [c, a] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [a, b]] ->= [ [c, c] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [a, b]] ->= [ [c, b] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [b, b], [c, b]] ->= [ [c, a] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [c, b]] ->= [ [c, c] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [c, b]] ->= [ [c, b] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [b, b], [b, b]] ->= [ [c, a] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [b, b]] ->= [ [c, c] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [b, b]] ->= [ [c, b] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [a, c], [c, a], [a, c]] ->= [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [a, c]] ->= [ [b, c] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [a, c]] ->= [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c], [c, a], [c, c]] ->= [ [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [c, c]] ->= [ [b, c] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [c, c]] ->= [ [b, b] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c], [c, a], [b, c]] ->= [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [b, c]] ->= [ [b, c] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [b, c]] ->= [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, a], [a, a], [b, a], [a, b]] ->= [ [b, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [a, b]] ->= [ [b, c] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [a, b]] ->= [ [b, b] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a], [a, a], [b, a], [c, b]] ->= [ [b, a] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [c, b]] ->= [ [b, c] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [c, b]] ->= [ [b, b] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a], [a, a], [b, a], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [b, b]] ->= [ [b, c] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [b, b]] ->= [ [b, b] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Strictified (Input 5))))) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
  ([a, c]#, 2/1)
  ([b, c]#, 1/1)
  ([c, c]#, 0/1)
   property Termination
has value Just True
for SRS
  [[b, a], [c, b], [a, c], [a, a]] ->= [ [a, a] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [a, c] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [a, b] , [b, a] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [c, a]] ->= [ [a, a] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [a, c] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [a, b] , [b, a] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [b, a]] ->= [ [a, a] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 0)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [a, c] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 0)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [a, b] , [b, a] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 0)))) -}
  [[b, a], [c, b], [a, c], [a, a]] ->= [ [c, a] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [a, a]] ->= [ [c, c] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [a, a]] ->= [ [c, b] , [c, c] , [a, c] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [c, a]] ->= [ [c, a] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [c, a]] ->= [ [c, c] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [c, a]] ->= [ [c, b] , [c, c] , [a, c] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 1)))) -}
  [[b, a], [c, b], [a, c], [b, a]] ->= [ [c, a] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 1)))) -}
  [[b, c], [c, b], [a, c], [b, a]] ->= [ [c, c] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 1)))) -}
  [[b, b], [c, b], [a, c], [b, a]] ->= [ [c, b] , [c, c] , [a, c] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 1)))) -}
  [[b, a], [b, b], [b, b], [a, b]] ->= [ [c, a] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [a, b]] ->= [ [c, c] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [a, b]] ->= [ [c, b] , [a, c] , [a, a] , [ a , a ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [b, b], [c, b]] ->= [ [c, a] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [c, b]] ->= [ [c, c] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [c, b]] ->= [ [c, b] , [a, c] , [a, a] , [ c , a ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 2)))) -}
  [[b, a], [b, b], [b, b], [b, b]] ->= [ [c, a] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 2)))) -}
  [[b, c], [b, b], [b, b], [b, b]] ->= [ [c, c] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 2)))) -}
  [[b, b], [b, b], [b, b], [b, b]] ->= [ [c, b] , [a, c] , [a, a] , [ b , a ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 2)))) -}
  [[c, a], [a, c], [c, a], [a, c]] ->= [ [b, a] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [a, c]] ->= [ [b, c] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [a, c]] ->= [ [b, b] , [b, b] , [b, b] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c], [c, a], [c, c]] ->= [ [b, a] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [c, c]] ->= [ [b, c] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [c, c]] ->= [ [b, b] , [b, b] , [b, b] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Input 3)))) -}
  [[c, a], [a, c], [c, a], [b, c]] ->= [ [b, a] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Input 3)))) -}
  [[c, c], [a, c], [c, a], [b, c]] ->= [ [b, c] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Input 3)))) -}
  [[c, b], [a, c], [c, a], [b, c]] ->= [ [b, b] , [b, b] , [b, b] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Input 3)))) -}
  [[a, a], [a, a], [b, a], [a, b]] ->= [ [b, a] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [a, b]] ->= [ [b, c] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [a, b]] ->= [ [b, b] , [a, b] , [b, a] , [ a , b ] ] {- DP Nontop (Mirror (Semlab 0 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a], [a, a], [b, a], [c, b]] ->= [ [b, a] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [c, b]] ->= [ [b, c] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [c, b]] ->= [ [b, b] , [a, b] , [b, a] , [ c , b ] ] {- DP Nontop (Mirror (Semlab 1 (Concon 2 (Strictified (Input 5))))) -}
  [[a, a], [a, a], [b, a], [b, b]] ->= [ [b, a] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 0 (Strictified (Input 5))))) -}
  [[a, c], [a, a], [b, a], [b, b]] ->= [ [b, c] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 1 (Strictified (Input 5))))) -}
  [[a, b], [a, a], [b, a], [b, b]] ->= [ [b, b] , [a, b] , [b, a] , [ b , b ] ] {- DP Nontop (Mirror (Semlab 2 (Concon 2 (Strictified (Input 5))))) -}
reason
  EDG

**************************************************
skeleton: (4/2,3)\Cleaner(4/1,3)\Strictify(5,3)\TileAllAll{2}\Mirror(45,9)\Deepee(144/45,18)\Weight(45/45,18)\EDG[(15/45,12)\Matrix{\Arctic}{3}(9/45,12)\Weight(0/45,9)\EDG[],(15/45,12)\Matrix{\Arctic}{3}(9/45,12)\Weight(0/45,9)\EDG[],(15/45,12)\Matrix{\Arctic}{3}(9/45,12)\Weight(0/45,9)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 62308, clauses: 263537
last 62308 length 263537

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 12
  max duration 2.178481546000
  min duration 0.040109155000
  total durat. 10.088112679000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 45
      , alphabet_size = 12
      , total_length = 480}
    , self = 67
    , parent = Nothing
    , duration = 1.033058900000
    , status = Fail
    , start = 2025-09-04 08:21:26.44335627 UTC
    , finish = 2025-09-04 08:21:27.47641517 UTC
    , thread_cap_info = ("ThreadId 91", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 45
      , alphabet_size = 12
      , total_length = 480}
    , self = 112
    , parent = Nothing
    , duration = 1.071342460000
    , status = Fail
    , start = 2025-09-04 08:21:28.571877172 UTC
    , finish = 2025-09-04 08:21:29.643219632 UTC
    , thread_cap_info = ("ThreadId 167", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 48
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 45
      , alphabet_size = 10
      , total_length = 384}
    , self = 136
    , parent = Nothing
    , duration = 1.628868431000
    , status = Fail
    , start = 2025-09-04 08:21:34.481873831 UTC
    , finish = 2025-09-04 08:21:36.110742262 UTC
    , thread_cap_info = ("ThreadId 212", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 46
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 45
      , alphabet_size = 10
      , total_length = 368}
    , self = 117
    , parent = Nothing
    , duration = 2.105155593000
    , status = Fail
    , start = 2025-09-04 08:21:29.211858607 UTC
    , finish = 2025-09-04 08:21:31.3170142 UTC
    , thread_cap_info = ("ThreadId 180", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 45
      , alphabet_size = 12
      , total_length = 480}
    , self = 133
    , parent = Nothing
    , duration = 2.178481546000
    , status = Fail
    , start = 2025-09-04 08:21:32.864601652 UTC
    , finish = 2025-09-04 08:21:35.043083198 UTC
    , thread_cap_info = ("ThreadId 206", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 12
  max duration 2.570870647000
  min duration 0.020544327000
  total durat. 11.468517534000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 48
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 45
      , alphabet_size = 10
      , total_length = 384}
    , self = 135
    , parent = Nothing
    , duration = 1.521756420000
    , status = Fail
    , start = 2025-09-04 08:21:34.501154265 UTC
    , finish = 2025-09-04 08:21:36.022910685 UTC
    , thread_cap_info = ("ThreadId 213", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 46
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 45
      , alphabet_size = 10
      , total_length = 368}
    , self = 115
    , parent = Nothing
    , duration = 1.770839905000
    , status = Fail
    , start = 2025-09-04 08:21:29.262269573 UTC
    , finish = 2025-09-04 08:21:31.033109478 UTC
    , thread_cap_info = ("ThreadId 181", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 45
      , alphabet_size = 12
      , total_length = 480}
    , self = 116
    , parent = Nothing
    , duration = 2.444661270000
    , status = Fail
    , start = 2025-09-04 08:21:28.593687954 UTC
    , finish = 2025-09-04 08:21:31.038349224 UTC
    , thread_cap_info = ("ThreadId 168", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 45
      , alphabet_size = 12
      , total_length = 480}
    , self = 134
    , parent = Nothing
    , duration = 2.570870647000
    , status = Fail
    , start = 2025-09-04 08:21:32.835289849 UTC
    , finish = 2025-09-04 08:21:35.406160496 UTC
    , thread_cap_info = ("ThreadId 207", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.619663694000
  min duration 0.619593966000
  total durat. 2.239257660000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 42}
    , self = 114
    , parent = Nothing
    , duration = 1.619663694000
    , status = Fail
    , start = 2025-09-04 08:21:28.513849854 UTC
    , finish = 2025-09-04 08:21:30.133513548 UTC
    , thread_cap_info = ("ThreadId 165", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 7
  max duration 2.959361950000
  min duration 0.558823967000
  total durat. 11.282074295000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 10
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 5
      , alphabet_size = 6
      , total_length = 60}
    , self = 68
    , parent = Nothing
    , duration = 1.071947344000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:21:26.539920463 UTC
    , finish = 2025-09-04 08:21:27.611867807 UTC
    , thread_cap_info = ("ThreadId 101", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 47
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 45
      , alphabet_size = 10
      , total_length = 376}
    , self = 105
    , parent = Nothing
    , duration = 1.555956249000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:21:27.472770532 UTC
    , finish = 2025-09-04 08:21:29.028726781 UTC
    , thread_cap_info = ("ThreadId 125", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 45
      , alphabet_size = 12
      , total_length = 480}
    , self = 121
    , parent = Nothing
    , duration = 1.730327777000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:21:31.052171421 UTC
    , finish = 2025-09-04 08:21:32.782499198 UTC
    , thread_cap_info = ("ThreadId 196", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 45
      , alphabet_size = 12
      , total_length = 480}
    , self = 140
    , parent = Nothing
    , duration = 2.623575334000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:21:35.411875899 UTC
    , finish = 2025-09-04 08:21:38.035451233 UTC
    , thread_cap_info = ("ThreadId 217", 3, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 46
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 45
      , alphabet_size = 10
      , total_length = 368}
    , self = 128
    , parent = Nothing
    , duration = 2.959361950000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:21:31.355053568 UTC
    , finish = 2025-09-04 08:21:34.314415518 UTC
    , thread_cap_info = ("ThreadId 198", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.369071808000
  min duration 0.969396534000
  total durat. 2.338468342000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 42}
    , self = 113
    , parent = Nothing
    , duration = 1.369071808000
    , status = Fail
    , start = 2025-09-04 08:21:28.757625557 UTC
    , finish = 2025-09-04 08:21:30.126697365 UTC
    , thread_cap_info = ("ThreadId 173", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 3.115581483000
  min duration 0.358879834000
  total durat. 12.619799178000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 47
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 45
      , alphabet_size = 10
      , total_length = 376}
    , self = 103
    , parent = Nothing
    , duration = 1.566695911000
    , status = Success
    , start = 2025-09-04 08:21:27.379882952 UTC
    , finish = 2025-09-04 08:21:28.946578863 UTC
    , thread_cap_info = ("ThreadId 123", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 45
      , alphabet_size = 12
      , total_length = 480}
    , self = 138
    , parent = Nothing
    , duration = 2.906594440000
    , status = Success
    , start = 2025-09-04 08:21:35.083502226 UTC
    , finish = 2025-09-04 08:21:37.990096666 UTC
    , thread_cap_info = ("ThreadId 216", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 60
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 45
      , alphabet_size = 12
      , total_length = 480}
    , self = 119
    , parent = Nothing
    , duration = 2.951030683000
    , status = Success
    , start = 2025-09-04 08:21:29.73211049 UTC
    , finish = 2025-09-04 08:21:32.683141173 UTC
    , thread_cap_info = ("ThreadId 185", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 46
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 45
      , alphabet_size = 10
      , total_length = 368}
    , self = 126
    , parent = Nothing
    , duration = 3.115581483000
    , status = Success
    , start = 2025-09-04 08:21:31.046897262 UTC
    , finish = 2025-09-04 08:21:34.162478745 UTC
    , thread_cap_info = ("ThreadId 195", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.043869657000
  min duration 0.259884998000
  total durat. 1.705066363000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 36}
    , self = 75
    , parent = Nothing
    , duration = 1.043869657000
    , status = Fail
    , start = 2025-09-04 08:21:26.672705175 UTC
    , finish = 2025-09-04 08:21:27.716574832 UTC
    , thread_cap_info = ("ThreadId 108", 0, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.202084053000
  min duration 0.875869114000
  total durat. 2.077953167000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 42}
    , self = 118
    , parent = Nothing
    , duration = 1.202084053000
    , status = Fail
    , start = 2025-09-04 08:21:30.126761549 UTC
    , finish = 2025-09-04 08:21:31.328845602 UTC
    , thread_cap_info = ("ThreadId 187", 0, False)}
Fail : "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 7.232903021000
  min duration 7.232903021000
  total durat. 7.232903021000
  Info
    { what = "QPI\n  { dim = 5\n  , bits = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 36}
    , self = 137
    , parent = Nothing
    , duration = 7.232903021000
    , status = Fail
    , start = 2025-09-04 08:21:29.633933451 UTC
    , finish = 2025-09-04 08:21:36.866836472 UTC
    , thread_cap_info = ("ThreadId 184", 2, False)}
**************************************************
F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                    = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
F                    = 45 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
F                    = 360} , self = 61 , parent = Nothing , duration = 0.890418255000 , status
F                    = Fail , start = 2025-09-04 08:21:26.385685879 UTC , finish = 2025-09-04
F                    08:21:27.276104134 UTC , thread_cap_info = ("ThreadId 69", 2, False)}
F                    
| F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
| F                  = 45 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F                  = 360} , self = 60 , parent = Nothing , duration = 0.832861448000 , status
| F                  = Fail , start = 2025-09-04 08:21:26.385690512 UTC , finish = 2025-09-04
| F                  08:21:27.21855196 UTC , thread_cap_info = ("ThreadId 71", 2, False)}
| F                  
| | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | F                = 15 , num_top_rules = 15 , num_weak_rules = 45 , alphabet_size = 12 ,
| | F                total_length = 480} , self = 67 , parent = Nothing , duration = 1.033058900000
| | F                , status = Fail , start = 2025-09-04 08:21:26.44335627 UTC , finish = 2025-09-04
| | F                08:21:27.47641517 UTC , thread_cap_info = ("ThreadId 91", 3, False)}
| | F                
| | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | F              = 15 , num_top_rules = 15 , num_weak_rules = 45 , alphabet_size = 12 ,
| | | F              total_length = 480} , self = 62 , parent = Nothing , duration = 0.884628462000
| | | F              , status = Fail , start = 2025-09-04 08:21:26.45186328 UTC , finish = 2025-09-04
| | | F              08:21:27.336491742 UTC , thread_cap_info = ("ThreadId 92", 3, False)}
| | | F              
| | | | S            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S            = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
| | | | S            alphabet_size = 6 , total_length = 60} , self = 64 , parent = Nothing ,
| | | | S            duration = 0.933825866000 , status = Success , start = 2025-09-04 08:21:26.498841597
| | | | S            UTC , finish = 2025-09-04 08:21:27.432667463 UTC , thread_cap_info = ("ThreadId
| | | | S            98", 0, False)}
| | | | S            
| | | | | E          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | E          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | E          , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| | | | | E          = 6 , total_length = 60} , self = 68 , parent = Nothing , duration = 1.071947344000
| | | | | E          , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:26.539920463
| | | | | E          UTC , finish = 2025-09-04 08:21:27.611867807 UTC , thread_cap_info = ("ThreadId
| | | | | E          101", 0, False)}
| | | | | E          
| | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | F        = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | | | F        = 36} , self = 59 , parent = Nothing , duration = 0.382968919000 , status
| | | | | | F        = Fail , start = 2025-09-04 08:21:26.551953874 UTC , finish = 2025-09-04
| | | | | | F        08:21:26.934922793 UTC , thread_cap_info = ("ThreadId 103", 0, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 47 , num_strict_rules
| | | | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 45 , alphabet_size = 10 , total_length
| | | | | | | F      = 376} , self = 65 , parent = Nothing , duration = 0.865487114000 , status
| | | | | | | F      = Fail , start = 2025-09-04 08:21:26.591866394 UTC , finish = 2025-09-04
| | | | | | | F      08:21:27.457353508 UTC , thread_cap_info = ("ThreadId 105", 3, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 47 , num_strict_rules
| | | | | | | | F    = 2 , num_top_rules = 2 , num_weak_rules = 45 , alphabet_size = 10 , total_length
| | | | | | | | F    = 376} , self = 63 , parent = Nothing , duration = 0.763354738000 , status
| | | | | | | | F    = Fail , start = 2025-09-04 08:21:26.612804957 UTC , finish = 2025-09-04
| | | | | | | | F    08:21:27.376159695 UTC , thread_cap_info = ("ThreadId 106", 3, False)}
| | | | | | | | F    
| | | | | | | | | F  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | | F  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | | F  = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | | | | | | | F  = 4 , total_length = 36} , self = 75 , parent = Nothing , duration = 1.043869657000
| | | | | | | | | F  , status = Fail , start = 2025-09-04 08:21:26.672705175 UTC , finish =
| | | | | | | | | F  2025-09-04 08:21:27.716574832 UTC , thread_cap_info = ("ThreadId 108",
| | | | | | | | | F  0, False)}
| | | | | | | | | F  
| | | | | | F | | |  
| | | | | | S | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | S | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | S | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | S | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | S | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | S | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | S | | |  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | | | | S | | |  = 4 , total_length = 36} , self = 72 , parent = Nothing , duration = 0.746760767000
| | | | | | S | | |  , status = Success , start = 2025-09-04 08:21:26.951943166 UTC , finish
| | | | | | S | | |  = 2025-09-04 08:21:27.698703933 UTC , thread_cap_info = ("ThreadId 109",
| | | | | | S | | |  0, False)}
| | | | | | S | | |  
| F | | | | | | | |  
F   | | | | | | | |  
    | F | | | | | |  
S   |   | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S   |   | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S   |   | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S   |   | | | | | |  = 60 , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 45
S   |   | | | | | |  , alphabet_size = 12 , total_length = 480} , self = 84 , parent = Nothing
S   |   | | | | | |  , duration = 0.787190961000 , status = Success , start = 2025-09-04 08:21:27.336530048
S   |   | | | | | |  UTC , finish = 2025-09-04 08:21:28.123721009 UTC , thread_cap_info = ("ThreadId
S   |   | | | | | |  121", 3, False)}
S   |   | | | | | |  
|   |   | | | | F |  
| S |   | | | |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S |   | | | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S |   | | | |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S |   | | | |   |  = 47 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 45 ,
| S |   | | | |   |  alphabet_size = 10 , total_length = 376} , self = 103 , parent = Nothing
| S |   | | | |   |  , duration = 1.566695911000 , status = Success , start = 2025-09-04 08:21:27.379882952
| S |   | | | |   |  UTC , finish = 2025-09-04 08:21:28.946578863 UTC , thread_cap_info = ("ThreadId
| S |   | | | |   |  123", 3, False)}
| S |   | | | |   |  
| | |   S | | |   |  
| | |     | | F   |  
| | | E   | |     |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E   | |     |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E   | |     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E   | |     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E   | |     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E   | |     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 47
| | | E   | |     |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 45 , alphabet_size
| | | E   | |     |  = 10 , total_length = 376} , self = 105 , parent = Nothing , duration =
| | | E   | |     |  1.555956249000 , status = Except "AsyncCancelled" , start = 2025-09-04
| | | E   | |     |  08:21:27.472770532 UTC , finish = 2025-09-04 08:21:29.028726781 UTC , thread_cap_info
| | | E   | |     |  = ("ThreadId 125", 3, False)}
| | | E   | |     |  
| | F |   | |     |  
| |   |   E |     |  
| | E |     |     |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E |     |     |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E |     |     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E |     |     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |     |     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |     |     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 60
| | E |     |     |  , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 45 , alphabet_size
| | E |     |     |  = 12 , total_length = 480} , self = 88 , parent = Nothing , duration =
| | E |     |     |  0.782081674000 , status = Except "AsyncCancelled" , start = 2025-09-04
| | E |     |     |  08:21:27.611868059 UTC , finish = 2025-09-04 08:21:28.393949733 UTC , thread_cap_info
| | E |     |     |  = ("ThreadId 126", 3, False)}
| | E |     |     |  
| | | |     S     |  
| | | |           F  
| | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | F            = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | F            = 48} , self = 80 , parent = Nothing , duration = 0.108254530000 , status
| | | | F            = Fail , start = 2025-09-04 08:21:27.7474812 UTC , finish = 2025-09-04
| | | | F            08:21:27.85573573 UTC , thread_cap_info = ("ThreadId 132", 0, False)}
| | | | F            
| | | | | S          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S          = 8 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | | S          = 5 , total_length = 48} , self = 86 , parent = Nothing , duration = 0.358879834000
| | | | | S          , status = Success , start = 2025-09-04 08:21:27.813668686 UTC , finish
| | | | | S          = 2025-09-04 08:21:28.17254852 UTC , thread_cap_info = ("ThreadId 137",
| | | | | S          0, False)}
| | | | | S          
| | | | F |          
| | | | E |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | E |          , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 5 , alphabet_size
| | | | E |          = 5 , total_length = 48} , self = 91 , parent = Nothing , duration = 0.558823967000
| | | | E |          , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:27.871895718
| | | | E |          UTC , finish = 2025-09-04 08:21:28.430719685 UTC , thread_cap_info = ("ThreadId
| | | | E |          141", 0, False)}
| | | | E |          
| | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | F        = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| | | | | | F        = 36} , self = 83 , parent = Nothing , duration = 0.140609043000 , status
| | | | | | F        = Fail , start = 2025-09-04 08:21:27.918293648 UTC , finish = 2025-09-04
| | | | | | F        08:21:28.058902691 UTC , thread_cap_info = ("ThreadId 143", 2, False)}
| | | | | | F        
| | | | | | | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F      = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | | | | | F      = 4 , total_length = 36} , self = 89 , parent = Nothing , duration = 0.401311708000
| | | | | | | F      , status = Fail , start = 2025-09-04 08:21:27.993260275 UTC , finish =
| | | | | | | F      2025-09-04 08:21:28.394571983 UTC , thread_cap_info = ("ThreadId 144",
| | | | | | | F      2, False)}
| | | | | | | F      
| | | | | | F |      
| | | | | | F |      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | F |      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | F |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | F |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | F |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | F |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | F |      , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | | | | F |      = 4 , total_length = 36} , self = 101 , parent = Nothing , duration = 0.619593966000
| | | | | | F |      , status = Fail , start = 2025-09-04 08:21:28.114942015 UTC , finish =
| | | | | | F |      2025-09-04 08:21:28.734535981 UTC , thread_cap_info = ("ThreadId 148",
| | | | | | F |      0, False)}
| | | | | | F |      
S | | | | | | |      
  | | | | S | |      
  | E | |   | |      
  |   | |   | F      
F |   | |   |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F |   | |   |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F |   | |   |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F |   | |   |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F |   | |   |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F |   | |   |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
F |   | |   |        , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
F |   | |   |        = 4 , total_length = 36} , self = 110 , parent = Nothing , duration = 0.969396534000
F |   | |   |        , status = Fail , start = 2025-09-04 08:21:28.412698087 UTC , finish =
F |   | |   |        2025-09-04 08:21:29.382094621 UTC , thread_cap_info = ("ThreadId 152",
F |   | |   |        2, False)}
F |   | |   |        
| |   | E   |        
| | F |     |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F |     |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F |     |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F |     |        = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | F |     |        = 5 , total_length = 42} , self = 102 , parent = Nothing , duration = 0.259884998000
| | F |     |        , status = Fail , start = 2025-09-04 08:21:28.493416595 UTC , finish =
| | F |     |        2025-09-04 08:21:28.753301593 UTC , thread_cap_info = ("ThreadId 164",
| | F |     |        0, False)}
| | F |     |        
| | | | F   |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F   |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F   |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F   |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F   |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F   |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | F   |        , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | F   |        = 5 , total_length = 42} , self = 114 , parent = Nothing , duration = 1.619663694000
| | | | F   |        , status = Fail , start = 2025-09-04 08:21:28.513849854 UTC , finish =
| | | | F   |        2025-09-04 08:21:30.133513548 UTC , thread_cap_info = ("ThreadId 165",
| | | | F   |        0, False)}
| | | | F   |        
| | | | | F |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |        = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | | | F |        = 15 , num_top_rules = 15 , num_weak_rules = 45 , alphabet_size = 12 ,
| | | | | F |        total_length = 480} , self = 112 , parent = Nothing , duration = 1.071342460000
| | | | | F |        , status = Fail , start = 2025-09-04 08:21:28.571877172 UTC , finish =
| | | | | F |        2025-09-04 08:21:29.643219632 UTC , thread_cap_info = ("ThreadId 167",
| | | | | F |        3, False)}
| | | | | F |        
| | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | | | | | F      = 15 , num_top_rules = 15 , num_weak_rules = 45 , alphabet_size = 12 ,
| | | | | | | F      total_length = 480} , self = 116 , parent = Nothing , duration = 2.444661270000
| | | | | | | F      , status = Fail , start = 2025-09-04 08:21:28.593687954 UTC , finish =
| | | | | | | F      2025-09-04 08:21:31.038349224 UTC , thread_cap_info = ("ThreadId 168",
| | | | | | | F      3, False)}
| | | | | | | F      
| | | | | | F |      
| | | | | | F |      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F |      = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | | | | F |      = 4 , total_length = 36} , self = 111 , parent = Nothing , duration = 0.875869114000
| | | | | | F |      , status = Fail , start = 2025-09-04 08:21:28.753255846 UTC , finish =
| | | | | | F |      2025-09-04 08:21:29.62912496 UTC , thread_cap_info = ("ThreadId 172", 2,
| | | | | | F |      False)}
| | | | | | F |      
| | F | | | | |      
| | F | | | | |      Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
| | F | | | | |      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F | | | | |      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F | | | | |      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | | | |      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | | | |      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | F | | | | |      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | F | | | | |      = 5 , total_length = 42} , self = 113 , parent = Nothing , duration = 1.369071808000
| | F | | | | |      , status = Fail , start = 2025-09-04 08:21:28.757625557 UTC , finish =
| | F | | | | |      2025-09-04 08:21:30.126697365 UTC , thread_cap_info = ("ThreadId 173",
| | F | | | | |      0, False)}
| | F | | | | |      
| S | | | | | |      
|   | E | | | |      
| F |   | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F |   | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F |   | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 46 , num_strict_rules
| F |   | | | |      = 1 , num_top_rules = 1 , num_weak_rules = 45 , alphabet_size = 10 , total_length
| F |   | | | |      = 368} , self = 117 , parent = Nothing , duration = 2.105155593000 , status
| F |   | | | |      = Fail , start = 2025-09-04 08:21:29.211858607 UTC , finish = 2025-09-04
| F |   | | | |      08:21:31.3170142 UTC , thread_cap_info = ("ThreadId 180", 3, False)}
| F |   | | | |      
| | | F | | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 46 , num_strict_rules
| | | F | | | |      = 1 , num_top_rules = 1 , num_weak_rules = 45 , alphabet_size = 10 , total_length
| | | F | | | |      = 368} , self = 115 , parent = Nothing , duration = 1.770839905000 , status
| | | F | | | |      = Fail , start = 2025-09-04 08:21:29.262269573 UTC , finish = 2025-09-04
| | | F | | | |      08:21:31.033109478 UTC , thread_cap_info = ("ThreadId 181", 3, False)}
| | | F | | | |      
F | | | | | | |      
  | | | | | F |      
F | | | | |   |      Info { what = "QPI\n { dim = 5\n , bits = 4\n , solver = Stats (Kissatapi
F | | | | |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | | | |   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | | | |   |      = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
F | | | | |   |      = 4 , total_length = 36} , self = 137 , parent = Nothing , duration = 7.232903021000
F | | | | |   |      , status = Fail , start = 2025-09-04 08:21:29.633933451 UTC , finish =
F | | | | |   |      2025-09-04 08:21:36.866836472 UTC , thread_cap_info = ("ThreadId 184",
F | | | | |   |      2, False)}
F | | | | |   |      
| | | | | F   |      
| | | | | S   |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S   |      = 60 , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 45
| | | | | S   |      , alphabet_size = 12 , total_length = 480} , self = 119 , parent = Nothing
| | | | | S   |      , duration = 2.951030683000 , status = Success , start = 2025-09-04 08:21:29.73211049
| | | | | S   |      UTC , finish = 2025-09-04 08:21:32.683141173 UTC , thread_cap_info = ("ThreadId
| | | | | S   |      185", 3, False)}
| | | | | S   |      
| | F | | |   |      
| | F | | |   |      Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | |   |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | |   |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | |   |      = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | F | | |   |      = 5 , total_length = 42} , self = 118 , parent = Nothing , duration = 1.202084053000
| | F | | |   |      , status = Fail , start = 2025-09-04 08:21:30.126761549 UTC , finish =
| | F | | |   |      2025-09-04 08:21:31.328845602 UTC , thread_cap_info = ("ThreadId 187",
| | F | | |   |      0, False)}
| | F | | |   |      
| | | | F |   |      
| | | F   |   |      
| | |     |   F      
| | | S   |          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S   |          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S   |          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S   |          = 46 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 45 ,
| | | S   |          alphabet_size = 10 , total_length = 368} , self = 126 , parent = Nothing
| | | S   |          , duration = 3.115581483000 , status = Success , start = 2025-09-04 08:21:31.046897262
| | | S   |          UTC , finish = 2025-09-04 08:21:34.162478745 UTC , thread_cap_info = ("ThreadId
| | | S   |          195", 3, False)}
| | | S   |          
| | | | E |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 60
| | | | E |          , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 45 , alphabet_size
| | | | E |          = 12 , total_length = 480} , self = 121 , parent = Nothing , duration =
| | | | E |          1.730327777000 , status = Except "AsyncCancelled" , start = 2025-09-04
| | | | E |          08:21:31.052171421 UTC , finish = 2025-09-04 08:21:32.782499198 UTC , thread_cap_info
| | | | E |          = ("ThreadId 196", 3, False)}
| | | | E |          
| F | | | |          
|   F | | |          
| E   | | |          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E   | | |          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E   | | |          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E   | | |          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E   | | |          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E   | | |          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 46
| E   | | |          , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 45 , alphabet_size
| E   | | |          = 10 , total_length = 368} , self = 128 , parent = Nothing , duration =
| E   | | |          2.959361950000 , status = Except "AsyncCancelled" , start = 2025-09-04
| E   | | |          08:21:31.355053568 UTC , finish = 2025-09-04 08:21:34.314415518 UTC , thread_cap_info
| E   | | |          = ("ThreadId 198", 3, False)}
| E   | | |          
| |   | | S          
| |   | E            
| | F |              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F |              = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | F |              = 15 , num_top_rules = 15 , num_weak_rules = 45 , alphabet_size = 12 ,
| | F |              total_length = 480} , self = 134 , parent = Nothing , duration = 2.570870647000
| | F |              , status = Fail , start = 2025-09-04 08:21:32.835289849 UTC , finish =
| | F |              2025-09-04 08:21:35.406160496 UTC , thread_cap_info = ("ThreadId 207",
| | F |              3, False)}
| | F |              
| | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 60 , num_strict_rules
| | | | F            = 15 , num_top_rules = 15 , num_weak_rules = 45 , alphabet_size = 12 ,
| | | | F            total_length = 480} , self = 133 , parent = Nothing , duration = 2.178481546000
| | | | F            , status = Fail , start = 2025-09-04 08:21:32.864601652 UTC , finish =
| | | | F            2025-09-04 08:21:35.043083198 UTC , thread_cap_info = ("ThreadId 206",
| | | | F            3, False)}
| | | | F            
| | | S |            
| E |   |            
| F |   |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F |   |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F |   |            = False\n , verbose = False}" , input_size = Size { num_rules = 48 , num_strict_rules
| F |   |            = 3 , num_top_rules = 3 , num_weak_rules = 45 , alphabet_size = 10 , total_length
| F |   |            = 384} , self = 136 , parent = Nothing , duration = 1.628868431000 , status
| F |   |            = Fail , start = 2025-09-04 08:21:34.481873831 UTC , finish = 2025-09-04
| F |   |            08:21:36.110742262 UTC , thread_cap_info = ("ThreadId 212", 3, False)}
| F |   |            
| | | F |            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F |            = False\n , verbose = False}" , input_size = Size { num_rules = 48 , num_strict_rules
| | | F |            = 3 , num_top_rules = 3 , num_weak_rules = 45 , alphabet_size = 10 , total_length
| | | F |            = 384} , self = 135 , parent = Nothing , duration = 1.521756420000 , status
| | | F |            = Fail , start = 2025-09-04 08:21:34.501154265 UTC , finish = 2025-09-04
| | | F |            08:21:36.022910685 UTC , thread_cap_info = ("ThreadId 213", 3, False)}
| | | F |            
| | | | F            
| | | | S            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S            = 60 , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 45
| | | | S            , alphabet_size = 12 , total_length = 480} , self = 138 , parent = Nothing
| | | | S            , duration = 2.906594440000 , status = Success , start = 2025-09-04 08:21:35.083502226
| | | | S            UTC , finish = 2025-09-04 08:21:37.990096666 UTC , thread_cap_info = ("ThreadId
| | | | S            216", 3, False)}
| | | | S            
| | F | |            
| | E | |            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | |            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | |            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 60
| | E | |            , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 45 , alphabet_size
| | E | |            = 12 , total_length = 480} , self = 140 , parent = Nothing , duration =
| | E | |            2.623575334000 , status = Except "AsyncCancelled" , start = 2025-09-04
| | E | |            08:21:35.411875899 UTC , finish = 2025-09-04 08:21:38.035451233 UTC , thread_cap_info
| | E | |            = ("ThreadId 217", 3, False)}
| | E | |            
| | | F |            
| F |   |            
F   |   |            
    |   S            
    E                
