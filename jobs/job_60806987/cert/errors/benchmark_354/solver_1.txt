[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 588 length 2861
last 608 length 2641
CNF 608 vars 2641 clauses
last 542 length 2431
CNF 588 vars 2861 clauses
last 446 length 2011
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
CNF 446 vars 2011 clauses
CNF 542 vars 2431 clauses
last 616 length 2737
CNF 616 vars 2737 clauses
last 594 length 2971
CNF 594 vars 2971 clauses
last 395 length 1699
last 329 length 1416
CNF 395 vars 1699 clauses
CNF 329 vars 1416 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2813, clauses: 10263
last 2813 length 10263
last 1418 length 6801
CNF 2813 vars 10263 clauses
CNF 1418 vars 6801 clauses
last 1994 length 8319
CNF 1994 vars 8319 clauses
last 1378 length 6175
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2813, clauses: 10263, status: Unsatisfied, time: 0.020620933s
CNF 1378 vars 6175 clauses
last 1392 length 6139
last 2000 length 9048
last 1176 length 5789
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1947, clauses: 7388
CNF 1392 vars 6139 clauses
CNF 2000 vars 9048 clauses
CNF 1176 vars 5789 clauses
last 2000 length 9048
last 1994 length 8319
last 1947 length 7388
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5491, clauses: 20539
last 5491 length 20539
CNF 1947 vars 7388 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12567, clauses: 51983
last 12567 length 51983
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1947, clauses: 7388, status: Unsatisfied, time: 2.018561249s
CNF 5491 vars 20539 clauses
CNF 12567 vars 51983 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5491, clauses: 20539, status: Unsatisfied, time: 0.420763783s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12567, clauses: 51983, status: Satisfied, time: 0.881877039s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7982, clauses: 30834
last 7982 length 30834
CNF 7982 vars 30834 clauses
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 3 letters       mirror
SRS with 1 strict rules and 2 weak rules on 3 letters       context
SRS with 1 strict rules and 6 weak rules on 3 letters       mirror
SRS with 1 strict rules and 6 weak rules on 3 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [c, b] -> [c] {- Input 0 -}
  [a, b] ->= [] {- Input 1 -}
  [] ->= [a, a, b] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, c] -> [c] {- Mirror (Input 0) -}
  [b, a] ->= [] {- Mirror (Input 1) -}
  [] ->= [b, a, a] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [b, c] -> [c] {- Mirror (Input 0) -}
  [a, b, a] ->= [a] {- Mirror (Input 1) -}
  [b, b, a] ->= [b] {- Mirror (Input 1) -}
  [c, b, a] ->= [c] {- Mirror (Input 1) -}
  [a] ->= [a, b, a, a] {- Mirror (Input 2) -}
  [b] ->= [b, b, a, a] {- Mirror (Input 2) -}
  [c] ->= [c, b, a, a] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [c, b] -> [c] {- Input 0 -}
  [a, b, a] ->= [a] {- Input 1 -}
  [a, b, b] ->= [b] {- Input 1 -}
  [a, b, c] ->= [c] {- Input 1 -}
  [a] ->= [a, a, b, a] {- Input 2 -}
  [b] ->= [a, a, b, b] {- Input 2 -}
  [c] ->= [a, a, b, c] {- Input 2 -}
reason
  ( a
  , St  / 0A 2A -   \
        | -  0A -   |
        \ 0A 2A -1A / )
  ( b
  , St  / 0A 2A -  \
        | -  0A -  |
        \ 1A 2A 1A / )
  ( c
  , St  / 1A  - 1A  \
        | -1A - -1A |
        \ 1A  - 1A  / )
   property Termination
has value Just True
for SRS
  [a, b, a] ->= [a] {- Input 1 -}
  [a, b, b] ->= [b] {- Input 1 -}
  [a, b, c] ->= [c] {- Input 1 -}
  [a] ->= [a, a, b, a] {- Input 2 -}
  [b] ->= [a, a, b, b] {- Input 2 -}
  [c] ->= [a, a, b, c] {- Input 2 -}
reason
  no strict rules

**************************************************
skeleton: \Mirror(1/2,3)\Context\Mirror(1/6,3)\Matrix{\ArcticBZ}{3}(0/6,3)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 2.185695056000
  min duration 0.060242755000
  total durat. 3.676317372000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 26
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 100}
    , self = 86
    , parent = Nothing
    , duration = 1.029347422000
    , status = Fail
    , start = 2025-09-04 08:26:03.381498764 UTC
    , finish = 2025-09-04 08:26:04.410846186 UTC
    , thread_cap_info = ("ThreadId 130", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 26
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 100}
    , self = 88
    , parent = Nothing
    , duration = 2.185695056000
    , status = Fail
    , start = 2025-09-04 08:26:03.448466592 UTC
    , finish = 2025-09-04 08:26:05.634161648 UTC
    , thread_cap_info = ("ThreadId 145", 3, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.524544418000
  min duration 3.524544418000
  total durat. 3.524544418000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 126}
    , self = 93
    , parent = Nothing
    , duration = 3.524544418000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 08:26:03.787368387 UTC
    , finish = 2025-09-04 08:26:07.311912805 UTC
    , thread_cap_info = ("ThreadId 175", 0, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.679404980000
  min duration 3.679404980000
  total durat. 3.679404980000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 63
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 54
      , alphabet_size = 9
      , total_length = 396}
    , self = 91
    , parent = Nothing
    , duration = 3.679404980000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:26:03.588505618 UTC
    , finish = 2025-09-04 08:26:07.267910598 UTC
    , thread_cap_info = ("ThreadId 170", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 2.360940877000
  min duration 0.047923539000
  total durat. 5.152473863000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 26
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 100}
    , self = 90
    , parent = Nothing
    , duration = 2.332482559000
    , status = Fail
    , start = 2025-09-04 08:26:03.498962088 UTC
    , finish = 2025-09-04 08:26:05.831444647 UTC
    , thread_cap_info = ("ThreadId 146", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 126}
    , self = 89
    , parent = Nothing
    , duration = 2.360940877000
    , status = Fail
    , start = 2025-09-04 08:26:03.448466444 UTC
    , finish = 2025-09-04 08:26:05.809407321 UTC
    , thread_cap_info = ("ThreadId 149", 1, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.412405168000
  min duration 3.412405168000
  total durat. 3.412405168000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 126}
    , self = 94
    , parent = Nothing
    , duration = 3.412405168000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 08:26:03.905358773 UTC
    , finish = 2025-09-04 08:26:07.317763941 UTC
    , thread_cap_info = ("ThreadId 176", 0, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.651381537000
  min duration 3.651381537000
  total durat. 3.651381537000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 63
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 54
      , alphabet_size = 9
      , total_length = 396}
    , self = 95
    , parent = Nothing
    , duration = 3.651381537000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:26:03.666440653 UTC
    , finish = 2025-09-04 08:26:07.31782219 UTC
    , thread_cap_info = ("ThreadId 172", 0, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 4.766856712000
  min duration 4.766856712000
  total durat. 4.766856712000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 30}
    , self = 100
    , parent = Nothing
    , duration = 4.766856712000
    , status = Success
    , start = 2025-09-04 08:26:03.522768712 UTC
    , finish = 2025-09-04 08:26:08.289625424 UTC
    , thread_cap_info = ("ThreadId 159", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.118372738000
  min duration 1.118372738000
  total durat. 1.118372738000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 30}
    , self = 102
    , parent = Nothing
    , duration = 1.118372738000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:26:07.385758482 UTC
    , finish = 2025-09-04 08:26:08.50413122 UTC
    , thread_cap_info = ("ThreadId 194", 0, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.793458802000
  min duration 3.793458802000
  total durat. 3.793458802000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 30}
    , self = 96
    , parent = Nothing
    , duration = 3.793458802000
    , status = Fail
    , start = 2025-09-04 08:26:03.524428569 UTC
    , finish = 2025-09-04 08:26:07.317887371 UTC
    , thread_cap_info = ("ThreadId 160", 0, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 4.087369046000
  min duration 0.167692265000
  total durat. 4.255061311000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 26
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 100}
    , self = 99
    , parent = Nothing
    , duration = 4.087369046000
    , status = Fail
    , start = 2025-09-04 08:26:03.548502396 UTC
    , finish = 2025-09-04 08:26:07.635871442 UTC
    , thread_cap_info = ("ThreadId 169", 0, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 4.284423525000
  min duration 4.284423525000
  total durat. 4.284423525000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 3
      , total_length = 8}
    , self = 98
    , parent = Nothing
    , duration = 4.284423525000
    , status = Fail
    , start = 2025-09-04 08:26:03.31231802 UTC
    , finish = 2025-09-04 08:26:07.596741545 UTC
    , thread_cap_info = ("ThreadId 101", 1, False)}
Success : "Tiling\n { method = All\n , width = 2\n , state_type = Best\n , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = True}"
  total number 6
  max duration 1.079457661000
  min duration 0.000170246000
  total durat. 1.142590015000
  Info
    { what = "Tiling\n  { method = All\n  , width = 2\n  , state_type = Best\n  , map_type = Enum\n  , unlabel = Never\n  , print_completion_steps = False\n  , print_tiles = False\n  , max_num_tiles = Just 10000\n  , max_num_rules = Just 100000\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = True}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 126}
    , self = 87
    , parent = Nothing
    , duration = 1.079457661000
    , status = Success
    , start = 2025-09-04 08:26:03.688592243 UTC
    , finish = 2025-09-04 08:26:04.768049904 UTC
    , thread_cap_info = ("ThreadId 174", 0, False)}
Fail : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 24
  max duration 2.485568947000
  min duration 0.000006660000
  total durat. 3.856304216000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 2187
      , num_strict_rules = 729
      , num_top_rules = 0
      , num_weak_rules = 1458
      , alphabet_size = 81
      , total_length = 14580}
    , self = 104
    , parent = Nothing
    , duration = 1.167828369000
    , status = Fail
    , start = 2025-09-04 08:26:07.547450019 UTC
    , finish = 2025-09-04 08:26:08.715278388 UTC
    , thread_cap_info = ("ThreadId 196", 0, False)}
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 2187
      , num_strict_rules = 729
      , num_top_rules = 0
      , num_weak_rules = 1458
      , alphabet_size = 81
      , total_length = 14580}
    , self = 92
    , parent = Nothing
    , duration = 2.485568947000
    , status = Fail
    , start = 2025-09-04 08:26:04.826319765 UTC
    , finish = 2025-09-04 08:26:07.311888712 UTC
    , thread_cap_info = ("ThreadId 181", 0, False)}
**************************************************
E                          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                          = True}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules
E                          = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 5} , self
E                          = 61 , parent = Nothing , duration = 0.126557998000 , status = Except "AsyncCancelled"
E                          , start = 2025-09-04 08:26:03.26405618 UTC , finish = 2025-09-04 08:26:03.390614178
E                          UTC , thread_cap_info = ("ThreadId 20", 0, False)}
E                          
| F                        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                        = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| F                        = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| F                        = 46} , self = 64 , parent = Nothing , duration = 0.118953261000 , status
| F                        = Fail , start = 2025-09-04 08:26:03.280961521 UTC , finish = 2025-09-04
| F                        08:26:03.399914782 UTC , thread_cap_info = ("ThreadId 99", 2, False)}
| F                        
| | F                      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F                      = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | F                      = 46} , self = 63 , parent = Nothing , duration = 0.108638940000 , status
| | F                      = Fail , start = 2025-09-04 08:26:03.286079594 UTC , finish = 2025-09-04
| | F                      08:26:03.394718534 UTC , thread_cap_info = ("ThreadId 100", 2, False)}
| | F                      
| | | F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | F                    , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | F                    = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 1 ,
| | | F                    num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 3 , total_length
| | | F                    = 8} , self = 98 , parent = Nothing , duration = 4.284423525000 , status
| | | F                    = Fail , start = 2025-09-04 08:26:03.31231802 UTC , finish = 2025-09-04
| | | F                    08:26:07.596741545 UTC , thread_cap_info = ("ThreadId 101", 1, False)}
| | | F                    
| | | | F                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | F                  , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | F                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | F                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | F                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | F                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | F                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | F                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | F                  = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 1 ,
| | | | F                  num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 3 , total_length
| | | | F                  = 8} , self = 85 , parent = Nothing , duration = 0.438861540000 , status
| | | | F                  = Fail , start = 2025-09-04 08:26:03.328455035 UTC , finish = 2025-09-04
| | | | F                  08:26:03.767316575 UTC , thread_cap_info = ("ThreadId 102", 1, False)}
| | | | F                  
| | | | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | F                = 8 , num_top_rules = 8 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | F                = 46} , self = 72 , parent = Nothing , duration = 0.102445118000 , status
| | | | | F                = Fail , start = 2025-09-04 08:26:03.328722651 UTC , finish = 2025-09-04
| | | | | F                08:26:03.431167769 UTC , thread_cap_info = ("ThreadId 113", 2, False)}
| | | | | F                
| | | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 26 , num_strict_rules
| | | | | | F              = 18 , num_top_rules = 18 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | | | F              = 100} , self = 86 , parent = Nothing , duration = 1.029347422000 , status
| | | | | | F              = Fail , start = 2025-09-04 08:26:03.381498764 UTC , finish = 2025-09-04
| | | | | | F              08:26:04.410846186 UTC , thread_cap_info = ("ThreadId 130", 0, False)}
| | | | | | F              
E | | | | | |              
F | | | | | |              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | |              = False\n , verbose = False}" , input_size = Size { num_rules = 26 , num_strict_rules
F | | | | | |              = 18 , num_top_rules = 18 , num_weak_rules = 8 , alphabet_size = 8 , total_length
F | | | | | |              = 100} , self = 80 , parent = Nothing , duration = 0.144532489000 , status
F | | | | | |              = Fail , start = 2025-09-04 08:26:03.390634368 UTC , finish = 2025-09-04
F | | | | | |              08:26:03.535166857 UTC , thread_cap_info = ("ThreadId 131", 0, False)}
F | | | | | |              
| | F | | | |              
| F   | | | |              
| F   | | | |              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F   | | | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F   | | | |              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F   | | | |              = 12 , num_strict_rules = 8 , num_top_rules = 8 , num_weak_rules = 4 ,
| F   | | | |              alphabet_size = 4 , total_length = 46} , self = 83 , parent = Nothing ,
| F   | | | |              duration = 0.167692265000 , status = Fail , start = 2025-09-04 08:26:03.399944378
| F   | | | |              UTC , finish = 2025-09-04 08:26:03.567636643 UTC , thread_cap_info = ("ThreadId
| F   | | | |              137", 2, False)}
| F   | | | |              
| | F | | | |              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | |              = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | F | | | |              = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | F | | | |              = 126} , self = 82 , parent = Nothing , duration = 0.132309851000 , status
| | F | | | |              = Fail , start = 2025-09-04 08:26:03.425724677 UTC , finish = 2025-09-04
| | F | | | |              08:26:03.558034528 UTC , thread_cap_info = ("ThreadId 147", 1, False)}
| | F | | | |              
| | | | | F |              
| | | | | F |              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F |              = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | F |              = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | F |              = 126} , self = 89 , parent = Nothing , duration = 2.360940877000 , status
| | | | | F |              = Fail , start = 2025-09-04 08:26:03.448466444 UTC , finish = 2025-09-04
| | | | | F |              08:26:05.809407321 UTC , thread_cap_info = ("ThreadId 149", 1, False)}
| | | | | F |              
| | | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 26 , num_strict_rules
| | | | | | | F            = 18 , num_top_rules = 18 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | | | | F            = 100} , self = 88 , parent = Nothing , duration = 2.185695056000 , status
| | | | | | | F            = Fail , start = 2025-09-04 08:26:03.448466592 UTC , finish = 2025-09-04
| | | | | | | F            08:26:05.634161648 UTC , thread_cap_info = ("ThreadId 145", 3, False)}
| | | | | | | F            
| | | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 26 , num_strict_rules
| | | | | | | | F          = 18 , num_top_rules = 18 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | | | | | F          = 100} , self = 90 , parent = Nothing , duration = 2.332482559000 , status
| | | | | | | | F          = Fail , start = 2025-09-04 08:26:03.498962088 UTC , finish = 2025-09-04
| | | | | | | | F          08:26:05.831444647 UTC , thread_cap_info = ("ThreadId 146", 3, False)}
| | | | | | | | F          
| | | | | | | | | S        Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | | | | S        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | S        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | S        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | S        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | S        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | | | | S        , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | | | | | | | S        = 3 , total_length = 30} , self = 100 , parent = Nothing , duration = 4.766856712000
| | | | | | | | | S        , status = Success , start = 2025-09-04 08:26:03.522768712 UTC , finish
| | | | | | | | | S        = 2025-09-04 08:26:08.289625424 UTC , thread_cap_info = ("ThreadId 159",
| | | | | | | | | S        0, False)}
| | | | | | | | | S        
| | | | | | | | | | F      Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | | | | | F      = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | | | | F      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | | | | F      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | | F      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | | F      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | | | | | F      , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | | | | | | | | F      = 3 , total_length = 30} , self = 96 , parent = Nothing , duration = 3.793458802000
| | | | | | | | | | F      , status = Fail , start = 2025-09-04 08:26:03.524428569 UTC , finish =
| | | | | | | | | | F      2025-09-04 08:26:07.317887371 UTC , thread_cap_info = ("ThreadId 160",
| | | | | | | | | | F      0, False)}
| | | | | | | | | | F      
F | | | | | | | | | |      
F | | | | | | | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F | | | | | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F | | | | | | | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F | | | | | | | | | |      = 26 , num_strict_rules = 18 , num_top_rules = 18 , num_weak_rules = 8
F | | | | | | | | | |      , alphabet_size = 8 , total_length = 100} , self = 99 , parent = Nothing
F | | | | | | | | | |      , duration = 4.087369046000 , status = Fail , start = 2025-09-04 08:26:03.548502396
F | | | | | | | | | |      UTC , finish = 2025-09-04 08:26:07.635871442 UTC , thread_cap_info = ("ThreadId
F | | | | | | | | | |      169", 0, False)}
F | | | | | | | | | |      
| | F | | | | | | | |      
| F   | | | | | | | |      
| E   | | | | | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E   | | | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E   | | | | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 63 , num_strict_rules
| E   | | | | | | | |      = 9 , num_top_rules = 0 , num_weak_rules = 54 , alphabet_size = 9 , total_length
| E   | | | | | | | |      = 396} , self = 91 , parent = Nothing , duration = 3.679404980000 , status
| E   | | | | | | | |      = Except "AsyncCancelled" , start = 2025-09-04 08:26:03.588505618 UTC ,
| E   | | | | | | | |      finish = 2025-09-04 08:26:07.267910598 UTC , thread_cap_info = ("ThreadId
| E   | | | | | | | |      170", 0, False)}
| E   | | | | | | | |      
| | E | | | | | | | |      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | E | | | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E | | | | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 63 , num_strict_rules
| | E | | | | | | | |      = 9 , num_top_rules = 0 , num_weak_rules = 54 , alphabet_size = 9 , total_length
| | E | | | | | | | |      = 396} , self = 95 , parent = Nothing , duration = 3.651381537000 , status
| | E | | | | | | | |      = Except "AsyncCancelled" , start = 2025-09-04 08:26:03.666440653 UTC ,
| | E | | | | | | | |      finish = 2025-09-04 08:26:07.31782219 UTC , thread_cap_info = ("ThreadId
| | E | | | | | | | |      172", 0, False)}
| | E | | | | | | | |      
| | | | | | | | | | | S    Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | | | | | | | | | S    , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | | | | | | | | | S    , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | | | | | | | | | S    = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | | | | | | | | | S    , cpf = True}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | | | | S    = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | | | | | | S    = 126} , self = 87 , parent = Nothing , duration = 1.079457661000 , status
| | | | | | | | | | | S    = Success , start = 2025-09-04 08:26:03.688592243 UTC , finish = 2025-09-04
| | | | | | | | | | | S    08:26:04.768049904 UTC , thread_cap_info = ("ThreadId 174", 0, False)}
| | | | | | | | | | | S    
| | | | F | | | | | | |    
| | | | E | | | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E | | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | E | | | | | | |    = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | E | | | | | | |    = 126} , self = 93 , parent = Nothing , duration = 3.524544418000 , status
| | | | E | | | | | | |    = Except "<<timeout>>" , start = 2025-09-04 08:26:03.787368387 UTC , finish
| | | | E | | | | | | |    = 2025-09-04 08:26:07.311912805 UTC , thread_cap_info = ("ThreadId 175",
| | | | E | | | | | | |    0, False)}
| | | | E | | | | | | |    
| | | | | | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | | | | | E  = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | | | | | | | E  = 126} , self = 94 , parent = Nothing , duration = 3.412405168000 , status
| | | | | | | | | | | | E  = Except "<<timeout>>" , start = 2025-09-04 08:26:03.905358773 UTC , finish
| | | | | | | | | | | | E  = 2025-09-04 08:26:07.317763941 UTC , thread_cap_info = ("ThreadId 176",
| | | | | | | | | | | | E  0, False)}
| | | | | | | | | | | | E  
| | | | | | F | | | | | |  
| | | | | |   | | | | S |  
| | | | | | F | | | |   |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | F | | | |   |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | F | | | |   |  = Size { num_rules = 2187 , num_strict_rules = 729 , num_top_rules = 0
| | | | | | F | | | |   |  , num_weak_rules = 1458 , alphabet_size = 81 , total_length = 14580} ,
| | | | | | F | | | |   |  self = 92 , parent = Nothing , duration = 2.485568947000 , status = Fail
| | | | | | F | | | |   |  , start = 2025-09-04 08:26:04.826319765 UTC , finish = 2025-09-04 08:26:07.311888712
| | | | | | F | | | |   |  UTC , thread_cap_info = ("ThreadId 181", 0, False)}
| | | | | | F | | | |   |  
| | | | | | | F | | |   |  
| | | | | F |   | | |   |  
| | | | |   |   F | |   |  
| E | | |   |     | |   |  
|   | | |   F     | |   |  
|   | | E         | |   |  
|   | |           | |   E  
|   E |           | |      
|     |           | F      
| E   |           |        Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| E   |           |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E   |           |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E   |           |        , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E   |           |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E   |           |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| E   |           |        , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| E   |           |        = 3 , total_length = 30} , self = 102 , parent = Nothing , duration = 1.118372738000
| E   |           |        , status = Except "AsyncCancelled" , start = 2025-09-04 08:26:07.385758482
| E   |           |        UTC , finish = 2025-09-04 08:26:08.50413122 UTC , thread_cap_info = ("ThreadId
| E   |           |        194", 0, False)}
| E   |           |        
| | F |           |        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | F |           |        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | F |           |        = Size { num_rules = 2187 , num_strict_rules = 729 , num_top_rules = 0
| | F |           |        , num_weak_rules = 1458 , alphabet_size = 81 , total_length = 14580} ,
| | F |           |        self = 104 , parent = Nothing , duration = 1.167828369000 , status = Fail
| | F |           |        , start = 2025-09-04 08:26:07.547450019 UTC , finish = 2025-09-04 08:26:08.715278388
| | F |           |        UTC , thread_cap_info = ("ThreadId 196", 0, False)}
| | F |           |        
| | | F           |        
F | |             |        
  | |             S        
  E |                      
    F                      
