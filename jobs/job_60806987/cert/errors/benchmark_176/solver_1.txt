[Info] pool sizes (success) 3 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 66 length 237
last 40 length 129
CNF 66 vars 237 clauses
last 256 length 980
last 86 length 315
CNF 40 vars 129 clauses
CNF 86 vars 315 clauses
last 65 length 234
[Info] pool sizes (success) 3 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
CNF 256 vars 980 clauses
CNF 65 vars 234 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 521, clauses: 1835
last 149 length 564
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 592, clauses: 2038
last 116 length 403
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 697, clauses: 2434
last 234 length 885
last 176 length 663
last 183 length 698
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1089, clauses: 3878
last 1927 length 7736
last 130 length 489
last 123 length 466
last 2080 length 8360
last 521 length 1835
last 1927 length 7736
last 2080 length 8360
last 3272 length 13339
CNF 149 vars 564 clauses
last 3236 length 12947
last 592 length 2038
CNF 116 vars 403 clauses
last 697 length 2434
CNF 234 vars 885 clauses
CNF 176 vars 663 clauses
CNF 183 vars 698 clauses
last 1089 length 3878
CNF 1927 vars 7736 clauses
CNF 130 vars 489 clauses
CNF 123 vars 466 clauses
CNF 2080 vars 8360 clauses
CNF 521 vars 1835 clauses
CNF 1927 vars 7736 clauses
CNF 2080 vars 8360 clauses
CNF 592 vars 2038 clauses
CNF 697 vars 2434 clauses
CNF 1089 vars 3878 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 521, clauses: 1835, status: Unsatisfied, time: 2.756516885s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 886, clauses: 3090
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 592, clauses: 2038, status: Unsatisfied, time: 2.540517352s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 697, clauses: 2434, status: Unsatisfied, time: 2.504475532s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5723, clauses: 23193
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1089, clauses: 3878, status: Unsatisfied, time: 2.066966357s
last 886 length 3090
last 5723 length 23193
CNF 886 vars 3090 clauses
CNF 5723 vars 23193 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 886, clauses: 3090, status: Satisfied, time: 0.423767647s
**************************************************
summary
**************************************************
SRS with 2 strict rules and 2 weak rules on 4 letters       split
2 sub-proofs
  1 SRS with 1 strict rules and 3 weak rules on 4 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
  SRS with 16 strict rules and 48 weak rules on 16 letters       weights
  SRS with 0 strict rules and 28 weak rules on 12 letters       no strict rules

  2 SRS with 1 strict rules and 2 weak rules on 3 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 2 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b] -> [b, a] {- Input 0 -}
  [d, c] -> [d, a] {- Input 1 -}
  [a] ->= [b, c] {- Input 2 -}
  [b, c] ->= [a, c] {- Input 3 -}
reason
  split
   property Termination
has value Just True
for SRS
  [a, b] ->= [b, a] {- Input 0 -}
  [d, c] -> [d, a] {- Input 1 -}
  [a] ->= [b, c] {- Input 2 -}
  [b, c] ->= [a, c] {- Input 3 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, b], [b, d]] ->= [ [a, b] , [b, a] , [a, d] ] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[a, a], [a, b], [b, c]] ->= [ [a, b] , [b, a] , [a, c] ] {- Semlab 0 (Concon 3 (Input 0)) -}
  [[b, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, d]] ->= [ [b, b] , [b, a] , [a, d] ] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[b, a], [a, b], [b, c]] ->= [ [b, b] , [b, a] , [a, c] ] {- Semlab 1 (Concon 3 (Input 0)) -}
  [[d, a], [a, b], [b, a]] ->= [ [d, b] , [b, a] , [a, a] ] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[d, a], [a, b], [b, b]] ->= [ [d, b] , [b, a] , [a, b] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[d, a], [a, b], [b, d]] ->= [ [d, b] , [b, a] , [a, d] ] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[d, a], [a, b], [b, c]] ->= [ [d, b] , [b, a] , [a, c] ] {- Semlab 2 (Concon 3 (Input 0)) -}
  [[c, a], [a, b], [b, a]] ->= [ [c, b] , [b, a] , [a, a] ] {- Semlab 3 (Concon 0 (Input 0)) -}
  [[c, a], [a, b], [b, b]] ->= [ [c, b] , [b, a] , [a, b] ] {- Semlab 3 (Concon 1 (Input 0)) -}
  [[c, a], [a, b], [b, d]] ->= [ [c, b] , [b, a] , [a, d] ] {- Semlab 3 (Concon 2 (Input 0)) -}
  [[c, a], [a, b], [b, c]] ->= [ [c, b] , [b, a] , [a, c] ] {- Semlab 3 (Concon 3 (Input 0)) -}
  [[a, d], [d, c], [c, a]] -> [ [a, d] , [d, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, d], [d, c], [c, b]] -> [ [a, d] , [d, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, d], [d, c], [c, d]] -> [ [a, d] , [d, a] , [a, d] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[a, d], [d, c], [c, c]] -> [ [a, d] , [d, a] , [a, c] ] {- Semlab 0 (Concon 3 (Input 1)) -}
  [[b, d], [d, c], [c, a]] -> [ [b, d] , [d, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, d], [d, c], [c, b]] -> [ [b, d] , [d, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, d], [d, c], [c, d]] -> [ [b, d] , [d, a] , [a, d] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[b, d], [d, c], [c, c]] -> [ [b, d] , [d, a] , [a, c] ] {- Semlab 1 (Concon 3 (Input 1)) -}
  [[d, d], [d, c], [c, a]] -> [ [d, d] , [d, a] , [a, a] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[d, d], [d, c], [c, b]] -> [ [d, d] , [d, a] , [a, b] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[d, d], [d, c], [c, d]] -> [ [d, d] , [d, a] , [a, d] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[d, d], [d, c], [c, c]] -> [ [d, d] , [d, a] , [a, c] ] {- Semlab 2 (Concon 3 (Input 1)) -}
  [[c, d], [d, c], [c, a]] -> [ [c, d] , [d, a] , [a, a] ] {- Semlab 3 (Concon 0 (Input 1)) -}
  [[c, d], [d, c], [c, b]] -> [ [c, d] , [d, a] , [a, b] ] {- Semlab 3 (Concon 1 (Input 1)) -}
  [[c, d], [d, c], [c, d]] -> [ [c, d] , [d, a] , [a, d] ] {- Semlab 3 (Concon 2 (Input 1)) -}
  [[c, d], [d, c], [c, c]] -> [ [c, d] , [d, a] , [a, c] ] {- Semlab 3 (Concon 3 (Input 1)) -}
  [[a, a], [a, a]] ->= [ [a, b] , [b, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, a], [a, b]] ->= [ [a, b] , [b, c] , [c, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, a], [a, d]] ->= [ [a, b] , [b, c] , [c, d] ] {- Semlab 0 (Concon 2 (Input 2)) -}
  [[a, a], [a, c]] ->= [ [a, b] , [b, c] , [c, c] ] {- Semlab 0 (Concon 3 (Input 2)) -}
  [[b, a], [a, a]] ->= [ [b, b] , [b, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, a], [a, b]] ->= [ [b, b] , [b, c] , [c, b] ] {- Semlab 1 (Concon 1 (Input 2)) -}
  [[b, a], [a, d]] ->= [ [b, b] , [b, c] , [c, d] ] {- Semlab 1 (Concon 2 (Input 2)) -}
  [[b, a], [a, c]] ->= [ [b, b] , [b, c] , [c, c] ] {- Semlab 1 (Concon 3 (Input 2)) -}
  [[d, a], [a, a]] ->= [ [d, b] , [b, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 2)) -}
  [[d, a], [a, b]] ->= [ [d, b] , [b, c] , [c, b] ] {- Semlab 2 (Concon 1 (Input 2)) -}
  [[d, a], [a, d]] ->= [ [d, b] , [b, c] , [c, d] ] {- Semlab 2 (Concon 2 (Input 2)) -}
  [[d, a], [a, c]] ->= [ [d, b] , [b, c] , [c, c] ] {- Semlab 2 (Concon 3 (Input 2)) -}
  [[c, a], [a, a]] ->= [ [c, b] , [b, c] , [c, a] ] {- Semlab 3 (Concon 0 (Input 2)) -}
  [[c, a], [a, b]] ->= [ [c, b] , [b, c] , [c, b] ] {- Semlab 3 (Concon 1 (Input 2)) -}
  [[c, a], [a, d]] ->= [ [c, b] , [b, c] , [c, d] ] {- Semlab 3 (Concon 2 (Input 2)) -}
  [[c, a], [a, c]] ->= [ [c, b] , [b, c] , [c, c] ] {- Semlab 3 (Concon 3 (Input 2)) -}
  [[a, b], [b, c], [c, a]] ->= [ [a, a] , [a, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[a, b], [b, c], [c, b]] ->= [ [a, a] , [a, c] , [c, b] ] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[a, b], [b, c], [c, d]] ->= [ [a, a] , [a, c] , [c, d] ] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[a, b], [b, c], [c, c]] ->= [ [a, a] , [a, c] , [c, c] ] {- Semlab 0 (Concon 3 (Input 3)) -}
  [[b, b], [b, c], [c, a]] ->= [ [b, a] , [a, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[b, b], [b, c], [c, b]] ->= [ [b, a] , [a, c] , [c, b] ] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[b, b], [b, c], [c, d]] ->= [ [b, a] , [a, c] , [c, d] ] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[b, b], [b, c], [c, c]] ->= [ [b, a] , [a, c] , [c, c] ] {- Semlab 1 (Concon 3 (Input 3)) -}
  [[d, b], [b, c], [c, a]] ->= [ [d, a] , [a, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[d, b], [b, c], [c, b]] ->= [ [d, a] , [a, c] , [c, b] ] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[d, b], [b, c], [c, d]] ->= [ [d, a] , [a, c] , [c, d] ] {- Semlab 2 (Concon 2 (Input 3)) -}
  [[d, b], [b, c], [c, c]] ->= [ [d, a] , [a, c] , [c, c] ] {- Semlab 2 (Concon 3 (Input 3)) -}
  [[c, b], [b, c], [c, a]] ->= [ [c, a] , [a, c] , [c, a] ] {- Semlab 3 (Concon 0 (Input 3)) -}
  [[c, b], [b, c], [c, b]] ->= [ [c, a] , [a, c] , [c, b] ] {- Semlab 3 (Concon 1 (Input 3)) -}
  [[c, b], [b, c], [c, d]] ->= [ [c, a] , [a, c] , [c, d] ] {- Semlab 3 (Concon 2 (Input 3)) -}
  [[c, b], [b, c], [c, c]] ->= [ [c, a] , [a, c] , [c, c] ] {- Semlab 3 (Concon 3 (Input 3)) -}
reason
  ([d, d], 0/1)
  ([d, a], 0/1)
  ([d, b], 0/1)
  ([d, c], 2/1)
  ([a, d], 1/1)
  ([a, a], 1/1)
  ([a, b], 1/1)
  ([a, c], 0/1)
  ([b, d], 2/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
  ([b, c], 0/1)
  ([c, d], 0/1)
  ([c, a], 0/1)
  ([c, b], 0/1)
  ([c, c], 0/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, a]] ->= [ [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, b]] ->= [ [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, a]] ->= [ [b, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, b]] ->= [ [b, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[d, a], [a, b], [b, a]] ->= [ [d, b] , [b, a] , [a, a] ] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[d, a], [a, b], [b, b]] ->= [ [d, b] , [b, a] , [a, b] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, b], [b, a]] ->= [ [c, b] , [b, a] , [a, a] ] {- Semlab 3 (Concon 0 (Input 0)) -}
  [[c, a], [a, b], [b, b]] ->= [ [c, b] , [b, a] , [a, b] ] {- Semlab 3 (Concon 1 (Input 0)) -}
  [[a, a], [a, c]] ->= [ [a, b] , [b, c] , [c, c] ] {- Semlab 0 (Concon 3 (Input 2)) -}
  [[b, a], [a, c]] ->= [ [b, b] , [b, c] , [c, c] ] {- Semlab 1 (Concon 3 (Input 2)) -}
  [[d, a], [a, c]] ->= [ [d, b] , [b, c] , [c, c] ] {- Semlab 2 (Concon 3 (Input 2)) -}
  [[c, a], [a, c]] ->= [ [c, b] , [b, c] , [c, c] ] {- Semlab 3 (Concon 3 (Input 2)) -}
  [[a, b], [b, c], [c, a]] ->= [ [a, a] , [a, c] , [c, a] ] {- Semlab 0 (Concon 0 (Input 3)) -}
  [[a, b], [b, c], [c, b]] ->= [ [a, a] , [a, c] , [c, b] ] {- Semlab 0 (Concon 1 (Input 3)) -}
  [[a, b], [b, c], [c, d]] ->= [ [a, a] , [a, c] , [c, d] ] {- Semlab 0 (Concon 2 (Input 3)) -}
  [[a, b], [b, c], [c, c]] ->= [ [a, a] , [a, c] , [c, c] ] {- Semlab 0 (Concon 3 (Input 3)) -}
  [[b, b], [b, c], [c, a]] ->= [ [b, a] , [a, c] , [c, a] ] {- Semlab 1 (Concon 0 (Input 3)) -}
  [[b, b], [b, c], [c, b]] ->= [ [b, a] , [a, c] , [c, b] ] {- Semlab 1 (Concon 1 (Input 3)) -}
  [[b, b], [b, c], [c, d]] ->= [ [b, a] , [a, c] , [c, d] ] {- Semlab 1 (Concon 2 (Input 3)) -}
  [[b, b], [b, c], [c, c]] ->= [ [b, a] , [a, c] , [c, c] ] {- Semlab 1 (Concon 3 (Input 3)) -}
  [[d, b], [b, c], [c, a]] ->= [ [d, a] , [a, c] , [c, a] ] {- Semlab 2 (Concon 0 (Input 3)) -}
  [[d, b], [b, c], [c, b]] ->= [ [d, a] , [a, c] , [c, b] ] {- Semlab 2 (Concon 1 (Input 3)) -}
  [[d, b], [b, c], [c, d]] ->= [ [d, a] , [a, c] , [c, d] ] {- Semlab 2 (Concon 2 (Input 3)) -}
  [[d, b], [b, c], [c, c]] ->= [ [d, a] , [a, c] , [c, c] ] {- Semlab 2 (Concon 3 (Input 3)) -}
  [[c, b], [b, c], [c, a]] ->= [ [c, a] , [a, c] , [c, a] ] {- Semlab 3 (Concon 0 (Input 3)) -}
  [[c, b], [b, c], [c, b]] ->= [ [c, a] , [a, c] , [c, b] ] {- Semlab 3 (Concon 1 (Input 3)) -}
  [[c, b], [b, c], [c, d]] ->= [ [c, a] , [a, c] , [c, d] ] {- Semlab 3 (Concon 2 (Input 3)) -}
  [[c, b], [b, c], [c, c]] ->= [ [c, a] , [a, c] , [c, c] ] {- Semlab 3 (Concon 3 (Input 3)) -}
reason
  no strict rules

property Termination
has value Just True
for SRS
  [a, b] -> [b, a] {- Input 0 -}
  [a] ->= [b, c] {- Input 2 -}
  [b, c] ->= [a, c] {- Input 3 -}
reason
  ( a
  , St (Corner  / 1 4 0 \
                | 0 1 2 |
                \ 0 0 1 /) )
  ( b
  , St (Corner  / 1 3 0 \
                | 0 1 2 |
                \ 0 0 1 /) )
  ( c
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [a] ->= [b, c] {- Input 2 -}
  [b, c] ->= [a, c] {- Input 3 -}
reason
  no strict rules

**************************************************
skeleton: (2/2,4)\Split[(1/3,4)\TileAllAll{2}(16/48,16)\Weight(0/28,12)[],(1/2,3)\Matrix{\Natural}{3}(0/2,3)[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10939, clauses: 43139
last 10939 length 43139
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Success : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.043614964000
  min duration 3.043614964000
  total durat. 3.043614964000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 105}
    , self = 107
    , parent = Nothing
    , duration = 3.043614964000
    , status = Success
    , start = 2025-09-04 07:31:51.204035562 UTC
    , finish = 2025-09-04 07:31:54.247650526 UTC
    , thread_cap_info = ("ThreadId 184", 3, False)}
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 2.900794493000
  min duration 0.011779197000
  total durat. 7.500976982000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 0
      , alphabet_size = 5
      , total_length = 10}
    , self = 95
    , parent = Nothing
    , duration = 2.169635586000
    , status = Fail
    , start = 2025-09-04 07:31:50.802270016 UTC
    , finish = 2025-09-04 07:31:52.971905602 UTC
    , thread_cap_info = ("ThreadId 132", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 15}
    , self = 96
    , parent = Nothing
    , duration = 2.257057342000
    , status = Fail
    , start = 2025-09-04 07:31:50.829214304 UTC
    , finish = 2025-09-04 07:31:53.086271646 UTC
    , thread_cap_info = ("ThreadId 144", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 3
      , total_length = 11}
    , self = 100
    , parent = Nothing
    , duration = 2.900794493000
    , status = Fail
    , start = 2025-09-04 07:31:51.029525866 UTC
    , finish = 2025-09-04 07:31:53.930320359 UTC
    , thread_cap_info = ("ThreadId 177", 3, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.059422605000
  min duration 3.059422605000
  total durat. 3.059422605000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 28
      , num_strict_rules = 8
      , num_top_rules = 0
      , num_weak_rules = 20
      , alphabet_size = 12
      , total_length = 164}
    , self = 98
    , parent = Nothing
    , duration = 3.059422605000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:50.846903946 UTC
    , finish = 2025-09-04 07:31:53.906326551 UTC
    , thread_cap_info = ("ThreadId 155", 3, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.157991323000
  min duration 0.133898787000
  total durat. 3.291890110000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 105}
    , self = 104
    , parent = Nothing
    , duration = 3.157991323000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:50.896239784 UTC
    , finish = 2025-09-04 07:31:54.054231107 UTC
    , thread_cap_info = ("ThreadId 168", 3, False)}
Success : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.028575358000
  min duration 2.965392643000
  total durat. 5.993968001000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 105}
    , self = 105
    , parent = Nothing
    , duration = 2.965392643000
    , status = Success
    , start = 2025-09-04 07:31:51.204038634 UTC
    , finish = 2025-09-04 07:31:54.169431277 UTC
    , thread_cap_info = ("ThreadId 186", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 6
      , num_top_rules = 0
      , num_weak_rules = 12
      , alphabet_size = 9
      , total_length = 105}
    , self = 101
    , parent = Nothing
    , duration = 3.028575358000
    , status = Success
    , start = 2025-09-04 07:31:50.908287172 UTC
    , finish = 2025-09-04 07:31:53.93686253 UTC
    , thread_cap_info = ("ThreadId 170", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 2.935163589000
  min duration 0.012123980000
  total durat. 10.533464011000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 0
      , alphabet_size = 5
      , total_length = 11}
    , self = 93
    , parent = Nothing
    , duration = 2.096852374000
    , status = Fail
    , start = 2025-09-04 07:31:50.696236235 UTC
    , finish = 2025-09-04 07:31:52.793088609 UTC
    , thread_cap_info = ("ThreadId 99", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 0
      , alphabet_size = 5
      , total_length = 10}
    , self = 94
    , parent = Nothing
    , duration = 2.116037045000
    , status = Fail
    , start = 2025-09-04 07:31:50.815382783 UTC
    , finish = 2025-09-04 07:31:52.931419828 UTC
    , thread_cap_info = ("ThreadId 133", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 3
      , total_length = 11}
    , self = 102
    , parent = Nothing
    , duration = 2.890424555000
    , status = Fail
    , start = 2025-09-04 07:31:51.046483199 UTC
    , finish = 2025-09-04 07:31:53.936907754 UTC
    , thread_cap_info = ("ThreadId 179", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 15}
    , self = 97
    , parent = Nothing
    , duration = 2.935163589000
    , status = Fail
    , start = 2025-09-04 07:31:50.834877337 UTC
    , finish = 2025-09-04 07:31:53.770040926 UTC
    , thread_cap_info = ("ThreadId 145", 2, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.051361720000
  min duration 3.051361720000
  total durat. 3.051361720000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 28
      , num_strict_rules = 8
      , num_top_rules = 0
      , num_weak_rules = 20
      , alphabet_size = 12
      , total_length = 164}
    , self = 99
    , parent = Nothing
    , duration = 3.051361720000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:50.873204911 UTC
    , finish = 2025-09-04 07:31:53.924566631 UTC
    , thread_cap_info = ("ThreadId 156", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.080019448000
  min duration 1.080019448000
  total durat. 1.080019448000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 3
      , total_length = 11}
    , self = 115
    , parent = Nothing
    , duration = 1.080019448000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:53.94892267 UTC
    , finish = 2025-09-04 07:31:55.028942118 UTC
    , thread_cap_info = ("ThreadId 212", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.759242334000
  min duration 3.759242334000
  total durat. 3.759242334000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 6}
    , self = 109
    , parent = Nothing
    , duration = 3.759242334000
    , status = Fail
    , start = 2025-09-04 07:31:50.727094097 UTC
    , finish = 2025-09-04 07:31:54.486336431 UTC
    , thread_cap_info = ("ThreadId 121", 0, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 3.872712831000
  min duration 3.842492385000
  total durat. 11.576059061000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 7}
    , self = 111
    , parent = Nothing
    , duration = 3.842492385000
    , status = Fail
    , start = 2025-09-04 07:31:50.743987172 UTC
    , finish = 2025-09-04 07:31:54.586479557 UTC
    , thread_cap_info = ("ThreadId 122", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 6}
    , self = 110
    , parent = Nothing
    , duration = 3.860853845000
    , status = Fail
    , start = 2025-09-04 07:31:50.707956108 UTC
    , finish = 2025-09-04 07:31:54.568809953 UTC
    , thread_cap_info = ("ThreadId 120", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 2
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 0
      , alphabet_size = 5
      , total_length = 11}
    , self = 112
    , parent = Nothing
    , duration = 3.872712831000
    , status = Fail
    , start = 2025-09-04 07:31:50.834975906 UTC
    , finish = 2025-09-04 07:31:54.707688737 UTC
    , thread_cap_info = ("ThreadId 148", 3, False)}
**************************************************
CNF 10939 vars 43139 clauses
E                                    Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                                    , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                                    = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                                    , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                                    = True}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules
E                                    = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 7} , self
E                                    = 65 , parent = Nothing , duration = 0.142049516000 , status = Except "AsyncCancelled"
E                                    , start = 2025-09-04 07:31:50.673417534 UTC , finish = 2025-09-04 07:31:50.81546705
E                                    UTC , thread_cap_info = ("ThreadId 20", 2, False)}
E                                    
| E                                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E                                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E                                  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| E                                  = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| E                                  = 69} , self = 63 , parent = Nothing , duration = 0.133898787000 , status
| E                                  = Except "AsyncCancelled" , start = 2025-09-04 07:31:50.681499452 UTC ,
| E                                  finish = 2025-09-04 07:31:50.815398239 UTC , thread_cap_info = ("ThreadId
| E                                  66", 1, False)}
| E                                  
| | E                                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | E                                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | E                                = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | E                                = 12 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | E                                = 69} , self = 64 , parent = Nothing , duration = 0.133905549000 , status
| | E                                = Except "AsyncCancelled" , start = 2025-09-04 07:31:50.681506069 UTC ,
| | E                                finish = 2025-09-04 07:31:50.815411618 UTC , thread_cap_info = ("ThreadId
| | E                                68", 1, False)}
| | E                                
| | | F                              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                              = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
| | | F                              = 2 , num_top_rules = 2 , num_weak_rules = 0 , alphabet_size = 5 , total_length
| | | F                              = 11} , self = 72 , parent = Nothing , duration = 0.141422802000 , status
| | | F                              = Fail , start = 2025-09-04 07:31:50.687259012 UTC , finish = 2025-09-04
| | | F                              07:31:50.828681814 UTC , thread_cap_info = ("ThreadId 98", 3, False)}
| | | F                              
| | | | F                            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                            = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
| | | | F                            = 2 , num_top_rules = 2 , num_weak_rules = 0 , alphabet_size = 5 , total_length
| | | | F                            = 11} , self = 93 , parent = Nothing , duration = 2.096852374000 , status
| | | | F                            = Fail , start = 2025-09-04 07:31:50.696236235 UTC , finish = 2025-09-04
| | | | F                            07:31:52.793088609 UTC , thread_cap_info = ("ThreadId 99", 3, False)}
| | | | F                            
| | | | | F                          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                          = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
| | | | | F                          = 2 , num_top_rules = 2 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | | | F                          = 7} , self = 90 , parent = Nothing , duration = 0.482862468000 , status
| | | | | F                          = Fail , start = 2025-09-04 07:31:50.7018325 UTC , finish = 2025-09-04
| | | | | F                          07:31:51.184694968 UTC , thread_cap_info = ("ThreadId 116", 0, False)}
| | | | | F                          
| | | | | | F                        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F                        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F                        = 2 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 0 , alphabet_size
| | | | | | F                        = 3 , total_length = 6} , self = 110 , parent = Nothing , duration = 3.860853845000
| | | | | | F                        , status = Fail , start = 2025-09-04 07:31:50.707956108 UTC , finish =
| | | | | | F                        2025-09-04 07:31:54.568809953 UTC , thread_cap_info = ("ThreadId 120",
| | | | | | F                        0, False)}
| | | | | | F                        
| | | | | | | F                      Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | F                      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | F                      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | F                      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F                      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F                      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 2
| | | | | | | F                      , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 0 , alphabet_size
| | | | | | | F                      = 3 , total_length = 6} , self = 109 , parent = Nothing , duration = 3.759242334000
| | | | | | | F                      , status = Fail , start = 2025-09-04 07:31:50.727094097 UTC , finish =
| | | | | | | F                      2025-09-04 07:31:54.486336431 UTC , thread_cap_info = ("ThreadId 121",
| | | | | | | F                      0, False)}
| | | | | | | F                      
| | | | | | | | F                    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | F                    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | F                    = 2 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 0 , alphabet_size
| | | | | | | | F                    = 3 , total_length = 7} , self = 111 , parent = Nothing , duration = 3.842492385000
| | | | | | | | F                    , status = Fail , start = 2025-09-04 07:31:50.743987172 UTC , finish =
| | | | | | | | F                    2025-09-04 07:31:54.586479557 UTC , thread_cap_info = ("ThreadId 122",
| | | | | | | | F                    0, False)}
| | | | | | | | F                    
| | | | | | | | | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
| | | | | | | | | F                  = 2 , num_top_rules = 2 , num_weak_rules = 0 , alphabet_size = 5 , total_length
| | | | | | | | | F                  = 10} , self = 95 , parent = Nothing , duration = 2.169635586000 , status
| | | | | | | | | F                  = Fail , start = 2025-09-04 07:31:50.802270016 UTC , finish = 2025-09-04
| | | | | | | | | F                  07:31:52.971905602 UTC , thread_cap_info = ("ThreadId 132", 3, False)}
| | | | | | | | | F                  
| | | | | | | | | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
| | | | | | | | | | F                = 2 , num_top_rules = 2 , num_weak_rules = 0 , alphabet_size = 5 , total_length
| | | | | | | | | | F                = 10} , self = 94 , parent = Nothing , duration = 2.116037045000 , status
| | | | | | | | | | F                = Fail , start = 2025-09-04 07:31:50.815382783 UTC , finish = 2025-09-04
| | | | | | | | | | F                07:31:52.931419828 UTC , thread_cap_info = ("ThreadId 133", 3, False)}
| | | | | | | | | | F                
| E | | | | | | | | |                
|   E | | | | | | | |                
E     | | | | | | | |                
      F | | | | | | |                
F       | | | | | | |                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F       | | | | | | |                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F       | | | | | | |                = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
F       | | | | | | |                = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 4 , total_length
F       | | | | | | |                = 15} , self = 96 , parent = Nothing , duration = 2.257057342000 , status
F       | | | | | | |                = Fail , start = 2025-09-04 07:31:50.829214304 UTC , finish = 2025-09-04
F       | | | | | | |                07:31:53.086271646 UTC , thread_cap_info = ("ThreadId 144", 2, False)}
F       | | | | | | |                
| F     | | | | | | |                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F     | | | | | | |                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F     | | | | | | |                = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| F     | | | | | | |                = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| F     | | | | | | |                = 15} , self = 97 , parent = Nothing , duration = 2.935163589000 , status
| F     | | | | | | |                = Fail , start = 2025-09-04 07:31:50.834877337 UTC , finish = 2025-09-04
| F     | | | | | | |                07:31:53.770040926 UTC , thread_cap_info = ("ThreadId 145", 2, False)}
| F     | | | | | | |                
| | F   | | | | | | |                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F   | | | | | | |                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F   | | | | | | |                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F   | | | | | | |                = 2 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 0 , alphabet_size
| | F   | | | | | | |                = 5 , total_length = 11} , self = 112 , parent = Nothing , duration = 3.872712831000
| | F   | | | | | | |                , status = Fail , start = 2025-09-04 07:31:50.834975906 UTC , finish =
| | F   | | | | | | |                2025-09-04 07:31:54.707688737 UTC , thread_cap_info = ("ThreadId 148",
| | F   | | | | | | |                3, False)}
| | F   | | | | | | |                
| | | E | | | | | | |                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | E | | | | | | |                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E | | | | | | |                = False\n , verbose = False}" , input_size = Size { num_rules = 28 , num_strict_rules
| | | E | | | | | | |                = 8 , num_top_rules = 0 , num_weak_rules = 20 , alphabet_size = 12 , total_length
| | | E | | | | | | |                = 164} , self = 98 , parent = Nothing , duration = 3.059422605000 , status
| | | E | | | | | | |                = Except "<<timeout>>" , start = 2025-09-04 07:31:50.846903946 UTC , finish
| | | E | | | | | | |                = 2025-09-04 07:31:53.906326551 UTC , thread_cap_info = ("ThreadId 155",
| | | E | | | | | | |                3, False)}
| | | E | | | | | | |                
| | | | | | | | | | | E              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | E              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | E              = False\n , verbose = False}" , input_size = Size { num_rules = 28 , num_strict_rules
| | | | | | | | | | | E              = 8 , num_top_rules = 0 , num_weak_rules = 20 , alphabet_size = 12 , total_length
| | | | | | | | | | | E              = 164} , self = 99 , parent = Nothing , duration = 3.051361720000 , status
| | | | | | | | | | | E              = Except "<<timeout>>" , start = 2025-09-04 07:31:50.873204911 UTC , finish
| | | | | | | | | | | E              = 2025-09-04 07:31:53.924566631 UTC , thread_cap_info = ("ThreadId 156",
| | | | | | | | | | | E              2, False)}
| | | | | | | | | | | E              
| | | | | | | | | | | | S            Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | | | | | | | | | | S            , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | | | | | | | | | | S            , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | | | | | | | | | | S            = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | | | | | | | | | | S            , cpf = True}" , input_size = Size { num_rules = 28 , num_strict_rules
| | | | | | | | | | | | S            = 8 , num_top_rules = 0 , num_weak_rules = 20 , alphabet_size = 12 , total_length
| | | | | | | | | | | | S            = 164} , self = 92 , parent = Nothing , duration = 0.787016949000 , status
| | | | | | | | | | | | S            = Success , start = 2025-09-04 07:31:50.887899391 UTC , finish = 2025-09-04
| | | | | | | | | | | | S            07:31:51.67491634 UTC , thread_cap_info = ("ThreadId 157", 2, False)}
| | | | | | | | | | | | S            
| | | | | | | | | | | | | E          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | E          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | E          = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | | | | | | | | | E          = 6 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | | | | | | | | | E          = 105} , self = 104 , parent = Nothing , duration = 3.157991323000 , status
| | | | | | | | | | | | | E          = Except "AsyncCancelled" , start = 2025-09-04 07:31:50.896239784 UTC ,
| | | | | | | | | | | | | E          finish = 2025-09-04 07:31:54.054231107 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | E          168", 3, False)}
| | | | | | | | | | | | | E          
| | | | | | | | | | | | | | S        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | S        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | S        = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | | | | | | | | | | S        = 6 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | | | | | | | | | | S        = 105} , self = 101 , parent = Nothing , duration = 3.028575358000 , status
| | | | | | | | | | | | | | S        = Success , start = 2025-09-04 07:31:50.908287172 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | S        07:31:53.93686253 UTC , thread_cap_info = ("ThreadId 170", 3, False)}
| | | | | | | | | | | | | | S        
| | | | | | | | | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | | | | | | | | | | | F      = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 3 , total_length
| | | | | | | | | | | | | | | F      = 11} , self = 100 , parent = Nothing , duration = 2.900794493000 , status
| | | | | | | | | | | | | | | F      = Fail , start = 2025-09-04 07:31:51.029525866 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | F      07:31:53.930320359 UTC , thread_cap_info = ("ThreadId 177", 3, False)}
| | | | | | | | | | | | | | | F      
| | | | | | | | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | | | | | | | | | | | | F    = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 3 , total_length
| | | | | | | | | | | | | | | | F    = 11} , self = 102 , parent = Nothing , duration = 2.890424555000 , status
| | | | | | | | | | | | | | | | F    = Fail , start = 2025-09-04 07:31:51.046483199 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | | F    07:31:53.936907754 UTC , thread_cap_info = ("ThreadId 179", 3, False)}
| | | | | | | | | | | | | | | | F    
| | | | | F | | | | | | | | | | |    
| | | | | S | | | | | | | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | S | | | | | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | S | | | | | | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | S | | | | | | | | | | |    = 6 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | S | | | | | | | | | | |    = 105} , self = 107 , parent = Nothing , duration = 3.043614964000 , status
| | | | | S | | | | | | | | | | |    = Success , start = 2025-09-04 07:31:51.204035562 UTC , finish = 2025-09-04
| | | | | S | | | | | | | | | | |    07:31:54.247650526 UTC , thread_cap_info = ("ThreadId 184", 3, False)}
| | | | | S | | | | | | | | | | |    
| | | | | | | | | | | | | | | | | S  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | | S  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | | S  = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | | | | | | | | | | | | | S  = 6 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 9 , total_length
| | | | | | | | | | | | | | | | | S  = 105} , self = 105 , parent = Nothing , duration = 2.965392643000 , status
| | | | | | | | | | | | | | | | | S  = Success , start = 2025-09-04 07:31:51.204038634 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | | | S  07:31:54.169431277 UTC , thread_cap_info = ("ThreadId 186", 3, False)}
| | | | | | | | | | | | | | | | | S  
| | | | | | | | | | | | S | | | | |  
| | | | F | | | | | | |   | | | | |  
| | | |   | | | | | F |   | | | | |  
| | | |   | | | | F   |   | | | | |  
F | | |   | | | |     |   | | | | |  
  F | |   | | | |     |   | | | | |  
    | E   | | | |     |   | | | | |  
    |     | | | |     E   | | | | |  
    |     | | | |         | | F | |  
    |     | | | |         | S   | |  
    |     | | | |         |     F |  
E   |     | | | |         |       |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E   |     | | | |         |       |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E   |     | | | |         |       |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E   |     | | | |         |       |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E   |     | | | |         |       |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E   |     | | | |         |       |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
E   |     | | | |         |       |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
E   |     | | | |         |       |  = 3 , total_length = 11} , self = 115 , parent = Nothing , duration = 1.080019448000
E   |     | | | |         |       |  , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:53.94892267
E   |     | | | |         |       |  UTC , finish = 2025-09-04 07:31:55.028942118 UTC , thread_cap_info = ("ThreadId
E   |     | | | |         |       |  212", 3, False)}
E   |     | | | |         |       |  
| S |     | | | |         |       |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| S |     | | | |         |       |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S |     | | | |         |       |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| S |     | | | |         |       |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S |     | | | |         |       |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S |     | | | |         |       |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| S |     | | | |         |       |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| S |     | | | |         |       |  = 3 , total_length = 11} , self = 113 , parent = Nothing , duration = 0.948389280000
| S |     | | | |         |       |  , status = Success , start = 2025-09-04 07:31:54.015013654 UTC , finish
| S |     | | | |         |       |  = 2025-09-04 07:31:54.963402934 UTC , thread_cap_info = ("ThreadId 214",
| S |     | | | |         |       |  3, False)}
| S |     | | | |         |       |  
| | |     | | | |         E       |  
| | |     | | | |                 S  
| | |     S | | |                    
| | |       | F |                    
| | |       F   |                    
| | |           F                    
| | F                                
| S                                  
E                                    
