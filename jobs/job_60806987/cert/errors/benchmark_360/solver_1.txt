[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 234 length 923
CNF 234 vars 923 clauses
last 238 length 999
last 412 length 1691
CNF 238 vars 999 clauses
last 412 length 1691
last 238 length 999
last 1002 length 4231
last 562 length 2265
last 562 length 2265
CNF 412 vars 1691 clauses
CNF 412 vars 1691 clauses
last 1002 length 4231
CNF 238 vars 999 clauses
CNF 562 vars 2265 clauses
CNF 562 vars 2265 clauses
CNF 1002 vars 4231 clauses
CNF 1002 vars 4231 clauses
last 468 length 1895
CNF 468 vars 1895 clauses
last 230 length 909
CNF 230 vars 909 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3930, clauses: 14471
last 3930 length 14471
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1544, clauses: 5667
last 1544 length 5667
CNF 3930 vars 14471 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6638, clauses: 26839
last 6638 length 26839
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3930, clauses: 14471
last 3930 length 14471
CNF 1544 vars 5667 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3930, clauses: 14471, status: Unsatisfied, time: 0.095987241s
last 1709 length 6837
CNF 6638 vars 26839 clauses
last 2325 length 9489
CNF 3930 vars 14471 clauses
last 1709 length 6837
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6638, clauses: 26839
last 2325 length 9489
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1544, clauses: 5667, status: Unsatisfied, time: 0.756577051s
last 4298 length 17143
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8787, clauses: 35972
CNF 1709 vars 6837 clauses
last 7418 length 30135
CNF 2325 vars 9489 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6638, clauses: 26839, status: Unsatisfied, time: 1.339855295s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3930, clauses: 14471, status: Unsatisfied, time: 1.329135115s
CNF 1709 vars 6837 clauses
last 6638 length 26839
CNF 2325 vars 9489 clauses
last 8787 length 35972
CNF 4298 vars 17143 clauses
CNF 7418 vars 30135 clauses
CNF 6638 vars 26839 clauses
CNF 8787 vars 35972 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6638, clauses: 26839, status: Unsatisfied, time: 1.646258235s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8787, clauses: 35972, status: Satisfied, time: 0.842488312s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 3 letters       mirror
SRS with 1 strict rules and 2 weak rules on 3 letters       context
SRS with 1 strict rules and 6 weak rules on 3 letters       mirror
SRS with 1 strict rules and 6 weak rules on 3 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, c] -> [c, c] {- Input 0 -}
  [] ->= [a, b] {- Input 1 -}
  [a, b] ->= [] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [c, a] -> [c, c] {- Mirror (Input 0) -}
  [] ->= [b, a] {- Mirror (Input 1) -}
  [b, a] ->= [] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [c, a] -> [c, c] {- Mirror (Input 0) -}
  [a] ->= [a, b, a] {- Mirror (Input 1) -}
  [b] ->= [b, b, a] {- Mirror (Input 1) -}
  [c] ->= [c, b, a] {- Mirror (Input 1) -}
  [a, b, a] ->= [a] {- Mirror (Input 2) -}
  [b, b, a] ->= [b] {- Mirror (Input 2) -}
  [c, b, a] ->= [c] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, c] -> [c, c] {- Input 0 -}
  [a] ->= [a, b, a] {- Input 1 -}
  [b] ->= [a, b, b] {- Input 1 -}
  [c] ->= [a, b, c] {- Input 1 -}
  [a, b, a] ->= [a] {- Input 2 -}
  [a, b, b] ->= [b] {- Input 2 -}
  [a, b, c] ->= [c] {- Input 2 -}
reason
  ( a
  , St  / 0A 1A  - \
        | -  1A  - |
        \ -  -1A - / )
  ( b
  , St  / 0A - 2A  \
        | -  - 1A  |
        \ -  - -1A / )
  ( c
  , St  / 0A  0A  1A  \
        | 0A  0A  1A  |
        \ -2A -2A -1A / )
   property Termination
has value Just True
for SRS
  [a] ->= [a, b, a] {- Input 1 -}
  [b] ->= [a, b, b] {- Input 1 -}
  [c] ->= [a, b, c] {- Input 1 -}
  [a, b, a] ->= [a] {- Input 2 -}
  [a, b, b] ->= [b] {- Input 2 -}
  [a, b, c] ->= [c] {- Input 2 -}
reason
  no strict rules

**************************************************
skeleton: \Mirror(1/2,3)\Context\Mirror(1/6,3)\Matrix{\ArcticBZ}{3}(0/6,3)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 3.063578784000
  min duration 0.005176844000
  total durat. 8.504103922000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 126}
    , self = 96
    , parent = Nothing
    , duration = 2.436666786000
    , status = Fail
    , start = 2025-09-04 08:26:43.867173658 UTC
    , finish = 2025-09-04 08:26:46.303840444 UTC
    , thread_cap_info = ("ThreadId 176", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 126}
    , self = 100
    , parent = Nothing
    , duration = 2.697801701000
    , status = Fail
    , start = 2025-09-04 08:26:43.822795867 UTC
    , finish = 2025-09-04 08:26:46.520597568 UTC
    , thread_cap_info = ("ThreadId 165", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 63
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 54
      , alphabet_size = 9
      , total_length = 378}
    , self = 102
    , parent = Nothing
    , duration = 3.063578784000
    , status = Fail
    , start = 2025-09-04 08:26:43.822783605 UTC
    , finish = 2025-09-04 08:26:46.886362389 UTC
    , thread_cap_info = ("ThreadId 168", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 2.907608621000
  min duration 0.018000885000
  total durat. 8.104043336000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 126}
    , self = 95
    , parent = Nothing
    , duration = 2.368371313000
    , status = Fail
    , start = 2025-09-04 08:26:43.874585755 UTC
    , finish = 2025-09-04 08:26:46.242957068 UTC
    , thread_cap_info = ("ThreadId 178", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 126}
    , self = 99
    , parent = Nothing
    , duration = 2.587929865000
    , status = Fail
    , start = 2025-09-04 08:26:43.83469472 UTC
    , finish = 2025-09-04 08:26:46.422624585 UTC
    , thread_cap_info = ("ThreadId 166", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 63
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 54
      , alphabet_size = 9
      , total_length = 378}
    , self = 101
    , parent = Nothing
    , duration = 2.907608621000
    , status = Fail
    , start = 2025-09-04 08:26:43.834690457 UTC
    , finish = 2025-09-04 08:26:46.742299078 UTC
    , thread_cap_info = ("ThreadId 170", 0, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.346194938000
  min duration 3.346194938000
  total durat. 3.346194938000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 28}
    , self = 104
    , parent = Nothing
    , duration = 3.346194938000
    , status = Success
    , start = 2025-09-04 08:26:43.680613911 UTC
    , finish = 2025-09-04 08:26:47.026808849 UTC
    , thread_cap_info = ("ThreadId 152", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.518630101000
  min duration 1.518630101000
  total durat. 1.518630101000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 28}
    , self = 106
    , parent = Nothing
    , duration = 1.518630101000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:26:45.535615182 UTC
    , finish = 2025-09-04 08:26:47.054245283 UTC
    , thread_cap_info = ("ThreadId 191", 0, False)}
Fail : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.793875956000
  min duration 1.793875956000
  total durat. 1.793875956000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 28}
    , self = 92
    , parent = Nothing
    , duration = 1.793875956000
    , status = Fail
    , start = 2025-09-04 08:26:43.72212335 UTC
    , finish = 2025-09-04 08:26:45.515999306 UTC
    , thread_cap_info = ("ThreadId 157", 0, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 3.111853566000
  min duration 2.677691810000
  total durat. 5.789545376000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 76}
    , self = 97
    , parent = Nothing
    , duration = 2.677691810000
    , status = Fail
    , start = 2025-09-04 08:26:43.676548295 UTC
    , finish = 2025-09-04 08:26:46.354240105 UTC
    , thread_cap_info = ("ThreadId 147", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 76}
    , self = 103
    , parent = Nothing
    , duration = 3.111853566000
    , status = Fail
    , start = 2025-09-04 08:26:43.822815635 UTC
    , finish = 2025-09-04 08:26:46.934669201 UTC
    , thread_cap_info = ("ThreadId 167", 2, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 2.657623993000
  min duration 0.977480744000
  total durat. 3.635104737000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 76}
    , self = 98
    , parent = Nothing
    , duration = 2.657623993000
    , status = Fail
    , start = 2025-09-04 08:26:43.7218942 UTC
    , finish = 2025-09-04 08:26:46.379518193 UTC
    , thread_cap_info = ("ThreadId 154", 2, False)}
Fail : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 24
  max duration 1.167825881000
  min duration 0.000006668000
  total durat. 1.577214121000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 2187
      , num_strict_rules = 729
      , num_top_rules = 0
      , num_weak_rules = 1458
      , alphabet_size = 81
      , total_length = 14580}
    , self = 90
    , parent = Nothing
    , duration = 1.167825881000
    , status = Fail
    , start = 2025-09-04 08:26:44.074231714 UTC
    , finish = 2025-09-04 08:26:45.242057595 UTC
    , thread_cap_info = ("ThreadId 183", 1, False)}
**************************************************
F                          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                          , closure = Backward\n , start_strict_only = True\n , max_closure_length
F                          = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                          Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                          8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                          = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                          ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                          1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                          = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 1 ,
F                          num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 3 , total_length
F                          = 8} , self = 86 , parent = Nothing , duration = 0.270057380000 , status
F                          = Fail , start = 2025-09-04 08:26:43.597058481 UTC , finish = 2025-09-04
F                          08:26:43.867115861 UTC , thread_cap_info = ("ThreadId 106", 1, False)}
F                          
| F                        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| F                        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| F                        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| F                        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F                        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F                        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 22
| F                        , num_strict_rules = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size
| F                        = 8 , total_length = 76} , self = 97 , parent = Nothing , duration = 2.677691810000
| F                        , status = Fail , start = 2025-09-04 08:26:43.676548295 UTC , finish =
| F                        2025-09-04 08:26:46.354240105 UTC , thread_cap_info = ("ThreadId 147",
| F                        1, False)}
| F                        
| | F                      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F                      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F                      = 22 , num_strict_rules = 14 , num_top_rules = 14 , num_weak_rules = 8
| | F                      , alphabet_size = 8 , total_length = 76} , self = 89 , parent = Nothing
| | F                      , duration = 0.977480744000 , status = Fail , start = 2025-09-04 08:26:43.679179397
| | F                      UTC , finish = 2025-09-04 08:26:44.656660141 UTC , thread_cap_info = ("ThreadId
| | F                      143", 2, False)}
| | F                      
| | | S                    Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | S                    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S                    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S                    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S                    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S                    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | S                    , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | S                    = 3 , total_length = 28} , self = 104 , parent = Nothing , duration = 3.346194938000
| | | S                    , status = Success , start = 2025-09-04 08:26:43.680613911 UTC , finish
| | | S                    = 2025-09-04 08:26:47.026808849 UTC , thread_cap_info = ("ThreadId 152",
| | | S                    0, False)}
| | | S                    
| | | | F                  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | F                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | F                  = 22 , num_strict_rules = 14 , num_top_rules = 14 , num_weak_rules = 8
| | | | F                  , alphabet_size = 8 , total_length = 76} , self = 98 , parent = Nothing
| | | | F                  , duration = 2.657623993000 , status = Fail , start = 2025-09-04 08:26:43.7218942
| | | | F                  UTC , finish = 2025-09-04 08:26:46.379518193 UTC , thread_cap_info = ("ThreadId
| | | | F                  154", 2, False)}
| | | | F                  
| | | | | F                Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | F                = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | F                = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | F                , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F                \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F                , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | F                , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | | | F                = 3 , total_length = 28} , self = 92 , parent = Nothing , duration = 1.793875956000
| | | | | F                , status = Fail , start = 2025-09-04 08:26:43.72212335 UTC , finish = 2025-09-04
| | | | | F                08:26:45.515999306 UTC , thread_cap_info = ("ThreadId 157", 0, False)}
| | | | | F                
| | | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 63 , num_strict_rules
| | | | | | F              = 9 , num_top_rules = 0 , num_weak_rules = 54 , alphabet_size = 9 , total_length
| | | | | | F              = 378} , self = 102 , parent = Nothing , duration = 3.063578784000 , status
| | | | | | F              = Fail , start = 2025-09-04 08:26:43.822783605 UTC , finish = 2025-09-04
| | | | | | F              08:26:46.886362389 UTC , thread_cap_info = ("ThreadId 168", 0, False)}
| | | | | | F              
| | | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | F            = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | | F            = 126} , self = 100 , parent = Nothing , duration = 2.697801701000 , status
| | | | | | | F            = Fail , start = 2025-09-04 08:26:43.822795867 UTC , finish = 2025-09-04
| | | | | | | F            08:26:46.520597568 UTC , thread_cap_info = ("ThreadId 165", 1, False)}
| | | | | | | F            
| | | | | | | | F          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | F          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | F          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | F          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | F          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | F          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 22
| | | | | | | | F          , num_strict_rules = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size
| | | | | | | | F          = 8 , total_length = 76} , self = 103 , parent = Nothing , duration = 3.111853566000
| | | | | | | | F          , status = Fail , start = 2025-09-04 08:26:43.822815635 UTC , finish =
| | | | | | | | F          2025-09-04 08:26:46.934669201 UTC , thread_cap_info = ("ThreadId 167",
| | | | | | | | F          2, False)}
| | | | | | | | F          
| | | | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 63 , num_strict_rules
| | | | | | | | | F        = 9 , num_top_rules = 0 , num_weak_rules = 54 , alphabet_size = 9 , total_length
| | | | | | | | | F        = 378} , self = 101 , parent = Nothing , duration = 2.907608621000 , status
| | | | | | | | | F        = Fail , start = 2025-09-04 08:26:43.834690457 UTC , finish = 2025-09-04
| | | | | | | | | F        08:26:46.742299078 UTC , thread_cap_info = ("ThreadId 170", 0, False)}
| | | | | | | | | F        
| | | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | | | F      = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | | | | | F      = 126} , self = 99 , parent = Nothing , duration = 2.587929865000 , status
| | | | | | | | | | F      = Fail , start = 2025-09-04 08:26:43.83469472 UTC , finish = 2025-09-04
| | | | | | | | | | F      08:26:46.422624585 UTC , thread_cap_info = ("ThreadId 166", 1, False)}
| | | | | | | | | | F      
F | | | | | | | | | |      
F | | | | | | | | | |      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | | | | | |      = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
F | | | | | | | | | |      = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
F | | | | | | | | | |      = 126} , self = 96 , parent = Nothing , duration = 2.436666786000 , status
F | | | | | | | | | |      = Fail , start = 2025-09-04 08:26:43.867173658 UTC , finish = 2025-09-04
F | | | | | | | | | |      08:26:46.303840444 UTC , thread_cap_info = ("ThreadId 176", 3, False)}
F | | | | | | | | | |      
| | | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | | | | F    = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | | | | | | F    = 126} , self = 95 , parent = Nothing , duration = 2.368371313000 , status
| | | | | | | | | | | F    = Fail , start = 2025-09-04 08:26:43.874585755 UTC , finish = 2025-09-04
| | | | | | | | | | | F    08:26:46.242957068 UTC , thread_cap_info = ("ThreadId 178", 3, False)}
| | | | | | | | | | | F    
| | | | | | | | | | | | F  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | | | | | | | F  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | | | | | | | F  = Size { num_rules = 2187 , num_strict_rules = 729 , num_top_rules = 0
| | | | | | | | | | | | F  , num_weak_rules = 1458 , alphabet_size = 81 , total_length = 14580} ,
| | | | | | | | | | | | F  self = 90 , parent = Nothing , duration = 1.167825881000 , status = Fail
| | | | | | | | | | | | F  , start = 2025-09-04 08:26:44.074231714 UTC , finish = 2025-09-04 08:26:45.242057595
| | | | | | | | | | | | F  UTC , thread_cap_info = ("ThreadId 183", 1, False)}
| | | | | | | | | | | | F  
| | F | | | | | | | | | |  
| |   | | | | | | | | | F  
| | F | | | | | | | | |    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | F | | | | | | | | |    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | F | | | | | | | | |    = Size { num_rules = 2187 , num_strict_rules = 729 , num_top_rules = 0
| | F | | | | | | | | |    , num_weak_rules = 1458 , alphabet_size = 81 , total_length = 14580} ,
| | F | | | | | | | | |    self = 93 , parent = Nothing , duration = 0.313098384000 , status = Fail
| | F | | | | | | | | |    , start = 2025-09-04 08:26:45.24253457 UTC , finish = 2025-09-04 08:26:45.555632954
| | F | | | | | | | | |    UTC , thread_cap_info = ("ThreadId 189", 1, False)}
| | F | | | | | | | | |    
| | | | | F | | | | | |    
| | | | | E | | | | | |    Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | E | | | | | |    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | E | | | | | |    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | E | | | | | |    , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | E | | | | | |    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | E | | | | | |    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | E | | | | | |    , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | | | E | | | | | |    = 3 , total_length = 28} , self = 106 , parent = Nothing , duration = 1.518630101000
| | | | | E | | | | | |    , status = Except "AsyncCancelled" , start = 2025-09-04 08:26:45.535615182
| | | | | E | | | | | |    UTC , finish = 2025-09-04 08:26:47.054245283 UTC , thread_cap_info = ("ThreadId
| | | | | E | | | | | |    191", 0, False)}
| | | | | E | | | | | |    
| | F | | | | | | | | |    
| |   | | | | | | | | F    
F |   | | | | | | | |      
  F   | | | | | | | |      
      | F | | | | | |      
      |   | | | | | F      
      |   | | F | |        
      |   | |   | F        
      |   | F   |          
      |   |     F          
      S   |                
          E                
