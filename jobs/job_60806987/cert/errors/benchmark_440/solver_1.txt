[Info] pool sizes (success) 4 seen 3 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 4 seen 3 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 910 length 3575
last 910 length 3575
CNF 910 vars 3575 clauses
last 1918 length 7655
last 1918 length 7655
CNF 910 vars 3575 clauses
last 274 length 1051
CNF 1918 vars 7655 clauses
CNF 1918 vars 7655 clauses
last 154 length 563
last 625 length 2428
last 538 length 2115
CNF 274 vars 1051 clauses
CNF 154 vars 563 clauses
CNF 625 vars 2428 clauses
CNF 538 vars 2115 clauses
last 14469 length 62279
last 13423 length 61097
CNF 14469 vars 62279 clauses
CNF 13423 vars 61097 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2966, clauses: 11117
last 2966 length 11117
CNF 2966 vars 11117 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2966, clauses: 11117, status: Satisfied, time: 0.208867695s
last 349 length 1365
last 307 length 1210
CNF 349 vars 1365 clauses
CNF 307 vars 1210 clauses
**************************************************
summary
**************************************************
SRS with 4 strict rules and 2 weak rules on 4 letters       mirror
SRS with 4 strict rules and 2 weak rules on 4 letters       context
SRS with 10 strict rules and 2 weak rules on 4 letters       mirror
SRS with 10 strict rules and 2 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 9 strict rules and 2 weak rules on 4 letters       weights
SRS with 5 strict rules and 2 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = KBO, shape = Full, bits = 1, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 2, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 2 weak rules on 4 letters       weights
SRS with 0 strict rules and 2 weak rules on 2 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a] -> [] {- Input 0 -}
  [b] -> [] {- Input 1 -}
  [a, c] -> [b, b, c, a] {- Input 2 -}
  [d, b, b, b] -> [a, d, a] {- Input 3 -}
  [a, b] ->= [b, a] {- Input 4 -}
  [b, a] ->= [a, b] {- Input 5 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a] -> [] {- Mirror (Input 0) -}
  [b] -> [] {- Mirror (Input 1) -}
  [c, a] -> [a, c, b, b] {- Mirror (Input 2) -}
  [b, b, b, d] -> [a, d, a] {- Mirror (Input 3) -}
  [b, a] ->= [a, b] {- Mirror (Input 4) -}
  [a, b] ->= [b, a] {- Mirror (Input 5) -}
reason
  context
   property Termination
has value Just True
for SRS
  [d, a] -> [d] {- Mirror (Input 0) -}
  [a, a] -> [a] {- Mirror (Input 0) -}
  [b, a] -> [b] {- Mirror (Input 0) -}
  [c, a] -> [c] {- Mirror (Input 0) -}
  [d, b] -> [d] {- Mirror (Input 1) -}
  [a, b] -> [a] {- Mirror (Input 1) -}
  [b, b] -> [b] {- Mirror (Input 1) -}
  [c, b] -> [c] {- Mirror (Input 1) -}
  [c, a] -> [a, c, b, b] {- Mirror (Input 2) -}
  [b, b, b, d] -> [a, d, a] {- Mirror (Input 3) -}
  [b, a] ->= [a, b] {- Mirror (Input 4) -}
  [a, b] ->= [b, a] {- Mirror (Input 5) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, d] -> [d] {- Input 0 -}
  [a, a] -> [a] {- Input 0 -}
  [a, b] -> [b] {- Input 0 -}
  [a, c] -> [c] {- Input 0 -}
  [b, d] -> [d] {- Input 1 -}
  [b, a] -> [a] {- Input 1 -}
  [b, b] -> [b] {- Input 1 -}
  [b, c] -> [c] {- Input 1 -}
  [a, c] -> [b, b, c, a] {- Input 2 -}
  [d, b, b, b] -> [a, d, a] {- Input 3 -}
  [a, b] ->= [b, a] {- Input 4 -}
  [b, a] ->= [a, b] {- Input 5 -}
reason
  ( d
  , St (Corner  / 1 1 0 \
                | 0 2 1 |
                \ 0 0 1 /) )
  ( a
  , St (Corner  / 1 0 0 \
                | 0 1 2 |
                \ 0 0 1 /) )
  ( b
  , St (Corner  / 1 0 0 \
                | 0 1 1 |
                \ 0 0 1 /) )
  ( c
  , St (Corner  / 1 0 3 \
                | 0 0 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [a, d] -> [d] {- Input 0 -}
  [a, a] -> [a] {- Input 0 -}
  [a, b] -> [b] {- Input 0 -}
  [a, c] -> [c] {- Input 0 -}
  [b, d] -> [d] {- Input 1 -}
  [b, a] -> [a] {- Input 1 -}
  [b, b] -> [b] {- Input 1 -}
  [b, c] -> [c] {- Input 1 -}
  [a, c] -> [b, b, c, a] {- Input 2 -}
  [a, b] ->= [b, a] {- Input 4 -}
  [b, a] ->= [a, b] {- Input 5 -}
reason
  (d, 0/1)
  (a, 1/1)
  (b, 0/1)
  (c, 0/1)
   property Termination
has value Just True
for SRS
  [b, d] -> [d] {- Input 1 -}
  [b, a] -> [a] {- Input 1 -}
  [b, b] -> [b] {- Input 1 -}
  [b, c] -> [c] {- Input 1 -}
  [a, c] -> [b, b, c, a] {- Input 2 -}
  [a, b] ->= [b, a] {- Input 4 -}
  [b, a] ->= [a, b] {- Input 5 -}
reason
  ( d
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( a
  , Ek 2  / 2 0 \
          \ 0 1 / )
  ( b
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( c
  , Ek 2  / 1 1 \
          \ 0 1 / )
   property Termination
has value Just True
for SRS
  [b, d] -> [d] {- Input 1 -}
  [b, a] -> [a] {- Input 1 -}
  [b, b] -> [b] {- Input 1 -}
  [b, c] -> [c] {- Input 1 -}
  [a, b] ->= [b, a] {- Input 4 -}
  [b, a] ->= [a, b] {- Input 5 -}
reason
  (d, 0/1)
  (a, 0/1)
  (b, 1/1)
  (c, 0/1)
   property Termination
has value Just True
for SRS
  [a, b] ->= [b, a] {- Input 4 -}
  [b, a] ->= [a, b] {- Input 5 -}
reason
  no strict rules

**************************************************
skeleton: \Mirror(4/2,4)\Context\Mirror(10/2,4)\Matrix{\Natural}{3}(9/2,4)\Weight(5/2,4)\Matrix{\Natural}{2}(4/2,4)\Weight(0/2,2)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 2.476340330000
  min duration 0.214482020000
  total durat. 5.806733739000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 10
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 45}
    , self = 75
    , parent = Nothing
    , duration = 1.768711619000
    , status = Fail
    , start = 2025-09-04 08:29:53.895222484 UTC
    , finish = 2025-09-04 08:29:55.663934103 UTC
    , thread_cap_info = ("ThreadId 125", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 94
      , num_strict_rules = 62
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 15
      , total_length = 554}
    , self = 77
    , parent = Nothing
    , duration = 2.476340330000
    , status = Fail
    , start = 2025-09-04 08:29:53.906082515 UTC
    , finish = 2025-09-04 08:29:56.382422845 UTC
    , thread_cap_info = ("ThreadId 133", 2, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.281536864000
  min duration 3.281536864000
  total durat. 3.281536864000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 94
      , num_strict_rules = 62
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 15
      , total_length = 554}
    , self = 80
    , parent = Nothing
    , duration = 3.281536864000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 08:29:53.95067788 UTC
    , finish = 2025-09-04 08:29:57.232214744 UTC
    , thread_cap_info = ("ThreadId 151", 0, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.318503763000
  min duration 3.318503763000
  total durat. 3.318503763000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 184
      , num_strict_rules = 152
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 16
      , total_length = 1064}
    , self = 81
    , parent = Nothing
    , duration = 3.318503763000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:29:53.934810397 UTC
    , finish = 2025-09-04 08:29:57.25331416 UTC
    , thread_cap_info = ("ThreadId 142", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 2.488486487000
  min duration 0.195853350000
  total durat. 5.730934062000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 16}
    , self = 74
    , parent = Nothing
    , duration = 1.078167312000
    , status = Fail
    , start = 2025-09-04 08:29:53.888555603 UTC
    , finish = 2025-09-04 08:29:54.966722915 UTC
    , thread_cap_info = ("ThreadId 118", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 10
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 45}
    , self = 76
    , parent = Nothing
    , duration = 1.762853328000
    , status = Fail
    , start = 2025-09-04 08:29:53.90108518 UTC
    , finish = 2025-09-04 08:29:55.663938508 UTC
    , thread_cap_info = ("ThreadId 126", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 94
      , num_strict_rules = 62
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 15
      , total_length = 554}
    , self = 78
    , parent = Nothing
    , duration = 2.488486487000
    , status = Fail
    , start = 2025-09-04 08:29:53.931646304 UTC
    , finish = 2025-09-04 08:29:56.420132791 UTC
    , thread_cap_info = ("ThreadId 135", 2, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.163730338000
  min duration 3.163730338000
  total durat. 3.163730338000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 94
      , num_strict_rules = 62
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 15
      , total_length = 554}
    , self = 79
    , parent = Nothing
    , duration = 3.163730338000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 08:29:54.042577619 UTC
    , finish = 2025-09-04 08:29:57.206307957 UTC
    , thread_cap_info = ("ThreadId 153", 0, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.341042866000
  min duration 3.341042866000
  total durat. 3.341042866000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 184
      , num_strict_rules = 152
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 16
      , total_length = 1064}
    , self = 82
    , parent = Nothing
    , duration = 3.341042866000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:29:53.934814784 UTC
    , finish = 2025-09-04 08:29:57.27585765 UTC
    , thread_cap_info = ("ThreadId 144", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.877115792000
  min duration 1.877115792000
  total durat. 1.877115792000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 10
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 45}
    , self = 85
    , parent = Nothing
    , duration = 1.877115792000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:29:55.793917399 UTC
    , finish = 2025-09-04 08:29:57.671033191 UTC
    , thread_cap_info = ("ThreadId 158", 0, False)}
Success : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.760337885000
  min duration 1.760337885000
  total durat. 1.760337885000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 10
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 45}
    , self = 83
    , parent = Nothing
    , duration = 1.760337885000
    , status = Success
    , start = 2025-09-04 08:29:55.8144186 UTC
    , finish = 2025-09-04 08:29:57.574756485 UTC
    , thread_cap_info = ("ThreadId 159", 0, False)}
**************************************************
E                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                      = True}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules
E                      = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 8} , self
E                      = 51 , parent = Nothing , duration = 0.187203647000 , status = Except "AsyncCancelled"
E                      , start = 2025-09-04 08:29:53.680333565 UTC , finish = 2025-09-04 08:29:53.867537212
E                      UTC , thread_cap_info = ("ThreadId 20", 3, False)}
E                      
| F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| F                    = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| F                    = 72} , self = 72 , parent = Nothing , duration = 0.432179922000 , status
| F                    = Fail , start = 2025-09-04 08:29:53.699879421 UTC , finish = 2025-09-04
| F                    08:29:54.132059343 UTC , thread_cap_info = ("ThreadId 96", 1, False)}
| F                    
| | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F                  = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | F                  = 72} , self = 56 , parent = Nothing , duration = 0.195853350000 , status
| | F                  = Fail , start = 2025-09-04 08:29:53.699883604 UTC , finish = 2025-09-04
| | F                  08:29:53.895736954 UTC , thread_cap_info = ("ThreadId 97", 1, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | F                = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | F                = 72} , self = 63 , parent = Nothing , duration = 0.205573585000 , status
| | | F                = Fail , start = 2025-09-04 08:29:53.705109046 UTC , finish = 2025-09-04
| | | F                08:29:53.910682631 UTC , thread_cap_info = ("ThreadId 101", 3, False)}
| | | F                
| | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | F              = 4 , num_top_rules = 4 , num_weak_rules = 8 , alphabet_size = 6 , total_length
| | | | F              = 72} , self = 66 , parent = Nothing , duration = 0.214482020000 , status
| | | | F              = Fail , start = 2025-09-04 08:29:53.717241387 UTC , finish = 2025-09-04
| | | | F              08:29:53.931723407 UTC , thread_cap_info = ("ThreadId 100", 3, False)}
| | | | F              
E | | | |              
F | | | |              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | |              = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
F | | | |              = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size = 4 , total_length
F | | | |              = 16} , self = 73 , parent = Nothing , duration = 0.915019848000 , status
F | | | |              = Fail , start = 2025-09-04 08:29:53.883760784 UTC , finish = 2025-09-04
F | | | |              08:29:54.798780632 UTC , thread_cap_info = ("ThreadId 117", 2, False)}
F | | | |              
| | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | F            = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | F            = 16} , self = 74 , parent = Nothing , duration = 1.078167312000 , status
| | | | | F            = Fail , start = 2025-09-04 08:29:53.888555603 UTC , finish = 2025-09-04
| | | | | F            08:29:54.966722915 UTC , thread_cap_info = ("ThreadId 118", 2, False)}
| | | | | F            
| | | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | F          = 10 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | | F          = 45} , self = 75 , parent = Nothing , duration = 1.768711619000 , status
| | | | | | F          = Fail , start = 2025-09-04 08:29:53.895222484 UTC , finish = 2025-09-04
| | | | | | F          08:29:55.663934103 UTC , thread_cap_info = ("ThreadId 125", 0, False)}
| | | | | | F          
| | F | | | |          
| | F | | | |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | | |          = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F | | | |          = 10 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | F | | | |          = 45} , self = 76 , parent = Nothing , duration = 1.762853328000 , status
| | F | | | |          = Fail , start = 2025-09-04 08:29:53.90108518 UTC , finish = 2025-09-04
| | F | | | |          08:29:55.663938508 UTC , thread_cap_info = ("ThreadId 126", 1, False)}
| | F | | | |          
| | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 94 , num_strict_rules
| | | | | | | F        = 62 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 15 , total_length
| | | | | | | F        = 554} , self = 77 , parent = Nothing , duration = 2.476340330000 , status
| | | | | | | F        = Fail , start = 2025-09-04 08:29:53.906082515 UTC , finish = 2025-09-04
| | | | | | | F        08:29:56.382422845 UTC , thread_cap_info = ("ThreadId 133", 2, False)}
| | | | | | | F        
| | | F | | | |        
| | | F | | | |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 94 , num_strict_rules
| | | F | | | |        = 62 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 15 , total_length
| | | F | | | |        = 554} , self = 78 , parent = Nothing , duration = 2.488486487000 , status
| | | F | | | |        = Fail , start = 2025-09-04 08:29:53.931646304 UTC , finish = 2025-09-04
| | | F | | | |        08:29:56.420132791 UTC , thread_cap_info = ("ThreadId 135", 2, False)}
| | | F | | | |        
| | | | F | | |        
| | | | E | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 184 , num_strict_rules
| | | | E | | |        = 152 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 16 ,
| | | | E | | |        total_length = 1064} , self = 81 , parent = Nothing , duration = 3.318503763000
| | | | E | | |        , status = Except "AsyncCancelled" , start = 2025-09-04 08:29:53.934810397
| | | | E | | |        UTC , finish = 2025-09-04 08:29:57.25331416 UTC , thread_cap_info = ("ThreadId
| | | | E | | |        142", 1, False)}
| | | | E | | |        
| | | | | | | | E      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 184 , num_strict_rules
| | | | | | | | E      = 152 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 16 ,
| | | | | | | | E      total_length = 1064} , self = 82 , parent = Nothing , duration = 3.341042866000
| | | | | | | | E      , status = Except "AsyncCancelled" , start = 2025-09-04 08:29:53.934814784
| | | | | | | | E      UTC , finish = 2025-09-04 08:29:57.27585765 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E      144", 1, False)}
| | | | | | | | E      
| | | | | | | | | E    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 94 , num_strict_rules
| | | | | | | | | E    = 62 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 15 , total_length
| | | | | | | | | E    = 554} , self = 80 , parent = Nothing , duration = 3.281536864000 , status
| | | | | | | | | E    = Except "<<timeout>>" , start = 2025-09-04 08:29:53.95067788 UTC , finish
| | | | | | | | | E    = 2025-09-04 08:29:57.232214744 UTC , thread_cap_info = ("ThreadId 151",
| | | | | | | | | E    0, False)}
| | | | | | | | | E    
| | | | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 94 , num_strict_rules
| | | | | | | | | | E  = 62 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 15 , total_length
| | | | | | | | | | E  = 554} , self = 79 , parent = Nothing , duration = 3.163730338000 , status
| | | | | | | | | | E  = Except "<<timeout>>" , start = 2025-09-04 08:29:54.042577619 UTC , finish
| | | | | | | | | | E  = 2025-09-04 08:29:57.206307957 UTC , thread_cap_info = ("ThreadId 153",
| | | | | | | | | | E  0, False)}
| | | | | | | | | | E  
| F | | | | | | | | |  
F   | | | | | | | | |  
    | | | F | | | | |  
    | | |   F | | | |  
    F | |     | | | |  
E     | |     | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E     | |     | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E     | |     | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E     | |     | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E     | |     | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E     | |     | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
E     | |     | | | |  , num_strict_rules = 10 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
E     | |     | | | |  = 4 , total_length = 45} , self = 85 , parent = Nothing , duration = 1.877115792000
E     | |     | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:29:55.793917399
E     | |     | | | |  UTC , finish = 2025-09-04 08:29:57.671033191 UTC , thread_cap_info = ("ThreadId
E     | |     | | | |  158", 0, False)}
E     | |     | | | |  
| S   | |     | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| S   | |     | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S   | |     | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| S   | |     | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S   | |     | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S   | |     | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| S   | |     | | | |  , num_strict_rules = 10 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| S   | |     | | | |  = 4 , total_length = 45} , self = 83 , parent = Nothing , duration = 1.760337885000
| S   | |     | | | |  , status = Success , start = 2025-09-04 08:29:55.8144186 UTC , finish =
| S   | |     | | | |  2025-09-04 08:29:57.574756485 UTC , thread_cap_info = ("ThreadId 159",
| S   | |     | | | |  0, False)}
| S   | |     | | | |  
| |   | |     F | | |  
| |   F |       | | |  
| |     |       | | E  
| |     |       | E    
| |     E       |      
| |             E      
| S                    
E                      
S                      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
S                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
S                      = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
S                      = 5 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 4 , total_length
S                      = 26} , self = 95 , parent = Nothing , duration = 0.128503047000 , status
S                      = Success , start = 2025-09-04 08:29:57.784888573 UTC , finish = 2025-09-04
S                      08:29:57.91339162 UTC , thread_cap_info = ("ThreadId 181", 0, False)}
S                      
S                      
