last 824 length 3341
last 706 length 2901
last 11702 length 51103
CNF 706 vars 2901 clauses
CNF 11702 vars 51103 clauses
last 810 length 3285
CNF 824 vars 3341 clauses
last 930 length 3727
CNF 810 vars 3285 clauses
last 10132 length 44386
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2378, clauses: 8514
CNF 930 vars 3727 clauses
last 10719 length 45498
last 9379 length 39720
last 10086 length 42777
last 11418 length 49699
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2793, clauses: 10070
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9254, clauses: 38723
last 2378 length 8514
CNF 10132 vars 44386 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17676, clauses: 66017
CNF 9379 vars 39720 clauses
CNF 10719 vars 45498 clauses
CNF 10086 vars 42777 clauses
last 2793 length 10070
CNF 11418 vars 49699 clauses
last 9254 length 38723
CNF 2378 vars 8514 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9925, clauses: 41475
last 17676 length 66017
CNF 2793 vars 10070 clauses
CNF 9254 vars 38723 clauses
last 9925 length 41475
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2378, clauses: 8514, status: Unsatisfied, time: 0.501854193s
CNF 17676 vars 66017 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2793, clauses: 10070, status: Satisfied, time: 0.65695682s
CNF 9925 vars 41475 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9254, clauses: 38723, status: Unsatisfied, time: 0.820368009s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16854, clauses: 62978
last 16854 length 62978
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17676, clauses: 66017, status: Satisfied, time: 1.888812753s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5590, clauses: 22832
CNF 16854 vars 62978 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3897, clauses: 14725
**************************************************last 5590 length 22832

last 3897 length 14725
CNF 5590 vars 22832 clauses
summary
**************************************************
SRS with 3 strict rules and 2 weak rules on 3 letters       strictify
SRS with 5 rules on 3 letters       mirror
SRS with 5 rules on 3 letters       DP
SRS with 13 strict rules and 5 weak rules on 6 letters       weights
SRS with 3 strict rules and 5 weak rules on 5 letters       EDG
SRS with 2 strict rules and 5 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 5 weak rules on 5 letters       weights
SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, b, b] -> [a, c, c] {- Input 0 -}
  [b, c, a] -> [c, a, c] {- Input 1 -}
  [a, c, a] -> [b, a, b] {- Input 2 -}
  [a, b, c] ->= [a, b, b] {- Input 3 -}
  [b, a, c] ->= [c, b, b] {- Input 4 -}
reason
  strictify
   property Termination
has value Just True
for SRS
  [b, b, b] -> [a, c, c] {- Input 0 -}
  [b, c, a] -> [c, a, c] {- Input 1 -}
  [a, c, a] -> [b, a, b] {- Input 2 -}
  [a, b, c] -> [a, b, b] {- Strictified (Input 3) -}
  [b, a, c] -> [c, b, b] {- Strictified (Input 4) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [b, b, b] -> [c, c, a] {- Mirror (Input 0) -}
  [a, c, b] -> [c, a, c] {- Mirror (Input 1) -}
  [a, c, a] -> [b, a, b] {- Mirror (Input 2) -}
  [c, b, a] -> [b, b, a] {- Mirror (Strictified (Input 3)) -}
  [c, a, b] -> [b, b, c] {- Mirror (Strictified (Input 4)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, b, b] ->= [c, c, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, b] ->= [c, a, c] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, a] ->= [b, a, b] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, a] ->= [b, b, a] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [c, a, b] ->= [b, b, c] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a#, c, a] |-> [a#, b] {- DP (Top 1) (Mirror (Input 2)) -}
  [a#, c, a] |-> [b#] {- DP (Top 2) (Mirror (Input 2)) -}
  [a#, c, a] |-> [b#, a, b] {- DP (Top 0) (Mirror (Input 2)) -}
  [a#, c, b] |-> [a#, c] {- DP (Top 1) (Mirror (Input 1)) -}
  [a#, c, b] |-> [c#] {- DP (Top 2) (Mirror (Input 1)) -}
  [a#, c, b] |-> [c#, a, c] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, b, b] |-> [a#] {- DP (Top 2) (Mirror (Input 0)) -}
  [b#, b, b] |-> [c#, a] {- DP (Top 1) (Mirror (Input 0)) -}
  [b#, b, b] |-> [c#, c, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [c#, a, b] |-> [b#, b, c] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [c#, a, b] |-> [b#, c] {- DP (Top 1) (Mirror (Strictified (Input 4))) -}
  [c#, a, b] |-> [c#] {- DP (Top 2) (Mirror (Strictified (Input 4))) -}
  [c#, b, a] |-> [b#, b, a] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
reason
  (a, 1/1)
  (b, 1/1)
  (c, 1/1)
  (a#, 1/1)
  (b#, 0/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [b, b, b] ->= [c, c, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, b] ->= [c, a, c] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, a] ->= [b, a, b] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, a] ->= [b, b, a] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [c, a, b] ->= [b, b, c] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [b#, b, b] |-> [c#, c, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [c#, a, b] |-> [b#, b, c] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [c#, b, a] |-> [b#, b, a] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [b#, b, b] |-> [c#, c, a] {- DP (Top 0) (Mirror (Input 0)) -}
  [c#, b, a] |-> [b#, b, a] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [b, b, b] ->= [c, c, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, b] ->= [c, a, c] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, a] ->= [b, a, b] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, a] ->= [b, b, a] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [c, a, b] ->= [b, b, c] {- DP Nontop (Mirror (Strictified (Input 4))) -}
reason
  ( a
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 0A 0A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 4A 4A 5A - \
        | 4A 4A 5A - |
        | 4A 4A 5A - |
        \ -  -  -  - / )
  ( c#
  , Wk  / 4A 4A 4A - \
        | 4A 4A 4A - |
        | 4A 4A 4A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [c#, b, a] |-> [b#, b, a] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [b, b, b] ->= [c, c, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, b] ->= [c, a, c] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, a] ->= [b, a, b] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, a] ->= [b, b, a] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [c, a, b] ->= [b, b, c] {- DP Nontop (Mirror (Strictified (Input 4))) -}
reasonCNF 3897 vars 14725 clauses

  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (b#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [b, b, b] ->= [c, c, a] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, b] ->= [c, a, c] {- DP Nontop (Mirror (Input 1)) -}
  [a, c, a] ->= [b, a, b] {- DP Nontop (Mirror (Input 2)) -}
  [c, b, a] ->= [b, b, a] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [c, a, b] ->= [b, b, c] {- DP Nontop (Mirror (Strictified (Input 4))) -}
reason
  EDG

**************************************************
skeleton: (3/2,3)\Strictify\Mirror(5,3)\Deepee(13/5,6)\Weight(3/5,5)\EDG(2/5,5)\Matrix{\Arctic}{3}(1/5,5)\Weight(0/5,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************last 10719 length 45498

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.965337025000
  min duration 0.057254889000
  total durat. 3.165579832000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 0.970554274000
  min duration 0.062733196000
  total durat. 2.738592431000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.394428530000
  min duration 1.394428530000
  total durat. 1.394428530000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 36}
    , self = 68
    , parent = Nothing
    , duration = 1.394428530000
    , status = Fail
    , start = 2025-09-04 07:32:59.112283978 UTC
    , finish = 2025-09-04 07:33:00.506712508 UTC
    , thread_cap_info = ("ThreadId 105", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.021596927000
  min duration 2.021596927000
  total durat. 2.021596927000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 42}
    , self = 69
    , parent = Nothing
    , duration = 2.021596927000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:32:59.584143479 UTC
    , finish = 2025-09-04 07:33:01.605740406 UTC
    , thread_cap_info = ("ThreadId 111", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 2.667508539000
  min duration 1.080444624000
  total durat. 3.747953163000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 5
      , alphabet_size = 5
      , total_length = 42}
    , self = 66
    , parent = Nothing
    , duration = 1.080444624000
    , status = Success
    , start = 2025-09-04 07:32:59.361928343 UTC
    , finish = 2025-09-04 07:33:00.442372967 UTC
    , thread_cap_info = ("ThreadId 109", 2, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 50
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 45
      , alphabet_size = 11
      , total_length = 400}
    , self = 72
    , parent = Nothing
    , duration = 2.667508539000
    , status = Success
    , start = 2025-09-04 07:32:59.103202122 UTC
    , finish = 2025-09-04 07:33:01.770710661 UTC
    , thread_cap_info = ("ThreadId 104", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.243289426000
  min duration 1.243289426000
  total durat. 1.243289426000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 36}
    , self = 65
    , parent = Nothing
    , duration = 1.243289426000
    , status = Fail
    , start = 2025-09-04 07:32:59.062227216 UTC
    , finish = 2025-09-04 07:33:00.305516642 UTC
    , thread_cap_info = ("ThreadId 102", 2, False)}
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 3.027209532000
  min duration 3.027209532000
  total durat. 3.027209532000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 5
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 30}
    , self = 73
    , parent = Nothing
    , duration = 3.027209532000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:32:58.755714772 UTC
    , finish = 2025-09-04 07:33:01.782924304 UTC
    , thread_cap_info = ("ThreadId 35", 0, False)}
**************************************************
E                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E                      , closure = Forward\n , start_strict_only = True\n , max_closure_length
E                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
E                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
E                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
E                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
E                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
E                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E                      = True})" , input_size = Size { num_rules = 5 , num_strict_rules = 5 ,
E                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E                      = 30} , self = 73 , parent = Nothing , duration = 3.027209532000 , status
E                      = Except "AsyncCancelled" , start = 2025-09-04 07:32:58.755714772 UTC ,
E                      finish = 2025-09-04 07:33:01.782924304 UTC , thread_cap_info = ("ThreadId
E                      35", 0, False)}
E                      
| F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 50 , num_strict_rules
| F                    = 5 , num_top_rules = 5 , num_weak_rules = 45 , alphabet_size = 11 , total_length
| F                    = 400} , self = 54 , parent = Nothing , duration = 0.261791443000 , status
| F                    = Fail , start = 2025-09-04 07:32:58.785275312 UTC , finish = 2025-09-04
| F                    07:32:59.047066755 UTC , thread_cap_info = ("ThreadId 67", 1, False)}
| F                    
| | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 50 , num_strict_rules
| | F                  = 5 , num_top_rules = 5 , num_weak_rules = 45 , alphabet_size = 11 , total_length
| | F                  = 400} , self = 62 , parent = Nothing , duration = 0.965337025000 , status
| | F                  = Fail , start = 2025-09-04 07:32:58.792982424 UTC , finish = 2025-09-04
| | F                  07:32:59.758319449 UTC , thread_cap_info = ("ThreadId 66", 1, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
| | | F                = 45 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F                = 360} , self = 61 , parent = Nothing , duration = 0.949343886000 , status
| | | F                = Fail , start = 2025-09-04 07:32:58.80283288 UTC , finish = 2025-09-04
| | | F                07:32:59.752176766 UTC , thread_cap_info = ("ThreadId 71", 0, False)}
| | | F                
| | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
| | | | F              = 45 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F              = 360} , self = 60 , parent = Nothing , duration = 0.887280011000 , status
| | | | F              = Fail , start = 2025-09-04 07:32:58.822797946 UTC , finish = 2025-09-04
| | | | F              07:32:59.710077957 UTC , thread_cap_info = ("ThreadId 73", 0, False)}
| | | | F              
| | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 48 , num_strict_rules
| | | | | F            = 3 , num_top_rules = 3 , num_weak_rules = 45 , alphabet_size = 10 , total_length
| | | | | F            = 384} , self = 63 , parent = Nothing , duration = 0.929326282000 , status
| | | | | F            = Fail , start = 2025-09-04 07:32:58.841952623 UTC , finish = 2025-09-04
| | | | | F            07:32:59.771278905 UTC , thread_cap_info = ("ThreadId 79", 1, False)}
| | | | | F            
| | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 48 , num_strict_rules
| | | | | | F          = 3 , num_top_rules = 3 , num_weak_rules = 45 , alphabet_size = 10 , total_length
| | | | | | F          = 384} , self = 64 , parent = Nothing , duration = 0.970554274000 , status
| | | | | | F          = Fail , start = 2025-09-04 07:32:58.874136293 UTC , finish = 2025-09-04
| | | | | | F          07:32:59.844690567 UTC , thread_cap_info = ("ThreadId 80", 1, False)}
| | | | | | F          
| | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | F        = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | | | F        = 42} , self = 58 , parent = Nothing , duration = 0.264317750000 , status
| | | | | | | F        = Fail , start = 2025-09-04 07:32:59.021936267 UTC , finish = 2025-09-04
| | | | | | | F        07:32:59.286254017 UTC , thread_cap_info = ("ThreadId 99", 2, False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | | F      = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 5 , total_length
| | | | | | | | F      = 42} , self = 59 , parent = Nothing , duration = 0.556233507000 , status
| | | | | | | | F      = Fail , start = 2025-09-04 07:32:59.027802771 UTC , finish = 2025-09-04
| | | | | | | | F      07:32:59.584036278 UTC , thread_cap_info = ("ThreadId 100", 2, False)}
| | | | | | | | F      
| F | | | | | | |      
| F | | | | | | |      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | | | | | | |      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | | | | | |      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | | | | | |      = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| F | | | | | | |      = 4 , total_length = 36} , self = 65 , parent = Nothing , duration = 1.243289426000
| F | | | | | | |      , status = Fail , start = 2025-09-04 07:32:59.062227216 UTC , finish =
| F | | | | | | |      2025-09-04 07:33:00.305516642 UTC , thread_cap_info = ("ThreadId 102",
| F | | | | | | |      2, False)}
| F | | | | | | |      
| | | | | | | | | S    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | | S    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | | S    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | | S    = 50 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 45 ,
| | | | | | | | | S    alphabet_size = 11 , total_length = 400} , self = 72 , parent = Nothing
| | | | | | | | | S    , duration = 2.667508539000 , status = Success , start = 2025-09-04 07:32:59.103202122
| | | | | | | | | S    UTC , finish = 2025-09-04 07:33:01.770710661 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | S    104", 3, False)}
| | | | | | | | | S    
| | | | | | | | | | F  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | | | F  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | | F  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | | F  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | | F  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | | F  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | | | | | F  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | | | | | | | | F  = 4 , total_length = 36} , self = 68 , parent = Nothing , duration = 1.394428530000
| | | | | | | | | | F  , status = Fail , start = 2025-09-04 07:32:59.112283978 UTC , finish =
| | | | | | | | | | F  2025-09-04 07:33:00.506712508 UTC , thread_cap_info = ("ThreadId 105",
| | | | | | | | | | F  2, False)}
| | | | | | | | | | F  
| | | | | | | F | | |  
| | | | | | | S | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | S | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | S | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | S | | |  = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | | | S | | |  = 5 , total_length = 42} , self = 66 , parent = Nothing , duration = 1.080444624000
| | | | | | | S | | |  , status = Success , start = 2025-09-04 07:32:59.361928343 UTC , finish
| | | | | | | S | | |  = 2025-09-04 07:33:00.442372967 UTC , thread_cap_info = ("ThreadId 109",
| | | | | | | S | | |  2, False)}
| | | | | | | S | | |  
| | | | | | | | F | |  
| | | | | | | | E | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | E | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | E | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | E | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | E | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | E | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | | | E | |  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | | | | | | | E | |  = 5 , total_length = 42} , self = 69 , parent = Nothing , duration = 2.021596927000
| | | | | | | | E | |  , status = Except "AsyncCancelled" , start = 2025-09-04 07:32:59.584143479
| | | | | | | | E | |  UTC , finish = 2025-09-04 07:33:01.605740406 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E | |  111", 0, False)}
| | | | | | | | E | |  
| | | | F | | | | | |  
| | | F   | | | | | |  
| | F     | | | | | |  
| |       F | | | | |  
| |         F | | | |  
| F           | | | |  
|             S | | |  
|               | | F  
|               E |    
|                 S    
E                      
