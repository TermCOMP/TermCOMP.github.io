[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 666 length 3271
last 794 length 4390
last 1216 length 7153
CNF 1216 vars 7153 clauses
last 843 length 4056
CNF 843 vars 4056 clauses
last 1122 length 5679
CNF 1122 vars 5679 clauses
last 775 length 3680
CNF 775 vars 3680 clauses
last 1739 length 10256
CNF 1739 vars 10256 clauses
last 1709 length 8684
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3457, clauses: 12790
last 1633 length 9865
last 643 length 2877
last 666 length 2922
last 852 length 4025
CNF 1709 vars 8684 clauses
last 857 length 4608
last 857 length 4608
last 852 length 4025
last 3457 length 12790
last 1843 length 9203
last 2062 length 9605
last 2350 length 10303
CNF 1633 vars 9865 clauses
CNF 643 vars 2877 clauses
CNF 666 vars 2922 clauses
CNF 852 vars 4025 clauses
CNF 857 vars 4608 clauses
CNF 857 vars 4608 clauses
CNF 3457 vars 12790 clauses
CNF 852 vars 4025 clauses
CNF 2062 vars 9605 clauses
CNF 2350 vars 10303 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3457, clauses: 12790, status: Unsatisfied, time: 2.822113776s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1975, clauses: 7857
last 1975 length 7857
CNF 1975 vars 7857 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1975, clauses: 7857, status: Unsatisfied, time: 0.165679215s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2254, clauses: 8715
last 2254 length 8715
CNF 2254 vars 8715 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2254, clauses: 8715, status: Satisfied, time: 1.293123261s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 8 weak rules on 4 letters       weights
SRS with 1 strict rules and 6 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 4 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, a] -> [] {- Input 0 -}
  [a, b] ->= [] {- Input 1 -}
  [] ->= [a, a, b, a] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a], [a, b], [b, a]] ->= [[a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, a], [a, b], [b, b]] ->= [[a, b]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a], [a, b], [b, a]] ->= [[b, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, b]] ->= [[b, b]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[b, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 1/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a], [a, b], [b, a]] ->= [[a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, a]] ->= [[b, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, b]] ->= [[b, b]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 0 0 \
                | 0 6 4 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 4 0 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 1 3 \
                | 0 0 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, a]] ->= [[a, a]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, a]] ->= [[b, a]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, a], [a, b], [b, b]] ->= [[b, b]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 2)) -}
reason
  no strict rules

**************************************************
skeleton: (1/2,2)\TileAllAll{2}(4/8,4)\Weight(1/6,4)\Matrix{\Natural}{3}(0/6,4)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 2.947614964000
  min duration 0.120295062000
  total durat. 7.827470330000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 20
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 5
      , alphabet_size = 6
      , total_length = 86}
    , self = 87
    , parent = Nothing
    , duration = 1.683981386000
    , status = Fail
    , start = 2025-09-04 08:24:00.560812226 UTC
    , finish = 2025-09-04 08:24:02.244793612 UTC
    , thread_cap_info = ("ThreadId 119", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 2
      , total_length = 32}
    , self = 91
    , parent = Nothing
    , duration = 2.922168506000
    , status = Fail
    , start = 2025-09-04 08:24:00.660959646 UTC
    , finish = 2025-09-04 08:24:03.583128152 UTC
    , thread_cap_info = ("ThreadId 145", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 36}
    , self = 92
    , parent = Nothing
    , duration = 2.947614964000
    , status = Fail
    , start = 2025-09-04 08:24:00.678325965 UTC
    , finish = 2025-09-04 08:24:03.625940929 UTC
    , thread_cap_info = ("ThreadId 148", 0, False)}
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.041732335000
  min duration 3.041732335000
  total durat. 3.041732335000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 16
      , num_top_rules = 16
      , num_weak_rules = 6
      , alphabet_size = 7
      , total_length = 94}
    , self = 90
    , parent = Nothing
    , duration = 3.041732335000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 08:24:00.535825643 UTC
    , finish = 2025-09-04 08:24:03.577557978 UTC
    , thread_cap_info = ("ThreadId 104", 3, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 3.268888576000
  min duration 0.065767972000
  total durat. 9.703761035000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 61
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 60
      , alphabet_size = 16
      , total_length = 432}
    , self = 99
    , parent = Nothing
    , duration = 3.159995572000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:24:01.001340494 UTC
    , finish = 2025-09-04 08:24:04.161336066 UTC
    , thread_cap_info = ("ThreadId 171", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 12
      , alphabet_size = 4
      , total_length = 100}
    , self = 97
    , parent = Nothing
    , duration = 3.209108915000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:24:00.80638711 UTC
    , finish = 2025-09-04 08:24:04.015496025 UTC
    , thread_cap_info = ("ThreadId 163", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 36}
    , self = 96
    , parent = Nothing
    , duration = 3.268888576000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:24:00.700926165 UTC
    , finish = 2025-09-04 08:24:03.969814741 UTC
    , thread_cap_info = ("ThreadId 155", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 3.113021985000
  min duration 0.085289969000
  total durat. 12.048841181000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 20
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 5
      , alphabet_size = 6
      , total_length = 86}
    , self = 88
    , parent = Nothing
    , duration = 2.706955614000
    , status = Fail
    , start = 2025-09-04 08:24:00.577167861 UTC
    , finish = 2025-09-04 08:24:03.284123475 UTC
    , thread_cap_info = ("ThreadId 120", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 4
      , alphabet_size = 2
      , total_length = 32}
    , self = 89
    , parent = Nothing
    , duration = 2.817187676000
    , status = Fail
    , start = 2025-09-04 08:24:00.660978927 UTC
    , finish = 2025-09-04 08:24:03.478166603 UTC
    , thread_cap_info = ("ThreadId 146", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 36}
    , self = 93
    , parent = Nothing
    , duration = 2.977418701000
    , status = Fail
    , start = 2025-09-04 08:24:00.700931851 UTC
    , finish = 2025-09-04 08:24:03.678350552 UTC
    , thread_cap_info = ("ThreadId 157", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 2
      , num_top_rules = 0
      , num_weak_rules = 12
      , alphabet_size = 4
      , total_length = 100}
    , self = 95
    , parent = Nothing
    , duration = 3.113021985000
    , status = Fail
    , start = 2025-09-04 08:24:00.821671593 UTC
    , finish = 2025-09-04 08:24:03.934693578 UTC
    , thread_cap_info = ("ThreadId 165", 3, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.068692593000
  min duration 3.068692593000
  total durat. 3.068692593000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 36}
    , self = 94
    , parent = Nothing
    , duration = 3.068692593000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 08:24:00.762687896 UTC
    , finish = 2025-09-04 08:24:03.831380489 UTC
    , thread_cap_info = ("ThreadId 152", 0, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 3.223901564000
  min duration 0.050178256000
  total durat. 3.274079820000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 61
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 60
      , alphabet_size = 16
      , total_length = 432}
    , self = 100
    , parent = Nothing
    , duration = 3.223901564000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:24:01.017163972 UTC
    , finish = 2025-09-04 08:24:04.241065536 UTC
    , thread_cap_info = ("ThreadId 173", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.981231373000
  min duration 1.981231373000
  total durat. 1.981231373000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 36}
    , self = 104
    , parent = Nothing
    , duration = 1.981231373000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:24:03.678311189 UTC
    , finish = 2025-09-04 08:24:05.659542562 UTC
    , thread_cap_info = ("ThreadId 189", 0, False)}
Success : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.632190305000
  min duration 1.632190305000
  total durat. 1.632190305000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 36}
    , self = 102
    , parent = Nothing
    , duration = 1.632190305000
    , status = Success
    , start = 2025-09-04 08:24:03.998543958 UTC
    , finish = 2025-09-04 08:24:05.630734263 UTC
    , thread_cap_info = ("ThreadId 196", 0, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.519835772000
  min duration 3.519835772000
  total durat. 3.519835772000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 60}
    , self = 98
    , parent = Nothing
    , duration = 3.519835772000
    , status = Fail
    , start = 2025-09-04 08:24:00.560854078 UTC
    , finish = 2025-09-04 08:24:04.08068985 UTC
    , thread_cap_info = ("ThreadId 128", 2, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Forward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.789984855000
  min duration 1.789984855000
  total durat. 1.789984855000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Forward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 2
      , total_length = 10}
    , self = 86
    , parent = Nothing
    , duration = 1.789984855000
    , status = Fail
    , start = 2025-09-04 08:24:00.422703815 UTC
    , finish = 2025-09-04 08:24:02.21268867 UTC
    , thread_cap_info = ("ThreadId 97", 3, False)}
**************************************************
E                              Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                              , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                              = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                              , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                              = True}" , input_size = Size { num_rules = 2 , num_strict_rules = 2 , num_top_rules
E                              = 0 , num_weak_rules = 0 , alphabet_size = 2 , total_length = 6} , self
E                              = 61 , parent = Nothing , duration = 0.159647464000 , status = Except "AsyncCancelled"
E                              , start = 2025-09-04 08:24:00.401143871 UTC , finish = 2025-09-04 08:24:00.560791335
E                              UTC , thread_cap_info = ("ThreadId 20", 2, False)}
E                              
| F                            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                            = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| F                            = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| F                            = 60} , self = 63 , parent = Nothing , duration = 0.153410412000 , status
| F                            = Fail , start = 2025-09-04 08:24:00.414881214 UTC , finish = 2025-09-04
| F                            08:24:00.568291626 UTC , thread_cap_info = ("ThreadId 84", 0, False)}
| F                            
| | F                          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                          = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | F                          = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | F                          = 60} , self = 60 , parent = Nothing , duration = 0.125987841000 , status
| | F                          = Fail , start = 2025-09-04 08:24:00.42265981 UTC , finish = 2025-09-04
| | F                          08:24:00.548647651 UTC , thread_cap_info = ("ThreadId 85", 0, False)}
| | F                          
| | | F                        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | F                        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | F                        = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | F                        Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | F                        8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | F                        = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | F                        ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | F                        1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | F                        = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 1 ,
| | | F                        num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 2 , total_length
| | | F                        = 10} , self = 86 , parent = Nothing , duration = 1.789984855000 , status
| | | F                        = Fail , start = 2025-09-04 08:24:00.422703815 UTC , finish = 2025-09-04
| | | F                        08:24:02.21268867 UTC , thread_cap_info = ("ThreadId 97", 3, False)}
| | | F                        
| | | | F                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | F                      , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | F                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | F                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | F                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | F                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | F                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | F                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | F                      = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 1 ,
| | | | F                      num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 2 , total_length
| | | | F                      = 10} , self = 82 , parent = Nothing , duration = 0.492550061000 , status
| | | | F                      = Fail , start = 2025-09-04 08:24:00.44031186 UTC , finish = 2025-09-04
| | | | F                      08:24:00.932861921 UTC , thread_cap_info = ("ThreadId 98", 3, False)}
| | | | F                      
| | | | | F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | | | F                    = 16 , num_top_rules = 16 , num_weak_rules = 6 , alphabet_size = 7 , total_length
| | | | | F                    = 94} , self = 73 , parent = Nothing , duration = 0.222979395000 , status
| | | | | F                    = Fail , start = 2025-09-04 08:24:00.460825786 UTC , finish = 2025-09-04
| | | | | F                    08:24:00.683805181 UTC , thread_cap_info = ("ThreadId 105", 3, False)}
| | | | | F                    
| | | | | | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | F                  = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | F                  = 60} , self = 67 , parent = Nothing , duration = 0.120295062000 , status
| | | | | | F                  = Fail , start = 2025-09-04 08:24:00.477441773 UTC , finish = 2025-09-04
| | | | | | F                  08:24:00.597736835 UTC , thread_cap_info = ("ThreadId 121", 0, False)}
| | | | | | F                  
| | | | | | | E                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | E                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | E                = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | | | | | E                = 16 , num_top_rules = 16 , num_weak_rules = 6 , alphabet_size = 7 , total_length
| | | | | | | E                = 94} , self = 90 , parent = Nothing , duration = 3.041732335000 , status
| | | | | | | E                = Except "<<timeout>>" , start = 2025-09-04 08:24:00.535825643 UTC , finish
| | | | | | | E                = 2025-09-04 08:24:03.577557978 UTC , thread_cap_info = ("ThreadId 104",
| | | | | | | E                3, False)}
| | | | | | | E                
| | F | | | | |                
E |   | | | | |                
F |   | | | | |                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F |   | | | | |                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   | | | | |                = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
F |   | | | | |                = 15 , num_top_rules = 15 , num_weak_rules = 5 , alphabet_size = 6 , total_length
F |   | | | | |                = 86} , self = 87 , parent = Nothing , duration = 1.683981386000 , status
F |   | | | | |                = Fail , start = 2025-09-04 08:24:00.560812226 UTC , finish = 2025-09-04
F |   | | | | |                08:24:02.244793612 UTC , thread_cap_info = ("ThreadId 119", 3, False)}
F |   | | | | |                
| | F | | | | |                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F | | | | |                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F | | | | |                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F | | | | |                = 14 , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 4
| | F | | | | |                , alphabet_size = 4 , total_length = 60} , self = 98 , parent = Nothing
| | F | | | | |                , duration = 3.519835772000 , status = Fail , start = 2025-09-04 08:24:00.560854078
| | F | | | | |                UTC , finish = 2025-09-04 08:24:04.08068985 UTC , thread_cap_info = ("ThreadId
| | F | | | | |                128", 2, False)}
| | F | | | | |                
| F | | | | | |                
| F | | | | | |                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | | | |                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | | | |                = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| F | | | | | |                = 15 , num_top_rules = 15 , num_weak_rules = 5 , alphabet_size = 6 , total_length
| F | | | | | |                = 86} , self = 88 , parent = Nothing , duration = 2.706955614000 , status
| F | | | | | |                = Fail , start = 2025-09-04 08:24:00.577167861 UTC , finish = 2025-09-04
| F | | | | | |                08:24:03.284123475 UTC , thread_cap_info = ("ThreadId 120", 0, False)}
| F | | | | | |                
| | | | | | F |                
| | | | | | F |                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F |                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F |                = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | F |                = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 2 , total_length
| | | | | | F |                = 32} , self = 91 , parent = Nothing , duration = 2.922168506000 , status
| | | | | | F |                = Fail , start = 2025-09-04 08:24:00.660959646 UTC , finish = 2025-09-04
| | | | | | F |                08:24:03.583128152 UTC , thread_cap_info = ("ThreadId 145", 3, False)}
| | | | | | F |                
| | | | | | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | | | F              = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 2 , total_length
| | | | | | | | F              = 32} , self = 89 , parent = Nothing , duration = 2.817187676000 , status
| | | | | | | | F              = Fail , start = 2025-09-04 08:24:00.660978927 UTC , finish = 2025-09-04
| | | | | | | | F              08:24:03.478166603 UTC , thread_cap_info = ("ThreadId 146", 3, False)}
| | | | | | | | F              
| | | | | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | | | F            = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | | F            = 36} , self = 92 , parent = Nothing , duration = 2.947614964000 , status
| | | | | | | | | F            = Fail , start = 2025-09-04 08:24:00.678325965 UTC , finish = 2025-09-04
| | | | | | | | | F            08:24:03.625940929 UTC , thread_cap_info = ("ThreadId 148", 0, False)}
| | | | | | | | | F            
| | | | | F | | | |            
| | | | | E | | | |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E | | | |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E | | | |            = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | E | | | |            = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | E | | | |            = 36} , self = 96 , parent = Nothing , duration = 3.268888576000 , status
| | | | | E | | | |            = Except "AsyncCancelled" , start = 2025-09-04 08:24:00.700926165 UTC ,
| | | | | E | | | |            finish = 2025-09-04 08:24:03.969814741 UTC , thread_cap_info = ("ThreadId
| | | | | E | | | |            155", 3, False)}
| | | | | E | | | |            
| | | | | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | | | | F          = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | | | F          = 36} , self = 93 , parent = Nothing , duration = 2.977418701000 , status
| | | | | | | | | | F          = Fail , start = 2025-09-04 08:24:00.700931851 UTC , finish = 2025-09-04
| | | | | | | | | | F          08:24:03.678350552 UTC , thread_cap_info = ("ThreadId 157", 3, False)}
| | | | | | | | | | F          
| | | | | | | | | | | E        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | E        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | E        = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | | | | | | | E        = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | | | | E        = 36} , self = 94 , parent = Nothing , duration = 3.068692593000 , status
| | | | | | | | | | | E        = Except "<<timeout>>" , start = 2025-09-04 08:24:00.762687896 UTC , finish
| | | | | | | | | | | E        = 2025-09-04 08:24:03.831380489 UTC , thread_cap_info = ("ThreadId 152",
| | | | | | | | | | | E        0, False)}
| | | | | | | | | | | E        
| | | | | | | | | | | | E      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | E      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | E      = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | | | | | | E      = 2 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 4 , total_length
| | | | | | | | | | | | E      = 100} , self = 97 , parent = Nothing , duration = 3.209108915000 , status
| | | | | | | | | | | | E      = Except "AsyncCancelled" , start = 2025-09-04 08:24:00.80638711 UTC ,
| | | | | | | | | | | | E      finish = 2025-09-04 08:24:04.015496025 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | E      163", 3, False)}
| | | | | | | | | | | | E      
| | | | | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | | | | | | | F    = 2 , num_top_rules = 0 , num_weak_rules = 12 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | F    = 100} , self = 95 , parent = Nothing , duration = 3.113021985000 , status
| | | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:24:00.821671593 UTC , finish = 2025-09-04
| | | | | | | | | | | | | F    08:24:03.934693578 UTC , thread_cap_info = ("ThreadId 165", 3, False)}
| | | | | | | | | | | | | F    
| | | | F | | | | | | | | |    
| | | | E | | | | | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | E | | | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | E | | | | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 61 , num_strict_rules
| | | | E | | | | | | | | |    = 1 , num_top_rules = 0 , num_weak_rules = 60 , alphabet_size = 16 , total_length
| | | | E | | | | | | | | |    = 432} , self = 99 , parent = Nothing , duration = 3.159995572000 , status
| | | | E | | | | | | | | |    = Except "AsyncCancelled" , start = 2025-09-04 08:24:01.001340494 UTC ,
| | | | E | | | | | | | | |    finish = 2025-09-04 08:24:04.161336066 UTC , thread_cap_info = ("ThreadId
| | | | E | | | | | | | | |    171", 0, False)}
| | | | E | | | | | | | | |    
| | | | | | | | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 61 , num_strict_rules
| | | | | | | | | | | | | | E  = 1 , num_top_rules = 0 , num_weak_rules = 60 , alphabet_size = 16 , total_length
| | | | | | | | | | | | | | E  = 432} , self = 100 , parent = Nothing , duration = 3.223901564000 , status
| | | | | | | | | | | | | | E  = Except "AsyncCancelled" , start = 2025-09-04 08:24:01.017163972 UTC ,
| | | | | | | | | | | | | | E  finish = 2025-09-04 08:24:04.241065536 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | | | E  173", 0, False)}
| | | | | | | | | | | | | | E  
| | | F | | | | | | | | | | |  
F | |   | | | | | | | | | | |  
  F |   | | | | | | | | | | |  
    |   | | | | F | | | | | |  
    |   | | | E   | | | | | |  
    |   | | F     | | | | | |  
    |   | |       F | | | | |  
E   |   | |         | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E   |   | |         | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E   |   | |         | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E   |   | |         | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E   |   | |         | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E   |   | |         | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
E   |   | |         | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
E   |   | |         | | | | |  = 4 , total_length = 36} , self = 104 , parent = Nothing , duration = 1.981231373000
E   |   | |         | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:24:03.678311189
E   |   | |         | | | | |  UTC , finish = 2025-09-04 08:24:05.659542562 UTC , thread_cap_info = ("ThreadId
E   |   | |         | | | | |  189", 0, False)}
E   |   | |         | | | | |  
|   |   | |         F | | | |  
| F |   | |           | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| F |   | |           | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F |   | |           | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F |   | |           | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F |   | |           | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F |   | |           | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| F |   | |           | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| F |   | |           | | | |  = 2 , total_length = 32} , self = 101 , parent = Nothing , duration = 0.591621676000
| F |   | |           | | | |  , status = Fail , start = 2025-09-04 08:24:03.701152583 UTC , finish =
| F |   | |           | | | |  2025-09-04 08:24:04.292774259 UTC , thread_cap_info = ("ThreadId 190",
| F |   | |           | | | |  3, False)}
| F |   | |           | | | |  
| | |   | |           E | | |  
| | |   | |             | F |  
| | |   | E             |   |  
| | | S |               |   |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | S |               |   |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | S |               |   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | S |               |   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S |               |   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S |               |   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | S |               |   |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | S |               |   |  = 4 , total_length = 36} , self = 102 , parent = Nothing , duration = 1.632190305000
| | | S |               |   |  , status = Success , start = 2025-09-04 08:24:03.998543958 UTC , finish
| | | S |               |   |  = 2025-09-04 08:24:05.630734263 UTC , thread_cap_info = ("ThreadId 196",
| | | S |               |   |  0, False)}
| | | S |               |   |  
| | | | |               E   |  
| | F | |                   |  
| |   | E                   |  
| |   |                     E  
| F   |                        
|     S                        
E                              
