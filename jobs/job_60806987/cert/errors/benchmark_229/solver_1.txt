last 710 length 2855
last 806 length 3299
CNF 710 vars 2855 clauses
last 757 length 3033
CNF 757 vars 3033 clauses
last 813 length 3337
CNF 813 vars 3337 clauses
CNF 806 vars 3299 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2276, clauses: 8169
last 2276 length 8169
CNF 2276 vars 8169 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2075, clauses: 7503
last 2075 length 7503
CNF 2075 vars 7503 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2075, clauses: 7503, status: Satisfied, time: 0.018000909s
last 1544 length 6295
last 1472 length 5897
CNF 1544 vars 6295 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2276, clauses: 8169, status: Unsatisfied, time: 0.130741834s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7500, clauses: 31273
last 1616 length 6669
CNF 1472 vars 5897 clauses
last 1378 length 5521
last 9966 length 42013
last 7500 length 31273
last 13336 length 57109
CNF 1616 vars 6669 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4178, clauses: 15534
CNF 1378 vars 5521 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4157, clauses: 15438
CNF 9966 vars 42013 clauses
last 14961 length 64227
CNF 7500 vars 31273 clauses
CNF 13336 vars 57109 clauses
last 4178 length 15534
last 4157 length 15438
last 15754 length 67892
last 18362 length 78803
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13100, clauses: 54825
last 18098 length 77693
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7500, clauses: 31273, status: Satisfied, time: 1.062575242s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12812, clauses: 53603
CNF 14961 vars 64227 clauses
CNF 4178 vars 15534 clauses
CNF 4157 vars 15438 clauses
CNF 15754 vars 67892 clauses
last 13100 length 54825
CNF 18362 vars 78803 clauses
last 12812 length 53603
CNF 18098 vars 77693 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4178, clauses: 15534, status: Satisfied, time: 1.049254692s
CNF 13100 vars 54825 clauses
CNF 12812 vars 53603 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4157, clauses: 15438, status: Unsatisfied, time: 0.923285287s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22103, clauses: 85305
last 22103 length 85305
last 907 length 3707
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8085, clauses: 33060
last 8085 length 33060
last 847 length 3403
CNF 907 vars 3707 clauses
CNF 22103 vars 85305 clauses
CNF 8085 vars 33060 clauses
CNF 847 vars 3403 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2438, clauses: 8817
last 2438 length 8817
CNF 2438 vars 8817 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2438, clauses: 8817, status: Satisfied, time: 0.71268886s
last 886 length 3607
CNF 886 vars 3607 clauses
last 832 length 3325
CNF 832 vars 3325 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 22319, clauses: 87054
last 22319 length 87054
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2438, clauses: 8808
last 2438 length 8808
CNF 2438 vars 8808 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2438, clauses: 8808, status: Satisfied, time: 0.238717305s
CNF 22319 vars 87054 clauses
**************************************************
summary
**************************************************
SRS with 1 strict rules and 5 weak rules on 3 letters       strictify
SRS with 6 rules on 3 letters       mirror
SRS with 6 rules on 3 letters       DP
SRS with 16 strict rules and 6 weak rules on 6 letters       weights
SRS with 6 strict rules and 6 weak rules on 6 letters       EDG
SRS with 6 strict rules and 6 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 5 strict rules and 6 weak rules on 6 letters       weights
SRS with 2 strict rules and 6 weak rules on 5 letters       EDG
2 sub-proofs
  1 SRS with 1 strict rules and 6 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 6 weak rules on 3 letters       EDG

  2 SRS with 1 strict rules and 6 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 6 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, b, a] -> [c, a, b] {- Input 0 -}
  [b, c, b] ->= [b, c, c] {- Input 1 -}
  [a, a, c] ->= [b, a, b] {- Input 2 -}
  [c, a, c] ->= [a, b, a] {- Input 3 -}
  [a, c, a] ->= [b, c, a] {- Input 4 -}
  [c, a, c] ->= [b, c, c] {- Input 5 -}
reason
  strictify
   property Termination
has value Just True
for SRS
  [b, b, a] -> [c, a, b] {- Input 0 -}
  [b, c, b] -> [b, c, c] {- Strictified (Input 1) -}
  [a, a, c] -> [b, a, b] {- Strictified (Input 2) -}
  [c, a, c] -> [a, b, a] {- Strictified (Input 3) -}
  [a, c, a] -> [b, c, a] {- Strictified (Input 4) -}
  [c, a, c] -> [b, c, c] {- Strictified (Input 5) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, b, b] -> [b, a, c] {- Mirror (Input 0) -}
  [b, c, b] -> [c, c, b] {- Mirror (Strictified (Input 1)) -}
  [c, a, a] -> [b, a, b] {- Mirror (Strictified (Input 2)) -}
  [c, a, c] -> [a, b, a] {- Mirror (Strictified (Input 3)) -}
  [a, c, a] -> [a, c, b] {- Mirror (Strictified (Input 4)) -}
  [c, a, c] -> [c, c, b] {- Mirror (Strictified (Input 5)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b, b] ->= [b, a, c] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, b] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 1))) -}
  [c, a, a] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 2))) -}
  [c, a, c] ->= [a, b, a] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, c, a] ->= [a, c, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [c, a, c] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a#, b, b] |-> [a#, c] {- DP (Top 1) (Mirror (Input 0)) -}
  [a#, b, b] |-> [b#, a, c] {- DP (Top 0) (Mirror (Input 0)) -}
  [a#, b, b] |-> [c#] {- DP (Top 2) (Mirror (Input 0)) -}
  [a#, c, a] |-> [a#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [a#, c, a] |-> [b#] {- DP (Top 2) (Mirror (Strictified (Input 4))) -}
  [a#, c, a] |-> [c#, b] {- DP (Top 1) (Mirror (Strictified (Input 4))) -}
  [b#, c, b] |-> [c#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 1))) -}
  [c#, a, a] |-> [a#, b] {- DP (Top 1) (Mirror (Strictified (Input 2))) -}
  [c#, a, a] |-> [b#] {- DP (Top 2) (Mirror (Strictified (Input 2))) -}
  [c#, a, a] |-> [b#, a, b] {- DP (Top 0) (Mirror (Strictified (Input 2))) -}
  [c#, a, c] |-> [a#] {- DP (Top 2) (Mirror (Strictified (Input 3))) -}
  [c#, a, c] |-> [a#, b, a] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [c#, a, c] |-> [b#] {- DP (Top 2) (Mirror (Strictified (Input 5))) -}
  [c#, a, c] |-> [b#, a] {- DP (Top 1) (Mirror (Strictified (Input 3))) -}
  [c#, a, c] |-> [c#, b] {- DP (Top 1) (Mirror (Strictified (Input 5))) -}
  [c#, a, c] |-> [c#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
reason
  (a, 1/1)
  (b, 1/1)
  (c, 1/1)
  (a#, 0/1)
  (b#, 0/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a, b, b] ->= [b, a, c] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, b] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 1))) -}
  [c, a, a] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 2))) -}
  [c, a, c] ->= [a, b, a] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, c, a] ->= [a, c, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [c, a, c] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a#, b, b] |-> [b#, a, c] {- DP (Top 0) (Mirror (Input 0)) -}
  [a#, c, a] |-> [a#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [b#, c, b] |-> [c#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 1))) -}
  [c#, a, a] |-> [b#, a, b] {- DP (Top 0) (Mirror (Strictified (Input 2))) -}
  [c#, a, c] |-> [a#, b, a] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [c#, a, c] |-> [c#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, b] |-> [b#, a, c] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, c, b] |-> [c#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 1))) -}
  [c#, a, a] |-> [b#, a, b] {- DP (Top 0) (Mirror (Strictified (Input 2))) -}
  [c#, a, c] |-> [a#, b, a] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [a#, c, a] |-> [a#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [c#, a, c] |-> [c#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [a, b, b] ->= [b, a, c] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, b] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 1))) -}
  [c, a, a] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 2))) -}
  [c, a, c] ->= [a, b, a] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, c, a] ->= [a, c, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [c, a, c] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  ( a
  , Wk  / 3A 6A 6A - \
        | 3A 6A 6A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 6A 6A 9A - \
        | 3A 6A 6A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 3A 6A 6A - \
        | 3A 6A 6A - |
        | 3A 6A 6A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 7A 10A 10A - \
        | 7A 10A 10A - |
        | 7A 10A 10A - |
        \ -  -   -   - / )
  ( b#
  , Wk  / 10A 10A 11A - \
        | 10A 10A 11A - |
        | 10A 10A 11A - |
        \ -   -   -   - / )
  ( c#
  , Wk  / 10A 10A 10A - \
        | 10A 10A 10A - |
        | 10A 10A 10A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a#, b, b] |-> [b#, a, c] {- DP (Top 0) (Mirror (Input 0)) -}
  [c#, a, a] |-> [b#, a, b] {- DP (Top 0) (Mirror (Strictified (Input 2))) -}
  [c#, a, c] |-> [a#, b, a] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [a#, c, a] |-> [a#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [c#, a, c] |-> [c#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [a, b, b] ->= [b, a, c] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, b] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 1))) -}
  [c, a, a] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 2))) -}
  [c, a, c] ->= [a, b, a] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, c, a] ->= [a, c, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [c, a, c] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 1/1)
  (b#, 0/1)
  (c#, 2/1)
   property Termination
has value Just True
for SRS
  [a#, c, a] |-> [a#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [c#, a, c] |-> [c#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [a, b, b] ->= [b, a, c] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, b] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 1))) -}
  [c, a, a] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 2))) -}
  [c, a, c] ->= [a, b, a] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, c, a] ->= [a, c, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [c, a, c] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, c, a] |-> [a#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [a, b, b] ->= [b, a, c] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, b] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 1))) -}
  [c, a, a] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 2))) -}
  [c, a, c] ->= [a, b, a] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, c, a] ->= [a, c, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [c, a, c] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  ( a
  , Wk  / 3A 3A 6A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  3A 3A - \
        | 0A  3A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( c
  , Wk  / 0A 3A 3A - \
        | 0A 3A 3A - |
        | 0A 0A 3A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 4A 5A 6A - \
        | 4A 5A 6A - |
        | 4A 5A 6A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a, b, b] ->= [b, a, c] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, b] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 1))) -}
  [c, a, a] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 2))) -}
  [c, a, c] ->= [a, b, a] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, c, a] ->= [a, c, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [c, a, c] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [c#, a, c] |-> [c#, c, b] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [a, b, b] ->= [b, a, c] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, b] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 1))) -}
  [c, a, a] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 2))) -}
  [c, a, c] ->= [a, b, a] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, c, a] ->= [a, c, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [c, a, c] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  ( a
  , Wk  / 6A 6A 9A - \
        | 3A 3A 6A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 3A 3A 6A - \
        | 3A 3A 6A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 6A 6A 6A - \
        | 3A 3A 6A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( c#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a, b, b] ->= [b, a, c] {- DP Nontop (Mirror (Input 0)) -}
  [b, c, b] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 1))) -}
  [c, a, a] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 2))) -}
  [c, a, c] ->= [a, b, a] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [a, c, a] ->= [a, c, b] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [c, a, c] ->= [c, c, b] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  EDG

**************************************************
skeleton: (1/5,3)\Strictify\Mirror(6,3)\Deepee(16/6,6)\Weight\EDG(6/6,6)\Matrix{\Arctic}{3}(5/6,6)\Weight(2/6,5)\EDG[(1/6,4)\Matrix{\Arctic}{3}(0/6,3)\EDG[],(1/6,4)\Matrix{\Arctic}{3}(0/6,3)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 1.644540238000
  min duration 0.011602123000
  total durat. 5.905080101000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 54
      , num_strict_rules = 54
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 432}
    , self = 99
    , parent = Nothing
    , duration = 1.368099656000
    , status = Fail
    , start = 2025-09-04 08:21:23.517380385 UTC
    , finish = 2025-09-04 08:21:24.885480041 UTC
    , thread_cap_info = ("ThreadId 154", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 54
      , alphabet_size = 12
      , total_length = 576}
    , self = 107
    , parent = Nothing
    , duration = 1.601851448000
    , status = Fail
    , start = 2025-09-04 08:21:23.897566427 UTC
    , finish = 2025-09-04 08:21:25.499417875 UTC
    , thread_cap_info = ("ThreadId 177", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 54
      , alphabet_size = 12
      , total_length = 576}
    , self = 104
    , parent = Nothing
    , duration = 1.644540238000
    , status = Fail
    , start = 2025-09-04 08:21:23.717340465 UTC
    , finish = 2025-09-04 08:21:25.361880703 UTC
    , thread_cap_info = ("ThreadId 169", 1, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 1.406072667000
  min duration 0.010049261000
  total durat. 5.494547315000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 54
      , num_strict_rules = 54
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 432}
    , self = 98
    , parent = Nothing
    , duration = 1.215377705000
    , status = Fail
    , start = 2025-09-04 08:21:23.526286583 UTC
    , finish = 2025-09-04 08:21:24.741664288 UTC
    , thread_cap_info = ("ThreadId 156", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 54
      , alphabet_size = 12
      , total_length = 576}
    , self = 102
    , parent = Nothing
    , duration = 1.301842216000
    , status = Fail
    , start = 2025-09-04 08:21:23.737247854 UTC
    , finish = 2025-09-04 08:21:25.03909007 UTC
    , thread_cap_info = ("ThreadId 170", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 54
      , alphabet_size = 12
      , total_length = 576}
    , self = 103
    , parent = Nothing
    , duration = 1.406072667000
    , status = Fail
    , start = 2025-09-04 08:21:23.897574953 UTC
    , finish = 2025-09-04 08:21:25.30364762 UTC
    , thread_cap_info = ("ThreadId 178", 0, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.566549972000
  min duration 1.566549972000
  total durat. 1.566549972000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 5
      , alphabet_size = 4
      , total_length = 36}
    , self = 100
    , parent = Nothing
    , duration = 1.566549972000
    , status = Success
    , start = 2025-09-04 08:21:23.378191818 UTC
    , finish = 2025-09-04 08:21:24.94474179 UTC
    , thread_cap_info = ("ThreadId 86", 3, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 1.183964774000
  min duration 0.409302428000
  total durat. 2.651261699000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 6
      , alphabet_size = 4
      , total_length = 42}
    , self = 118
    , parent = Nothing
    , duration = 1.057994497000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:21:26.059252288 UTC
    , finish = 2025-09-04 08:21:27.117246785 UTC
    , thread_cap_info = ("ThreadId 211", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 6
      , alphabet_size = 6
      , total_length = 72}
    , self = 109
    , parent = Nothing
    , duration = 1.183964774000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:21:24.478185524 UTC
    , finish = 2025-09-04 08:21:25.662150298 UTC
    , thread_cap_info = ("ThreadId 183", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.727708940000
  min duration 0.069133714000
  total durat. 3.163162493000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 6
      , alphabet_size = 6
      , total_length = 72}
    , self = 105
    , parent = Nothing
    , duration = 1.727708940000
    , status = Success
    , start = 2025-09-04 08:21:23.753875871 UTC
    , finish = 2025-09-04 08:21:25.481584811 UTC
    , thread_cap_info = ("ThreadId 171", 0, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.761199637000
  min duration 0.391679967000
  total durat. 2.152879604000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 6
      , num_top_rules = 6
      , num_weak_rules = 6
      , alphabet_size = 6
      , total_length = 72}
    , self = 108
    , parent = Nothing
    , duration = 1.761199637000
    , status = Fail
    , start = 2025-09-04 08:21:23.817610534 UTC
    , finish = 2025-09-04 08:21:25.578810171 UTC
    , thread_cap_info = ("ThreadId 175", 0, False)}
**************************************************
E                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E                      , closure = Backward\n , start_strict_only = True\n , max_closure_length
E                      = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
E                      , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
E                      max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
E                      [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
E                      string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
E                      , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E                      = True})" , input_size = Size { num_rules = 5 , num_strict_rules = 5 ,
E                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E                      = 30} , self = 56 , parent = Nothing , duration = 0.135384294000 , status
E                      = Except "AsyncCancelled" , start = 2025-09-04 08:21:23.342859315 UTC ,
E                      finish = 2025-09-04 08:21:23.478243609 UTC , thread_cap_info = ("ThreadId
E                      72", 1, False)}
E                      
| F                    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F                    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F                    = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| F                    = 4 , total_length = 36} , self = 91 , parent = Nothing , duration = 0.391679967000
| F                    , status = Fail , start = 2025-09-04 08:21:23.366759325 UTC , finish =
| F                    2025-09-04 08:21:23.758439292 UTC , thread_cap_info = ("ThreadId 83", 3,
| F                    False)}
| F                    
| | S                  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | S                  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | S                  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | S                  = 4 , total_length = 36} , self = 100 , parent = Nothing , duration = 1.566549972000
| | S                  , status = Success , start = 2025-09-04 08:21:23.378191818 UTC , finish
| | S                  = 2025-09-04 08:21:24.94474179 UTC , thread_cap_info = ("ThreadId 86",
| | S                  3, False)}
| | S                  
E | |                  
F | |                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | |                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | |                  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
F | |                  = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size = 6 , total_length
F | |                  = 72} , self = 90 , parent = Nothing , duration = 0.273233241000 , status
F | |                  = Fail , start = 2025-09-04 08:21:23.480548296 UTC , finish = 2025-09-04
F | |                  08:21:23.753781537 UTC , thread_cap_info = ("ThreadId 141", 0, False)}
F | |                  
| | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | F                = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size = 6 , total_length
| | | F                = 72} , self = 97 , parent = Nothing , duration = 0.924982295000 , status
| | | F                = Fail , start = 2025-09-04 08:21:23.496800783 UTC , finish = 2025-09-04
| | | F                08:21:24.421783078 UTC , thread_cap_info = ("ThreadId 142", 0, False)}
| | | F                
| | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | F              = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size = 6 , total_length
| | | | F              = 72} , self = 96 , parent = Nothing , duration = 0.719107807000 , status
| | | | F              = Fail , start = 2025-09-04 08:21:23.498191811 UTC , finish = 2025-09-04
| | | | F              08:21:24.217299618 UTC , thread_cap_info = ("ThreadId 147", 0, False)}
| | | | F              
| | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | F            = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size = 6 , total_length
| | | | | F            = 72} , self = 93 , parent = Nothing , duration = 0.319389416000 , status
| | | | | F            = Fail , start = 2025-09-04 08:21:23.498196365 UTC , finish = 2025-09-04
| | | | | F            08:21:23.817585781 UTC , thread_cap_info = ("ThreadId 148", 0, False)}
| | | | | F            
| | | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| | | | | | F          = 54 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | F          = 432} , self = 99 , parent = Nothing , duration = 1.368099656000 , status
| | | | | | F          = Fail , start = 2025-09-04 08:21:23.517380385 UTC , finish = 2025-09-04
| | | | | | F          08:21:24.885480041 UTC , thread_cap_info = ("ThreadId 154", 2, False)}
| | | | | | F          
| | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| | | | | | | F        = 54 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | | F        = 432} , self = 98 , parent = Nothing , duration = 1.215377705000 , status
| | | | | | | F        = Fail , start = 2025-09-04 08:21:23.526286583 UTC , finish = 2025-09-04
| | | | | | | F        08:21:24.741664288 UTC , thread_cap_info = ("ThreadId 156", 2, False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 72 , num_strict_rules
| | | | | | | | F      = 18 , num_top_rules = 18 , num_weak_rules = 54 , alphabet_size = 12 ,
| | | | | | | | F      total_length = 576} , self = 104 , parent = Nothing , duration = 1.644540238000
| | | | | | | | F      , status = Fail , start = 2025-09-04 08:21:23.717340465 UTC , finish =
| | | | | | | | F      2025-09-04 08:21:25.361880703 UTC , thread_cap_info = ("ThreadId 169",
| | | | | | | | F      1, False)}
| | | | | | | | F      
| | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 72 , num_strict_rules
| | | | | | | | | F    = 18 , num_top_rules = 18 , num_weak_rules = 54 , alphabet_size = 12 ,
| | | | | | | | | F    total_length = 576} , self = 102 , parent = Nothing , duration = 1.301842216000
| | | | | | | | | F    , status = Fail , start = 2025-09-04 08:21:23.737247854 UTC , finish =
| | | | | | | | | F    2025-09-04 08:21:25.03909007 UTC , thread_cap_info = ("ThreadId 170", 1,
| | | | | | | | | F    False)}
| | | | | | | | | F    
F | | | | | | | | |    
S | | | | | | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | | | | | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | | | | | | | |    = 12 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 6 ,
S | | | | | | | | |    alphabet_size = 6 , total_length = 72} , self = 105 , parent = Nothing
S | | | | | | | | |    , duration = 1.727708940000 , status = Success , start = 2025-09-04 08:21:23.753875871
S | | | | | | | | |    UTC , finish = 2025-09-04 08:21:25.481584811 UTC , thread_cap_info = ("ThreadId
S | | | | | | | | |    171", 0, False)}
S | | | | | | | | |    
| F | | | | | | | |    
|   | | | F | | | |    
| F | | |   | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | | |   | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | |   | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | |   | | | |    = 12 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 6 ,
| F | | |   | | | |    alphabet_size = 6 , total_length = 72} , self = 108 , parent = Nothing
| F | | |   | | | |    , duration = 1.761199637000 , status = Fail , start = 2025-09-04 08:21:23.817610534
| F | | |   | | | |    UTC , finish = 2025-09-04 08:21:25.578810171 UTC , thread_cap_info = ("ThreadId
| F | | |   | | | |    175", 0, False)}
| F | | |   | | | |    
| | | | | F | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 72 , num_strict_rules
| | | | | F | | | |    = 18 , num_top_rules = 18 , num_weak_rules = 54 , alphabet_size = 12 ,
| | | | | F | | | |    total_length = 576} , self = 107 , parent = Nothing , duration = 1.601851448000
| | | | | F | | | |    , status = Fail , start = 2025-09-04 08:21:23.897566427 UTC , finish =
| | | | | F | | | |    2025-09-04 08:21:25.499417875 UTC , thread_cap_info = ("ThreadId 177",
| | | | | F | | | |    0, False)}
| | | | | F | | | |    
| | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 72 , num_strict_rules
| | | | | | | | | | F  = 18 , num_top_rules = 18 , num_weak_rules = 54 , alphabet_size = 12 ,
| | | | | | | | | | F  total_length = 576} , self = 103 , parent = Nothing , duration = 1.406072667000
| | | | | | | | | | F  , status = Fail , start = 2025-09-04 08:21:23.897574953 UTC , finish =
| | | | | | | | | | F  2025-09-04 08:21:25.30364762 UTC , thread_cap_info = ("ThreadId 178", 0,
| | | | | | | | | | F  False)}
| | | | | | | | | | F  
| | | | F | | | | | |  
| | | F   | | | | | |  
| | | E   | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E   | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E   | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E   | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E   | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E   | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | E   | | | | | |  , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size
| | | E   | | | | | |  = 6 , total_length = 72} , self = 109 , parent = Nothing , duration = 1.183964774000
| | | E   | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:24.478185524
| | | E   | | | | | |  UTC , finish = 2025-09-04 08:21:25.662150298 UTC , thread_cap_info = ("ThreadId
| | | E   | | | | | |  183", 0, False)}
| | | E   | | | | | |  
| | | |   | | F | | |  
| | | |   | F   | | |  
| | S |   |     | | |  
| |   |   |     | F |  
| |   |   |     |   F  
| |   |   |     F      
S |   |   |            
  |   |   F            
  F   |                
      E                
F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                      = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
F                      = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size = 4 , total_length
F                      = 42} , self = 114 , parent = Nothing , duration = 0.129128983000 , status
F                      = Fail , start = 2025-09-04 08:21:25.897262897 UTC , finish = 2025-09-04
F                      08:21:26.02639188 UTC , thread_cap_info = ("ThreadId 204", 0, False)}
F                      
| F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| F                    = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| F                    = 42} , self = 115 , parent = Nothing , duration = 0.113073960000 , status
| F                    = Fail , start = 2025-09-04 08:21:25.91701653 UTC , finish = 2025-09-04
| F                    08:21:26.03009049 UTC , thread_cap_info = ("ThreadId 206", 0, False)}
| F                    
F |                    
  F                    
S                      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S                      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S                      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S                      = 7 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
S                      = 4 , total_length = 42} , self = 116 , parent = Nothing , duration = 0.963947122000
S                      , status = Success , start = 2025-09-04 08:21:26.040380624 UTC , finish
S                      = 2025-09-04 08:21:27.004327746 UTC , thread_cap_info = ("ThreadId 210",
S                      0, False)}
S                      
| E                    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E                    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E                    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E                    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E                    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E                    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| E                    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| E                    = 4 , total_length = 42} , self = 118 , parent = Nothing , duration = 1.057994497000
| E                    , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:26.059252288
| E                    UTC , finish = 2025-09-04 08:21:27.117246785 UTC , thread_cap_info = ("ThreadId
| E                    211", 0, False)}
| E                    
S |                    
  E                    
F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                      = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
F                      = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size = 4 , total_length
F                      = 42} , self = 123 , parent = Nothing , duration = 0.126723223000 , status
F                      = Fail , start = 2025-09-04 08:21:27.280763901 UTC , finish = 2025-09-04
F                      08:21:27.407487124 UTC , thread_cap_info = ("ThreadId 217", 0, False)}
F                      
| F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| F                    = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| F                    = 42} , self = 124 , parent = Nothing , duration = 0.182427384000 , status
| F                    = Fail , start = 2025-09-04 08:21:27.324491869 UTC , finish = 2025-09-04
| F                    08:21:27.506919253 UTC , thread_cap_info = ("ThreadId 219", 0, False)}
| F                    
F |                    
S |                    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S |                    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S |                    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S |                    = 7 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
S |                    = 4 , total_length = 42} , self = 125 , parent = Nothing , duration = 0.402372717000
S |                    , status = Success , start = 2025-09-04 08:21:27.445620887 UTC , finish
S |                    = 2025-09-04 08:21:27.847993604 UTC , thread_cap_info = ("ThreadId 221",
S |                    0, False)}
S |                    
| F                    
| E                    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E                    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E                    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E                    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E                    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E                    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| E                    , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| E                    = 4 , total_length = 42} , self = 127 , parent = Nothing , duration = 0.409302428000
| E                    , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:27.562440243
| E                    UTC , finish = 2025-09-04 08:21:27.971742671 UTC , thread_cap_info = ("ThreadId
| E                    223", 0, False)}
| E                    
S |                    
  E                    
