[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 310 length 1465
CNF 310 vars 1465 clauses
last 425 length 2175
CNF 425 vars 2175 clauses
last 669 length 3276
last 1000 length 5208
CNF 669 vars 3276 clauses
last 1098 length 6706
last 741 length 3662
CNF 1000 vars 5208 clauses
CNF 741 vars 3662 clauses
CNF 1098 vars 6706 clauses
last 1626 length 9321
last 462 length 2163
CNF 462 vars 2163 clauses
last 1040 length 5437
last 648 length 3105
CNF 648 vars 3105 clauses
CNF 1040 vars 5437 clauses
last 1394 length 7230
last 1150 length 5557
CNF 1150 vars 5557 clauses
last 530 length 2433
CNF 1626 vars 9321 clauses
last 426 length 1885
CNF 1394 vars 7230 clauses
CNF 530 vars 2433 clauses
last 1384 length 6085
last 1250 length 5719
CNF 426 vars 1885 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4259, clauses: 16104
last 462 length 2163
last 648 length 3105
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8719, clauses: 36040
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4259, clauses: 16233
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8717, clauses: 35994
last 11506 length 71410
CNF 1384 vars 6085 clauses
CNF 1250 vars 5719 clauses
last 4259 length 16104
CNF 462 vars 2163 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1517, clauses: 6036
last 13392 length 102362
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10808, clauses: 45113
CNF 648 vars 3105 clauses
last 8719 length 36040
last 4259 length 16233
last 8717 length 35994
CNF 4259 vars 16104 clauses
CNF 11506 vars 71410 clauses
last 1517 length 6036
last 10808 length 45113
CNF 13392 vars 102362 clauses
CNF 8719 vars 36040 clauses
CNF 4259 vars 16233 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1836, clauses: 7081
CNF 8717 vars 35994 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13510, clauses: 56024
CNF 1517 vars 6036 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8719, clauses: 36040, status: Unsatisfied, time: 0.359153831s
CNF 10808 vars 45113 clauses
last 1836 length 7081
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4259, clauses: 16104, status: Unsatisfied, time: 0.525376177s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8717, clauses: 35994, status: Unsatisfied, time: 0.402448942s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4259, clauses: 16233, status: Unsatisfied, time: 0.41696131s
last 13510 length 56024
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1517, clauses: 6036, status: Unsatisfied, time: 0.42445157s
CNF 1836 vars 7081 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10808, clauses: 45113, status: Satisfied, time: 0.356435466s
CNF 13510 vars 56024 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1836, clauses: 7081, status: Satisfied, time: 0.162594701s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 1 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 4 weak rules on 4 letters       weights
SRS with 1 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 3 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, a] -> [] {- Input 0 -}
  [] ->= [a, a, b, a] {- Input 1 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 1/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 0 0 \
                | 0 4 1 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 4 0 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 4 5 \
                | 0 0 4 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
reason
  no strict rules

**************************************************
skeleton: (1/1,2)\TileAllAll{2}(4/4,4)\Weight(1/3,4)\Matrix{\Natural}{3}(0/3,3)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let last 336 length 1589
{verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************last 409 length 1830
CNF 336 vars 1589 clauses
CNF 409 vars 1830 clauses

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 0.724363648000
  min duration 0.009320253000
  total durat. 2.532134339000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.835057581000
  min duration 0.017437424000
  total durat. 2.835411301000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.063913253000
  min duration 1.028613750000
  total durat. 2.092527003000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 3
      , alphabet_size = 6
      , total_length = 78}
    , self = 104
    , parent = Nothing
    , duration = 1.028613750000
    , status = Fail
    , start = 2025-09-04 08:26:22.435669685 UTC
    , finish = 2025-09-04 08:26:23.464283435 UTC
    , thread_cap_info = ("ThreadId 179", 0, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 3
      , alphabet_size = 6
      , total_length = 78}
    , self = 102
    , parent = Nothing
    , duration = 1.063913253000
    , status = Fail
    , start = 2025-09-04 08:26:22.37493645 UTC
    , finish = 2025-09-04 08:26:23.438849703 UTC
    , thread_cap_info = ("ThreadId 169", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.100300426000
  min duration 1.053404756000
  total durat. 2.153705182000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 3
      , alphabet_size = 6
      , total_length = 78}
    , self = 105
    , parent = Nothing
    , duration = 1.053404756000
    , status = Fail
    , start = 2025-09-04 08:26:22.414923152 UTC
    , finish = 2025-09-04 08:26:23.468327908 UTC
    , thread_cap_info = ("ThreadId 171", 0, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 3
      , alphabet_size = 6
      , total_length = 78}
    , self = 103
    , parent = Nothing
    , duration = 1.100300426000
    , status = Fail
    , start = 2025-09-04 08:26:22.355645325 UTC
    , finish = 2025-09-04 08:26:23.455945751 UTC
    , thread_cap_info = ("ThreadId 156", 1, False)}
**************************************************
F                        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
F                        = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 2 , total_length
F                        = 24} , self = 94 , parent = Nothing , duration = 0.422394496000 , status
F                        = Fail , start = 2025-09-04 08:26:22.355069211 UTC , finish = 2025-09-04
F                        08:26:22.777463707 UTC , thread_cap_info = ("ThreadId 149", 0, False)}
F                        
| F                      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F                      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F                      = 18 , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 3
| F                      , alphabet_size = 6 , total_length = 78} , self = 103 , parent = Nothing
| F                      , duration = 1.100300426000 , status = Fail , start = 2025-09-04 08:26:22.355645325
| F                      UTC , finish = 2025-09-04 08:26:23.455945751 UTC , thread_cap_info = ("ThreadId
| F                      156", 1, False)}
| F                      
| | F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | F                    = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 2 , total_length
| | F                    = 24} , self = 95 , parent = Nothing , duration = 0.519832581000 , status
| | F                    = Fail , start = 2025-09-04 08:26:22.360317227 UTC , finish = 2025-09-04
| | F                    08:26:22.880149808 UTC , thread_cap_info = ("ThreadId 150", 0, False)}
| | F                    
| | | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | F                  = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | F                  = 64} , self = 96 , parent = Nothing , duration = 0.636406319000 , status
| | | F                  = Fail , start = 2025-09-04 08:26:22.367345705 UTC , finish = 2025-09-04
| | | F                  08:26:23.003752024 UTC , thread_cap_info = ("ThreadId 164", 3, False)}
| | | F                  
| | | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | F                = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | F                = 64} , self = 98 , parent = Nothing , duration = 0.632302206000 , status
| | | | F                = Fail , start = 2025-09-04 08:26:22.374916953 UTC , finish = 2025-09-04
| | | | F                08:26:23.007219159 UTC , thread_cap_info = ("ThreadId 166", 3, False)}
| | | | F                
| | | | | F              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | F              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | F              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | F              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 18
| | | | | F              , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 3 , alphabet_size
| | | | | F              = 6 , total_length = 78} , self = 102 , parent = Nothing , duration = 1.063913253000
| | | | | F              , status = Fail , start = 2025-09-04 08:26:22.37493645 UTC , finish = 2025-09-04
| | | | | F              08:26:23.438849703 UTC , thread_cap_info = ("ThreadId 169", 1, False)}
| | | | | F              
| | | | | | F            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | F            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | F            = 18 , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 3
| | | | | | F            , alphabet_size = 6 , total_length = 78} , self = 105 , parent = Nothing
| | | | | | F            , duration = 1.053404756000 , status = Fail , start = 2025-09-04 08:26:22.414923152
| | | | | | F            UTC , finish = 2025-09-04 08:26:23.468327908 UTC , thread_cap_info = ("ThreadId
| | | | | | F            171", 0, False)}
| | | | | | F            
| | | | | | | F          Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | F          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | F          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | F          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | F          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | F          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 18
| | | | | | | F          , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 3 , alphabet_size
| | | | | | | F          = 6 , total_length = 78} , self = 104 , parent = Nothing , duration = 1.028613750000
| | | | | | | F          , status = Fail , start = 2025-09-04 08:26:22.435669685 UTC , finish =
| | | | | | | F          2025-09-04 08:26:23.464283435 UTC , thread_cap_info = ("ThreadId 179",
| | | | | | | F          0, False)}
| | | | | | | F          
| | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | F        = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | F        = 24} , self = 97 , parent = Nothing , duration = 0.570764864000 , status
| | | | | | | | F        = Fail , start = 2025-09-04 08:26:22.436077439 UTC , finish = 2025-09-04
| | | | | | | | F        08:26:23.006842303 UTC , thread_cap_info = ("ThreadId 180", 2, False)}
| | | | | | | | F        
| | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | | F      = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | | F      = 24} , self = 99 , parent = Nothing , duration = 0.707024873000 , status
| | | | | | | | | F      = Fail , start = 2025-09-04 08:26:22.441898026 UTC , finish = 2025-09-04
| | | | | | | | | F      08:26:23.148922899 UTC , thread_cap_info = ("ThreadId 181", 2, False)}
| | | | | | | | | F      
| | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | | | | F    = 1 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 13 , total_length
| | | | | | | | | | F    = 264} , self = 100 , parent = Nothing , duration = 0.724363648000 , status
| | | | | | | | | | F    = Fail , start = 2025-09-04 08:26:22.589090406 UTC , finish = 2025-09-04
| | | | | | | | | | F    08:26:23.313454054 UTC , thread_cap_info = ("ThreadId 186", 0, False)}
| | | | | | | | | | F    
| | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | | | | | F  = 1 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 13 , total_length
| | | | | | | | | | | F  = 264} , self = 101 , parent = Nothing , duration = 0.835057581000 , status
| | | | | | | | | | | F  = Fail , start = 2025-09-04 08:26:22.589097771 UTC , finish = 2025-09-04
| | | | | | | | | | | F  08:26:23.424155352 UTC , thread_cap_info = ("ThreadId 188", 0, False)}
| | | | | | | | | | | F  
F | | | | | | | | | | |  
S | | | | | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
S | | | | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
S | | | | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S | | | | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S | | | | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S | | | | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
S | | | | | | | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
S | | | | | | | | | | |  = 2 , total_length = 24} , self = 107 , parent = Nothing , duration = 0.725078938000
S | | | | | | | | | | |  , status = Success , start = 2025-09-04 08:26:22.79514468 UTC , finish
S | | | | | | | | | | |  = 2025-09-04 08:26:23.520223618 UTC , thread_cap_info = ("ThreadId 190",
S | | | | | | | | | | |  3, False)}
S | | | | | | | | | | |  
| | F | | | | | | | | |  
| | F | | | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | F | | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F | | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F | | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | F | | | | | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| | F | | | | | | | | |  = 2 , total_length = 24} , self = 106 , parent = Nothing , duration = 0.597902246000
| | F | | | | | | | | |  , status = Fail , start = 2025-09-04 08:26:22.896523338 UTC , finish =
| | F | | | | | | | | |  2025-09-04 08:26:23.494425584 UTC , thread_cap_info = ("ThreadId 193",
| | F | | | | | | | | |  3, False)}
| | F | | | | | | | | |  
| | | F | | | | | | | |  
| | |   | | | | F | | |  
| | | E | | | |   | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | E | | | |   | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | | | |   | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | | | |   | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | | |   | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | | |   | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | E | | | |   | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | | E | | | |   | | |  = 4 , total_length = 24} , self = 117 , parent = Nothing , duration = 0.549806530000
| | | E | | | |   | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:26:23.006867877
| | | E | | | |   | | |  UTC , finish = 2025-09-04 08:26:23.556674407 UTC , thread_cap_info = ("ThreadId
| | | E | | | |   | | |  198", 2, False)}
| | | E | | | |   | | |  
| | | | F | | |   | | |  
| | | |   | | |   F | |  
| | | | S | | |     | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | S | | |     | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | S | | |     | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | S | | |     | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S | | |     | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S | | |     | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | S | | |     | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | | | S | | |     | |  = 4 , total_length = 24} , self = 109 , parent = Nothing , duration = 0.366485295000
| | | | S | | |     | |  , status = Success , start = 2025-09-04 08:26:23.158359982 UTC , finish
| | | | S | | |     | |  = 2025-09-04 08:26:23.524845277 UTC , thread_cap_info = ("ThreadId 202",
| | | | S | | |     | |  2, False)}
| | | | S | | |     | |  
| | | | | | | |     F |  
| | | | | | | |       F  
| | | | | F | |          
| F | | |   | |          
|   | | |   | F          
|   | | |   F            
|   F | |                
S     | |                
      | S                
      E                  
