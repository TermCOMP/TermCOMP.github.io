[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 412 length 1691
CNF 412 vars 1691 clauses
last 238 length 999
CNF 238 vars 999 clauses
last 562 length 2265
CNF 562 vars 2265 clauses
last 1002 length 4231
CNF 1002 vars 4231 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2076, clauses: 7559
last 2076 length 7559
CNF 2076 vars 7559 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2076, clauses: 7559, status: Unsatisfied, time: 0.020444458s
last 468 length 1895
last 230 length 909
last 562 length 2265
CNF 230 vars 909 clauses
CNF 468 vars 1895 clauses
last 1002 length 4231
CNF 562 vars 2265 clauses
CNF 1002 vars 4231 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1544, clauses: 5667
last 1544 length 5667
CNF 1544 vars 5667 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1544, clauses: 5667, status: Unsatisfied, time: 0.208753133s
last 1659 length 6613
CNF 1659 vars 6613 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3930, clauses: 14471
last 3930 length 14471
last 1659 length 6613
last 2307 length 9349
CNF 3930 vars 14471 clauses
CNF 1659 vars 6613 clauses
CNF 2307 vars 9349 clauses
last 2307 length 9349
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3930, clauses: 14471, status: Unsatisfied, time: 0.421201996s
last 4273 length 17031
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8787, clauses: 35972
CNF 2307 vars 9349 clauses
last 7409 length 30065
last 8787 length 35972
CNF 4273 vars 17031 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 20508, clauses: 85235
last 20508 length 85235
CNF 7409 vars 30065 clauses
CNF 8787 vars 35972 clauses
CNF 20508 vars 85235 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8787, clauses: 35972, status: Satisfied, time: 1.760364086s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7469, clauses: 28739
last 7469 length 28739
CNF 7469 vars 28739 clauses
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 3 letters       mirror
SRS with 1 strict rules and 2 weak rules on 3 letters       context
SRS with 1 strict rules and 6 weak rules on 3 letters       mirror
SRS with 1 strict rules and 6 weak rules on 3 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, c] -> [c, b] {- Input 0 -}
  [] ->= [a, b] {- Input 1 -}
  [a, b] ->= [] {- Input 2 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [c, a] -> [b, c] {- Mirror (Input 0) -}
  [] ->= [b, a] {- Mirror (Input 1) -}
  [b, a] ->= [] {- Mirror (Input 2) -}
reason
  context
   property Termination
has value Just True
for SRS
  [c, a] -> [b, c] {- Mirror (Input 0) -}
  [a] ->= [a, b, a] {- Mirror (Input 1) -}
  [b] ->= [b, b, a] {- Mirror (Input 1) -}
  [c] ->= [c, b, a] {- Mirror (Input 1) -}
  [a, b, a] ->= [a] {- Mirror (Input 2) -}
  [b, b, a] ->= [b] {- Mirror (Input 2) -}
  [c, b, a] ->= [c] {- Mirror (Input 2) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, c] -> [c, b] {- Input 0 -}
  [a] ->= [a, b, a] {- Input 1 -}
  [b] ->= [a, b, b] {- Input 1 -}
  [c] ->= [a, b, c] {- Input 1 -}
  [a, b, a] ->= [a] {- Input 2 -}
  [a, b, b] ->= [b] {- Input 2 -}
  [a, b, c] ->= [c] {- Input 2 -}
reason
  ( a
  , St  / 0A  -  1A \
        | -2A 0A 1A |
        \ -   -  1A / )
  ( b
  , St  / 0A  -  -1A \
        | -2A 0A -1A |
        \ -   -  -1A / )
  ( c
  , St  / 1A -1A 2A \
        | 1A -1A 0A |
        \ 1A -1A 0A / )
   property Termination
has value Just True
for SRS
  [a] ->= [a, b, a] {- Input 1 -}
  [b] ->= [a, b, b] {- Input 1 -}
  [c] ->= [a, b, c] {- Input 1 -}
  [a, b, a] ->= [a] {- Input 2 -}
  [a, b, b] ->= [b] {- Input 2 -}
  [a, b, c] ->= [c] {- Input 2 -}
reason
  no strict rules

**************************************************
skeleton: \Mirror(1/2,3)\Context\Mirror(1/6,3)\Matrix{\ArcticBZ}{3}(0/6,3)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7469, clauses: 28739, status: Unsatisfied, time: 0.720059364s
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 2.603976979000
  min duration 0.019018165000
  total durat. 5.241610383000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 126}
    , self = 83
    , parent = Nothing
    , duration = 2.290816665000
    , status = Fail
    , start = 2025-09-04 08:26:07.190601602 UTC
    , finish = 2025-09-04 08:26:09.481418267 UTC
    , thread_cap_info = ("ThreadId 142", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 126}
    , self = 87
    , parent = Nothing
    , duration = 2.603976979000
    , status = Fail
    , start = 2025-09-04 08:26:07.394929152 UTC
    , finish = 2025-09-04 08:26:09.998906131 UTC
    , thread_cap_info = ("ThreadId 159", 3, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.165678990000
  min duration 3.165678990000
  total durat. 3.165678990000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 63
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 54
      , alphabet_size = 9
      , total_length = 378}
    , self = 91
    , parent = Nothing
    , duration = 3.165678990000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:26:07.289920697 UTC
    , finish = 2025-09-04 08:26:10.455599687 UTC
    , thread_cap_info = ("ThreadId 148", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 7
  max duration 2.997015588000
  min duration 0.023262569000
  total durat. 6.492003631000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 126}
    , self = 81
    , parent = Nothing
    , duration = 1.103891717000
    , status = Fail
    , start = 2025-09-04 08:26:07.190608086 UTC
    , finish = 2025-09-04 08:26:08.294499803 UTC
    , thread_cap_info = ("ThreadId 144", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 126}
    , self = 84
    , parent = Nothing
    , duration = 2.081388085000
    , status = Fail
    , start = 2025-09-04 08:26:07.411577528 UTC
    , finish = 2025-09-04 08:26:09.492965613 UTC
    , thread_cap_info = ("ThreadId 160", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 63
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 54
      , alphabet_size = 9
      , total_length = 378}
    , self = 90
    , parent = Nothing
    , duration = 2.997015588000
    , status = Fail
    , start = 2025-09-04 08:26:07.311380312 UTC
    , finish = 2025-09-04 08:26:10.3083959 UTC
    , thread_cap_info = ("ThreadId 150", 0, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 4.185761650000
  min duration 4.185761650000
  total durat. 4.185761650000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 28}
    , self = 92
    , parent = Nothing
    , duration = 4.185761650000
    , status = Success
    , start = 2025-09-04 08:26:07.295330776 UTC
    , finish = 2025-09-04 08:26:11.481092426 UTC
    , thread_cap_info = ("ThreadId 162", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 4.002951795000
  min duration 4.002951795000
  total durat. 4.002951795000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 3
      , total_length = 28}
    , self = 94
    , parent = Nothing
    , duration = 4.002951795000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:26:07.731020176 UTC
    , finish = 2025-09-04 08:26:11.733971971 UTC
    , thread_cap_info = ("ThreadId 165", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 2.530419216000
  min duration 0.043819002000
  total durat. 2.574238218000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 22
      , num_strict_rules = 14
      , num_top_rules = 14
      , num_weak_rules = 8
      , alphabet_size = 8
      , total_length = 76}
    , self = 86
    , parent = Nothing
    , duration = 2.530419216000
    , status = Fail
    , start = 2025-09-04 08:26:07.122146837 UTC
    , finish = 2025-09-04 08:26:09.652566053 UTC
    , thread_cap_info = ("ThreadId 121", 0, False)}
Fail : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 2.406088376000
  min duration 2.406088376000
  total durat. 2.406088376000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 3
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 2
      , alphabet_size = 3
      , total_length = 8}
    , self = 85
    , parent = Nothing
    , duration = 2.406088376000
    , status = Fail
    , start = 2025-09-04 08:26:07.105321446 UTC
    , finish = 2025-09-04 08:26:09.511409822 UTC
    , thread_cap_info = ("ThreadId 111", 3, False)}
Success : "Tiling\n { method = All\n , width = 2\n , state_type = Best\n , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n , cpf = True}"
  total number 6
  max duration 1.007943203000
  min duration 0.000116147000
  total durat. 1.036285602000
  Info
    { what = "Tiling\n  { method = All\n  , width = 2\n  , state_type = Best\n  , map_type = Enum\n  , unlabel = Never\n  , print_completion_steps = False\n  , print_tiles = False\n  , max_num_tiles = Just 10000\n  , max_num_rules = Just 100000\n  , verbose = False\n  , tracing = False\n  , draw = False\n  , cpf = True}"
    , input_size = Size
      { num_rules = 27
      , num_strict_rules = 9
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 126}
    , self = 82
    , parent = Nothing
    , duration = 1.007943203000
    , status = Success
    , start = 2025-09-04 08:26:07.432707688 UTC
    , finish = 2025-09-04 08:26:08.440650891 UTC
    , thread_cap_info = ("ThreadId 161", 3, False)}
Fail : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 22
  max duration 1.682176173000
  min duration 0.000006989000
  total durat. 1.728533126000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 2187
      , num_strict_rules = 729
      , num_top_rules = 0
      , num_weak_rules = 1458
      , alphabet_size = 81
      , total_length = 14580}
    , self = 88
    , parent = Nothing
    , duration = 1.682176173000
    , status = Fail
    , start = 2025-09-04 08:26:08.469993624 UTC
    , finish = 2025-09-04 08:26:10.152169797 UTC
    , thread_cap_info = ("ThreadId 169", 3, False)}
**************************************************
F                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                      , closure = Backward\n , start_strict_only = True\n , max_closure_length
F                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                      = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 1 ,
F                      num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 3 , total_length
F                      = 8} , self = 85 , parent = Nothing , duration = 2.406088376000 , status
F                      = Fail , start = 2025-09-04 08:26:07.105321446 UTC , finish = 2025-09-04
F                      08:26:09.511409822 UTC , thread_cap_info = ("ThreadId 111", 3, False)}
F                      
| F                    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F                    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F                    = 22 , num_strict_rules = 14 , num_top_rules = 14 , num_weak_rules = 8
| F                    , alphabet_size = 8 , total_length = 76} , self = 86 , parent = Nothing
| F                    , duration = 2.530419216000 , status = Fail , start = 2025-09-04 08:26:07.122146837
| F                    UTC , finish = 2025-09-04 08:26:09.652566053 UTC , thread_cap_info = ("ThreadId
| F                    121", 0, False)}
| F                    
| | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | F                  = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | F                  = 76} , self = 79 , parent = Nothing , duration = 0.163004693000 , status
| | F                  = Fail , start = 2025-09-04 08:26:07.14839196 UTC , finish = 2025-09-04
| | F                  08:26:07.311396653 UTC , thread_cap_info = ("ThreadId 128", 1, False)}
| | F                  
| | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | F                = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 3 , total_length
| | | F                = 28} , self = 77 , parent = Nothing , duration = 0.141530857000 , status
| | | F                = Fail , start = 2025-09-04 08:26:07.148406003 UTC , finish = 2025-09-04
| | | F                08:26:07.28993686 UTC , thread_cap_info = ("ThreadId 129", 1, False)}
| | | F                
| | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 22 , num_strict_rules
| | | | F              = 14 , num_top_rules = 14 , num_weak_rules = 8 , alphabet_size = 8 , total_length
| | | | F              = 76} , self = 78 , parent = Nothing , duration = 0.146895671000 , status
| | | | F              = Fail , start = 2025-09-04 08:26:07.148419476 UTC , finish = 2025-09-04
| | | | F              08:26:07.295315147 UTC , thread_cap_info = ("ThreadId 133", 1, False)}
| | | | F              
| | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | F            = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 3 , total_length
| | | | | F            = 28} , self = 75 , parent = Nothing , duration = 0.104809287000 , status
| | | | | F            = Fail , start = 2025-09-04 08:26:07.180417852 UTC , finish = 2025-09-04
| | | | | F            08:26:07.285227139 UTC , thread_cap_info = ("ThreadId 134", 1, False)}
| | | | | F            
| | | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | F          = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | F          = 126} , self = 83 , parent = Nothing , duration = 2.290816665000 , status
| | | | | | F          = Fail , start = 2025-09-04 08:26:07.190601602 UTC , finish = 2025-09-04
| | | | | | F          08:26:09.481418267 UTC , thread_cap_info = ("ThreadId 142", 0, False)}
| | | | | | F          
| | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | F        = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | | F        = 126} , self = 81 , parent = Nothing , duration = 1.103891717000 , status
| | | | | | | F        = Fail , start = 2025-09-04 08:26:07.190608086 UTC , finish = 2025-09-04
| | | | | | | F        08:26:08.294499803 UTC , thread_cap_info = ("ThreadId 144", 0, False)}
| | | | | | | F        
| | | | | F | |        
| | | | | E | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E | |        = False\n , verbose = False}" , input_size = Size { num_rules = 63 , num_strict_rules
| | | | | E | |        = 9 , num_top_rules = 0 , num_weak_rules = 54 , alphabet_size = 9 , total_length
| | | | | E | |        = 378} , self = 91 , parent = Nothing , duration = 3.165678990000 , status
| | | | | E | |        = Except "AsyncCancelled" , start = 2025-09-04 08:26:07.289920697 UTC ,
| | | | | E | |        finish = 2025-09-04 08:26:10.455599687 UTC , thread_cap_info = ("ThreadId
| | | | | E | |        148", 0, False)}
| | | | | E | |        
| | | F | | | |        
| | |   F | | |        
| | | S   | | |        Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | S   | | |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | S   | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | S   | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S   | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S   | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | S   | | |        , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | S   | | |        = 3 , total_length = 28} , self = 92 , parent = Nothing , duration = 4.185761650000
| | | S   | | |        , status = Success , start = 2025-09-04 08:26:07.295330776 UTC , finish
| | | S   | | |        = 2025-09-04 08:26:11.481092426 UTC , thread_cap_info = ("ThreadId 162",
| | | S   | | |        1, False)}
| | | S   | | |        
| | | | F | | |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 63 , num_strict_rules
| | | | F | | |        = 9 , num_top_rules = 0 , num_weak_rules = 54 , alphabet_size = 9 , total_length
| | | | F | | |        = 378} , self = 90 , parent = Nothing , duration = 2.997015588000 , status
| | | | F | | |        = Fail , start = 2025-09-04 08:26:07.311380312 UTC , finish = 2025-09-04
| | | | F | | |        08:26:10.3083959 UTC , thread_cap_info = ("ThreadId 150", 0, False)}
| | | | F | | |        
| | F | | | | |        
| | F | | | | |        Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | F | | | | |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | F | | | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | F | | | | |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | F | | | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | F | | | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | F | | | | |        , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | F | | | | |        = 3 , total_length = 28} , self = 80 , parent = Nothing , duration = 0.408824437000
| | F | | | | |        , status = Fail , start = 2025-09-04 08:26:07.311427286 UTC , finish =
| | F | | | | |        2025-09-04 08:26:07.720251723 UTC , thread_cap_info = ("ThreadId 163",
| | F | | | | |        1, False)}
| | F | | | | |        
| | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | F      = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | | | F      = 126} , self = 87 , parent = Nothing , duration = 2.603976979000 , status
| | | | | | | | F      = Fail , start = 2025-09-04 08:26:07.394929152 UTC , finish = 2025-09-04
| | | | | | | | F      08:26:09.998906131 UTC , thread_cap_info = ("ThreadId 159", 3, False)}
| | | | | | | | F      
| | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | | F    = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | | | | F    = 126} , self = 84 , parent = Nothing , duration = 2.081388085000 , status
| | | | | | | | | F    = Fail , start = 2025-09-04 08:26:07.411577528 UTC , finish = 2025-09-04
| | | | | | | | | F    08:26:09.492965613 UTC , thread_cap_info = ("ThreadId 160", 3, False)}
| | | | | | | | | F    
| | | | | | | | | | S  Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | | | | | | | | S  , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | | | | | | | | S  , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | | | | | | | | S  = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | | | | | | | | S  , cpf = True}" , input_size = Size { num_rules = 27 , num_strict_rules
| | | | | | | | | | S  = 9 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | | | | | S  = 126} , self = 82 , parent = Nothing , duration = 1.007943203000 , status
| | | | | | | | | | S  = Success , start = 2025-09-04 08:26:07.432707688 UTC , finish = 2025-09-04
| | | | | | | | | | S  08:26:08.440650891 UTC , thread_cap_info = ("ThreadId 161", 3, False)}
| | | | | | | | | | S  
| | F | | | | | | | |  
| | E | | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | E | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | | | | | |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | E | | | | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | E | | | | | | | |  = 3 , total_length = 28} , self = 94 , parent = Nothing , duration = 4.002951795000
| | E | | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:26:07.731020176
| | E | | | | | | | |  UTC , finish = 2025-09-04 08:26:11.733971971 UTC , thread_cap_info = ("ThreadId
| | E | | | | | | | |  165", 1, False)}
| | E | | | | | | | |  
| | | | | | | F | | |  
| | | | | | |   | | S  
| | | | | | | F | |    Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | | F | |    epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | | F | |    = Size { num_rules = 2187 , num_strict_rules = 729 , num_top_rules = 0
| | | | | | | F | |    , num_weak_rules = 1458 , alphabet_size = 81 , total_length = 14580} ,
| | | | | | | F | |    self = 88 , parent = Nothing , duration = 1.682176173000 , status = Fail
| | | | | | | F | |    , start = 2025-09-04 08:26:08.469993624 UTC , finish = 2025-09-04 08:26:10.152169797
| | | | | | | F | |    UTC , thread_cap_info = ("ThreadId 169", 3, False)}
| | | | | | | F | |    
| | | | | | F | | |    
| | | | | |   | | F    
F | | | | |   | |      
  F | | | |   | |      
    | | | |   | F      
    | | | |   F        
    | | F |            
    | |   E            
    | S                
    E                  
