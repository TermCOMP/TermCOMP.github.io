[Info] pool sizes (success) 11 seen 11 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 11 seen 11 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 512 length 1986
CNF 512 vars 1986 clauses
last 567 length 2208
CNF 567 vars 2208 clauses
last 12 length 33
CNF 12 vars 33 clauses
last 12 length 33
CNF 12 vars 33 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 81, clauses: 235
last 81 length 235
CNF 81 vars 235 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 197, clauses: 663
last 197 length 663
CNF 197 vars 663 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 81, clauses: 235, status: Unsatisfied, time: 0.010735921s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 197, clauses: 663, status: Unsatisfied, time: 0.000407458s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2788, clauses: 9817
last 2788 length 9817
CNF 2788 vars 9817 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2788, clauses: 9817, status: Unsatisfied, time: 0.054232273s
last 545 length 2105
last 593 length 2300
CNF 545 vars 2105 clauses
CNF 593 vars 2300 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3537, clauses: 12943
last 3537 length 12943
CNF 3537 vars 12943 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3537, clauses: 12943, status: Satisfied, time: 0.540051169s
**************************************************
summary
**************************************************
SRS with 3 strict rules and 12 weak rules on 7 letters       weights
SRS with 1 strict rules and 11 weak rules on 7 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 11 weak rules on 6 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [n, s] -> [s] {- Input 0 -}
  [o, s] -> [s] {- Input 1 -}
  [n, o, p] -> [o, n] {- Input 2 -}
  [t] ->= [t, c, n] {- Input 3 -}
  [p, s] ->= [s] {- Input 4 -}
  [o, n] ->= [n, o] {- Input 5 -}
  [p, n] ->= [m, p] {- Input 6 -}
  [p, m] ->= [m, p] {- Input 7 -}
  [o, m] ->= [n, o] {- Input 8 -}
  [n, p] ->= [p, n] {- Input 9 -}
  [c, p] ->= [p, c] {- Input 10 -}
  [c, m] ->= [m, c] {- Input 11 -}
  [c, n] ->= [n, c] {- Input 12 -}
  [c, o] ->= [o, c] {- Input 13 -}
  [c, o] ->= [o] {- Input 14 -}
reason
  (s, 0/1)
  (t, 0/1)
  (n, 0/1)
  (p, 1/1)
  (o, 1/1)
  (c, 0/1)
  (m, 0/1)
   property Termination
has value Just True
for SRS
  [n, s] -> [s] {- Input 0 -}
  [t] ->= [t, c, n] {- Input 3 -}
  [o, n] ->= [n, o] {- Input 5 -}
  [p, n] ->= [m, p] {- Input 6 -}
  [p, m] ->= [m, p] {- Input 7 -}
  [o, m] ->= [n, o] {- Input 8 -}
  [n, p] ->= [p, n] {- Input 9 -}
  [c, p] ->= [p, c] {- Input 10 -}
  [c, m] ->= [m, c] {- Input 11 -}
  [c, n] ->= [n, c] {- Input 12 -}
  [c, o] ->= [o, c] {- Input 13 -}
  [c, o] ->= [o] {- Input 14 -}
reason
  ( s
  , St (Corner  / 1 7 6 \
                | 0 0 1 |
                \ 0 0 1 /) )
  ( t
  , St (Corner  / 1 2 4 \
                | 0 0 1 |
                \ 0 0 1 /) )
  ( n
  , St (Corner  / 1 1 0 \
                | 0 3 0 |
                \ 0 0 1 /) )
  ( p
  , St (Corner  / 1 0 4 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( o
  , St (Corner  / 1 3 2 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( c
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( m
  , St (Corner  / 1 0 0 \
                | 0 2 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [t] ->= [t, c, n] {- Input 3 -}
  [o, n] ->= [n, o] {- Input 5 -}
  [p, n] ->= [m, p] {- Input 6 -}
  [p, m] ->= [m, p] {- Input 7 -}
  [o, m] ->= [n, o] {- Input 8 -}
  [n, p] ->= [p, n] {- Input 9 -}
  [c, p] ->= [p, c] {- Input 10 -}
  [c, m] ->= [m, c] {- Input 11 -}
  [c, n] ->= [n, c] {- Input 12 -}
  [c, o] ->= [o, c] {- Input 13 -}
  [c, o] ->= [o] {- Input 14 -}
reason
  no strict rules

**************************************************
skeleton: (3/12,7)\Weight(1/11,7)\Matrix{\Natural}{3}(0/11,6)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.158494802000
  min duration 1.158494802000
  total durat. 1.158494802000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 11
      , alphabet_size = 7
      , total_length = 46}
    , self = 67
    , parent = Nothing
    , duration = 1.158494802000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:48.382263205 UTC
    , finish = 2025-09-04 07:31:49.540758007 UTC
    , thread_cap_info = ("ThreadId 120", 2, False)}
Success : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.089419147000
  min duration 1.089419147000
  total durat. 1.089419147000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 11
      , alphabet_size = 7
      , total_length = 46}
    , self = 64
    , parent = Nothing
    , duration = 1.089419147000
    , status = Success
    , start = 2025-09-04 07:31:48.400958516 UTC
    , finish = 2025-09-04 07:31:49.490377663 UTC
    , thread_cap_info = ("ThreadId 121", 2, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 6
  max duration 1.185208737000
  min duration 0.000079208000
  total durat. 2.693599640000
  Info
    { what = "Weight\n  { modus = Pre (Or_Else Count (GLPK   { goal = Optimize, epsilon_digits = 6}))\n  , verbose = False\n  , tracing = False}"
    , input_size = Size
      { num_rules = 588
      , num_strict_rules = 49
      , num_top_rules = 0
      , num_weak_rules = 539
      , alphabet_size = 49
      , total_length = 3430}
    , self = 66
    , parent = Nothing
    , duration = 1.185208737000
    , status = Success
    , start = 2025-09-04 07:31:48.329491657 UTC
    , finish = 2025-09-04 07:31:49.514700394 UTC
    , thread_cap_info = ("ThreadId 118", 2, False)}
**************************************************
E          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E          = True}" , input_size = Size { num_rules = 11 , num_strict_rules = 11 ,
E          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 6 , total_length
E          = 43} , self = 45 , parent = Nothing , duration = 0.157048530000 , status
E          = Except "AsyncCancelled" , start = 2025-09-04 07:31:48.019692572 UTC ,
E          finish = 2025-09-04 07:31:48.176741102 UTC , thread_cap_info = ("ThreadId
E          20", 3, False)}
E          
| E        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| E        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| E        = Size { num_rules = 396 , num_strict_rules = 396 , num_top_rules = 0 ,
| E        num_weak_rules = 0 , alphabet_size = 36 , total_length = 2340} , self =
| E        51 , parent = Nothing , duration = 0.218704485000 , status = Except "AsyncCancelled"
| E        , start = 2025-09-04 07:31:48.035328473 UTC , finish = 2025-09-04 07:31:48.254032958
| E        UTC , thread_cap_info = ("ThreadId 55", 3, False)}
| E        
| | F      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F      = 11 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 10 ,
| | F      alphabet_size = 6 , total_length = 43} , self = 50 , parent = Nothing ,
| | F      duration = 0.148008723000 , status = Fail , start = 2025-09-04 07:31:48.089129687
| | F      UTC , finish = 2025-09-04 07:31:48.23713841 UTC , thread_cap_info = ("ThreadId
| | F      85", 2, False)}
| | F      
E | |      
S | |      Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
S | |      epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
S | |      = Size { num_rules = 588 , num_strict_rules = 49 , num_top_rules = 0 ,
S | |      num_weak_rules = 539 , alphabet_size = 49 , total_length = 3430} , self
S | |      = 55 , parent = Nothing , duration = 0.736343442000 , status = Success
S | |      , start = 2025-09-04 07:31:48.176915036 UTC , finish = 2025-09-04 07:31:48.913258478
S | |      UTC , thread_cap_info = ("ThreadId 103", 3, False)}
S | |      
| | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | F    = 1 , num_top_rules = 0 , num_weak_rules = 11 , alphabet_size = 7 , total_length
| | | F    = 46} , self = 53 , parent = Nothing , duration = 0.143678347000 , status
| | | F    = Fail , start = 2025-09-04 07:31:48.22078775 UTC , finish = 2025-09-04
| | | F    07:31:48.364466097 UTC , thread_cap_info = ("ThreadId 110", 2, False)}
| | | F    
| | | | S  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | S  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | S  = Size { num_rules = 588 , num_strict_rules = 49 , num_top_rules = 0 ,
| | | | S  num_weak_rules = 539 , alphabet_size = 49 , total_length = 3430} , self
| | | | S  = 57 , parent = Nothing , duration = 0.756270907000 , status = Success
| | | | S  , start = 2025-09-04 07:31:48.22085763 UTC , finish = 2025-09-04 07:31:48.977128537
| | | | S  UTC , thread_cap_info = ("ThreadId 115", 3, False)}
| | | | S  
| | F | |  
| | F | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F | |  = 1 , num_top_rules = 0 , num_weak_rules = 11 , alphabet_size = 7 , total_length
| | F | |  = 46} , self = 54 , parent = Nothing , duration = 0.127232511000 , status
| | F | |  = Fail , start = 2025-09-04 07:31:48.241383174 UTC , finish = 2025-09-04
| | F | |  07:31:48.368615685 UTC , thread_cap_info = ("ThreadId 111", 2, False)}
| | F | |  
| E | | |  
| S | | |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| S | | |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| S | | |  = Size { num_rules = 588 , num_strict_rules = 49 , num_top_rules = 0 ,
| S | | |  num_weak_rules = 539 , alphabet_size = 49 , total_length = 3430} , self
| S | | |  = 66 , parent = Nothing , duration = 1.185208737000 , status = Success
| S | | |  , start = 2025-09-04 07:31:48.329491657 UTC , finish = 2025-09-04 07:31:49.514700394
| S | | |  UTC , thread_cap_info = ("ThreadId 118", 2, False)}
| S | | |  
| | | F |  
| | F   |  
| | E   |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | E   |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E   |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E   |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E   |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E   |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | E   |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 11 , alphabet_size
| | E   |  = 7 , total_length = 46} , self = 67 , parent = Nothing , duration = 1.158494802000
| | E   |  , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:48.382263205
| | E   |  UTC , finish = 2025-09-04 07:31:49.540758007 UTC , thread_cap_info = ("ThreadId
| | E   |  120", 2, False)}
| | E   |  
| | | S |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | S |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | S |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | S |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | S |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 11 , alphabet_size
| | | S |  = 7 , total_length = 46} , self = 64 , parent = Nothing , duration = 1.089419147000
| | | S |  , status = Success , start = 2025-09-04 07:31:48.400958516 UTC , finish
| | | S |  = 2025-09-04 07:31:49.490377663 UTC , thread_cap_info = ("ThreadId 121",
| | | S |  2, False)}
| | | S |  
S | | | |  
  | | | S  
F | | |    Info { what = "Unlabel\n { accept_null_strict = True\n , produce_null_strict
F | | |    = False\n , verbose = False\n , tracing = False}" , input_size = Size {
F | | |    num_rules = 412 , num_strict_rules = 28 , num_top_rules = 0 , num_weak_rules
F | | |    = 384 , alphabet_size = 48 , total_length = 2402} , self = 58 , parent
F | | |    = Nothing , duration = 0.103476788000 , status = Fail , start = 2025-09-04
F | | |    07:31:48.983837461 UTC , finish = 2025-09-04 07:31:49.087314249 UTC , thread_cap_info
F | | |    = ("ThreadId 124", 3, False)}
F | | |    
| | | | F  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | F  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | F  = Size { num_rules = 412 , num_strict_rules = 28 , num_top_rules = 0 ,
| | | | F  num_weak_rules = 384 , alphabet_size = 48 , total_length = 2402} , self
| | | | F  = 59 , parent = Nothing , duration = 0.400742171000 , status = Fail , start
| | | | F  = 2025-09-04 07:31:49.023831601 UTC , finish = 2025-09-04 07:31:49.424573772
| | | | F  UTC , thread_cap_info = ("ThreadId 125", 3, False)}
| | | | F  
F | | | |  
  | | | F  
  | | S    
  S |      
    E      
