last 1300 length 5345
last 1312 length 5297
CNF 1300 vars 5345 clauses
last 770 length 3181
last 786 length 3171
CNF 1312 vars 5297 clauses
CNF 770 vars 3181 clauses
CNF 786 vars 3171 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2264, clauses: 8121
last 2264 length 8121
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3790, clauses: 13963
last 3790 length 13963
CNF 2264 vars 8121 clauses
CNF 3790 vars 13963 clauses
last 9687 length 41384
last 8476 length 35690
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3790, clauses: 13963, status: Satisfied, time: 0.15935527s
CNF 9687 vars 41384 clauses
CNF 8476 vars 35690 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2264, clauses: 8121, status: Satisfied, time: 0.164956171s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 8666, clauses: 36223
last 8666 length 36223
last 909 length 3715
CNF 909 vars 3715 clauses
last 1180 length 4827
CNF 1180 vars 4827 clauses
last 1164 length 4693
last 821 length 3309
CNF 1164 vars 4693 clauses
CNF 821 vars 3309 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2486, clauses: 9054
last 2486 length 9054
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3486, clauses: 12758
last 9370 length 39855
CNF 2486 vars 9054 clauses
last 10366 length 44347
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9008, clauses: 37659
last 3486 length 12758
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11215, clauses: 46836
last 13164 length 56333
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2486, clauses: 9054, status: Satisfied, time: 0.493186881s
last 13704 length 58483
CNF 9370 vars 39855 clauses
last 9008 length 37659
last 11215 length 46836
CNF 10366 vars 44347 clauses
CNF 3486 vars 12758 clauses
CNF 13704 vars 58483 clauses
CNF 13164 vars 56333 clauses
**************************************************
summary
**************************************************
SRS with 2 strict rules and 3 weak rules on 3 letters       strictify
SRS with 5 rules on 3 letters       DP
SRS with 9 strict rules and 5 weak rules on 5 letters       weights
SRS with 3 strict rules and 5 weak rules on 5 letters       EDG
2 sub-proofs
  1 SRS with 1 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 0 strict rules and 5 weak rules on 3 letters       EDG

  2 SRS with 2 strict rules and 5 weak rules on 4 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 1 strict rules and 5 weak rules on 4 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, c, b] -> [b, a, c] {- Input 0 -}
  [b, a, c] -> [b, c, a] {- Input 1 -}
  [a, c, c] ->= [c, c, b] {- Input 2 -}
  [a, c, a] ->= [a, b, b] {- Input 3 -}
  [b, b, b] ->= [c, c, a] {- Input 4 -}
reason
  strictify
   property Termination
has value Just True
for SRS
  [b, c, b] -> [b, a, c] {- Input 0 -}
  [b, a, c] -> [b, c, a] {- Input 1 -}
  [a, c, c] -> [c, c, b] {- Strictified (Input 2) -}
  [a, c, a] -> [a, b, b] {- Strictified (Input 3) -}
  [b, b, b] -> [c, c, a] {- Strictified (Input 4) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [b, c, b] ->= [b, a, c] {- DP Nontop (Input 0) -}
  [b, a, c] ->= [b, c, a] {- DP Nontop (Input 1) -}
  [a, c, c] ->= [c, c, b] {- DP Nontop (Strictified (Input 2)) -}
  [a, c, a] ->= [a, b, b] {- DP Nontop (Strictified (Input 3)) -}
  [b, b, b] ->= [c, c, a] {- DP Nontop (Strictified (Input 4)) -}
  [a#, c, a] |-> [a#, b, b] {- DP (Top 0) (Strictified (Input 3)) -}
  [a#, c, a] |-> [b#] {- DP (Top 2) (Strictified (Input 3)) -}
  [a#, c, a] |-> [b#, b] {- DP (Top 1) (Strictified (Input 3)) -}
  [a#, c, c] |-> [b#] {- DP (Top 2) (Strictified (Input 2)) -}
  [b#, a, c] |-> [a#] {- DP (Top 2) (Input 1) -}
  [b#, a, c] |-> [b#, c, a] {- DP (Top 0) (Input 1) -}
  [b#, b, b] |-> [a#] {- DP (Top 2) (Strictified (Input 4)) -}
  [b#, c, b] |-> [a#, c] {- DP (Top 1) (Input 0) -}
  [b#, c, b] |-> [b#, a, c] {- DP (Top 0) (Input 0) -}
reason
  (a, 1/1)
  (b, 1/1)
  (c, 1/1)
  (a#, 0/1)
  (b#, 0/1)
   property Termination
has value Just True
for SRS
  [b, c, b] ->= [b, a, c] {- DP Nontop (Input 0) -}
  [b, a, c] ->= [b, c, a] {- DP Nontop (Input 1) -}
  [a, c, c] ->= [c, c, b] {- DP Nontop (Strictified (Input 2)) -}
  [a, c, a] ->= [a, b, b] {- DP Nontop (Strictified (Input 3)) -}
  [b, b, b] ->= [c, c, a] {- DP Nontop (Strictified (Input 4)) -}
  [a#, c, a] |-> [a#, b, b] {- DP (Top 0) (Strictified (Input 3)) -}
  [b#, a, c] |-> [b#, c, a] {- DP (Top 0) (Input 1) -}
  [b#, c, b] |-> [b#, a, c] {- DP (Top 0) (Input 0) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, c, a] |-> [a#, b, b] {- DP (Top 0) (Strictified (Input 3)) -}
  [b, c, b] ->= [b, a, c] {- DP Nontop (Input 0) -}
  [b, a, c] ->= [b, c, a] {- DP Nontop (Input 1) -}
  [a, c, c] ->= [c, c, b] {- DP Nontop (Strictified (Input 2)) -}
  [a, c, a] ->= [a, b, b] {- DP Nontop (Strictified (Input 3)) -}
  [b, b, b] ->= [c, c, a] {- DP Nontop (Strictified (Input 4)) -}
reason
  ( a
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  0A  0A  - \
        | -3A -3A -3A - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( c
  , Wk  / 0A  0A  0A  - \
        | -3A -3A 0A  - |
        | -3A -3A -3A - |
        \ -   -   -   - / )
  ( a#
  , Wk  / 7A 8A 10A - \
        | 7A 8A 10A - |
        | 7A 8A 10A - |
        \ -  -  -   - / )
   property Termination
has value Just True
for SRS
  [b, c, b] ->= [b, a, c] {- DP Nontop (Input 0) -}
  [b, a, c] ->= [b, c, a] {- DP Nontop (Input 1) -}
  [a, c, c] ->= [c, c, b] {- DP Nontop (Strictified (Input 2)) -}
  [a, c, a] ->= [a, b, b] {- DP Nontop (Strictified (Input 3)) -}
  [b, b, b] ->= [c, c, a] {- DP Nontop (Strictified (Input 4)) -}
reason
  EDG

property Termination
has value Just True
for SRS
  [b#, a, c] |-> [b#, c, a] {- DP (Top 0) (Input 1) -}
  [b#, c, b] |-> [b#, a, c] {- DP (Top 0) (Input 0) -}
  [b, c, b] ->= [b, a, c] {- DP Nontop (Input 0) -}
  [b, a, c] ->= [b, c, a] {- DP Nontop (Input 1) -}
  [a, c, c] ->= [c, c, b] {- DP Nontop (Strictified (Input 2)) -}
  [a, c, a] ->= [a, b, b] {- DP Nontop (Strictified (Input 3)) -}
  [b, b, b] ->= [c, c, a] {- DP Nontop (Strictified (Input 4)) -}
reason
  ( a
  , Wk  / 3A 3A 3A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 3A 3A 3A - \
        | 3A 3A 3A - |
        | 3A 3A 3A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 3A 3A 3A - \
        | 0A 0A 3A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 11A 12A 13A - \
        | 11A 12A 13A - |
        | 11A 12A 13A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [b#, a, c] |-> [b#, c, a] {- DP (Top 0) (Input 1) -}
  [b, c, b] ->= [b, a, c] {- DP Nontop (Input 0) -}
  [b, a, c] ->= [b, c, a] {- DP Nontop (Input 1) -}
  [a, c, c] ->= [c, c, b] {- DP Nontop (Strictified (Input 2)) -}
  [a, c, a] ->= [a, b, b] {- DP Nontop (Strictified (Input 3)) -}
  [b, b, b] ->= [c, c, a] {- DP Nontop (Strictified (Input 4)) -}
reason
  EDG

**************************************************
skeleton: (2/3,3)\Strictify(5,3)\Deepee(9/5,5)\Weight(3/5,5)\EDG[(1/5,4)\Matrix{\Arctic}{3}(0/5,3)\EDG[],(2/5,4)\Matrix{\Arctic}{3}(1/5,4)\EDG[]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3486, clauses: 12758, status: Satisfied, time: 0.282804359s
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 11215 vars 46836 clauses

Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 1.093900407000
  min duration 0.047937705000
  total durat. 1.827774098000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 48
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 45
      , alphabet_size = 10
      , total_length = 384}
    , self = 87
    , parent = Nothing
    , duration = 1.093900407000
    , status = Fail
    , start = 2025-09-04 08:21:33.58074108 UTC
    , finish = 2025-09-04 08:21:34.674641487 UTC
    , thread_cap_info = ("ThreadId 97", 2, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 3
  max duration 0.429502025000
  min duration 0.285169203000
  total durat. 1.112137308000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 0.563551180000
  min duration 0.262597926000
  total durat. 1.108391631000
Except "AsyncCancelled" : "Simple (Config\n { tracing = False\n , verbose = False\n , closure = Backward\n , start_strict_only = True\n , max_closure_length = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs = Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just 1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally = True})"
  total number 1
  max duration 1.126716619000
  min duration 1.126716619000
  total durat. 1.126716619000
  Info
    { what = "Simple (Config\n  { tracing = False\n  , verbose = False\n  , closure = Backward\n  , start_strict_only = True\n  , max_closure_length = Nothing\n  , max_closure_width = (Just 15)\n  , max_closure_width_lhs = Nothing\n  , max_closure_width_rhs = Nothing\n  , max_inner_children = (Just 8)\n  , max_outer_children = (Just 2)\n  , intermediates = All\n  , priority = (Linear [ (-7.0, Width_lhs)\n                       , (-1.0, Width_rhs)\n                       , (7.0, Log2 Steps) ])\n  , string_implementation = (ByteString Plain)\n  , max_seen_size = (Just 1000000)\n  , max_todo_size = Nothing\n  , print_sizes = False\n  , print_sizes_finally = True})"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 5
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 3
      , total_length = 30}
    , self = 86
    , parent = Nothing
    , duration = 1.126716619000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:21:33.542268712 UTC
    , finish = 2025-09-04 08:21:34.668985331 UTC
    , thread_cap_info = ("ThreadId 58", 0, False)}
**************************************************
F                  Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                  , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                  = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                  Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                  8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                  = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                  ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                  1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                  = True})" , input_size = Size { num_rules = 5 , num_strict_rules = 5 ,
F                  num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                  = 30} , self = 58 , parent = Nothing , duration = 0.113770986000 , status
F                  = Fail , start = 2025-09-04 08:21:33.530283768 UTC , finish = 2025-09-04
F                  08:21:33.644054754 UTC , thread_cap_info = ("ThreadId 57", 0, False)}
F                  
| F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| F                = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| F                = 36} , self = 57 , parent = Nothing , duration = 0.107353826000 , status
| F                = Fail , start = 2025-09-04 08:21:33.536088565 UTC , finish = 2025-09-04
| F                08:21:33.643442391 UTC , thread_cap_info = ("ThreadId 68", 1, False)}
| F                
| | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F              = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
| | F              = 45 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | F              = 360} , self = 63 , parent = Nothing , duration = 0.399268376000 , status
| | F              = Fail , start = 2025-09-04 08:21:33.537300383 UTC , finish = 2025-09-04
| | F              08:21:33.936568759 UTC , thread_cap_info = ("ThreadId 88", 3, False)}
| | F              
| | | E            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | E            , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | E            = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | E            Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | E            8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | E            = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | E            ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | E            1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | E            = True})" , input_size = Size { num_rules = 5 , num_strict_rules = 5 ,
| | | E            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | E            = 30} , self = 86 , parent = Nothing , duration = 1.126716619000 , status
| | | E            = Except "AsyncCancelled" , start = 2025-09-04 08:21:33.542268712 UTC ,
| | | E            finish = 2025-09-04 08:21:34.668985331 UTC , thread_cap_info = ("ThreadId
| | | E            58", 0, False)}
| | | E            
| | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 45 , num_strict_rules
| | | | F          = 45 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F          = 360} , self = 65 , parent = Nothing , duration = 0.445876046000 , status
| | | | F          = Fail , start = 2025-09-04 08:21:33.542275438 UTC , finish = 2025-09-04
| | | | F          08:21:33.988151484 UTC , thread_cap_info = ("ThreadId 90", 3, False)}
| | | | F          
| | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 48 , num_strict_rules
| | | | | F        = 3 , num_top_rules = 3 , num_weak_rules = 45 , alphabet_size = 10 , total_length
| | | | | F        = 384} , self = 87 , parent = Nothing , duration = 1.093900407000 , status
| | | | | F        = Fail , start = 2025-09-04 08:21:33.58074108 UTC , finish = 2025-09-04
| | | | | F        08:21:34.674641487 UTC , thread_cap_info = ("ThreadId 97", 2, False)}
| | | | | F        
| | | | | | S      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | S      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | S      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | S      = 10 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 ,
| | | | | | S      alphabet_size = 6 , total_length = 60} , self = 60 , parent = Nothing ,
| | | | | | S      duration = 0.282242525000 , status = Success , start = 2025-09-04 08:21:33.599422308
| | | | | | S      UTC , finish = 2025-09-04 08:21:33.881664833 UTC , thread_cap_info = ("ThreadId
| | | | | | S      101", 1, False)}
| | | | | | S      
| | | | | | | E    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | E    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | E    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | E    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | E    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | E    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | | | | | | E    , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 5 , alphabet_size
| | | | | | | E    = 6 , total_length = 60} , self = 66 , parent = Nothing , duration = 0.397466080000
| | | | | | | E    , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:33.60305069
| | | | | | | E    UTC , finish = 2025-09-04 08:21:34.00051677 UTC , thread_cap_info = ("ThreadId
| | | | | | | E    102", 1, False)}
| | | | | | | E    
| F | | | | | |    
F   | | | | | |    
E   | | | | | |    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E   | | | | | |    , closure = Forward\n , start_strict_only = True\n , max_closure_length
E   | | | | | |    = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
E   | | | | | |    , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
E   | | | | | |    max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
E   | | | | | |    [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
E   | | | | | |    string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
E   | | | | | |    , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E   | | | | | |    = True})" , input_size = Size { num_rules = 5 , num_strict_rules = 5 ,
E   | | | | | |    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E   | | | | | |    = 30} , self = 85 , parent = Nothing , duration = 0.999995004000 , status
E   | | | | | |    = Except "AsyncCancelled" , start = 2025-09-04 08:21:33.660734592 UTC ,
E   | | | | | |    finish = 2025-09-04 08:21:34.660729596 UTC , thread_cap_info = ("ThreadId
E   | | | | | |    106", 0, False)}
E   | | | | | |    
| S | | | | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S | | | | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S | | | | | |    = 6 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| S | | | | | |    = 4 , total_length = 36} , self = 62 , parent = Nothing , duration = 0.262597926000
| S | | | | | |    , status = Success , start = 2025-09-04 08:21:33.660735814 UTC , finish
| S | | | | | |    = 2025-09-04 08:21:33.92333374 UTC , thread_cap_info = ("ThreadId 104",
| S | | | | | |    1, False)}
| S | | | | | |    
| | | | | | | | E  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | E  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | E  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | E  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | E  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | E  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | | | E  , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 5 , alphabet_size
| | | | | | | | E  = 4 , total_length = 36} , self = 67 , parent = Nothing , duration = 0.285169203000
| | | | | | | | E  , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:33.716810833
| | | | | | | | E  UTC , finish = 2025-09-04 08:21:34.001980036 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E  109", 1, False)}
| | | | | | | | E  
| | | | | | S | |  
| S | | | |   | |  
|   F | | |   | |  
|     | F |   | |  
|     |   |   E |  
|     |   |     E  
| F   |   |        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F   |   |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   |   |        = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| F   |   |        = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size = 4 , total_length
| F   |   |        = 42} , self = 79 , parent = Nothing , duration = 0.114465953000 , status
| F   |   |        = Fail , start = 2025-09-04 08:21:34.014643207 UTC , finish = 2025-09-04
| F   |   |        08:21:34.12910916 UTC , thread_cap_info = ("ThreadId 123", 1, False)}
| F   |   |        
| | S |   |        Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S |   |        [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S |   |        , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S |   |        = 7 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| | S |   |        = 4 , total_length = 42} , self = 80 , parent = Nothing , duration = 0.563551180000
| | S |   |        , status = Success , start = 2025-09-04 08:21:34.082085278 UTC , finish
| | S |   |        = 2025-09-04 08:21:34.645636458 UTC , thread_cap_info = ("ThreadId 133",
| | S |   |        1, False)}
| | S |   |        
| F | |   |        
| E | |   |        Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| E | |   |        = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E | |   |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E | |   |        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E | |   |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E | |   |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| E | |   |        , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 5 , alphabet_size
| E | |   |        = 4 , total_length = 42} , self = 82 , parent = Nothing , duration = 0.429502025000
| E | |   |        , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:34.21768027
| E | |   |        UTC , finish = 2025-09-04 08:21:34.647182295 UTC , thread_cap_info = ("ThreadId
| E | |   |        135", 1, False)}
| E | |   |        
| | S |   |        
| E   |   |        
E     |   |        
      E   |        
          F        
