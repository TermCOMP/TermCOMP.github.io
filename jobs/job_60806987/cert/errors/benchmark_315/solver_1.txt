[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 425 length 2175
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
CNF 425 vars 2175 clauses
last 310 length 1465
CNF 310 vars 1465 clauses
last 741 length 3662
CNF 741 vars 3662 clauses
last 669 length 3276
last 1394 length 7230
CNF 669 vars 3276 clauses
CNF 1394 vars 7230 clauses
last 1098 length 6706
last 1626 length 9321
last 1000 length 5208
last 1150 length 5557
last 1040 length 5437
last 931 length 4944
last 958 length 4525
CNF 1098 vars 6706 clauses
CNF 1626 vars 9321 clauses
last 302 length 1353
last 310 length 1429
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3040, clauses: 11443
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4259, clauses: 16233
CNF 1000 vars 5208 clauses
last 1724 length 9169
last 1764 length 8348
CNF 1150 vars 5557 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6592, clauses: 27345
last 931 length 4944
last 958 length 4525
CNF 1040 vars 5437 clauses
CNF 931 vars 4944 clauses
CNF 958 vars 4525 clauses
last 14114 length 82443
CNF 302 vars 1353 clauses
CNF 310 vars 1429 clauses
last 3040 length 11443
last 4259 length 16233
CNF 1724 vars 9169 clauses
CNF 1764 vars 8348 clauses
last 6592 length 27345
CNF 958 vars 4525 clauses
CNF 931 vars 4944 clauses
last 17546 length 122128
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1280, clauses: 5010
CNF 3040 vars 11443 clauses
CNF 14114 vars 82443 clauses
CNF 4259 vars 16233 clauses
CNF 6592 vars 27345 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9412, clauses: 39189
CNF 17546 vars 122128 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2198, clauses: 8686
last 1280 length 5010
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3040, clauses: 11443, status: Unsatisfied, time: 0.46470568s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4259, clauses: 16233, status: Unsatisfied, time: 0.555083665s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6592, clauses: 27345, status: Unsatisfied, time: 0.50358423s
last 9412 length 39189
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16166, clauses: 67240
last 2198 length 8686
CNF 1280 vars 5010 clauses
last 16166 length 67240
CNF 9412 vars 39189 clauses
CNF 2198 vars 8686 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1280, clauses: 5010, status: Unsatisfied, time: 0.226407187s
CNF 16166 vars 67240 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2198, clauses: 8686, status: Satisfied, time: 0.092814755s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9412, clauses: 39189, status: Satisfied, time: 0.115249772s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 1 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 4 weak rules on 4 letters       weights
SRS with 2 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 3 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, a] -> [a, b] {- Input 0 -}
  [] ->= [a, a, b, a] {- Input 1 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, b], [b, a], [a, a]] -> [ [a, a] , [a, b] , [ b , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [a, a] , [a, b] , [ b , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] -> [ [b, a] , [a, b] , [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [b, a] , [a, b] , [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 1/1)
   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [a, a] , [a, b] , [ b , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [b, a] , [a, b] , [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 0 0 \
                | 0 5 2 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 4 3 \
                | 0 1 1 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[a, a]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
reason
  no strict rules

**************************************************
skeleton: (1/1,2)\TileAllAll{2}(4/4,4)\Weight(2/3,4)\Matrix{\Natural}{3}(0/3,3)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 0.984587403000
  min duration 0.018360415000
  total durat. 5.533560335000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 1.100989346000
  min duration 0.014206363000
  total durat. 5.903142372000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 40
      , num_strict_rules = 8
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 13
      , total_length = 336}
    , self = 104
    , parent = Nothing
    , duration = 1.100989346000
    , status = Fail
    , start = 2025-09-04 08:23:42.388596387 UTC
    , finish = 2025-09-04 08:23:43.489585733 UTC
    , thread_cap_info = ("ThreadId 181", 0, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.276747532000
  min duration 1.276747532000
  total durat. 1.276747532000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 52}
    , self = 103
    , parent = Nothing
    , duration = 1.276747532000
    , status = Fail
    , start = 2025-09-04 08:23:42.189460086 UTC
    , finish = 2025-09-04 08:23:43.466207618 UTC
    , thread_cap_info = ("ThreadId 132", 1, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.300182617000
  min duration 1.241814548000
  total durat. 2.541997165000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 18
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 3
      , alphabet_size = 6
      , total_length = 78}
    , self = 102
    , parent = Nothing
    , duration = 1.241814548000
    , status = Fail
    , start = 2025-09-04 08:23:42.22438902 UTC
    , finish = 2025-09-04 08:23:43.466203568 UTC
    , thread_cap_info = ("ThreadId 142", 3, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 10
      , num_top_rules = 10
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 52}
    , self = 101
    , parent = Nothing
    , duration = 1.300182617000
    , status = Fail
    , start = 2025-09-04 08:23:42.165194777 UTC
    , finish = 2025-09-04 08:23:43.465377394 UTC
    , thread_cap_info = ("ThreadId 124", 1, False)}
**************************************************
F                                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                                      = True}" , input_size = Size { num_rules = 2 , num_strict_rules = 1 , num_top_rules
F                                      = 0 , num_weak_rules = 1 , alphabet_size = 2 , total_length = 10} , self
F                                      = 86 , parent = Nothing , duration = 0.263437409000 , status = Fail , start
F                                      = 2025-09-04 08:23:42.141984134 UTC , finish = 2025-09-04 08:23:42.405421543
F                                      UTC , thread_cap_info = ("ThreadId 86", 0, False)}
F                                      
| F                                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                                    = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| F                                    = 15 , num_top_rules = 15 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| F                                    = 78} , self = 88 , parent = Nothing , duration = 0.611938574000 , status
| F                                    = Fail , start = 2025-09-04 08:23:42.142453192 UTC , finish = 2025-09-04
| F                                    08:23:42.754391766 UTC , thread_cap_info = ("ThreadId 104", 3, False)}
| F                                    
| | F                                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                                  = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | F                                  = 10 , num_top_rules = 10 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | F                                  = 52} , self = 87 , parent = Nothing , duration = 0.535148660000 , status
| | F                                  = Fail , start = 2025-09-04 08:23:42.156990792 UTC , finish = 2025-09-04
| | F                                  08:23:42.692139452 UTC , thread_cap_info = ("ThreadId 121", 2, False)}
| | F                                  
| | | F                                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F                                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F                                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F                                = 12 , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 2
| | | F                                , alphabet_size = 4 , total_length = 52} , self = 101 , parent = Nothing
| | | F                                , duration = 1.300182617000 , status = Fail , start = 2025-09-04 08:23:42.165194777
| | | F                                UTC , finish = 2025-09-04 08:23:43.465377394 UTC , thread_cap_info = ("ThreadId
| | | F                                124", 1, False)}
| | | F                                
| | | | F                              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                              = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | F                              = 10 , num_top_rules = 10 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | F                              = 52} , self = 89 , parent = Nothing , duration = 0.683114379000 , status
| | | | F                              = Fail , start = 2025-09-04 08:23:42.168592551 UTC , finish = 2025-09-04
| | | | F                              08:23:42.85170693 UTC , thread_cap_info = ("ThreadId 120", 2, False)}
| | | | F                              
| | | | | F                            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | F                            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | F                            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | F                            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | F                            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | F                            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | | | F                            , num_strict_rules = 10 , num_top_rules = 10 , num_weak_rules = 2 , alphabet_size
| | | | | F                            = 4 , total_length = 52} , self = 103 , parent = Nothing , duration = 1.276747532000
| | | | | F                            , status = Fail , start = 2025-09-04 08:23:42.189460086 UTC , finish =
| | | | | F                            2025-09-04 08:23:43.466207618 UTC , thread_cap_info = ("ThreadId 132",
| | | | | F                            1, False)}
| | | | | F                            
| | | | | | F                          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F                          = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | | F                          = 15 , num_top_rules = 15 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | | | F                          = 78} , self = 90 , parent = Nothing , duration = 0.703521650000 , status
| | | | | | F                          = Fail , start = 2025-09-04 08:23:42.189519147 UTC , finish = 2025-09-04
| | | | | | F                          08:23:42.893040797 UTC , thread_cap_info = ("ThreadId 128", 0, False)}
| | | | | | F                          
| | | | | | | F                        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F                        = False\n , verbose = False}" , input_size = Size { num_rules = 18 , num_strict_rules
| | | | | | | F                        = 15 , num_top_rules = 15 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | | | | F                        = 78} , self = 91 , parent = Nothing , duration = 0.708857897000 , status
| | | | | | | F                        = Fail , start = 2025-09-04 08:23:42.201214083 UTC , finish = 2025-09-04
| | | | | | | F                        08:23:42.91007198 UTC , thread_cap_info = ("ThreadId 129", 3, False)}
| | | | | | | F                        
| | | | | | | | F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | F                      = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | F                      = 34} , self = 93 , parent = Nothing , duration = 0.709611037000 , status
| | | | | | | | F                      = Fail , start = 2025-09-04 08:23:42.201930873 UTC , finish = 2025-09-04
| | | | | | | | F                      08:23:42.91154191 UTC , thread_cap_info = ("ThreadId 137", 2, False)}
| | | | | | | | F                      
| | | | | | | | | F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | | F                    = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | | F                    = 34} , self = 92 , parent = Nothing , duration = 0.695097372000 , status
| | | | | | | | | F                    = Fail , start = 2025-09-04 08:23:42.216407885 UTC , finish = 2025-09-04
| | | | | | | | | F                    08:23:42.911505257 UTC , thread_cap_info = ("ThreadId 139", 2, False)}
| | | | | | | | | F                    
| | | | | | | | | | F                  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | | | | F                  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | | | | F                  = 18 , num_strict_rules = 15 , num_top_rules = 15 , num_weak_rules = 3
| | | | | | | | | | F                  , alphabet_size = 6 , total_length = 78} , self = 102 , parent = Nothing
| | | | | | | | | | F                  , duration = 1.241814548000 , status = Fail , start = 2025-09-04 08:23:42.22438902
| | | | | | | | | | F                  UTC , finish = 2025-09-04 08:23:43.466203568 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | F                  142", 3, False)}
| | | | | | | | | | F                  
| | | | | | | | | | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | | | F                = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | | | | F                = 64} , self = 97 , parent = Nothing , duration = 0.865175485000 , status
| | | | | | | | | | | F                = Fail , start = 2025-09-04 08:23:42.242771962 UTC , finish = 2025-09-04
| | | | | | | | | | | F                08:23:43.107947447 UTC , thread_cap_info = ("ThreadId 157", 3, False)}
| | | | | | | | | | | F                
| | | | | | | | | | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | | | | F              = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | | | | | F              = 64} , self = 96 , parent = Nothing , duration = 0.757678861000 , status
| | | | | | | | | | | | F              = Fail , start = 2025-09-04 08:23:42.244501729 UTC , finish = 2025-09-04
| | | | | | | | | | | | F              08:23:43.00218059 UTC , thread_cap_info = ("ThreadId 159", 3, False)}
| | | | | | | | | | | | F              
| | | | | | | | | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | | | | | | | | | F            = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | F            = 18} , self = 95 , parent = Nothing , duration = 0.659913826000 , status
| | | | | | | | | | | | | F            = Fail , start = 2025-09-04 08:23:42.26045499 UTC , finish = 2025-09-04
| | | | | | | | | | | | | F            08:23:42.920368816 UTC , thread_cap_info = ("ThreadId 149", 2, False)}
| | | | | | | | | | | | | F            
| | | | | | | | | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | | | | | | | | | | F          = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 2 , total_length
| | | | | | | | | | | | | | F          = 18} , self = 94 , parent = Nothing , duration = 0.655315694000 , status
| | | | | | | | | | | | | | F          = Fail , start = 2025-09-04 08:23:42.263980659 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | F          08:23:42.919296353 UTC , thread_cap_info = ("ThreadId 150", 2, False)}
| | | | | | | | | | | | | | F          
| | | | | | | | | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | | | | | | | | F        = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | | F        = 34} , self = 98 , parent = Nothing , duration = 0.787523568000 , status
| | | | | | | | | | | | | | | F        = Fail , start = 2025-09-04 08:23:42.343894576 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | F        08:23:43.131418144 UTC , thread_cap_info = ("ThreadId 174", 0, False)}
| | | | | | | | | | | | | | | F        
| | | | | | | | | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | | | | | | | | | F      = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | | | F      = 34} , self = 99 , parent = Nothing , duration = 0.806418662000 , status
| | | | | | | | | | | | | | | | F      = Fail , start = 2025-09-04 08:23:42.34862332 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | | F      08:23:43.155041982 UTC , thread_cap_info = ("ThreadId 175", 0, False)}
| | | | | | | | | | | | | | | | F      
| | | | | | | | | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 40 , num_strict_rules
| | | | | | | | | | | | | | | | | F    = 8 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 13 , total_length
| | | | | | | | | | | | | | | | | F    = 336} , self = 100 , parent = Nothing , duration = 0.984587403000 , status
| | | | | | | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:23:42.384351135 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | | | F    08:23:43.368938538 UTC , thread_cap_info = ("ThreadId 179", 0, False)}
| | | | | | | | | | | | | | | | | F    
| | | | | | | | | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 40 , num_strict_rules
| | | | | | | | | | | | | | | | | | F  = 8 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 13 , total_length
| | | | | | | | | | | | | | | | | | F  = 336} , self = 104 , parent = Nothing , duration = 1.100989346000 , status
| | | | | | | | | | | | | | | | | | F  = Fail , start = 2025-09-04 08:23:42.388596387 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | | | | F  08:23:43.489585733 UTC , thread_cap_info = ("ThreadId 181", 0, False)}
| | | | | | | | | | | | | | | | | | F  
F | | | | | | | | | | | | | | | | | |  
  | F | | | | | | | | | | | | | | | |  
  F   | | | | | | | | | | | | | | | |  
      | F | | | | | | | | | | | | | |  
      |   | F | | | | | | | | | | | |  
      |   |   F | | | | | | | | | | |  
      |   |     | F | | | | | | | | |  
      |   |     F   | | | | | | | | |  
      |   |         | | | | F | | | |  
S     |   |         | | | |   | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
S     |   |         | | | |   | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
S     |   |         | | | |   | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
S     |   |         | | | |   | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S     |   |         | | | |   | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S     |   |         | | | |   | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
S     |   |         | | | |   | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
S     |   |         | | | |   | | | |  = 2 , total_length = 18} , self = 108 , parent = Nothing , duration = 0.710131368000
S     |   |         | | | |   | | | |  , status = Success , start = 2025-09-04 08:23:42.919343618 UTC , finish
S     |   |         | | | |   | | | |  = 2025-09-04 08:23:43.629474986 UTC , thread_cap_info = ("ThreadId 194",
S     |   |         | | | |   | | | |  2, False)}
S     |   |         | | | |   | | | |  
|     |   |         | | | F   | | | |  
| F   |   |         | | |     | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| F   |   |         | | |     | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| F   |   |         | | |     | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| F   |   |         | | |     | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| F   |   |         | | |     | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| F   |   |         | | |     | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| F   |   |         | | |     | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| F   |   |         | | |     | | | |  = 2 , total_length = 18} , self = 105 , parent = Nothing , duration = 0.608219655000
| F   |   |         | | |     | | | |  , status = Fail , start = 2025-09-04 08:23:42.920390392 UTC , finish =
| F   |   |         | | |     | | | |  2025-09-04 08:23:43.528610047 UTC , thread_cap_info = ("ThreadId 195",
| F   |   |         | | |     | | | |  2, False)}
| F   |   |         | | |     | | | |  
| |   |   |         | | F     | | | |  
| |   |   |         | F       | | | |  
| |   |   |         |         F | | |  
| | E |   |         |           | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | E |   |         |           | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E |   |         |           | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E |   |         |           | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E |   |         |           | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E |   |         |           | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | E |   |         |           | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | E |   |         |           | | |  = 4 , total_length = 34} , self = 112 , parent = Nothing , duration = 0.497761618000
| | E |   |         |           | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:23:43.132133726
| | E |   |         |           | | |  UTC , finish = 2025-09-04 08:23:43.629895344 UTC , thread_cap_info = ("ThreadId
| | E |   |         |           | | |  200", 0, False)}
| | E |   |         |           | | |  
| | | |   |         |           F | |  
| | | | S |         |             | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | S |         |             | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | S |         |             | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | S |         |             | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S |         |             | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S |         |             | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | S |         |             | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | | | S |         |             | |  = 4 , total_length = 34} , self = 106 , parent = Nothing , duration = 0.440631699000
| | | | S |         |             | |  , status = Success , start = 2025-09-04 08:23:43.168621805 UTC , finish
| | | | S |         |             | |  = 2025-09-04 08:23:43.609253504 UTC , thread_cap_info = ("ThreadId 202",
| | | | S |         |             | |  0, False)}
| | | | S |         |             | |  
| | | | | |         |             F |  
| | | F | |         |               |  
| | |   | |         F               |  
| | |   | F                         |  
| | |   |                           F  
| F |   |                              
| E |   |                              Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| E |   |                              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E |   |                              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E |   |                              , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E |   |                              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E |   |                              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| E |   |                              , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
| E |   |                              = 2 , total_length = 18} , self = 110 , parent = Nothing , duration = 0.100927173000
| E |   |                              , status = Except "AsyncCancelled" , start = 2025-09-04 08:23:43.528666843
| E |   |                              UTC , finish = 2025-09-04 08:23:43.629594016 UTC , thread_cap_info = ("ThreadId
| E |   |                              208", 2, False)}
| E |   |                              
| | |   S                              
S | |                                  
  E |                                  
    E                                  
