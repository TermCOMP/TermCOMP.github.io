last 433 length 1771
last 415 length 1817
CNF 415 vars 1817 clauses
CNF 433 vars 1771 clauses
last 1354 length 5457
CNF 1354 vars 5457 clauses
last 1554 length 6257
CNF 1554 vars 6257 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4178, clauses: 15534
last 4178 length 15534
CNF 4178 vars 15534 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4178, clauses: 15534, status: Satisfied, time: 0.077218544s
last 1167 length 4751
CNF 1167 vars 4751 clauses
last 1095 length 4423
last 1370 length 5527
last 1370 length 5563
CNF 1095 vars 4423 clauses
last 10238 length 44553
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3265, clauses: 11971
CNF 1370 vars 5527 clauses
last 13771 length 58440
CNF 1370 vars 5563 clauses
CNF 10238 vars 44553 clauses
last 3265 length 11971
last 13506 length 58982
last 15861 length 67516
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4060, clauses: 14953
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10889, clauses: 45553
CNF 13771 vars 58440 clauses
last 15800 length 69091
CNF 3265 vars 11971 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12766, clauses: 53421
last 18675 length 79762
CNF 13506 vars 58982 clauses
last 4060 length 14953
last 10889 length 45553
CNF 15861 vars 67516 clauses
last 12766 length 53421
CNF 15800 vars 69091 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3265, clauses: 11971, status: Satisfied, time: 0.619203607s
CNF 18675 vars 79762 clauses
CNF 10889 vars 45553 clauses
CNF 4060 vars 14953 clauses
CNF 12766 vars 53421 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4060, clauses: 14953, status: Satisfied, time: 0.574188329s
last 905 length 3615
last 803 length 3237
CNF 905 vars 3615 clauses
CNF 803 vars 3237 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19726, clauses: 75430
last 19726 length 75430
CNF 19726 vars 75430 clauses
last 1137 length 4579
last 1081 length 4359
CNF 1137 vars 4579 clauses
CNF 1081 vars 4359 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2564, clauses: 9282
last 2564 length 9282
CNF 2564 vars 9282 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3256, clauses: 11926
last 3256 length 11926
CNF 3256 vars 11926 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2564, clauses: 9282, status: Unsatisfied, time: 0.277591313s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3256, clauses: 11926, status: Satisfied, time: 0.23518669s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19726, clauses: 75430, status: Satisfied, time: 0.450056938s
**************************************************
summary
**************************************************
SRS with 3 strict rules and 3 weak rules on 3 letters       strictify
SRS with 6 rules on 3 letters       mirror
SRS with 6 rules on 3 letters       DP
SRS with 14 strict rules and 6 weak rules on 6 letters       weights
SRS with 6 strict rules and 6 weak rules on 6 letters       EDG
SRS with 6 strict rules and 6 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 5 strict rules and 6 weak rules on 6 letters       EDG
SRS with 5 strict rules and 6 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 6 weak rules on 6 letters       weights
SRS with 3 strict rules and 6 weak rules on 5 letters       EDG
SRS with 3 strict rules and 6 weak rules on 5 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9592, clauses: 40143
3, last 9592 length 40143
solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 6 weak rules on 5 letters       weights
SRS with 0 strict rules and 6 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, b, c] -> [b, b, a] {- Input 0 -}
  [c, c, a] -> [b, b, c] {- Input 1 -}
  [c, a, b] -> [a, b, a] {- Input 2 -}
  [a, b, b] ->= [b, a, b] {- Input 3 -}
  [b, c, b] ->= [a, c, c] {- Input 4 -}
  [c, c, a] ->= [c, c, b] {- Input 5 -}
reason
  strictify
   property Termination
has value Just True
for SRS
  [b, b, c] -> [b, b, a] {- Input 0 -}
  [c, c, a] -> [b, b, c] {- Input 1 -}
  [c, a, b] -> [a, b, a] {- Input 2 -}
  [a, b, b] -> [b, a, b] {- Strictified (Input 3) -}
  [b, c, b] -> [a, c, c] {- Strictified (Input 4) -}
  [c, c, a] -> [c, c, b] {- Strictified (Input 5) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [c, b, b] -> [a, b, b] {- Mirror (Input 0) -}
  [a, c, c] -> [c, b, b] {- Mirror (Input 1) -}
  [b, a, c] -> [a, b, a] {- Mirror (Input 2) -}
  [b, b, a] -> [b, a, b] {- Mirror (Strictified (Input 3)) -}
  [b, c, b] -> [c, c, a] {- Mirror (Strictified (Input 4)) -}
  [a, c, c] -> [b, c, c] {- Mirror (Strictified (Input 5)) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [c, b, b] ->= [a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, c] ->= [c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, c] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, a] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [b, c, b] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, c, c] ->= [b, c, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a#, c, c] |-> [b#] {- DP (Top 2) (Mirror (Input 1)) -}
  [a#, c, c] |-> [b#, b] {- DP (Top 1) (Mirror (Input 1)) -}
  [a#, c, c] |-> [b#, c, c] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [a#, c, c] |-> [c#, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, a, c] |-> [a#] {- DP (Top 2) (Mirror (Input 2)) -}
  [b#, a, c] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, a, c] |-> [b#, a] {- DP (Top 1) (Mirror (Input 2)) -}
  [b#, b, a] |-> [a#, b] {- DP (Top 1) (Mirror (Strictified (Input 3))) -}
  [b#, b, a] |-> [b#] {- DP (Top 2) (Mirror (Strictified (Input 3))) -}
  [b#, b, a] |-> [b#, a, b] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [b#, c, b] |-> [a#] {- DP (Top 2) (Mirror (Strictified (Input 4))) -}
  [b#, c, b] |-> [c#, a] {- DP (Top 1) (Mirror (Strictified (Input 4))) -}
  [b#, c, b] |-> [c#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [c#, b, b] |-> [a#, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
reason
  (a, 1/1)
  (b, 1/1)
  (c, 1/1)
  (a#, 0/1)
  (b#, 0/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [c, b, b] ->= [a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, c] ->= [c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, c] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, a] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [b, c, b] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, c, c] ->= [b, c, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
  [a#, c, c] |-> [b#, c, c] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [a#, c, c] |-> [c#, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [b#, a, c] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, b, a] |-> [b#, a, b] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [b#, c, b] |-> [c#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [c#, b, b] |-> [a#, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, c, c] |-> [b#, c, c] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [b#, a, c] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [a#, c, c] |-> [c#, b, b] {- DP (Top 0) (Mirror (Input 1)) -}
  [c#, b, b] |-> [a#, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, b, a] |-> [b#, a, b] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [b#, c, b] |-> [c#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [c, b, b] ->= [a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, c] ->= [c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, c] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, a] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [b, c, b] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, c, c] ->= [b, c, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  ( a
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( b
  , Wk  / 0A  0A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( c
  , Wk  / 0A  0A 3A - \
        | 0A  0A 3A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( a#
  , Wk  / 1A 2A 3A - \
        | 1A 2A 3A - |
        | 1A 2A 3A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 1A 1A 3A - \
        | 1A 1A 3A - |
        | 1A 1A 3A - |
        \ -  -  -  - / )
  ( c#
  , Wk  / 1A 1A 1A - \
        | 1A 1A 1A - |
        | 1A 1A 1A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a#, c, c] |-> [b#, c, c] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [b#, a, c] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c#, b, b] |-> [a#, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [b#, b, a] |-> [b#, a, b] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [b#, c, b] |-> [c#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [c, b, b] ->= [a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, c] ->= [c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, c] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, a] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [b, c, b] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, c, c] ->= [b, c, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, c, c] |-> [b#, c, c] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [b#, a, c] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, b, a] |-> [b#, a, b] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [b#, c, b] |-> [c#, c, a] {- DP (Top 0) (Mirror (Strictified (Input 4))) -}
  [c#, b, b] |-> [a#, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [c, b, b] ->= [a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, c] ->= [c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, c] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, a] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [b, c, b] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, c, c] ->= [b, c, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  ( a
  , Wk  / 3A 6A 6A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 3A 6A 6A - \
        | 0A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 3A 6A 6A - \
        | 3A 3A 3A - |
        | 0A 3A 3A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 14A 15A 17A - \
        | 14A 15A 17A - |
        | 14A 15A 17A - |
        \ -   -   -   - / )
  ( b#
  , Wk  / 14A 15A 16A - \
        | 14A 15A 16A - |
        | 14A 15A 16A - |
        \ -   -   -   - / )
  ( c#
  , Wk  / 14A 14A 17A - \
        | 14A 14A 17A - |
        | 14A 14A 17A - |
        \ -   -   -   - / )
   property Termination
has value Just True
for SRS
  [a#, c, c] |-> [b#, c, c] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [b#, a, c] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, b, a] |-> [b#, a, b] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [c#, b, b] |-> [a#, b, b] {- DP (Top 0) (Mirror (Input 0)) -}
  [c, b, b] ->= [a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, c] ->= [c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, c] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, a] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [b, c, b] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, c, c] ->= [b, c, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [a#, c, c] |-> [b#, c, c] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [b#, a, c] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, b, a] |-> [b#, a, b] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [c, b, b] ->= [a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, c] ->= [c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, c] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, a] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [b, c, b] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, c, c] ->= [b, c, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, c, c] |-> [b#, c, c] {- DP (Top 0) (Mirror (Strictified (Input 5))) -}
  [b#, a, c] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [b#, b, a] |-> [b#, a, b] {- DP (Top 0) (Mirror (Strictified (Input 3))) -}
  [c, b, b] ->= [a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, c] ->= [c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, c] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, a] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [b, c, b] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, c, c] ->= [b, c, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  ( a
  , Wk  / 6A 6A 9A - \
        | 3A 3A 6A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 6A 6A 9A - \
        | 6A 6A 6A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( c
  , Wk  / 3A 6A 6A - \
        | 3A 3A 6A - |
        | 3A 3A 6A - |
        \ -  -  -  - / )
  ( a#
  , Wk  / 1A 1A 4A - \
        | 1A 1A 4A - |
        | 1A 1A 4A - |
        \ -  -  -  - / )
  ( b#
  , Wk  / 1A 3A 3A - \
        | 1A 3A 3A - |
        | 1A 3A 3A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [b#, a, c] |-> [a#, b, a] {- DP (Top 0) (Mirror (Input 2)) -}
  [c, b, b] ->= [a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, c] ->= [c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, c] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, a] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [b, c, b] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, c, c] ->= [b, c, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 0/1)
  (b#, 1/1)
   property Termination
has value Just True
for SRS
  [c, b, b] ->= [a, b, b] {- DP Nontop (Mirror (Input 0)) -}
  [a, c, c] ->= [c, b, b] {- DP Nontop (Mirror (Input 1)) -}
  [b, a, c] ->= [a, b, a] {- DP Nontop (Mirror (Input 2)) -}
  [b, b, a] ->= [b, a, b] {- DP Nontop (Mirror (Strictified (Input 3))) -}
  [b, c, b] ->= [c, c, a] {- DP Nontop (Mirror (Strictified (Input 4))) -}
  [a, c, c] ->= [b, c, c] {- DP Nontop (Mirror (Strictified (Input 5))) -}
reason
  EDG

**************************************************
skeleton: (3/3,3)\Strictify\Mirror(6,3)\Deepee(14/6,6)\Weight\EDG(6/6,6)\Matrix{\Arctic}{3}\EDG(5/6,6)\Matrix{\Arctic}{3}(4/6,6)\Weight\EDG(3/6,5)\Matrix{\Arctic}{3}(1/6,5)\Weight(0/6,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))CNF 9592 vars 40143 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 1.380811567000
  min duration 0.052036897000
  total durat. 4.909439583000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 63
      , num_strict_rules = 9
      , num_top_rules = 9
      , num_weak_rules = 54
      , alphabet_size = 11
      , total_length = 504}
    , self = 113
    , parent = Nothing
    , duration = 1.205393738000
    , status = Fail
    , start = 2025-09-04 08:21:19.272251932 UTC
    , finish = 2025-09-04 08:21:20.47764567 UTC
    , thread_cap_info = ("ThreadId 178", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 54
      , alphabet_size = 12
      , total_length = 576}
    , self = 117
    , parent = Nothing
    , duration = 1.294689660000
    , status = Fail
    , start = 2025-09-04 08:21:19.421775887 UTC
    , finish = 2025-09-04 08:21:20.716465547 UTC
    , thread_cap_info = ("ThreadId 184", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 54
      , num_strict_rules = 54
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 432}
    , self = 111
    , parent = Nothing
    , duration = 1.380811567000
    , status = Fail
    , start = 2025-09-04 08:21:18.982423308 UTC
    , finish = 2025-09-04 08:21:20.363234875 UTC
    , thread_cap_info = ("ThreadId 138", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 1.163444713000
  min duration 0.019279626000
  total durat. 4.606770191000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 54
      , num_strict_rules = 54
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 432}
    , self = 110
    , parent = Nothing
    , duration = 1.109759779000
    , status = Fail
    , start = 2025-09-04 08:21:19.021775617 UTC
    , finish = 2025-09-04 08:21:20.131535396 UTC
    , thread_cap_info = ("ThreadId 144", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 54
      , alphabet_size = 12
      , total_length = 576}
    , self = 114
    , parent = Nothing
    , duration = 1.142470698000
    , status = Fail
    , start = 2025-09-04 08:21:19.441778648 UTC
    , finish = 2025-09-04 08:21:20.584249346 UTC
    , thread_cap_info = ("ThreadId 185", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 63
      , num_strict_rules = 9
      , num_top_rules = 9
      , num_weak_rules = 54
      , alphabet_size = 11
      , total_length = 504}
    , self = 112
    , parent = Nothing
    , duration = 1.163444713000
    , status = Fail
    , start = 2025-09-04 08:21:19.281777375 UTC
    , finish = 2025-09-04 08:21:20.445222088 UTC
    , thread_cap_info = ("ThreadId 179", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 5
  max duration 1.124007073000
  min duration 0.179983083000
  total durat. 3.482119957000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 6
      , alphabet_size = 5
      , total_length = 54}
    , self = 118
    , parent = Nothing
    , duration = 1.124007073000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:21:19.601817681 UTC
    , finish = 2025-09-04 08:21:20.725824754 UTC
    , thread_cap_info = ("ThreadId 189", 0, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.287258884000
  min duration 0.183309894000
  total durat. 3.650276869000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 9
      , num_strict_rules = 3
      , num_top_rules = 3
      , num_weak_rules = 6
      , alphabet_size = 5
      , total_length = 54}
    , self = 115
    , parent = Nothing
    , duration = 1.287258884000
    , status = Success
    , start = 2025-09-04 08:21:19.315125566 UTC
    , finish = 2025-09-04 08:21:20.60238445 UTC
    , thread_cap_info = ("ThreadId 181", 0, False)}
**************************************************
F                    Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                    , closure = Forward\n , start_strict_only = True\n , max_closure_length
F                    = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                    Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                    8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                    = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                    ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                    1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                    = True})" , input_size = Size { num_rules = 6 , num_strict_rules = 6 ,
F                    num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                    = 36} , self = 106 , parent = Nothing , duration = 0.463573246000 , status
F                    = Fail , start = 2025-09-04 08:21:18.97802821 UTC , finish = 2025-09-04
F                    08:21:19.441601456 UTC , thread_cap_info = ("ThreadId 87", 3, False)}
F                    
| F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| F                  = 54 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| F                  = 432} , self = 111 , parent = Nothing , duration = 1.380811567000 , status
| F                  = Fail , start = 2025-09-04 08:21:18.982423308 UTC , finish = 2025-09-04
| F                  08:21:20.363234875 UTC , thread_cap_info = ("ThreadId 138", 0, False)}
| F                  
| | S                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S                = 12 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 6 ,
| | S                alphabet_size = 6 , total_length = 72} , self = 90 , parent = Nothing ,
| | S                duration = 0.183309894000 , status = Success , start = 2025-09-04 08:21:19.020820431
| | S                UTC , finish = 2025-09-04 08:21:19.204130325 UTC , thread_cap_info = ("ThreadId
| | S                149", 2, False)}
| | S                
| | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| | | F              = 54 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | F              = 432} , self = 110 , parent = Nothing , duration = 1.109759779000 , status
| | | F              = Fail , start = 2025-09-04 08:21:19.021775617 UTC , finish = 2025-09-04
| | | F              08:21:20.131535396 UTC , thread_cap_info = ("ThreadId 144", 0, False)}
| | | F              
| | | | E            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | | E            , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size
| | | | E            = 6 , total_length = 72} , self = 93 , parent = Nothing , duration = 0.179983083000
| | | | E            , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:19.061789462
| | | | E            UTC , finish = 2025-09-04 08:21:19.241772545 UTC , thread_cap_info = ("ThreadId
| | | | E            152", 2, False)}
| | | | E            
| | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | | | | F          = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size = 5 , total_length
| | | | | F          = 54} , self = 102 , parent = Nothing , duration = 0.121931215000 , status
| | | | | F          = Fail , start = 2025-09-04 08:21:19.161777859 UTC , finish = 2025-09-04
| | | | | F          08:21:19.283709074 UTC , thread_cap_info = ("ThreadId 159", 0, False)}
| | | | | F          
| | S | | |          
| | F | | |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | | |          = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
| | F | | |          = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size = 5 , total_length
| | F | | |          = 54} , self = 107 , parent = Nothing , duration = 0.379197872000 , status
| | F | | |          = Fail , start = 2025-09-04 08:21:19.206314358 UTC , finish = 2025-09-04
| | F | | |          08:21:19.58551223 UTC , thread_cap_info = ("ThreadId 167", 0, False)}
| | F | | |          
| | | | E |          
| | | | F |          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F |          = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | F |          = 5 , num_top_rules = 5 , num_weak_rules = 6 , alphabet_size = 6 , total_length
| | | | F |          = 66} , self = 108 , parent = Nothing , duration = 0.621641725000 , status
| | | | F |          = Fail , start = 2025-09-04 08:21:19.243422785 UTC , finish = 2025-09-04
| | | | F |          08:21:19.86506451 UTC , thread_cap_info = ("ThreadId 175", 2, False)}
| | | | F |          
| | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | | | F        = 5 , num_top_rules = 5 , num_weak_rules = 6 , alphabet_size = 6 , total_length
| | | | | | F        = 66} , self = 109 , parent = Nothing , duration = 0.702995959000 , status
| | | | | | F        = Fail , start = 2025-09-04 08:21:19.256948867 UTC , finish = 2025-09-04
| | | | | | F        08:21:19.959944826 UTC , thread_cap_info = ("ThreadId 174", 2, False)}
| | | | | | F        
| | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 63 , num_strict_rules
| | | | | | | F      = 9 , num_top_rules = 9 , num_weak_rules = 54 , alphabet_size = 11 , total_length
| | | | | | | F      = 504} , self = 113 , parent = Nothing , duration = 1.205393738000 , status
| | | | | | | F      = Fail , start = 2025-09-04 08:21:19.272251932 UTC , finish = 2025-09-04
| | | | | | | F      08:21:20.47764567 UTC , thread_cap_info = ("ThreadId 178", 1, False)}
| | | | | | | F      
| | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 63 , num_strict_rules
| | | | | | | | F    = 9 , num_top_rules = 9 , num_weak_rules = 54 , alphabet_size = 11 , total_length
| | | | | | | | F    = 504} , self = 112 , parent = Nothing , duration = 1.163444713000 , status
| | | | | | | | F    = Fail , start = 2025-09-04 08:21:19.281777375 UTC , finish = 2025-09-04
| | | | | | | | F    08:21:20.445222088 UTC , thread_cap_info = ("ThreadId 179", 1, False)}
| | | | | | | | F    
| | | | | F | | |    
| | | | | S | | |    Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | S | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | S | | |    , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | S | | |    = 9 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size
| | | | | S | | |    = 5 , total_length = 54} , self = 115 , parent = Nothing , duration = 1.287258884000
| | | | | S | | |    , status = Success , start = 2025-09-04 08:21:19.315125566 UTC , finish
| | | | | S | | |    = 2025-09-04 08:21:20.60238445 UTC , thread_cap_info = ("ThreadId 181",
| | | | | S | | |    0, False)}
| | | | | S | | |    
| | | | | | | | | F  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 72 , num_strict_rules
| | | | | | | | | F  = 18 , num_top_rules = 18 , num_weak_rules = 54 , alphabet_size = 12 ,
| | | | | | | | | F  total_length = 576} , self = 117 , parent = Nothing , duration = 1.294689660000
| | | | | | | | | F  , status = Fail , start = 2025-09-04 08:21:19.421775887 UTC , finish =
| | | | | | | | | F  2025-09-04 08:21:20.716465547 UTC , thread_cap_info = ("ThreadId 184",
| | | | | | | | | F  1, False)}
| | | | | | | | | F  
F | | | | | | | | |  
F | | | | | | | | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | | | | |  = False\n , verbose = False}" , input_size = Size { num_rules = 72 , num_strict_rules
F | | | | | | | | |  = 18 , num_top_rules = 18 , num_weak_rules = 54 , alphabet_size = 12 ,
F | | | | | | | | |  total_length = 576} , self = 114 , parent = Nothing , duration = 1.142470698000
F | | | | | | | | |  , status = Fail , start = 2025-09-04 08:21:19.441778648 UTC , finish =
F | | | | | | | | |  2025-09-04 08:21:20.584249346 UTC , thread_cap_info = ("ThreadId 185",
F | | | | | | | | |  1, False)}
F | | | | | | | | |  
| | F | | | | | | |  
| | E | | | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
| | E | | | | | | |  , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size
| | E | | | | | | |  = 5 , total_length = 54} , self = 118 , parent = Nothing , duration = 1.124007073000
| | E | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:19.601817681
| | E | | | | | | |  UTC , finish = 2025-09-04 08:21:20.725824754 UTC , thread_cap_info = ("ThreadId
| | E | | | | | | |  189", 0, False)}
| | E | | | | | | |  
| | | | F | | | | |  
| | | | S | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S | | | | |  = 11 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 6 ,
| | | | S | | | | |  alphabet_size = 6 , total_length = 66} , self = 119 , parent = Nothing
| | | | S | | | | |  , duration = 0.892303481000 , status = Success , start = 2025-09-04 08:21:19.881810424
| | | | S | | | | |  UTC , finish = 2025-09-04 08:21:20.774113905 UTC , thread_cap_info = ("ThreadId
| | | | S | | | | |  191", 2, False)}
| | | | S | | | | |  
| | | | | | F | | |  
| | | | | | E | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 11
| | | | | | E | | |  , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 6 , alphabet_size
| | | | | | E | | |  = 6 , total_length = 66} , self = 125 , parent = Nothing , duration = 0.877006643000
| | | | | | E | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:19.959971227
| | | | | | E | | |  UTC , finish = 2025-09-04 08:21:20.83697787 UTC , thread_cap_info = ("ThreadId
| | | | | | E | | |  193", 2, False)}
| | | | | | E | | |  
| | | F | | | | | |  
| F |   | | | | | |  
|   |   | | | | F |  
| S |   | | | |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| S |   | | | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| S |   | | | |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| S |   | | | |   |  = 63 , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 54 ,
| S |   | | | |   |  alphabet_size = 11 , total_length = 504} , self = 136 , parent = Nothing
| S |   | | | |   |  , duration = 0.916079201000 , status = Success , start = 2025-09-04 08:21:20.462896084
| S |   | | | |   |  UTC , finish = 2025-09-04 08:21:21.378975285 UTC , thread_cap_info = ("ThreadId
| S |   | | | |   |  203", 1, False)}
| S |   | | | |   |  
| | |   | | | F   |  
| | | E | | |     |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | E | | |     |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E | | |     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E | | |     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | |     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | |     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 63
| | | E | | |     |  , num_strict_rules = 9 , num_top_rules = 9 , num_weak_rules = 54 , alphabet_size
| | | E | | |     |  = 11 , total_length = 504} , self = 142 , parent = Nothing , duration =
| | | E | | |     |  0.959989929000 , status = Except "AsyncCancelled" , start = 2025-09-04
| | | E | | |     |  08:21:20.481793862 UTC , finish = 2025-09-04 08:21:21.441783791 UTC , thread_cap_info
| | | E | | |     |  = ("ThreadId 204", 1, False)}
| | | E | | |     |  
F | | | | | |     |  
  | | | | S |     |  
  | | | |   |     F  
  | E | |   |        
  |   | S   |        
  |   |     E        
F |   |              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F |   |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F |   |              = False\n , verbose = False}" , input_size = Size { num_rules = 9 , num_strict_rules
F |   |              = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size = 5 , total_length
F |   |              = 54} , self = 133 , parent = Nothing , duration = 0.104670617000 , status
F |   |              = Fail , start = 2025-09-04 08:21:20.941837773 UTC , finish = 2025-09-04
F |   |              08:21:21.04650839 UTC , thread_cap_info = ("ThreadId 220", 2, False)}
F |   |              
| | F |              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | F |              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | F |              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | F |              = 7 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 6 , alphabet_size
| | F |              = 4 , total_length = 42} , self = 134 , parent = Nothing , duration = 0.400007018000
| | F |              , status = Fail , start = 2025-09-04 08:21:20.941841961 UTC , finish =
| | F |              2025-09-04 08:21:21.341848979 UTC , thread_cap_info = ("ThreadId 223",
| | F |              0, False)}
| | F |              
| | | | S            Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | S            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | S            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | S            = 9 , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size
| | | | S            = 5 , total_length = 54} , self = 135 , parent = Nothing , duration = 0.371325409000
| | | | S            , status = Success , start = 2025-09-04 08:21:20.993369583 UTC , finish
| | | | S            = 2025-09-04 08:21:21.364694992 UTC , thread_cap_info = ("ThreadId 227",
| | | | S            2, False)}
| | | | S            
F | | | |            
E | | | |            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
E | | | |            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E | | | |            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E | | | |            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E | | | |            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E | | | |            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 9
E | | | |            , num_strict_rules = 3 , num_top_rules = 3 , num_weak_rules = 6 , alphabet_size
E | | | |            = 5 , total_length = 54} , self = 139 , parent = Nothing , duration = 0.341133229000
E | | | |            , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:21.062758645
E | | | |            UTC , finish = 2025-09-04 08:21:21.403891874 UTC , thread_cap_info = ("ThreadId
E | | | |            228", 2, False)}
E | | | |            
| | F | |            
| |   | S            
| S   |              
E     |              
      E              
