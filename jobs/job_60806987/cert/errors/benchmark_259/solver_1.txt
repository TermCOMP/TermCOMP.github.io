last 584 length 2333
last 678 length 2713
CNF 584 vars 2333 clauses
CNF 678 vars 2713 clauses
last 582 length 2315
last 514 length 2055
CNF 582 vars 2315 clauses
CNF 514 vars 2055 clauses
last 478 length 1959
CNF 478 vars 1959 clauses
last 474 length 1883
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1817, clauses: 6561
CNF 474 vars 1883 clauses
last 443 length 1767
last 375 length 1551
last 1817 length 6561
CNF 1817 vars 6561 clauses
CNF 443 vars 1767 clauses
last 1136 length 4799
CNF 375 vars 1551 clauses
last 1442 length 6226
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5348, clauses: 22191
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1817, clauses: 6561, status: Satisfied, time: 0.053913673s
last 1590 length 6419
last 1802 length 7319
last 1374 length 5571
last 1496 length 6063
CNF 1136 vars 4799 clauses
last 12246 length 53061
CNF 1442 vars 6226 clauses
last 5348 length 22191
CNF 1590 vars 6419 clauses
CNF 1802 vars 7319 clauses
CNF 1374 vars 5571 clauses
CNF 1496 vars 6063 clauses
last 14366 length 60336
CNF 12246 vars 53061 clauses
last 16444 length 70879
last 18999 length 80354
CNF 5348 vars 22191 clauses
last 19615 length 83580
last 16724 length 71295
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4767, clauses: 17846
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4134, clauses: 15335
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13653, clauses: 57273
CNF 16444 vars 70879 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14659, clauses: 61444
CNF 18999 vars 80354 clauses
last 1157 length 4882
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5348, clauses: 22191, status: Satisfied, time: 1.556684241s
last 831 length 3591
last 4767 length 17846
CNF 16724 vars 71295 clauses
last 4134 length 15335
CNF 19615 vars 83580 clauses
last 13653 length 57273
last 14659 length 61444
CNF 1157 vars 4882 clauses
last 1136 length 4799
CNF 831 vars 3591 clauses
CNF 4767 vars 17846 clauses
last 1442 length 6226
[Info] AsyncCancelled @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.QPI.Top src/Matchbox/QPI/Top.hs:136:6)
CNF 4134 vars 15335 clauses
CNF 1136 vars 4799 clauses
CNF 14659 vars 61444 clauses
CNF 1442 vars 6226 clauses
CNF 13653 vars 57273 clauses
last 437 length 1833
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4767, clauses: 17846, status: Satisfied, time: 0.293507842s
last 545 length 2296
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4134, clauses: 15335, status: Satisfied, time: 0.625648728s
CNF 437 vars 1833 clauses
CNF 545 vars 2296 clauses
last 16724 length 71295
last 1542 length 6201
last 1298 length 5235
last 1122 length 4553
last 19615 length 83580
last 1136 length 4559
**************************************************
CNF 1122 vars 4553 clauses
CNF 16724 vars 71295 clauses
CNF 1298 vars 5235 clauses
CNF 19615 vars 83580 clauses
CNF 1542 vars 6201 clauses
CNF 1136 vars 4559 clauses
summary
**************************************************
SRS with 2 strict rules and 5 weak rules on 3 letters       strictify
SRS with 7 rules on 3 letters       split
2 sub-proofs
  1 SRS with 5 strict rules and 2 weak rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
  SRS with 45 strict rules and 18 weak rules on 9 letters       Matrix   { monotone = Strict, domain = Natural, method = KBO, shape = Full, bits = 1, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 2, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
  SRS with 18 strict rules and 18 weak rules on 9 letters       weights
  SRS with 0 strict rules and 6 weak rules on 6 letters       no strict rules

  2 SRS with 2 rules on 2 letters       split
  2 sub-proofs
    1 SRS with 1 strict rules and 1 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
    SRS with 4 strict rules and 4 weak rules on 4 letters       weights
    SRS with 2 strict rules and 2 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = KBO, shape = Full, bits = 1, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 2, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
    SRS with 0 strict rules and 2 weak rules on 3 letters       no strict rules

    2 SRS with 1 rules on 2 letters       split
    2 sub-proofs
      1 SRS with 1 rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
      SRS with 4 rules on 4 letters       weights
      SRS with 2 rules on 3 letters       Matrix   { monotone = Strict, domain = Natural, method = KBO, shape = Full, bits = 1, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 2, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
      SRS with 0 rules on 0 letters       no strict rules

      2 SRS with 0 rules on 0 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a, c] -> [b, a, a] {- Input 0 -}
  [b, c, a] -> [a, a, a] {- Input 1 -}
  [c, a, a] ->= [b, c, a] {- Input 2 -}
  [c, c, a] ->= [c, a, c] {- Input 3 -}
  [a, b, c] ->= [a, c, b] {- Input 4 -}
  [a, b, b] ->= [b, a, c] {- Input 5 -}
  [a, a, c] ->= [a, c, a] {- Input 6 -}
reason
  strictify
   property Termination
has value Just True
for SRS
  [a, a, c] -> [b, a, a] {- Input 0 -}
  [b, c, a] -> [a, a, a] {- Input 1 -}
  [c, a, a] -> [b, c, a] {- Strictified (Input 2) -}
  [c, c, a] -> [c, a, c] {- Strictified (Input 3) -}
  [a, b, c] -> [a, c, b] {- Strictified (Input 4) -}
  [a, b, b] -> [b, a, c] {- Strictified (Input 5) -}
  [a, a, c] -> [a, c, a] {- Strictified (Input 6) -}
reason
  split
   property Termination
has value Just True
for SRS
  [a, a, c] -> [b, a, a] {- Input 0 -}
  [b, c, a] -> [a, a, a] {- Input 1 -}
  [c, a, a] -> [b, c, a] {- Strictified (Input 2) -}
  [c, c, a] ->= [c, a, c] {- Strictified (Input 3) -}
  [a, b, c] -> [a, c, b] {- Strictified (Input 4) -}
  [a, b, b] -> [b, a, c] {- Strictified (Input 5) -}
  [a, a, c] ->= [a, c, a] {- Strictified (Input 6) -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, a], [a, c], [c, a]] -> [ [a, b] , [b, a] , [a, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, a], [a, c], [c, c]] -> [ [a, b] , [b, a] , [a, a] , [ a , c ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, a], [a, c], [c, b]] -> [ [a, b] , [b, a] , [a, a] , [ a , b ] ] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[c, a], [a, a], [a, c], [c, a]] -> [ [c, b] , [b, a] , [a, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[c, a], [a, a], [a, c], [c, c]] -> [ [c, b] , [b, a] , [a, a] , [ a , c ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[c, a], [a, a], [a, c], [c, b]] -> [ [c, b] , [b, a] , [a, a] , [ a , b ] ] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[b, a], [a, a], [a, c], [c, a]] -> [ [b, b] , [b, a] , [a, a] , [ a , a ] ] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[b, a], [a, a], [a, c], [c, c]] -> [ [b, b] , [b, a] , [a, a] , [ a , c ] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[b, a], [a, a], [a, c], [c, b]] -> [ [b, b] , [b, a] , [a, a] , [ a , b ] ] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, b], [b, c], [c, a], [a, a]] -> [ [a, a] , [a, a] , [a, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b], [b, c], [c, a], [a, c]] -> [ [a, a] , [a, a] , [a, a] , [ a , c ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, b], [b, c], [c, a], [a, b]] -> [ [a, a] , [a, a] , [a, a] , [ a , b ] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[c, b], [b, c], [c, a], [a, a]] -> [ [c, a] , [a, a] , [a, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[c, b], [b, c], [c, a], [a, c]] -> [ [c, a] , [a, a] , [a, a] , [ a , c ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[c, b], [b, c], [c, a], [a, b]] -> [ [c, a] , [a, a] , [a, a] , [ a , b ] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[b, b], [b, c], [c, a], [a, a]] -> [ [b, a] , [a, a] , [a, a] , [ a , a ] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[b, b], [b, c], [c, a], [a, c]] -> [ [b, a] , [a, a] , [a, a] , [ a , c ] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[b, b], [b, c], [c, a], [a, b]] -> [ [b, a] , [a, a] , [a, a] , [ a , b ] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, c], [c, a], [a, a], [a, a]] -> [ [a, b] , [b, c] , [c, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Strictified (Input 2))) -}
  [[a, c], [c, a], [a, a], [a, c]] -> [ [a, b] , [b, c] , [c, a] , [ a , c ] ] {- Semlab 0 (Concon 1 (Strictified (Input 2))) -}
  [[a, c], [c, a], [a, a], [a, b]] -> [ [a, b] , [b, c] , [c, a] , [ a , b ] ] {- Semlab 0 (Concon 2 (Strictified (Input 2))) -}
  [[c, c], [c, a], [a, a], [a, a]] -> [ [c, b] , [b, c] , [c, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Strictified (Input 2))) -}
  [[c, c], [c, a], [a, a], [a, c]] -> [ [c, b] , [b, c] , [c, a] , [ a , c ] ] {- Semlab 1 (Concon 1 (Strictified (Input 2))) -}
  [[c, c], [c, a], [a, a], [a, b]] -> [ [c, b] , [b, c] , [c, a] , [ a , b ] ] {- Semlab 1 (Concon 2 (Strictified (Input 2))) -}
  [[b, c], [c, a], [a, a], [a, a]] -> [ [b, b] , [b, c] , [c, a] , [ a , a ] ] {- Semlab 2 (Concon 0 (Strictified (Input 2))) -}
  [[b, c], [c, a], [a, a], [a, c]] -> [ [b, b] , [b, c] , [c, a] , [ a , c ] ] {- Semlab 2 (Concon 1 (Strictified (Input 2))) -}
  [[b, c], [c, a], [a, a], [a, b]] -> [ [b, b] , [b, c] , [c, a] , [ a , b ] ] {- Semlab 2 (Concon 2 (Strictified (Input 2))) -}
  [[a, c], [c, c], [c, a], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [ c , a ] ] {- Semlab 0 (Concon 0 (Strictified (Input 3))) -}
  [[a, c], [c, c], [c, a], [a, c]] ->= [ [a, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 0 (Concon 1 (Strictified (Input 3))) -}
  [[a, c], [c, c], [c, a], [a, b]] ->= [ [a, c] , [c, a] , [a, c] , [ c , b ] ] {- Semlab 0 (Concon 2 (Strictified (Input 3))) -}
  [[c, c], [c, c], [c, a], [a, a]] ->= [ [c, c] , [c, a] , [a, c] , [ c , a ] ] {- Semlab 1 (Concon 0 (Strictified (Input 3))) -}
  [[c, c], [c, c], [c, a], [a, c]] ->= [ [c, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 1 (Concon 1 (Strictified (Input 3))) -}
  [[c, c], [c, c], [c, a], [a, b]] ->= [ [c, c] , [c, a] , [a, c] , [ c , b ] ] {- Semlab 1 (Concon 2 (Strictified (Input 3))) -}
  [[b, c], [c, c], [c, a], [a, a]] ->= [ [b, c] , [c, a] , [a, c] , [ c , a ] ] {- Semlab 2 (Concon 0 (Strictified (Input 3))) -}
  [[b, c], [c, c], [c, a], [a, c]] ->= [ [b, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 2 (Concon 1 (Strictified (Input 3))) -}
  [[b, c], [c, c], [c, a], [a, b]] ->= [ [b, c] , [c, a] , [a, c] , [ c , b ] ] {- Semlab 2 (Concon 2 (Strictified (Input 3))) -}
  [[a, a], [a, b], [b, c], [c, a]] -> [ [a, a] , [a, c] , [c, b] , [ b , a ] ] {- Semlab 0 (Concon 0 (Strictified (Input 4))) -}
  [[a, a], [a, b], [b, c], [c, c]] -> [ [a, a] , [a, c] , [c, b] , [ b , c ] ] {- Semlab 0 (Concon 1 (Strictified (Input 4))) -}
  [[a, a], [a, b], [b, c], [c, b]] -> [ [a, a] , [a, c] , [c, b] , [ b , b ] ] {- Semlab 0 (Concon 2 (Strictified (Input 4))) -}
  [[c, a], [a, b], [b, c], [c, a]] -> [ [c, a] , [a, c] , [c, b] , [ b , a ] ] {- Semlab 1 (Concon 0 (Strictified (Input 4))) -}
  [[c, a], [a, b], [b, c], [c, c]] -> [ [c, a] , [a, c] , [c, b] , [ b , c ] ] {- Semlab 1 (Concon 1 (Strictified (Input 4))) -}
  [[c, a], [a, b], [b, c], [c, b]] -> [ [c, a] , [a, c] , [c, b] , [ b , b ] ] {- Semlab 1 (Concon 2 (Strictified (Input 4))) -}
  [[b, a], [a, b], [b, c], [c, a]] -> [ [b, a] , [a, c] , [c, b] , [ b , a ] ] {- Semlab 2 (Concon 0 (Strictified (Input 4))) -}
  [[b, a], [a, b], [b, c], [c, c]] -> [ [b, a] , [a, c] , [c, b] , [ b , c ] ] {- Semlab 2 (Concon 1 (Strictified (Input 4))) -}
  [[b, a], [a, b], [b, c], [c, b]] -> [ [b, a] , [a, c] , [c, b] , [ b , b ] ] {- Semlab 2 (Concon 2 (Strictified (Input 4))) -}
  [[a, a], [a, b], [b, b], [b, a]] -> [ [a, b] , [b, a] , [a, c] , [ c , a ] ] {- Semlab 0 (Concon 0 (Strictified (Input 5))) -}
  [[a, a], [a, b], [b, b], [b, c]] -> [ [a, b] , [b, a] , [a, c] , [ c , c ] ] {- Semlab 0 (Concon 1 (Strictified (Input 5))) -}
  [[a, a], [a, b], [b, b], [b, b]] -> [ [a, b] , [b, a] , [a, c] , [ c , b ] ] {- Semlab 0 (Concon 2 (Strictified (Input 5))) -}
  [[c, a], [a, b], [b, b], [b, a]] -> [ [c, b] , [b, a] , [a, c] , [ c , a ] ] {- Semlab 1 (Concon 0 (Strictified (Input 5))) -}
  [[c, a], [a, b], [b, b], [b, c]] -> [ [c, b] , [b, a] , [a, c] , [ c , c ] ] {- Semlab 1 (Concon 1 (Strictified (Input 5))) -}
  [[c, a], [a, b], [b, b], [b, b]] -> [ [c, b] , [b, a] , [a, c] , [ c , b ] ] {- Semlab 1 (Concon 2 (Strictified (Input 5))) -}
  [[b, a], [a, b], [b, b], [b, a]] -> [ [b, b] , [b, a] , [a, c] , [ c , a ] ] {- Semlab 2 (Concon 0 (Strictified (Input 5))) -}
  [[b, a], [a, b], [b, b], [b, c]] -> [ [b, b] , [b, a] , [a, c] , [ c , c ] ] {- Semlab 2 (Concon 1 (Strictified (Input 5))) -}
  [[b, a], [a, b], [b, b], [b, b]] -> [ [b, b] , [b, a] , [a, c] , [ c , b ] ] {- Semlab 2 (Concon 2 (Strictified (Input 5))) -}
  [[a, a], [a, a], [a, c], [c, a]] ->= [ [a, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Strictified (Input 6))) -}
  [[a, a], [a, a], [a, c], [c, c]] ->= [ [a, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 0 (Concon 1 (Strictified (Input 6))) -}
  [[a, a], [a, a], [a, c], [c, b]] ->= [ [a, a] , [a, c] , [c, a] , [ a , b ] ] {- Semlab 0 (Concon 2 (Strictified (Input 6))) -}
  [[c, a], [a, a], [a, c], [c, a]] ->= [ [c, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Strictified (Input 6))) -}
  [[c, a], [a, a], [a, c], [c, c]] ->= [ [c, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 1 (Concon 1 (Strictified (Input 6))) -}
  [[c, a], [a, a], [a, c], [c, b]] ->= [ [c, a] , [a, c] , [c, a] , [ a , b ] ] {- Semlab 1 (Concon 2 (Strictified (Input 6))) -}
  [[b, a], [a, a], [a, c], [c, a]] ->= [ [b, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 2 (Concon 0 (Strictified (Input 6))) -}
  [[b, a], [a, a], [a, c], [c, c]] ->= [ [b, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 2 (Concon 1 (Strictified (Input 6))) -}
  [[b, a], [a, a], [a, c], [c, b]] ->= [ [b, a] , [a, c] , [c, a] , [ a , b ] ] {- Semlab 2 (Concon 2 (Strictified (Input 6))) -}
reason
  ( [a, a]
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( [a, b]
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( [a, c]
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( [b, a]
  , Ek 2  / 1 0 \
          \ 0 2 / )
  ( [b, b]
  , Ek 2  / 1 0 \
          \ 0 2 / )
  ( [b, c]
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( [c, a]
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( [c, b]
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( [c, c]
  , Ek 2  / 1 1 \
          \ 0 2 / )
   property Termination
has value Just True
for SRS
  [[a, b], [b, c], [c, a], [a, a]] -> [ [a, a] , [a, a] , [a, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b], [b, c], [c, a], [a, c]] -> [ [a, a] , [a, a] , [a, a] , [ a , c ] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, b], [b, c], [c, a], [a, b]] -> [ [a, a] , [a, a] , [a, a] , [ a , b ] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[c, b], [b, c], [c, a], [a, a]] -> [ [c, a] , [a, a] , [a, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[c, b], [b, c], [c, a], [a, c]] -> [ [c, a] , [a, a] , [a, a] , [ a , c ] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[c, b], [b, c], [c, a], [a, b]] -> [ [c, a] , [a, a] , [a, a] , [ a , b ] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[b, b], [b, c], [c, a], [a, a]] -> [ [b, a] , [a, a] , [a, a] , [ a , a ] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[b, b], [b, c], [c, a], [a, c]] -> [ [b, a] , [a, a] , [a, a] , [ a , c ] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[b, b], [b, c], [c, a], [a, b]] -> [ [b, a] , [a, a] , [a, a] , [ a , b ] ] {- Semlab 2 (Concon 2 (Input 1)) -}
  [[a, c], [c, a], [a, a], [a, a]] -> [ [a, b] , [b, c] , [c, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Strictified (Input 2))) -}
  [[a, c], [c, a], [a, a], [a, c]] -> [ [a, b] , [b, c] , [c, a] , [ a , c ] ] {- Semlab 0 (Concon 1 (Strictified (Input 2))) -}
  [[a, c], [c, a], [a, a], [a, b]] -> [ [a, b] , [b, c] , [c, a] , [ a , b ] ] {- Semlab 0 (Concon 2 (Strictified (Input 2))) -}
  [[c, c], [c, a], [a, a], [a, a]] -> [ [c, b] , [b, c] , [c, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Strictified (Input 2))) -}
  [[c, c], [c, a], [a, a], [a, c]] -> [ [c, b] , [b, c] , [c, a] , [ a , c ] ] {- Semlab 1 (Concon 1 (Strictified (Input 2))) -}
  [[c, c], [c, a], [a, a], [a, b]] -> [ [c, b] , [b, c] , [c, a] , [ a , b ] ] {- Semlab 1 (Concon 2 (Strictified (Input 2))) -}
  [[a, c], [c, c], [c, a], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [ c , a ] ] {- Semlab 0 (Concon 0 (Strictified (Input 3))) -}
  [[a, c], [c, c], [c, a], [a, c]] ->= [ [a, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 0 (Concon 1 (Strictified (Input 3))) -}
  [[a, c], [c, c], [c, a], [a, b]] ->= [ [a, c] , [c, a] , [a, c] , [ c , b ] ] {- Semlab 0 (Concon 2 (Strictified (Input 3))) -}
  [[c, c], [c, c], [c, a], [a, a]] ->= [ [c, c] , [c, a] , [a, c] , [ c , a ] ] {- Semlab 1 (Concon 0 (Strictified (Input 3))) -}
  [[c, c], [c, c], [c, a], [a, c]] ->= [ [c, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 1 (Concon 1 (Strictified (Input 3))) -}
  [[c, c], [c, c], [c, a], [a, b]] ->= [ [c, c] , [c, a] , [a, c] , [ c , b ] ] {- Semlab 1 (Concon 2 (Strictified (Input 3))) -}
  [[b, c], [c, c], [c, a], [a, a]] ->= [ [b, c] , [c, a] , [a, c] , [ c , a ] ] {- Semlab 2 (Concon 0 (Strictified (Input 3))) -}
  [[b, c], [c, c], [c, a], [a, c]] ->= [ [b, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 2 (Concon 1 (Strictified (Input 3))) -}
  [[b, c], [c, c], [c, a], [a, b]] ->= [ [b, c] , [c, a] , [a, c] , [ c , b ] ] {- Semlab 2 (Concon 2 (Strictified (Input 3))) -}
  [[a, a], [a, b], [b, c], [c, c]] -> [ [a, a] , [a, c] , [c, b] , [ b , c ] ] {- Semlab 0 (Concon 1 (Strictified (Input 4))) -}
  [[c, a], [a, b], [b, c], [c, c]] -> [ [c, a] , [a, c] , [c, b] , [ b , c ] ] {- Semlab 1 (Concon 1 (Strictified (Input 4))) -}
  [[b, a], [a, b], [b, c], [c, c]] -> [ [b, a] , [a, c] , [c, b] , [ b , c ] ] {- Semlab 2 (Concon 1 (Strictified (Input 4))) -}
  [[a, a], [a, a], [a, c], [c, a]] ->= [ [a, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Strictified (Input 6))) -}
  [[a, a], [a, a], [a, c], [c, c]] ->= [ [a, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 0 (Concon 1 (Strictified (Input 6))) -}
  [[a, a], [a, a], [a, c], [c, b]] ->= [ [a, a] , [a, c] , [c, a] , [ a , b ] ] {- Semlab 0 (Concon 2 (Strictified (Input 6))) -}
  [[c, a], [a, a], [a, c], [c, a]] ->= [ [c, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Strictified (Input 6))) -}
  [[c, a], [a, a], [a, c], [c, c]] ->= [ [c, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 1 (Concon 1 (Strictified (Input 6))) -}
  [[c, a], [a, a], [a, c], [c, b]] ->= [ [c, a] , [a, c] , [c, a] , [ a , b ] ] {- Semlab 1 (Concon 2 (Strictified (Input 6))) -}
  [[b, a], [a, a], [a, c], [c, a]] ->= [ [b, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 2 (Concon 0 (Strictified (Input 6))) -}
  [[b, a], [a, a], [a, c], [c, c]] ->= [ [b, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 2 (Concon 1 (Strictified (Input 6))) -}
  [[b, a], [a, a], [a, c], [c, b]] ->= [ [b, a] , [a, c] , [c, a] , [ a , b ] ] {- Semlab 2 (Concon 2 (Strictified (Input 6))) -}
reason
  ([a, a], 0/1)
  ([a, b], 1/1)
  ([a, c], 3/1)
  ([b, a], 0/1)
  ([b, b], 6/1)
  ([b, c], 1/1)
  ([c, a], 1/1)
  ([c, b], 3/1)
  ([c, c], 6/1)
   property Termination
has value Just True
for SRS
  [[a, c], [c, c], [c, a], [a, c]] ->= [ [a, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 0 (Concon 1 (Strictified (Input 3))) -}
  [[c, c], [c, c], [c, a], [a, c]] ->= [ [c, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 1 (Concon 1 (Strictified (Input 3))) -}
  [[b, c], [c, c], [c, a], [a, c]] ->= [ [b, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 2 (Concon 1 (Strictified (Input 3))) -}
  [[a, a], [a, a], [a, c], [c, a]] ->= [ [a, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 0 (Concon 0 (Strictified (Input 6))) -}
  [[c, a], [a, a], [a, c], [c, a]] ->= [ [c, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 1 (Concon 0 (Strictified (Input 6))) -}
  [[b, a], [a, a], [a, c], [c, a]] ->= [ [b, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 2 (Concon 0 (Strictified (Input 6))) -}
reason
  no strict rules

property Termination
has value Just True
for SRS
  [c, c, a] -> [c, a, c] {- Strictified (Input 3) -}
  [a, a, c] -> [a, c, a] {- Strictified (Input 6) -}
reason
  split
   property Termination
has value Just True
for SRS
  [c, c, a] ->= [c, a, c] {- Strictified (Input 3) -}
  [a, a, c] -> [a, c, a] {- Strictified (Input 6) -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[c, c], [c, c], [c, a], [a, c]] ->= [ [c, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 0 (Concon 0 (Strictified (Input 3))) -}
  [[c, c], [c, c], [c, a], [a, a]] ->= [ [c, c] , [c, a] , [a, c] , [ c , a ] ] {- Semlab 0 (Concon 1 (Strictified (Input 3))) -}
  [[a, c], [c, c], [c, a], [a, c]] ->= [ [a, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 1 (Concon 0 (Strictified (Input 3))) -}
  [[a, c], [c, c], [c, a], [a, a]] ->= [ [a, c] , [c, a] , [a, c] , [ c , a ] ] {- Semlab 1 (Concon 1 (Strictified (Input 3))) -}
  [[c, a], [a, a], [a, c], [c, c]] -> [ [c, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 0 (Concon 0 (Strictified (Input 6))) -}
  [[c, a], [a, a], [a, c], [c, a]] -> [ [c, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 0 (Concon 1 (Strictified (Input 6))) -}
  [[a, a], [a, a], [a, c], [c, c]] -> [ [a, a] , [a, c] , [c, a] , [ a , c ] ] {- Semlab 1 (Concon 0 (Strictified (Input 6))) -}
  [[a, a], [a, a], [a, c], [c, a]] -> [ [a, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 1 (Concon 1 (Strictified (Input 6))) -}
reason
  ([a, a], 1/1)
  ([a, c], 0/1)
  ([c, a], 0/1)
  ([c, c], 1/1)
   property Termination
has value Just True
for SRS
  [[c, c], [c, c], [c, a], [a, c]] ->= [ [c, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 0 (Concon 0 (Strictified (Input 3))) -}
  [[a, c], [c, c], [c, a], [a, c]] ->= [ [a, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 1 (Concon 0 (Strictified (Input 3))) -}
  [[c, a], [a, a], [a, c], [c, a]] -> [ [c, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 0 (Concon 1 (Strictified (Input 6))) -}
  [[a, a], [a, a], [a, c], [c, a]] -> [ [a, a] , [a, c] , [c, a] , [ a , a ] ] {- Semlab 1 (Concon 1 (Strictified (Input 6))) -}
reason
  ( [a, a]
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( [a, c]
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( [c, a]
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( [c, c]
  , Ek 2  / 1 1 \
          \ 0 2 / )
   property Termination
has value Just True
for SRS
  [[c, c], [c, c], [c, a], [a, c]] ->= [ [c, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 0 (Concon 0 (Strictified (Input 3))) -}
  [[a, c], [c, c], [c, a], [a, c]] ->= [ [a, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 1 (Concon 0 (Strictified (Input 3))) -}
reason
  no strict rules

property Termination
has value Just True
for SRS
  [c, c, a] -> [c, a, c] {- Strictified (Input 3) -}
reason
  split
   property Termination
has value Just True
for SRS
  [c, c, a] -> [c, a, c] {- Strictified (Input 3) -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[c, c], [c, c], [c, a], [a, c]] -> [ [c, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 0 (Concon 0 (Strictified (Input 3))) -}
  [[c, c], [c, c], [c, a], [a, a]] -> [ [c, c] , [c, a] , [a, c] , [ c , a ] ] {- Semlab 0 (Concon 1 (Strictified (Input 3))) -}
  [[a, c], [c, c], [c, a], [a, c]] -> [ [a, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 1 (Concon 0 (Strictified (Input 3))) -}
  [[a, c], [c, c], [c, a], [a, a]] -> [ [a, c] , [c, a] , [a, c] , [ c , a ] ] {- Semlab 1 (Concon 1 (Strictified (Input 3))) -}
reason
  ([a, a], 1/1)
  ([a, c], 0/1)
  ([c, a], 0/1)
  ([c, c], 1/1)
   property Termination
has value Just True
for SRS
  [[c, c], [c, c], [c, a], [a, c]] -> [ [c, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 0 (Concon 0 (Strictified (Input 3))) -}
  [[a, c], [c, c], [c, a], [a, c]] -> [ [a, c] , [c, a] , [a, c] , [ c , c ] ] {- Semlab 1 (Concon 0 (Strictified (Input 3))) -}
reason
  ( [a, c]
  , Ek 2  / 2 1 \
          \ 0 1 / )
  ( [c, a]
  , Ek 2  / 2 0 \
          \ 0 1 / )
  ( [c, c]
  , Ek 2  / 2 0 \
          \ 0 1 / )
   property Termination
has value Just True
for SRS
  
reason
  no strict rules

property Termination
has value Just True
for SRS
  
reason
  no strict rules

**************************************************
skeleton: (2/5,3)\Strictify(7,3)\Split[(5/2,3)\TileAllAll{2}(45/18,9)\Matrix{\Natural}{2}(18/18,9)\Weight(0/6,6)[],(2,2)\Split[(1/1,2)\TileAllAll{2}(4/4,4)\Weight(2/2,4)\Matrix{\Natural}{2}(0/2,3)[],(1,2)\Split[(1,2)\TileAllAll{2}(4,4)\Weight(2,3)\Matrix{\Natural}{2}(0,0)[],(0,0)[]]]]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))last 13202 length 57303
last 15028 length 63192
CNF 13202 vars 57303 clauses
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 15028 vars 63192 clauses

Success : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 1.803444194000
  min duration 0.006584848000
  total durat. 4.264451117000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 84
      , num_strict_rules = 21
      , num_top_rules = 21
      , num_weak_rules = 63
      , alphabet_size = 12
      , total_length = 672}
    , self = 150
    , parent = Nothing
    , duration = 1.803444194000
    , status = Success
    , start = 2025-09-04 08:21:19.281708338 UTC
    , finish = 2025-09-04 08:21:21.085152532 UTC
    , thread_cap_info = ("ThreadId 199", 1, False)}
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 4
  max duration 1.385078757000
  min duration 0.038487808000
  total durat. 3.088439567000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 7
      , alphabet_size = 6
      , total_length = 84}
    , self = 122
    , parent = Nothing
    , duration = 1.380771042000
    , status = Fail
    , start = 2025-09-04 08:21:18.992722784 UTC
    , finish = 2025-09-04 08:21:20.373493826 UTC
    , thread_cap_info = ("ThreadId 167", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 7
      , alphabet_size = 5
      , total_length = 72}
    , self = 124
    , parent = Nothing
    , duration = 1.385078757000
    , status = Fail
    , start = 2025-09-04 08:21:19.027087513 UTC
    , finish = 2025-09-04 08:21:20.41216627 UTC
    , thread_cap_info = ("ThreadId 185", 1, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.749198365000
  min duration 0.376693529000
  total durat. 3.857955034000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 63
      , num_strict_rules = 63
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 504}
    , self = 137
    , parent = Nothing
    , duration = 1.732063140000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:21:19.005025395 UTC
    , finish = 2025-09-04 08:21:20.737088535 UTC
    , thread_cap_info = ("ThreadId 178", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 78
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 63
      , alphabet_size = 11
      , total_length = 624}
    , self = 142
    , parent = Nothing
    , duration = 1.749198365000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:21:19.208425643 UTC
    , finish = 2025-09-04 08:21:20.957624008 UTC
    , thread_cap_info = ("ThreadId 194", 0, False)}
Success : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 1.740520511000
  min duration 0.011964159000
  total durat. 4.977452136000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 5
      , total_length = 40}
    , self = 119
    , parent = Nothing
    , duration = 1.182662651000
    , status = Success
    , start = 2025-09-04 08:21:18.886516351 UTC
    , finish = 2025-09-04 08:21:20.069179002 UTC
    , thread_cap_info = ("ThreadId 99", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 63
      , num_strict_rules = 63
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 504}
    , self = 125
    , parent = Nothing
    , duration = 1.664490515000
    , status = Success
    , start = 2025-09-04 08:21:19.008393079 UTC
    , finish = 2025-09-04 08:21:20.672883594 UTC
    , thread_cap_info = ("ThreadId 180", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 78
      , num_strict_rules = 15
      , num_top_rules = 15
      , num_weak_rules = 63
      , alphabet_size = 11
      , total_length = 624}
    , self = 140
    , parent = Nothing
    , duration = 1.740520511000
    , status = Success
    , start = 2025-09-04 08:21:19.208429535 UTC
    , finish = 2025-09-04 08:21:20.948950046 UTC
    , thread_cap_info = ("ThreadId 195", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 5
  max duration 1.782357022000
  min duration 0.010069179000
  total durat. 4.635245574000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 7
      , alphabet_size = 6
      , total_length = 84}
    , self = 121
    , parent = Nothing
    , duration = 1.303505068000
    , status = Fail
    , start = 2025-09-04 08:21:19.008413524 UTC
    , finish = 2025-09-04 08:21:20.311918592 UTC
    , thread_cap_info = ("ThreadId 168", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 7
      , alphabet_size = 5
      , total_length = 72}
    , self = 123
    , parent = Nothing
    , duration = 1.362861357000
    , status = Fail
    , start = 2025-09-04 08:21:19.02912802 UTC
    , finish = 2025-09-04 08:21:20.391989377 UTC
    , thread_cap_info = ("ThreadId 186", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 84
      , num_strict_rules = 21
      , num_top_rules = 21
      , num_weak_rules = 63
      , alphabet_size = 12
      , total_length = 672}
    , self = 149
    , parent = Nothing
    , duration = 1.782357022000
    , status = Fail
    , start = 2025-09-04 08:21:19.288411479 UTC
    , finish = 2025-09-04 08:21:21.070768501 UTC
    , thread_cap_info = ("ThreadId 200", 1, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.084140201000
  min duration 2.084140201000
  total durat. 2.084140201000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 2
      , alphabet_size = 4
      , total_length = 24}
    , self = 147
    , parent = Nothing
    , duration = 2.084140201000
    , status = Success
    , start = 2025-09-04 08:21:18.897943285 UTC
    , finish = 2025-09-04 08:21:20.982083486 UTC
    , thread_cap_info = ("ThreadId 112", 1, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.576763203000
  min duration 1.410577963000
  total durat. 2.987341166000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 7
      , alphabet_size = 6
      , total_length = 84}
    , self = 181
    , parent = Nothing
    , duration = 1.410577963000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:21:20.418165954 UTC
    , finish = 2025-09-04 08:21:21.828743917 UTC
    , thread_cap_info = ("ThreadId 210", 2, False)}
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 7
      , alphabet_size = 5
      , total_length = 72}
    , self = 188
    , parent = Nothing
    , duration = 1.576763203000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:21:20.429072893 UTC
    , finish = 2025-09-04 08:21:22.005836096 UTC
    , thread_cap_info = ("ThreadId 212", 1, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 1.502054404000
  min duration 0.367915479000
  total durat. 3.289442001000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 7
      , num_top_rules = 7
      , num_weak_rules = 7
      , alphabet_size = 6
      , total_length = 84}
    , self = 177
    , parent = Nothing
    , duration = 1.419472118000
    , status = Success
    , start = 2025-09-04 08:21:20.329619599 UTC
    , finish = 2025-09-04 08:21:21.749091717 UTC
    , thread_cap_info = ("ThreadId 209", 1, False)}
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 12
      , num_strict_rules = 5
      , num_top_rules = 5
      , num_weak_rules = 7
      , alphabet_size = 5
      , total_length = 72}
    , self = 185
    , parent = Nothing
    , duration = 1.502054404000
    , status = Success
    , start = 2025-09-04 08:21:20.408453502 UTC
    , finish = 2025-09-04 08:21:21.910507906 UTC
    , thread_cap_info = ("ThreadId 211", 1, False)}
**************************************************
F                          Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
F                          , closure = Backward\n , start_strict_only = True\n , max_closure_length
F                          = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
F                          Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
F                          8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
F                          = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
F                          ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
F                          1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
F                          = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
F                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
F                          = 18} , self = 90 , parent = Nothing , duration = 0.157084095000 , status
F                          = Fail , start = 2025-09-04 08:21:18.835438437 UTC , finish = 2025-09-04
F                          08:21:18.992522532 UTC , thread_cap_info = ("ThreadId 35", 2, False)}
F                          
| E                        Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| E                        , closure = Forward\n , start_strict_only = True\n , max_closure_length
| E                        = Nothing\n , max_closure_width = Nothing\n , max_closure_width_lhs = Nothing\n
| E                        , max_closure_width_rhs = Nothing\n , max_inner_children = (Just 8)\n ,
| E                        max_outer_children = (Just 2)\n , intermediates = All\n , priority = (Linear
| E                        [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps) ])\n ,
| E                        string_implementation = (ByteString Plain)\n , max_seen_size = Nothing\n
| E                        , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| E                        = True})" , input_size = Size { num_rules = 3 , num_strict_rules = 3 ,
| E                        num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| E                        = 18} , self = 75 , parent = Nothing , duration = 0.149138812000 , status
| E                        = Except "AsyncCancelled" , start = 2025-09-04 08:21:18.840383125 UTC ,
| E                        finish = 2025-09-04 08:21:18.989521937 UTC , thread_cap_info = ("ThreadId
| E                        48", 3, False)}
| E                        
| | S                      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S                      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S                      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S                      = 4 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | S                      = 4 , total_length = 24} , self = 114 , parent = Nothing , duration = 0.367915479000
| | S                      , status = Success , start = 2025-09-04 08:21:18.869930656 UTC , finish
| | S                      = 2025-09-04 08:21:19.237846135 UTC , thread_cap_info = ("ThreadId 82",
| | S                      1, False)}
| | S                      
| | | S                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | S                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | S                    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | S                    = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | S                    = 40} , self = 117 , parent = Nothing , duration = 0.821658298000 , status
| | | S                    = Success , start = 2025-09-04 08:21:18.872251602 UTC , finish = 2025-09-04
| | | S                    08:21:19.6939099 UTC , thread_cap_info = ("ThreadId 98", 2, False)}
| | | S                    
| | | | S                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | S                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | S                  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | S                  = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | | S                  = 40} , self = 119 , parent = Nothing , duration = 1.182662651000 , status
| | | | S                  = Success , start = 2025-09-04 08:21:18.886516351 UTC , finish = 2025-09-04
| | | | S                  08:21:20.069179002 UTC , thread_cap_info = ("ThreadId 99", 2, False)}
| | | | S                  
| | | | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | F                = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size = 3 , total_length
| | | | | F                = 18} , self = 110 , parent = Nothing , duration = 0.284101960000 , status
| | | | | F                = Fail , start = 2025-09-04 08:21:18.886729607 UTC , finish = 2025-09-04
| | | | | F                08:21:19.170831567 UTC , thread_cap_info = ("ThreadId 104", 1, False)}
| | | | | F                
| | | | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 3 , num_strict_rules
| | | | | | F              = 1 , num_top_rules = 1 , num_weak_rules = 2 , alphabet_size = 3 , total_length
| | | | | | F              = 18} , self = 103 , parent = Nothing , duration = 0.176452948000 , status
| | | | | | F              = Fail , start = 2025-09-04 08:21:18.888393637 UTC , finish = 2025-09-04
| | | | | | F              08:21:19.064846585 UTC , thread_cap_info = ("ThreadId 105", 1, False)}
| | | | | | F              
| | | | | | | S            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | S            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | S            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | S            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | S            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | S            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | | S            , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 2 , alphabet_size
| | | | | | | S            = 4 , total_length = 24} , self = 147 , parent = Nothing , duration = 2.084140201000
| | | | | | | S            , status = Success , start = 2025-09-04 08:21:18.897943285 UTC , finish
| | | | | | | S            = 2025-09-04 08:21:20.982083486 UTC , thread_cap_info = ("ThreadId 112",
| | | | | | | S            1, False)}
| | | | | | | S            
| | | | | | | | F          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
| | | | | | | | F          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
| | | | | | | | F          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
| | | | | | | | F          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
| | | | | | | | F          = True}" , input_size = Size { num_rules = 7 , num_strict_rules = 7 , num_top_rules
| | | | | | | | F          = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length = 42} , self
| | | | | | | | F          = 94 , parent = Nothing , duration = 0.100097036000 , status = Fail , start
| | | | | | | | F          = 2025-09-04 08:21:18.902595077 UTC , finish = 2025-09-04 08:21:19.002692113
| | | | | | | | F          UTC , thread_cap_info = ("ThreadId 118", 2, False)}
| | | | | | | | F          
| E | | | | | | |          
F   | | | | | | |          
F   | | | | | | |          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F   | | | | | | |          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F   | | | | | | |          = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
F   | | | | | | |          = 7 , num_top_rules = 7 , num_weak_rules = 7 , alphabet_size = 6 , total_length
F   | | | | | | |          = 84} , self = 122 , parent = Nothing , duration = 1.380771042000 , status
F   | | | | | | |          = Fail , start = 2025-09-04 08:21:18.992722784 UTC , finish = 2025-09-04
F   | | | | | | |          08:21:20.373493826 UTC , thread_cap_info = ("ThreadId 167", 1, False)}
F   | | | | | | |          
|   | | | | | | F          
| E | | | | | |            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E | | | | | |            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E | | | | | |            = False\n , verbose = False}" , input_size = Size { num_rules = 63 , num_strict_rules
| E | | | | | |            = 63 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| E | | | | | |            = 504} , self = 137 , parent = Nothing , duration = 1.732063140000 , status
| E | | | | | |            = Except "AsyncCancelled" , start = 2025-09-04 08:21:19.005025395 UTC ,
| E | | | | | |            finish = 2025-09-04 08:21:20.737088535 UTC , thread_cap_info = ("ThreadId
| E | | | | | |            178", 0, False)}
| E | | | | | |            
| | | | | | | | S          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | S          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | S          = False\n , verbose = False}" , input_size = Size { num_rules = 63 , num_strict_rules
| | | | | | | | S          = 63 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | | | | S          = 504} , self = 125 , parent = Nothing , duration = 1.664490515000 , status
| | | | | | | | S          = Success , start = 2025-09-04 08:21:19.008393079 UTC , finish = 2025-09-04
| | | | | | | | S          08:21:20.672883594 UTC , thread_cap_info = ("ThreadId 180", 0, False)}
| | | | | | | | S          
| | | | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | | | | | | | F        = 7 , num_top_rules = 7 , num_weak_rules = 7 , alphabet_size = 6 , total_length
| | | | | | | | | F        = 84} , self = 121 , parent = Nothing , duration = 1.303505068000 , status
| | | | | | | | | F        = Fail , start = 2025-09-04 08:21:19.008413524 UTC , finish = 2025-09-04
| | | | | | | | | F        08:21:20.311918592 UTC , thread_cap_info = ("ThreadId 168", 1, False)}
| | | | | | | | | F        
| | | | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | | | F      = 5 , num_top_rules = 5 , num_weak_rules = 7 , alphabet_size = 5 , total_length
| | | | | | | | | | F      = 72} , self = 124 , parent = Nothing , duration = 1.385078757000 , status
| | | | | | | | | | F      = Fail , start = 2025-09-04 08:21:19.027087513 UTC , finish = 2025-09-04
| | | | | | | | | | F      08:21:20.41216627 UTC , thread_cap_info = ("ThreadId 185", 1, False)}
| | | | | | | | | | F      
| | | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | | | | F    = 5 , num_top_rules = 5 , num_weak_rules = 7 , alphabet_size = 5 , total_length
| | | | | | | | | | | F    = 72} , self = 123 , parent = Nothing , duration = 1.362861357000 , status
| | | | | | | | | | | F    = Fail , start = 2025-09-04 08:21:19.02912802 UTC , finish = 2025-09-04
| | | | | | | | | | | F    08:21:20.391989377 UTC , thread_cap_info = ("ThreadId 186", 1, False)}
| | | | | | | | | | | F    
| | | | | | F | | | | |    
| | | | | F   | | | | |    
| | | | | E   | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E   | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E   | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 78 , num_strict_rules
| | | | | E   | | | | |    = 15 , num_top_rules = 15 , num_weak_rules = 63 , alphabet_size = 11 ,
| | | | | E   | | | | |    total_length = 624} , self = 142 , parent = Nothing , duration = 1.749198365000
| | | | | E   | | | | |    , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:19.208425643
| | | | | E   | | | | |    UTC , finish = 2025-09-04 08:21:20.957624008 UTC , thread_cap_info = ("ThreadId
| | | | | E   | | | | |    194", 0, False)}
| | | | | E   | | | | |    
| | | | | | S | | | | |    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | S | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | S | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 78 , num_strict_rules
| | | | | | S | | | | |    = 15 , num_top_rules = 15 , num_weak_rules = 63 , alphabet_size = 11 ,
| | | | | | S | | | | |    total_length = 624} , self = 140 , parent = Nothing , duration = 1.740520511000
| | | | | | S | | | | |    , status = Success , start = 2025-09-04 08:21:19.208429535 UTC , finish
| | | | | | S | | | | |    = 2025-09-04 08:21:20.948950046 UTC , thread_cap_info = ("ThreadId 195",
| | | | | | S | | | | |    0, False)}
| | | | | | S | | | | |    
| | S | | | | | | | | |    
| | S | | | | | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | S | | | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | S | | | | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 84 , num_strict_rules
| | S | | | | | | | | |    = 21 , num_top_rules = 21 , num_weak_rules = 63 , alphabet_size = 12 ,
| | S | | | | | | | | |    total_length = 672} , self = 150 , parent = Nothing , duration = 1.803444194000
| | S | | | | | | | | |    , status = Success , start = 2025-09-04 08:21:19.281708338 UTC , finish
| | S | | | | | | | | |    = 2025-09-04 08:21:21.085152532 UTC , thread_cap_info = ("ThreadId 199",
| | S | | | | | | | | |    1, False)}
| | S | | | | | | | | |    
| | | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 84 , num_strict_rules
| | | | | | | | | | | | F  = 21 , num_top_rules = 21 , num_weak_rules = 63 , alphabet_size = 12 ,
| | | | | | | | | | | | F  total_length = 672} , self = 149 , parent = Nothing , duration = 1.782357022000
| | | | | | | | | | | | F  , status = Fail , start = 2025-09-04 08:21:19.288411479 UTC , finish =
| | | | | | | | | | | | F  2025-09-04 08:21:21.070768501 UTC , thread_cap_info = ("ThreadId 200",
| | | | | | | | | | | | F  1, False)}
| | | | | | | | | | | | F  
| | | S | | | | | | | | |  
| | |   S | | | | | | | |  
| | |     | | | | F | | |  
| | | S   | | | |   | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S   | | | |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S   | | | |   | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S   | | | |   | | |  = 14 , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 7 ,
| | | S   | | | |   | | |  alphabet_size = 6 , total_length = 84} , self = 177 , parent = Nothing
| | | S   | | | |   | | |  , duration = 1.419472118000 , status = Success , start = 2025-09-04 08:21:20.329619599
| | | S   | | | |   | | |  UTC , finish = 2025-09-04 08:21:21.749091717 UTC , thread_cap_info = ("ThreadId
| | | S   | | | |   | | |  209", 1, False)}
| | | S   | | | |   | | |  
F | | |   | | | |   | | |  
  | | |   | | | |   | F |  
S | | |   | | | |   |   |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S | | |   | | | |   |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S | | |   | | | |   |   |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S | | |   | | | |   |   |  = 12 , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 7 ,
S | | |   | | | |   |   |  alphabet_size = 5 , total_length = 72} , self = 185 , parent = Nothing
S | | |   | | | |   |   |  , duration = 1.502054404000 , status = Success , start = 2025-09-04 08:21:20.408453502
S | | |   | | | |   |   |  UTC , finish = 2025-09-04 08:21:21.910507906 UTC , thread_cap_info = ("ThreadId
S | | |   | | | |   |   |  211", 1, False)}
S | | |   | | | |   |   |  
| | | |   | | | |   F   |  
| | | | E | | | |       |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | E | | | |       |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | E | | | |       |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | E | | | |       |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | E | | | |       |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | E | | | |       |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | | | E | | | |       |  , num_strict_rules = 7 , num_top_rules = 7 , num_weak_rules = 7 , alphabet_size
| | | | E | | | |       |  = 6 , total_length = 84} , self = 181 , parent = Nothing , duration = 1.410577963000
| | | | E | | | |       |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:20.418165954
| | | | E | | | |       |  UTC , finish = 2025-09-04 08:21:21.828743917 UTC , thread_cap_info = ("ThreadId
| | | | E | | | |       |  210", 2, False)}
| | | | E | | | |       |  
| | | | | | | | | E     |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | | | | E     |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | E     |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | E     |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | E     |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | E     |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | | | | | | | E     |  , num_strict_rules = 5 , num_top_rules = 5 , num_weak_rules = 7 , alphabet_size
| | | | | | | | | E     |  = 5 , total_length = 72} , self = 188 , parent = Nothing , duration = 1.576763203000
| | | | | | | | | E     |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:20.429072893
| | | | | | | | | E     |  UTC , finish = 2025-09-04 08:21:22.005836096 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E     |  212", 1, False)}
| | | | | | | | | E     |  
| | | | | | | | S |     |  
| | | | | | | | E |     |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | E |     |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | E |     |  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | E |     |  = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | | | | E |     |  = 32} , self = 155 , parent = Nothing , duration = 0.376693529000 , status
| | | | | | | | E |     |  = Except "AsyncCancelled" , start = 2025-09-04 08:21:20.733152153 UTC ,
| | | | | | | | E |     |  finish = 2025-09-04 08:21:21.109845682 UTC , thread_cap_info = ("ThreadId
| | | | | | | | E |     |  236", 1, False)}
| | | | | | | | E |     |  
| | | | | | | | | | S   |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | S   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | S   |  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | | | S   |  = 4 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 4 , total_length
| | | | | | | | | | S   |  = 32} , self = 152 , parent = Nothing , duration = 0.363976128000 , status
| | | | | | | | | | S   |  = Success , start = 2025-09-04 08:21:20.733154637 UTC , finish = 2025-09-04
| | | | | | | | | | S   |  08:21:21.097130765 UTC , thread_cap_info = ("ThreadId 238", 1, False)}
| | | | | | | | | | S   |  
| E | | | | | | | | |   |  
|   | | | | S | | | |   |  
|   | | | E   | | | |   |  
| E | | |     | | | |   |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| E | | |     | | | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E | | |     | | | |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| E | | |     | | | |   |  = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| E | | |     | | | |   |  = 40} , self = 174 , parent = Nothing , duration = 0.739224780000 , status
| E | | |     | | | |   |  = Except "AsyncCancelled" , start = 2025-09-04 08:21:20.958227154 UTC ,
| E | | |     | | | |   |  finish = 2025-09-04 08:21:21.697451934 UTC , thread_cap_info = ("ThreadId
| E | | |     | | | |   |  251", 0, False)}
| E | | |     | | | |   |  
| | | | | S   | | | |   |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | S   | | | |   |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | S   | | | |   |  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | S   | | | |   |  = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 5 , total_length
| | | | | S   | | | |   |  = 40} , self = 172 , parent = Nothing , duration = 0.674241466000 , status
| | | | | S   | | | |   |  = Success , start = 2025-09-04 08:21:20.958236085 UTC , finish = 2025-09-04
| | | | | S   | | | |   |  08:21:21.632477551 UTC , thread_cap_info = ("ThreadId 250", 1, False)}
| | | | | S   | | | |   |  
| | | | | |   S | | |   |  
| | | | | |     | | |   F  
| | S | | |     | | |      
| |   | | |     | | S      
| |   | | |     E |        
| | S | | |       |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | S | | |       |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | S | | |       |        = False\n , verbose = False}" , input_size = Size { num_rules = 2 , num_strict_rules
| | S | | |       |        = 2 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | S | | |       |        = 16} , self = 193 , parent = Nothing , duration = 0.941312270000 , status
| | S | | |       |        = Success , start = 2025-09-04 08:21:21.110164797 UTC , finish = 2025-09-04
| | S | | |       |        08:21:22.051477067 UTC , thread_cap_info = ("ThreadId 285", 1, False)}
| | S | | |       |        
| | | | | S       |        
| E | | |         |        
|   | S |         |        
|   |   E         |        
S   |             |        
    |             E        
    S                      
