[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 340 length 1499
last 344 length 1488
CNF 344 vars 1488 clauses
last 340 length 1499
CNF 340 vars 1499 clauses
CNF 340 vars 1499 clauses
last 344 length 1488
CNF 344 vars 1488 clauses
last 1875 length 11064
CNF 1875 vars 11064 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1294, clauses: 4720
last 1294 length 4720
CNF 1294 vars 4720 clauses
last 302 length 1272
last 271 length 1231
CNF 271 vars 1231 clauses
CNF 302 vars 1272 clauses
last 2086 length 11232
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1294, clauses: 4720, status: Unsatisfied, time: 0.04646496s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3517, clauses: 14511
last 3517 length 14511
CNF 3517 vars 14511 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3517, clauses: 14511, status: Unsatisfied, time: 0.007483011s
CNF 2086 vars 11232 clauses
last 2276 length 16887
last 2290 length 12627
last 2276 length 16887
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1009, clauses: 3862
last 2290 length 12627
last 2817 length 13464
last 2817 length 13464
last 2086 length 11232
last 2992 length 15521
CNF 2276 vars 16887 clauses
last 3075 length 20102
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6892, clauses: 28488
CNF 2290 vars 12627 clauses
last 1009 length 3862
CNF 2276 vars 16887 clauses
CNF 2817 vars 13464 clauses
CNF 2290 vars 12627 clauses
CNF 2817 vars 13464 clauses
CNF 2992 vars 15521 clauses
CNF 3075 vars 20102 clauses
last 6892 length 28488
CNF 2086 vars 11232 clauses
CNF 1009 vars 3862 clauses
CNF 6892 vars 28488 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2607, clauses: 10334
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1009, clauses: 3862, status: Unsatisfied, time: 0.210063557s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6892, clauses: 28488, status: Satisfied, time: 0.238643898s
last 2607 length 10334
last 14565 length 72694
CNF 2607 vars 10334 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17834, clauses: 74041
last 17834 length 74041
last 13223 length 87448
last 220 length 1034
CNF 14565 vars 72694 clauses
last 249 length 1070
CNF 249 vars 1070 clauses
CNF 220 vars 1034 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2607, clauses: 10334, status: Unsatisfied, time: 0.082872708s
CNF 17834 vars 74041 clauses
CNF 13223 vars 87448 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 780, clauses: 2956
last 780 length 2956
CNF 780 vars 2956 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 780, clauses: 2956, status: Unsatisfied, time: 0.033818609s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5496, clauses: 22636
last 5496 length 22636
CNF 5496 vars 22636 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 17834, clauses: 74041, status: Satisfied, time: 0.143204997s
last 2545 length 18339
CNF 2545 vars 18339 clauses
last 2446 length 13308
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5496, clauses: 22636, status: Satisfied, time: 0.057996931s
CNF 2446 vars 13308 clauses
**************************************************
summary
**************************************************
SRS with 1 strict rules and 1 weak rules on 2 letters       mirror
SRS with 1 strict rules and 1 weak rules on 2 letters       context
SRS with 2 strict rules and 1 weak rules on 2 letters       mirror
SRS with 2 strict rules and 1 weak rules on 2 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 1 weak rules on 2 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 1 weak rules on 2 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, a] -> [] {- Input 0 -}
  [a, a] ->= [b, a, a, a, b] {- Input 1 -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a] -> [] {- Mirror (Input 0) -}
  [a, a] ->= [b, a, a, a, b] {- Mirror (Input 1) -}
reason
  context
   property Termination
has value Just True
for SRS
  [a, a, a] -> [a] {- Mirror (Input 0) -}
  [b, a, a] -> [b] {- Mirror (Input 0) -}
  [a, a] ->= [b, a, a, a, b] {- Mirror (Input 1) -}
reason
  mirror
   property Termination
has value Just True
for SRS
  [a, a, a] -> [a] {- Input 0 -}
  [a, a, b] -> [b] {- Input 0 -}
  [a, a] ->= [b, a, a, a, b] {- Input 1 -}
reason
  ( a
  , St  / 0A 1A  1A \
        | 0A -   -  |
        \ -  -2A 0A / )
  ( b
  , St  / 0A - -   \
        | -  - -1A |
        \ -  - -   / )
   property Termination
has value Just True
for SRS
  [a, a, a] -> [a] {- Input 0 -}
  [a, a] ->= [b, a, a, a, b] {- Input 1 -}
reason
  ( a
  , St  / 0A  0A  1A \
        | 1A  -   -  |
        \ -1A -2A -  / )
  ( b
  , St  / 0A -2A - \
        | -  -   - |
        \ -  -   - / )
   property Termination
has value Just True
for SRS
  [a, a] ->= [b, a, a, a, b] {- Input 1 -}
reason
  no strict rules

**************************************************
skeleton: \Mirror(1/1,2)\Context\Mirror(2/1,2)\Matrix{\ArcticBZ}{3}(1/1,2)\Matrix{\ArcticBZ}{3}(0/1,2)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 11
  max duration 0.443103102000
  min duration 0.009442212000
  total durat. 1.996491695000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 11
  max duration 0.449812974000
  min duration 0.010487519000
  total durat. 1.803345055000
**************************************************
F                          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                          = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
F                          = 7 , num_top_rules = 7 , num_weak_rules = 4 , alphabet_size = 6 , total_length
F                          = 85} , self = 98 , parent = Nothing , duration = 0.306179571000 , status
F                          = Fail , start = 2025-09-04 07:32:07.735830854 UTC , finish = 2025-09-04
F                          07:32:08.042010425 UTC , thread_cap_info = ("ThreadId 112", 1, False)}
F                          
| F                        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                        = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| F                        = 7 , num_top_rules = 7 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| F                        = 85} , self = 93 , parent = Nothing , duration = 0.125311631000 , status
| F                        = Fail , start = 2025-09-04 07:32:07.750966895 UTC , finish = 2025-09-04
| F                        07:32:07.876278526 UTC , thread_cap_info = ("ThreadId 113", 1, False)}
| F                        
| | F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F                      = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | F                      = 52} , self = 96 , parent = Nothing , duration = 0.255705496000 , status
| | F                      = Fail , start = 2025-09-04 07:32:07.775284415 UTC , finish = 2025-09-04
| | F                      07:32:08.030989911 UTC , thread_cap_info = ("ThreadId 144", 0, False)}
| | F                      
| | | F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | F                    = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | F                    = 52} , self = 97 , parent = Nothing , duration = 0.261212063000 , status
| | | F                    = Fail , start = 2025-09-04 07:32:07.775285751 UTC , finish = 2025-09-04
| | | F                    07:32:08.036497814 UTC , thread_cap_info = ("ThreadId 148", 0, False)}
| | | F                    
| | | | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | F                  = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | F                  = 52} , self = 95 , parent = Nothing , duration = 0.201368515000 , status
| | | | F                  = Fail , start = 2025-09-04 07:32:07.785228885 UTC , finish = 2025-09-04
| | | | F                  07:32:07.9865974 UTC , thread_cap_info = ("ThreadId 162", 2, False)}
| | | | F                  
| | | | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | F                = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | F                = 52} , self = 101 , parent = Nothing , duration = 0.286101290000 , status
| | | | | F                = Fail , start = 2025-09-04 07:32:07.794849504 UTC , finish = 2025-09-04
| | | | | F                07:32:08.080950794 UTC , thread_cap_info = ("ThreadId 161", 2, False)}
| | | | | F                
| | | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | | | F              = 7 , num_top_rules = 7 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | | F              = 85} , self = 99 , parent = Nothing , duration = 0.261328660000 , status
| | | | | | F              = Fail , start = 2025-09-04 07:32:07.814671516 UTC , finish = 2025-09-04
| | | | | | F              07:32:08.076000176 UTC , thread_cap_info = ("ThreadId 167", 1, False)}
| | | | | | F              
| | | | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 11 , num_strict_rules
| | | | | | | F            = 7 , num_top_rules = 7 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | | | | F            = 85} , self = 103 , parent = Nothing , duration = 0.301375797000 , status
| | | | | | | F            = Fail , start = 2025-09-04 07:32:07.856724094 UTC , finish = 2025-09-04
| | | | | | | F            07:32:08.158099891 UTC , thread_cap_info = ("ThreadId 170", 1, False)}
| | | | | | | F            
| | | | | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | F          = 8 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | | F          = 84} , self = 100 , parent = Nothing , duration = 0.220468456000 , status
| | | | | | | | F          = Fail , start = 2025-09-04 07:32:07.856953031 UTC , finish = 2025-09-04
| | | | | | | | F          07:32:08.077421487 UTC , thread_cap_info = ("ThreadId 173", 2, False)}
| | | | | | | | F          
| | | | | | | | | F        Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | | | | F        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | | | F        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | | | F        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
last 2081 length 11801
| | | | | | | | | F        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | F        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | | | | | F        , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| | | | | | | | | F        = 2 , total_length = 15} , self = 104 , parent = Nothing , duration = 0.354684337000
| | | | | | | | | F        , status = Fail , start = 2025-09-04 07:32:07.857396499 UTC , finish =
| | | | | | | | | F        2025-09-04 07:32:08.212080836 UTC , thread_cap_info = ("ThreadId 175",
| | | | | | | | | F        3, False)}
| | | | | | | | | F        
| | | | | | | | | | S      Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | | | | | S      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | | S      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | | S      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | | S      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | | S      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 3
| | | | | | | | | | S      , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| | | | | | | | | | S      = 2 , total_length = 15} , self = 105 , parent = Nothing , duration = 0.371724885000
| | | | | | | | | | S      , status = Success , start = 2025-09-04 07:32:07.857399801 UTC , finish
| | | | | | | | | | S      = 2025-09-04 07:32:08.229124686 UTC , thread_cap_info = ("ThreadId 174",
| | | | | | | | | | S      0, False)}
| | | | | | | | | | S      
| | | | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | | | | F    = 8 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | | | | | F    = 84} , self = 102 , parent = Nothing , duration = 0.276076800000 , status
| | | | | | | | | | | F    = Fail , start = 2025-09-04 07:32:07.870991106 UTC , finish = 2025-09-04
| | | | | | | | | | | F    07:32:08.147067906 UTC , thread_cap_info = ("ThreadId 177", 3, False)}
| | | | | | | | | | | F    
| F | | | | | | | | | |    
| F | | | | | | | | | |    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | | | | | | | |    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | | | | | | | |    = False\n , verbose = False}" , input_size = Size { num_rules = 52 , num_strict_rules
| F | | | | | | | | | |    = 36 , num_top_rules = 0 , num_weak_rules = 16 , alphabet_size = 14 , total_length
| F | | | | | | | | | |    = 392} , self = 120 , parent = Nothing , duration = 0.443103102000 , status
| F | | | | | | | | | |    = Fail , start = 2025-09-04 07:32:07.891990289 UTC , finish = 2025-09-04
| F | | | | | | | | | |    07:32:08.335093391 UTC , thread_cap_info = ("ThreadId 182", 3, False)}
| F | | | | | | | | | |    
| | | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 52 , num_strict_rules
| | | | | | | | | | | | F  = 36 , num_top_rules = 0 , num_weak_rules = 16 , alphabet_size = 14 , total_length
| | | | | | | | | | | | F  = 392} , self = 121 , parent = Nothing , duration = 0.449812974000 , status
| | | | | | | | | | | | F  = Fail , start = 2025-09-04 07:32:07.891992668 UTC , finish = 2025-09-04
| | | | | | | | | | | | F  07:32:08.341805642 UTC , thread_cap_info = ("ThreadId 184", 3, False)}
| | | | | | | | | | | | F  
| | | | F | | | | | | | |  
| | | | S | | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | S | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | | S | | | | | | | |  , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | | | S | | | | | | | |  = 4 , total_length = 52} , self = 123 , parent = Nothing , duration = 0.439412786000
| | | | S | | | | | | | |  , status = Success , start = 2025-09-04 07:32:07.986630642 UTC , finish
| | | | S | | | | | | | |  = 2025-09-04 07:32:08.426043428 UTC , thread_cap_info = ("ThreadId 194",
| | | | S | | | | | | | |  2, False)}
| | | | S | | | | | | | |  
| | F | | | | | | | | | |  
| |   F | | | | | | | | |  
F |     | | | | | | | | |  
  |     | | F | | | | | |  
  |     | |   | F | | | |  
  |     | F   |   | | | |  
F |     |     |   | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
F |     |     |   | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F |     |     |   | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F |     |     |   | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F |     |     |   | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F |     |     |   | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
F |     |     |   | | | |  , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
F |     |     |   | | | |  = 4 , total_length = 52} , self = 118 , parent = Nothing , duration = 0.216763993000
F |     |     |   | | | |  , status = Fail , start = 2025-09-04 07:32:08.080980384 UTC , finish =
F |     |     |   | | | |  2025-09-04 07:32:08.297744377 UTC , thread_cap_info = ("ThreadId 197",
F |     |     |   | | | |  2, False)}
F |     |     |   | | | |  
| |     |     |   | | F |  
| |     |     F   | |   |  
| |     |         F |   |  
| |     |           S   |  
| | S   |               |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | S   |               |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | S   |               |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | S   |               |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S   |               |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S   |               |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 2
| | S   |               |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 1 , alphabet_size
| | S   |               |  = 2 , total_length = 11} , self = 130 , parent = Nothing , duration = 0.143192787000
| | S   |               |  , status = Success , start = 2025-09-04 07:32:08.283431133 UTC , finish
| | S   |               |  = 2025-09-04 07:32:08.42662392 UTC , thread_cap_info = ("ThreadId 223",
| | S   |               |  2, False)}
| | S   |               |  
F | |   |               |  
F | |   |               |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | |   |               |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | |   |               |  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
F | |   |               |  = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
F | |   |               |  = 60} , self = 139 , parent = Nothing , duration = 0.124636736000 , status
F | |   |               |  = Fail , start = 2025-09-04 07:32:08.318357292 UTC , finish = 2025-09-04
F | |   |               |  07:32:08.442994028 UTC , thread_cap_info = ("ThreadId 227", 2, False)}
F | |   |               |  
| | | E |               |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | E |               |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | E |               |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | E |               |  , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E |               |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E |               |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 8
| | | E |               |  , num_strict_rules = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | | E |               |  = 4 , total_length = 52} , self = 125 , parent = Nothing , duration = 0.107790394000
| | | E |               |  , status = Except "AsyncCancelled" , start = 2025-09-04 07:32:08.318371587
| | | E |               |  UTC , finish = 2025-09-04 07:32:08.426161981 UTC , thread_cap_info = ("ThreadId
| | | E |               |  226", 0, False)}
| | | E |               |  
| | | | | F             |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F             |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F             |  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | F             |  = 4 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | F             |  = 60} , self = 133 , parent = Nothing , duration = 0.103297441000 , status
| | | | | F             |  = Fail , start = 2025-09-04 07:32:08.330974631 UTC , finish = 2025-09-04
| | | | | F             |  07:32:08.434272072 UTC , thread_cap_info = ("ThreadId 230", 2, False)}
| | | | | F             |  
| F | | | |             |  
|   | | | |             F  
|   | | S |                
|   | E   |                
|   S     |                
|         F                
F                          
