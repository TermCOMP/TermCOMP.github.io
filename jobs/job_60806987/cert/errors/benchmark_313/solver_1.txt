[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 527 length 2597
CNF 527 vars 2597 clauses
last 1146 length 6412
CNF 1146 vars 6412 clauses
last 3037 length 17225
CNF 3037 vars 17225 clauses
last 2407 length 18055
last 2391 length 14023
last 1769 length 10068
CNF 2407 vars 18055 clauses
CNF 2391 vars 14023 clauses
last 3100 length 17331
last 730 length 3471
last 2826 length 17715
last 504 length 2386
last 1651 length 8558
CNF 1769 vars 10068 clauses
last 2738 length 17509
last 738 length 3834
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5804, clauses: 22926
last 1625 length 8104
last 1361 length 7184
last 2113 length 10897
last 738 length 3834
last 1361 length 7184
last 13567 length 90820
CNF 3100 vars 17331 clauses
CNF 730 vars 3471 clauses
CNF 2826 vars 17715 clauses
CNF 504 vars 2386 clauses
CNF 1651 vars 8558 clauses
CNF 738 vars 3834 clauses
CNF 2738 vars 17509 clauses
last 5804 length 22926
CNF 1361 vars 7184 clauses
CNF 1625 vars 8104 clauses
last 12643 length 115572
CNF 2113 vars 10897 clauses
CNF 738 vars 3834 clauses
CNF 1361 vars 7184 clauses
CNF 13567 vars 90820 clauses
CNF 5804 vars 22926 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1656, clauses: 6733
CNF 12643 vars 115572 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2242, clauses: 8935
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12068, clauses: 50486
last 1656 length 6733
last 2242 length 8935
last 12068 length 50486
CNF 1656 vars 6733 clauses
CNF 2242 vars 8935 clauses
CNF 12068 vars 50486 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1656, clauses: 6733, status: Unsatisfied, time: 0.114077001s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2242, clauses: 8935, status: Satisfied, time: 0.06219747s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 5804, clauses: 22926, status: Unsatisfied, time: 0.634585228s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 1 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 4 weak rules on 4 letters       weights
SRS with 1 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 3 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, a] -> [] {- Input 0 -}
  [] ->= [a, a, a, a, b, a] {- Input 1 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [ [b, a] , [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 1/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 0 0 \
                | 0 5 1 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 5 1 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 5 7 \
                | 0 0 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[a, a]] ->= [ [a, a] , [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
reason
  no strict rules

**************************************************
skeleton: (1/1,2)\TileAllAll{2}(4/4,4)\Weight(1/3,4)\Matrix{\Natural}{3}(0/3,3)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 0.886855055000
  min duration 0.031815925000
  total durat. 5.281127970000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 1.015134542000
  min duration 0.247979097000
  total durat. 5.988664316000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 13
      , total_length = 328}
    , self = 101
    , parent = Nothing
    , duration = 1.015134542000
    , status = Fail
    , start = 2025-09-04 08:23:47.610926702 UTC
    , finish = 2025-09-04 08:23:48.626061244 UTC
    , thread_cap_info = ("ThreadId 176", 3, False)}
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.174441183000
  min duration 1.174441183000
  total durat. 1.174441183000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 24
      , num_strict_rules = 21
      , num_top_rules = 21
      , num_weak_rules = 3
      , alphabet_size = 6
      , total_length = 129}
    , self = 106
    , parent = Nothing
    , duration = 1.174441183000
    , status = Fail
    , start = 2025-09-04 08:23:47.498800486 UTC
    , finish = 2025-09-04 08:23:48.673241669 UTC
    , thread_cap_info = ("ThreadId 140", 0, False)}
**************************************************
F                                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F                                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                                    = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
F                                    = 14 , num_top_rules = 14 , num_weak_rules = 2 , alphabet_size = 4 , total_length
F                                    = 86} , self = 85 , parent = Nothing , duration = 0.247979097000 , status
F                                    = Fail , start = 2025-09-04 08:23:47.374678787 UTC , finish = 2025-09-04
F                                    08:23:47.622657884 UTC , thread_cap_info = ("ThreadId 86", 1, False)}
F                                    
| F                                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                                  = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| F                                  = 21 , num_top_rules = 21 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| F                                  = 129} , self = 67 , parent = Nothing , duration = 0.116570641000 , status
| F                                  = Fail , start = 2025-09-04 08:23:47.377203748 UTC , finish = 2025-09-04
| F                                  08:23:47.493774389 UTC , thread_cap_info = ("ThreadId 112", 0, False)}
| F                                  
| | F                                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                                = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | F                                = 21 , num_top_rules = 21 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | F                                = 129} , self = 89 , parent = Nothing , duration = 0.769846778000 , status
| | F                                = Fail , start = 2025-09-04 08:23:47.377206393 UTC , finish = 2025-09-04
| | F                                08:23:48.147053171 UTC , thread_cap_info = ("ThreadId 113", 0, False)}
| | F                                
| | | F                              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                              = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | F                              = 14 , num_top_rules = 14 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | F                              = 86} , self = 86 , parent = Nothing , duration = 0.283213497000 , status
| | | F                              = Fail , start = 2025-09-04 08:23:47.380283733 UTC , finish = 2025-09-04
| | | F                              08:23:47.66349723 UTC , thread_cap_info = ("ThreadId 85", 1, False)}
| | | F                              
| | | | F                            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                            = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | F                            = 21 , num_top_rules = 21 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | F                            = 129} , self = 94 , parent = Nothing , duration = 0.765305384000 , status
| | | | F                            = Fail , start = 2025-09-04 08:23:47.415243662 UTC , finish = 2025-09-04
| | | | F                            08:23:48.180549046 UTC , thread_cap_info = ("ThreadId 128", 0, False)}
| | | | F                            
| | | | | F                          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                          = False\n , verbose = False}" , input_size = Size { num_rules = 24 , num_strict_rules
| | | | | F                          Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12068, clauses: 50486, status: Satisfied, time: 0.105856602s
= 21 , num_top_rules = 21 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | | F                          = 129} , self = 88 , parent = Nothing , duration = 0.721812083000 , status
| | | | | F                          = Fail , start = 2025-09-04 08:23:47.419150275 UTC , finish = 2025-09-04
| | | | | F                          08:23:48.140962358 UTC , thread_cap_info = ("ThreadId 116", 3, False)}
| | | | | F                          
| | | | | | F                        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F                        = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | F                        = 14 , num_top_rules = 14 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | | F                        = 86} , self = 87 , parent = Nothing , duration = 0.611863592000 , status
| | | | | | F                        = Fail , start = 2025-09-04 08:23:47.419163921 UTC , finish = 2025-09-04
| | | | | | F                        08:23:48.031027513 UTC , thread_cap_info = ("ThreadId 123", 2, False)}
| | | | | | F                        
| | | | | | | F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 16 , num_strict_rules
| | | | | | | F                      = 14 , num_top_rules = 14 , num_weak_rules = 2 , alphabet_size = 4 , total_length
| | | | | | | F                      = 86} , self = 92 , parent = Nothing , duration = 0.679868577000 , status
| | | | | | | F                      = Fail , start = 2025-09-04 08:23:47.474865213 UTC , finish = 2025-09-04
| | | | | | | F                      08:23:48.15473379 UTC , thread_cap_info = ("ThreadId 122", 2, False)}
| | | | | | | F                      
| F | | | | | |                      
| F | | | | | |                      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F | | | | | |                      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F | | | | | |                      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F | | | | | |                      = 24 , num_strict_rules = 21 , num_top_rules = 21 , num_weak_rules = 3
| F | | | | | |                      , alphabet_size = 6 , total_length = 129} , self = 106 , parent = Nothing
| F | | | | | |                      , duration = 1.174441183000 , status = Fail , start = 2025-09-04 08:23:47.498800486
| F | | | | | |                      UTC , finish = 2025-09-04 08:23:48.673241669 UTC , thread_cap_info = ("ThreadId
| F | | | | | |                      140", 0, False)}
| F | | | | | |                      
| | | | | | | | F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | F                    = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 2 , total_length
| | | | | | | | F                    = 28} , self = 90 , parent = Nothing , duration = 0.646343277000 , status
| | | | | | | | F                    = Fail , start = 2025-09-04 08:23:47.500810962 UTC , finish = 2025-09-04
| | | | | | | | F                    08:23:48.147154239 UTC , thread_cap_info = ("ThreadId 141", 2, False)}
| | | | | | | | F                    
| | | | | | | | | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | | F                  = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 2 , total_length
| | | | | | | | | F                  = 28} , self = 91 , parent = Nothing , duration = 0.642600874000 , status
| | | | | | | | | F                  = Fail , start = 2025-09-04 08:23:47.510492579 UTC , finish = 2025-09-04
| | | | | | | | | F                  08:23:48.153093453 UTC , thread_cap_info = ("ThreadId 142", 2, False)}
| | | | | | | | | F                  
| | | | | | | | | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | | F                = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | | | F                = 76} , self = 97 , parent = Nothing , duration = 0.673348081000 , status
| | | | | | | | | | F                = Fail , start = 2025-09-04 08:23:47.533329971 UTC , finish = 2025-09-04
| | | | | | | | | | F                08:23:48.206678052 UTC , thread_cap_info = ("ThreadId 153", 2, False)}
| | | | | | | | | | F                
| | | | | | | | | | | F              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | | | | F              = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | | | | F              = 30} , self = 93 , parent = Nothing , duration = 0.619535120000 , status
| | | | | | | | | | | F              = Fail , start = 2025-09-04 08:23:47.542823883 UTC , finish = 2025-09-04
| | | | | | | | | | | F              08:23:48.162359003 UTC , thread_cap_info = ("ThreadId 154", 2, False)}
| | | | | | | | | | | F              
| | | | | | | | | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | | | | F            = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | | | | | F            = 76} , self = 95 , parent = Nothing , duration = 0.647681825000 , status
| | | | | | | | | | | | F            = Fail , start = 2025-09-04 08:23:47.542849626 UTC , finish = 2025-09-04
| | | | | | | | | | | | F            08:23:48.190531451 UTC , thread_cap_info = ("ThreadId 157", 2, False)}
| | | | | | | | | | | | F            
| | | | | | | | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | | | | | | F          = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | F          = 30} , self = 96 , parent = Nothing , duration = 0.635696942000 , status
| | | | | | | | | | | | | F          = Fail , start = 2025-09-04 08:23:47.567686564 UTC , finish = 2025-09-04
| | | | | | | | | | | | | F          08:23:48.203383506 UTC , thread_cap_info = ("ThreadId 159", 2, False)}
| | | | | | | | | | | | | F          
| | | | | | | | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | | | | | | | F        = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | F        = 30} , self = 98 , parent = Nothing , duration = 0.621765714000 , status
| | | | | | | | | | | | | | F        = Fail , start = 2025-09-04 08:23:47.599916264 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | F        08:23:48.221681978 UTC , thread_cap_info = ("ThreadId 164", 3, False)}
| | | | | | | | | | | | | | F        
| | | | | | | | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | | | | | | | | F      = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | | F      = 30} , self = 99 , parent = Nothing , duration = 0.652555282000 , status
| | | | | | | | | | | | | | | F      = Fail , start = 2025-09-04 08:23:47.610486812 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | F      08:23:48.263042094 UTC , thread_cap_info = ("ThreadId 165", 2, False)}
| | | | | | | | | | | | | | | F      
| | | | | | | | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | | | | | | | | | | F    = 1 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 13 , total_length
| | | | | | | | | | | | | | | | F    = 328} , self = 100 , parent = Nothing , duration = 0.886855055000 , status
| | | | | | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:23:47.610924947 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | | F    08:23:48.497780002 UTC , thread_cap_info = ("ThreadId 174", 0, False)}
| | | | | | | | | | | | | | | | F    
| | | | | | | | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | | | | | | | | | | | F  = 1 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 13 , total_length
| | | | | | | | | | | | | | | | | F  = 328} , self = 101 , parent = Nothing , duration = 1.015134542000 , status
| | | | | | | | | | | | | | | | | F  = Fail , start = 2025-09-04 08:23:47.610926702 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | | | | F  08:23:48.626061244 UTC , thread_cap_info = ("ThreadId 176", 3, False)}
| | | | | | | | | | | | | | | | | F  
F | | | | | | | | | | | | | | | | |  
  | | F | | | | | | | | | | | | | |  
  | |   | | F | | | | | | | | | | |  
  | |   | F   | | | | | | | | | | |  
  | F   |     | | | | | | | | | | |  
  |     |     | F | | | | | | | | |  
  |     |     |   F | | | | | | | |  
  |     |     F     | | | | | | | |  
  |     |           | F | | | | | |  
F |     |           |   | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
F |     |           |   | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F |     |           |   | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F |     |           |   | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F |     |           |   | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F |     |           |   | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
F |     |           |   | | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
F |     |           |   | | | | | |  = 2 , total_length = 28} , self = 102 , parent = Nothing , duration = 0.481113856000
F |     |           |   | | | | | |  , status = Fail , start = 2025-09-04 08:23:48.178795904 UTC , finish =
F |     |           |   | | | | | |  2025-09-04 08:23:48.65990976 UTC , thread_cap_info = ("ThreadId 192", 2,
F |     |           |   | | | | | |  False)}
F |     |           |   | | | | | |  
| |     F           |   | | | | | |  
| |                 |   F | | | | |  
| |                 |     F | | | |  
| |                 F       | | | |  
| |                         F | | |  
| | E                         | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | E                         | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E                         | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E                         | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E                         | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E                         | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | E                         | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | E                         | | |  = 4 , total_length = 30} , self = 105 , parent = Nothing , duration = 0.440940059000
| | E                         | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:23:48.232150653
| | E                         | | |  UTC , finish = 2025-09-04 08:23:48.673090712 UTC , thread_cap_info = ("ThreadId
| | E                         | | |  197", 3, False)}
| | E                         | | |  
| | |                         F | |  
| | | S                         | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | S                         | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | S                         | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | S                         | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | S                         | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | S                         | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | S                         | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | | S                         | |  = 4 , total_length = 30} , self = 103 , parent = Nothing , duration = 0.294162001000
| | | S                         | |  , status = Success , start = 2025-09-04 08:23:48.378788269 UTC , finish
| | | S                         | |  = 2025-09-04 08:23:48.67295027 UTC , thread_cap_info = ("ThreadId 198",
| | | S                         | |  3, False)}
| | | S                         | |  
| | | |                         F |  
| | | |                           F  
F | | |                              
  | | S                              
  | E                                
  F                                  
