[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 455 length 2236
last 612 length 3254
CNF 612 vars 3254 clauses
CNF 455 vars 2236 clauses
last 940 length 4659
last 988 length 4993
last 953 length 4715
CNF 940 vars 4659 clauses
CNF 988 vars 4993 clauses
CNF 953 vars 4715 clauses
last 941 length 4769
CNF 941 vars 4769 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3504, clauses: 13553
last 3504 length 13553
CNF 3504 vars 13553 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3504, clauses: 13487
last 3504 length 13487
CNF 3504 vars 13487 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3504, clauses: 13553, status: Unsatisfied, time: 0.042978915s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3504, clauses: 13487, status: Unsatisfied, time: 0.065441385s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7274, clauses: 30263
last 7274 length 30263
CNF 7274 vars 30263 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7274, clauses: 30263, status: Unsatisfied, time: 0.022875032s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7274, clauses: 30243
last 7274 length 30243
CNF 7274 vars 30243 clauses
last 454 length 2062
last 675 length 3517
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 7274, clauses: 30243, status: Unsatisfied, time: 0.048649084s
CNF 675 vars 3517 clauses
last 825 length 4010
last 3155 length 20048
last 562 length 2494
CNF 454 vars 2062 clauses
last 2904 length 17771
last 3571 length 25323
last 3461 length 23544
last 825 length 4010
last 675 length 3517
last 1403 length 6610
last 1809 length 8786
CNF 825 vars 4010 clauses
last 12753 length 87540
CNF 3155 vars 20048 clauses
CNF 562 vars 2494 clauses
CNF 2904 vars 17771 clauses
CNF 3461 vars 23544 clauses
CNF 3571 vars 25323 clauses
CNF 825 vars 4010 clauses
last 12365 length 114007
CNF 675 vars 3517 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16030, clauses: 66680
CNF 1809 vars 8786 clauses
CNF 1403 vars 6610 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10808, clauses: 45158
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2104, clauses: 8251
CNF 12753 vars 87540 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1522, clauses: 6126
last 16030 length 66680
last 10808 length 45158
CNF 12365 vars 114007 clauses
last 2104 length 8251
last 1522 length 6126
CNF 16030 vars 66680 clauses
CNF 2104 vars 8251 clauses
CNF 10808 vars 45158 clauses
CNF 1522 vars 6126 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2104, clauses: 8251, status: Satisfied, time: 0.174407121s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16030, clauses: 66680, status: Satisfied, time: 0.247649809s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1522, clauses: 6126, status: Unsatisfied, time: 0.156526617s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 1 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 4 weak rules on 4 letters       weights
SRS with 1 strict rules and 3 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 3 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, a] -> [] {- Input 0 -}
  [] ->= [a, a, a, b, a] {- Input 1 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [ [b, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 1/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
reason
  ( [a, a]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 0 0 \
                | 0 4 0 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 0 0 \
                | 0 4 6 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 7 5 \
                | 0 0 6 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[a, a]] ->= [ [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, a] , [a, a] , [a, b] , [b, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
reason
  no strict rules

**************************************************
skeleton: (1/1,2)\TileAllAll{2}(4/4,4)\Weight(1/3,4)\Matrix{\Natural}{3}(0/3,3)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 1.128204896000
  min duration 0.017121295000
  total durat. 6.393297004000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 13
      , total_length = 296}
    , self = 104
    , parent = Nothing
    , duration = 1.102802266000
    , status = Fail
    , start = 2025-09-04 08:27:40.073797408 UTC
    , finish = 2025-09-04 08:27:41.176599674 UTC
    , thread_cap_info = ("ThreadId 169", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 3
      , alphabet_size = 6
      , total_length = 102}
    , self = 97
    , parent = Nothing
    , duration = 1.116323208000
    , status = Fail
    , start = 2025-09-04 08:27:39.946575323 UTC
    , finish = 2025-09-04 08:27:41.062898531 UTC
    , thread_cap_info = ("ThreadId 143", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 3
      , alphabet_size = 6
      , total_length = 102}
    , self = 95
    , parent = Nothing
    , duration = 1.128204896000
    , status = Fail
    , start = 2025-09-04 08:27:39.865744424 UTC
    , finish = 2025-09-04 08:27:40.99394932 UTC
    , thread_cap_info = ("ThreadId 123", 3, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 10
  max duration 1.197287022000
  min duration 0.024162907000
  total durat. 6.878518752000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 3
      , alphabet_size = 6
      , total_length = 102}
    , self = 98
    , parent = Nothing
    , duration = 1.116329543000
    , status = Fail
    , start = 2025-09-04 08:27:39.946582694 UTC
    , finish = 2025-09-04 08:27:41.062912237 UTC
    , thread_cap_info = ("ThreadId 144", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 3
      , alphabet_size = 6
      , total_length = 102}
    , self = 100
    , parent = Nothing
    , duration = 1.189009207000
    , status = Fail
    , start = 2025-09-04 08:27:39.885657159 UTC
    , finish = 2025-09-04 08:27:41.074666366 UTC
    , thread_cap_info = ("ThreadId 124", 3, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 33
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 32
      , alphabet_size = 13
      , total_length = 296}
    , self = 105
    , parent = Nothing
    , duration = 1.197287022000
    , status = Fail
    , start = 2025-09-04 08:27:40.073803193 UTC
    , finish = 2025-09-04 08:27:41.271090215 UTC
    , thread_cap_info = ("ThreadId 171", 2, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.021772485000
  min duration 1.021772485000
  total durat. 1.021772485000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 4
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 3
      , alphabet_size = 4
      , total_length = 27}
    , self = 106
    , parent = Nothing
    , duration = 1.021772485000
    , status = Success
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 10808, clauses: 45158, status: Satisfied, time: 0.279626008s
    , start = 2025-09-04 08:27:40.307174907 UTC
    , finish = 2025-09-04 08:27:41.328947392 UTC
    , thread_cap_info = ("ThreadId 187", 1, False)}
**************************************************
F                            Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
F                            = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
F                            = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
F                            , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F                            \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F                            , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
F                            , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 2 , alphabet_size
F                            = 4 , total_length = 68} , self = 75 , parent = Nothing , duration = 0.153847913000
F                            , status = Fail , start = 2025-09-04 08:27:39.843336399 UTC , finish =
F                            2025-09-04 08:27:39.997184312 UTC , thread_cap_info = ("ThreadId 130",
F                            0, False)}
F                            
| F                          Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| F                          , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| F                          = 14 , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 2
| F                          , alphabet_size = 4 , total_length = 68} , self = 73 , parent = Nothing
| F                          , duration = 0.125264861000 , status = Fail , start = 2025-09-04 08:27:39.845699743
| F                          UTC , finish = 2025-09-04 08:27:39.970964604 UTC , thread_cap_info = ("ThreadId
| F                          132", 2, False)}
| F                          
| | F                        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                        = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | F                        = 18 , num_top_rules = 18 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | F                        = 102} , self = 95 , parent = Nothing , duration = 1.128204896000 , status
| | F                        = Fail , start = 2025-09-04 08:27:39.865744424 UTC , finish = 2025-09-04
| | F                        08:27:40.99394932 UTC , thread_cap_info = ("ThreadId 123", 3, False)}
| | F                        
| | | F                      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | | F                      = 18 , num_top_rules = 18 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | F                      = 102} , self = 100 , parent = Nothing , duration = 1.189009207000 , status
| | | F                      = Fail , start = 2025-09-04 08:27:39.885657159 UTC , finish = 2025-09-04
| | | F                      08:27:41.074666366 UTC , thread_cap_info = ("ThreadId 124", 3, False)}
| | | F                      
| | | | F                    Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F                    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F                    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F                    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F                    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F                    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | | | F                    , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 2 , alphabet_size
| | | | F                    = 4 , total_length = 68} , self = 84 , parent = Nothing , duration = 0.200673739000
| | | | F                    , status = Fail , start = 2025-09-04 08:27:39.904981031 UTC , finish =
| | | | F                    2025-09-04 08:27:40.10565477 UTC , thread_cap_info = ("ThreadId 136", 1,
| | | | F                    False)}
| | | | F                    
| | | | | F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | | | | F                  = 18 , num_top_rules = 18 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | | F                  = 102} , self = 97 , parent = Nothing , duration = 1.116323208000 , status
| | | | | F                  = Fail , start = 2025-09-04 08:27:39.946575323 UTC , finish = 2025-09-04
| | | | | F                  08:27:41.062898531 UTC , thread_cap_info = ("ThreadId 143", 3, False)}
| | | | | F                  
| | | | | | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | | | | | F                = 18 , num_top_rules = 18 , num_weak_rules = 3 , alphabet_size = 6 , total_length
| | | | | | F                = 102} , self = 98 , parent = Nothing , duration = 1.116329543000 , status
| | | | | | F                = Fail , start = 2025-09-04 08:27:39.946582694 UTC , finish = 2025-09-04
| | | | | | F                08:27:41.062912237 UTC , thread_cap_info = ("ThreadId 144", 3, False)}
| | | | | | F                
| F | | | | |                
F   | | | | |                
F   | | | | |                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F   | | | | |                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F   | | | | |                = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
F   | | | | |                = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 2 , total_length
F   | | | | |                = 26} , self = 96 , parent = Nothing , duration = 0.982527823000 , status
F   | | | | |                = Fail , start = 2025-09-04 08:27:40.025659114 UTC , finish = 2025-09-04
F   | | | | |                08:27:41.008186937 UTC , thread_cap_info = ("ThreadId 149", 3, False)}
F   | | | | |                
| F | | | | |                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | | |                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | | |                = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| F | | | | |                = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| F | | | | |                = 27} , self = 92 , parent = Nothing , duration = 0.243584609000 , status
| F | | | | |                = Fail , start = 2025-09-04 08:27:40.045889541 UTC , finish = 2025-09-04
| F | | | | |                08:27:40.28947415 UTC , thread_cap_info = ("ThreadId 159", 2, False)}
| F | | | | |                
| | | | | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | F              = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size = 2 , total_length
| | | | | | | F              = 26} , self = 93 , parent = Nothing , duration = 0.586052574000 , status
| | | | | | | F              = Fail , start = 2025-09-04 08:27:40.045893288 UTC , finish = 2025-09-04
| | | | | | | F              08:27:40.631945862 UTC , thread_cap_info = ("ThreadId 150", 3, False)}
| | | | | | | F              
| | | | | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | F            = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | F            = 27} , self = 94 , parent = Nothing , duration = 0.893737227000 , status
| | | | | | | | F            = Fail , start = 2025-09-04 08:27:40.054923294 UTC , finish = 2025-09-04
| | | | | | | | F            08:27:40.948660521 UTC , thread_cap_info = ("ThreadId 160", 2, False)}
| | | | | | | | F            
| | | | | | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | | | F          = 1 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 13 , total_length
| | | | | | | | | F          = 296} , self = 104 , parent = Nothing , duration = 1.102802266000 , status
| | | | | | | | | F          = Fail , start = 2025-09-04 08:27:40.073797408 UTC , finish = 2025-09-04
| | | | | | | | | F          08:27:41.176599674 UTC , thread_cap_info = ("ThreadId 169", 2, False)}
| | | | | | | | | F          
| | | | | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 33 , num_strict_rules
| | | | | | | | | | F        = 1 , num_top_rules = 0 , num_weak_rules = 32 , alphabet_size = 13 , total_length
| | | | | | | | | | F        = 296} , self = 105 , parent = Nothing , duration = 1.197287022000 , status
| | | | | | | | | | F        = Fail , start = 2025-09-04 08:27:40.073803193 UTC , finish = 2025-09-04
| | | | | | | | | | F        08:27:41.271090215 UTC , thread_cap_info = ("ThreadId 171", 2, False)}
| | | | | | | | | | F        
| | | | F | | | | | |        
| | | | F | | | | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F | | | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F | | | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | F | | | | | |        = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | F | | | | | |        = 27} , self = 101 , parent = Nothing , duration = 0.893914113000 , status
| | | | F | | | | | |        = Fail , start = 2025-09-04 08:27:40.180938147 UTC , finish = 2025-09-04
| | | | F | | | | | |        08:27:41.07485226 UTC , thread_cap_info = ("ThreadId 178", 3, False)}
| | | | F | | | | | |        
| | | | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 4 , num_strict_rules
| | | | | | | | | | | F      = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 4 , total_length
| | | | | | | | | | | F      = 27} , self = 99 , parent = Nothing , duration = 0.880385288000 , status
| | | | | | | | | | | F      = Fail , start = 2025-09-04 08:27:40.18623514 UTC , finish = 2025-09-04
| | | | | | | | | | | F      08:27:41.066620428 UTC , thread_cap_info = ("ThreadId 180", 3, False)}
| | | | | | | | | | | F      
| | | | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | | | | F    = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | | | | | F    = 70} , self = 102 , parent = Nothing , duration = 0.882436647000 , status
| | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:27:40.197126383 UTC , finish = 2025-09-04
| | | | | | | | | | | | F    08:27:41.07956303 UTC , thread_cap_info = ("ThreadId 183", 3, False)}
| | | | | | | | | | | | F    
| | | | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | | | | | | | | | | | | F  = 2 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | F  = 70} , self = 103 , parent = Nothing , duration = 0.881983645000 , status
| | | | | | | | | | | | | F  = Fail , start = 2025-09-04 08:27:40.205645644 UTC , finish = 2025-09-04
| | | | | | | | | | | | | F  08:27:41.087629289 UTC , thread_cap_info = ("ThreadId 185", 3, False)}
| | | | | | | | | | | | | F  
| F | | | | | | | | | | | |  
| S | | | | | | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| S | | | | | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| S | | | | | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| S | | | | | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S | | | | | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S | | | | | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| S | | | | | | | | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| S | | | | | | | | | | | |  = 4 , total_length = 27} , self = 106 , parent = Nothing , duration = 1.021772485000
| S | | | | | | | | | | | |  , status = Success , start = 2025-09-04 08:27:40.307174907 UTC , finish
| S | | | | | | | | | | | |  = 2025-09-04 08:27:41.328947392 UTC , thread_cap_info = ("ThreadId 187",
| S | | | | | | | | | | | |  1, False)}
| S | | | | | | | | | | | |  
| | | | | | | F | | | | | |  
| | | | | | |   F | | | | |  
| | | | | | | S   | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | | S   | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | S   | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | S   | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | S   | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | S   | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
| | | | | | | S   | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | | | | | | S   | | | | |  = 4 , total_length = 27} , self = 108 , parent = Nothing , duration = 0.380594814000
| | | | | | | S   | | | | |  , status = Success , start = 2025-09-04 08:27:40.948688719 UTC , finish
| | | | | | | S   | | | | |  = 2025-09-04 08:27:41.329283533 UTC , thread_cap_info = ("ThreadId 199",
| | | | | | | S   | | | | |  1, False)}
| | | | | | | S   | | | | |  
| | F | | | | |   | | | | |  
F |   | | | | |   | | | | |  
F |   | | | | |   | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
F |   | | | | |   | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F |   | | | | |   | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F |   | | | | |   | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F |   | | | | |   | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F |   | | | | |   | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 4
F |   | | | | |   | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 2 , alphabet_size
F |   | | | | |   | | | | |  = 2 , total_length = 26} , self = 111 , parent = Nothing , duration = 0.335492631000
F |   | | | | |   | | | | |  , status = Fail , start = 2025-09-04 08:27:41.008210134 UTC , finish =
F |   | | | | |   | | | | |  2025-09-04 08:27:41.343702765 UTC , thread_cap_info = ("ThreadId 201",
F |   | | | | |   | | | | |  3, False)}
F |   | | | | |   | | | | |  
| |   | | F | |   | | | | |  
| |   | |   F |   | | | | |  
| |   | |     |   | | F | |  
| |   F |     |   | |   | |  
| |     F     |   | |   | |  
| |           |   | |   F |  
| |           |   | |     F  
| |           |   F |        
| |           |     F        
| S           |              
|             S              
F                            
