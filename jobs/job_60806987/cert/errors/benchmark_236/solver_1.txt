last 612 length 2427
last 668 length 2677
CNF 612 vars 2427 clauses
last 1033 length 4167
CNF 1033 vars 4167 clauses
CNF 668 vars 2677 clauses
last 1059 length 4349
last 1194 length 4845
last 1210 length 4871
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2129, clauses: 7590
last 1537 length 6345
last 1591 length 6423
CNF 1059 vars 4349 clauses
last 10990 length 47619
CNF 1194 vars 4845 clauses
last 12329 length 52362
last 2129 length 7590
CNF 1210 vars 4871 clauses
CNF 1537 vars 6345 clauses
CNF 1591 vars 6423 clauses
last 14077 length 59482
last 14346 length 61032
CNF 10990 vars 47619 clauses
last 16448 length 70139
CNF 2129 vars 7590 clauses
CNF 12329 vars 52362 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3797, clauses: 13947
last 15200 length 66251
CNF 14077 vars 59482 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4460, clauses: 16491
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12692, clauses: 53194
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14271, clauses: 59800
CNF 14346 vars 61032 clauses
last 3797 length 13947
CNF 16448 vars 70139 clauses
last 4460 length 16491
last 12692 length 53194
last 14271 length 59800
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2129, clauses: 7590, status: Unsatisfied, time: 1.12307091s
CNF 15200 vars 66251 clauses
CNF 3797 vars 13947 clauses
CNF 4460 vars 16491 clauses
CNF 14271 vars 59800 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3797, clauses: 13947, status: Satisfied, time: 0.289843594s
CNF 12692 vars 53194 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4460, clauses: 16491, status: Satisfied, time: 0.308035994s
last 949 length 3805
last 945 length 3781
CNF 949 vars 3805 clauses
CNF 945 vars 3781 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3089, clauses: 11217
last 3089 length 11217
CNF 3089 vars 11217 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11396, clauses: 47785
last 11396 length 47785
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3089, clauses: 11217, status: Unsatisfied, time: 0.237159219s
CNF 11396 vars 47785 clauses
**************************************************
summary
**************************************************
SRS with 2 strict rules and 4 weak rules on 3 letters       strictify
SRS with 6 rules on 3 letters       DP
SRS with 14 strict rules and 6 weak rules on 6 letters       weights
SRS with 6 strict rules and 6 weak rules on 6 letters       EDG
SRS with 6 strict rules and 6 weak rules on 6 letters       Matrix   { monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 4 strict rules and 6 weak rules on 6 letters       weights
SRS with 0 strict rules and 6 weak rules on 3 letters       EDG

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, c] -> [c, c, c] {- Input 0 -}
  [b, c, a] -> [a, a, a] {- Input 1 -}
  [a, b, a] ->= [c, c, b] {- Input 2 -}
  [b, a, b] ->= [a, c, a] {- Input 3 -}
  [c, c, b] ->= [b, c, c] {- Input 4 -}
  [c, b, a] ->= [b, b, a] {- Input 5 -}
reason
  strictify
   property Termination
has value Just True
for SRS
  [a, b, c] -> [c, c, c] {- Input 0 -}
  [b, c, a] -> [a, a, a] {- Input 1 -}
  [a, b, a] -> [c, c, b] {- Strictified (Input 2) -}
  [b, a, b] -> [a, c, a] {- Strictified (Input 3) -}
  [c, c, b] -> [b, c, c] {- Strictified (Input 4) -}
  [c, b, a] -> [b, b, a] {- Strictified (Input 5) -}
reason
  DP
   property Termination
has value Just True
for SRS
  [a, b, c] ->= [c, c, c] {- DP Nontop (Input 0) -}
  [b, c, a] ->= [a, a, a] {- DP Nontop (Input 1) -}
  [a, b, a] ->= [c, c, b] {- DP Nontop (Strictified (Input 2)) -}
  [b, a, b] ->= [a, c, a] {- DP Nontop (Strictified (Input 3)) -}
  [c, c, b] ->= [b, c, c] {- DP Nontop (Strictified (Input 4)) -}
  [c, b, a] ->= [b, b, a] {- DP Nontop (Strictified (Input 5)) -}
  [a#, b, a] |-> [b#] {- DP (Top 2) (Strictified (Input 2)) -}
  [a#, b, a] |-> [c#, b] {- DP (Top 1) (Strictified (Input 2)) -}
  [a#, b, a] |-> [c#, c, b] {- DP (Top 0) (Strictified (Input 2)) -}
  [a#, b, c] |-> [c#, c] {- DP (Top 1) (Input 0) -}
  [a#, b, c] |-> [c#, c, c] {- DP (Top 0) (Input 0) -}
  [b#, a, b] |-> [a#] {- DP (Top 2) (Strictified (Input 3)) -}
  [b#, a, b] |-> [a#, c, a] {- DP (Top 0) (Strictified (Input 3)) -}
  [b#, a, b] |-> [c#, a] {- DP (Top 1) (Strictified (Input 3)) -}
  [b#, c, a] |-> [a#, a] {- DP (Top 1) (Input 1) -}
  [b#, c, a] |-> [a#, a, a] {- DP (Top 0) (Input 1) -}
  [c#, b, a] |-> [b#, b, a] {- DP (Top 0) (Strictified (Input 5)) -}
  [c#, c, b] |-> [b#, c, c] {- DP (Top 0) (Strictified (Input 4)) -}
  [c#, c, b] |-> [c#] {- DP (Top 2) (Strictified (Input 4)) -}
  [c#, c, b] |-> [c#, c] {- DP (Top 1) (Strictified (Input 4)) -}
reason
  (a, 1/1)
  (b, 1/1)
  (c, 1/1)
  (a#, 0/1)
  (b#, 0/1)
  (c#, 0/1)
   property Termination
has value Just True
for SRS
  [a, b, c] ->= [c, c, c] {- DP Nontop (Input 0) -}
  [b, c, a] ->= [a, a, a] {- DP Nontop (Input 1) -}
  [a, b, a] ->= [c, c, b] {- DP Nontop (Strictified (Input 2)) -}
  [b, a, b] ->= [a, c, a] {- DP Nontop (Strictified (Input 3)) -}
  [c, c, b] ->= [b, c, c] {- DP Nontop (Strictified (Input 4)) -}
  [c, b, a] ->= [b, b, a] {- DP Nontop (Strictified (Input 5)) -}
  [a#, b, a] |-> [c#, c, b] {- DP (Top 0) (Strictified (Input 2)) -}
  [a#, b, c] |-> [c#, c, c] {- DP (Top 0) (Input 0) -}
  [b#, a, b] |-> [a#, c, a] {- DP (Top 0) (Strictified (Input 3)) -}
  [b#, c, a] |-> [a#, a, a] {- DP (Top 0) (Input 1) -}
  [c#, b, a] |-> [b#, b, a] {- DP (Top 0) (Strictified (Input 5)) -}
  [c#, c, b] |-> [b#, c, c] {- DP (Top 0) (Strictified (Input 4)) -}
reason
  EDG
   property Termination
has value Just True
for SRS
  [a#, b, a] |-> [c#, c, b] {- DP (Top 0) (Strictified (Input 2)) -}
  [c#, b, a] |-> [b#, b, a] {- DP (Top 0) (Strictified (Input 5)) -}
  [b#, a, b] |-> [a#, c, a] {- DP (Top 0) (Strictified (Input 3)) -}
  [a#, b, c] |-> [c#, c, c] {- DP (Top 0) (Input 0) -}
  [c#, c, b] |-> [b#, c, c] {- DP (Top 0) (Strictified (Input 4)) -}
  [b#, c, a] |-> [a#, a, a] {- DP (Top 0) (Input 1) -}
  [a, b, c] ->= [c, c, c] {- DP Nontop (Input 0) -}
  [b, c, a] ->= [a, a, a] {- DP Nontop (Input 1) -}
  [a, b, a] ->= [c, c, b] {- DP Nontop (Strictified (Input 2)) -}
  [b, a, b] ->= [a, c, a] {- DP Nontop (Strictified (Input 3)) -}
  [c, c, b] ->= [b, c, c] {- DP Nontop (Strictified (Input 4)) -}
  [c, b, a] ->= [b, b, a] {- DP Nontop (Strictified (Input 5)) -}
reason
  ( a
  , Wk  / 0A 0A 0A - \
        | 0A 0A 0A - |
        | 0A 0A 0A - |
        \ -  -  -  - / )
  ( b
  , Wk  / 0A  3A 3A - \
        | -3A 0A 0A - |
        | -3A 0A 0A - |
        \ -   -  -  - / )
  ( c
  , Wk  / 0A  0A  0A - \
        | -3A 0A  0A - |
        | -3A -3A 0A - |
        \ -   -   -  - / )
  ( a#
  , Wk  / 9A 9A 11A - \
        | 9A 9A 11A - |
        | 9A 9A 11A - |
        \ -  -  -   - / )
  ( b#
  , Wk  / 9A 11A 12A - \
        | 9A 11A 12A - |
        | 9A 11A 12A - |
        \ -  -   -   - / )
  ( c#
  , Wk  / 9A 9A 9A - \
        | 9A 9A 9A - |
        | 9A 9A 9A - |
        \ -  -  -  - / )
   property Termination
has value Just True
for SRS
  [a#, b, a] |-> [c#, c, b] {- DP (Top 0) (Strictified (Input 2)) -}
  [c#, b, a] |-> [b#, b, a] {- DP (Top 0) (Strictified (Input 5)) -}
  [a#, b, c] |-> [c#, c, c] {- DP (Top 0) (Input 0) -}
  [c#, c, b] |-> [b#, c, c] {- DP (Top 0) (Strictified (Input 4)) -}
  [a, b, c] ->= [c, c, c] {- DP Nontop (Input 0) -}
  [b, c, a] ->= [a, a, a] {- DP Nontop (Input 1) -}
  [a, b, a] ->= [c, c, b] {- DP Nontop (Strictified (Input 2)) -}
  [b, a, b] ->= [a, c, a] {- DP Nontop (Strictified (Input 3)) -}
  [c, c, b] ->= [b, c, c] {- DP Nontop (Strictified (Input 4)) -}
  [c, b, a] ->= [b, b, a] {- DP Nontop (Strictified (Input 5)) -}
reason
  (a, 0/1)
  (b, 0/1)
  (c, 0/1)
  (a#, 2/1)
  (b#, 0/1)
  (c#, 1/1)
   property Termination
has value Just True
for SRS
  [a, b, c] ->= [c, c, c] {- DP Nontop (Input 0) -}
  [b, c, a] ->= [a, a, a] {- DP Nontop (Input 1) -}
  [a, b, a] ->= [c, c, b] {- DP Nontop (Strictified (Input 2)) -}
  [b, a, b] ->= [a, c, a] {- DP Nontop (Strictified (Input 3)) -}
  [c, c, b] ->= [b, c, c] {- DP Nontop (Strictified (Input 4)) -}
  [c, b, a] ->= [b, b, a] {- DP Nontop (Strictified (Input 5)) -}
reason
  EDG

**************************************************
skeleton: (2/4,3)\Strictify(6,3)\Deepee(14/6,6)\Weight\EDG(6/6,6)\Matrix{\Arctic}{3}(4/6,6)\Weight(0/6,3)\EDG[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  inMatrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 11396, clauses: 47785, status: Satisfied, time: 0.217926989s
 Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 6942, clauses: 28351
Apply last 6942 length 28351
cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************CNF 6942 vars 28351 clauses

Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 1.406624111000
  min duration 0.059952320000
  total durat. 6.642959829000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 54
      , alphabet_size = 12
      , total_length = 576}
    , self = 108
    , parent = Nothing
    , duration = 1.283260041000
    , status = Fail
    , start = 2025-09-04 08:21:23.228779035 UTC
    , finish = 2025-09-04 08:21:24.512039076 UTC
    , thread_cap_info = ("ThreadId 174", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 66
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 54
      , alphabet_size = 11
      , total_length = 528}
    , self = 106
    , parent = Nothing
    , duration = 1.340765749000
    , status = Fail
    , start = 2025-09-04 08:21:23.061056993 UTC
    , finish = 2025-09-04 08:21:24.401822742 UTC
    , thread_cap_info = ("ThreadId 168", 2, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 54
      , num_strict_rules = 54
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 432}
    , self = 104
    , parent = Nothing
    , duration = 1.406624111000
    , status = Fail
    , start = 2025-09-04 08:21:22.859382437 UTC
    , finish = 2025-09-04 08:21:24.266006548 UTC
    , thread_cap_info = ("ThreadId 128", 0, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 8
  max duration 1.352683687000
  min duration 0.030450994000
  total durat. 6.041887671000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 66
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 54
      , alphabet_size = 11
      , total_length = 528}
    , self = 105
    , parent = Nothing
    , duration = 1.268877658000
    , status = Fail
    , start = 2025-09-04 08:21:23.080261031 UTC
    , finish = 2025-09-04 08:21:24.349138689 UTC
    , thread_cap_info = ("ThreadId 169", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 72
      , num_strict_rules = 18
      , num_top_rules = 18
      , num_weak_rules = 54
      , alphabet_size = 12
      , total_length = 576}
    , self = 109
    , parent = Nothing
    , duration = 1.303373582000
    , status = Fail
    , start = 2025-09-04 08:21:23.241410455 UTC
    , finish = 2025-09-04 08:21:24.544784037 UTC
    , thread_cap_info = ("ThreadId 175", 2, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 54
      , num_strict_rules = 54
      , num_top_rules = 0
      , num_weak_rules = 0
      , alphabet_size = 9
      , total_length = 432}
    , self = 103
    , parent = Nothing
    , duration = 1.352683687000
    , status = Fail
    , start = 2025-09-04 08:21:22.860242098 UTC
    , finish = 2025-09-04 08:21:24.212925785 UTC
    , thread_cap_info = ("ThreadId 130", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 0.837603115000
  min duration 0.807413373000
  total durat. 1.645016488000
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 0.860604707000
  min duration 0.842115053000
  total durat. 1.702719760000
Fail : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 2
  max duration 1.479149344000
  min duration 0.313659447000
  total durat. 1.792808791000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 5
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 30}
    , self = 107
    , parent = Nothing
    , duration = 1.479149344000
    , status = Fail
    , start = 2025-09-04 08:21:22.928284534 UTC
    , finish = 2025-09-04 08:21:24.407433878 UTC
    , thread_cap_info = ("ThreadId 142", 2, False)}
**************************************************
E                            Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
E                            , closure = Forward\n , start_strict_only = True\n , max_closure_length
E                            = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
E                            Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
E                            8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
E                            = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
E                            ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
E                            1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
E                            = True})" , input_size = Size { num_rules = 4 , num_strict_rules = 4 ,
E                            num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
E                            = 24} , self = 71 , parent = Nothing , duration = 0.144990239000 , status
E                            = Except "AsyncCancelled" , start = 2025-09-04 08:21:22.795746834 UTC ,
E                            finish = 2025-09-04 08:21:22.940737073 UTC , thread_cap_info = ("ThreadId
E                            35", 3, False)}
E                            
| F                          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                          = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| F                          = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| F                          = 30} , self = 81 , parent = Nothing , duration = 0.209804772000 , status
| F                          = Fail , start = 2025-09-04 08:21:22.808961002 UTC , finish = 2025-09-04
| F                          08:21:23.018765774 UTC , thread_cap_info = ("ThreadId 77", 2, False)}
| F                          
| | F                        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                        = False\n , verbose = False}" , input_size = Size { num_rules = 8 , num_strict_rules
| | F                        = 4 , num_top_rules = 4 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | F                        = 48} , self = 98 , parent = Nothing , duration = 0.852377165000 , status
| | F                        = Fail , start = 2025-09-04 08:21:22.833214024 UTC , finish = 2025-09-04
| | F                        08:21:23.685591189 UTC , thread_cap_info = ("ThreadId 91", 2, False)}
| | F                        
| | | F                      Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | F                      , closure = Forward\n , start_strict_only = True\n , max_closure_length
| | | F                      = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | F                      Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | F                      8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | F                      = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | F                      ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | F                      1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | F                      = True})" , input_size = Size { num_rules = 6 , num_strict_rules = 6 ,
| | | F                      num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | F                      = 36} , self = 97 , parent = Nothing , duration = 0.804339680000 , status
| | | F                      = Fail , start = 2025-09-04 08:21:22.841050117 UTC , finish = 2025-09-04
| | | F                      08:21:23.645389797 UTC , thread_cap_info = ("ThreadId 96", 2, False)}
| | | F                      
| | | | F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| | | | F                    = 54 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | F                    = 432} , self = 104 , parent = Nothing , duration = 1.406624111000 , status
| | | | F                    = Fail , start = 2025-09-04 08:21:22.859382437 UTC , finish = 2025-09-04
| | | | F                    08:21:24.266006548 UTC , thread_cap_info = ("ThreadId 128", 0, False)}
| | | | F                    
| | | | | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 54 , num_strict_rules
| | | | | F                  = 54 , num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 9 , total_length
| | | | | F                  = 432} , self = 103 , parent = Nothing , duration = 1.352683687000 , status
| | | | | F                  = Fail , start = 2025-09-04 08:21:22.860242098 UTC , finish = 2025-09-04
| | | | | F                  08:21:24.212925785 UTC , thread_cap_info = ("ThreadId 130", 0, False)}
| | | | | F                  
| | | | | | F                Info { what = "Simple (Config\n { tracing = False\n , verbose = False\n
| | | | | | F                , closure = Backward\n , start_strict_only = True\n , max_closure_length
| | | | | | F                = Nothing\n , max_closure_width = (Just 15)\n , max_closure_width_lhs =
| | | | | | F                Nothing\n , max_closure_width_rhs = Nothing\n , max_inner_children = (Just
| | | | | | F                8)\n , max_outer_children = (Just 2)\n , intermediates = All\n , priority
| | | | | | F                = (Linear [ (-7.0, Width_lhs)\n , (-1.0, Width_rhs)\n , (7.0, Log2 Steps)
| | | | | | F                ])\n , string_implementation = (ByteString Plain)\n , max_seen_size = (Just
| | | | | | F                1000000)\n , max_todo_size = Nothing\n , print_sizes = False\n , print_sizes_finally
| | | | | | F                = True})" , input_size = Size { num_rules = 6 , num_strict_rules = 6 ,
| | | | | | F                num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 3 , total_length
| | | | | | F                = 36} , self = 96 , parent = Nothing , duration = 0.589619574000 , status
| | | | | | F                = Fail , start = 2025-09-04 08:21:22.866307542 UTC , finish = 2025-09-04
| | | | | | F                08:21:23.455927116 UTC , thread_cap_info = ("ThreadId 132", 2, False)}
| | | | | | F                
| | | | | | | F              Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F              , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F              = 5 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 4 , alphabet_size
| | | | | | | F              = 4 , total_length = 30} , self = 107 , parent = Nothing , duration = 1.479149344000
| | | | | | | F              , status = Fail , start = 2025-09-04 08:21:22.928284534 UTC , finish =
| | | | | | | F              2025-09-04 08:21:24.407433878 UTC , thread_cap_info = ("ThreadId 142",
| | | | | | | F              2, False)}
| | | | | | | F              
E | | | | | | |              
F | | | | | | |              Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
F | | | | | | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F | | | | | | |              = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
F | | | | | | |              = 4 , num_top_rules = 4 , num_weak_rules = 6 , alphabet_size = 5 , total_length
F | | | | | | |              = 60} , self = 99 , parent = Nothing , duration = 0.779394963000 , status
F | | | | | | |              = Fail , start = 2025-09-04 08:21:22.940893015 UTC , finish = 2025-09-04
F | | | | | | |              08:21:23.720287978 UTC , thread_cap_info = ("ThreadId 145", 3, False)}
F | | | | | | |              
| | | | | | | | F            Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | | F            = 4 , num_top_rules = 4 , num_weak_rules = 6 , alphabet_size = 5 , total_length
| | | | | | | | F            = 60} , self = 100 , parent = Nothing , duration = 0.872967788000 , status
| | | | | | | | F            = Fail , start = 2025-09-04 08:21:22.951705056 UTC , finish = 2025-09-04
| | | | | | | | F            08:21:23.824672844 UTC , thread_cap_info = ("ThreadId 147", 3, False)}
| | | | | | | | F            
| | | | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | | F          = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size = 6 , total_length
| | | | | | | | | F          = 72} , self = 102 , parent = Nothing , duration = 0.920562543000 , status
| | | | | | | | | F          = Fail , start = 2025-09-04 08:21:22.965255068 UTC , finish = 2025-09-04
| | | | | | | | | F          08:21:23.885817611 UTC , thread_cap_info = ("ThreadId 154", 3, False)}
| | | | | | | | | F          
| | | | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 12 , num_strict_rules
| | | | | | | | | | F        = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size = 6 , total_length
| | | | | | | | | | F        = 72} , self = 101 , parent = Nothing , duration = 0.850587541000 , status
| | | | | | | | | | F        = Fail , start = 2025-09-04 08:21:22.980548749 UTC , finish = 2025-09-04
| | | | | | | | | | F        08:21:23.83113629 UTC , thread_cap_info = ("ThreadId 153", 3, False)}
| | | | | | | | | | F        
| F | | | | | | | | |        
| F | | | | | | | | |        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F | | | | | | | | |        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F | | | | | | | | |        = False\n , verbose = False}" , input_size = Size { num_rules = 66 , num_strict_rules
| F | | | | | | | | |        = 12 , num_top_rules = 12 , num_weak_rules = 54 , alphabet_size = 11 ,
| F | | | | | | | | |        total_length = 528} , self = 106 , parent = Nothing , duration = 1.340765749000
| F | | | | | | | | |        , status = Fail , start = 2025-09-04 08:21:23.061056993 UTC , finish =
| F | | | | | | | | |        2025-09-04 08:21:24.401822742 UTC , thread_cap_info = ("ThreadId 168",
| F | | | | | | | | |        2, False)}
| F | | | | | | | | |        
| | | | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 66 , num_strict_rules
| | | | | | | | | | | F      = 12 , num_top_rules = 12 , num_weak_rules = 54 , alphabet_size = 11 ,
| | | | | | | | | | | F      total_length = 528} , self = 105 , parent = Nothing , duration = 1.268877658000
| | | | | | | | | | | F      , status = Fail , start = 2025-09-04 08:21:23.080261031 UTC , finish =
| | | | | | | | | | | F      2025-09-04 08:21:24.349138689 UTC , thread_cap_info = ("ThreadId 169",
| | | | | | | | | | | F      2, False)}
| | | | | | | | | | | F      
| | | | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 72 , num_strict_rules
| | | | | | | | | | | | F    = 18 , num_top_rules = 18 , num_weak_rules = 54 , alphabet_size = 12 ,
| | | | | | | | | | | | F    total_length = 576} , self = 108 , parent = Nothing , duration = 1.283260041000
| | | | | | | | | | | | F    , status = Fail , start = 2025-09-04 08:21:23.228779035 UTC , finish =
| | | | | | | | | | | | F    2025-09-04 08:21:24.512039076 UTC , thread_cap_info = ("ThreadId 174",
| | | | | | | | | | | | F    2, False)}
| | | | | | | | | | | | F    
| | | | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 72 , num_strict_rules
| | | | | | | | | | | | | F  = 18 , num_top_rules = 18 , num_weak_rules = 54 , alphabet_size = 12 ,
| | | | | | | | | | | | | F  total_length = 576} , self = 109 , parent = Nothing , duration = 1.303373582000
| | | | | | | | | | | | | F  , status = Fail , start = 2025-09-04 08:21:23.241410455 UTC , finish =
| | | | | | | | | | | | | F  2025-09-04 08:21:24.544784037 UTC , thread_cap_info = ("ThreadId 175",
| | | | | | | | | | | | | F  2, False)}
| | | | | | | | | | | | | F  
| | | | | | F | | | | | | |  
| | | F | |   | | | | | | |  
| | F   | |   | | | | | | |  
F |     | |   | | | | | | |  
S |     | |   | | | | | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
S |     | |   | | | | | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
S |     | |   | | | | | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
S |     | |   | | | | | | |  = 10 , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 6 ,
S |     | |   | | | | | | |  alphabet_size = 5 , total_length = 60} , self = 110 , parent = Nothing
S |     | |   | | | | | | |  , duration = 0.842115053000 , status = Success , start = 2025-09-04 08:21:23.742560437
S |     | |   | | | | | | |  UTC , finish = 2025-09-04 08:21:24.58467549 UTC , thread_cap_info = ("ThreadId
S |     | |   | | | | | | |  182", 3, False)}
S |     | |   | | | | | | |  
| |     | |   | F | | | | |  
| | E   | |   |   | | | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | E   | |   |   | | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | E   | |   |   | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | E   | |   |   | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | E   | |   |   | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | E   | |   |   | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| | E   | |   |   | | | | |  , num_strict_rules = 4 , num_top_rules = 4 , num_weak_rules = 6 , alphabet_size
| | E   | |   |   | | | | |  = 5 , total_length = 60} , self = 112 , parent = Nothing , duration = 0.807413373000
| | E   | |   |   | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:23.831124572
| | E   | |   |   | | | | |  UTC , finish = 2025-09-04 08:21:24.638537945 UTC , thread_cap_info = ("ThreadId
| | E   | |   |   | | | | |  185", 3, False)}
| | E   | |   |   | | | | |  
| | |   | |   |   | F | | |  
| | | S | |   |   |   | | |  Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | S | |   |   |   | | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | S | |   |   |   | | |  , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | S | |   |   |   | | |  = 12 , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 6 ,
| | | S | |   |   |   | | |  alphabet_size = 6 , total_length = 72} , self = 118 , parent = Nothing
| | | S | |   |   |   | | |  , duration = 0.860604707000 , status = Success , start = 2025-09-04 08:21:23.840273022
| | | S | |   |   |   | | |  UTC , finish = 2025-09-04 08:21:24.700877729 UTC , thread_cap_info = ("ThreadId
| | | S | |   |   |   | | |  186", 3, False)}
| | | S | |   |   |   | | |  
| | | | | |   |   F   | | |  
| | | | | | E |       | | |  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | | | E |       | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | E |       | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | E |       | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | E |       | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | E |       | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 12
| | | | | | E |       | | |  , num_strict_rules = 6 , num_top_rules = 6 , num_weak_rules = 6 , alphabet_size
| | | | | | E |       | | |  = 6 , total_length = 72} , self = 121 , parent = Nothing , duration = 0.837603115000
| | | | | | E |       | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:21:24.006019784
| | | | | | E |       | | |  UTC , finish = 2025-09-04 08:21:24.843622899 UTC , thread_cap_info = ("ThreadId
| | | | | | E |       | | |  187", 0, False)}
| | | | | | E |       | | |  
| | | | | F | |       | | |  
| | | | F   | |       | | |  
| | | |     | |       F | |  
| F | |     | |         | |  
|   | |     | F         | |  
|   | |     |           F |  
|   | |     |             F  
S   | |     |                
    E |     |                
F     |     |                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
F     |     |                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
F     |     |                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
F     |     |                = 8 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 6 , alphabet_size
F     |     |                = 4 , total_length = 48} , self = 124 , parent = Nothing , duration = 0.313659447000
F     |     |                , status = Fail , start = 2025-09-04 08:21:24.669542997 UTC , finish =
F     |     |                2025-09-04 08:21:24.983202444 UTC , thread_cap_info = ("ThreadId 210",
F     |     |                3, False)}
F     |     |                
|     S     |                
|           E                
F                            
