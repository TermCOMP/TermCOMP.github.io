[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 664 length 3834
last 551 length 2783
CNF 551 vars 2783 clauses
CNF 664 vars 3834 clauses
last 1109 length 5702
CNF 1109 vars 5702 clauses
last 1061 length 5334
CNF 1061 vars 5334 clauses
last 1003 length 5007
last 3217 length 20282
CNF 3217 vars 20282 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4011, clauses: 15152
last 4011 length 15152
last 3603 length 25439
CNF 3603 vars 25439 clauses
CNF 4011 vars 15152 clauses
last 1001 length 4899
CNF 1001 vars 4899 clauses
last 693 length 3393
CNF 1003 vars 5007 clauses
last 693 length 3393
CNF 693 vars 3393 clauses
CNF 693 vars 3393 clauses
last 901 length 4819
last 901 length 4819
last 516 length 2300
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4011, clauses: 15152, status: Unsatisfied, time: 0.09880722s
last 610 length 2678
last 1523 length 7011
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9404, clauses: 39273
last 1885 length 9083
CNF 901 vars 4819 clauses
CNF 901 vars 4819 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14906, clauses: 61786
CNF 516 vars 2300 clauses
last 12271 length 73482
CNF 610 vars 2678 clauses
CNF 1523 vars 7011 clauses
last 9404 length 39273
CNF 1885 vars 9083 clauses
last 13561 length 102919
last 14906 length 61786
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2058, clauses: 8031
CNF 12271 vars 73482 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1971, clauses: 7816
CNF 9404 vars 39273 clauses
last 2058 length 8031
CNF 13561 vars 102919 clauses
last 1971 length 7816
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 13600, clauses: 56772
CNF 14906 vars 61786 clauses
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 9404, clauses: 39273, status: Unsatisfied, time: 0.425383784s
last 13600 length 56772
CNF 1971 vars 7816 clauses
CNF 2058 vars 8031 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14906, clauses: 61786, status: Satisfied, time: 0.416412589s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2058, clauses: 8031, status: Satisfied, time: 0.175332659s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 8 weak rules on 4 letters       weights
SRS with 1 strict rules and 4 weak rules on 4 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 4 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, a, b] -> [] {- Input 0 -}
  [a] ->= [] {- Input 1 -}
  [] ->= [b, a, b, b, b] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[b, b], [b, a], [a, a], [a, b], [b, b]] -> [ [ b , b ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[b, b], [b, a], [a, a], [a, b], [b, a]] -> [ [ b , a ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, b], [b, a], [a, a], [a, b], [b, b]] -> [ [ a , b ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[a, b], [b, a], [a, a], [a, b], [b, a]] -> [ [ a , a ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, b]] ->= [[b, b]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, a], [a, a]] ->= [[b, a]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, b]] ->= [[a, b]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, a], [a, a]] ->= [[a, a]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, b] , [b, b] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, b] , [b, a] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, b] , [b, b] , [b, b] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[a, a]] ->= [ [a, b] , [b, a] , [a, b] , [b, b] , [b, b] , [b, a] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  ([a, a], 1/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
   property Termination
has value Just True
for SRS
  [[a, b], [b, a], [a, a], [a, b], [b, a]] -> [ [ a , a ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, b]] ->= [[b, b]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, b] , [b, b] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, b] , [b, a] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, b] , [b, b] , [b, b] ] {- Semlab 1 (Concon 0 (Input 2)) -}
reason
  ( [a, a]
  , St  / 1A -2A - \
        | 0A -2A - |
        \ 1A -   - / )
  ( [a, b]
  , St  / 0A -2A 1A \
        | -  1A  -  |
        \ -  2A  -  / )
  ( [b, a]
  , St  / 0A  -  -  \
        | -   0A -  |
        \ -1A -  0A / )
  ( [b, b]
  , St  / 0A  - - \
        | -   - - |
        \ -2A - - / )
   property Termination
has value Just True
for SRS
  [[b, a], [a, b]] ->= [[b, b]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, b] , [b, b] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, b] , [b, a] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, b] , [b, b] , [b, b] ] {- Semlab 1 (Concon 0 (Input 2)) -}
reason
  no strict rules

**************************************************
skeleton: (1/2,2)\TileAllAll{2}(4/8,4)\Weight(1/4,4)\Matrix{\ArcticBZ}{3}(0/4,3)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 1971, clauses: 7816, status: Unsatisfied, time: 0.143919919s
**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.849074639000
  min duration 0.026438105000
  total durat. 2.412436244000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.916456198000
  min duration 0.017179803000
  total durat. 3.430577628000
Fail : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 1.045782880000
  min duration 1.045782880000
  total durat. 1.045782880000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 16
      , num_strict_rules = 12
      , num_top_rules = 12
      , num_weak_rules = 4
      , alphabet_size = 4
      , total_length = 74}
    , self = 99
    , parent = Nothing
    , duration = 1.045782880000
    , status = Fail
    , start = 2025-09-04 08:24:04.44205011 UTC
    , finish = 2025-09-04 08:24:05.48783299 UTC
    , thread_cap_info = ("ThreadId 132", 2, False)}
**************************************************
CNF 13600 vars 56772 clauses
F                      Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
F                      , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
F                      = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
F                      , string_implementation = ByteString Plain\n , tracing = False\n , cpf
F                      = True}" , input_size = Size { num_rules = 3 , num_strict_rules = 1 , num_top_rules
F                      = 0 , num_weak_rules = 2 , alphabet_size = 2 , total_length = 10} , self
F                      = 69 , parent = Nothing , duration = 0.129894180000 , status = Fail , start
F                      = 2025-09-04 08:24:04.378375671 UTC , finish = 2025-09-04 08:24:04.508269851
F                      UTC , thread_cap_info = ("ThreadId 86", 0, False)}
F                      
| F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                    = False\n , verbose = False}" , input_size = Size { num_rules = 23 , num_strict_rules
| F                    = 19 , num_top_rules = 19 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| F                    = 108} , self = 66 , parent = Nothing , duration = 0.112220745000 , status
| F                    = Fail , start = 2025-09-04 08:24:04.379052095 UTC , finish = 2025-09-04
| F                    08:24:04.49127284 UTC , thread_cap_info = ("ThreadId 109", 1, False)}
| F                    
| | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 23 , num_strict_rules
| | F                  = 19 , num_top_rules = 19 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | F                  = 108} , self = 68 , parent = Nothing , duration = 0.104349631000 , status
| | F                  = Fail , start = 2025-09-04 08:24:04.400529829 UTC , finish = 2025-09-04
| | F                  08:24:04.50487946 UTC , thread_cap_info = ("ThreadId 110", 1, False)}
| | F                  
| | | F                Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | F                , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | F                = 16 , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 4
| | | F                , alphabet_size = 4 , total_length = 74} , self = 91 , parent = Nothing
| | | F                , duration = 0.554688287000 , status = Fail , start = 2025-09-04 08:24:04.405639837
| | | F                UTC , finish = 2025-09-04 08:24:04.960328124 UTC , thread_cap_info = ("ThreadId
| | | F                128", 2, False)}
| | | F                
| | | | F              Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | F              = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | F              = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | F              , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | F              \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | F              , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 16
| | | | F              , num_strict_rules = 12 , num_top_rules = 12 , num_weak_rules = 4 , alphabet_size
| | | | F              = 4 , total_length = 74} , self = 99 , parent = Nothing , duration = 1.045782880000
| | | | F              , status = Fail , start = 2025-09-04 08:24:04.44205011 UTC , finish = 2025-09-04
| | | | F              08:24:05.48783299 UTC , thread_cap_info = ("ThreadId 132", 2, False)}
| | | | F              
| F | | |              
|   F | |              
F     | |              
F     | |              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F     | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F     | |              = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
F     | |              = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
F     | |              = 30} , self = 92 , parent = Nothing , duration = 0.542954410000 , status
F     | |              = Fail , start = 2025-09-04 08:24:04.519031471 UTC , finish = 2025-09-04
F     | |              08:24:05.061985881 UTC , thread_cap_info = ("ThreadId 147", 0, False)}
F     | |              
| F   | |              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| F   | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F   | |              = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| F   | |              = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| F   | |              = 30} , self = 93 , parent = Nothing , duration = 0.538708161000 , status
| F   | |              = Fail , start = 2025-09-04 08:24:04.535266536 UTC , finish = 2025-09-04
| F   | |              08:24:05.073974697 UTC , thread_cap_info = ("ThreadId 155", 3, False)}
| F   | |              
| | F | |              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F | |              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F | |              = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | F | |              = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 2 , total_length
| | F | |              = 32} , self = 94 , parent = Nothing , duration = 0.538735779000 , status
| | F | |              = Fail , start = 2025-09-04 08:24:04.548385279 UTC , finish = 2025-09-04
| | F | |              08:24:05.087121058 UTC , thread_cap_info = ("ThreadId 165", 0, False)}
| | F | |              
| | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | F            = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 2 , total_length
| | | | | F            = 32} , self = 95 , parent = Nothing , duration = 0.530807091000 , status
| | | | | F            = Fail , start = 2025-09-04 08:24:04.55739273 UTC , finish = 2025-09-04
| | | | | F            08:24:05.088199821 UTC , thread_cap_info = ("ThreadId 164", 0, False)}
| | | | | F            
| | | | | | F          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | F          = 2 , num_top_rules = 0 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | | | | | F          = 80} , self = 97 , parent = Nothing , duration = 0.661846876000 , status
| | | | | | F          = Fail , start = 2025-09-04 08:24:04.557925784 UTC , finish = 2025-09-04
| | | | | | F          08:24:05.21977266 UTC , thread_cap_info = ("ThreadId 172", 3, False)}
| | | | | | F          
| | | | | | | F        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | F        = 2 , num_top_rules = 0 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | | | | | | F        = 80} , self = 96 , parent = Nothing , duration = 0.631135430000 , status
| | | | | | | F        = Fail , start = 2025-09-04 08:24:04.572467105 UTC , finish = 2025-09-04
| | | | | | | F        08:24:05.203602535 UTC , thread_cap_info = ("ThreadId 174", 3, False)}
| | | | | | | F        
| | | | | | | | F      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 37 , num_strict_rules
| | | | | | | | F      = 1 , num_top_rules = 0 , num_weak_rules = 36 , alphabet_size = 13 , total_length
| | | | | | | | F      = 316} , self = 98 , parent = Nothing , duration = 0.849074639000 , status
| | | | | | | | F      = Fail , start = 2025-09-04 08:24:04.573808255 UTC , finish = 2025-09-04
| | | | | | | | F      08:24:05.422882894 UTC , thread_cap_info = ("ThreadId 177", 0, False)}
| | | | | | | | F      
| | | | | | | | | F    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 37 , num_strict_rules
| | | | | | | | | F    = 1 , num_top_rules = 0 , num_weak_rules = 36 , alphabet_size = 13 , total_length
| | | | | | | | | F    = 316} , self = 100 , parent = Nothing , duration = 0.916456198000 , status
| | | | | | | | | F    = Fail , start = 2025-09-04 08:24:04.579025907 UTC , finish = 2025-09-04
| | | | | | | | | F    08:24:05.495482105 UTC , thread_cap_info = ("ThreadId 179", 0, False)}
| | | | | | | | | F    
| | | | | | | | | | S  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | | | | | S  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | | | S  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | | | S  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | | S  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | | S  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | | | | | | | | | S  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | | | | | | | | | S  = 4 , total_length = 30} , self = 101 , parent = Nothing , duration = 0.886018594000
| | | | | | | | | | S  , status = Success , start = 2025-09-04 08:24:04.618926454 UTC , finish
| | | | | | | | | | S  = 2025-09-04 08:24:05.504945048 UTC , thread_cap_info = ("ThreadId 181",
| | | | | | | | | | S  0, False)}
| | | | | | | | | | S  
| | | F | | | | | | |  
F | |   | | | | | | |  
S | |   | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
S | |   | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
S | |   | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
S | |   | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
S | |   | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
S | |   | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
S | |   | | | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
S | |   | | | | | | |  = 4 , total_length = 30} , self = 103 , parent = Nothing , duration = 0.446374882000
S | |   | | | | | | |  , status = Success , start = 2025-09-04 08:24:05.062050473 UTC , finish
S | |   | | | | | | |  = 2025-09-04 08:24:05.508425355 UTC , thread_cap_info = ("ThreadId 188",
S | |   | | | | | | |  0, False)}
S | |   | | | | | | |  
| F |   | | | | | | |  
|   F   | | | | | | |  
|       | F | | | | |  
|       |   | F | | |  
|       |   F   | | |  
|       |       F | |  
|       F         | |  
|                 F |  
|                   S  
S                      
