[Info] pool sizes (success) 13 seen 13 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 13 seen 13 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 562 length 2171
last 644 length 2541
CNF 562 vars 2171 clauses
CNF 644 vars 2541 clauses
last 12 length 33
CNF 12 vars 33 clauses
last 12 length 33
CNF 12 vars 33 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 197, clauses: 663
last 197 length 663
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 81, clauses: 235
CNF 197 vars 663 clauses
last 81 length 235
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 197, clauses: 663, status: Unsatisfied, time: 0.005710367s
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 84, clauses: 252
CNF 81 vars 235 clauses
last 84 length 252
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 81, clauses: 235, status: Unsatisfied, time: 0.015664507s
CNF 84 vars 252 clauses
last 618 length 2413
CNF 618 vars 2413 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 84, clauses: 252, status: Unsatisfied, time: 0.063758911s
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 313, clauses: 1062
last 313 length 1062
last 683 length 2714
CNF 313 vars 1062 clauses
CNF 683 vars 2714 clauses
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 109, clauses: 326
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3714, clauses: 13055
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12728, clauses: 52507
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 313, clauses: 1062, status: Unsatisfied, time: 0.197539735s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 30354, clauses: 125017
last 109 length 326
last 3714 length 13055
last 12728 length 52507
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 4404, clauses: 16172
last 30354 length 125017
CNF 109 vars 326 clauses
CNF 3714 vars 13055 clauses
CNF 12728 vars 52507 clauses
last 4404 length 16172
Matrix {monotone = Weak, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 4, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 109, clauses: 326, status: Unsatisfied, time: 1.945203218s
CNF 30354 vars 125017 clauses
Matrix {monotone = Weak, domain = Arctic, method = QPI, shape = Full, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 3714, clauses: 13055, status: Satisfied, time: 2.041910617s
Matrix {monotone = Weak, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 12728, clauses: 52507, status: Satisfied, time: 2.005057517s
CNF 4404 vars 16172 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 30354, clauses: 125017, status: Satisfied, time: 1.855925896s
last 545 length 2151
last 487 length 1886
CNF 545 vars 2151 clauses
CNF 487 vars 1886 clauses
last 443 length 1712
last 487 length 1919
CNF 487 vars 1919 clauses
CNF 443 vars 1712 clauses
last 429 length 1687
last 399 length 1538
CNF 429 vars 1687 clauses
CNF 399 vars 1538 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2959, clauses: 10641
last 2959 length 10641
CNF 2959 vars 10641 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2959, clauses: 10641, status: Satisfied, time: 0.092960673s
**************************************************
summary
**************************************************
SRS with 3 strict rules and 13 weak rules on 8 letters       weights
SRS with 1 strict rules and 13 weak rules on 8 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 12 weak rules on 7 letters       weights
SRS with 1 strict rules and 11 weak rules on 7 letters       Matrix   { monotone = Strict, domain = Natural, method = KBO, shape = Full, bits = 1, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 2, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 10 weak rules on 7 letters       Matrix   { monotone = Strict, domain = Natural, method = KBO, shape = Full, bits = 1, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 2, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 1 strict rules and 9 weak rules on 7 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 9 weak rules on 7 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [d, n] -> [d] {- Input 0 -}
  [d, o] -> [d] {- Input 1 -}
  [o, u] -> [u] {- Input 2 -}
  [t, u] ->= [t, c, d] {- Input 3 -}
  [d, f] ->= [f, d] {- Input 4 -}
  [d, g] ->= [u, g] {- Input 5 -}
  [f, u] ->= [u, f] {- Input 6 -}
  [n, u] ->= [u] {- Input 7 -}
  [f] ->= [f, n] {- Input 8 -}
  [t] ->= [t, c, n] {- Input 9 -}
  [c, n] ->= [n, c] {- Input 10 -}
  [c, o] ->= [o, c] {- Input 11 -}
  [c, o] ->= [o] {- Input 12 -}
  [c, f] ->= [f, c] {- Input 13 -}
  [c, u] ->= [u, c] {- Input 14 -}
  [c, d] ->= [d, c] {- Input 15 -}
reason
  (d, 0/1)
  (t, 0/1)
  (n, 0/1)
  (g, 0/1)
  (f, 0/1)
  (o, 1/1)
  (u, 0/1)
  (c, 0/1)
   property Termination
has value Just True
for SRS
  [d, n] -> [d] {- Input 0 -}
  [t, u] ->= [t, c, d] {- Input 3 -}
  [d, f] ->= [f, d] {- Input 4 -}
  [d, g] ->= [u, g] {- Input 5 -}
  [f, u] ->= [u, f] {- Input 6 -}
  [n, u] ->= [u] {- Input 7 -}
  [f] ->= [f, n] {- Input 8 -}
  [t] ->= [t, c, n] {- Input 9 -}
  [c, n] ->= [n, c] {- Input 10 -}
  [c, o] ->= [o, c] {- Input 11 -}
  [c, o] ->= [o] {- Input 12 -}
  [c, f] ->= [f, c] {- Input 13 -}
  [c, u] ->= [u, c] {- Input 14 -}
  [c, d] ->= [d, c] {- Input 15 -}
reason
  ( d
  , St  / 0A 0A - \
        | -  1A - |
        \ -  2A - / )
  ( t
  , St  / 2A 2A  -3A \
        | -  -1A -3A |
        \ -  -1A -3A / )
  ( n
  , St  / 0A -  -   \
        | -  0A -   |
        \ -  -  -2A / )
  ( g
  , St  / 0A -   -   \
        | 1A -2A -2A |
        \ -  -   -   / )
  ( f
  , St  / 0A -2A -   \
        | -  0A  -1A |
        \ -  -2A -   / )
  ( o
  , St  / 0A -1A - \
        | -  -   - |
        \ -  -   - / )
  ( u
  , St  / 0A -  -  \
        | -  0A 2A |
        \ -  -  -  / )
  ( c
  , St  / 0A -2A - \
        | -  -   - |
        \ -  -   - / )
   property Termination
has value Just True
for SRS
  [d, n] -> [d] {- Input 0 -}
  [t, u] ->= [t, c, d] {- Input 3 -}
  [d, f] ->= [f, d] {- Input 4 -}
  [f, u] ->= [u, f] {- Input 6 -}
  [n, u] ->= [u] {- Input 7 -}
  [f] ->= [f, n] {- Input 8 -}
  [t] ->= [t, c, n] {- Input 9 -}
  [c, n] ->= [n, c] {- Input 10 -}
  [c, o] ->= [o, c] {- Input 11 -}
  [c, o] ->= [o] {- Input 12 -}
  [c, f] ->= [f, c] {- Input 13 -}
  [c, u] ->= [u, c] {- Input 14 -}
  [c, d] ->= [d, c] {- Input 15 -}
reason
  (d, 0/1)
  (t, 0/1)
  (n, 0/1)
  (f, 0/1)
  (o, 0/1)
  (u, 1/1)
  (c, 0/1)
   property Termination
has value Just True
for SRS
  [d, n] -> [d] {- Input 0 -}
  [d, f] ->= [f, d] {- Input 4 -}
  [f, u] ->= [u, f] {- Input 6 -}
  [n, u] ->= [u] {- Input 7 -}
  [f] ->= [f, n] {- Input 8 -}
  [t] ->= [t, c, n] {- Input 9 -}
  [c, n] ->= [n, c] {- Input 10 -}
  [c, o] ->= [o, c] {- Input 11 -}
  [c, o] ->= [o] {- Input 12 -}
  [c, f] ->= [f, c] {- Input 13 -}
  [c, u] ->= [u, c] {- Input 14 -}
  [c, d] ->= [d, c] {- Input 15 -}
reason
  ( d
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( t
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( n
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( f
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( o
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( u
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( c
  , Ek 2  / 1 0 \
          \ 0 1 / )
   property Termination
has value Just True
for SRS
  [d, n] -> [d] {- Input 0 -}
  [f, u] ->= [u, f] {- Input 6 -}
  [n, u] ->= [u] {- Input 7 -}
  [f] ->= [f, n] {- Input 8 -}
  [t] ->= [t, c, n] {- Input 9 -}
  [c, n] ->= [n, c] {- Input 10 -}
  [c, o] ->= [o, c] {- Input 11 -}
  [c, o] ->= [o] {- Input 12 -}
  [c, f] ->= [f, c] {- Input 13 -}
  [c, u] ->= [u, c] {- Input 14 -}
  [c, d] ->= [d, c] {- Input 15 -}
reason
  ( d
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( t
  , Ek 2  / 1 1 \
          \ 0 1 / )
  ( n
  , Ek 2  / 1 0 \
          \ 0 1 / )
  ( f
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( o
  , Ek 2  / 1 1 \
          \ 0 2 / )
  ( u
  , Ek 2  / 1 0 \
          \ 0 2 / )
  ( c
  , Ek 2  / 1 0 \
          \ 0 1 / )
   property Termination
has value Just True
for SRS
  [d, n] -> [d] {- Input 0 -}
  [n, u] ->= [u] {- Input 7 -}
  [f] ->= [f, n] {- Input 8 -}
  [t] ->= [t, c, n] {- Input 9 -}
  [c, n] ->= [n, c] {- Input 10 -}
  [c, o] ->= [o, c] {- Input 11 -}
  [c, o] ->= [o] {- Input 12 -}
  [c, f] ->= [f, c] {- Input 13 -}
  [c, u] ->= [u, c] {- Input 14 -}
  [c, d] ->= [d, c] {- Input 15 -}
reason
  ( d
  , St (Corner  / 1 2 5 \
                | 0 0 4 |
                \ 0 0 1 /) )
  ( t
  , St (Corner  / 1 0 4 \
                | 0 0 1 |
                \ 0 0 1 /) )
  ( n
  , St (Corner  / 1 0 0 \
                | 0 4 2 |
                \ 0 0 1 /) )
  ( f
  , St (Corner  / 1 0 4 \
                | 0 0 2 |
                \ 0 0 1 /) )
  ( o
  , St (Corner  / 1 0 5 \
                | 0 0 2 |
                \ 0 0 1 /) )
  ( u
  , St (Corner  / 1 0 5 \
                | 0 0 0 |
                \ 0 0 1 /) )
  ( c
  , St (Corner  / 1 0 0 \
                | 0 1 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [n, u] ->= [u] {- Input 7 -}
  [f] ->= [f, n] {- Input 8 -}
  [t] ->= [t, c, n] {- Input 9 -}
  [c, n] ->= [n, c] {- Input 10 -}
  [c, o] ->= [o, c] {- Input 11 -}
  [c, o] ->= [o] {- Input 12 -}
  [c, f] ->= [f, c] {- Input 13 -}
  [c, u] ->= [u, c] {- Input 14 -}
  [c, d] ->= [d, c] {- Input 15 -}
reason
  no strict rules

**************************************************
skeleton: (3/13,8)\Weight(1/13,8)\Matrix{\ArcticBZ}{3}(1/12,7)\Weight(1/11,7)\Matrix{\Natural}{2}(1/10,7)\Matrix{\Natural}{2}(1/9,7)\Matrix{\Natural}{3}(0/9,7)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Except "<<timeout>>" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.044294380000
  min duration 3.044294380000
  total durat. 3.044294380000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 3984}
    , self = 80
    , parent = Nothing
    , duration = 3.044294380000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:56.036298901 UTC
    , finish = 2025-09-04 07:31:59.080593281 UTC
    , thread_cap_info = ("ThreadId 149", 1, False)}
Except "AsyncCancelled" : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 3.202996525000
  min duration 1.064887370000
  total durat. 7.185375212000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 518
      , num_strict_rules = 42
      , num_top_rules = 0
      , num_weak_rules = 476
      , alphabet_size = 49
      , total_length = 2926}
    , self = 109
    , parent = Nothing
    , duration = 1.064887370000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:59.636021379 UTC
    , finish = 2025-09-04 07:32:00.700908749 UTC
    , thread_cap_info = ("ThreadId 202", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 3984}
    , self = 90
    , parent = Nothing
    , duration = 2.917491317000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:56.598805503 UTC
    , finish = 2025-09-04 07:31:59.51629682 UTC
    , thread_cap_info = ("ThreadId 161", 0, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 3984}
    , self = 88
    , parent = Nothing
    , duration = 3.202996525000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:56.273620402 UTC
    , finish = 2025-09-04 07:31:59.476616927 UTC
    , thread_cap_info = ("ThreadId 156", 0, False)}
Except "<<timeout>>" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.019109202000
  min duration 3.019109202000
  total durat. 3.019109202000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 3984}
    , self = 81
    , parent = Nothing
    , duration = 3.019109202000
    , status = Except "<<timeout>>"
    , start = 2025-09-04 07:31:56.061500413 UTC
    , finish = 2025-09-04 07:31:59.080609615 UTC
    , thread_cap_info = ("ThreadId 150", 1, False)}
Except "AsyncCancelled" : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 3
  max duration 3.260847667000
  min duration 1.080024802000
  total durat. 7.241736290000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 518
      , num_strict_rules = 42
      , num_top_rules = 0
      , num_weak_rules = 476
      , alphabet_size = 49
      , total_length = 2926}
    , self = 110
    , parent = Nothing
    , duration = 1.080024802000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:59.636266107 UTC
    , finish = 2025-09-04 07:32:00.716290909 UTC
    , thread_cap_info = ("ThreadId 204", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 3984}
    , self = 93
    , parent = Nothing
    , duration = 2.900863821000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:56.636267289 UTC
    , finish = 2025-09-04 07:31:59.53713111 UTC
    , thread_cap_info = ("ThreadId 163", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 692
      , num_strict_rules = 56
      , num_top_rules = 0
      , num_weak_rules = 636
      , alphabet_size = 62
      , total_length = 3984}
    , self = 92
    , parent = Nothing
    , duration = 3.260847667000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:56.276266074 UTC
    , finish = 2025-09-04 07:31:59.537113741 UTC
    , thread_cap_info = ("ThreadId 158", 0, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.576374433000
  min duration 3.576374433000
  total durat. 3.576374433000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 13
      , alphabet_size = 8
      , total_length = 53}
    , self = 86
    , parent = Nothing
    , duration = 3.576374433000
    , status = Success
    , start = 2025-09-04 07:31:55.838458562 UTC
    , finish = 2025-09-04 07:31:59.414832995 UTC
    , thread_cap_info = ("ThreadId 126", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 2.801712247000
  min duration 2.801712247000
  total durat. 2.801712247000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 14
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 13
      , alphabet_size = 8
      , total_length = 53}
    , self = 89
    , parent = Nothing
    , duration = 2.801712247000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 07:31:56.678825292 UTC
    , finish = 2025-09-04 07:31:59.480537539 UTC
    , thread_cap_info = ("ThreadId 165", 0, False)}
Success : "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.533681294000
  min duration 3.533681294000
  total durat. 3.533681294000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 13
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 11
      , alphabet_size = 8
      , total_length = 50}
    , self = 83
    , parent = Nothing
    , duration = 3.533681294000
    , status = Success
    , start = 2025-09-04 07:31:55.783421346 UTC
    , finish = 2025-09-04 07:31:59.31710264 UTC
    , thread_cap_info = ("ThreadId 116", 3, False)}
Fail : "Matrix\n { monotone = Weak\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 1
  max duration 3.095274405000
  min duration 3.095274405000
  total durat. 3.095274405000
  Info
    { what = "Matrix\n  { monotone = Weak\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 4\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 0
      , alphabet_size = 1
      , total_length = 2}
    , self = 79
    , parent = Nothing
    , duration = 3.095274405000
    , status = Fail
    , start = 2025-09-04 07:31:55.92099576 UTC
    , finish = 2025-09-04 07:31:59.016270165 UTC
    , thread_cap_info = ("ThreadId 124", 1, False)}
Success : "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 3.582805460000
  min duration 3.582805460000
  total durat. 3.582805460000
  Info
    { what = "QPI\n  { dim = 3\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 13
      , num_strict_rules = 2
      , num_top_rules = 2
      , num_weak_rules = 11
      , alphabet_size = 8
      , total_length = 50}
    , self = 82
    , parent = Nothing
    , duration = 3.582805460000
    , status = Success
    , start = 2025-09-04 07:31:55.71738047 UTC
    , finish = 2025-09-04 07:31:59.30018593 UTC
    , thread_cap_info = ("ThreadId 96", 3, False)}
Fail : "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n , tracing = False\n , verbose = False}"
  total number 1
  max duration 1.060148088000
  min duration 1.060148088000
  total durat. 1.060148088000
  Info
    { what = "QPI\n  { dim = 4\n  , bits = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , encoding = Ersatz_Binary\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 1
      , num_strict_rules = 1
      , num_top_rules = 1
      , num_weak_rules = 0
      , alphabet_size = 1
      , total_length = 2}
    , self = 78
    , parent = Nothing
    , duration = 1.060148088000
    , status = Fail
    , start = 2025-09-04 07:31:55.797983714 UTC
    , finish = 2025-09-04 07:31:56.858131802 UTC
    , thread_cap_info = ("ThreadId 120", 1, False)}
Success : "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize, epsilon_digits = 6}))\n , verbose = False\n , tracing = False}"
  total number 14
  max duration 0.433214467000
  min duration 0.000019472000
  total durat. 1.325988742000
**************************************************
E                          Info { what = "Transport\n { mode = Standard\n , output_as = Transport_System\n
E                          , direction = Forward_Backward\n , max_derivation_length = Just 2\n , max_expansion_width
E                          = Nothing\n , max_tiers = Just 33\n , max_overlap_closures = Nothing\n
E                          , string_implementation = ByteString Plain\n , tracing = False\n , cpf
E                          = True}" , input_size = Size { num_rules = 13 , num_strict_rules = 13 ,
E                          num_top_rules = 0 , num_weak_rules = 0 , alphabet_size = 8 , total_length
E                          = 50} , self = 53 , parent = Nothing , duration = 0.218889176000 , status
E                          = Except "AsyncCancelled" , start = 2025-09-04 07:31:55.685561028 UTC ,
E                          finish = 2025-09-04 07:31:55.904450204 UTC , thread_cap_info = ("ThreadId
E                          20", 2, False)}
E                          
| S                        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| S                        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| S                        = Size { num_rules = 832 , num_strict_rules = 832 , num_top_rules = 0 ,
| S                        num_weak_rules = 0 , alphabet_size = 64 , total_length = 4864} , self =
| S                        54 , parent = Nothing , duration = 0.202063632000 , status = Success ,
| S                        start = 2025-09-04 07:31:55.708274372 UTC , finish = 2025-09-04 07:31:55.910338004
| S                        UTC , thread_cap_info = ("ThreadId 92", 2, False)}
| S                        
| | S                      Info { what = "QPI\n { dim = 3\n , bits = 3\n , solver = Stats (Kissatapi
| | S                      [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | S                      , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | S                      = 13 , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 11 ,
| | S                      alphabet_size = 8 , total_length = 50} , self = 82 , parent = Nothing ,
| | S                      duration = 3.582805460000 , status = Success , start = 2025-09-04 07:31:55.71738047
| | S                      UTC , finish = 2025-09-04 07:31:59.30018593 UTC , thread_cap_info = ("ThreadId
| | S                      96", 3, False)}
| | S                      
| | | F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
| | | F                    = 1 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size = 8 , total_length
| | | F                    = 53} , self = 77 , parent = Nothing , duration = 0.840003657000 , status
| | | F                    = Fail , start = 2025-09-04 07:31:55.753848678 UTC , finish = 2025-09-04
| | | F                    07:31:56.593852335 UTC , thread_cap_info = ("ThreadId 113", 0, False)}
| | | F                    
| | | | S                  Info { what = "Matrix\n { monotone = Weak\n , domain = ArcticBZ\n , method
| | | | S                  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | S                  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | S                  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | S                  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | S                  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 13
| | | | S                  , num_strict_rules = 2 , num_top_rules = 2 , num_weak_rules = 11 , alphabet_size
| | | | S                  = 8 , total_length = 50} , self = 83 , parent = Nothing , duration = 3.533681294000
| | | | S                  , status = Success , start = 2025-09-04 07:31:55.783421346 UTC , finish
| | | | S                  = 2025-09-04 07:31:59.31710264 UTC , thread_cap_info = ("ThreadId 116",
| | | | S                  3, False)}
| | | | S                  
| | | | | S                Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | S                epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | S                = Size { num_rules = 896 , num_strict_rules = 64 , num_top_rules = 0 ,
| | | | | S                num_weak_rules = 832 , alphabet_size = 64 , total_length = 5184} , self
| | | | | S                = 70 , parent = Nothing , duration = 0.433214467000 , status = Success
| | | | | S                , start = 2025-09-04 07:31:55.79782615 UTC , finish = 2025-09-04 07:31:56.231040617
| | | | | S                UTC , thread_cap_info = ("ThreadId 118", 0, False)}
| | | | | S                
| | | | | | S              Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | S              epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | S              = Size { num_rules = 896 , num_strict_rules = 64 , num_top_rules = 0 ,
| | | | | | S              num_weak_rules = 832 , alphabet_size = 64 , total_length = 5184} , self
| | | | | | S              = 62 , parent = Nothing , duration = 0.222273852000 , status = Success
| | | | | | S              , start = 2025-09-04 07:31:55.797964541 UTC , finish = 2025-09-04 07:31:56.020238393
| | | | | | S              UTC , thread_cap_info = ("ThreadId 119", 1, False)}
| | | | | | S              
| | | | | | | F            Info { what = "QPI\n { dim = 4\n , bits = 3\n , solver = Stats (Kissatapi
| | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , encoding = Ersatz_Binary\n
| | | | | | | F            , tracing = False\n , verbose = False}" , input_size = Size { num_rules
| | | | | | | F            = 1 , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 0 , alphabet_size
| | | | | | | F            = 1 , total_length = 2} , self = 78 , parent = Nothing , duration = 1.060148088000
| | | | | | | F            , status = Fail , start = 2025-09-04 07:31:55.797983714 UTC , finish =
| | | | | | | F            2025-09-04 07:31:56.858131802 UTC , thread_cap_info = ("ThreadId 120",
| | | | | | | F            1, False)}
| | | | | | | F            
| | | | | | | | S          Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | | | S          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | S          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | S          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | S          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | S          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | | | | | | | S          , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size
| | | | | | | | S          = 8 , total_length = 53} , self = 86 , parent = Nothing , duration = 3.576374433000
| | | | | | | | S          , status = Success , start = 2025-09-04 07:31:55.838458562 UTC , finish
| | | | | | | | S          = 2025-09-04 07:31:59.414832995 UTC , thread_cap_info = ("ThreadId 126",
| | | | | | | | S          0, False)}
| | | | | | | | S          
| | | | | | | | | S        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | | | | S        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | | | | S        = Size { num_rules = 896 , num_strict_rules = 64 , num_top_rules = 0 ,
| | | | | | | | | S        num_weak_rules = 832 , alphabet_size = 64 , total_length = 5184} , self
| | | | | | | | | S        = 67 , parent = Nothing , duration = 0.273465167000 , status = Success
| | | | | | | | | S        , start = 2025-09-04 07:31:55.897442425 UTC , finish = 2025-09-04 07:31:56.170907592
| | | | | | | | | S        UTC , thread_cap_info = ("ThreadId 127", 0, False)}
| | | | | | | | | S        
E | | | | | | | | |        
  S | | | | | | | |        
F   | | | | | | | |        Info { what = "Matrix\n { monotone = Weak\n , domain = Natural\n , method
F   | | | | | | | |        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F   | | | | | | | |        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F   | | | | | | | |        , dim = 4\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F   | | | | | | | |        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F   | | | | | | | |        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 1
F   | | | | | | | |        , num_strict_rules = 1 , num_top_rules = 1 , num_weak_rules = 0 , alphabet_size
F   | | | | | | | |        = 1 , total_length = 2} , self = 79 , parent = Nothing , duration = 3.095274405000
F   | | | | | | | |        , status = Fail , start = 2025-09-04 07:31:55.92099576 UTC , finish = 2025-09-04
F   | | | | | | | |        07:31:59.016270165 UTC , thread_cap_info = ("ThreadId 124", 1, False)}
F   | | | | | | | |        
| E | | | | | | | |        Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| E | | | | | | | |        epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| E | | | | | | | |        = Size { num_rules = 1811 , num_strict_rules = 1183 , num_top_rules = 1183
| E | | | | | | | |        , num_weak_rules = 628 , alphabet_size = 98 , total_length = 9518} , self
| E | | | | | | | |        = 68 , parent = Nothing , duration = 0.265942380000 , status = Except "AsyncCancelled"
| E | | | | | | | |        , start = 2025-09-04 07:31:55.930326734 UTC , finish = 2025-09-04 07:31:56.196269114
| E | | | | | | | |        UTC , thread_cap_info = ("ThreadId 138", 2, False)}
| E | | | | | | | |        
| | | | | | | | | | E      Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| | | | | | | | | | E      epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| | | | | | | | | | E      = Size { num_rules = 1912 , num_strict_rules = 1284 , num_top_rules = 1284
| | | | | | | | | | E      , num_weak_rules = 628 , alphabet_size = 110 , total_length = 9907} , self
| | | | | | | | | | E      = 71 , parent = Nothing , duration = 0.300836030000 , status = Except "AsyncCancelled"
| | | | | | | | | | E      , start = 2025-09-04 07:31:55.956846091 UTC , finish = 2025-09-04 07:31:56.257682121
| | | | | | | | | | E      UTC , thread_cap_info = ("ThreadId 139", 2, False)}
| | | | | | | | | | E      
| | | | | | S | | | |      
| | | | | | F | | | |      Info { what = "Tiling\n { method = All\n , width = 2\n , state_type = Best\n
| | | | | | F | | | |      , map_type = Enum\n , unlabel = Never\n , print_completion_steps = False\n
| | | | | | F | | | |      , print_tiles = False\n , max_num_tiles = Just 10000\n , max_num_rules
| | | | | | F | | | |      = Just 100000\n , verbose = False\n , tracing = False\n , draw = False\n
| | | | | | F | | | |      , cpf = True}" , input_size = Size { num_rules = 692 , num_strict_rules
| | | | | | F | | | |      = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| | | | | | F | | | |      total_length = 3984} , self = 66 , parent = Nothing , duration = 0.130204441000
| | | | | | F | | | |      , status = Fail , start = 2025-09-04 07:31:56.034901791 UTC , finish =
| | | | | | F | | | |      2025-09-04 07:31:56.165106232 UTC , thread_cap_info = ("ThreadId 147",
| | | | | | F | | | |      1, False)}
| | | | | | F | | | |      
| | | | | | | | | | | E    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | E    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | E    = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | | | | | | | | | | E    = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| | | | | | | | | | | E    total_length = 3984} , self = 80 , parent = Nothing , duration = 3.044294380000
| | | | | | | | | | | E    , status = Except "<<timeout>>" , start = 2025-09-04 07:31:56.036298901
| | | | | | | | | | | E    UTC , finish = 2025-09-04 07:31:59.080593281 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | E    149", 1, False)}
| | | | | | | | | | | E    
| | | | | | | | | | | | E  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | E  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | E  = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | | | | | | | | | | | E  = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| | | | | | | | | | | | E  total_length = 3984} , self = 81 , parent = Nothing , duration = 3.019109202000
| | | | | | | | | | | | E  , status = Except "<<timeout>>" , start = 2025-09-04 07:31:56.061500413
| | | | | | | | | | | | E  UTC , finish = 2025-09-04 07:31:59.080609615 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | | | | E  150", 1, False)}
| | | | | | | | | | | | E  
| | | | | | F | | | | | |  
| | | | | |   | | S | | |  
| E | | | |   | |   | | |  
|   | | | S   | |   | | |  
|   | | |     | |   E | |  
| F | | |     | |     | |  Info { what = "Weight\n { modus = Pre (Or_Else Count (GLPK { goal = Optimize,
| F | | |     | |     | |  epsilon_digits = 6}))\n , verbose = False\n , tracing = False}" , input_size
| F | | |     | |     | |  = Size { num_rules = 692 , num_strict_rules = 56 , num_top_rules = 0 ,
| F | | |     | |     | |  num_weak_rules = 636 , alphabet_size = 62 , total_length = 3984} , self
| F | | |     | |     | |  = 75 , parent = Nothing , duration = 0.103489910000 , status = Fail , start
| F | | |     | |     | |  = 2025-09-04 07:31:56.273552276 UTC , finish = 2025-09-04 07:31:56.377042186
| F | | |     | |     | |  UTC , thread_cap_info = ("ThreadId 154", 0, False)}
| F | | |     | |     | |  
| | | | | E   | |     | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | E   | |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | E   | |     | |  = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | | | | E   | |     | |  = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| | | | | E   | |     | |  total_length = 3984} , self = 88 , parent = Nothing , duration = 3.202996525000
| | | | | E   | |     | |  , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:56.273620402
| | | | | E   | |     | |  UTC , finish = 2025-09-04 07:31:59.476616927 UTC , thread_cap_info = ("ThreadId
| | | | | E   | |     | |  156", 0, False)}
| | | | | E   | |     | |  
| | | | | | E | |     | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | E | |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | E | |     | |  = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | | | | | E | |     | |  = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| | | | | | E | |     | |  total_length = 3984} , self = 92 , parent = Nothing , duration = 3.260847667000
| | | | | | E | |     | |  , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:56.276266074
| | | | | | E | |     | |  UTC , finish = 2025-09-04 07:31:59.537113741 UTC , thread_cap_info = ("ThreadId
| | | | | | E | |     | |  158", 0, False)}
| | | | | | E | |     | |  
| F | | | | | | |     | |  
|   | F | | | | |     | |  
| E |   | | | | |     | |  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| E |   | | | | |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E |   | | | | |     | |  = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| E |   | | | | |     | |  = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| E |   | | | | |     | |  total_length = 3984} , self = 90 , parent = Nothing , duration = 2.917491317000
| E |   | | | | |     | |  , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:56.598805503
| E |   | | | | |     | |  UTC , finish = 2025-09-04 07:31:59.51629682 UTC , thread_cap_info = ("ThreadId
| E |   | | | | |     | |  161", 0, False)}
| E |   | | | | |     | |  
| | | E | | | | |     | |  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | E | | | | |     | |  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | E | | | | |     | |  = False\n , verbose = False}" , input_size = Size { num_rules = 692 , num_strict_rules
| | | E | | | | |     | |  = 56 , num_top_rules = 0 , num_weak_rules = 636 , alphabet_size = 62 ,
| | | E | | | | |     | |  total_length = 3984} , self = 93 , parent = Nothing , duration = 2.900863821000
| | | E | | | | |     | |  , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:56.636267289
| | | E | | | | |     | |  UTC , finish = 2025-09-04 07:31:59.53713111 UTC , thread_cap_info = ("ThreadId
| | | E | | | | |     | |  163", 0, False)}
| | | E | | | | |     | |  
| | | | | | | | | E   | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | | | | | | | E   | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | | | | | | | E   | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | | | | | | | E   | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | | E   | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | | E   | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 14
| | | | | | | | | E   | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 13 , alphabet_size
| | | | | | | | | E   | |  = 8 , total_length = 53} , self = 89 , parent = Nothing , duration = 2.801712247000
| | | | | | | | | E   | |  , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:56.678825292
| | | | | | | | | E   | |  UTC , finish = 2025-09-04 07:31:59.480537539 UTC , thread_cap_info = ("ThreadId
| | | | | | | | | E   | |  165", 0, False)}
| | | | | | | | | E   | |  
| | | | | | | F | |   | |  
F | | | | | |   | |   | |  
  | | | | | |   | |   E |  
  | | | | | |   | |     E  
  | S | | | |   | |        
  |   | S | |   | |        
  |   |   | |   S |        
  |   |   E |     |        
  |   |     |     E        
  E   |     |              
      |     E              
      E                    
E                          Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
E                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
E                          = False\n , verbose = False}" , input_size = Size { num_rules = 518 , num_strict_rules
E                          = 42 , num_top_rules = 0 , num_weak_rules = 476 , alphabet_size = 49 ,
E                          total_length = 2926} , self = 109 , parent = Nothing , duration = 1.064887370000
E                          , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:59.636021379
E                          UTC , finish = 2025-09-04 07:32:00.700908749 UTC , thread_cap_info = ("ThreadId
E                          202", 0, False)}
E                          
| E                        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| E                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| E                        = False\n , verbose = False}" , input_size = Size { num_rules = 518 , num_strict_rules
| E                        = 42 , num_top_rules = 0 , num_weak_rules = 476 , alphabet_size = 49 ,
| E                        total_length = 2926} , self = 110 , parent = Nothing , duration = 1.080024802000
| E                        , status = Except "AsyncCancelled" , start = 2025-09-04 07:31:59.636266107
| E                        UTC , finish = 2025-09-04 07:32:00.716290909 UTC , thread_cap_info = ("ThreadId
| E                        204", 0, False)}
| E                        
E |                        
  E                        
E                          Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
E                          = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
E                          = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
E                          , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E                          \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E                          , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
E                          , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size
E                          = 7 , total_length = 36} , self = 133 , parent = Nothing , duration = 0.260953753000
E                          , status = Except "AsyncCancelled" , start = 2025-09-04 07:32:00.876616801
E                          UTC , finish = 2025-09-04 07:32:01.137570554 UTC , thread_cap_info = ("ThreadId
E                          242", 0, False)}
E                          
| S                        Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| S                        = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| S                        = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| S                        , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| S                        \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| S                        , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 10
| S                        , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 9 , alphabet_size
| S                        = 7 , total_length = 36} , self = 130 , parent = Nothing , duration = 0.140762986000
| S                        , status = Success , start = 2025-09-04 07:32:00.897831441 UTC , finish
| S                        = 2025-09-04 07:32:01.038594427 UTC , thread_cap_info = ("ThreadId 243",
| S                        0, False)}
| S                        
| S                        
E                          
