[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 606 length 3694
[Info] pool sizes (success) 2 seen 2 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
CNF 606 vars 3694 clauses
last 519 length 2685
CNF 519 vars 2685 clauses
last 1048 length 5392
CNF 1048 vars 5392 clauses
last 1703 length 9995
last 726 length 3093
last 1160 length 6944
last 1551 length 8163
last 1442 length 7414
last 474 length 2128
CNF 1703 vars 9995 clauses
last 1688 length 9559
last 1981 length 9540
last 1789 length 8021
last 566 length 2817
last 1466 length 7122
CNF 726 vars 3093 clauses
CNF 1160 vars 6944 clauses
CNF 1551 vars 8163 clauses
CNF 1442 vars 7414 clauses
last 566 length 2817
CNF 474 vars 2128 clauses
last 1466 length 7122
last 12142 length 73433
CNF 1981 vars 9540 clauses
CNF 1688 vars 9559 clauses
CNF 1789 vars 8021 clauses
CNF 566 vars 2817 clauses
last 13387 length 104854
CNF 1466 vars 7122 clauses
CNF 566 vars 2817 clauses
CNF 1466 vars 7122 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2092, clauses: 8277
CNF 12142 vars 73433 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14860, clauses: 61965
CNF 13387 vars 104854 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2196, clauses: 8535
last 2092 length 8277
last 14860 length 61965
last 2196 length 8535
CNF 2092 vars 8277 clauses
CNF 14860 vars 61965 clauses
CNF 2196 vars 8535 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2092, clauses: 8277, status: Unsatisfied, time: 0.096210935s
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 16166, clauses: 67159
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2196, clauses: 8535, status: Satisfied, time: 0.03922972s
last 16166 length 67159
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14860, clauses: 61965, status: Satisfied, time: 0.100002457s
**************************************************
summary
**************************************************
SRS with 1 strict rules and 2 weak rules on 2 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 4 strict rules and 8 weak rules on 4 letters       weights
SRS with 1 strict rules and 4 weak rules on 4 letters       Matrix   { monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 4 weak rules on 3 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [b, a, a, b, b] -> [] {- Input 0 -}
  [a] ->= [] {- Input 1 -}
  [] ->= [b, a, b, b] {- Input 2 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[b, b], [b, a], [a, a], [a, b], [b, b], [b, b]] -> [ [ b , b ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[b, b], [b, a], [a, a], [a, b], [b, b], [b, a]] -> [ [ b , a ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, b], [b, a], [a, a], [a, b], [b, b], [b, b]] -> [ [ a , b ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[a, b], [b, a], [a, a], [a, b], [b, b], [b, a]] -> [ [ a , a ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, b]] ->= [[b, b]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, a], [a, a]] ->= [[b, a]] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, a], [a, b]] ->= [[a, b]] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[a, a], [a, a]] ->= [[a, a]] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, a] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 1 (Concon 0 (Input 2)) -}
  [[a, a]] ->= [ [a, b] , [b, a] , [a, b] , [b, b] , [b, a] ] {- Semlab 1 (Concon 1 (Input 2)) -}
reason
  ([a, a], 1/1)
  ([a, b], 0/1)
  ([b, a], 0/1)
  ([b, b], 0/1)
   property Termination
has value Just True
for SRS
  [[a, b], [b, a], [a, a], [a, b], [b, b], [b, a]] -> [ [ a , a ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, b]] ->= [[b, b]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, a] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 1 (Concon 0 (Input 2)) -}
reason
  ( [a, a]
  , St (Corner  / 1 5 5 \
                | 0 0 5 |
                \ 0 0 1 /) )
  ( [a, b]
  , St (Corner  / 1 1 0 \
                | 0 2 0 |
                \ 0 0 1 /) )
  ( [b, a]
  , St (Corner  / 1 5 0 \
                | 0 5 0 |
                \ 0 0 1 /) )
  ( [b, b]
  , St (Corner  / 1 0 0 \
                | 0 0 0 |
                \ 0 0 1 /) )
   property Termination
has value Just True
for SRS
  [[b, a], [a, b]] ->= [[b, b]] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 0 (Concon 0 (Input 2)) -}
  [[b, a]] ->= [ [b, b] , [b, a] , [a, b] , [b, b] , [b, a] ] {- Semlab 0 (Concon 1 (Input 2)) -}
  [[a, b]] ->= [ [a, b] , [b, a] , [a, b] , [b, b] , [b, b] ] {- Semlab 1 (Concon 0 (Input 2)) -}
reason
  no strict rules

**************************************************
skeleton: (1/2,2)\TileAllAll{2}(4/8,4)\Weight(1/4,4)\Matrix{\Natural}{3}(0/4,3)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.738184659000
  min duration 0.020605881000
  total durat. 3.768549840000
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 9
  max duration 0.777202004000
  min duration 0.020551199000
  total durat. 4.239588313000
**************************************************
F                              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F                              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                              = False\n , verbose = False}" , input_size = Size { num_rules = 14 , num_strict_rules
F                              = 10 , num_top_rules = 10 , num_weak_rules = 4 , alphabet_size = 4 , total_length
F                              = 58} , self = 86 , parent = Nothing , duration = 0.428697461000 , status
F                              = Fail , start = 2025-09-04 08:24:34.580729123 UTC , finish = 2025-09-04
F                              08:24:35.009426584 UTC , thread_cap_info = ("ThreadId 100", 1, False)}
F                              
| F                            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                            = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| F                            = 16 , num_top_rules = 16 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| F                            = 84} , self = 87 , parent = Nothing , duration = 0.447998249000 , status
| F                            = Fail , start = 2025-09-04 08:24:34.581660261 UTC , finish = 2025-09-04
| F                            08:24:35.02965851 UTC , thread_cap_info = ("ThreadId 105", 0, False)}
| F                            
| | F                          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                          = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | F                          = 16 , num_top_rules = 16 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | F                          = 84} , self = 84 , parent = Nothing , duration = 0.282536223000 , status
| | F                          = Fail , start = 2025-09-04 08:24:34.58626457 UTC , finish = 2025-09-04
| | F                          08:24:34.868800793 UTC , thread_cap_info = ("ThreadId 106", 0, False)}
| | F                          
| | | F                        Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F                        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F                        = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | F                        = 16 , num_top_rules = 16 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | F                        = 84} , self = 91 , parent = Nothing , duration = 0.547053628000 , status
| | | F                        = Fail , start = 2025-09-04 08:24:34.605857442 UTC , finish = 2025-09-04
| | | F                        08:24:35.15291107 UTC , thread_cap_info = ("ThreadId 123", 1, False)}
| | | F                        
| | | | F                      Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F                      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F                      = False\n , verbose = False}" , input_size = Size { num_rules = 20 , num_strict_rules
| | | | F                      = 16 , num_top_rules = 16 , num_weak_rules = 4 , alphabet_size = 6 , total_length
| | | | F                      = 84} , self = 88 , parent = Nothing , duration = 0.448062667000 , status
| | | | F                      = Fail , start = 2025-09-04 08:24:34.606056614 UTC , finish = 2025-09-04
| | | | F                      08:24:35.054119281 UTC , thread_cap_info = ("ThreadId 122", 1, False)}
| | | | F                      
| | | | | F                    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F                    = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | F                    = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 2 , total_length
| | | | | F                    = 32} , self = 85 , parent = Nothing , duration = 0.399679026000 , status
| | | | | F                    = Fail , start = 2025-09-04 08:24:34.607241153 UTC , finish = 2025-09-04
| | | | | F                    08:24:35.006920179 UTC , thread_cap_info = ("ThreadId 133", 2, False)}
| | | | | F                    
| | | | | | F                  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F                  = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | | | | F                  = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 2 , total_length
| | | | | | F                  = 32} , self = 89 , parent = Nothing , duration = 0.438380241000 , status
| | | | | | F                  = Fail , start = 2025-09-04 08:24:34.619447212 UTC , finish = 2025-09-04
| | | | | | F                  08:24:35.057827453 UTC , thread_cap_info = ("ThreadId 134", 2, False)}
| | | | | | F                  
| | | | | | | F                Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | F                = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | F                = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | F                = 28} , self = 93 , parent = Nothing , duration = 0.563136538000 , status
| | | | | | | F                = Fail , start = 2025-09-04 08:24:34.626221658 UTC , finish = 2025-09-04
| | | | | | | F                08:24:35.189358196 UTC , thread_cap_info = ("ThreadId 148", 0, False)}
| | | | | | | F                
| | | | | | | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | F              = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | | F              = 28} , self = 94 , parent = Nothing , duration = 0.643891046000 , status
| | | | | | | | F              = Fail , start = 2025-09-04 08:24:34.626223282 UTC , finish = 2025-09-04
| | | | | | | | F              08:24:35.270114328 UTC , thread_cap_info = ("ThreadId 149", 0, False)}
| | | | | | | | F              
| | | | | | | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | | | F            = 2 , num_top_rules = 0 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | | | | | | | | F            = 76} , self = 92 , parent = Nothing , duration = 0.544945267000 , status
| | | | | | | | | F            = Fail , start = 2025-09-04 08:24:34.626322061 UTC , finish = 2025-09-04
| | | | | | | | | F            08:24:35.171267328 UTC , thread_cap_info = ("ThreadId 152", 2, False)}
| | | | | | | | | F            
| | | | | | | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 10 , num_strict_rules
| | | | | | | | | | F          = 2 , num_top_rules = 0 , num_weak_rules = 8 , alphabet_size = 4 , total_length
| | | | | | | | | | F          = 76} , self = 90 , parent = Nothing , duration = 0.504840921000 , status
| | | | | | | | | | F          = Fail , start = 2025-09-04 08:24:34.626324897 UTC , finish = 2025-09-04
| | | | | | | | | | F          08:24:35.131165818 UTC , thread_cap_info = ("ThreadId 154", 2, False)}
| | | | | | | | | | F          
| | | | | | | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 37 , num_strict_rules
| | | | | | | | | | | F        = 1 , num_top_rules = 0 , num_weak_rules = 36 , alphabet_size = 13 , total_length
| | | | | | | | | | | F        = 285} , self = 97 , parent = Nothing , duration = 0.738184659000 , status
| | | | | | | | | | | F        = Fail , start = 2025-09-04 08:24:34.671703898 UTC , finish = 2025-09-04
| | | | | | | | | | | F        08:24:35.409888557 UTC , thread_cap_info = ("ThreadId 162", 0, False)}
| | | | | | | | | | | F        
| | | | | | | | | | | | F      Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | F      [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | F      = False\n , verbose = False}" , input_size = Size { num_rules = 37 , num_strict_rules
| | | | | | | | | | | | F      = 1 , num_top_rules = 0 , num_weak_rules = 36 , alphabet_size = 13 , total_length
| | | | | | | | | | | | F      = 285} , self = 98 , parent = Nothing , duration = 0.777202004000 , status
| | | | | | | | | | | | F      = Fail , start = 2025-09-04 08:24:34.671705327 UTC , finish = 2025-09-04
| | | | | | | | | | | | F      08:24:35.448907331 UTC , thread_cap_info = ("ThreadId 164", 0, False)}
| | | | | | | | | | | | F      
| | | | | | | | | | | | | F    Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | F    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | F    = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | | | | | | F    = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | F    = 28} , self = 95 , parent = Nothing , duration = 0.584776564000 , status
| | | | | | | | | | | | | F    = Fail , start = 2025-09-04 08:24:34.74606472 UTC , finish = 2025-09-04
| | | | | | | | | | | | | F    08:24:35.330841284 UTC , thread_cap_info = ("ThreadId 171", 3, False)}
| | | | | | | | | | | | | F    
| | | | | | | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 5 , num_strict_rules
| | | | | | | | | | | | | | F  = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size = 4 , total_length
| | | | | | | | | | | | | | F  = 28} , self = 96 , parent = Nothing , duration = 0.596435590000 , status
| | | | | | | | | | | | | | F  = Fail , start = 2025-09-04 08:24:34.752966826 UTC , finish = 2025-09-04
| | | | | | | | | | | | | | F  08:24:35.349402416 UTC , thread_cap_info = ("ThreadId 173", 3, False)}
| | | | | | | | | | | | | | F  
| | F | | | | | | | | | | | |  
| |   | | F | | | | | | | | |  
F |   | |   | | | | | | | | |  
  F   | |   | | | | | | | | |  
      | F   | | | | | | | | |  
      |     F | | | | | | | |  
F     |       | | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
F     |       | | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
F     |       | | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
F     |       | | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
F     |       | | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
F     |       | | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
F     |       | | | | | | | |  , num_strict_rules = 2 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
F     |       | | | | | | | |  = 2 , total_length = 32} , self = 99 , parent = Nothing , duration = 0.409722115000
F     |       | | | | | | | |  , status = Fail , start = 2025-09-04 08:24:35.057851921 UTC , finish =
F     |       | | | | | | | |  2025-09-04 08:24:35.467574036 UTC , thread_cap_info = ("ThreadId 184",
F     |       | | | | | | | |  2, False)}
F     |       | | | | | | | |  
|     |       | | | F | | | |  
|     F       | | |   | | | |  
|             | | F   | | | |  
|             F |     | | | |  
| E             |     | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| E             |     | | | |  = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| E             |     | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| E             |     | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| E             |     | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| E             |     | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| E             |     | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| E             |     | | | |  = 4 , total_length = 28} , self = 102 , parent = Nothing , duration = 0.220503349000
| E             |     | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:24:35.265597229
| E             |     | | | |  UTC , finish = 2025-09-04 08:24:35.486100578 UTC , thread_cap_info = ("ThreadId
| E             |     | | | |  189", 0, False)}
| E             |     | | | |  
| |             F     | | | |  
| | S                 | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | S                 | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | S                 | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | S                 | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | S                 | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | S                 | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 5
| | S                 | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 4 , alphabet_size
| | S                 | | | |  = 4 , total_length = 28} , self = 100 , parent = Nothing , duration = 0.198444070000
| | S                 | | | |  , status = Success , start = 2025-09-04 08:24:35.287058211 UTC , finish
| | S                 | | | |  = 2025-09-04 08:24:35.485502281 UTC , thread_cap_info = ("ThreadId 190",
| | S                 | | | |  0, False)}
| | S                 | | | |  
| | |                 | | F |  
| | |                 | |   F  
| | |                 F |      
| | |                   F      
F | |                          
  | S                          
  E                            
