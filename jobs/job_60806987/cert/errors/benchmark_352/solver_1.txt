[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
[Info] pool sizes (success) 1 seen 1 todo
 @(pure-matchbox-1.1-76efd0ca7ed81445e0700c76a09ee684727edfd56408cc0b27b65ea5a40ad6b4:Matchbox.Closure.Simple src/Matchbox/Closure/Simple.hs:236:10)
last 739 length 3858
CNF 739 vars 3858 clauses
last 1127 length 5825
CNF 1127 vars 5825 clauses
last 1128 length 5920
last 1018 length 4647
CNF 1018 vars 4647 clauses
CNF 1128 vars 5920 clauses
last 546 length 2517
last 2883 length 18150
last 1459 length 8708
last 3120 length 16191
last 1128 length 5920
last 1459 length 8708
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14951, clauses: 62250
last 6760 length 39471
CNF 546 vars 2517 clauses
last 6457 length 46769
CNF 2883 vars 18150 clauses
CNF 1459 vars 8708 clauses
CNF 3120 vars 16191 clauses
CNF 1128 vars 5920 clauses
CNF 1459 vars 8708 clauses
last 14951 length 62250
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19231, clauses: 79268
CNF 6760 vars 39471 clauses
CNF 6457 vars 46769 clauses
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2132, clauses: 8457
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2729, clauses: 10423
last 19231 length 79268
CNF 14951 vars 62250 clauses
last 2132 length 8457
last 2729 length 10423
CNF 19231 vars 79268 clauses
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 14951, clauses: 62250, status: Satisfied, time: 1.205608022s
CNF 2132 vars 8457 clauses
last 41120 length 254360
CNF 2729 vars 10423 clauses
last 471 length 2168
last 713 length 3331
Matrix {monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 19231, clauses: 79268, status: Satisfied, time: 0.711809541s
Matrix {monotone = Strict, domain = Natural, method = Direct, shape = Cornered, bits = 3, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Binary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1,Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False} vars: 2729, clauses: 10423, status: Satisfied, time: 0.327118709s
CNF 471 vars 2168 clauses
CNF 713 vars 3331 clauses
**************************************************
summary
**************************************************
SRS with 1 strict rules and 1 weak rules on 3 letters       tile all, by Config   { method = All,width = 2,unlabel = Never}
SRS with 9 strict rules and 9 weak rules on 9 letters       weights
SRS with 1 strict rules and 6 weak rules on 7 letters       Matrix   { monotone = Strict, domain = ArcticBZ, method = Direct, shape = Cornered, bits = 4, compress = True, remove = Any, constraint = And [], minimize = Nothing, encoding = Ersatz_Unary, dim = 3, solver = Stats (Kissatapi [Option "quiet" 1, Configuration "sat"]), verbose = False, tracing = False, briefing = False, log_level = 1, draw = False}
SRS with 0 strict rules and 6 weak rules on 6 letters       no strict rules

**************************************************
proof
**************************************************
property Termination
has value Just True
for SRS
  [a, b, b, a] -> [] {- Input 0 -}
  [] ->= [a, b, c, a] {- Input 1 -}
reason
  Tiling   { method = All, width = 2, state_type = Bit64, map_type = Enum, unlabel = Never, print_completion_steps = False, print_tiles = False, max_num_tiles = Just 10000, max_num_rules = Just 100000, verbose = False, tracing = False, draw = False, cpf = True}
  steps 2
  using all tiles
  tile all rules
  steps: 2

   property Termination
has value Just True
for SRS
  [[a, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ a , a ] ] {- Semlab 0 (Concon 0 (Input 0)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ a , b ] ] {- Semlab 0 (Concon 1 (Input 0)) -}
  [[a, a], [a, b], [b, b], [b, a], [a, c]] -> [ [ a , c ] ] {- Semlab 0 (Concon 2 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ b , a ] ] {- Semlab 1 (Concon 0 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[b, a], [a, b], [b, b], [b, a], [a, c]] -> [ [ b , c ] ] {- Semlab 1 (Concon 2 (Input 0)) -}
  [[c, a], [a, b], [b, b], [b, a], [a, a]] -> [ [ c , a ] ] {- Semlab 2 (Concon 0 (Input 0)) -}
  [[c, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ c , b ] ] {- Semlab 2 (Concon 1 (Input 0)) -}
  [[c, a], [a, b], [b, b], [b, a], [a, c]] -> [ [ c , c ] ] {- Semlab 2 (Concon 2 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, b] , [b, c] , [c, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, b] , [b, c] , [c, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, c]] ->= [ [a, a] , [a, b] , [b, c] , [c, a] , [a, c] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, b] , [b, c] , [c, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, b]] ->= [ [b, a] , [a, b] , [b, c] , [c, a] , [a, b] ] {- Semlab 1 (Concon 1 (Input 1)) -}
  [[b, c]] ->= [ [b, a] , [a, b] , [b, c] , [c, a] , [a, c] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a]] ->= [ [c, a] , [a, b] , [b, c] , [c, a] , [a, a] ] {- Semlab 2 (Concon 0 (Input 1)) -}
  [[c, b]] ->= [ [c, a] , [a, b] , [b, c] , [c, a] , [a, b] ] {- Semlab 2 (Concon 1 (Input 1)) -}
  [[c, c]] ->= [ [c, a] , [a, b] , [b, c] , [c, a] , [a, c] ] {- Semlab 2 (Concon 2 (Input 1)) -}
reason
  ([a, a], 0/1)
  ([a, b], 0/1)
  ([a, c], 0/1)
  ([b, a], 0/1)
  ([b, b], 2/1)
  ([b, c], 0/1)
  ([c, a], 0/1)
  ([c, b], 1/1)
  ([c, c], 1/1)
   property Termination
has value Just True
for SRS
  [[b, a], [a, b], [b, b], [b, a], [a, b]] -> [ [ b , b ] ] {- Semlab 1 (Concon 1 (Input 0)) -}
  [[a, a]] ->= [ [a, a] , [a, b] , [b, c] , [c, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, b] , [b, c] , [c, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, c]] ->= [ [a, a] , [a, b] , [b, c] , [c, a] , [a, c] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, b] , [b, c] , [c, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, c]] ->= [ [b, a] , [a, b] , [b, c] , [c, a] , [a, c] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a]] ->= [ [c, a] , [a, b] , [b, c] , [c, a] , [a, a] ] {- Semlab 2 (Concon 0 (Input 1)) -}
reason
  ( [a, a]
  , St  / 0A  -  - \
        | -   -  - |
        \ -2A 0A - / )
  ( [a, b]
  , St  / 0A  -   -  \
        | -   0A  -  |
        \ -1A -1A 2A / )
  ( [a, c]
  , St  / 0A  - - \
        | -   - - |
        \ -1A - - / )
  ( [b, a]
  , St  / 0A  -  -1A \
        | -   2A -   |
        \ -1A 1A -   / )
  ( [b, b]
  , St  / 0A - -  \
        | 0A - -  |
        \ -  - 1A / )
  ( [b, c]
  , St  / 0A  - -   \
        | -   - -1A |
        \ -1A - 2A  / )
  ( [c, a]
  , St  / 0A  - -   \
        | -1A - -2A |
        \ -   - -   / )
   property Termination
has value Just True
for SRS
  [[a, a]] ->= [ [a, a] , [a, b] , [b, c] , [c, a] , [a, a] ] {- Semlab 0 (Concon 0 (Input 1)) -}
  [[a, b]] ->= [ [a, a] , [a, b] , [b, c] , [c, a] , [a, b] ] {- Semlab 0 (Concon 1 (Input 1)) -}
  [[a, c]] ->= [ [a, a] , [a, b] , [b, c] , [c, a] , [a, c] ] {- Semlab 0 (Concon 2 (Input 1)) -}
  [[b, a]] ->= [ [b, a] , [a, b] , [b, c] , [c, a] , [a, a] ] {- Semlab 1 (Concon 0 (Input 1)) -}
  [[b, c]] ->= [ [b, a] , [a, b] , [b, c] , [c, a] , [a, c] ] {- Semlab 1 (Concon 2 (Input 1)) -}
  [[c, a]] ->= [ [c, a] , [a, b] , [b, c] , [c, a] , [a, a] ] {- Semlab 2 (Concon 0 (Input 1)) -}
reason
  no strict rules

**************************************************
skeleton: (1/1,3)\TileAllAll{2}(9/9,9)\Weight(1/6,7)\Matrix{\ArcticBZ}{3}(0/6,6)[]
**************************************************
let {cpf = True;slowdown = 1.0}
in let {verb ?= False;trac ?= False;cpf ?= False;slowdown = 3;uncertified = \ p -> Apply (Guard_Not cpf) p;uncertified_T = \ t -> And_Then (Guard_Not cpf) t;do = \ x -> x;dont = \ x -> Fail;done = Worker No_Strict_Rules;when_small = \ m -> And_Then (Worker (SizeAtmost 10000)) m;solver = Stats (Kissatapi [ Option "quiet" 1, Configuration "sat"]);mo = Pre (Or_Else Count GLPK);weight = Worker (Weight {modus = mo});wop = Or_Else weight Pass;weighted = \ m -> And_Then m wop;mirror = Worker Mirror;mirrored = \ m -> And_Then mirror m;cleaner = Or_Else (Worker (Cleaner {tracing = trac})) Pass;tiling = \ m w u -> weighted (Worker (Tiling {method = m,width = w,state_type = Best,map_type = Enum,unlabel = u,max_num_tiles = Just 10000,max_num_rules = Just 100000,cpf = cpf}));kbo = \ b -> weighted (Worker (KBO {direction = LR,bits = b,encoding = Ersatz_Bits,solver = solver}));okb = \ b -> weighted (Worker (KBO {direction = RL,bits = b,encoding = Ersatz_Bits,solver = solver}));kbom = \ b -> First_Of [ kbo b, okb b];qpi = \ dim bits -> weighted (Worker (QPI {tracing = trac,dim = dim,bits = bits,solver = solver,encoding = Ersatz_Binary}));matrix = \ mon dom dim bits enc -> weighted (Worker (Matrix {monotone = mon,domain = dom,dim = dim,bits = bits,shape = Cornered,encoding = enc,tracing = trac,verbose = verb,solver = solver}));ctx = Worker (Context {when = When_Empty,side = Right,close = Empty});simple = Seq [ weight, Timeout slowdown (when_small (kbom 1))];unlab = Worker (Unlabel {accept_null_strict = True,produce_null_strict = False});tileun = \ w -> And_Then (tiling All w Never) (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple (Or_Else unlab (And_Then simple unlab))))));tileuns = Seq ([2..2] >>= (\ w -> [ tileun w]));preprocess = While_Fail_T (Worker No_Strict_Rules_T) tileuns;bin = Ersatz_Binary;una = Ersatz_Unary;tp = Worker (Transport {max_derivation_length = Just 2,max_tiers = Just 33,direction = Forward_Backward,tracing = False,cpf = cpf});nohs = let {noh = \ c w m -> Worker (Simple (Config {closure = c,max_closure_width = w,max_seen_size = m,max_inner_children = Just 8,max_outer_children = Just 2,intermediates = All,priority = Linear [ ( -7, Width_lhs), ( -1, Width_rhs), ( 7, Log2 Steps)],start_strict_only = True,print_sizes_finally = True}));f1w = 15;f1s = 1000000;nohs = [ tp, Seq [ noh Forward (Just f1w) (Just f1s), noh Forward Nothing Nothing], Seq [ noh Backward (Just f1w) (Just f1s), noh Backward Nothing Nothing]]}in nohs;relative = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_strict_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Strict dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ matrix_strict_timeout ArcticBZ 3 4 una, matrix_strict_timeout Natural 3 3 bin, matrix_strict_timeout ArcticBZ 4 4 una, matrix_strict_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ matrix_strict_timeout Arctic dim 3 una, matrix_strict_timeout Natural dim 2 bin]))));barr = \ h -> Worker (Matchbound {method = ROC,implementation = Approximate {at_bound = Merge},max_height = Just h});remove = Seq [ weight, First_Of [ when_small (weighted matrices), tileuns]];yeah = While_Fail done remove}in First_Of ([ ] <> ([ Apply ctx yeah, Apply preprocess (Apply ctx yeah)] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)])));standard = let {matrices = First_Of_Pool (Config {workers = 2,advice = Nothing,tracing = trac}) let {s = slowdown;matrix_weak_timeout = \ dom dim bits enc -> TimeoutSlowdown s dim (matrix Weak dom dim bits enc);kbobits = 1}in [ ] <> ([ Timeout s (kbo kbobits), Timeout s (okb kbobits)] <> ([ TimeoutSlowdown s 3 (qpi 3 3), matrix_weak_timeout ArcticBZ 3 4 una, matrix_weak_timeout Natural 3 3 bin, TimeoutSlowdown s 4 (qpi 4 3), matrix_weak_timeout Natural 4 3 bin] <> ([5..10] >>= (\ dim -> [ do (TimeoutSlowdown s dim (qpi dim 4)), do (matrix_weak_timeout Arctic dim 3 una), do (matrix_weak_timeout Natural dim 2 bin)]))));remove = Seq [ weight, when_small (weighted matrices)];dp = Apply ctx (Apply (Worker (DP {tracing = False})) (Apply wop (Branch (Worker (EDG {usable = True,tcap_inverse = True})) remove)));mbe = \ ms -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Exact,max_size = ms}));mbeh = Apply (mbe (Just 100000)) done;mba = \ h -> uncertified_T (Worker (Matchbound {method = RFC,implementation = Approximate {at_bound = Merge},max_height = Just h}));mb_trans = Worker (Matchbound {method = RFC,max_size = Just 10000,max_height = Just 5});mb_proof = Apply mb_trans done;when_onerule = \ m -> Apply (Worker (Assert (Atmost 1 Rules))) m;dropped = \ y -> Or_Else (when_onerule (Dropped_Par (First_Of (nohs <> [ y])))) y;simple_yeah = Seq [ done, uncertified (Worker KKST01), uncertified (dropped (First_Of [ mb_proof, Apply (Worker Mirror) mb_proof]))];yeah = Seq [ done, simple_yeah, First_Of [ dp, Apply (Worker Mirror) dp]];preprocess = While_Fail_T (Worker No_Strict_Rules_T) (First_Of [ tileuns, Seq ([2..6] >>= (\ h -> [ mba h, And_Then (Worker Mirror) (mba h)]))])}in Apply wop (Or_Else done (First_Of ([ Apply preprocess yeah, yeah] <> (nohs <> [ do (Apply (tiling All 2 Never) yeah), dont (Apply (tiling All 3 Never) yeah), dont (Apply (tiling All 4 Never) yeah)]))));strictify = Worker (Strictify {});dropstrict = Worker (Dropstrict {})}
  in Apply cleaner (Or_Else done (Apply wop (Or_Else done (Or_Else (Apply (When_True (Apply dropstrict (Apply strictify standard))) (Apply strictify standard)) relative))))**************************************************
statistics on proof search (nodes types that (together) took more than 1.000000000000)
**************************************************
Fail : "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 1.542324750000
  min duration 0.021217574000
  total durat. 4.366007035000
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 7
      , total_length = 42}
    , self = 83
    , parent = Nothing
    , duration = 1.319496730000
    , status = Fail
    , start = 2025-09-04 08:26:01.783846701 UTC
    , finish = 2025-09-04 08:26:03.103343431 UTC
    , thread_cap_info = ("ThreadId 145", 1, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 36
      , num_strict_rules = 30
      , num_top_rules = 30
      , num_weak_rules = 6
      , alphabet_size = 12
      , total_length = 156}
    , self = 82
    , parent = Nothing
    , duration = 1.344372033000
    , status = Fail
    , start = 2025-09-04 08:26:01.722112978 UTC
    , finish = 2025-09-04 08:26:03.066485011 UTC
    , thread_cap_info = ("ThreadId 110", 3, False)}
  Info
    { what = "KBO\n  { direction = LR\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 168}
    , self = 85
    , parent = Nothing
    , duration = 1.542324750000
    , status = Fail
    , start = 2025-09-04 08:26:01.801359263 UTC
    , finish = 2025-09-04 08:26:03.343684013 UTC
    , thread_cap_info = ("ThreadId 152", 2, False)}
Fail : "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing = False\n , verbose = False}"
  total number 6
  max duration 1.844350704000
  min duration 0.012556080000
  total durat. 7.137351218000
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 3
      , alphabet_size = 3
      , total_length = 36}
    , self = 79
    , parent = Nothing
    , duration = 1.249860874000
    , status = Fail
    , start = 2025-09-04 08:26:01.73499929 UTC
    , finish = 2025-09-04 08:26:02.984860164 UTC
    , thread_cap_info = ("ThreadId 124", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 7
      , total_length = 42}
    , self = 81
    , parent = Nothing
    , duration = 1.310559228000
    , status = Fail
    , start = 2025-09-04 08:26:01.73449659 UTC
    , finish = 2025-09-04 08:26:03.045055818 UTC
    , thread_cap_info = ("ThreadId 135", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 36
      , num_strict_rules = 30
      , num_top_rules = 30
      , num_weak_rules = 6
      , alphabet_size = 12
      , total_length = 156}
    , self = 80
    , parent = Nothing
    , duration = 1.320209640000
    , status = Fail
    , start = 2025-09-04 08:26:01.698828813 UTC
    , finish = 2025-09-04 08:26:03.019038453 UTC
    , thread_cap_info = ("ThreadId 111", 0, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 7
      , total_length = 42}
    , self = 84
    , parent = Nothing
    , duration = 1.399814692000
    , status = Fail
    , start = 2025-09-04 08:26:01.78385301 UTC
    , finish = 2025-09-04 08:26:03.183667702 UTC
    , thread_cap_info = ("ThreadId 147", 1, False)}
  Info
    { what = "KBO\n  { direction = RL\n  , bits = 1\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , compress = True\n  , tracing = False\n  , verbose = False}"
    , input_size = Size
      { num_rules = 21
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 18
      , alphabet_size = 9
      , total_length = 168}
    , self = 86
    , parent = Nothing
    , duration = 1.844350704000
    , status = Fail
    , start = 2025-09-04 08:26:01.821893629 UTC
    , finish = 2025-09-04 08:26:03.666244333 UTC
    , thread_cap_info = ("ThreadId 154", 2, False)}
Success : "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 2.509430931000
  min duration 2.105263638000
  total durat. 4.614694569000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 6
      , num_strict_rules = 3
      , num_top_rules = 0
      , num_weak_rules = 3
      , alphabet_size = 3
      , total_length = 36}
    , self = 87
    , parent = Nothing
    , duration = 2.105263638000
    , status = Success
    , start = 2025-09-04 08:26:01.818253932 UTC
    , finish = 2025-09-04 08:26:03.92351757 UTC
    , thread_cap_info = ("ThreadId 156", 1, False)}
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = ArcticBZ\n  , method = Direct\n  , shape = Cornered\n  , bits = 4\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Unary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 7
      , total_length = 42}
    , self = 99
    , parent = Nothing
    , duration = 2.509430931000
    , status = Success
    , start = 2025-09-04 08:26:01.805620979 UTC
    , finish = 2025-09-04 08:26:04.31505191 UTC
    , thread_cap_info = ("ThreadId 151", 0, False)}
Except "AsyncCancelled" : "Matrix\n { monotone = Strict\n , domain = Natural\n , method = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n , log_level = 1\n , draw = False}"
  total number 2
  max duration 1.269274538000
  min duration 0.942042033000
  total durat. 2.211316571000
  Info
    { what = "Matrix\n  { monotone = Strict\n  , domain = Natural\n  , method = Direct\n  , shape = Cornered\n  , bits = 3\n  , compress = True\n  , remove = Any\n  , constraint = And []\n  , minimize = Nothing\n  , encoding = Ersatz_Binary\n  , dim = 3\n  , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration \"sat\"])\n  , verbose = False\n  , tracing = False\n  , briefing = False\n  , log_level = 1\n  , draw = False}"
    , input_size = Size
      { num_rules = 7
      , num_strict_rules = 1
      , num_top_rules = 0
      , num_weak_rules = 6
      , alphabet_size = 7
      , total_length = 42}
    , self = 101
    , parent = Nothing
    , duration = 1.269274538000
    , status = Except "AsyncCancelled"
    , start = 2025-09-04 08:26:03.062893441 UTC
    , finish = 2025-09-04 08:26:04.332167979 UTC
    , thread_cap_info = ("ThreadId 172", 0, False)}
**************************************************
F                    Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
F                    [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
F                    = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
F                    = 30 , num_top_rules = 30 , num_weak_rules = 6 , alphabet_size = 12 , total_length
F                    = 156} , self = 80 , parent = Nothing , duration = 1.320209640000 , status
F                    = Fail , start = 2025-09-04 08:26:01.698828813 UTC , finish = 2025-09-04
F                    08:26:03.019038453 UTC , thread_cap_info = ("ThreadId 111", 0, False)}
F                    
| F                  Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| F                  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| F                  = False\n , verbose = False}" , input_size = Size { num_rules = 36 , num_strict_rules
| F                  = 30 , num_top_rules = 30 , num_weak_rules = 6 , alphabet_size = 12 , total_length
| F                  = 156} , self = 82 , parent = Nothing , duration = 1.344372033000 , status
| F                  = Fail , start = 2025-09-04 08:26:01.722112978 UTC , finish = 2025-09-04
| F                  08:26:03.066485011 UTC , thread_cap_info = ("ThreadId 110", 3, False)}
| F                  
| | F                Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | F                [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | F                = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | F                = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 7 , total_length
| | F                = 42} , self = 81 , parent = Nothing , duration = 1.310559228000 , status
| | F                = Fail , start = 2025-09-04 08:26:01.73449659 UTC , finish = 2025-09-04
| | F                08:26:03.045055818 UTC , thread_cap_info = ("ThreadId 135", 0, False)}
| | F                
| | | F              Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | F              [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | F              = False\n , verbose = False}" , input_size = Size { num_rules = 6 , num_strict_rules
| | | F              = 3 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size = 3 , total_length
| | | F              = 36} , self = 79 , parent = Nothing , duration = 1.249860874000 , status
| | | F              = Fail , start = 2025-09-04 08:26:01.73499929 UTC , finish = 2025-09-04
| | | F              08:26:02.984860164 UTC , thread_cap_info = ("ThreadId 124", 1, False)}
| | | F              
| | | | F            Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | F            [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | F            = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | F            = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 7 , total_length
| | | | F            = 42} , self = 83 , parent = Nothing , duration = 1.319496730000 , status
| | | | F            = Fail , start = 2025-09-04 08:26:01.783846701 UTC , finish = 2025-09-04
| | | | F            08:26:03.103343431 UTC , thread_cap_info = ("ThreadId 145", 1, False)}
| | | | F            
| | | | | F          Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | F          [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | F          = False\n , verbose = False}" , input_size = Size { num_rules = 7 , num_strict_rules
| | | | | F          = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size = 7 , total_length
| | | | | F          = 42} , self = 84 , parent = Nothing , duration = 1.399814692000 , status
| | | | | F          = Fail , start = 2025-09-04 08:26:01.78385301 UTC , finish = 2025-09-04
| | | | | F          08:26:03.183667702 UTC , thread_cap_info = ("ThreadId 147", 1, False)}
| | | | | F          
| | | | | | F        Info { what = "KBO\n { direction = LR\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | F        [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | F        = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | | | | | F        = 3 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | F        = 168} , self = 85 , parent = Nothing , duration = 1.542324750000 , status
| | | | | | F        = Fail , start = 2025-09-04 08:26:01.801359263 UTC , finish = 2025-09-04
| | | | | | F        08:26:03.343684013 UTC , thread_cap_info = ("ThreadId 152", 2, False)}
| | | | | | F        
| | | | | | | S      Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | | S      = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | S      = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | S      , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | S      \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | S      , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
| | | | | | | S      , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
| | | | | | | S      = 7 , total_length = 42} , self = 99 , parent = Nothing , duration = 2.509430931000
| | | | | | | S      , status = Success , start = 2025-09-04 08:26:01.805620979 UTC , finish
| | | | | | | S      = 2025-09-04 08:26:04.31505191 UTC , thread_cap_info = ("ThreadId 151",
| | | | | | | S      0, False)}
| | | | | | | S      
| | | | | | | | S    Info { what = "Matrix\n { monotone = Strict\n , domain = ArcticBZ\n , method
| | | | | | | | S    = Direct\n , shape = Cornered\n , bits = 4\n , compress = True\n , remove
| | | | | | | | S    = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Unary\n
| | | | | | | | S    , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | | | | | | S    \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | | | | | | S    , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | | | | | | S    , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | | | | | | | S    = 3 , total_length = 36} , self = 87 , parent = Nothing , duration = 2.105263638000
| | | | | | | | S    , status = Success , start = 2025-09-04 08:26:01.818253932 UTC , finish
| | | | | | | | S    = 2025-09-04 08:26:03.92351757 UTC , thread_cap_info = ("ThreadId 156",
| | | | | | | | S    1, False)}
| | | | | | | | S    
| | | | | | | | | F  Info { what = "KBO\n { direction = RL\n , bits = 1\n , solver = Stats (Kissatapi
| | | | | | | | | F  [Option \"quiet\" 1, Configuration \"sat\"])\n , compress = True\n , tracing
| | | | | | | | | F  = False\n , verbose = False}" , input_size = Size { num_rules = 21 , num_strict_rules
| | | | | | | | | F  = 3 , num_top_rules = 0 , num_weak_rules = 18 , alphabet_size = 9 , total_length
| | | | | | | | | F  = 168} , self = 86 , parent = Nothing , duration = 1.844350704000 , status
| | | | | | | | | F  = Fail , start = 2025-09-04 08:26:01.821893629 UTC , finish = 2025-09-04
| | | | | | | | | F  08:26:03.666244333 UTC , thread_cap_info = ("ThreadId 154", 2, False)}
| | | | | | | | | F  
| | | F | | | | | |  
| | | E | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
| | | E | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
| | | E | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
| | | E | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
| | | E | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
| | | E | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 6
| | | E | | | | | |  , num_strict_rules = 3 , num_top_rules = 0 , num_weak_rules = 3 , alphabet_size
| | | E | | | | | |  = 3 , total_length = 36} , self = 89 , parent = Nothing , duration = 0.942042033000
| | | E | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:26:03.002411891
| | | E | | | | | |  UTC , finish = 2025-09-04 08:26:03.944453924 UTC , thread_cap_info = ("ThreadId
| | | E | | | | | |  171", 1, False)}
| | | E | | | | | |  
F | | | | | | | | |  
  | F | | | | | | |  
E |   | | | | | | |  Info { what = "Matrix\n { monotone = Strict\n , domain = Natural\n , method
E |   | | | | | | |  = Direct\n , shape = Cornered\n , bits = 3\n , compress = True\n , remove
E |   | | | | | | |  = Any\n , constraint = And []\n , minimize = Nothing\n , encoding = Ersatz_Binary\n
E |   | | | | | | |  , dim = 3\n , solver = Stats (Kissatapi [Option \"quiet\" 1, Configuration
E |   | | | | | | |  \"sat\"])\n , verbose = False\n , tracing = False\n , briefing = False\n
E |   | | | | | | |  , log_level = 1\n , draw = False}" , input_size = Size { num_rules = 7
E |   | | | | | | |  , num_strict_rules = 1 , num_top_rules = 0 , num_weak_rules = 6 , alphabet_size
E |   | | | | | | |  = 7 , total_length = 42} , self = 101 , parent = Nothing , duration = 1.269274538000
E |   | | | | | | |  , status = Except "AsyncCancelled" , start = 2025-09-04 08:26:03.062893441
E |   | | | | | | |  UTC , finish = 2025-09-04 08:26:04.332167979 UTC , thread_cap_info = ("ThreadId
E |   | | | | | | |  172", 0, False)}
E |   | | | | | | |  
| F   | | | | | | |  
|     | F | | | | |  
|     |   F | | | |  
|     |     F | | |  
|     |       | | F  
|     |       | S    
|     E       |      
|             S      
E                    
