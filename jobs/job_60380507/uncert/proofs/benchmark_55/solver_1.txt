YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/8S03W.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

countstack(g,a)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToDTProblemTransformerProof [SOUND, 21 ms]
(2) TRIPLES
(3) TriplesToPiDPProof [SOUND, 0 ms]
(4) PiDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) PiDP
(7) PiDPToQDPProof [SOUND, 0 ms]
(8) QDP
(9) UsableRulesReductionPairsProof [EQUIVALENT, 5 ms]
(10) QDP
(11) PisEmptyProof [EQUIVALENT, 0 ms]
(12) YES


----------------------------------------

(0)
Obligation:
Clauses:

countstack(empty, X) :- ','(!, eq(X, 0)).
countstack(S, X) :- ','(pop(S, nil), ','(!, ','(popped(S, Pd), countstack(Pd, X)))).
countstack(S, s(X)) :- ','(pop(S, P), ','(head(P, H), ','(tail(P, T), ','(popped(S, Pd), countstack(push(H, push(T, Pd)), X))))).
pop(empty, X1).
pop(push(P, X2), P).
popped(empty, empty).
popped(push(X3, Pd), Pd).
head(nil, X4).
head(cons(H, X5), H).
tail(nil, nil).
tail(cons(X6, T), T).
eq(X, X).


Query: countstack(g,a)
----------------------------------------

(1) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 2,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(countstack (empty) X)",
                "(',' (!) (eq X (0)))"
            ],
            [
                "(countstack S X)",
                "(',' (pop S (nil)) (',' (!) (',' (popped S Pd) (countstack Pd X))))"
            ],
            [
                "(countstack S (s X))",
                "(',' (pop S P) (',' (head P H) (',' (tail P T) (',' (popped S Pd) (countstack (push H (push T Pd)) X)))))"
            ],
            [
                "(pop (empty) X1)",
                null
            ],
            [
                "(pop (push P X2) P)",
                null
            ],
            [
                "(popped (empty) (empty))",
                null
            ],
            [
                "(popped (push X3 Pd) Pd)",
                null
            ],
            [
                "(head (nil) X4)",
                null
            ],
            [
                "(head (cons H X5) H)",
                null
            ],
            [
                "(tail (nil) (nil))",
                null
            ],
            [
                "(tail (cons X6 T) T)",
                null
            ],
            [
                "(eq X X)",
                null
            ]
        ]
    },
    "graph": {
        "nodes": {
            "type": "Nodes",
            "130": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 3,
                        "term": "(',' (pop T11 (nil)) (',' (!_1) (',' (popped T11 X16) (countstack X16 T13))))"
                    },
                    {
                        "clause": -1,
                        "scope": 3,
                        "term": null
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(countstack T11 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(countstack T11 T2)",
                        "(countstack (empty) X8)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [
                        "X8",
                        "X16"
                    ],
                    "exprvars": []
                }
            },
            "790": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 8,
                        "term": "(',' (popped (push (cons T49 T50) T38) X46) (countstack (push T49 (push T50 X46)) T32))"
                    },
                    {
                        "clause": 6,
                        "scope": 8,
                        "term": "(',' (popped (push (cons T49 T50) T38) X46) (countstack (push T49 (push T50 X46)) T32))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T38",
                        "T49",
                        "T50"
                    ],
                    "free": ["X46"],
                    "exprvars": []
                }
            },
            "131": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_1) (',' (popped (push (nil) T19) X16) (countstack X16 T13)))"
                    },
                    {
                        "clause": -1,
                        "scope": 3,
                        "term": null
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(countstack (push (nil) T19) T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": ["X16"],
                    "exprvars": []
                }
            },
            "791": {
                "goal": [{
                    "clause": 6,
                    "scope": 8,
                    "term": "(',' (popped (push (cons T49 T50) T38) X46) (countstack (push T49 (push T50 X46)) T32))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T38",
                        "T49",
                        "T50"
                    ],
                    "free": ["X46"],
                    "exprvars": []
                }
            },
            "132": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": 3,
                        "term": null
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(countstack T11 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(countstack T11 T2)",
                            "(countstack (empty) X8)"
                        ],
                        [
                            "(pop T11 (nil))",
                            "(pop (push X22 X23) X22)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [
                        "X8",
                        "X22",
                        "X23"
                    ],
                    "exprvars": []
                }
            },
            "792": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(countstack (push T57 (push T58 T59)) T32)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T57",
                        "T58",
                        "T59"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "133": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (popped (push (nil) T19) X16) (countstack X16 T13))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": ["X16"],
                    "exprvars": []
                }
            },
            "134": {
                "goal": [
                    {
                        "clause": 5,
                        "scope": 4,
                        "term": "(',' (popped (push (nil) T19) X16) (countstack X16 T13))"
                    },
                    {
                        "clause": 6,
                        "scope": 4,
                        "term": "(',' (popped (push (nil) T19) X16) (countstack X16 T13))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": ["X16"],
                    "exprvars": []
                }
            },
            "135": {
                "goal": [{
                    "clause": 6,
                    "scope": 4,
                    "term": "(',' (popped (push (nil) T19) X16) (countstack X16 T13))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": ["X16"],
                    "exprvars": []
                }
            },
            "136": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(countstack T24 T13)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T24"],
                    "free": [],
                    "exprvars": []
                }
            },
            "137": {
                "goal": [{
                    "clause": 2,
                    "scope": 1,
                    "term": "(countstack T11 T2)"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(countstack T11 T2)",
                            "(countstack (empty) X8)"
                        ],
                        [
                            "(pop T11 (nil))",
                            "(pop (push X22 X23) X22)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [
                        "X8",
                        "X22",
                        "X23"
                    ],
                    "exprvars": []
                }
            },
            "239": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "261": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 5,
                        "term": "(',' (pop T30 X43) (',' (head X43 X44) (',' (tail X43 X45) (',' (popped T30 X46) (countstack (push X44 (push X45 X46)) T32)))))"
                    },
                    {
                        "clause": 4,
                        "scope": 5,
                        "term": "(',' (pop T30 X43) (',' (head X43 X44) (',' (tail X43 X45) (',' (popped T30 X46) (countstack (push X44 (push X45 X46)) T32)))))"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(countstack T30 T2)",
                            "(countstack (empty) X8)"
                        ],
                        [
                            "(pop T30 (nil))",
                            "(pop (push X22 X23) X22)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T30"],
                    "free": [
                        "X8",
                        "X22",
                        "X23",
                        "X43",
                        "X44",
                        "X45",
                        "X46"
                    ],
                    "exprvars": []
                }
            },
            "780": {
                "goal": [{
                    "clause": 4,
                    "scope": 5,
                    "term": "(',' (pop T30 X43) (',' (head X43 X44) (',' (tail X43 X45) (',' (popped T30 X46) (countstack (push X44 (push X45 X46)) T32)))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(countstack T30 T2)",
                            "(countstack (empty) X8)"
                        ],
                        [
                            "(pop T30 (nil))",
                            "(pop (push X22 X23) X22)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T30"],
                    "free": [
                        "X8",
                        "X22",
                        "X23",
                        "X43",
                        "X44",
                        "X45",
                        "X46"
                    ],
                    "exprvars": []
                }
            },
            "121": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_1) (eq T5 (0)))"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(countstack (empty) T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(countstack (empty) T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "781": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (head T37 X44) (',' (tail T37 X45) (',' (popped (push T37 T38) X46) (countstack (push X44 (push X45 X46)) T32))))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(pop (push T37 T38) (nil))",
                        "(pop (push X22 X23) X22)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T37",
                        "T38"
                    ],
                    "free": [
                        "X22",
                        "X23",
                        "X44",
                        "X45",
                        "X46"
                    ],
                    "exprvars": []
                }
            },
            "122": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(countstack T1 T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(countstack T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(countstack T1 T2)",
                        "(countstack (empty) X8)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": ["X8"],
                    "exprvars": []
                }
            },
            "782": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(countstack T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "123": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(eq T5 (0))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "783": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 6,
                        "term": "(',' (head T37 X44) (',' (tail T37 X45) (',' (popped (push T37 T38) X46) (countstack (push X44 (push X45 X46)) T32))))"
                    },
                    {
                        "clause": 8,
                        "scope": 6,
                        "term": "(',' (head T37 X44) (',' (tail T37 X45) (',' (popped (push T37 T38) X46) (countstack (push X44 (push X45 X46)) T32))))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(pop (push T37 T38) (nil))",
                        "(pop (push X22 X23) X22)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T37",
                        "T38"
                    ],
                    "free": [
                        "X22",
                        "X23",
                        "X44",
                        "X45",
                        "X46"
                    ],
                    "exprvars": []
                }
            },
            "124": {
                "goal": [{
                    "clause": 11,
                    "scope": 2,
                    "term": "(eq T5 (0))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "784": {
                "goal": [{
                    "clause": 8,
                    "scope": 6,
                    "term": "(',' (head T37 X44) (',' (tail T37 X45) (',' (popped (push T37 T38) X46) (countstack (push X44 (push X45 X46)) T32))))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(pop (push T37 T38) (nil))",
                        "(pop (push X22 X23) X22)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T37",
                        "T38"
                    ],
                    "free": [
                        "X22",
                        "X23",
                        "X44",
                        "X45",
                        "X46"
                    ],
                    "exprvars": []
                }
            },
            "4": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(countstack T1 T2)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(countstack T1 T2)"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(countstack T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "125": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "224": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (pop T30 X43) (',' (head X43 X44) (',' (tail X43 X45) (',' (popped T30 X46) (countstack (push X44 (push X45 X46)) T32)))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(countstack T30 T2)",
                            "(countstack (empty) X8)"
                        ],
                        [
                            "(pop T30 (nil))",
                            "(pop (push X22 X23) X22)"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T30"],
                    "free": [
                        "X8",
                        "X22",
                        "X23",
                        "X43",
                        "X44",
                        "X45",
                        "X46"
                    ],
                    "exprvars": []
                }
            },
            "785": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (tail (cons T43 T44) X45) (',' (popped (push (cons T43 T44) T38) X46) (countstack (push T43 (push X45 X46)) T32)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T38",
                        "T43",
                        "T44"
                    ],
                    "free": [
                        "X45",
                        "X46"
                    ],
                    "exprvars": []
                }
            },
            "126": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "786": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "127": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "787": {
                "goal": [
                    {
                        "clause": 9,
                        "scope": 7,
                        "term": "(',' (tail (cons T43 T44) X45) (',' (popped (push (cons T43 T44) T38) X46) (countstack (push T43 (push X45 X46)) T32)))"
                    },
                    {
                        "clause": 10,
                        "scope": 7,
                        "term": "(',' (tail (cons T43 T44) X45) (',' (popped (push (cons T43 T44) T38) X46) (countstack (push T43 (push X45 X46)) T32)))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T38",
                        "T43",
                        "T44"
                    ],
                    "free": [
                        "X45",
                        "X46"
                    ],
                    "exprvars": []
                }
            },
            "128": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (pop T11 (nil)) (',' (!_1) (',' (popped T11 X16) (countstack X16 T13))))"
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(countstack T11 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(countstack T11 T2)",
                        "(countstack (empty) X8)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [
                        "X8",
                        "X16"
                    ],
                    "exprvars": []
                }
            },
            "788": {
                "goal": [{
                    "clause": 10,
                    "scope": 7,
                    "term": "(',' (tail (cons T43 T44) X45) (',' (popped (push (cons T43 T44) T38) X46) (countstack (push T43 (push X45 X46)) T32)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T38",
                        "T43",
                        "T44"
                    ],
                    "free": [
                        "X45",
                        "X46"
                    ],
                    "exprvars": []
                }
            },
            "129": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(',' (pop T11 (nil)) (',' (!_1) (',' (popped T11 X16) (countstack X16 T13))))"
                    },
                    {
                        "clause": 4,
                        "scope": 3,
                        "term": "(',' (pop T11 (nil)) (',' (!_1) (',' (popped T11 X16) (countstack X16 T13))))"
                    },
                    {
                        "clause": -1,
                        "scope": 3,
                        "term": null
                    },
                    {
                        "clause": 2,
                        "scope": 1,
                        "term": "(countstack T11 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(countstack T11 T2)",
                        "(countstack (empty) X8)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [
                        "X8",
                        "X16"
                    ],
                    "exprvars": []
                }
            },
            "789": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (popped (push (cons T49 T50) T38) X46) (countstack (push T49 (push T50 X46)) T32))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T38",
                        "T49",
                        "T50"
                    ],
                    "free": ["X46"],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 2,
                "to": 4,
                "label": "CASE"
            },
            {
                "from": 4,
                "to": 121,
                "label": "EVAL with clause\ncountstack(empty, X8) :- ','(!_1, eq(X8, 0)).\nand substitutionT1 -> empty,\nT2 -> T5,\nX8 -> T5,\nT4 -> T5"
            },
            {
                "from": 4,
                "to": 122,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 121,
                "to": 123,
                "label": "CUT"
            },
            {
                "from": 122,
                "to": 128,
                "label": "ONLY EVAL with clause\ncountstack(X14, X15) :- ','(pop(X14, nil), ','(!_1, ','(popped(X14, X16), countstack(X16, X15)))).\nand substitutionT1 -> T11,\nX14 -> T11,\nT2 -> T13,\nX15 -> T13,\nT12 -> T13"
            },
            {
                "from": 123,
                "to": 124,
                "label": "CASE"
            },
            {
                "from": 124,
                "to": 125,
                "label": "EVAL with clause\neq(X11, X11).\nand substitutionT5 -> 0,\nX11 -> 0,\nT8 -> 0"
            },
            {
                "from": 124,
                "to": 126,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 125,
                "to": 127,
                "label": "SUCCESS"
            },
            {
                "from": 128,
                "to": 129,
                "label": "CASE"
            },
            {
                "from": 129,
                "to": 130,
                "label": "BACKTRACK\nfor clause: pop(empty, X1)\nwith clash: (countstack(T11, T2), countstack(empty, X8))"
            },
            {
                "from": 130,
                "to": 131,
                "label": "EVAL with clause\npop(push(X22, X23), X22).\nand substitutionX22 -> nil,\nX23 -> T19,\nT11 -> push(nil, T19),\nT18 -> nil"
            },
            {
                "from": 130,
                "to": 132,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 131,
                "to": 133,
                "label": "CUT"
            },
            {
                "from": 132,
                "to": 137,
                "label": "FAILURE"
            },
            {
                "from": 133,
                "to": 134,
                "label": "CASE"
            },
            {
                "from": 134,
                "to": 135,
                "label": "BACKTRACK\nfor clause: popped(empty, empty)because of non-unification"
            },
            {
                "from": 135,
                "to": 136,
                "label": "ONLY EVAL with clause\npopped(push(X30, X31), X31).\nand substitutionX30 -> nil,\nT19 -> T24,\nX31 -> T24,\nX16 -> T24"
            },
            {
                "from": 136,
                "to": 2,
                "label": "INSTANCE with matching:\nT1 -> T24\nT2 -> T13"
            },
            {
                "from": 137,
                "to": 224,
                "label": "EVAL with clause\ncountstack(X41, s(X42)) :- ','(pop(X41, X43), ','(head(X43, X44), ','(tail(X43, X45), ','(popped(X41, X46), countstack(push(X44, push(X45, X46)), X42))))).\nand substitutionT11 -> T30,\nX41 -> T30,\nX42 -> T32,\nT2 -> s(T32),\nT31 -> T32"
            },
            {
                "from": 137,
                "to": 239,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 224,
                "to": 261,
                "label": "CASE"
            },
            {
                "from": 261,
                "to": 780,
                "label": "BACKTRACK\nfor clause: pop(empty, X1)\nwith clash: (countstack(T30, T2), countstack(empty, X8))"
            },
            {
                "from": 780,
                "to": 781,
                "label": "EVAL with clause\npop(push(X54, X55), X54).\nand substitutionX54 -> T37,\nX55 -> T38,\nT30 -> push(T37, T38),\nX43 -> T37"
            },
            {
                "from": 780,
                "to": 782,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 781,
                "to": 783,
                "label": "CASE"
            },
            {
                "from": 783,
                "to": 784,
                "label": "BACKTRACK\nfor clause: head(nil, X4)\nwith clash: (pop(push(T37, T38), nil), pop(push(X22, X23), X22))"
            },
            {
                "from": 784,
                "to": 785,
                "label": "EVAL with clause\nhead(cons(X63, X64), X63).\nand substitutionX63 -> T43,\nX64 -> T44,\nT37 -> cons(T43, T44),\nX44 -> T43"
            },
            {
                "from": 784,
                "to": 786,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 785,
                "to": 787,
                "label": "CASE"
            },
            {
                "from": 787,
                "to": 788,
                "label": "BACKTRACK\nfor clause: tail(nil, nil)because of non-unification"
            },
            {
                "from": 788,
                "to": 789,
                "label": "ONLY EVAL with clause\ntail(cons(X71, X72), X72).\nand substitutionT43 -> T49,\nX71 -> T49,\nT44 -> T50,\nX72 -> T50,\nX45 -> T50"
            },
            {
                "from": 789,
                "to": 790,
                "label": "CASE"
            },
            {
                "from": 790,
                "to": 791,
                "label": "BACKTRACK\nfor clause: popped(empty, empty)because of non-unification"
            },
            {
                "from": 791,
                "to": 792,
                "label": "ONLY EVAL with clause\npopped(push(X79, X80), X80).\nand substitutionT49 -> T57,\nT50 -> T58,\nX79 -> cons(T57, T58),\nT38 -> T59,\nX80 -> T59,\nX46 -> T59"
            },
            {
                "from": 792,
                "to": 2,
                "label": "INSTANCE with matching:\nT1 -> push(T57, push(T58, T59))\nT2 -> T32"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Obligation:
Triples:

countstackA(push(nil, X1), X2) :- countstackA(X1, X2).
countstackA(push(cons(X1, X2), X3), s(X4)) :- countstackA(push(X1, push(X2, X3)), X4).

Clauses:

countstackcA(empty, 0).
countstackcA(push(nil, X1), X2) :- countstackcA(X1, X2).
countstackcA(push(cons(X1, X2), X3), s(X4)) :- countstackcA(push(X1, push(X2, X3)), X4).

Afs:

countstackA(x1, x2)  =  countstackA(x1)


----------------------------------------

(3) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

countstackA_in_2: (b,f)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   COUNTSTACKA_IN_GA(push(nil, X1), X2) -> U1_GA(X1, X2, countstackA_in_ga(X1, X2))
   COUNTSTACKA_IN_GA(push(nil, X1), X2) -> COUNTSTACKA_IN_GA(X1, X2)
   COUNTSTACKA_IN_GA(push(cons(X1, X2), X3), s(X4)) -> U2_GA(X1, X2, X3, X4, countstackA_in_ga(push(X1, push(X2, X3)), X4))
   COUNTSTACKA_IN_GA(push(cons(X1, X2), X3), s(X4)) -> COUNTSTACKA_IN_GA(push(X1, push(X2, X3)), X4)

R is empty.
The argument filtering Pi contains the following mapping:
countstackA_in_ga(x1, x2)  =  countstackA_in_ga(x1)

push(x1, x2)  =  push(x1, x2)

nil  =  nil

cons(x1, x2)  =  cons(x1, x2)

s(x1)  =  s(x1)

COUNTSTACKA_IN_GA(x1, x2)  =  COUNTSTACKA_IN_GA(x1)

U1_GA(x1, x2, x3)  =  U1_GA(x1, x3)

U2_GA(x1, x2, x3, x4, x5)  =  U2_GA(x1, x2, x3, x5)


We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(4)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   COUNTSTACKA_IN_GA(push(nil, X1), X2) -> U1_GA(X1, X2, countstackA_in_ga(X1, X2))
   COUNTSTACKA_IN_GA(push(nil, X1), X2) -> COUNTSTACKA_IN_GA(X1, X2)
   COUNTSTACKA_IN_GA(push(cons(X1, X2), X3), s(X4)) -> U2_GA(X1, X2, X3, X4, countstackA_in_ga(push(X1, push(X2, X3)), X4))
   COUNTSTACKA_IN_GA(push(cons(X1, X2), X3), s(X4)) -> COUNTSTACKA_IN_GA(push(X1, push(X2, X3)), X4)

R is empty.
The argument filtering Pi contains the following mapping:
countstackA_in_ga(x1, x2)  =  countstackA_in_ga(x1)

push(x1, x2)  =  push(x1, x2)

nil  =  nil

cons(x1, x2)  =  cons(x1, x2)

s(x1)  =  s(x1)

COUNTSTACKA_IN_GA(x1, x2)  =  COUNTSTACKA_IN_GA(x1)

U1_GA(x1, x2, x3)  =  U1_GA(x1, x3)

U2_GA(x1, x2, x3, x4, x5)  =  U2_GA(x1, x2, x3, x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 1 SCC with 2 less nodes.
----------------------------------------

(6)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   COUNTSTACKA_IN_GA(push(cons(X1, X2), X3), s(X4)) -> COUNTSTACKA_IN_GA(push(X1, push(X2, X3)), X4)
   COUNTSTACKA_IN_GA(push(nil, X1), X2) -> COUNTSTACKA_IN_GA(X1, X2)

R is empty.
The argument filtering Pi contains the following mapping:
push(x1, x2)  =  push(x1, x2)

nil  =  nil

cons(x1, x2)  =  cons(x1, x2)

s(x1)  =  s(x1)

COUNTSTACKA_IN_GA(x1, x2)  =  COUNTSTACKA_IN_GA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(7) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   COUNTSTACKA_IN_GA(push(cons(X1, X2), X3)) -> COUNTSTACKA_IN_GA(push(X1, push(X2, X3)))
   COUNTSTACKA_IN_GA(push(nil, X1)) -> COUNTSTACKA_IN_GA(X1)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(9) UsableRulesReductionPairsProof (EQUIVALENT)
By using the usable rules with reduction pair processor [LPAR04] with a polynomial ordering [POLO], all dependency pairs and the corresponding usable rules [FROCOS05] can be oriented non-strictly. All non-usable rules are removed, and those dependency pairs and usable rules that have been oriented strictly or contain non-usable symbols in their left-hand side are removed as well.

The following dependency pairs can be deleted:

   COUNTSTACKA_IN_GA(push(cons(X1, X2), X3)) -> COUNTSTACKA_IN_GA(push(X1, push(X2, X3)))
   COUNTSTACKA_IN_GA(push(nil, X1)) -> COUNTSTACKA_IN_GA(X1)
No rules are removed from R.

Used ordering: POLO with Polynomial interpretation [POLO]:

   POL(COUNTSTACKA_IN_GA(x_1)) = 2*x_1
   POL(cons(x_1, x_2)) = 1 + x_1 + 2*x_2
   POL(nil) = 0
   POL(push(x_1, x_2)) = 1 + 2*x_1 + x_2


----------------------------------------

(10)
Obligation:
Q DP problem:
P is empty.
R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(11) PisEmptyProof (EQUIVALENT)
The TRS P is empty. Hence, there is no (P,Q,R) chain.
----------------------------------------

(12)
YES
