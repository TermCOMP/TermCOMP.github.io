YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/0ZFVc.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

p(g,g)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToDTProblemTransformerProof [SOUND, 0 ms]
(2) TRIPLES
(3) TriplesToPiDPProof [SOUND, 3 ms]
(4) PiDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) PiDP
(7) PiDPToQDPProof [EQUIVALENT, 0 ms]
(8) QDP
(9) QDPSizeChangeProof [EQUIVALENT, 0 ms]
(10) YES


----------------------------------------

(0)
Obligation:
Clauses:

p(X, Y) :- ','(q(X, Y), r(X)).
q(a, 0).
q(X, s(Y)) :- q(X, Y).
r(b) :- r(b).


Query: p(g,g)
----------------------------------------

(1) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 1,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(p X Y)",
                "(',' (q X Y) (r X))"
            ],
            [
                "(q (a) (0))",
                null
            ],
            [
                "(q X (s Y))",
                "(q X Y)"
            ],
            [
                "(r (b))",
                "(r (b))"
            ]
        ]
    },
    "graph": {
        "nodes": {
            "37": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(',' (q T5 T6) (r T5))"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(',' (q T5 T6) (r T5))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T5",
                        "T6"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "1": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(p T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "100": {
                "goal": [{
                    "clause": 1,
                    "scope": 2,
                    "term": "(',' (q T5 T6) (r T5))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T5",
                        "T6"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "101": {
                "goal": [{
                    "clause": 2,
                    "scope": 2,
                    "term": "(',' (q T5 T6) (r T5))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T5",
                        "T6"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "112": {
                "goal": [{
                    "clause": 3,
                    "scope": 3,
                    "term": "(r (a))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "102": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(r (a))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "113": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "103": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "114": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (q T11 T12) (r T11))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T11",
                        "T12"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "115": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "6": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(p T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "31": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (q T5 T6) (r T5))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T5",
                        "T6"
                    ],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 1,
                "to": 6,
                "label": "CASE"
            },
            {
                "from": 6,
                "to": 31,
                "label": "ONLY EVAL with clause\np(X3, X4) :- ','(q(X3, X4), r(X3)).\nand substitutionT1 -> T5,\nX3 -> T5,\nT2 -> T6,\nX4 -> T6"
            },
            {
                "from": 31,
                "to": 37,
                "label": "CASE"
            },
            {
                "from": 37,
                "to": 100,
                "label": "PARALLEL"
            },
            {
                "from": 37,
                "to": 101,
                "label": "PARALLEL"
            },
            {
                "from": 100,
                "to": 102,
                "label": "EVAL with clause\nq(a, 0).\nand substitutionT5 -> a,\nT6 -> 0"
            },
            {
                "from": 100,
                "to": 103,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 101,
                "to": 114,
                "label": "EVAL with clause\nq(X9, s(X10)) :- q(X9, X10).\nand substitutionT5 -> T11,\nX9 -> T11,\nX10 -> T12,\nT6 -> s(T12)"
            },
            {
                "from": 101,
                "to": 115,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 102,
                "to": 112,
                "label": "CASE"
            },
            {
                "from": 112,
                "to": 113,
                "label": "BACKTRACK\nfor clause: r(b) :- r(b)because of non-unification"
            },
            {
                "from": 114,
                "to": 31,
                "label": "INSTANCE with matching:\nT5 -> T11\nT6 -> T12"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Obligation:
Triples:

pA(X1, s(X2)) :- pA(X1, X2).
pB(X1, X2) :- pA(X1, X2).

Clauses:

qcA(X1, s(X2)) :- qcA(X1, X2).

Afs:

pB(x1, x2)  =  pB(x1, x2)


----------------------------------------

(3) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

pB_in_2: (b,b)

pA_in_2: (b,b)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   PB_IN_GG(X1, X2) -> U2_GG(X1, X2, pA_in_gg(X1, X2))
   PB_IN_GG(X1, X2) -> PA_IN_GG(X1, X2)
   PA_IN_GG(X1, s(X2)) -> U1_GG(X1, X2, pA_in_gg(X1, X2))
   PA_IN_GG(X1, s(X2)) -> PA_IN_GG(X1, X2)

R is empty.
Pi is empty.
We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(4)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PB_IN_GG(X1, X2) -> U2_GG(X1, X2, pA_in_gg(X1, X2))
   PB_IN_GG(X1, X2) -> PA_IN_GG(X1, X2)
   PA_IN_GG(X1, s(X2)) -> U1_GG(X1, X2, pA_in_gg(X1, X2))
   PA_IN_GG(X1, s(X2)) -> PA_IN_GG(X1, X2)

R is empty.
Pi is empty.
We have to consider all (P,R,Pi)-chains
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 1 SCC with 3 less nodes.
----------------------------------------

(6)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PA_IN_GG(X1, s(X2)) -> PA_IN_GG(X1, X2)

R is empty.
Pi is empty.
We have to consider all (P,R,Pi)-chains
----------------------------------------

(7) PiDPToQDPProof (EQUIVALENT)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PA_IN_GG(X1, s(X2)) -> PA_IN_GG(X1, X2)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(9) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*PA_IN_GG(X1, s(X2)) -> PA_IN_GG(X1, X2)
The graph contains the following edges 1 >= 1, 2 > 2


----------------------------------------

(10)
YES
