YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/4D9SV.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

minus(g,g,a)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) BuiltinConflictTransformerProof [EQUIVALENT, 0 ms]
(2) Prolog
(3) PrologToDTProblemTransformerProof [SOUND, 0 ms]
(4) TRIPLES
(5) TPisEmptyProof [EQUIVALENT, 0 ms]
(6) YES


----------------------------------------

(0)
Obligation:
Clauses:

minus(X, Y, Z) :- ','(f(X, 0), ','(!, =(Z, 0))).
f(X, Y) :- ','(!, =(X, Y)).
f(X, Y) :- f(X, Y).
=(X, X).


Query: minus(g,g,a)
----------------------------------------

(1) BuiltinConflictTransformerProof (EQUIVALENT)
Renamed defined predicates conflicting with built-in predicates [PROLOG].
----------------------------------------

(2)
Obligation:
Clauses:

minus(X, Y, Z) :- ','(f(X, 0), ','(!, user_defined_=(Z, 0))).
f(X, Y) :- ','(!, user_defined_=(X, Y)).
f(X, Y) :- f(X, Y).
user_defined_=(X, X).


Query: minus(g,g,a)
----------------------------------------

(3) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 1,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(minus X Y Z)",
                "(',' (f X (0)) (',' (!) (user_defined_= Z (0))))"
            ],
            [
                "(f X Y)",
                "(',' (!) (user_defined_= X Y))"
            ],
            [
                "(f X Y)",
                "(f X Y)"
            ],
            [
                "(user_defined_= X X)",
                null
            ]
        ]
    },
    "graph": {
        "nodes": {
            "33": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "23": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (f T7 (0)) (',' (!_1) (user_defined_= T10 (0))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T7"],
                    "free": [],
                    "exprvars": []
                }
            },
            "34": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "24": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(',' (f T7 (0)) (',' (!_1) (user_defined_= T10 (0))))"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(',' (f T7 (0)) (',' (!_1) (user_defined_= T10 (0))))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T7"],
                    "free": [],
                    "exprvars": []
                }
            },
            "25": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (',' (!_2) (user_defined_= T13 (0))) (',' (!_1) (user_defined_= T10 (0))))"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(',' (f T13 (0)) (',' (!_1) (user_defined_= T10 (0))))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T13"],
                    "free": [],
                    "exprvars": []
                }
            },
            "26": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (user_defined_= T13 (0)) (',' (!_1) (user_defined_= T10 (0))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T13"],
                    "free": [],
                    "exprvars": []
                }
            },
            "27": {
                "goal": [{
                    "clause": 3,
                    "scope": 3,
                    "term": "(',' (user_defined_= T13 (0)) (',' (!_1) (user_defined_= T10 (0))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T13"],
                    "free": [],
                    "exprvars": []
                }
            },
            "28": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (!_1) (user_defined_= T10 (0)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "29": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "1": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(minus T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "2": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(minus T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "30": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(user_defined_= T10 (0))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "31": {
                "goal": [{
                    "clause": 3,
                    "scope": 4,
                    "term": "(user_defined_= T10 (0))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "32": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 1,
                "to": 2,
                "label": "CASE"
            },
            {
                "from": 2,
                "to": 23,
                "label": "ONLY EVAL with clause\nminus(X4, X5, X6) :- ','(f(X4, 0), ','(!_1, user_defined_=(X6, 0))).\nand substitutionT1 -> T7,\nX4 -> T7,\nT2 -> T8,\nX5 -> T8,\nT3 -> T10,\nX6 -> T10,\nT9 -> T10"
            },
            {
                "from": 23,
                "to": 24,
                "label": "CASE"
            },
            {
                "from": 24,
                "to": 25,
                "label": "ONLY EVAL with clause\nf(X11, X12) :- ','(!_2, user_defined_=(X11, X12)).\nand substitutionT7 -> T13,\nX11 -> T13,\nX12 -> 0"
            },
            {
                "from": 25,
                "to": 26,
                "label": "CUT"
            },
            {
                "from": 26,
                "to": 27,
                "label": "CASE"
            },
            {
                "from": 27,
                "to": 28,
                "label": "EVAL with clause\nuser_defined_=(X15, X15).\nand substitutionT13 -> 0,\nX15 -> 0,\nT16 -> 0"
            },
            {
                "from": 27,
                "to": 29,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 28,
                "to": 30,
                "label": "CUT"
            },
            {
                "from": 30,
                "to": 31,
                "label": "CASE"
            },
            {
                "from": 31,
                "to": 32,
                "label": "EVAL with clause\nuser_defined_=(X18, X18).\nand substitutionT10 -> 0,\nX18 -> 0,\nT19 -> 0"
            },
            {
                "from": 31,
                "to": 33,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 32,
                "to": 34,
                "label": "SUCCESS"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(4)
Obligation:
Triples:


Clauses:


Afs:


----------------------------------------

(5) TPisEmptyProof (EQUIVALENT)
There are no more dependency triples. Hence, the dependency triple problem trivially terminates.
----------------------------------------

(6)
YES
