YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/s7gN8.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

duplicate(g,a)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToDTProblemTransformerProof [SOUND, 0 ms]
(2) TRIPLES
(3) TriplesToPiDPProof [SOUND, 0 ms]
(4) PiDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) PiDP
(7) PiDPToQDPProof [SOUND, 3 ms]
(8) QDP
(9) QDPSizeChangeProof [EQUIVALENT, 0 ms]
(10) YES


----------------------------------------

(0)
Obligation:
Clauses:

duplicate([], []).
duplicate(X, .(H, .(H, Z))) :- ','(no(empty(X)), ','(head(X, H), ','(tail(X, T), duplicate(T, Z)))).
head([], X1).
head(.(H, X2), H).
tail([], []).
tail(.(X3, T), T).
empty([]).
no(X) :- ','(X, ','(!, failure(a))).
no(X4).
failure(b).


Query: duplicate(g,a)
----------------------------------------

(1) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 3,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(duplicate ([]) ([]))",
                null
            ],
            [
                "(duplicate X (. H (. H Z)))",
                "(',' (no (empty X)) (',' (head X H) (',' (tail X T) (duplicate T Z))))"
            ],
            [
                "(head ([]) X1)",
                null
            ],
            [
                "(head (. H X2) H)",
                null
            ],
            [
                "(tail ([]) ([]))",
                null
            ],
            [
                "(tail (. X3 T) T)",
                null
            ],
            [
                "(empty ([]))",
                null
            ],
            [
                "(no X)",
                "(',' X (',' (!) (failure (a))))"
            ],
            [
                "(no X4)",
                null
            ],
            [
                "(failure (b))",
                null
            ]
        ]
    },
    "graph": {
        "nodes": {
            "66": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (',' (!_6) (failure (a))) (',' (head ([]) T15) (',' (tail ([]) X21) (duplicate X21 T16))))"
                    },
                    {
                        "clause": -1,
                        "scope": 8,
                        "term": null
                    },
                    {
                        "clause": -1,
                        "scope": 7,
                        "term": null
                    },
                    {
                        "clause": 8,
                        "scope": 6,
                        "term": "(',' (no (empty ([]))) (',' (head ([]) T15) (',' (tail ([]) X21) (duplicate X21 T16))))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "67": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": 8,
                        "term": null
                    },
                    {
                        "clause": -1,
                        "scope": 7,
                        "term": null
                    },
                    {
                        "clause": 8,
                        "scope": 6,
                        "term": "(',' (no (empty T19)) (',' (head T19 T15) (',' (tail T19 X21) (duplicate X21 T16))))"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(duplicate T19 T2)",
                            "(duplicate ([]) ([]))"
                        ],
                        [
                            "(empty T19)",
                            "(empty ([]))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "68": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (failure (a)) (',' (head ([]) T15) (',' (tail ([]) X21) (duplicate X21 T16))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "47": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(true)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(duplicate ([]) T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "69": {
                "goal": [{
                    "clause": 9,
                    "scope": 9,
                    "term": "(',' (failure (a)) (',' (head ([]) T15) (',' (tail ([]) X21) (duplicate X21 T16))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "48": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(duplicate T1 T2)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(duplicate T1 T2)",
                        "(duplicate ([]) ([]))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "49": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(duplicate ([]) T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "70": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "71": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": 7,
                        "term": null
                    },
                    {
                        "clause": 8,
                        "scope": 6,
                        "term": "(',' (no (empty T19)) (',' (head T19 T15) (',' (tail T19 X21) (duplicate X21 T16))))"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(duplicate T19 T2)",
                            "(duplicate ([]) ([]))"
                        ],
                        [
                            "(empty T19)",
                            "(empty ([]))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "50": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (no (empty ([]))) (',' (head ([]) T7) (',' (tail ([]) X11) (duplicate X11 T8))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X11"],
                    "exprvars": []
                }
            },
            "72": {
                "goal": [{
                    "clause": 8,
                    "scope": 6,
                    "term": "(',' (no (empty T19)) (',' (head T19 T15) (',' (tail T19 X21) (duplicate X21 T16))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(duplicate T19 T2)",
                            "(duplicate ([]) ([]))"
                        ],
                        [
                            "(empty T19)",
                            "(empty ([]))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "51": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "73": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (head T22 T15) (',' (tail T22 X21) (duplicate X21 T16)))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(duplicate T22 T2)",
                            "(duplicate ([]) ([]))"
                        ],
                        [
                            "(empty T22)",
                            "(empty ([]))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T22"],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "52": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 2,
                        "term": "(',' (no (empty ([]))) (',' (head ([]) T7) (',' (tail ([]) X11) (duplicate X11 T8))))"
                    },
                    {
                        "clause": 8,
                        "scope": 2,
                        "term": "(',' (no (empty ([]))) (',' (head ([]) T7) (',' (tail ([]) X11) (duplicate X11 T8))))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X11"],
                    "exprvars": []
                }
            },
            "74": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 10,
                        "term": "(',' (head T22 T15) (',' (tail T22 X21) (duplicate X21 T16)))"
                    },
                    {
                        "clause": 3,
                        "scope": 10,
                        "term": "(',' (head T22 T15) (',' (tail T22 X21) (duplicate X21 T16)))"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(duplicate T22 T2)",
                            "(duplicate ([]) ([]))"
                        ],
                        [
                            "(empty T22)",
                            "(empty ([]))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T22"],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "53": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (',' (call (empty ([]))) (',' (!_2) (failure (a)))) (',' (head ([]) T7) (',' (tail ([]) X11) (duplicate X11 T8))))"
                    },
                    {
                        "clause": 8,
                        "scope": 2,
                        "term": "(',' (no (empty ([]))) (',' (head ([]) T7) (',' (tail ([]) X11) (duplicate X11 T8))))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X11"],
                    "exprvars": []
                }
            },
            "75": {
                "goal": [{
                    "clause": 3,
                    "scope": 10,
                    "term": "(',' (head T22 T15) (',' (tail T22 X21) (duplicate X21 T16)))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(duplicate T22 T2)",
                            "(duplicate ([]) ([]))"
                        ],
                        [
                            "(empty T22)",
                            "(empty ([]))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T22"],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "54": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (empty ([])) (',' (',' (!_2) (failure (a))) (',' (head ([]) T7) (',' (tail ([]) X11) (duplicate X11 T8)))))"
                    },
                    {
                        "clause": -1,
                        "scope": 3,
                        "term": null
                    },
                    {
                        "clause": 8,
                        "scope": 2,
                        "term": "(',' (no (empty ([]))) (',' (head ([]) T7) (',' (tail ([]) X11) (duplicate X11 T8))))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X11"],
                    "exprvars": []
                }
            },
            "55": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 4,
                        "term": "(',' (empty ([])) (',' (',' (!_2) (failure (a))) (',' (head ([]) T7) (',' (tail ([]) X11) (duplicate X11 T8)))))"
                    },
                    {
                        "clause": -1,
                        "scope": 4,
                        "term": null
                    },
                    {
                        "clause": -1,
                        "scope": 3,
                        "term": null
                    },
                    {
                        "clause": 8,
                        "scope": 2,
                        "term": "(',' (no (empty ([]))) (',' (head ([]) T7) (',' (tail ([]) X11) (duplicate X11 T8))))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X11"],
                    "exprvars": []
                }
            },
            "56": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (',' (!_2) (failure (a))) (',' (head ([]) T7) (',' (tail ([]) X11) (duplicate X11 T8))))"
                    },
                    {
                        "clause": -1,
                        "scope": 4,
                        "term": null
                    },
                    {
                        "clause": -1,
                        "scope": 3,
                        "term": null
                    },
                    {
                        "clause": 8,
                        "scope": 2,
                        "term": "(',' (no (empty ([]))) (',' (head ([]) T7) (',' (tail ([]) X11) (duplicate X11 T8))))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X11"],
                    "exprvars": []
                }
            },
            "57": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (failure (a)) (',' (head ([]) T7) (',' (tail ([]) X11) (duplicate X11 T8))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X11"],
                    "exprvars": []
                }
            },
            "58": {
                "goal": [{
                    "clause": 9,
                    "scope": 5,
                    "term": "(',' (failure (a)) (',' (head ([]) T7) (',' (tail ([]) X11) (duplicate X11 T8))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X11"],
                    "exprvars": []
                }
            },
            "59": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "3": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(duplicate T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "5": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(duplicate T1 T2)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(duplicate T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "60": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (no (empty T12)) (',' (head T12 T15) (',' (tail T12 X21) (duplicate X21 T16))))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(duplicate T12 T2)",
                        "(duplicate ([]) ([]))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T12"],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "61": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "83": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (tail (. T28 T29) X21) (duplicate X21 T30))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T28",
                        "T29"
                    ],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "62": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 6,
                        "term": "(',' (no (empty T12)) (',' (head T12 T15) (',' (tail T12 X21) (duplicate X21 T16))))"
                    },
                    {
                        "clause": 8,
                        "scope": 6,
                        "term": "(',' (no (empty T12)) (',' (head T12 T15) (',' (tail T12 X21) (duplicate X21 T16))))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(duplicate T12 T2)",
                        "(duplicate ([]) ([]))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T12"],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "84": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "63": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (',' (call (empty T19)) (',' (!_6) (failure (a)))) (',' (head T19 T15) (',' (tail T19 X21) (duplicate X21 T16))))"
                    },
                    {
                        "clause": 8,
                        "scope": 6,
                        "term": "(',' (no (empty T19)) (',' (head T19 T15) (',' (tail T19 X21) (duplicate X21 T16))))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(duplicate T19 T2)",
                        "(duplicate ([]) ([]))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "85": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 11,
                        "term": "(',' (tail (. T28 T29) X21) (duplicate X21 T30))"
                    },
                    {
                        "clause": 5,
                        "scope": 11,
                        "term": "(',' (tail (. T28 T29) X21) (duplicate X21 T30))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T28",
                        "T29"
                    ],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "64": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (empty T19) (',' (',' (!_6) (failure (a))) (',' (head T19 T15) (',' (tail T19 X21) (duplicate X21 T16)))))"
                    },
                    {
                        "clause": -1,
                        "scope": 7,
                        "term": null
                    },
                    {
                        "clause": 8,
                        "scope": 6,
                        "term": "(',' (no (empty T19)) (',' (head T19 T15) (',' (tail T19 X21) (duplicate X21 T16))))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(duplicate T19 T2)",
                        "(duplicate ([]) ([]))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "86": {
                "goal": [{
                    "clause": 5,
                    "scope": 11,
                    "term": "(',' (tail (. T28 T29) X21) (duplicate X21 T30))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T28",
                        "T29"
                    ],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "65": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 8,
                        "term": "(',' (empty T19) (',' (',' (!_6) (failure (a))) (',' (head T19 T15) (',' (tail T19 X21) (duplicate X21 T16)))))"
                    },
                    {
                        "clause": -1,
                        "scope": 8,
                        "term": null
                    },
                    {
                        "clause": -1,
                        "scope": 7,
                        "term": null
                    },
                    {
                        "clause": 8,
                        "scope": 6,
                        "term": "(',' (no (empty T19)) (',' (head T19 T15) (',' (tail T19 X21) (duplicate X21 T16))))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(duplicate T19 T2)",
                        "(duplicate ([]) ([]))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T19"],
                    "free": ["X21"],
                    "exprvars": []
                }
            },
            "87": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(duplicate T36 T30)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T36"],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 3,
                "to": 5,
                "label": "CASE"
            },
            {
                "from": 5,
                "to": 47,
                "label": "EVAL with clause\nduplicate([], []).\nand substitutionT1 -> [],\nT2 -> []"
            },
            {
                "from": 5,
                "to": 48,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 47,
                "to": 49,
                "label": "SUCCESS"
            },
            {
                "from": 48,
                "to": 60,
                "label": "EVAL with clause\nduplicate(X18, .(X19, .(X19, X20))) :- ','(no(empty(X18)), ','(head(X18, X19), ','(tail(X18, X21), duplicate(X21, X20)))).\nand substitutionT1 -> T12,\nX18 -> T12,\nX19 -> T15,\nX20 -> T16,\nT2 -> .(T15, .(T15, T16)),\nT13 -> T15,\nT14 -> T16"
            },
            {
                "from": 48,
                "to": 61,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 49,
                "to": 50,
                "label": "EVAL with clause\nduplicate(X8, .(X9, .(X9, X10))) :- ','(no(empty(X8)), ','(head(X8, X9), ','(tail(X8, X11), duplicate(X11, X10)))).\nand substitutionX8 -> [],\nX9 -> T7,\nX10 -> T8,\nT2 -> .(T7, .(T7, T8)),\nT5 -> T7,\nT6 -> T8"
            },
            {
                "from": 49,
                "to": 51,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 50,
                "to": 52,
                "label": "CASE"
            },
            {
                "from": 52,
                "to": 53,
                "label": "ONLY EVAL with clause\nno(X14) :- ','(call(X14), ','(!_2, failure(a))).\nand substitutionX14 -> empty([])"
            },
            {
                "from": 53,
                "to": 54,
                "label": "CALL"
            },
            {
                "from": 54,
                "to": 55,
                "label": "CASE"
            },
            {
                "from": 55,
                "to": 56,
                "label": "ONLY EVAL with clause\nempty([]).\nand substitution"
            },
            {
                "from": 56,
                "to": 57,
                "label": "CUT"
            },
            {
                "from": 57,
                "to": 58,
                "label": "CASE"
            },
            {
                "from": 58,
                "to": 59,
                "label": "BACKTRACK\nfor clause: failure(b)because of non-unification"
            },
            {
                "from": 60,
                "to": 62,
                "label": "CASE"
            },
            {
                "from": 62,
                "to": 63,
                "label": "ONLY EVAL with clause\nno(X24) :- ','(call(X24), ','(!_6, failure(a))).\nand substitutionT12 -> T19,\nX24 -> empty(T19)"
            },
            {
                "from": 63,
                "to": 64,
                "label": "CALL"
            },
            {
                "from": 64,
                "to": 65,
                "label": "CASE"
            },
            {
                "from": 65,
                "to": 66,
                "label": "EVAL with clause\nempty([]).\nand substitutionT19 -> []"
            },
            {
                "from": 65,
                "to": 67,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 66,
                "to": 68,
                "label": "CUT"
            },
            {
                "from": 67,
                "to": 71,
                "label": "FAILURE"
            },
            {
                "from": 68,
                "to": 69,
                "label": "CASE"
            },
            {
                "from": 69,
                "to": 70,
                "label": "BACKTRACK\nfor clause: failure(b)because of non-unification"
            },
            {
                "from": 71,
                "to": 72,
                "label": "FAILURE"
            },
            {
                "from": 72,
                "to": 73,
                "label": "ONLY EVAL with clause\nno(X27).\nand substitutionT19 -> T22,\nX27 -> empty(T22)"
            },
            {
                "from": 73,
                "to": 74,
                "label": "CASE"
            },
            {
                "from": 74,
                "to": 75,
                "label": "BACKTRACK\nfor clause: head([], X1)\nwith clash: (empty(T22), empty([]))"
            },
            {
                "from": 75,
                "to": 83,
                "label": "EVAL with clause\nhead(.(X33, X34), X33).\nand substitutionX33 -> T28,\nX34 -> T29,\nT22 -> .(T28, T29),\nT15 -> T28,\nT16 -> T30"
            },
            {
                "from": 75,
                "to": 84,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 83,
                "to": 85,
                "label": "CASE"
            },
            {
                "from": 85,
                "to": 86,
                "label": "BACKTRACK\nfor clause: tail([], [])because of non-unification"
            },
            {
                "from": 86,
                "to": 87,
                "label": "ONLY EVAL with clause\ntail(.(X39, X40), X40).\nand substitutionT28 -> T35,\nX39 -> T35,\nT29 -> T36,\nX40 -> T36,\nX21 -> T36"
            },
            {
                "from": 87,
                "to": 3,
                "label": "INSTANCE with matching:\nT1 -> T36\nT2 -> T30"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Obligation:
Triples:

duplicateA(.(X1, X2), .(X1, .(X1, X3))) :- duplicateA(X2, X3).

Clauses:

duplicatecA([], []).
duplicatecA(.(X1, X2), .(X1, .(X1, X3))) :- duplicatecA(X2, X3).

Afs:

duplicateA(x1, x2)  =  duplicateA(x1)


----------------------------------------

(3) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

duplicateA_in_2: (b,f)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   DUPLICATEA_IN_GA(.(X1, X2), .(X1, .(X1, X3))) -> U1_GA(X1, X2, X3, duplicateA_in_ga(X2, X3))
   DUPLICATEA_IN_GA(.(X1, X2), .(X1, .(X1, X3))) -> DUPLICATEA_IN_GA(X2, X3)

R is empty.
The argument filtering Pi contains the following mapping:
duplicateA_in_ga(x1, x2)  =  duplicateA_in_ga(x1)

.(x1, x2)  =  .(x1, x2)

DUPLICATEA_IN_GA(x1, x2)  =  DUPLICATEA_IN_GA(x1)

U1_GA(x1, x2, x3, x4)  =  U1_GA(x1, x2, x4)


We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(4)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DUPLICATEA_IN_GA(.(X1, X2), .(X1, .(X1, X3))) -> U1_GA(X1, X2, X3, duplicateA_in_ga(X2, X3))
   DUPLICATEA_IN_GA(.(X1, X2), .(X1, .(X1, X3))) -> DUPLICATEA_IN_GA(X2, X3)

R is empty.
The argument filtering Pi contains the following mapping:
duplicateA_in_ga(x1, x2)  =  duplicateA_in_ga(x1)

.(x1, x2)  =  .(x1, x2)

DUPLICATEA_IN_GA(x1, x2)  =  DUPLICATEA_IN_GA(x1)

U1_GA(x1, x2, x3, x4)  =  U1_GA(x1, x2, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 1 SCC with 1 less node.
----------------------------------------

(6)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   DUPLICATEA_IN_GA(.(X1, X2), .(X1, .(X1, X3))) -> DUPLICATEA_IN_GA(X2, X3)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

DUPLICATEA_IN_GA(x1, x2)  =  DUPLICATEA_IN_GA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(7) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   DUPLICATEA_IN_GA(.(X1, X2)) -> DUPLICATEA_IN_GA(X2)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(9) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*DUPLICATEA_IN_GA(.(X1, X2)) -> DUPLICATEA_IN_GA(X2)
The graph contains the following edges 1 > 1


----------------------------------------

(10)
YES
