YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/lWYuh.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

app(g,a,a)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToDTProblemTransformerProof [SOUND, 0 ms]
(2) TRIPLES
(3) TriplesToPiDPProof [SOUND, 0 ms]
(4) PiDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) PiDP
(7) PiDPToQDPProof [SOUND, 4 ms]
(8) QDP
(9) QDPSizeChangeProof [EQUIVALENT, 0 ms]
(10) YES


----------------------------------------

(0)
Obligation:
Clauses:

app([], Y, Y).
app(X, Y, .(H, Z)) :- ','(no(empty(X)), ','(head(X, H), ','(tail(X, T), app(T, Y, Z)))).
head([], X1).
head(.(X, X2), X).
tail([], []).
tail(.(X3, Xs), Xs).
empty([]).
no(X) :- ','(X, ','(!, failure(a))).
no(X4).
failure(b).


Query: app(g,a,a)
----------------------------------------

(1) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 3,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(app ([]) Y Y)",
                null
            ],
            [
                "(app X Y (. H Z))",
                "(',' (no (empty X)) (',' (head X H) (',' (tail X T) (app T Y Z))))"
            ],
            [
                "(head ([]) X1)",
                null
            ],
            [
                "(head (. X X2) X)",
                null
            ],
            [
                "(tail ([]) ([]))",
                null
            ],
            [
                "(tail (. X3 Xs) Xs)",
                null
            ],
            [
                "(empty ([]))",
                null
            ],
            [
                "(no X)",
                "(',' X (',' (!) (failure (a))))"
            ],
            [
                "(no X4)",
                null
            ],
            [
                "(failure (b))",
                null
            ]
        ]
    },
    "graph": {
        "nodes": {
            "22": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 2,
                        "term": "(',' (no (empty ([]))) (',' (head ([]) T12) (',' (tail ([]) X15) (app X15 T13 T14))))"
                    },
                    {
                        "clause": 8,
                        "scope": 2,
                        "term": "(',' (no (empty ([]))) (',' (head ([]) T12) (',' (tail ([]) X15) (app X15 T13 T14))))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X15"],
                    "exprvars": []
                }
            },
            "44": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (no (empty T21)) (',' (head T21 T25) (',' (tail T21 X29) (app X29 T26 T27))))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T21 T2 T3)",
                        "(app ([]) X6 X6)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T21"],
                    "free": [
                        "X6",
                        "X29"
                    ],
                    "exprvars": []
                }
            },
            "66": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": 8,
                        "term": null
                    },
                    {
                        "clause": -1,
                        "scope": 7,
                        "term": null
                    },
                    {
                        "clause": 8,
                        "scope": 6,
                        "term": "(',' (no (empty T30)) (',' (head T30 T25) (',' (tail T30 X29) (app X29 T26 T27))))"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(app T30 T2 T3)",
                            "(app ([]) X6 X6)"
                        ],
                        [
                            "(empty T30)",
                            "(empty ([]))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T30"],
                    "free": [
                        "X6",
                        "X29"
                    ],
                    "exprvars": []
                }
            },
            "89": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "68": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (failure (a)) (',' (head ([]) T25) (',' (tail ([]) X29) (app X29 T26 T27))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X29"],
                    "exprvars": []
                }
            },
            "47": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "69": {
                "goal": [{
                    "clause": 9,
                    "scope": 9,
                    "term": "(',' (failure (a)) (',' (head ([]) T25) (',' (tail ([]) X29) (app X29 T26 T27))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X29"],
                    "exprvars": []
                }
            },
            "27": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (',' (call (empty ([]))) (',' (!_2) (failure (a)))) (',' (head ([]) T12) (',' (tail ([]) X15) (app X15 T13 T14))))"
                    },
                    {
                        "clause": 8,
                        "scope": 2,
                        "term": "(',' (no (empty ([]))) (',' (head ([]) T12) (',' (tail ([]) X15) (app X15 T13 T14))))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X15"],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "90": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 11,
                        "term": "(',' (tail (. T45 T46) X29) (app X29 T47 T48))"
                    },
                    {
                        "clause": 5,
                        "scope": 11,
                        "term": "(',' (tail (. T45 T46) X29) (app X29 T47 T48))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T45",
                        "T46"
                    ],
                    "free": ["X29"],
                    "exprvars": []
                }
            },
            "91": {
                "goal": [{
                    "clause": 5,
                    "scope": 11,
                    "term": "(',' (tail (. T45 T46) X29) (app X29 T47 T48))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T45",
                        "T46"
                    ],
                    "free": ["X29"],
                    "exprvars": []
                }
            },
            "70": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "92": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T58 T47 T48)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T58"],
                    "free": [],
                    "exprvars": []
                }
            },
            "71": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": 7,
                        "term": null
                    },
                    {
                        "clause": 8,
                        "scope": 6,
                        "term": "(',' (no (empty T30)) (',' (head T30 T25) (',' (tail T30 X29) (app X29 T26 T27))))"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(app T30 T2 T3)",
                            "(app ([]) X6 X6)"
                        ],
                        [
                            "(empty T30)",
                            "(empty ([]))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T30"],
                    "free": [
                        "X6",
                        "X29"
                    ],
                    "exprvars": []
                }
            },
            "50": {
                "goal": [
                    {
                        "clause": 7,
                        "scope": 6,
                        "term": "(',' (no (empty T21)) (',' (head T21 T25) (',' (tail T21 X29) (app X29 T26 T27))))"
                    },
                    {
                        "clause": 8,
                        "scope": 6,
                        "term": "(',' (no (empty T21)) (',' (head T21 T25) (',' (tail T21 X29) (app X29 T26 T27))))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(app T21 T2 T3)",
                        "(app ([]) X6 X6)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T21"],
                    "free": [
                        "X6",
                        "X29"
                    ],
                    "exprvars": []
                }
            },
            "72": {
                "goal": [{
                    "clause": 8,
                    "scope": 6,
                    "term": "(',' (no (empty T30)) (',' (head T30 T25) (',' (tail T30 X29) (app X29 T26 T27))))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(app T30 T2 T3)",
                            "(app ([]) X6 X6)"
                        ],
                        [
                            "(empty T30)",
                            "(empty ([]))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T30"],
                    "free": [
                        "X6",
                        "X29"
                    ],
                    "exprvars": []
                }
            },
            "30": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (empty ([])) (',' (',' (!_2) (failure (a))) (',' (head ([]) T12) (',' (tail ([]) X15) (app X15 T13 T14)))))"
                    },
                    {
                        "clause": -1,
                        "scope": 3,
                        "term": null
                    },
                    {
                        "clause": 8,
                        "scope": 2,
                        "term": "(',' (no (empty ([]))) (',' (head ([]) T12) (',' (tail ([]) X15) (app X15 T13 T14))))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X15"],
                    "exprvars": []
                }
            },
            "31": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 4,
                        "term": "(',' (empty ([])) (',' (',' (!_2) (failure (a))) (',' (head ([]) T12) (',' (tail ([]) X15) (app X15 T13 T14)))))"
                    },
                    {
                        "clause": -1,
                        "scope": 4,
                        "term": null
                    },
                    {
                        "clause": -1,
                        "scope": 3,
                        "term": null
                    },
                    {
                        "clause": 8,
                        "scope": 2,
                        "term": "(',' (no (empty ([]))) (',' (head ([]) T12) (',' (tail ([]) X15) (app X15 T13 T14))))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X15"],
                    "exprvars": []
                }
            },
            "32": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (',' (!_2) (failure (a))) (',' (head ([]) T12) (',' (tail ([]) X15) (app X15 T13 T14))))"
                    },
                    {
                        "clause": -1,
                        "scope": 4,
                        "term": null
                    },
                    {
                        "clause": -1,
                        "scope": 3,
                        "term": null
                    },
                    {
                        "clause": 8,
                        "scope": 2,
                        "term": "(',' (no (empty ([]))) (',' (head ([]) T12) (',' (tail ([]) X15) (app X15 T13 T14))))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X15"],
                    "exprvars": []
                }
            },
            "33": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (failure (a)) (',' (head ([]) T12) (',' (tail ([]) X15) (app X15 T13 T14))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X15"],
                    "exprvars": []
                }
            },
            "34": {
                "goal": [{
                    "clause": 9,
                    "scope": 5,
                    "term": "(',' (failure (a)) (',' (head ([]) T12) (',' (tail ([]) X15) (app X15 T13 T14))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X15"],
                    "exprvars": []
                }
            },
            "13": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(true)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(app ([]) T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "58": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (',' (call (empty T30)) (',' (!_6) (failure (a)))) (',' (head T30 T25) (',' (tail T30 X29) (app X29 T26 T27))))"
                    },
                    {
                        "clause": 8,
                        "scope": 6,
                        "term": "(',' (no (empty T30)) (',' (head T30 T25) (',' (tail T30 X29) (app X29 T26 T27))))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(app T30 T2 T3)",
                        "(app ([]) X6 X6)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T30"],
                    "free": [
                        "X6",
                        "X29"
                    ],
                    "exprvars": []
                }
            },
            "37": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "16": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(app T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T1 T2 T3)",
                        "(app ([]) X6 X6)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": ["X6"],
                    "exprvars": []
                }
            },
            "19": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(app ([]) T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "3": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "5": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(app T1 T2 T3)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(app T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "80": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (head T37 T25) (',' (tail T37 X29) (app X29 T26 T27)))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(app T37 T2 T3)",
                            "(app ([]) X6 X6)"
                        ],
                        [
                            "(empty T37)",
                            "(empty ([]))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T37"],
                    "free": [
                        "X6",
                        "X29"
                    ],
                    "exprvars": []
                }
            },
            "81": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 10,
                        "term": "(',' (head T37 T25) (',' (tail T37 X29) (app X29 T26 T27)))"
                    },
                    {
                        "clause": 3,
                        "scope": 10,
                        "term": "(',' (head T37 T25) (',' (tail T37 X29) (app X29 T26 T27)))"
                    }
                ],
                "kb": {
                    "nonunifying": [
                        [
                            "(app T37 T2 T3)",
                            "(app ([]) X6 X6)"
                        ],
                        [
                            "(empty T37)",
                            "(empty ([]))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T37"],
                    "free": [
                        "X6",
                        "X29"
                    ],
                    "exprvars": []
                }
            },
            "61": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (empty T30) (',' (',' (!_6) (failure (a))) (',' (head T30 T25) (',' (tail T30 X29) (app X29 T26 T27)))))"
                    },
                    {
                        "clause": -1,
                        "scope": 7,
                        "term": null
                    },
                    {
                        "clause": 8,
                        "scope": 6,
                        "term": "(',' (no (empty T30)) (',' (head T30 T25) (',' (tail T30 X29) (app X29 T26 T27))))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(app T30 T2 T3)",
                        "(app ([]) X6 X6)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T30"],
                    "free": [
                        "X6",
                        "X29"
                    ],
                    "exprvars": []
                }
            },
            "62": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 8,
                        "term": "(',' (empty T30) (',' (',' (!_6) (failure (a))) (',' (head T30 T25) (',' (tail T30 X29) (app X29 T26 T27)))))"
                    },
                    {
                        "clause": -1,
                        "scope": 8,
                        "term": null
                    },
                    {
                        "clause": -1,
                        "scope": 7,
                        "term": null
                    },
                    {
                        "clause": 8,
                        "scope": 6,
                        "term": "(',' (no (empty T30)) (',' (head T30 T25) (',' (tail T30 X29) (app X29 T26 T27))))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(app T30 T2 T3)",
                        "(app ([]) X6 X6)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T30"],
                    "free": [
                        "X6",
                        "X29"
                    ],
                    "exprvars": []
                }
            },
            "84": {
                "goal": [{
                    "clause": 3,
                    "scope": 10,
                    "term": "(',' (head T37 T25) (',' (tail T37 X29) (app X29 T26 T27)))"
                }],
                "kb": {
                    "nonunifying": [
                        [
                            "(app T37 T2 T3)",
                            "(app ([]) X6 X6)"
                        ],
                        [
                            "(empty T37)",
                            "(empty ([]))"
                        ]
                    ],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T37"],
                    "free": [
                        "X6",
                        "X29"
                    ],
                    "exprvars": []
                }
            },
            "20": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (no (empty ([]))) (',' (head ([]) T12) (',' (tail ([]) X15) (app X15 T13 T14))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X15"],
                    "exprvars": []
                }
            },
            "64": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (',' (!_6) (failure (a))) (',' (head ([]) T25) (',' (tail ([]) X29) (app X29 T26 T27))))"
                    },
                    {
                        "clause": -1,
                        "scope": 8,
                        "term": null
                    },
                    {
                        "clause": -1,
                        "scope": 7,
                        "term": null
                    },
                    {
                        "clause": 8,
                        "scope": 6,
                        "term": "(',' (no (empty ([]))) (',' (head ([]) T25) (',' (tail ([]) X29) (app X29 T26 T27))))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X29"],
                    "exprvars": []
                }
            },
            "21": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "87": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (tail (. T45 T46) X29) (app X29 T47 T48))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T45",
                        "T46"
                    ],
                    "free": ["X29"],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 3,
                "to": 5,
                "label": "CASE"
            },
            {
                "from": 5,
                "to": 13,
                "label": "EVAL with clause\napp([], X6, X6).\nand substitutionT1 -> [],\nT2 -> T5,\nX6 -> T5,\nT3 -> T5"
            },
            {
                "from": 5,
                "to": 16,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 13,
                "to": 19,
                "label": "SUCCESS"
            },
            {
                "from": 16,
                "to": 44,
                "label": "EVAL with clause\napp(X25, X26, .(X27, X28)) :- ','(no(empty(X25)), ','(head(X25, X27), ','(tail(X25, X29), app(X29, X26, X28)))).\nand substitutionT1 -> T21,\nX25 -> T21,\nT2 -> T26,\nX26 -> T26,\nX27 -> T25,\nX28 -> T27,\nT3 -> .(T25, T27),\nT23 -> T25,\nT22 -> T26,\nT24 -> T27"
            },
            {
                "from": 16,
                "to": 47,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 19,
                "to": 20,
                "label": "EVAL with clause\napp(X11, X12, .(X13, X14)) :- ','(no(empty(X11)), ','(head(X11, X13), ','(tail(X11, X15), app(X15, X12, X14)))).\nand substitutionX11 -> [],\nT2 -> T13,\nX12 -> T13,\nX13 -> T12,\nX14 -> T14,\nT3 -> .(T12, T14),\nT10 -> T12,\nT9 -> T13,\nT11 -> T14"
            },
            {
                "from": 19,
                "to": 21,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 20,
                "to": 22,
                "label": "CASE"
            },
            {
                "from": 22,
                "to": 27,
                "label": "ONLY EVAL with clause\nno(X18) :- ','(call(X18), ','(!_2, failure(a))).\nand substitutionX18 -> empty([])"
            },
            {
                "from": 27,
                "to": 30,
                "label": "CALL"
            },
            {
                "from": 30,
                "to": 31,
                "label": "CASE"
            },
            {
                "from": 31,
                "to": 32,
                "label": "ONLY EVAL with clause\nempty([]).\nand substitution"
            },
            {
                "from": 32,
                "to": 33,
                "label": "CUT"
            },
            {
                "from": 33,
                "to": 34,
                "label": "CASE"
            },
            {
                "from": 34,
                "to": 37,
                "label": "BACKTRACK\nfor clause: failure(b)because of non-unification"
            },
            {
                "from": 44,
                "to": 50,
                "label": "CASE"
            },
            {
                "from": 50,
                "to": 58,
                "label": "ONLY EVAL with clause\nno(X32) :- ','(call(X32), ','(!_6, failure(a))).\nand substitutionT21 -> T30,\nX32 -> empty(T30)"
            },
            {
                "from": 58,
                "to": 61,
                "label": "CALL"
            },
            {
                "from": 61,
                "to": 62,
                "label": "CASE"
            },
            {
                "from": 62,
                "to": 64,
                "label": "EVAL with clause\nempty([]).\nand substitutionT30 -> []"
            },
            {
                "from": 62,
                "to": 66,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 64,
                "to": 68,
                "label": "CUT"
            },
            {
                "from": 66,
                "to": 71,
                "label": "FAILURE"
            },
            {
                "from": 68,
                "to": 69,
                "label": "CASE"
            },
            {
                "from": 69,
                "to": 70,
                "label": "BACKTRACK\nfor clause: failure(b)because of non-unification"
            },
            {
                "from": 71,
                "to": 72,
                "label": "FAILURE"
            },
            {
                "from": 72,
                "to": 80,
                "label": "ONLY EVAL with clause\nno(X39).\nand substitutionT30 -> T37,\nX39 -> empty(T37)"
            },
            {
                "from": 80,
                "to": 81,
                "label": "CASE"
            },
            {
                "from": 81,
                "to": 84,
                "label": "BACKTRACK\nfor clause: head([], X1)\nwith clash: (empty(T37), empty([]))"
            },
            {
                "from": 84,
                "to": 87,
                "label": "EVAL with clause\nhead(.(X47, X48), X47).\nand substitutionX47 -> T45,\nX48 -> T46,\nT37 -> .(T45, T46),\nT25 -> T45,\nT26 -> T47,\nT27 -> T48"
            },
            {
                "from": 84,
                "to": 89,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 87,
                "to": 90,
                "label": "CASE"
            },
            {
                "from": 90,
                "to": 91,
                "label": "BACKTRACK\nfor clause: tail([], [])because of non-unification"
            },
            {
                "from": 91,
                "to": 92,
                "label": "ONLY EVAL with clause\ntail(.(X57, X58), X58).\nand substitutionT45 -> T57,\nX57 -> T57,\nT46 -> T58,\nX58 -> T58,\nX29 -> T58"
            },
            {
                "from": 92,
                "to": 3,
                "label": "INSTANCE with matching:\nT1 -> T58\nT2 -> T47\nT3 -> T48"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Obligation:
Triples:

appA(.(X1, X2), X3, .(X1, X4)) :- appA(X2, X3, X4).

Clauses:

appcA([], X1, X1).
appcA(.(X1, X2), X3, .(X1, X4)) :- appcA(X2, X3, X4).

Afs:

appA(x1, x2, x3)  =  appA(x1)


----------------------------------------

(3) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

appA_in_3: (b,f,f)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   APPA_IN_GAA(.(X1, X2), X3, .(X1, X4)) -> U1_GAA(X1, X2, X3, X4, appA_in_gaa(X2, X3, X4))
   APPA_IN_GAA(.(X1, X2), X3, .(X1, X4)) -> APPA_IN_GAA(X2, X3, X4)

R is empty.
The argument filtering Pi contains the following mapping:
appA_in_gaa(x1, x2, x3)  =  appA_in_gaa(x1)

.(x1, x2)  =  .(x1, x2)

APPA_IN_GAA(x1, x2, x3)  =  APPA_IN_GAA(x1)

U1_GAA(x1, x2, x3, x4, x5)  =  U1_GAA(x1, x2, x5)


We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(4)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPA_IN_GAA(.(X1, X2), X3, .(X1, X4)) -> U1_GAA(X1, X2, X3, X4, appA_in_gaa(X2, X3, X4))
   APPA_IN_GAA(.(X1, X2), X3, .(X1, X4)) -> APPA_IN_GAA(X2, X3, X4)

R is empty.
The argument filtering Pi contains the following mapping:
appA_in_gaa(x1, x2, x3)  =  appA_in_gaa(x1)

.(x1, x2)  =  .(x1, x2)

APPA_IN_GAA(x1, x2, x3)  =  APPA_IN_GAA(x1)

U1_GAA(x1, x2, x3, x4, x5)  =  U1_GAA(x1, x2, x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 1 SCC with 1 less node.
----------------------------------------

(6)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPA_IN_GAA(.(X1, X2), X3, .(X1, X4)) -> APPA_IN_GAA(X2, X3, X4)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

APPA_IN_GAA(x1, x2, x3)  =  APPA_IN_GAA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(7) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APPA_IN_GAA(.(X1, X2)) -> APPA_IN_GAA(X2)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(9) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*APPA_IN_GAA(.(X1, X2)) -> APPA_IN_GAA(X2)
The graph contains the following edges 1 > 1


----------------------------------------

(10)
YES
