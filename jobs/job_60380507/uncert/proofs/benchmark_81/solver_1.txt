YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/N8Plq.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

goal()

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToDTProblemTransformerProof [SOUND, 0 ms]
(2) TRIPLES
(3) TPisEmptyProof [EQUIVALENT, 0 ms]
(4) YES


----------------------------------------

(0)
Obligation:
Clauses:

goal :- ','(lte(X, s(s(s(s(0))))), even(X)).
lte(0, Y) :- !.
lte(X, s(Y)) :- ','(p(X, P), lte(P, Y)).
even(0).
even(s(s(X))) :- even(X).
p(0, 0).
p(s(X), X).


Query: goal()
----------------------------------------

(1) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 2,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(goal)",
                "(',' (lte X (s (s (s (s (0)))))) (even X))"
            ],
            [
                "(lte (0) Y)",
                "(!)"
            ],
            [
                "(lte X (s Y))",
                "(',' (p X P) (lte P Y))"
            ],
            [
                "(even (0))",
                null
            ],
            [
                "(even (s (s X)))",
                "(even X)"
            ],
            [
                "(p (0) (0))",
                null
            ],
            [
                "(p (s X) X)",
                null
            ]
        ]
    },
    "graph": {
        "nodes": {
            "11": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_2) (even (0)))"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(',' (lte X1 (s (s (s (s (0)))))) (even X1))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X1"],
                    "exprvars": []
                }
            },
            "12": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(even (0))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "13": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(even (0))"
                    },
                    {
                        "clause": 4,
                        "scope": 3,
                        "term": "(even (0))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "14": {
                "goal": [{
                    "clause": 3,
                    "scope": 3,
                    "term": "(even (0))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "15": {
                "goal": [{
                    "clause": 4,
                    "scope": 3,
                    "term": "(even (0))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "16": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "17": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "18": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "2": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(goal)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "5": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(goal)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "6": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (lte X1 (s (s (s (s (0)))))) (even X1))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X1"],
                    "exprvars": []
                }
            },
            "7": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 2,
                        "term": "(',' (lte X1 (s (s (s (s (0)))))) (even X1))"
                    },
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(',' (lte X1 (s (s (s (s (0)))))) (even X1))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X1"],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 2,
                "to": 5,
                "label": "CASE"
            },
            {
                "from": 5,
                "to": 6,
                "label": "ONLY EVAL with clause\ngoal :- ','(lte(X1, s(s(s(s(0))))), even(X1)).\nand substitution"
            },
            {
                "from": 6,
                "to": 7,
                "label": "CASE"
            },
            {
                "from": 7,
                "to": 11,
                "label": "ONLY EVAL with clause\nlte(0, X4) :- !_2.\nand substitutionX1 -> 0,\nX4 -> s(s(s(s(0))))"
            },
            {
                "from": 11,
                "to": 12,
                "label": "CUT"
            },
            {
                "from": 12,
                "to": 13,
                "label": "CASE"
            },
            {
                "from": 13,
                "to": 14,
                "label": "PARALLEL"
            },
            {
                "from": 13,
                "to": 15,
                "label": "PARALLEL"
            },
            {
                "from": 14,
                "to": 16,
                "label": "ONLY EVAL with clause\neven(0).\nand substitution"
            },
            {
                "from": 15,
                "to": 18,
                "label": "BACKTRACK\nfor clause: even(s(s(X))) :- even(X)because of non-unification"
            },
            {
                "from": 16,
                "to": 17,
                "label": "SUCCESS"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Obligation:
Triples:


Clauses:


Afs:


----------------------------------------

(3) TPisEmptyProof (EQUIVALENT)
There are no more dependency triples. Hence, the dependency triple problem trivially terminates.
----------------------------------------

(4)
YES
