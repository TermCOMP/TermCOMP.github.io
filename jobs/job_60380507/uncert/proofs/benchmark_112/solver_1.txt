MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/e1WQf.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

vlcnd(g)

w.r.t. the given Prolog program could not be shown:

(0) Prolog
(1) CutEliminatorProof [SOUND, 0 ms]
(2) Prolog
    (3) PrologToPiTRSProof [SOUND, 0 ms]
    (4) PiTRS
        (5) DependencyPairsProof [EQUIVALENT, 7 ms]
        (6) PiDP
        (7) DependencyGraphProof [EQUIVALENT, 0 ms]
        (8) AND
            (9) PiDP
                (10) UsableRulesProof [EQUIVALENT, 0 ms]
                (11) PiDP
                (12) PiDPToQDPProof [SOUND, 0 ms]
                (13) QDP
                (14) TransformationProof [EQUIVALENT, 0 ms]
                (15) QDP
                (16) UsableRulesProof [EQUIVALENT, 0 ms]
                (17) QDP
                (18) QReductionProof [EQUIVALENT, 0 ms]
                (19) QDP
                (20) NonTerminationLoopProof [COMPLETE, 0 ms]
                (21) NO
            (22) PiDP
                (23) UsableRulesProof [EQUIVALENT, 0 ms]
                (24) PiDP
                (25) PiDPToQDPProof [SOUND, 0 ms]
                (26) QDP
                (27) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (28) YES
            (29) PiDP
                (30) UsableRulesProof [EQUIVALENT, 0 ms]
                (31) PiDP
                (32) PiDPToQDPProof [SOUND, 0 ms]
                (33) QDP
                (34) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (35) YES
            (36) PiDP
                (37) UsableRulesProof [EQUIVALENT, 0 ms]
                (38) PiDP
                (39) PiDPToQDPProof [SOUND, 0 ms]
                (40) QDP
                (41) TransformationProof [SOUND, 0 ms]
                (42) QDP
                (43) TransformationProof [SOUND, 0 ms]
                (44) QDP
                (45) TransformationProof [EQUIVALENT, 0 ms]
                (46) QDP
                (47) TransformationProof [SOUND, 0 ms]
                (48) QDP
                (49) TransformationProof [EQUIVALENT, 0 ms]
                (50) QDP
                (51) TransformationProof [EQUIVALENT, 0 ms]
                (52) QDP
                (53) TransformationProof [EQUIVALENT, 0 ms]
                (54) QDP
                (55) DependencyGraphProof [EQUIVALENT, 0 ms]
                (56) QDP
                (57) TransformationProof [SOUND, 0 ms]
                (58) QDP
                (59) TransformationProof [EQUIVALENT, 0 ms]
                (60) QDP
                (61) TransformationProof [EQUIVALENT, 0 ms]
                (62) QDP
            (63) PiDP
                (64) UsableRulesProof [EQUIVALENT, 0 ms]
                (65) PiDP
    (66) PrologToPiTRSProof [SOUND, 16 ms]
    (67) PiTRS
        (68) DependencyPairsProof [EQUIVALENT, 0 ms]
        (69) PiDP
        (70) DependencyGraphProof [EQUIVALENT, 0 ms]
        (71) AND
            (72) PiDP
                (73) UsableRulesProof [EQUIVALENT, 0 ms]
                (74) PiDP
                (75) PiDPToQDPProof [SOUND, 0 ms]
                (76) QDP
                (77) TransformationProof [EQUIVALENT, 0 ms]
                (78) QDP
                (79) UsableRulesProof [EQUIVALENT, 0 ms]
                (80) QDP
                (81) QReductionProof [EQUIVALENT, 0 ms]
                (82) QDP
                (83) NonTerminationLoopProof [COMPLETE, 0 ms]
                (84) NO
            (85) PiDP
                (86) UsableRulesProof [EQUIVALENT, 0 ms]
                (87) PiDP
                (88) PiDPToQDPProof [SOUND, 0 ms]
                (89) QDP
                (90) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (91) YES
            (92) PiDP
                (93) UsableRulesProof [EQUIVALENT, 0 ms]
                (94) PiDP
                (95) PiDPToQDPProof [SOUND, 0 ms]
                (96) QDP
                (97) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (98) YES
            (99) PiDP
                (100) UsableRulesProof [EQUIVALENT, 0 ms]
                (101) PiDP
                (102) PiDPToQDPProof [SOUND, 0 ms]
                (103) QDP
                (104) TransformationProof [SOUND, 0 ms]
                (105) QDP
                (106) TransformationProof [SOUND, 0 ms]
                (107) QDP
                (108) TransformationProof [EQUIVALENT, 0 ms]
                (109) QDP
                (110) TransformationProof [SOUND, 0 ms]
                (111) QDP
                (112) TransformationProof [EQUIVALENT, 0 ms]
                (113) QDP
                (114) TransformationProof [EQUIVALENT, 0 ms]
                (115) QDP
                (116) TransformationProof [EQUIVALENT, 0 ms]
                (117) QDP
                (118) DependencyGraphProof [EQUIVALENT, 0 ms]
                (119) QDP
                (120) TransformationProof [SOUND, 0 ms]
                (121) QDP
                (122) TransformationProof [EQUIVALENT, 0 ms]
                (123) QDP
                (124) TransformationProof [EQUIVALENT, 0 ms]
                (125) QDP
            (126) PiDP
                (127) UsableRulesProof [EQUIVALENT, 0 ms]
                (128) PiDP
(129) PrologToTRSTransformerProof [SOUND, 20 ms]
(130) QTRS
    (131) DependencyPairsProof [EQUIVALENT, 0 ms]
    (132) QDP
    (133) DependencyGraphProof [EQUIVALENT, 0 ms]
    (134) AND
        (135) QDP
            (136) UsableRulesProof [EQUIVALENT, 0 ms]
            (137) QDP
            (138) NonTerminationLoopProof [COMPLETE, 0 ms]
            (139) NO
        (140) QDP
            (141) UsableRulesProof [EQUIVALENT, 0 ms]
            (142) QDP
            (143) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (144) YES
        (145) QDP
            (146) UsableRulesProof [EQUIVALENT, 0 ms]
            (147) QDP
            (148) NonTerminationLoopProof [COMPLETE, 0 ms]
            (149) NO
        (150) QDP
            (151) NonLoopProof [COMPLETE, 1478 ms]
            (152) NO
(153) PrologToIRSwTTransformerProof [SOUND, 43 ms]
(154) AND
    (155) IRSwT
        (156) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (157) TRUE
    (158) IRSwT
        (159) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (160) IRSwT
        (161) IntTRSCompressionProof [EQUIVALENT, 20 ms]
        (162) IRSwT
        (163) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (164) IRSwT
        (165) IRSwTTerminationDigraphProof [EQUIVALENT, 5 ms]
        (166) IRSwT
        (167) TempFilterProof [SOUND, 1 ms]
        (168) IRSwT
        (169) IRSwTToQDPProof [SOUND, 0 ms]
        (170) QDP
        (171) QDPSizeChangeProof [EQUIVALENT, 0 ms]
        (172) YES
    (173) IRSwT
        (174) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (175) TRUE
    (176) IRSwT
        (177) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (178) IRSwT
        (179) IntTRSCompressionProof [EQUIVALENT, 27 ms]
        (180) IRSwT
        (181) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (182) IRSwT
        (183) IRSwTTerminationDigraphProof [EQUIVALENT, 70 ms]
        (184) AND
            (185) IRSwT
                (186) TempFilterProof [SOUND, 1 ms]
                (187) IRSwT
                (188) IRSwTToQDPProof [SOUND, 0 ms]
                (189) QDP
                (190) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (191) YES
            (192) IRSwT
                (193) IntTRSCompressionProof [EQUIVALENT, 24 ms]
                (194) IRSwT
                (195) IRSwTToIntTRSProof [SOUND, 27 ms]
                (196) IRSwT
                (197) IntTRSCompressionProof [EQUIVALENT, 18 ms]
                (198) IRSwT
(199) PrologToDTProblemTransformerProof [SOUND, 36 ms]
(200) TRIPLES
    (201) UndefinedPredicateInTriplesTransformerProof [SOUND, 0 ms]
    (202) TRIPLES
    (203) TriplesToPiDPProof [SOUND, 0 ms]
    (204) PiDP
    (205) DependencyGraphProof [EQUIVALENT, 0 ms]
    (206) AND
        (207) PiDP
            (208) UsableRulesProof [EQUIVALENT, 0 ms]
            (209) PiDP
            (210) PiDPToQDPProof [SOUND, 0 ms]
            (211) QDP
            (212) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (213) YES
        (214) PiDP
            (215) UsableRulesProof [EQUIVALENT, 0 ms]
            (216) PiDP
            (217) PiDPToQDPProof [SOUND, 0 ms]
            (218) QDP
            (219) NonTerminationLoopProof [COMPLETE, 0 ms]
            (220) NO
        (221) PiDP
            (222) UsableRulesProof [EQUIVALENT, 0 ms]
            (223) PiDP
            (224) PiDPToQDPProof [SOUND, 0 ms]
            (225) QDP
            (226) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (227) YES
        (228) PiDP
            (229) PiDPToQDPProof [SOUND, 0 ms]
            (230) QDP
            (231) TransformationProof [SOUND, 0 ms]
            (232) QDP
            (233) UsableRulesProof [EQUIVALENT, 0 ms]
            (234) QDP
            (235) QReductionProof [EQUIVALENT, 0 ms]
            (236) QDP
            (237) TransformationProof [EQUIVALENT, 0 ms]
            (238) QDP
            (239) TransformationProof [EQUIVALENT, 0 ms]
            (240) QDP
            (241) UsableRulesProof [EQUIVALENT, 0 ms]
            (242) QDP
            (243) QReductionProof [EQUIVALENT, 0 ms]
            (244) QDP
            (245) TransformationProof [EQUIVALENT, 0 ms]
            (246) QDP


----------------------------------------

(0)
Obligation:
Clauses:

vlcnd(N) :- ','(vl(N, Xs), ','(select(X1, Xs, Ys), ','(vl(M, Ys), vlcnd(M)))).
vlcnd(0).
vl(0, L) :- ','(!, eq(L, [])).
vl(N, .(X2, Xs)) :- ','(p(N, P), vl(P, Xs)).
select(X, .(Y, Xs), .(Y, Ys)) :- select(X, Xs, Ys).
select(X, .(X, Xs), Xs).
p(0, 0).
p(s(X), X).
eq(X, X).


Query: vlcnd(g)
----------------------------------------

(1) CutEliminatorProof (SOUND)
Eliminated all cuts by simply ignoring them[PROLOG].
----------------------------------------

(2)
Obligation:
Clauses:

vlcnd(N) :- ','(vl(N, Xs), ','(select(X1, Xs, Ys), ','(vl(M, Ys), vlcnd(M)))).
vlcnd(0).
vl(0, L) :- eq(L, []).
vl(N, .(X2, Xs)) :- ','(p(N, P), vl(P, Xs)).
select(X, .(Y, Xs), .(Y, Ys)) :- select(X, Xs, Ys).
select(X, .(X, Xs), Xs).
p(0, 0).
p(s(X), X).
eq(X, X).


Query: vlcnd(g)
----------------------------------------

(3) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

vlcnd_in_1: (b) (f)

vl_in_2: (b,f) (f,b) (f,f)

select_in_3: (f,b,f)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   vlcnd_in_g(N) -> U1_g(N, vl_in_ga(N, Xs))
   vl_in_ga(0, L) -> U5_ga(L, eq_in_ag(L, []))
   eq_in_ag(X, X) -> eq_out_ag(X, X)
   U5_ga(L, eq_out_ag(L, [])) -> vl_out_ga(0, L)
   vl_in_ga(N, .(X2, Xs)) -> U6_ga(N, X2, Xs, p_in_ga(N, P))
   p_in_ga(0, 0) -> p_out_ga(0, 0)
   p_in_ga(s(X), X) -> p_out_ga(s(X), X)
   U6_ga(N, X2, Xs, p_out_ga(N, P)) -> U7_ga(N, X2, Xs, vl_in_ga(P, Xs))
   U7_ga(N, X2, Xs, vl_out_ga(P, Xs)) -> vl_out_ga(N, .(X2, Xs))
   U1_g(N, vl_out_ga(N, Xs)) -> U2_g(N, select_in_aga(X1, Xs, Ys))
   select_in_aga(X, .(Y, Xs), .(Y, Ys)) -> U8_aga(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   select_in_aga(X, .(X, Xs), Xs) -> select_out_aga(X, .(X, Xs), Xs)
   U8_aga(X, Y, Xs, Ys, select_out_aga(X, Xs, Ys)) -> select_out_aga(X, .(Y, Xs), .(Y, Ys))
   U2_g(N, select_out_aga(X1, Xs, Ys)) -> U3_g(N, vl_in_ag(M, Ys))
   vl_in_ag(0, L) -> U5_ag(L, eq_in_gg(L, []))
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(0, L)
   vl_in_ag(N, .(X2, Xs)) -> U6_ag(N, X2, Xs, p_in_aa(N, P))
   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)
   U6_ag(N, X2, Xs, p_out_aa(N, P)) -> U7_ag(N, X2, Xs, vl_in_ag(P, Xs))
   U7_ag(N, X2, Xs, vl_out_ag(P, Xs)) -> vl_out_ag(N, .(X2, Xs))
   U3_g(N, vl_out_ag(M, Ys)) -> U4_g(N, vlcnd_in_a(M))
   vlcnd_in_a(N) -> U1_a(N, vl_in_aa(N, Xs))
   vl_in_aa(0, L) -> U5_aa(L, eq_in_ag(L, []))
   U5_aa(L, eq_out_ag(L, [])) -> vl_out_aa(0, L)
   vl_in_aa(N, .(X2, Xs)) -> U6_aa(N, X2, Xs, p_in_aa(N, P))
   U6_aa(N, X2, Xs, p_out_aa(N, P)) -> U7_aa(N, X2, Xs, vl_in_aa(P, Xs))
   U7_aa(N, X2, Xs, vl_out_aa(P, Xs)) -> vl_out_aa(N, .(X2, Xs))
   U1_a(N, vl_out_aa(N, Xs)) -> U2_a(N, select_in_aga(X1, Xs, Ys))
   U2_a(N, select_out_aga(X1, Xs, Ys)) -> U3_a(N, vl_in_ag(M, Ys))
   U3_a(N, vl_out_ag(M, Ys)) -> U4_a(N, vlcnd_in_a(M))
   vlcnd_in_a(0) -> vlcnd_out_a(0)
   U4_a(N, vlcnd_out_a(M)) -> vlcnd_out_a(N)
   U4_g(N, vlcnd_out_a(M)) -> vlcnd_out_g(N)
   vlcnd_in_g(0) -> vlcnd_out_g(0)

The argument filtering Pi contains the following mapping:
vlcnd_in_g(x1)  =  vlcnd_in_g(x1)

U1_g(x1, x2)  =  U1_g(x1, x2)

vl_in_ga(x1, x2)  =  vl_in_ga(x1)

0  =  0

U5_ga(x1, x2)  =  U5_ga(x2)

eq_in_ag(x1, x2)  =  eq_in_ag(x2)

eq_out_ag(x1, x2)  =  eq_out_ag(x1, x2)

[]  =  []

vl_out_ga(x1, x2)  =  vl_out_ga(x1, x2)

U6_ga(x1, x2, x3, x4)  =  U6_ga(x1, x4)

p_in_ga(x1, x2)  =  p_in_ga(x1)

p_out_ga(x1, x2)  =  p_out_ga(x1, x2)

s(x1)  =  s(x1)

U7_ga(x1, x2, x3, x4)  =  U7_ga(x1, x4)

.(x1, x2)  =  .(x2)

U2_g(x1, x2)  =  U2_g(x1, x2)

select_in_aga(x1, x2, x3)  =  select_in_aga(x2)

U8_aga(x1, x2, x3, x4, x5)  =  U8_aga(x3, x5)

select_out_aga(x1, x2, x3)  =  select_out_aga(x2, x3)

U3_g(x1, x2)  =  U3_g(x1, x2)

vl_in_ag(x1, x2)  =  vl_in_ag(x2)

U5_ag(x1, x2)  =  U5_ag(x1, x2)

eq_in_gg(x1, x2)  =  eq_in_gg(x1, x2)

eq_out_gg(x1, x2)  =  eq_out_gg(x1, x2)

vl_out_ag(x1, x2)  =  vl_out_ag(x2)

U6_ag(x1, x2, x3, x4)  =  U6_ag(x3, x4)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

U7_ag(x1, x2, x3, x4)  =  U7_ag(x3, x4)

U4_g(x1, x2)  =  U4_g(x1, x2)

vlcnd_in_a(x1)  =  vlcnd_in_a

U1_a(x1, x2)  =  U1_a(x2)

vl_in_aa(x1, x2)  =  vl_in_aa

U5_aa(x1, x2)  =  U5_aa(x2)

vl_out_aa(x1, x2)  =  vl_out_aa(x2)

U6_aa(x1, x2, x3, x4)  =  U6_aa(x4)

U7_aa(x1, x2, x3, x4)  =  U7_aa(x4)

U2_a(x1, x2)  =  U2_a(x2)

U3_a(x1, x2)  =  U3_a(x2)

U4_a(x1, x2)  =  U4_a(x2)

vlcnd_out_a(x1)  =  vlcnd_out_a

vlcnd_out_g(x1)  =  vlcnd_out_g(x1)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(4)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   vlcnd_in_g(N) -> U1_g(N, vl_in_ga(N, Xs))
   vl_in_ga(0, L) -> U5_ga(L, eq_in_ag(L, []))
   eq_in_ag(X, X) -> eq_out_ag(X, X)
   U5_ga(L, eq_out_ag(L, [])) -> vl_out_ga(0, L)
   vl_in_ga(N, .(X2, Xs)) -> U6_ga(N, X2, Xs, p_in_ga(N, P))
   p_in_ga(0, 0) -> p_out_ga(0, 0)
   p_in_ga(s(X), X) -> p_out_ga(s(X), X)
   U6_ga(N, X2, Xs, p_out_ga(N, P)) -> U7_ga(N, X2, Xs, vl_in_ga(P, Xs))
   U7_ga(N, X2, Xs, vl_out_ga(P, Xs)) -> vl_out_ga(N, .(X2, Xs))
   U1_g(N, vl_out_ga(N, Xs)) -> U2_g(N, select_in_aga(X1, Xs, Ys))
   select_in_aga(X, .(Y, Xs), .(Y, Ys)) -> U8_aga(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   select_in_aga(X, .(X, Xs), Xs) -> select_out_aga(X, .(X, Xs), Xs)
   U8_aga(X, Y, Xs, Ys, select_out_aga(X, Xs, Ys)) -> select_out_aga(X, .(Y, Xs), .(Y, Ys))
   U2_g(N, select_out_aga(X1, Xs, Ys)) -> U3_g(N, vl_in_ag(M, Ys))
   vl_in_ag(0, L) -> U5_ag(L, eq_in_gg(L, []))
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(0, L)
   vl_in_ag(N, .(X2, Xs)) -> U6_ag(N, X2, Xs, p_in_aa(N, P))
   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)
   U6_ag(N, X2, Xs, p_out_aa(N, P)) -> U7_ag(N, X2, Xs, vl_in_ag(P, Xs))
   U7_ag(N, X2, Xs, vl_out_ag(P, Xs)) -> vl_out_ag(N, .(X2, Xs))
   U3_g(N, vl_out_ag(M, Ys)) -> U4_g(N, vlcnd_in_a(M))
   vlcnd_in_a(N) -> U1_a(N, vl_in_aa(N, Xs))
   vl_in_aa(0, L) -> U5_aa(L, eq_in_ag(L, []))
   U5_aa(L, eq_out_ag(L, [])) -> vl_out_aa(0, L)
   vl_in_aa(N, .(X2, Xs)) -> U6_aa(N, X2, Xs, p_in_aa(N, P))
   U6_aa(N, X2, Xs, p_out_aa(N, P)) -> U7_aa(N, X2, Xs, vl_in_aa(P, Xs))
   U7_aa(N, X2, Xs, vl_out_aa(P, Xs)) -> vl_out_aa(N, .(X2, Xs))
   U1_a(N, vl_out_aa(N, Xs)) -> U2_a(N, select_in_aga(X1, Xs, Ys))
   U2_a(N, select_out_aga(X1, Xs, Ys)) -> U3_a(N, vl_in_ag(M, Ys))
   U3_a(N, vl_out_ag(M, Ys)) -> U4_a(N, vlcnd_in_a(M))
   vlcnd_in_a(0) -> vlcnd_out_a(0)
   U4_a(N, vlcnd_out_a(M)) -> vlcnd_out_a(N)
   U4_g(N, vlcnd_out_a(M)) -> vlcnd_out_g(N)
   vlcnd_in_g(0) -> vlcnd_out_g(0)

The argument filtering Pi contains the following mapping:
vlcnd_in_g(x1)  =  vlcnd_in_g(x1)

U1_g(x1, x2)  =  U1_g(x1, x2)

vl_in_ga(x1, x2)  =  vl_in_ga(x1)

0  =  0

U5_ga(x1, x2)  =  U5_ga(x2)

eq_in_ag(x1, x2)  =  eq_in_ag(x2)

eq_out_ag(x1, x2)  =  eq_out_ag(x1, x2)

[]  =  []

vl_out_ga(x1, x2)  =  vl_out_ga(x1, x2)

U6_ga(x1, x2, x3, x4)  =  U6_ga(x1, x4)

p_in_ga(x1, x2)  =  p_in_ga(x1)

p_out_ga(x1, x2)  =  p_out_ga(x1, x2)

s(x1)  =  s(x1)

U7_ga(x1, x2, x3, x4)  =  U7_ga(x1, x4)

.(x1, x2)  =  .(x2)

U2_g(x1, x2)  =  U2_g(x1, x2)

select_in_aga(x1, x2, x3)  =  select_in_aga(x2)

U8_aga(x1, x2, x3, x4, x5)  =  U8_aga(x3, x5)

select_out_aga(x1, x2, x3)  =  select_out_aga(x2, x3)

U3_g(x1, x2)  =  U3_g(x1, x2)

vl_in_ag(x1, x2)  =  vl_in_ag(x2)

U5_ag(x1, x2)  =  U5_ag(x1, x2)

eq_in_gg(x1, x2)  =  eq_in_gg(x1, x2)

eq_out_gg(x1, x2)  =  eq_out_gg(x1, x2)

vl_out_ag(x1, x2)  =  vl_out_ag(x2)

U6_ag(x1, x2, x3, x4)  =  U6_ag(x3, x4)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

U7_ag(x1, x2, x3, x4)  =  U7_ag(x3, x4)

U4_g(x1, x2)  =  U4_g(x1, x2)

vlcnd_in_a(x1)  =  vlcnd_in_a

U1_a(x1, x2)  =  U1_a(x2)

vl_in_aa(x1, x2)  =  vl_in_aa

U5_aa(x1, x2)  =  U5_aa(x2)

vl_out_aa(x1, x2)  =  vl_out_aa(x2)

U6_aa(x1, x2, x3, x4)  =  U6_aa(x4)

U7_aa(x1, x2, x3, x4)  =  U7_aa(x4)

U2_a(x1, x2)  =  U2_a(x2)

U3_a(x1, x2)  =  U3_a(x2)

U4_a(x1, x2)  =  U4_a(x2)

vlcnd_out_a(x1)  =  vlcnd_out_a

vlcnd_out_g(x1)  =  vlcnd_out_g(x1)



----------------------------------------

(5) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   VLCND_IN_G(N) -> U1_G(N, vl_in_ga(N, Xs))
   VLCND_IN_G(N) -> VL_IN_GA(N, Xs)
   VL_IN_GA(0, L) -> U5_GA(L, eq_in_ag(L, []))
   VL_IN_GA(0, L) -> EQ_IN_AG(L, [])
   VL_IN_GA(N, .(X2, Xs)) -> U6_GA(N, X2, Xs, p_in_ga(N, P))
   VL_IN_GA(N, .(X2, Xs)) -> P_IN_GA(N, P)
   U6_GA(N, X2, Xs, p_out_ga(N, P)) -> U7_GA(N, X2, Xs, vl_in_ga(P, Xs))
   U6_GA(N, X2, Xs, p_out_ga(N, P)) -> VL_IN_GA(P, Xs)
   U1_G(N, vl_out_ga(N, Xs)) -> U2_G(N, select_in_aga(X1, Xs, Ys))
   U1_G(N, vl_out_ga(N, Xs)) -> SELECT_IN_AGA(X1, Xs, Ys)
   SELECT_IN_AGA(X, .(Y, Xs), .(Y, Ys)) -> U8_AGA(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   SELECT_IN_AGA(X, .(Y, Xs), .(Y, Ys)) -> SELECT_IN_AGA(X, Xs, Ys)
   U2_G(N, select_out_aga(X1, Xs, Ys)) -> U3_G(N, vl_in_ag(M, Ys))
   U2_G(N, select_out_aga(X1, Xs, Ys)) -> VL_IN_AG(M, Ys)
   VL_IN_AG(0, L) -> U5_AG(L, eq_in_gg(L, []))
   VL_IN_AG(0, L) -> EQ_IN_GG(L, [])
   VL_IN_AG(N, .(X2, Xs)) -> U6_AG(N, X2, Xs, p_in_aa(N, P))
   VL_IN_AG(N, .(X2, Xs)) -> P_IN_AA(N, P)
   U6_AG(N, X2, Xs, p_out_aa(N, P)) -> U7_AG(N, X2, Xs, vl_in_ag(P, Xs))
   U6_AG(N, X2, Xs, p_out_aa(N, P)) -> VL_IN_AG(P, Xs)
   U3_G(N, vl_out_ag(M, Ys)) -> U4_G(N, vlcnd_in_a(M))
   U3_G(N, vl_out_ag(M, Ys)) -> VLCND_IN_A(M)
   VLCND_IN_A(N) -> U1_A(N, vl_in_aa(N, Xs))
   VLCND_IN_A(N) -> VL_IN_AA(N, Xs)
   VL_IN_AA(0, L) -> U5_AA(L, eq_in_ag(L, []))
   VL_IN_AA(0, L) -> EQ_IN_AG(L, [])
   VL_IN_AA(N, .(X2, Xs)) -> U6_AA(N, X2, Xs, p_in_aa(N, P))
   VL_IN_AA(N, .(X2, Xs)) -> P_IN_AA(N, P)
   U6_AA(N, X2, Xs, p_out_aa(N, P)) -> U7_AA(N, X2, Xs, vl_in_aa(P, Xs))
   U6_AA(N, X2, Xs, p_out_aa(N, P)) -> VL_IN_AA(P, Xs)
   U1_A(N, vl_out_aa(N, Xs)) -> U2_A(N, select_in_aga(X1, Xs, Ys))
   U1_A(N, vl_out_aa(N, Xs)) -> SELECT_IN_AGA(X1, Xs, Ys)
   U2_A(N, select_out_aga(X1, Xs, Ys)) -> U3_A(N, vl_in_ag(M, Ys))
   U2_A(N, select_out_aga(X1, Xs, Ys)) -> VL_IN_AG(M, Ys)
   U3_A(N, vl_out_ag(M, Ys)) -> U4_A(N, vlcnd_in_a(M))
   U3_A(N, vl_out_ag(M, Ys)) -> VLCND_IN_A(M)

The TRS R consists of the following rules:

   vlcnd_in_g(N) -> U1_g(N, vl_in_ga(N, Xs))
   vl_in_ga(0, L) -> U5_ga(L, eq_in_ag(L, []))
   eq_in_ag(X, X) -> eq_out_ag(X, X)
   U5_ga(L, eq_out_ag(L, [])) -> vl_out_ga(0, L)
   vl_in_ga(N, .(X2, Xs)) -> U6_ga(N, X2, Xs, p_in_ga(N, P))
   p_in_ga(0, 0) -> p_out_ga(0, 0)
   p_in_ga(s(X), X) -> p_out_ga(s(X), X)
   U6_ga(N, X2, Xs, p_out_ga(N, P)) -> U7_ga(N, X2, Xs, vl_in_ga(P, Xs))
   U7_ga(N, X2, Xs, vl_out_ga(P, Xs)) -> vl_out_ga(N, .(X2, Xs))
   U1_g(N, vl_out_ga(N, Xs)) -> U2_g(N, select_in_aga(X1, Xs, Ys))
   select_in_aga(X, .(Y, Xs), .(Y, Ys)) -> U8_aga(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   select_in_aga(X, .(X, Xs), Xs) -> select_out_aga(X, .(X, Xs), Xs)
   U8_aga(X, Y, Xs, Ys, select_out_aga(X, Xs, Ys)) -> select_out_aga(X, .(Y, Xs), .(Y, Ys))
   U2_g(N, select_out_aga(X1, Xs, Ys)) -> U3_g(N, vl_in_ag(M, Ys))
   vl_in_ag(0, L) -> U5_ag(L, eq_in_gg(L, []))
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(0, L)
   vl_in_ag(N, .(X2, Xs)) -> U6_ag(N, X2, Xs, p_in_aa(N, P))
   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)
   U6_ag(N, X2, Xs, p_out_aa(N, P)) -> U7_ag(N, X2, Xs, vl_in_ag(P, Xs))
   U7_ag(N, X2, Xs, vl_out_ag(P, Xs)) -> vl_out_ag(N, .(X2, Xs))
   U3_g(N, vl_out_ag(M, Ys)) -> U4_g(N, vlcnd_in_a(M))
   vlcnd_in_a(N) -> U1_a(N, vl_in_aa(N, Xs))
   vl_in_aa(0, L) -> U5_aa(L, eq_in_ag(L, []))
   U5_aa(L, eq_out_ag(L, [])) -> vl_out_aa(0, L)
   vl_in_aa(N, .(X2, Xs)) -> U6_aa(N, X2, Xs, p_in_aa(N, P))
   U6_aa(N, X2, Xs, p_out_aa(N, P)) -> U7_aa(N, X2, Xs, vl_in_aa(P, Xs))
   U7_aa(N, X2, Xs, vl_out_aa(P, Xs)) -> vl_out_aa(N, .(X2, Xs))
   U1_a(N, vl_out_aa(N, Xs)) -> U2_a(N, select_in_aga(X1, Xs, Ys))
   U2_a(N, select_out_aga(X1, Xs, Ys)) -> U3_a(N, vl_in_ag(M, Ys))
   U3_a(N, vl_out_ag(M, Ys)) -> U4_a(N, vlcnd_in_a(M))
   vlcnd_in_a(0) -> vlcnd_out_a(0)
   U4_a(N, vlcnd_out_a(M)) -> vlcnd_out_a(N)
   U4_g(N, vlcnd_out_a(M)) -> vlcnd_out_g(N)
   vlcnd_in_g(0) -> vlcnd_out_g(0)

The argument filtering Pi contains the following mapping:
vlcnd_in_g(x1)  =  vlcnd_in_g(x1)

U1_g(x1, x2)  =  U1_g(x1, x2)

vl_in_ga(x1, x2)  =  vl_in_ga(x1)

0  =  0

U5_ga(x1, x2)  =  U5_ga(x2)

eq_in_ag(x1, x2)  =  eq_in_ag(x2)

eq_out_ag(x1, x2)  =  eq_out_ag(x1, x2)

[]  =  []

vl_out_ga(x1, x2)  =  vl_out_ga(x1, x2)

U6_ga(x1, x2, x3, x4)  =  U6_ga(x1, x4)

p_in_ga(x1, x2)  =  p_in_ga(x1)

p_out_ga(x1, x2)  =  p_out_ga(x1, x2)

s(x1)  =  s(x1)

U7_ga(x1, x2, x3, x4)  =  U7_ga(x1, x4)

.(x1, x2)  =  .(x2)

U2_g(x1, x2)  =  U2_g(x1, x2)

select_in_aga(x1, x2, x3)  =  select_in_aga(x2)

U8_aga(x1, x2, x3, x4, x5)  =  U8_aga(x3, x5)

select_out_aga(x1, x2, x3)  =  select_out_aga(x2, x3)

U3_g(x1, x2)  =  U3_g(x1, x2)

vl_in_ag(x1, x2)  =  vl_in_ag(x2)

U5_ag(x1, x2)  =  U5_ag(x1, x2)

eq_in_gg(x1, x2)  =  eq_in_gg(x1, x2)

eq_out_gg(x1, x2)  =  eq_out_gg(x1, x2)

vl_out_ag(x1, x2)  =  vl_out_ag(x2)

U6_ag(x1, x2, x3, x4)  =  U6_ag(x3, x4)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

U7_ag(x1, x2, x3, x4)  =  U7_ag(x3, x4)

U4_g(x1, x2)  =  U4_g(x1, x2)

vlcnd_in_a(x1)  =  vlcnd_in_a

U1_a(x1, x2)  =  U1_a(x2)

vl_in_aa(x1, x2)  =  vl_in_aa

U5_aa(x1, x2)  =  U5_aa(x2)

vl_out_aa(x1, x2)  =  vl_out_aa(x2)

U6_aa(x1, x2, x3, x4)  =  U6_aa(x4)

U7_aa(x1, x2, x3, x4)  =  U7_aa(x4)

U2_a(x1, x2)  =  U2_a(x2)

U3_a(x1, x2)  =  U3_a(x2)

U4_a(x1, x2)  =  U4_a(x2)

vlcnd_out_a(x1)  =  vlcnd_out_a

vlcnd_out_g(x1)  =  vlcnd_out_g(x1)

VLCND_IN_G(x1)  =  VLCND_IN_G(x1)

U1_G(x1, x2)  =  U1_G(x1, x2)

VL_IN_GA(x1, x2)  =  VL_IN_GA(x1)

U5_GA(x1, x2)  =  U5_GA(x2)

EQ_IN_AG(x1, x2)  =  EQ_IN_AG(x2)

U6_GA(x1, x2, x3, x4)  =  U6_GA(x1, x4)

P_IN_GA(x1, x2)  =  P_IN_GA(x1)

U7_GA(x1, x2, x3, x4)  =  U7_GA(x1, x4)

U2_G(x1, x2)  =  U2_G(x1, x2)

SELECT_IN_AGA(x1, x2, x3)  =  SELECT_IN_AGA(x2)

U8_AGA(x1, x2, x3, x4, x5)  =  U8_AGA(x3, x5)

U3_G(x1, x2)  =  U3_G(x1, x2)

VL_IN_AG(x1, x2)  =  VL_IN_AG(x2)

U5_AG(x1, x2)  =  U5_AG(x1, x2)

EQ_IN_GG(x1, x2)  =  EQ_IN_GG(x1, x2)

U6_AG(x1, x2, x3, x4)  =  U6_AG(x3, x4)

P_IN_AA(x1, x2)  =  P_IN_AA

U7_AG(x1, x2, x3, x4)  =  U7_AG(x3, x4)

U4_G(x1, x2)  =  U4_G(x1, x2)

VLCND_IN_A(x1)  =  VLCND_IN_A

U1_A(x1, x2)  =  U1_A(x2)

VL_IN_AA(x1, x2)  =  VL_IN_AA

U5_AA(x1, x2)  =  U5_AA(x2)

U6_AA(x1, x2, x3, x4)  =  U6_AA(x4)

U7_AA(x1, x2, x3, x4)  =  U7_AA(x4)

U2_A(x1, x2)  =  U2_A(x2)

U3_A(x1, x2)  =  U3_A(x2)

U4_A(x1, x2)  =  U4_A(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(6)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   VLCND_IN_G(N) -> U1_G(N, vl_in_ga(N, Xs))
   VLCND_IN_G(N) -> VL_IN_GA(N, Xs)
   VL_IN_GA(0, L) -> U5_GA(L, eq_in_ag(L, []))
   VL_IN_GA(0, L) -> EQ_IN_AG(L, [])
   VL_IN_GA(N, .(X2, Xs)) -> U6_GA(N, X2, Xs, p_in_ga(N, P))
   VL_IN_GA(N, .(X2, Xs)) -> P_IN_GA(N, P)
   U6_GA(N, X2, Xs, p_out_ga(N, P)) -> U7_GA(N, X2, Xs, vl_in_ga(P, Xs))
   U6_GA(N, X2, Xs, p_out_ga(N, P)) -> VL_IN_GA(P, Xs)
   U1_G(N, vl_out_ga(N, Xs)) -> U2_G(N, select_in_aga(X1, Xs, Ys))
   U1_G(N, vl_out_ga(N, Xs)) -> SELECT_IN_AGA(X1, Xs, Ys)
   SELECT_IN_AGA(X, .(Y, Xs), .(Y, Ys)) -> U8_AGA(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   SELECT_IN_AGA(X, .(Y, Xs), .(Y, Ys)) -> SELECT_IN_AGA(X, Xs, Ys)
   U2_G(N, select_out_aga(X1, Xs, Ys)) -> U3_G(N, vl_in_ag(M, Ys))
   U2_G(N, select_out_aga(X1, Xs, Ys)) -> VL_IN_AG(M, Ys)
   VL_IN_AG(0, L) -> U5_AG(L, eq_in_gg(L, []))
   VL_IN_AG(0, L) -> EQ_IN_GG(L, [])
   VL_IN_AG(N, .(X2, Xs)) -> U6_AG(N, X2, Xs, p_in_aa(N, P))
   VL_IN_AG(N, .(X2, Xs)) -> P_IN_AA(N, P)
   U6_AG(N, X2, Xs, p_out_aa(N, P)) -> U7_AG(N, X2, Xs, vl_in_ag(P, Xs))
   U6_AG(N, X2, Xs, p_out_aa(N, P)) -> VL_IN_AG(P, Xs)
   U3_G(N, vl_out_ag(M, Ys)) -> U4_G(N, vlcnd_in_a(M))
   U3_G(N, vl_out_ag(M, Ys)) -> VLCND_IN_A(M)
   VLCND_IN_A(N) -> U1_A(N, vl_in_aa(N, Xs))
   VLCND_IN_A(N) -> VL_IN_AA(N, Xs)
   VL_IN_AA(0, L) -> U5_AA(L, eq_in_ag(L, []))
   VL_IN_AA(0, L) -> EQ_IN_AG(L, [])
   VL_IN_AA(N, .(X2, Xs)) -> U6_AA(N, X2, Xs, p_in_aa(N, P))
   VL_IN_AA(N, .(X2, Xs)) -> P_IN_AA(N, P)
   U6_AA(N, X2, Xs, p_out_aa(N, P)) -> U7_AA(N, X2, Xs, vl_in_aa(P, Xs))
   U6_AA(N, X2, Xs, p_out_aa(N, P)) -> VL_IN_AA(P, Xs)
   U1_A(N, vl_out_aa(N, Xs)) -> U2_A(N, select_in_aga(X1, Xs, Ys))
   U1_A(N, vl_out_aa(N, Xs)) -> SELECT_IN_AGA(X1, Xs, Ys)
   U2_A(N, select_out_aga(X1, Xs, Ys)) -> U3_A(N, vl_in_ag(M, Ys))
   U2_A(N, select_out_aga(X1, Xs, Ys)) -> VL_IN_AG(M, Ys)
   U3_A(N, vl_out_ag(M, Ys)) -> U4_A(N, vlcnd_in_a(M))
   U3_A(N, vl_out_ag(M, Ys)) -> VLCND_IN_A(M)

The TRS R consists of the following rules:

   vlcnd_in_g(N) -> U1_g(N, vl_in_ga(N, Xs))
   vl_in_ga(0, L) -> U5_ga(L, eq_in_ag(L, []))
   eq_in_ag(X, X) -> eq_out_ag(X, X)
   U5_ga(L, eq_out_ag(L, [])) -> vl_out_ga(0, L)
   vl_in_ga(N, .(X2, Xs)) -> U6_ga(N, X2, Xs, p_in_ga(N, P))
   p_in_ga(0, 0) -> p_out_ga(0, 0)
   p_in_ga(s(X), X) -> p_out_ga(s(X), X)
   U6_ga(N, X2, Xs, p_out_ga(N, P)) -> U7_ga(N, X2, Xs, vl_in_ga(P, Xs))
   U7_ga(N, X2, Xs, vl_out_ga(P, Xs)) -> vl_out_ga(N, .(X2, Xs))
   U1_g(N, vl_out_ga(N, Xs)) -> U2_g(N, select_in_aga(X1, Xs, Ys))
   select_in_aga(X, .(Y, Xs), .(Y, Ys)) -> U8_aga(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   select_in_aga(X, .(X, Xs), Xs) -> select_out_aga(X, .(X, Xs), Xs)
   U8_aga(X, Y, Xs, Ys, select_out_aga(X, Xs, Ys)) -> select_out_aga(X, .(Y, Xs), .(Y, Ys))
   U2_g(N, select_out_aga(X1, Xs, Ys)) -> U3_g(N, vl_in_ag(M, Ys))
   vl_in_ag(0, L) -> U5_ag(L, eq_in_gg(L, []))
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(0, L)
   vl_in_ag(N, .(X2, Xs)) -> U6_ag(N, X2, Xs, p_in_aa(N, P))
   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)
   U6_ag(N, X2, Xs, p_out_aa(N, P)) -> U7_ag(N, X2, Xs, vl_in_ag(P, Xs))
   U7_ag(N, X2, Xs, vl_out_ag(P, Xs)) -> vl_out_ag(N, .(X2, Xs))
   U3_g(N, vl_out_ag(M, Ys)) -> U4_g(N, vlcnd_in_a(M))
   vlcnd_in_a(N) -> U1_a(N, vl_in_aa(N, Xs))
   vl_in_aa(0, L) -> U5_aa(L, eq_in_ag(L, []))
   U5_aa(L, eq_out_ag(L, [])) -> vl_out_aa(0, L)
   vl_in_aa(N, .(X2, Xs)) -> U6_aa(N, X2, Xs, p_in_aa(N, P))
   U6_aa(N, X2, Xs, p_out_aa(N, P)) -> U7_aa(N, X2, Xs, vl_in_aa(P, Xs))
   U7_aa(N, X2, Xs, vl_out_aa(P, Xs)) -> vl_out_aa(N, .(X2, Xs))
   U1_a(N, vl_out_aa(N, Xs)) -> U2_a(N, select_in_aga(X1, Xs, Ys))
   U2_a(N, select_out_aga(X1, Xs, Ys)) -> U3_a(N, vl_in_ag(M, Ys))
   U3_a(N, vl_out_ag(M, Ys)) -> U4_a(N, vlcnd_in_a(M))
   vlcnd_in_a(0) -> vlcnd_out_a(0)
   U4_a(N, vlcnd_out_a(M)) -> vlcnd_out_a(N)
   U4_g(N, vlcnd_out_a(M)) -> vlcnd_out_g(N)
   vlcnd_in_g(0) -> vlcnd_out_g(0)

The argument filtering Pi contains the following mapping:
vlcnd_in_g(x1)  =  vlcnd_in_g(x1)

U1_g(x1, x2)  =  U1_g(x1, x2)

vl_in_ga(x1, x2)  =  vl_in_ga(x1)

0  =  0

U5_ga(x1, x2)  =  U5_ga(x2)

eq_in_ag(x1, x2)  =  eq_in_ag(x2)

eq_out_ag(x1, x2)  =  eq_out_ag(x1, x2)

[]  =  []

vl_out_ga(x1, x2)  =  vl_out_ga(x1, x2)

U6_ga(x1, x2, x3, x4)  =  U6_ga(x1, x4)

p_in_ga(x1, x2)  =  p_in_ga(x1)

p_out_ga(x1, x2)  =  p_out_ga(x1, x2)

s(x1)  =  s(x1)

U7_ga(x1, x2, x3, x4)  =  U7_ga(x1, x4)

.(x1, x2)  =  .(x2)

U2_g(x1, x2)  =  U2_g(x1, x2)

select_in_aga(x1, x2, x3)  =  select_in_aga(x2)

U8_aga(x1, x2, x3, x4, x5)  =  U8_aga(x3, x5)

select_out_aga(x1, x2, x3)  =  select_out_aga(x2, x3)

U3_g(x1, x2)  =  U3_g(x1, x2)

vl_in_ag(x1, x2)  =  vl_in_ag(x2)

U5_ag(x1, x2)  =  U5_ag(x1, x2)

eq_in_gg(x1, x2)  =  eq_in_gg(x1, x2)

eq_out_gg(x1, x2)  =  eq_out_gg(x1, x2)

vl_out_ag(x1, x2)  =  vl_out_ag(x2)

U6_ag(x1, x2, x3, x4)  =  U6_ag(x3, x4)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

U7_ag(x1, x2, x3, x4)  =  U7_ag(x3, x4)

U4_g(x1, x2)  =  U4_g(x1, x2)

vlcnd_in_a(x1)  =  vlcnd_in_a

U1_a(x1, x2)  =  U1_a(x2)

vl_in_aa(x1, x2)  =  vl_in_aa

U5_aa(x1, x2)  =  U5_aa(x2)

vl_out_aa(x1, x2)  =  vl_out_aa(x2)

U6_aa(x1, x2, x3, x4)  =  U6_aa(x4)

U7_aa(x1, x2, x3, x4)  =  U7_aa(x4)

U2_a(x1, x2)  =  U2_a(x2)

U3_a(x1, x2)  =  U3_a(x2)

U4_a(x1, x2)  =  U4_a(x2)

vlcnd_out_a(x1)  =  vlcnd_out_a

vlcnd_out_g(x1)  =  vlcnd_out_g(x1)

VLCND_IN_G(x1)  =  VLCND_IN_G(x1)

U1_G(x1, x2)  =  U1_G(x1, x2)

VL_IN_GA(x1, x2)  =  VL_IN_GA(x1)

U5_GA(x1, x2)  =  U5_GA(x2)

EQ_IN_AG(x1, x2)  =  EQ_IN_AG(x2)

U6_GA(x1, x2, x3, x4)  =  U6_GA(x1, x4)

P_IN_GA(x1, x2)  =  P_IN_GA(x1)

U7_GA(x1, x2, x3, x4)  =  U7_GA(x1, x4)

U2_G(x1, x2)  =  U2_G(x1, x2)

SELECT_IN_AGA(x1, x2, x3)  =  SELECT_IN_AGA(x2)

U8_AGA(x1, x2, x3, x4, x5)  =  U8_AGA(x3, x5)

U3_G(x1, x2)  =  U3_G(x1, x2)

VL_IN_AG(x1, x2)  =  VL_IN_AG(x2)

U5_AG(x1, x2)  =  U5_AG(x1, x2)

EQ_IN_GG(x1, x2)  =  EQ_IN_GG(x1, x2)

U6_AG(x1, x2, x3, x4)  =  U6_AG(x3, x4)

P_IN_AA(x1, x2)  =  P_IN_AA

U7_AG(x1, x2, x3, x4)  =  U7_AG(x3, x4)

U4_G(x1, x2)  =  U4_G(x1, x2)

VLCND_IN_A(x1)  =  VLCND_IN_A

U1_A(x1, x2)  =  U1_A(x2)

VL_IN_AA(x1, x2)  =  VL_IN_AA

U5_AA(x1, x2)  =  U5_AA(x2)

U6_AA(x1, x2, x3, x4)  =  U6_AA(x4)

U7_AA(x1, x2, x3, x4)  =  U7_AA(x4)

U2_A(x1, x2)  =  U2_A(x2)

U3_A(x1, x2)  =  U3_A(x2)

U4_A(x1, x2)  =  U4_A(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 5 SCCs with 25 less nodes.
----------------------------------------

(8)
Complex Obligation (AND)

----------------------------------------

(9)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   VL_IN_AA(N, .(X2, Xs)) -> U6_AA(N, X2, Xs, p_in_aa(N, P))
   U6_AA(N, X2, Xs, p_out_aa(N, P)) -> VL_IN_AA(P, Xs)

The TRS R consists of the following rules:

   vlcnd_in_g(N) -> U1_g(N, vl_in_ga(N, Xs))
   vl_in_ga(0, L) -> U5_ga(L, eq_in_ag(L, []))
   eq_in_ag(X, X) -> eq_out_ag(X, X)
   U5_ga(L, eq_out_ag(L, [])) -> vl_out_ga(0, L)
   vl_in_ga(N, .(X2, Xs)) -> U6_ga(N, X2, Xs, p_in_ga(N, P))
   p_in_ga(0, 0) -> p_out_ga(0, 0)
   p_in_ga(s(X), X) -> p_out_ga(s(X), X)
   U6_ga(N, X2, Xs, p_out_ga(N, P)) -> U7_ga(N, X2, Xs, vl_in_ga(P, Xs))
   U7_ga(N, X2, Xs, vl_out_ga(P, Xs)) -> vl_out_ga(N, .(X2, Xs))
   U1_g(N, vl_out_ga(N, Xs)) -> U2_g(N, select_in_aga(X1, Xs, Ys))
   select_in_aga(X, .(Y, Xs), .(Y, Ys)) -> U8_aga(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   select_in_aga(X, .(X, Xs), Xs) -> select_out_aga(X, .(X, Xs), Xs)
   U8_aga(X, Y, Xs, Ys, select_out_aga(X, Xs, Ys)) -> select_out_aga(X, .(Y, Xs), .(Y, Ys))
   U2_g(N, select_out_aga(X1, Xs, Ys)) -> U3_g(N, vl_in_ag(M, Ys))
   vl_in_ag(0, L) -> U5_ag(L, eq_in_gg(L, []))
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(0, L)
   vl_in_ag(N, .(X2, Xs)) -> U6_ag(N, X2, Xs, p_in_aa(N, P))
   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)
   U6_ag(N, X2, Xs, p_out_aa(N, P)) -> U7_ag(N, X2, Xs, vl_in_ag(P, Xs))
   U7_ag(N, X2, Xs, vl_out_ag(P, Xs)) -> vl_out_ag(N, .(X2, Xs))
   U3_g(N, vl_out_ag(M, Ys)) -> U4_g(N, vlcnd_in_a(M))
   vlcnd_in_a(N) -> U1_a(N, vl_in_aa(N, Xs))
   vl_in_aa(0, L) -> U5_aa(L, eq_in_ag(L, []))
   U5_aa(L, eq_out_ag(L, [])) -> vl_out_aa(0, L)
   vl_in_aa(N, .(X2, Xs)) -> U6_aa(N, X2, Xs, p_in_aa(N, P))
   U6_aa(N, X2, Xs, p_out_aa(N, P)) -> U7_aa(N, X2, Xs, vl_in_aa(P, Xs))
   U7_aa(N, X2, Xs, vl_out_aa(P, Xs)) -> vl_out_aa(N, .(X2, Xs))
   U1_a(N, vl_out_aa(N, Xs)) -> U2_a(N, select_in_aga(X1, Xs, Ys))
   U2_a(N, select_out_aga(X1, Xs, Ys)) -> U3_a(N, vl_in_ag(M, Ys))
   U3_a(N, vl_out_ag(M, Ys)) -> U4_a(N, vlcnd_in_a(M))
   vlcnd_in_a(0) -> vlcnd_out_a(0)
   U4_a(N, vlcnd_out_a(M)) -> vlcnd_out_a(N)
   U4_g(N, vlcnd_out_a(M)) -> vlcnd_out_g(N)
   vlcnd_in_g(0) -> vlcnd_out_g(0)

The argument filtering Pi contains the following mapping:
vlcnd_in_g(x1)  =  vlcnd_in_g(x1)

U1_g(x1, x2)  =  U1_g(x1, x2)

vl_in_ga(x1, x2)  =  vl_in_ga(x1)

0  =  0

U5_ga(x1, x2)  =  U5_ga(x2)

eq_in_ag(x1, x2)  =  eq_in_ag(x2)

eq_out_ag(x1, x2)  =  eq_out_ag(x1, x2)

[]  =  []

vl_out_ga(x1, x2)  =  vl_out_ga(x1, x2)

U6_ga(x1, x2, x3, x4)  =  U6_ga(x1, x4)

p_in_ga(x1, x2)  =  p_in_ga(x1)

p_out_ga(x1, x2)  =  p_out_ga(x1, x2)

s(x1)  =  s(x1)

U7_ga(x1, x2, x3, x4)  =  U7_ga(x1, x4)

.(x1, x2)  =  .(x2)

U2_g(x1, x2)  =  U2_g(x1, x2)

select_in_aga(x1, x2, x3)  =  select_in_aga(x2)

U8_aga(x1, x2, x3, x4, x5)  =  U8_aga(x3, x5)

select_out_aga(x1, x2, x3)  =  select_out_aga(x2, x3)

U3_g(x1, x2)  =  U3_g(x1, x2)

vl_in_ag(x1, x2)  =  vl_in_ag(x2)

U5_ag(x1, x2)  =  U5_ag(x1, x2)

eq_in_gg(x1, x2)  =  eq_in_gg(x1, x2)

eq_out_gg(x1, x2)  =  eq_out_gg(x1, x2)

vl_out_ag(x1, x2)  =  vl_out_ag(x2)

U6_ag(x1, x2, x3, x4)  =  U6_ag(x3, x4)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

U7_ag(x1, x2, x3, x4)  =  U7_ag(x3, x4)

U4_g(x1, x2)  =  U4_g(x1, x2)

vlcnd_in_a(x1)  =  vlcnd_in_a

U1_a(x1, x2)  =  U1_a(x2)

vl_in_aa(x1, x2)  =  vl_in_aa

U5_aa(x1, x2)  =  U5_aa(x2)

vl_out_aa(x1, x2)  =  vl_out_aa(x2)

U6_aa(x1, x2, x3, x4)  =  U6_aa(x4)

U7_aa(x1, x2, x3, x4)  =  U7_aa(x4)

U2_a(x1, x2)  =  U2_a(x2)

U3_a(x1, x2)  =  U3_a(x2)

U4_a(x1, x2)  =  U4_a(x2)

vlcnd_out_a(x1)  =  vlcnd_out_a

vlcnd_out_g(x1)  =  vlcnd_out_g(x1)

VL_IN_AA(x1, x2)  =  VL_IN_AA

U6_AA(x1, x2, x3, x4)  =  U6_AA(x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(10) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(11)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   VL_IN_AA(N, .(X2, Xs)) -> U6_AA(N, X2, Xs, p_in_aa(N, P))
   U6_AA(N, X2, Xs, p_out_aa(N, P)) -> VL_IN_AA(P, Xs)

The TRS R consists of the following rules:

   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)

The argument filtering Pi contains the following mapping:
0  =  0

s(x1)  =  s(x1)

.(x1, x2)  =  .(x2)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

VL_IN_AA(x1, x2)  =  VL_IN_AA

U6_AA(x1, x2, x3, x4)  =  U6_AA(x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(12) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   VL_IN_AA -> U6_AA(p_in_aa)
   U6_AA(p_out_aa) -> VL_IN_AA

The TRS R consists of the following rules:

   p_in_aa -> p_out_aa

The set Q consists of the following terms:

   p_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(14) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule VL_IN_AA -> U6_AA(p_in_aa) at position [0] we obtained the following new rules [LPAR04]:

   (VL_IN_AA -> U6_AA(p_out_aa),VL_IN_AA -> U6_AA(p_out_aa))


----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U6_AA(p_out_aa) -> VL_IN_AA
   VL_IN_AA -> U6_AA(p_out_aa)

The TRS R consists of the following rules:

   p_in_aa -> p_out_aa

The set Q consists of the following terms:

   p_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(16) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(17)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U6_AA(p_out_aa) -> VL_IN_AA
   VL_IN_AA -> U6_AA(p_out_aa)

R is empty.
The set Q consists of the following terms:

   p_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(18) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   p_in_aa


----------------------------------------

(19)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U6_AA(p_out_aa) -> VL_IN_AA
   VL_IN_AA -> U6_AA(p_out_aa)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(20) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by narrowing to the left:

s = VL_IN_AA evaluates to  t =VL_IN_AA

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

VL_IN_AA -> U6_AA(p_out_aa)
with rule VL_IN_AA -> U6_AA(p_out_aa) at position [] and matcher [ ]

U6_AA(p_out_aa) -> VL_IN_AA
with rule U6_AA(p_out_aa) -> VL_IN_AA

Now applying the matcher to the start term leads to a term which is equal to the last term in the rewriting sequence


All these steps are and every following step will be a correct step w.r.t to Q.




----------------------------------------

(21)
NO

----------------------------------------

(22)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   VL_IN_AG(N, .(X2, Xs)) -> U6_AG(N, X2, Xs, p_in_aa(N, P))
   U6_AG(N, X2, Xs, p_out_aa(N, P)) -> VL_IN_AG(P, Xs)

The TRS R consists of the following rules:

   vlcnd_in_g(N) -> U1_g(N, vl_in_ga(N, Xs))
   vl_in_ga(0, L) -> U5_ga(L, eq_in_ag(L, []))
   eq_in_ag(X, X) -> eq_out_ag(X, X)
   U5_ga(L, eq_out_ag(L, [])) -> vl_out_ga(0, L)
   vl_in_ga(N, .(X2, Xs)) -> U6_ga(N, X2, Xs, p_in_ga(N, P))
   p_in_ga(0, 0) -> p_out_ga(0, 0)
   p_in_ga(s(X), X) -> p_out_ga(s(X), X)
   U6_ga(N, X2, Xs, p_out_ga(N, P)) -> U7_ga(N, X2, Xs, vl_in_ga(P, Xs))
   U7_ga(N, X2, Xs, vl_out_ga(P, Xs)) -> vl_out_ga(N, .(X2, Xs))
   U1_g(N, vl_out_ga(N, Xs)) -> U2_g(N, select_in_aga(X1, Xs, Ys))
   select_in_aga(X, .(Y, Xs), .(Y, Ys)) -> U8_aga(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   select_in_aga(X, .(X, Xs), Xs) -> select_out_aga(X, .(X, Xs), Xs)
   U8_aga(X, Y, Xs, Ys, select_out_aga(X, Xs, Ys)) -> select_out_aga(X, .(Y, Xs), .(Y, Ys))
   U2_g(N, select_out_aga(X1, Xs, Ys)) -> U3_g(N, vl_in_ag(M, Ys))
   vl_in_ag(0, L) -> U5_ag(L, eq_in_gg(L, []))
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(0, L)
   vl_in_ag(N, .(X2, Xs)) -> U6_ag(N, X2, Xs, p_in_aa(N, P))
   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)
   U6_ag(N, X2, Xs, p_out_aa(N, P)) -> U7_ag(N, X2, Xs, vl_in_ag(P, Xs))
   U7_ag(N, X2, Xs, vl_out_ag(P, Xs)) -> vl_out_ag(N, .(X2, Xs))
   U3_g(N, vl_out_ag(M, Ys)) -> U4_g(N, vlcnd_in_a(M))
   vlcnd_in_a(N) -> U1_a(N, vl_in_aa(N, Xs))
   vl_in_aa(0, L) -> U5_aa(L, eq_in_ag(L, []))
   U5_aa(L, eq_out_ag(L, [])) -> vl_out_aa(0, L)
   vl_in_aa(N, .(X2, Xs)) -> U6_aa(N, X2, Xs, p_in_aa(N, P))
   U6_aa(N, X2, Xs, p_out_aa(N, P)) -> U7_aa(N, X2, Xs, vl_in_aa(P, Xs))
   U7_aa(N, X2, Xs, vl_out_aa(P, Xs)) -> vl_out_aa(N, .(X2, Xs))
   U1_a(N, vl_out_aa(N, Xs)) -> U2_a(N, select_in_aga(X1, Xs, Ys))
   U2_a(N, select_out_aga(X1, Xs, Ys)) -> U3_a(N, vl_in_ag(M, Ys))
   U3_a(N, vl_out_ag(M, Ys)) -> U4_a(N, vlcnd_in_a(M))
   vlcnd_in_a(0) -> vlcnd_out_a(0)
   U4_a(N, vlcnd_out_a(M)) -> vlcnd_out_a(N)
   U4_g(N, vlcnd_out_a(M)) -> vlcnd_out_g(N)
   vlcnd_in_g(0) -> vlcnd_out_g(0)

The argument filtering Pi contains the following mapping:
vlcnd_in_g(x1)  =  vlcnd_in_g(x1)

U1_g(x1, x2)  =  U1_g(x1, x2)

vl_in_ga(x1, x2)  =  vl_in_ga(x1)

0  =  0

U5_ga(x1, x2)  =  U5_ga(x2)

eq_in_ag(x1, x2)  =  eq_in_ag(x2)

eq_out_ag(x1, x2)  =  eq_out_ag(x1, x2)

[]  =  []

vl_out_ga(x1, x2)  =  vl_out_ga(x1, x2)

U6_ga(x1, x2, x3, x4)  =  U6_ga(x1, x4)

p_in_ga(x1, x2)  =  p_in_ga(x1)

p_out_ga(x1, x2)  =  p_out_ga(x1, x2)

s(x1)  =  s(x1)

U7_ga(x1, x2, x3, x4)  =  U7_ga(x1, x4)

.(x1, x2)  =  .(x2)

U2_g(x1, x2)  =  U2_g(x1, x2)

select_in_aga(x1, x2, x3)  =  select_in_aga(x2)

U8_aga(x1, x2, x3, x4, x5)  =  U8_aga(x3, x5)

select_out_aga(x1, x2, x3)  =  select_out_aga(x2, x3)

U3_g(x1, x2)  =  U3_g(x1, x2)

vl_in_ag(x1, x2)  =  vl_in_ag(x2)

U5_ag(x1, x2)  =  U5_ag(x1, x2)

eq_in_gg(x1, x2)  =  eq_in_gg(x1, x2)

eq_out_gg(x1, x2)  =  eq_out_gg(x1, x2)

vl_out_ag(x1, x2)  =  vl_out_ag(x2)

U6_ag(x1, x2, x3, x4)  =  U6_ag(x3, x4)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

U7_ag(x1, x2, x3, x4)  =  U7_ag(x3, x4)

U4_g(x1, x2)  =  U4_g(x1, x2)

vlcnd_in_a(x1)  =  vlcnd_in_a

U1_a(x1, x2)  =  U1_a(x2)

vl_in_aa(x1, x2)  =  vl_in_aa

U5_aa(x1, x2)  =  U5_aa(x2)

vl_out_aa(x1, x2)  =  vl_out_aa(x2)

U6_aa(x1, x2, x3, x4)  =  U6_aa(x4)

U7_aa(x1, x2, x3, x4)  =  U7_aa(x4)

U2_a(x1, x2)  =  U2_a(x2)

U3_a(x1, x2)  =  U3_a(x2)

U4_a(x1, x2)  =  U4_a(x2)

vlcnd_out_a(x1)  =  vlcnd_out_a

vlcnd_out_g(x1)  =  vlcnd_out_g(x1)

VL_IN_AG(x1, x2)  =  VL_IN_AG(x2)

U6_AG(x1, x2, x3, x4)  =  U6_AG(x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(23) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(24)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   VL_IN_AG(N, .(X2, Xs)) -> U6_AG(N, X2, Xs, p_in_aa(N, P))
   U6_AG(N, X2, Xs, p_out_aa(N, P)) -> VL_IN_AG(P, Xs)

The TRS R consists of the following rules:

   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)

The argument filtering Pi contains the following mapping:
0  =  0

s(x1)  =  s(x1)

.(x1, x2)  =  .(x2)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

VL_IN_AG(x1, x2)  =  VL_IN_AG(x2)

U6_AG(x1, x2, x3, x4)  =  U6_AG(x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(25) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(26)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   VL_IN_AG(.(Xs)) -> U6_AG(Xs, p_in_aa)
   U6_AG(Xs, p_out_aa) -> VL_IN_AG(Xs)

The TRS R consists of the following rules:

   p_in_aa -> p_out_aa

The set Q consists of the following terms:

   p_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(27) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*U6_AG(Xs, p_out_aa) -> VL_IN_AG(Xs)
The graph contains the following edges 1 >= 1


*VL_IN_AG(.(Xs)) -> U6_AG(Xs, p_in_aa)
The graph contains the following edges 1 > 1


----------------------------------------

(28)
YES

----------------------------------------

(29)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SELECT_IN_AGA(X, .(Y, Xs), .(Y, Ys)) -> SELECT_IN_AGA(X, Xs, Ys)

The TRS R consists of the following rules:

   vlcnd_in_g(N) -> U1_g(N, vl_in_ga(N, Xs))
   vl_in_ga(0, L) -> U5_ga(L, eq_in_ag(L, []))
   eq_in_ag(X, X) -> eq_out_ag(X, X)
   U5_ga(L, eq_out_ag(L, [])) -> vl_out_ga(0, L)
   vl_in_ga(N, .(X2, Xs)) -> U6_ga(N, X2, Xs, p_in_ga(N, P))
   p_in_ga(0, 0) -> p_out_ga(0, 0)
   p_in_ga(s(X), X) -> p_out_ga(s(X), X)
   U6_ga(N, X2, Xs, p_out_ga(N, P)) -> U7_ga(N, X2, Xs, vl_in_ga(P, Xs))
   U7_ga(N, X2, Xs, vl_out_ga(P, Xs)) -> vl_out_ga(N, .(X2, Xs))
   U1_g(N, vl_out_ga(N, Xs)) -> U2_g(N, select_in_aga(X1, Xs, Ys))
   select_in_aga(X, .(Y, Xs), .(Y, Ys)) -> U8_aga(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   select_in_aga(X, .(X, Xs), Xs) -> select_out_aga(X, .(X, Xs), Xs)
   U8_aga(X, Y, Xs, Ys, select_out_aga(X, Xs, Ys)) -> select_out_aga(X, .(Y, Xs), .(Y, Ys))
   U2_g(N, select_out_aga(X1, Xs, Ys)) -> U3_g(N, vl_in_ag(M, Ys))
   vl_in_ag(0, L) -> U5_ag(L, eq_in_gg(L, []))
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(0, L)
   vl_in_ag(N, .(X2, Xs)) -> U6_ag(N, X2, Xs, p_in_aa(N, P))
   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)
   U6_ag(N, X2, Xs, p_out_aa(N, P)) -> U7_ag(N, X2, Xs, vl_in_ag(P, Xs))
   U7_ag(N, X2, Xs, vl_out_ag(P, Xs)) -> vl_out_ag(N, .(X2, Xs))
   U3_g(N, vl_out_ag(M, Ys)) -> U4_g(N, vlcnd_in_a(M))
   vlcnd_in_a(N) -> U1_a(N, vl_in_aa(N, Xs))
   vl_in_aa(0, L) -> U5_aa(L, eq_in_ag(L, []))
   U5_aa(L, eq_out_ag(L, [])) -> vl_out_aa(0, L)
   vl_in_aa(N, .(X2, Xs)) -> U6_aa(N, X2, Xs, p_in_aa(N, P))
   U6_aa(N, X2, Xs, p_out_aa(N, P)) -> U7_aa(N, X2, Xs, vl_in_aa(P, Xs))
   U7_aa(N, X2, Xs, vl_out_aa(P, Xs)) -> vl_out_aa(N, .(X2, Xs))
   U1_a(N, vl_out_aa(N, Xs)) -> U2_a(N, select_in_aga(X1, Xs, Ys))
   U2_a(N, select_out_aga(X1, Xs, Ys)) -> U3_a(N, vl_in_ag(M, Ys))
   U3_a(N, vl_out_ag(M, Ys)) -> U4_a(N, vlcnd_in_a(M))
   vlcnd_in_a(0) -> vlcnd_out_a(0)
   U4_a(N, vlcnd_out_a(M)) -> vlcnd_out_a(N)
   U4_g(N, vlcnd_out_a(M)) -> vlcnd_out_g(N)
   vlcnd_in_g(0) -> vlcnd_out_g(0)

The argument filtering Pi contains the following mapping:
vlcnd_in_g(x1)  =  vlcnd_in_g(x1)

U1_g(x1, x2)  =  U1_g(x1, x2)

vl_in_ga(x1, x2)  =  vl_in_ga(x1)

0  =  0

U5_ga(x1, x2)  =  U5_ga(x2)

eq_in_ag(x1, x2)  =  eq_in_ag(x2)

eq_out_ag(x1, x2)  =  eq_out_ag(x1, x2)

[]  =  []

vl_out_ga(x1, x2)  =  vl_out_ga(x1, x2)

U6_ga(x1, x2, x3, x4)  =  U6_ga(x1, x4)

p_in_ga(x1, x2)  =  p_in_ga(x1)

p_out_ga(x1, x2)  =  p_out_ga(x1, x2)

s(x1)  =  s(x1)

U7_ga(x1, x2, x3, x4)  =  U7_ga(x1, x4)

.(x1, x2)  =  .(x2)

U2_g(x1, x2)  =  U2_g(x1, x2)

select_in_aga(x1, x2, x3)  =  select_in_aga(x2)

U8_aga(x1, x2, x3, x4, x5)  =  U8_aga(x3, x5)

select_out_aga(x1, x2, x3)  =  select_out_aga(x2, x3)

U3_g(x1, x2)  =  U3_g(x1, x2)

vl_in_ag(x1, x2)  =  vl_in_ag(x2)

U5_ag(x1, x2)  =  U5_ag(x1, x2)

eq_in_gg(x1, x2)  =  eq_in_gg(x1, x2)

eq_out_gg(x1, x2)  =  eq_out_gg(x1, x2)

vl_out_ag(x1, x2)  =  vl_out_ag(x2)

U6_ag(x1, x2, x3, x4)  =  U6_ag(x3, x4)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

U7_ag(x1, x2, x3, x4)  =  U7_ag(x3, x4)

U4_g(x1, x2)  =  U4_g(x1, x2)

vlcnd_in_a(x1)  =  vlcnd_in_a

U1_a(x1, x2)  =  U1_a(x2)

vl_in_aa(x1, x2)  =  vl_in_aa

U5_aa(x1, x2)  =  U5_aa(x2)

vl_out_aa(x1, x2)  =  vl_out_aa(x2)

U6_aa(x1, x2, x3, x4)  =  U6_aa(x4)

U7_aa(x1, x2, x3, x4)  =  U7_aa(x4)

U2_a(x1, x2)  =  U2_a(x2)

U3_a(x1, x2)  =  U3_a(x2)

U4_a(x1, x2)  =  U4_a(x2)

vlcnd_out_a(x1)  =  vlcnd_out_a

vlcnd_out_g(x1)  =  vlcnd_out_g(x1)

SELECT_IN_AGA(x1, x2, x3)  =  SELECT_IN_AGA(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(30) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(31)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SELECT_IN_AGA(X, .(Y, Xs), .(Y, Ys)) -> SELECT_IN_AGA(X, Xs, Ys)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x2)

SELECT_IN_AGA(x1, x2, x3)  =  SELECT_IN_AGA(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(32) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(33)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   SELECT_IN_AGA(.(Xs)) -> SELECT_IN_AGA(Xs)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(34) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*SELECT_IN_AGA(.(Xs)) -> SELECT_IN_AGA(Xs)
The graph contains the following edges 1 > 1


----------------------------------------

(35)
YES

----------------------------------------

(36)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U1_A(N, vl_out_aa(N, Xs)) -> U2_A(N, select_in_aga(X1, Xs, Ys))
   U2_A(N, select_out_aga(X1, Xs, Ys)) -> U3_A(N, vl_in_ag(M, Ys))
   U3_A(N, vl_out_ag(M, Ys)) -> VLCND_IN_A(M)
   VLCND_IN_A(N) -> U1_A(N, vl_in_aa(N, Xs))

The TRS R consists of the following rules:

   vlcnd_in_g(N) -> U1_g(N, vl_in_ga(N, Xs))
   vl_in_ga(0, L) -> U5_ga(L, eq_in_ag(L, []))
   eq_in_ag(X, X) -> eq_out_ag(X, X)
   U5_ga(L, eq_out_ag(L, [])) -> vl_out_ga(0, L)
   vl_in_ga(N, .(X2, Xs)) -> U6_ga(N, X2, Xs, p_in_ga(N, P))
   p_in_ga(0, 0) -> p_out_ga(0, 0)
   p_in_ga(s(X), X) -> p_out_ga(s(X), X)
   U6_ga(N, X2, Xs, p_out_ga(N, P)) -> U7_ga(N, X2, Xs, vl_in_ga(P, Xs))
   U7_ga(N, X2, Xs, vl_out_ga(P, Xs)) -> vl_out_ga(N, .(X2, Xs))
   U1_g(N, vl_out_ga(N, Xs)) -> U2_g(N, select_in_aga(X1, Xs, Ys))
   select_in_aga(X, .(Y, Xs), .(Y, Ys)) -> U8_aga(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   select_in_aga(X, .(X, Xs), Xs) -> select_out_aga(X, .(X, Xs), Xs)
   U8_aga(X, Y, Xs, Ys, select_out_aga(X, Xs, Ys)) -> select_out_aga(X, .(Y, Xs), .(Y, Ys))
   U2_g(N, select_out_aga(X1, Xs, Ys)) -> U3_g(N, vl_in_ag(M, Ys))
   vl_in_ag(0, L) -> U5_ag(L, eq_in_gg(L, []))
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(0, L)
   vl_in_ag(N, .(X2, Xs)) -> U6_ag(N, X2, Xs, p_in_aa(N, P))
   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)
   U6_ag(N, X2, Xs, p_out_aa(N, P)) -> U7_ag(N, X2, Xs, vl_in_ag(P, Xs))
   U7_ag(N, X2, Xs, vl_out_ag(P, Xs)) -> vl_out_ag(N, .(X2, Xs))
   U3_g(N, vl_out_ag(M, Ys)) -> U4_g(N, vlcnd_in_a(M))
   vlcnd_in_a(N) -> U1_a(N, vl_in_aa(N, Xs))
   vl_in_aa(0, L) -> U5_aa(L, eq_in_ag(L, []))
   U5_aa(L, eq_out_ag(L, [])) -> vl_out_aa(0, L)
   vl_in_aa(N, .(X2, Xs)) -> U6_aa(N, X2, Xs, p_in_aa(N, P))
   U6_aa(N, X2, Xs, p_out_aa(N, P)) -> U7_aa(N, X2, Xs, vl_in_aa(P, Xs))
   U7_aa(N, X2, Xs, vl_out_aa(P, Xs)) -> vl_out_aa(N, .(X2, Xs))
   U1_a(N, vl_out_aa(N, Xs)) -> U2_a(N, select_in_aga(X1, Xs, Ys))
   U2_a(N, select_out_aga(X1, Xs, Ys)) -> U3_a(N, vl_in_ag(M, Ys))
   U3_a(N, vl_out_ag(M, Ys)) -> U4_a(N, vlcnd_in_a(M))
   vlcnd_in_a(0) -> vlcnd_out_a(0)
   U4_a(N, vlcnd_out_a(M)) -> vlcnd_out_a(N)
   U4_g(N, vlcnd_out_a(M)) -> vlcnd_out_g(N)
   vlcnd_in_g(0) -> vlcnd_out_g(0)

The argument filtering Pi contains the following mapping:
vlcnd_in_g(x1)  =  vlcnd_in_g(x1)

U1_g(x1, x2)  =  U1_g(x1, x2)

vl_in_ga(x1, x2)  =  vl_in_ga(x1)

0  =  0

U5_ga(x1, x2)  =  U5_ga(x2)

eq_in_ag(x1, x2)  =  eq_in_ag(x2)

eq_out_ag(x1, x2)  =  eq_out_ag(x1, x2)

[]  =  []

vl_out_ga(x1, x2)  =  vl_out_ga(x1, x2)

U6_ga(x1, x2, x3, x4)  =  U6_ga(x1, x4)

p_in_ga(x1, x2)  =  p_in_ga(x1)

p_out_ga(x1, x2)  =  p_out_ga(x1, x2)

s(x1)  =  s(x1)

U7_ga(x1, x2, x3, x4)  =  U7_ga(x1, x4)

.(x1, x2)  =  .(x2)

U2_g(x1, x2)  =  U2_g(x1, x2)

select_in_aga(x1, x2, x3)  =  select_in_aga(x2)

U8_aga(x1, x2, x3, x4, x5)  =  U8_aga(x3, x5)

select_out_aga(x1, x2, x3)  =  select_out_aga(x2, x3)

U3_g(x1, x2)  =  U3_g(x1, x2)

vl_in_ag(x1, x2)  =  vl_in_ag(x2)

U5_ag(x1, x2)  =  U5_ag(x1, x2)

eq_in_gg(x1, x2)  =  eq_in_gg(x1, x2)

eq_out_gg(x1, x2)  =  eq_out_gg(x1, x2)

vl_out_ag(x1, x2)  =  vl_out_ag(x2)

U6_ag(x1, x2, x3, x4)  =  U6_ag(x3, x4)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

U7_ag(x1, x2, x3, x4)  =  U7_ag(x3, x4)

U4_g(x1, x2)  =  U4_g(x1, x2)

vlcnd_in_a(x1)  =  vlcnd_in_a

U1_a(x1, x2)  =  U1_a(x2)

vl_in_aa(x1, x2)  =  vl_in_aa

U5_aa(x1, x2)  =  U5_aa(x2)

vl_out_aa(x1, x2)  =  vl_out_aa(x2)

U6_aa(x1, x2, x3, x4)  =  U6_aa(x4)

U7_aa(x1, x2, x3, x4)  =  U7_aa(x4)

U2_a(x1, x2)  =  U2_a(x2)

U3_a(x1, x2)  =  U3_a(x2)

U4_a(x1, x2)  =  U4_a(x2)

vlcnd_out_a(x1)  =  vlcnd_out_a

vlcnd_out_g(x1)  =  vlcnd_out_g(x1)

VLCND_IN_A(x1)  =  VLCND_IN_A

U1_A(x1, x2)  =  U1_A(x2)

U2_A(x1, x2)  =  U2_A(x2)

U3_A(x1, x2)  =  U3_A(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(37) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(38)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U1_A(N, vl_out_aa(N, Xs)) -> U2_A(N, select_in_aga(X1, Xs, Ys))
   U2_A(N, select_out_aga(X1, Xs, Ys)) -> U3_A(N, vl_in_ag(M, Ys))
   U3_A(N, vl_out_ag(M, Ys)) -> VLCND_IN_A(M)
   VLCND_IN_A(N) -> U1_A(N, vl_in_aa(N, Xs))

The TRS R consists of the following rules:

   select_in_aga(X, .(Y, Xs), .(Y, Ys)) -> U8_aga(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   select_in_aga(X, .(X, Xs), Xs) -> select_out_aga(X, .(X, Xs), Xs)
   vl_in_ag(0, L) -> U5_ag(L, eq_in_gg(L, []))
   vl_in_ag(N, .(X2, Xs)) -> U6_ag(N, X2, Xs, p_in_aa(N, P))
   vl_in_aa(0, L) -> U5_aa(L, eq_in_ag(L, []))
   vl_in_aa(N, .(X2, Xs)) -> U6_aa(N, X2, Xs, p_in_aa(N, P))
   U8_aga(X, Y, Xs, Ys, select_out_aga(X, Xs, Ys)) -> select_out_aga(X, .(Y, Xs), .(Y, Ys))
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(0, L)
   U6_ag(N, X2, Xs, p_out_aa(N, P)) -> U7_ag(N, X2, Xs, vl_in_ag(P, Xs))
   U5_aa(L, eq_out_ag(L, [])) -> vl_out_aa(0, L)
   U6_aa(N, X2, Xs, p_out_aa(N, P)) -> U7_aa(N, X2, Xs, vl_in_aa(P, Xs))
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)
   U7_ag(N, X2, Xs, vl_out_ag(P, Xs)) -> vl_out_ag(N, .(X2, Xs))
   eq_in_ag(X, X) -> eq_out_ag(X, X)
   U7_aa(N, X2, Xs, vl_out_aa(P, Xs)) -> vl_out_aa(N, .(X2, Xs))

The argument filtering Pi contains the following mapping:
0  =  0

eq_in_ag(x1, x2)  =  eq_in_ag(x2)

eq_out_ag(x1, x2)  =  eq_out_ag(x1, x2)

[]  =  []

s(x1)  =  s(x1)

.(x1, x2)  =  .(x2)

select_in_aga(x1, x2, x3)  =  select_in_aga(x2)

U8_aga(x1, x2, x3, x4, x5)  =  U8_aga(x3, x5)

select_out_aga(x1, x2, x3)  =  select_out_aga(x2, x3)

vl_in_ag(x1, x2)  =  vl_in_ag(x2)

U5_ag(x1, x2)  =  U5_ag(x1, x2)

eq_in_gg(x1, x2)  =  eq_in_gg(x1, x2)

eq_out_gg(x1, x2)  =  eq_out_gg(x1, x2)

vl_out_ag(x1, x2)  =  vl_out_ag(x2)

U6_ag(x1, x2, x3, x4)  =  U6_ag(x3, x4)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

U7_ag(x1, x2, x3, x4)  =  U7_ag(x3, x4)

vl_in_aa(x1, x2)  =  vl_in_aa

U5_aa(x1, x2)  =  U5_aa(x2)

vl_out_aa(x1, x2)  =  vl_out_aa(x2)

U6_aa(x1, x2, x3, x4)  =  U6_aa(x4)

U7_aa(x1, x2, x3, x4)  =  U7_aa(x4)

VLCND_IN_A(x1)  =  VLCND_IN_A

U1_A(x1, x2)  =  U1_A(x2)

U2_A(x1, x2)  =  U2_A(x2)

U3_A(x1, x2)  =  U3_A(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(39) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(40)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U1_A(vl_out_aa(Xs)) -> U2_A(select_in_aga(Xs))
   U2_A(select_out_aga(Xs, Ys)) -> U3_A(vl_in_ag(Ys))
   U3_A(vl_out_ag(Ys)) -> VLCND_IN_A
   VLCND_IN_A -> U1_A(vl_in_aa)

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(Xs, select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(.(Xs), Xs)
   vl_in_ag(L) -> U5_ag(L, eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(Xs, select_out_aga(Xs, Ys)) -> select_out_aga(.(Xs), .(Ys))
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(L)
   U6_ag(Xs, p_out_aa) -> U7_ag(Xs, vl_in_ag(Xs))
   U5_aa(eq_out_ag(L, [])) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   p_in_aa -> p_out_aa
   U7_ag(Xs, vl_out_ag(Xs)) -> vl_out_ag(.(Xs))
   eq_in_ag(X) -> eq_out_ag(X, X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0, x1)
   U5_ag(x0, x1)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0, x1)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(41) TransformationProof (SOUND)
By narrowing [LPAR04] the rule U1_A(vl_out_aa(Xs)) -> U2_A(select_in_aga(Xs)) at position [0] we obtained the following new rules [LPAR04]:

   (U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(x0, select_in_aga(x0))),U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(x0, select_in_aga(x0))))
   (U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(.(x0), x0)),U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(.(x0), x0)))


----------------------------------------

(42)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U2_A(select_out_aga(Xs, Ys)) -> U3_A(vl_in_ag(Ys))
   U3_A(vl_out_ag(Ys)) -> VLCND_IN_A
   VLCND_IN_A -> U1_A(vl_in_aa)
   U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(x0, select_in_aga(x0)))
   U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(.(x0), x0))

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(Xs, select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(.(Xs), Xs)
   vl_in_ag(L) -> U5_ag(L, eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(Xs, select_out_aga(Xs, Ys)) -> select_out_aga(.(Xs), .(Ys))
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(L)
   U6_ag(Xs, p_out_aa) -> U7_ag(Xs, vl_in_ag(Xs))
   U5_aa(eq_out_ag(L, [])) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   p_in_aa -> p_out_aa
   U7_ag(Xs, vl_out_ag(Xs)) -> vl_out_ag(.(Xs))
   eq_in_ag(X) -> eq_out_ag(X, X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0, x1)
   U5_ag(x0, x1)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0, x1)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(43) TransformationProof (SOUND)
By narrowing [LPAR04] the rule U2_A(select_out_aga(Xs, Ys)) -> U3_A(vl_in_ag(Ys)) at position [0] we obtained the following new rules [LPAR04]:

   (U2_A(select_out_aga(y0, x0)) -> U3_A(U5_ag(x0, eq_in_gg(x0, []))),U2_A(select_out_aga(y0, x0)) -> U3_A(U5_ag(x0, eq_in_gg(x0, []))))
   (U2_A(select_out_aga(y0, .(x0))) -> U3_A(U6_ag(x0, p_in_aa)),U2_A(select_out_aga(y0, .(x0))) -> U3_A(U6_ag(x0, p_in_aa)))


----------------------------------------

(44)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U3_A(vl_out_ag(Ys)) -> VLCND_IN_A
   VLCND_IN_A -> U1_A(vl_in_aa)
   U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(x0, select_in_aga(x0)))
   U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(.(x0), x0))
   U2_A(select_out_aga(y0, x0)) -> U3_A(U5_ag(x0, eq_in_gg(x0, [])))
   U2_A(select_out_aga(y0, .(x0))) -> U3_A(U6_ag(x0, p_in_aa))

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(Xs, select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(.(Xs), Xs)
   vl_in_ag(L) -> U5_ag(L, eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(Xs, select_out_aga(Xs, Ys)) -> select_out_aga(.(Xs), .(Ys))
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(L)
   U6_ag(Xs, p_out_aa) -> U7_ag(Xs, vl_in_ag(Xs))
   U5_aa(eq_out_ag(L, [])) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   p_in_aa -> p_out_aa
   U7_ag(Xs, vl_out_ag(Xs)) -> vl_out_ag(.(Xs))
   eq_in_ag(X) -> eq_out_ag(X, X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0, x1)
   U5_ag(x0, x1)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0, x1)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(45) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule U2_A(select_out_aga(y0, .(x0))) -> U3_A(U6_ag(x0, p_in_aa)) at position [0,1] we obtained the following new rules [LPAR04]:

   (U2_A(select_out_aga(y0, .(x0))) -> U3_A(U6_ag(x0, p_out_aa)),U2_A(select_out_aga(y0, .(x0))) -> U3_A(U6_ag(x0, p_out_aa)))


----------------------------------------

(46)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U3_A(vl_out_ag(Ys)) -> VLCND_IN_A
   VLCND_IN_A -> U1_A(vl_in_aa)
   U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(x0, select_in_aga(x0)))
   U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(.(x0), x0))
   U2_A(select_out_aga(y0, x0)) -> U3_A(U5_ag(x0, eq_in_gg(x0, [])))
   U2_A(select_out_aga(y0, .(x0))) -> U3_A(U6_ag(x0, p_out_aa))

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(Xs, select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(.(Xs), Xs)
   vl_in_ag(L) -> U5_ag(L, eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(Xs, select_out_aga(Xs, Ys)) -> select_out_aga(.(Xs), .(Ys))
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(L)
   U6_ag(Xs, p_out_aa) -> U7_ag(Xs, vl_in_ag(Xs))
   U5_aa(eq_out_ag(L, [])) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   p_in_aa -> p_out_aa
   U7_ag(Xs, vl_out_ag(Xs)) -> vl_out_ag(.(Xs))
   eq_in_ag(X) -> eq_out_ag(X, X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0, x1)
   U5_ag(x0, x1)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0, x1)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(47) TransformationProof (SOUND)
By narrowing [LPAR04] the rule VLCND_IN_A -> U1_A(vl_in_aa) at position [0] we obtained the following new rules [LPAR04]:

   (VLCND_IN_A -> U1_A(U5_aa(eq_in_ag([]))),VLCND_IN_A -> U1_A(U5_aa(eq_in_ag([]))))
   (VLCND_IN_A -> U1_A(U6_aa(p_in_aa)),VLCND_IN_A -> U1_A(U6_aa(p_in_aa)))


----------------------------------------

(48)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U3_A(vl_out_ag(Ys)) -> VLCND_IN_A
   U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(x0, select_in_aga(x0)))
   U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(.(x0), x0))
   U2_A(select_out_aga(y0, x0)) -> U3_A(U5_ag(x0, eq_in_gg(x0, [])))
   U2_A(select_out_aga(y0, .(x0))) -> U3_A(U6_ag(x0, p_out_aa))
   VLCND_IN_A -> U1_A(U5_aa(eq_in_ag([])))
   VLCND_IN_A -> U1_A(U6_aa(p_in_aa))

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(Xs, select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(.(Xs), Xs)
   vl_in_ag(L) -> U5_ag(L, eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(Xs, select_out_aga(Xs, Ys)) -> select_out_aga(.(Xs), .(Ys))
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(L)
   U6_ag(Xs, p_out_aa) -> U7_ag(Xs, vl_in_ag(Xs))
   U5_aa(eq_out_ag(L, [])) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   p_in_aa -> p_out_aa
   U7_ag(Xs, vl_out_ag(Xs)) -> vl_out_ag(.(Xs))
   eq_in_ag(X) -> eq_out_ag(X, X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0, x1)
   U5_ag(x0, x1)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0, x1)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(49) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule VLCND_IN_A -> U1_A(U5_aa(eq_in_ag([]))) at position [0,0] we obtained the following new rules [LPAR04]:

   (VLCND_IN_A -> U1_A(U5_aa(eq_out_ag([], []))),VLCND_IN_A -> U1_A(U5_aa(eq_out_ag([], []))))


----------------------------------------

(50)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U3_A(vl_out_ag(Ys)) -> VLCND_IN_A
   U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(x0, select_in_aga(x0)))
   U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(.(x0), x0))
   U2_A(select_out_aga(y0, x0)) -> U3_A(U5_ag(x0, eq_in_gg(x0, [])))
   U2_A(select_out_aga(y0, .(x0))) -> U3_A(U6_ag(x0, p_out_aa))
   VLCND_IN_A -> U1_A(U6_aa(p_in_aa))
   VLCND_IN_A -> U1_A(U5_aa(eq_out_ag([], [])))

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(Xs, select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(.(Xs), Xs)
   vl_in_ag(L) -> U5_ag(L, eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(Xs, select_out_aga(Xs, Ys)) -> select_out_aga(.(Xs), .(Ys))
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(L)
   U6_ag(Xs, p_out_aa) -> U7_ag(Xs, vl_in_ag(Xs))
   U5_aa(eq_out_ag(L, [])) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   p_in_aa -> p_out_aa
   U7_ag(Xs, vl_out_ag(Xs)) -> vl_out_ag(.(Xs))
   eq_in_ag(X) -> eq_out_ag(X, X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0, x1)
   U5_ag(x0, x1)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0, x1)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(51) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule VLCND_IN_A -> U1_A(U6_aa(p_in_aa)) at position [0,0] we obtained the following new rules [LPAR04]:

   (VLCND_IN_A -> U1_A(U6_aa(p_out_aa)),VLCND_IN_A -> U1_A(U6_aa(p_out_aa)))


----------------------------------------

(52)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U3_A(vl_out_ag(Ys)) -> VLCND_IN_A
   U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(x0, select_in_aga(x0)))
   U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(.(x0), x0))
   U2_A(select_out_aga(y0, x0)) -> U3_A(U5_ag(x0, eq_in_gg(x0, [])))
   U2_A(select_out_aga(y0, .(x0))) -> U3_A(U6_ag(x0, p_out_aa))
   VLCND_IN_A -> U1_A(U5_aa(eq_out_ag([], [])))
   VLCND_IN_A -> U1_A(U6_aa(p_out_aa))

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(Xs, select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(.(Xs), Xs)
   vl_in_ag(L) -> U5_ag(L, eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(Xs, select_out_aga(Xs, Ys)) -> select_out_aga(.(Xs), .(Ys))
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(L)
   U6_ag(Xs, p_out_aa) -> U7_ag(Xs, vl_in_ag(Xs))
   U5_aa(eq_out_ag(L, [])) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   p_in_aa -> p_out_aa
   U7_ag(Xs, vl_out_ag(Xs)) -> vl_out_ag(.(Xs))
   eq_in_ag(X) -> eq_out_ag(X, X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0, x1)
   U5_ag(x0, x1)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0, x1)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(53) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule VLCND_IN_A -> U1_A(U5_aa(eq_out_ag([], []))) at position [0] we obtained the following new rules [LPAR04]:

   (VLCND_IN_A -> U1_A(vl_out_aa([])),VLCND_IN_A -> U1_A(vl_out_aa([])))


----------------------------------------

(54)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U3_A(vl_out_ag(Ys)) -> VLCND_IN_A
   U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(x0, select_in_aga(x0)))
   U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(.(x0), x0))
   U2_A(select_out_aga(y0, x0)) -> U3_A(U5_ag(x0, eq_in_gg(x0, [])))
   U2_A(select_out_aga(y0, .(x0))) -> U3_A(U6_ag(x0, p_out_aa))
   VLCND_IN_A -> U1_A(U6_aa(p_out_aa))
   VLCND_IN_A -> U1_A(vl_out_aa([]))

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(Xs, select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(.(Xs), Xs)
   vl_in_ag(L) -> U5_ag(L, eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(Xs, select_out_aga(Xs, Ys)) -> select_out_aga(.(Xs), .(Ys))
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(L)
   U6_ag(Xs, p_out_aa) -> U7_ag(Xs, vl_in_ag(Xs))
   U5_aa(eq_out_ag(L, [])) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   p_in_aa -> p_out_aa
   U7_ag(Xs, vl_out_ag(Xs)) -> vl_out_ag(.(Xs))
   eq_in_ag(X) -> eq_out_ag(X, X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0, x1)
   U5_ag(x0, x1)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0, x1)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(55) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(56)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   VLCND_IN_A -> U1_A(U6_aa(p_out_aa))
   U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(x0, select_in_aga(x0)))
   U2_A(select_out_aga(y0, x0)) -> U3_A(U5_ag(x0, eq_in_gg(x0, [])))
   U3_A(vl_out_ag(Ys)) -> VLCND_IN_A
   U2_A(select_out_aga(y0, .(x0))) -> U3_A(U6_ag(x0, p_out_aa))
   U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(.(x0), x0))

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(Xs, select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(.(Xs), Xs)
   vl_in_ag(L) -> U5_ag(L, eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(Xs, select_out_aga(Xs, Ys)) -> select_out_aga(.(Xs), .(Ys))
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(L)
   U6_ag(Xs, p_out_aa) -> U7_ag(Xs, vl_in_ag(Xs))
   U5_aa(eq_out_ag(L, [])) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   p_in_aa -> p_out_aa
   U7_ag(Xs, vl_out_ag(Xs)) -> vl_out_ag(.(Xs))
   eq_in_ag(X) -> eq_out_ag(X, X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0, x1)
   U5_ag(x0, x1)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0, x1)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(57) TransformationProof (SOUND)
By narrowing [LPAR04] the rule U2_A(select_out_aga(y0, x0)) -> U3_A(U5_ag(x0, eq_in_gg(x0, []))) at position [0,1] we obtained the following new rules [LPAR04]:

   (U2_A(select_out_aga(y0, [])) -> U3_A(U5_ag([], eq_out_gg([], []))),U2_A(select_out_aga(y0, [])) -> U3_A(U5_ag([], eq_out_gg([], []))))


----------------------------------------

(58)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   VLCND_IN_A -> U1_A(U6_aa(p_out_aa))
   U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(x0, select_in_aga(x0)))
   U3_A(vl_out_ag(Ys)) -> VLCND_IN_A
   U2_A(select_out_aga(y0, .(x0))) -> U3_A(U6_ag(x0, p_out_aa))
   U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(.(x0), x0))
   U2_A(select_out_aga(y0, [])) -> U3_A(U5_ag([], eq_out_gg([], [])))

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(Xs, select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(.(Xs), Xs)
   vl_in_ag(L) -> U5_ag(L, eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(Xs, select_out_aga(Xs, Ys)) -> select_out_aga(.(Xs), .(Ys))
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(L)
   U6_ag(Xs, p_out_aa) -> U7_ag(Xs, vl_in_ag(Xs))
   U5_aa(eq_out_ag(L, [])) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   p_in_aa -> p_out_aa
   U7_ag(Xs, vl_out_ag(Xs)) -> vl_out_ag(.(Xs))
   eq_in_ag(X) -> eq_out_ag(X, X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0, x1)
   U5_ag(x0, x1)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0, x1)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(59) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule U2_A(select_out_aga(y0, [])) -> U3_A(U5_ag([], eq_out_gg([], []))) at position [0] we obtained the following new rules [LPAR04]:

   (U2_A(select_out_aga(y0, [])) -> U3_A(vl_out_ag([])),U2_A(select_out_aga(y0, [])) -> U3_A(vl_out_ag([])))


----------------------------------------

(60)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   VLCND_IN_A -> U1_A(U6_aa(p_out_aa))
   U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(x0, select_in_aga(x0)))
   U3_A(vl_out_ag(Ys)) -> VLCND_IN_A
   U2_A(select_out_aga(y0, .(x0))) -> U3_A(U6_ag(x0, p_out_aa))
   U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(.(x0), x0))
   U2_A(select_out_aga(y0, [])) -> U3_A(vl_out_ag([]))

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(Xs, select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(.(Xs), Xs)
   vl_in_ag(L) -> U5_ag(L, eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(Xs, select_out_aga(Xs, Ys)) -> select_out_aga(.(Xs), .(Ys))
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(L)
   U6_ag(Xs, p_out_aa) -> U7_ag(Xs, vl_in_ag(Xs))
   U5_aa(eq_out_ag(L, [])) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   p_in_aa -> p_out_aa
   U7_ag(Xs, vl_out_ag(Xs)) -> vl_out_ag(.(Xs))
   eq_in_ag(X) -> eq_out_ag(X, X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0, x1)
   U5_ag(x0, x1)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0, x1)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(61) TransformationProof (EQUIVALENT)
By forward instantiating [JAR06] the rule U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(.(x0), x0)) we obtained the following new rules [LPAR04]:

   (U1_A(vl_out_aa(.(.(y_1)))) -> U2_A(select_out_aga(.(.(y_1)), .(y_1))),U1_A(vl_out_aa(.(.(y_1)))) -> U2_A(select_out_aga(.(.(y_1)), .(y_1))))
   (U1_A(vl_out_aa(.([]))) -> U2_A(select_out_aga(.([]), [])),U1_A(vl_out_aa(.([]))) -> U2_A(select_out_aga(.([]), [])))


----------------------------------------

(62)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   VLCND_IN_A -> U1_A(U6_aa(p_out_aa))
   U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(x0, select_in_aga(x0)))
   U3_A(vl_out_ag(Ys)) -> VLCND_IN_A
   U2_A(select_out_aga(y0, .(x0))) -> U3_A(U6_ag(x0, p_out_aa))
   U2_A(select_out_aga(y0, [])) -> U3_A(vl_out_ag([]))
   U1_A(vl_out_aa(.(.(y_1)))) -> U2_A(select_out_aga(.(.(y_1)), .(y_1)))
   U1_A(vl_out_aa(.([]))) -> U2_A(select_out_aga(.([]), []))

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(Xs, select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(.(Xs), Xs)
   vl_in_ag(L) -> U5_ag(L, eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(Xs, select_out_aga(Xs, Ys)) -> select_out_aga(.(Xs), .(Ys))
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(L)
   U6_ag(Xs, p_out_aa) -> U7_ag(Xs, vl_in_ag(Xs))
   U5_aa(eq_out_ag(L, [])) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   p_in_aa -> p_out_aa
   U7_ag(Xs, vl_out_ag(Xs)) -> vl_out_ag(.(Xs))
   eq_in_ag(X) -> eq_out_ag(X, X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0, x1)
   U5_ag(x0, x1)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0, x1)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(63)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   VL_IN_GA(N, .(X2, Xs)) -> U6_GA(N, X2, Xs, p_in_ga(N, P))
   U6_GA(N, X2, Xs, p_out_ga(N, P)) -> VL_IN_GA(P, Xs)

The TRS R consists of the following rules:

   vlcnd_in_g(N) -> U1_g(N, vl_in_ga(N, Xs))
   vl_in_ga(0, L) -> U5_ga(L, eq_in_ag(L, []))
   eq_in_ag(X, X) -> eq_out_ag(X, X)
   U5_ga(L, eq_out_ag(L, [])) -> vl_out_ga(0, L)
   vl_in_ga(N, .(X2, Xs)) -> U6_ga(N, X2, Xs, p_in_ga(N, P))
   p_in_ga(0, 0) -> p_out_ga(0, 0)
   p_in_ga(s(X), X) -> p_out_ga(s(X), X)
   U6_ga(N, X2, Xs, p_out_ga(N, P)) -> U7_ga(N, X2, Xs, vl_in_ga(P, Xs))
   U7_ga(N, X2, Xs, vl_out_ga(P, Xs)) -> vl_out_ga(N, .(X2, Xs))
   U1_g(N, vl_out_ga(N, Xs)) -> U2_g(N, select_in_aga(X1, Xs, Ys))
   select_in_aga(X, .(Y, Xs), .(Y, Ys)) -> U8_aga(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   select_in_aga(X, .(X, Xs), Xs) -> select_out_aga(X, .(X, Xs), Xs)
   U8_aga(X, Y, Xs, Ys, select_out_aga(X, Xs, Ys)) -> select_out_aga(X, .(Y, Xs), .(Y, Ys))
   U2_g(N, select_out_aga(X1, Xs, Ys)) -> U3_g(N, vl_in_ag(M, Ys))
   vl_in_ag(0, L) -> U5_ag(L, eq_in_gg(L, []))
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(0, L)
   vl_in_ag(N, .(X2, Xs)) -> U6_ag(N, X2, Xs, p_in_aa(N, P))
   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)
   U6_ag(N, X2, Xs, p_out_aa(N, P)) -> U7_ag(N, X2, Xs, vl_in_ag(P, Xs))
   U7_ag(N, X2, Xs, vl_out_ag(P, Xs)) -> vl_out_ag(N, .(X2, Xs))
   U3_g(N, vl_out_ag(M, Ys)) -> U4_g(N, vlcnd_in_a(M))
   vlcnd_in_a(N) -> U1_a(N, vl_in_aa(N, Xs))
   vl_in_aa(0, L) -> U5_aa(L, eq_in_ag(L, []))
   U5_aa(L, eq_out_ag(L, [])) -> vl_out_aa(0, L)
   vl_in_aa(N, .(X2, Xs)) -> U6_aa(N, X2, Xs, p_in_aa(N, P))
   U6_aa(N, X2, Xs, p_out_aa(N, P)) -> U7_aa(N, X2, Xs, vl_in_aa(P, Xs))
   U7_aa(N, X2, Xs, vl_out_aa(P, Xs)) -> vl_out_aa(N, .(X2, Xs))
   U1_a(N, vl_out_aa(N, Xs)) -> U2_a(N, select_in_aga(X1, Xs, Ys))
   U2_a(N, select_out_aga(X1, Xs, Ys)) -> U3_a(N, vl_in_ag(M, Ys))
   U3_a(N, vl_out_ag(M, Ys)) -> U4_a(N, vlcnd_in_a(M))
   vlcnd_in_a(0) -> vlcnd_out_a(0)
   U4_a(N, vlcnd_out_a(M)) -> vlcnd_out_a(N)
   U4_g(N, vlcnd_out_a(M)) -> vlcnd_out_g(N)
   vlcnd_in_g(0) -> vlcnd_out_g(0)

The argument filtering Pi contains the following mapping:
vlcnd_in_g(x1)  =  vlcnd_in_g(x1)

U1_g(x1, x2)  =  U1_g(x1, x2)

vl_in_ga(x1, x2)  =  vl_in_ga(x1)

0  =  0

U5_ga(x1, x2)  =  U5_ga(x2)

eq_in_ag(x1, x2)  =  eq_in_ag(x2)

eq_out_ag(x1, x2)  =  eq_out_ag(x1, x2)

[]  =  []

vl_out_ga(x1, x2)  =  vl_out_ga(x1, x2)

U6_ga(x1, x2, x3, x4)  =  U6_ga(x1, x4)

p_in_ga(x1, x2)  =  p_in_ga(x1)

p_out_ga(x1, x2)  =  p_out_ga(x1, x2)

s(x1)  =  s(x1)

U7_ga(x1, x2, x3, x4)  =  U7_ga(x1, x4)

.(x1, x2)  =  .(x2)

U2_g(x1, x2)  =  U2_g(x1, x2)

select_in_aga(x1, x2, x3)  =  select_in_aga(x2)

U8_aga(x1, x2, x3, x4, x5)  =  U8_aga(x3, x5)

select_out_aga(x1, x2, x3)  =  select_out_aga(x2, x3)

U3_g(x1, x2)  =  U3_g(x1, x2)

vl_in_ag(x1, x2)  =  vl_in_ag(x2)

U5_ag(x1, x2)  =  U5_ag(x1, x2)

eq_in_gg(x1, x2)  =  eq_in_gg(x1, x2)

eq_out_gg(x1, x2)  =  eq_out_gg(x1, x2)

vl_out_ag(x1, x2)  =  vl_out_ag(x2)

U6_ag(x1, x2, x3, x4)  =  U6_ag(x3, x4)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

U7_ag(x1, x2, x3, x4)  =  U7_ag(x3, x4)

U4_g(x1, x2)  =  U4_g(x1, x2)

vlcnd_in_a(x1)  =  vlcnd_in_a

U1_a(x1, x2)  =  U1_a(x2)

vl_in_aa(x1, x2)  =  vl_in_aa

U5_aa(x1, x2)  =  U5_aa(x2)

vl_out_aa(x1, x2)  =  vl_out_aa(x2)

U6_aa(x1, x2, x3, x4)  =  U6_aa(x4)

U7_aa(x1, x2, x3, x4)  =  U7_aa(x4)

U2_a(x1, x2)  =  U2_a(x2)

U3_a(x1, x2)  =  U3_a(x2)

U4_a(x1, x2)  =  U4_a(x2)

vlcnd_out_a(x1)  =  vlcnd_out_a

vlcnd_out_g(x1)  =  vlcnd_out_g(x1)

VL_IN_GA(x1, x2)  =  VL_IN_GA(x1)

U6_GA(x1, x2, x3, x4)  =  U6_GA(x1, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(64) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(65)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   VL_IN_GA(N, .(X2, Xs)) -> U6_GA(N, X2, Xs, p_in_ga(N, P))
   U6_GA(N, X2, Xs, p_out_ga(N, P)) -> VL_IN_GA(P, Xs)

The TRS R consists of the following rules:

   p_in_ga(0, 0) -> p_out_ga(0, 0)
   p_in_ga(s(X), X) -> p_out_ga(s(X), X)

The argument filtering Pi contains the following mapping:
0  =  0

p_in_ga(x1, x2)  =  p_in_ga(x1)

p_out_ga(x1, x2)  =  p_out_ga(x1, x2)

s(x1)  =  s(x1)

.(x1, x2)  =  .(x2)

VL_IN_GA(x1, x2)  =  VL_IN_GA(x1)

U6_GA(x1, x2, x3, x4)  =  U6_GA(x1, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(66) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

vlcnd_in_1: (b) (f)

vl_in_2: (b,f) (f,b) (f,f)

select_in_3: (f,b,f)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   vlcnd_in_g(N) -> U1_g(N, vl_in_ga(N, Xs))
   vl_in_ga(0, L) -> U5_ga(L, eq_in_ag(L, []))
   eq_in_ag(X, X) -> eq_out_ag(X, X)
   U5_ga(L, eq_out_ag(L, [])) -> vl_out_ga(0, L)
   vl_in_ga(N, .(X2, Xs)) -> U6_ga(N, X2, Xs, p_in_ga(N, P))
   p_in_ga(0, 0) -> p_out_ga(0, 0)
   p_in_ga(s(X), X) -> p_out_ga(s(X), X)
   U6_ga(N, X2, Xs, p_out_ga(N, P)) -> U7_ga(N, X2, Xs, vl_in_ga(P, Xs))
   U7_ga(N, X2, Xs, vl_out_ga(P, Xs)) -> vl_out_ga(N, .(X2, Xs))
   U1_g(N, vl_out_ga(N, Xs)) -> U2_g(N, select_in_aga(X1, Xs, Ys))
   select_in_aga(X, .(Y, Xs), .(Y, Ys)) -> U8_aga(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   select_in_aga(X, .(X, Xs), Xs) -> select_out_aga(X, .(X, Xs), Xs)
   U8_aga(X, Y, Xs, Ys, select_out_aga(X, Xs, Ys)) -> select_out_aga(X, .(Y, Xs), .(Y, Ys))
   U2_g(N, select_out_aga(X1, Xs, Ys)) -> U3_g(N, vl_in_ag(M, Ys))
   vl_in_ag(0, L) -> U5_ag(L, eq_in_gg(L, []))
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(0, L)
   vl_in_ag(N, .(X2, Xs)) -> U6_ag(N, X2, Xs, p_in_aa(N, P))
   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)
   U6_ag(N, X2, Xs, p_out_aa(N, P)) -> U7_ag(N, X2, Xs, vl_in_ag(P, Xs))
   U7_ag(N, X2, Xs, vl_out_ag(P, Xs)) -> vl_out_ag(N, .(X2, Xs))
   U3_g(N, vl_out_ag(M, Ys)) -> U4_g(N, vlcnd_in_a(M))
   vlcnd_in_a(N) -> U1_a(N, vl_in_aa(N, Xs))
   vl_in_aa(0, L) -> U5_aa(L, eq_in_ag(L, []))
   U5_aa(L, eq_out_ag(L, [])) -> vl_out_aa(0, L)
   vl_in_aa(N, .(X2, Xs)) -> U6_aa(N, X2, Xs, p_in_aa(N, P))
   U6_aa(N, X2, Xs, p_out_aa(N, P)) -> U7_aa(N, X2, Xs, vl_in_aa(P, Xs))
   U7_aa(N, X2, Xs, vl_out_aa(P, Xs)) -> vl_out_aa(N, .(X2, Xs))
   U1_a(N, vl_out_aa(N, Xs)) -> U2_a(N, select_in_aga(X1, Xs, Ys))
   U2_a(N, select_out_aga(X1, Xs, Ys)) -> U3_a(N, vl_in_ag(M, Ys))
   U3_a(N, vl_out_ag(M, Ys)) -> U4_a(N, vlcnd_in_a(M))
   vlcnd_in_a(0) -> vlcnd_out_a(0)
   U4_a(N, vlcnd_out_a(M)) -> vlcnd_out_a(N)
   U4_g(N, vlcnd_out_a(M)) -> vlcnd_out_g(N)
   vlcnd_in_g(0) -> vlcnd_out_g(0)

The argument filtering Pi contains the following mapping:
vlcnd_in_g(x1)  =  vlcnd_in_g(x1)

U1_g(x1, x2)  =  U1_g(x2)

vl_in_ga(x1, x2)  =  vl_in_ga(x1)

0  =  0

U5_ga(x1, x2)  =  U5_ga(x2)

eq_in_ag(x1, x2)  =  eq_in_ag(x2)

eq_out_ag(x1, x2)  =  eq_out_ag(x1)

[]  =  []

vl_out_ga(x1, x2)  =  vl_out_ga(x2)

U6_ga(x1, x2, x3, x4)  =  U6_ga(x4)

p_in_ga(x1, x2)  =  p_in_ga(x1)

p_out_ga(x1, x2)  =  p_out_ga(x2)

s(x1)  =  s(x1)

U7_ga(x1, x2, x3, x4)  =  U7_ga(x4)

.(x1, x2)  =  .(x2)

U2_g(x1, x2)  =  U2_g(x2)

select_in_aga(x1, x2, x3)  =  select_in_aga(x2)

U8_aga(x1, x2, x3, x4, x5)  =  U8_aga(x5)

select_out_aga(x1, x2, x3)  =  select_out_aga(x3)

U3_g(x1, x2)  =  U3_g(x2)

vl_in_ag(x1, x2)  =  vl_in_ag(x2)

U5_ag(x1, x2)  =  U5_ag(x2)

eq_in_gg(x1, x2)  =  eq_in_gg(x1, x2)

eq_out_gg(x1, x2)  =  eq_out_gg

vl_out_ag(x1, x2)  =  vl_out_ag

U6_ag(x1, x2, x3, x4)  =  U6_ag(x3, x4)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

U7_ag(x1, x2, x3, x4)  =  U7_ag(x4)

U4_g(x1, x2)  =  U4_g(x2)

vlcnd_in_a(x1)  =  vlcnd_in_a

U1_a(x1, x2)  =  U1_a(x2)

vl_in_aa(x1, x2)  =  vl_in_aa

U5_aa(x1, x2)  =  U5_aa(x2)

vl_out_aa(x1, x2)  =  vl_out_aa(x2)

U6_aa(x1, x2, x3, x4)  =  U6_aa(x4)

U7_aa(x1, x2, x3, x4)  =  U7_aa(x4)

U2_a(x1, x2)  =  U2_a(x2)

U3_a(x1, x2)  =  U3_a(x2)

U4_a(x1, x2)  =  U4_a(x2)

vlcnd_out_a(x1)  =  vlcnd_out_a

vlcnd_out_g(x1)  =  vlcnd_out_g





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(67)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   vlcnd_in_g(N) -> U1_g(N, vl_in_ga(N, Xs))
   vl_in_ga(0, L) -> U5_ga(L, eq_in_ag(L, []))
   eq_in_ag(X, X) -> eq_out_ag(X, X)
   U5_ga(L, eq_out_ag(L, [])) -> vl_out_ga(0, L)
   vl_in_ga(N, .(X2, Xs)) -> U6_ga(N, X2, Xs, p_in_ga(N, P))
   p_in_ga(0, 0) -> p_out_ga(0, 0)
   p_in_ga(s(X), X) -> p_out_ga(s(X), X)
   U6_ga(N, X2, Xs, p_out_ga(N, P)) -> U7_ga(N, X2, Xs, vl_in_ga(P, Xs))
   U7_ga(N, X2, Xs, vl_out_ga(P, Xs)) -> vl_out_ga(N, .(X2, Xs))
   U1_g(N, vl_out_ga(N, Xs)) -> U2_g(N, select_in_aga(X1, Xs, Ys))
   select_in_aga(X, .(Y, Xs), .(Y, Ys)) -> U8_aga(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   select_in_aga(X, .(X, Xs), Xs) -> select_out_aga(X, .(X, Xs), Xs)
   U8_aga(X, Y, Xs, Ys, select_out_aga(X, Xs, Ys)) -> select_out_aga(X, .(Y, Xs), .(Y, Ys))
   U2_g(N, select_out_aga(X1, Xs, Ys)) -> U3_g(N, vl_in_ag(M, Ys))
   vl_in_ag(0, L) -> U5_ag(L, eq_in_gg(L, []))
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(0, L)
   vl_in_ag(N, .(X2, Xs)) -> U6_ag(N, X2, Xs, p_in_aa(N, P))
   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)
   U6_ag(N, X2, Xs, p_out_aa(N, P)) -> U7_ag(N, X2, Xs, vl_in_ag(P, Xs))
   U7_ag(N, X2, Xs, vl_out_ag(P, Xs)) -> vl_out_ag(N, .(X2, Xs))
   U3_g(N, vl_out_ag(M, Ys)) -> U4_g(N, vlcnd_in_a(M))
   vlcnd_in_a(N) -> U1_a(N, vl_in_aa(N, Xs))
   vl_in_aa(0, L) -> U5_aa(L, eq_in_ag(L, []))
   U5_aa(L, eq_out_ag(L, [])) -> vl_out_aa(0, L)
   vl_in_aa(N, .(X2, Xs)) -> U6_aa(N, X2, Xs, p_in_aa(N, P))
   U6_aa(N, X2, Xs, p_out_aa(N, P)) -> U7_aa(N, X2, Xs, vl_in_aa(P, Xs))
   U7_aa(N, X2, Xs, vl_out_aa(P, Xs)) -> vl_out_aa(N, .(X2, Xs))
   U1_a(N, vl_out_aa(N, Xs)) -> U2_a(N, select_in_aga(X1, Xs, Ys))
   U2_a(N, select_out_aga(X1, Xs, Ys)) -> U3_a(N, vl_in_ag(M, Ys))
   U3_a(N, vl_out_ag(M, Ys)) -> U4_a(N, vlcnd_in_a(M))
   vlcnd_in_a(0) -> vlcnd_out_a(0)
   U4_a(N, vlcnd_out_a(M)) -> vlcnd_out_a(N)
   U4_g(N, vlcnd_out_a(M)) -> vlcnd_out_g(N)
   vlcnd_in_g(0) -> vlcnd_out_g(0)

The argument filtering Pi contains the following mapping:
vlcnd_in_g(x1)  =  vlcnd_in_g(x1)

U1_g(x1, x2)  =  U1_g(x2)

vl_in_ga(x1, x2)  =  vl_in_ga(x1)

0  =  0

U5_ga(x1, x2)  =  U5_ga(x2)

eq_in_ag(x1, x2)  =  eq_in_ag(x2)

eq_out_ag(x1, x2)  =  eq_out_ag(x1)

[]  =  []

vl_out_ga(x1, x2)  =  vl_out_ga(x2)

U6_ga(x1, x2, x3, x4)  =  U6_ga(x4)

p_in_ga(x1, x2)  =  p_in_ga(x1)

p_out_ga(x1, x2)  =  p_out_ga(x2)

s(x1)  =  s(x1)

U7_ga(x1, x2, x3, x4)  =  U7_ga(x4)

.(x1, x2)  =  .(x2)

U2_g(x1, x2)  =  U2_g(x2)

select_in_aga(x1, x2, x3)  =  select_in_aga(x2)

U8_aga(x1, x2, x3, x4, x5)  =  U8_aga(x5)

select_out_aga(x1, x2, x3)  =  select_out_aga(x3)

U3_g(x1, x2)  =  U3_g(x2)

vl_in_ag(x1, x2)  =  vl_in_ag(x2)

U5_ag(x1, x2)  =  U5_ag(x2)

eq_in_gg(x1, x2)  =  eq_in_gg(x1, x2)

eq_out_gg(x1, x2)  =  eq_out_gg

vl_out_ag(x1, x2)  =  vl_out_ag

U6_ag(x1, x2, x3, x4)  =  U6_ag(x3, x4)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

U7_ag(x1, x2, x3, x4)  =  U7_ag(x4)

U4_g(x1, x2)  =  U4_g(x2)

vlcnd_in_a(x1)  =  vlcnd_in_a

U1_a(x1, x2)  =  U1_a(x2)

vl_in_aa(x1, x2)  =  vl_in_aa

U5_aa(x1, x2)  =  U5_aa(x2)

vl_out_aa(x1, x2)  =  vl_out_aa(x2)

U6_aa(x1, x2, x3, x4)  =  U6_aa(x4)

U7_aa(x1, x2, x3, x4)  =  U7_aa(x4)

U2_a(x1, x2)  =  U2_a(x2)

U3_a(x1, x2)  =  U3_a(x2)

U4_a(x1, x2)  =  U4_a(x2)

vlcnd_out_a(x1)  =  vlcnd_out_a

vlcnd_out_g(x1)  =  vlcnd_out_g



----------------------------------------

(68) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   VLCND_IN_G(N) -> U1_G(N, vl_in_ga(N, Xs))
   VLCND_IN_G(N) -> VL_IN_GA(N, Xs)
   VL_IN_GA(0, L) -> U5_GA(L, eq_in_ag(L, []))
   VL_IN_GA(0, L) -> EQ_IN_AG(L, [])
   VL_IN_GA(N, .(X2, Xs)) -> U6_GA(N, X2, Xs, p_in_ga(N, P))
   VL_IN_GA(N, .(X2, Xs)) -> P_IN_GA(N, P)
   U6_GA(N, X2, Xs, p_out_ga(N, P)) -> U7_GA(N, X2, Xs, vl_in_ga(P, Xs))
   U6_GA(N, X2, Xs, p_out_ga(N, P)) -> VL_IN_GA(P, Xs)
   U1_G(N, vl_out_ga(N, Xs)) -> U2_G(N, select_in_aga(X1, Xs, Ys))
   U1_G(N, vl_out_ga(N, Xs)) -> SELECT_IN_AGA(X1, Xs, Ys)
   SELECT_IN_AGA(X, .(Y, Xs), .(Y, Ys)) -> U8_AGA(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   SELECT_IN_AGA(X, .(Y, Xs), .(Y, Ys)) -> SELECT_IN_AGA(X, Xs, Ys)
   U2_G(N, select_out_aga(X1, Xs, Ys)) -> U3_G(N, vl_in_ag(M, Ys))
   U2_G(N, select_out_aga(X1, Xs, Ys)) -> VL_IN_AG(M, Ys)
   VL_IN_AG(0, L) -> U5_AG(L, eq_in_gg(L, []))
   VL_IN_AG(0, L) -> EQ_IN_GG(L, [])
   VL_IN_AG(N, .(X2, Xs)) -> U6_AG(N, X2, Xs, p_in_aa(N, P))
   VL_IN_AG(N, .(X2, Xs)) -> P_IN_AA(N, P)
   U6_AG(N, X2, Xs, p_out_aa(N, P)) -> U7_AG(N, X2, Xs, vl_in_ag(P, Xs))
   U6_AG(N, X2, Xs, p_out_aa(N, P)) -> VL_IN_AG(P, Xs)
   U3_G(N, vl_out_ag(M, Ys)) -> U4_G(N, vlcnd_in_a(M))
   U3_G(N, vl_out_ag(M, Ys)) -> VLCND_IN_A(M)
   VLCND_IN_A(N) -> U1_A(N, vl_in_aa(N, Xs))
   VLCND_IN_A(N) -> VL_IN_AA(N, Xs)
   VL_IN_AA(0, L) -> U5_AA(L, eq_in_ag(L, []))
   VL_IN_AA(0, L) -> EQ_IN_AG(L, [])
   VL_IN_AA(N, .(X2, Xs)) -> U6_AA(N, X2, Xs, p_in_aa(N, P))
   VL_IN_AA(N, .(X2, Xs)) -> P_IN_AA(N, P)
   U6_AA(N, X2, Xs, p_out_aa(N, P)) -> U7_AA(N, X2, Xs, vl_in_aa(P, Xs))
   U6_AA(N, X2, Xs, p_out_aa(N, P)) -> VL_IN_AA(P, Xs)
   U1_A(N, vl_out_aa(N, Xs)) -> U2_A(N, select_in_aga(X1, Xs, Ys))
   U1_A(N, vl_out_aa(N, Xs)) -> SELECT_IN_AGA(X1, Xs, Ys)
   U2_A(N, select_out_aga(X1, Xs, Ys)) -> U3_A(N, vl_in_ag(M, Ys))
   U2_A(N, select_out_aga(X1, Xs, Ys)) -> VL_IN_AG(M, Ys)
   U3_A(N, vl_out_ag(M, Ys)) -> U4_A(N, vlcnd_in_a(M))
   U3_A(N, vl_out_ag(M, Ys)) -> VLCND_IN_A(M)

The TRS R consists of the following rules:

   vlcnd_in_g(N) -> U1_g(N, vl_in_ga(N, Xs))
   vl_in_ga(0, L) -> U5_ga(L, eq_in_ag(L, []))
   eq_in_ag(X, X) -> eq_out_ag(X, X)
   U5_ga(L, eq_out_ag(L, [])) -> vl_out_ga(0, L)
   vl_in_ga(N, .(X2, Xs)) -> U6_ga(N, X2, Xs, p_in_ga(N, P))
   p_in_ga(0, 0) -> p_out_ga(0, 0)
   p_in_ga(s(X), X) -> p_out_ga(s(X), X)
   U6_ga(N, X2, Xs, p_out_ga(N, P)) -> U7_ga(N, X2, Xs, vl_in_ga(P, Xs))
   U7_ga(N, X2, Xs, vl_out_ga(P, Xs)) -> vl_out_ga(N, .(X2, Xs))
   U1_g(N, vl_out_ga(N, Xs)) -> U2_g(N, select_in_aga(X1, Xs, Ys))
   select_in_aga(X, .(Y, Xs), .(Y, Ys)) -> U8_aga(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   select_in_aga(X, .(X, Xs), Xs) -> select_out_aga(X, .(X, Xs), Xs)
   U8_aga(X, Y, Xs, Ys, select_out_aga(X, Xs, Ys)) -> select_out_aga(X, .(Y, Xs), .(Y, Ys))
   U2_g(N, select_out_aga(X1, Xs, Ys)) -> U3_g(N, vl_in_ag(M, Ys))
   vl_in_ag(0, L) -> U5_ag(L, eq_in_gg(L, []))
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(0, L)
   vl_in_ag(N, .(X2, Xs)) -> U6_ag(N, X2, Xs, p_in_aa(N, P))
   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)
   U6_ag(N, X2, Xs, p_out_aa(N, P)) -> U7_ag(N, X2, Xs, vl_in_ag(P, Xs))
   U7_ag(N, X2, Xs, vl_out_ag(P, Xs)) -> vl_out_ag(N, .(X2, Xs))
   U3_g(N, vl_out_ag(M, Ys)) -> U4_g(N, vlcnd_in_a(M))
   vlcnd_in_a(N) -> U1_a(N, vl_in_aa(N, Xs))
   vl_in_aa(0, L) -> U5_aa(L, eq_in_ag(L, []))
   U5_aa(L, eq_out_ag(L, [])) -> vl_out_aa(0, L)
   vl_in_aa(N, .(X2, Xs)) -> U6_aa(N, X2, Xs, p_in_aa(N, P))
   U6_aa(N, X2, Xs, p_out_aa(N, P)) -> U7_aa(N, X2, Xs, vl_in_aa(P, Xs))
   U7_aa(N, X2, Xs, vl_out_aa(P, Xs)) -> vl_out_aa(N, .(X2, Xs))
   U1_a(N, vl_out_aa(N, Xs)) -> U2_a(N, select_in_aga(X1, Xs, Ys))
   U2_a(N, select_out_aga(X1, Xs, Ys)) -> U3_a(N, vl_in_ag(M, Ys))
   U3_a(N, vl_out_ag(M, Ys)) -> U4_a(N, vlcnd_in_a(M))
   vlcnd_in_a(0) -> vlcnd_out_a(0)
   U4_a(N, vlcnd_out_a(M)) -> vlcnd_out_a(N)
   U4_g(N, vlcnd_out_a(M)) -> vlcnd_out_g(N)
   vlcnd_in_g(0) -> vlcnd_out_g(0)

The argument filtering Pi contains the following mapping:
vlcnd_in_g(x1)  =  vlcnd_in_g(x1)

U1_g(x1, x2)  =  U1_g(x2)

vl_in_ga(x1, x2)  =  vl_in_ga(x1)

0  =  0

U5_ga(x1, x2)  =  U5_ga(x2)

eq_in_ag(x1, x2)  =  eq_in_ag(x2)

eq_out_ag(x1, x2)  =  eq_out_ag(x1)

[]  =  []

vl_out_ga(x1, x2)  =  vl_out_ga(x2)

U6_ga(x1, x2, x3, x4)  =  U6_ga(x4)

p_in_ga(x1, x2)  =  p_in_ga(x1)

p_out_ga(x1, x2)  =  p_out_ga(x2)

s(x1)  =  s(x1)

U7_ga(x1, x2, x3, x4)  =  U7_ga(x4)

.(x1, x2)  =  .(x2)

U2_g(x1, x2)  =  U2_g(x2)

select_in_aga(x1, x2, x3)  =  select_in_aga(x2)

U8_aga(x1, x2, x3, x4, x5)  =  U8_aga(x5)

select_out_aga(x1, x2, x3)  =  select_out_aga(x3)

U3_g(x1, x2)  =  U3_g(x2)

vl_in_ag(x1, x2)  =  vl_in_ag(x2)

U5_ag(x1, x2)  =  U5_ag(x2)

eq_in_gg(x1, x2)  =  eq_in_gg(x1, x2)

eq_out_gg(x1, x2)  =  eq_out_gg

vl_out_ag(x1, x2)  =  vl_out_ag

U6_ag(x1, x2, x3, x4)  =  U6_ag(x3, x4)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

U7_ag(x1, x2, x3, x4)  =  U7_ag(x4)

U4_g(x1, x2)  =  U4_g(x2)

vlcnd_in_a(x1)  =  vlcnd_in_a

U1_a(x1, x2)  =  U1_a(x2)

vl_in_aa(x1, x2)  =  vl_in_aa

U5_aa(x1, x2)  =  U5_aa(x2)

vl_out_aa(x1, x2)  =  vl_out_aa(x2)

U6_aa(x1, x2, x3, x4)  =  U6_aa(x4)

U7_aa(x1, x2, x3, x4)  =  U7_aa(x4)

U2_a(x1, x2)  =  U2_a(x2)

U3_a(x1, x2)  =  U3_a(x2)

U4_a(x1, x2)  =  U4_a(x2)

vlcnd_out_a(x1)  =  vlcnd_out_a

vlcnd_out_g(x1)  =  vlcnd_out_g

VLCND_IN_G(x1)  =  VLCND_IN_G(x1)

U1_G(x1, x2)  =  U1_G(x2)

VL_IN_GA(x1, x2)  =  VL_IN_GA(x1)

U5_GA(x1, x2)  =  U5_GA(x2)

EQ_IN_AG(x1, x2)  =  EQ_IN_AG(x2)

U6_GA(x1, x2, x3, x4)  =  U6_GA(x4)

P_IN_GA(x1, x2)  =  P_IN_GA(x1)

U7_GA(x1, x2, x3, x4)  =  U7_GA(x4)

U2_G(x1, x2)  =  U2_G(x2)

SELECT_IN_AGA(x1, x2, x3)  =  SELECT_IN_AGA(x2)

U8_AGA(x1, x2, x3, x4, x5)  =  U8_AGA(x5)

U3_G(x1, x2)  =  U3_G(x2)

VL_IN_AG(x1, x2)  =  VL_IN_AG(x2)

U5_AG(x1, x2)  =  U5_AG(x2)

EQ_IN_GG(x1, x2)  =  EQ_IN_GG(x1, x2)

U6_AG(x1, x2, x3, x4)  =  U6_AG(x3, x4)

P_IN_AA(x1, x2)  =  P_IN_AA

U7_AG(x1, x2, x3, x4)  =  U7_AG(x4)

U4_G(x1, x2)  =  U4_G(x2)

VLCND_IN_A(x1)  =  VLCND_IN_A

U1_A(x1, x2)  =  U1_A(x2)

VL_IN_AA(x1, x2)  =  VL_IN_AA

U5_AA(x1, x2)  =  U5_AA(x2)

U6_AA(x1, x2, x3, x4)  =  U6_AA(x4)

U7_AA(x1, x2, x3, x4)  =  U7_AA(x4)

U2_A(x1, x2)  =  U2_A(x2)

U3_A(x1, x2)  =  U3_A(x2)

U4_A(x1, x2)  =  U4_A(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(69)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   VLCND_IN_G(N) -> U1_G(N, vl_in_ga(N, Xs))
   VLCND_IN_G(N) -> VL_IN_GA(N, Xs)
   VL_IN_GA(0, L) -> U5_GA(L, eq_in_ag(L, []))
   VL_IN_GA(0, L) -> EQ_IN_AG(L, [])
   VL_IN_GA(N, .(X2, Xs)) -> U6_GA(N, X2, Xs, p_in_ga(N, P))
   VL_IN_GA(N, .(X2, Xs)) -> P_IN_GA(N, P)
   U6_GA(N, X2, Xs, p_out_ga(N, P)) -> U7_GA(N, X2, Xs, vl_in_ga(P, Xs))
   U6_GA(N, X2, Xs, p_out_ga(N, P)) -> VL_IN_GA(P, Xs)
   U1_G(N, vl_out_ga(N, Xs)) -> U2_G(N, select_in_aga(X1, Xs, Ys))
   U1_G(N, vl_out_ga(N, Xs)) -> SELECT_IN_AGA(X1, Xs, Ys)
   SELECT_IN_AGA(X, .(Y, Xs), .(Y, Ys)) -> U8_AGA(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   SELECT_IN_AGA(X, .(Y, Xs), .(Y, Ys)) -> SELECT_IN_AGA(X, Xs, Ys)
   U2_G(N, select_out_aga(X1, Xs, Ys)) -> U3_G(N, vl_in_ag(M, Ys))
   U2_G(N, select_out_aga(X1, Xs, Ys)) -> VL_IN_AG(M, Ys)
   VL_IN_AG(0, L) -> U5_AG(L, eq_in_gg(L, []))
   VL_IN_AG(0, L) -> EQ_IN_GG(L, [])
   VL_IN_AG(N, .(X2, Xs)) -> U6_AG(N, X2, Xs, p_in_aa(N, P))
   VL_IN_AG(N, .(X2, Xs)) -> P_IN_AA(N, P)
   U6_AG(N, X2, Xs, p_out_aa(N, P)) -> U7_AG(N, X2, Xs, vl_in_ag(P, Xs))
   U6_AG(N, X2, Xs, p_out_aa(N, P)) -> VL_IN_AG(P, Xs)
   U3_G(N, vl_out_ag(M, Ys)) -> U4_G(N, vlcnd_in_a(M))
   U3_G(N, vl_out_ag(M, Ys)) -> VLCND_IN_A(M)
   VLCND_IN_A(N) -> U1_A(N, vl_in_aa(N, Xs))
   VLCND_IN_A(N) -> VL_IN_AA(N, Xs)
   VL_IN_AA(0, L) -> U5_AA(L, eq_in_ag(L, []))
   VL_IN_AA(0, L) -> EQ_IN_AG(L, [])
   VL_IN_AA(N, .(X2, Xs)) -> U6_AA(N, X2, Xs, p_in_aa(N, P))
   VL_IN_AA(N, .(X2, Xs)) -> P_IN_AA(N, P)
   U6_AA(N, X2, Xs, p_out_aa(N, P)) -> U7_AA(N, X2, Xs, vl_in_aa(P, Xs))
   U6_AA(N, X2, Xs, p_out_aa(N, P)) -> VL_IN_AA(P, Xs)
   U1_A(N, vl_out_aa(N, Xs)) -> U2_A(N, select_in_aga(X1, Xs, Ys))
   U1_A(N, vl_out_aa(N, Xs)) -> SELECT_IN_AGA(X1, Xs, Ys)
   U2_A(N, select_out_aga(X1, Xs, Ys)) -> U3_A(N, vl_in_ag(M, Ys))
   U2_A(N, select_out_aga(X1, Xs, Ys)) -> VL_IN_AG(M, Ys)
   U3_A(N, vl_out_ag(M, Ys)) -> U4_A(N, vlcnd_in_a(M))
   U3_A(N, vl_out_ag(M, Ys)) -> VLCND_IN_A(M)

The TRS R consists of the following rules:

   vlcnd_in_g(N) -> U1_g(N, vl_in_ga(N, Xs))
   vl_in_ga(0, L) -> U5_ga(L, eq_in_ag(L, []))
   eq_in_ag(X, X) -> eq_out_ag(X, X)
   U5_ga(L, eq_out_ag(L, [])) -> vl_out_ga(0, L)
   vl_in_ga(N, .(X2, Xs)) -> U6_ga(N, X2, Xs, p_in_ga(N, P))
   p_in_ga(0, 0) -> p_out_ga(0, 0)
   p_in_ga(s(X), X) -> p_out_ga(s(X), X)
   U6_ga(N, X2, Xs, p_out_ga(N, P)) -> U7_ga(N, X2, Xs, vl_in_ga(P, Xs))
   U7_ga(N, X2, Xs, vl_out_ga(P, Xs)) -> vl_out_ga(N, .(X2, Xs))
   U1_g(N, vl_out_ga(N, Xs)) -> U2_g(N, select_in_aga(X1, Xs, Ys))
   select_in_aga(X, .(Y, Xs), .(Y, Ys)) -> U8_aga(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   select_in_aga(X, .(X, Xs), Xs) -> select_out_aga(X, .(X, Xs), Xs)
   U8_aga(X, Y, Xs, Ys, select_out_aga(X, Xs, Ys)) -> select_out_aga(X, .(Y, Xs), .(Y, Ys))
   U2_g(N, select_out_aga(X1, Xs, Ys)) -> U3_g(N, vl_in_ag(M, Ys))
   vl_in_ag(0, L) -> U5_ag(L, eq_in_gg(L, []))
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(0, L)
   vl_in_ag(N, .(X2, Xs)) -> U6_ag(N, X2, Xs, p_in_aa(N, P))
   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)
   U6_ag(N, X2, Xs, p_out_aa(N, P)) -> U7_ag(N, X2, Xs, vl_in_ag(P, Xs))
   U7_ag(N, X2, Xs, vl_out_ag(P, Xs)) -> vl_out_ag(N, .(X2, Xs))
   U3_g(N, vl_out_ag(M, Ys)) -> U4_g(N, vlcnd_in_a(M))
   vlcnd_in_a(N) -> U1_a(N, vl_in_aa(N, Xs))
   vl_in_aa(0, L) -> U5_aa(L, eq_in_ag(L, []))
   U5_aa(L, eq_out_ag(L, [])) -> vl_out_aa(0, L)
   vl_in_aa(N, .(X2, Xs)) -> U6_aa(N, X2, Xs, p_in_aa(N, P))
   U6_aa(N, X2, Xs, p_out_aa(N, P)) -> U7_aa(N, X2, Xs, vl_in_aa(P, Xs))
   U7_aa(N, X2, Xs, vl_out_aa(P, Xs)) -> vl_out_aa(N, .(X2, Xs))
   U1_a(N, vl_out_aa(N, Xs)) -> U2_a(N, select_in_aga(X1, Xs, Ys))
   U2_a(N, select_out_aga(X1, Xs, Ys)) -> U3_a(N, vl_in_ag(M, Ys))
   U3_a(N, vl_out_ag(M, Ys)) -> U4_a(N, vlcnd_in_a(M))
   vlcnd_in_a(0) -> vlcnd_out_a(0)
   U4_a(N, vlcnd_out_a(M)) -> vlcnd_out_a(N)
   U4_g(N, vlcnd_out_a(M)) -> vlcnd_out_g(N)
   vlcnd_in_g(0) -> vlcnd_out_g(0)

The argument filtering Pi contains the following mapping:
vlcnd_in_g(x1)  =  vlcnd_in_g(x1)

U1_g(x1, x2)  =  U1_g(x2)

vl_in_ga(x1, x2)  =  vl_in_ga(x1)

0  =  0

U5_ga(x1, x2)  =  U5_ga(x2)

eq_in_ag(x1, x2)  =  eq_in_ag(x2)

eq_out_ag(x1, x2)  =  eq_out_ag(x1)

[]  =  []

vl_out_ga(x1, x2)  =  vl_out_ga(x2)

U6_ga(x1, x2, x3, x4)  =  U6_ga(x4)

p_in_ga(x1, x2)  =  p_in_ga(x1)

p_out_ga(x1, x2)  =  p_out_ga(x2)

s(x1)  =  s(x1)

U7_ga(x1, x2, x3, x4)  =  U7_ga(x4)

.(x1, x2)  =  .(x2)

U2_g(x1, x2)  =  U2_g(x2)

select_in_aga(x1, x2, x3)  =  select_in_aga(x2)

U8_aga(x1, x2, x3, x4, x5)  =  U8_aga(x5)

select_out_aga(x1, x2, x3)  =  select_out_aga(x3)

U3_g(x1, x2)  =  U3_g(x2)

vl_in_ag(x1, x2)  =  vl_in_ag(x2)

U5_ag(x1, x2)  =  U5_ag(x2)

eq_in_gg(x1, x2)  =  eq_in_gg(x1, x2)

eq_out_gg(x1, x2)  =  eq_out_gg

vl_out_ag(x1, x2)  =  vl_out_ag

U6_ag(x1, x2, x3, x4)  =  U6_ag(x3, x4)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

U7_ag(x1, x2, x3, x4)  =  U7_ag(x4)

U4_g(x1, x2)  =  U4_g(x2)

vlcnd_in_a(x1)  =  vlcnd_in_a

U1_a(x1, x2)  =  U1_a(x2)

vl_in_aa(x1, x2)  =  vl_in_aa

U5_aa(x1, x2)  =  U5_aa(x2)

vl_out_aa(x1, x2)  =  vl_out_aa(x2)

U6_aa(x1, x2, x3, x4)  =  U6_aa(x4)

U7_aa(x1, x2, x3, x4)  =  U7_aa(x4)

U2_a(x1, x2)  =  U2_a(x2)

U3_a(x1, x2)  =  U3_a(x2)

U4_a(x1, x2)  =  U4_a(x2)

vlcnd_out_a(x1)  =  vlcnd_out_a

vlcnd_out_g(x1)  =  vlcnd_out_g

VLCND_IN_G(x1)  =  VLCND_IN_G(x1)

U1_G(x1, x2)  =  U1_G(x2)

VL_IN_GA(x1, x2)  =  VL_IN_GA(x1)

U5_GA(x1, x2)  =  U5_GA(x2)

EQ_IN_AG(x1, x2)  =  EQ_IN_AG(x2)

U6_GA(x1, x2, x3, x4)  =  U6_GA(x4)

P_IN_GA(x1, x2)  =  P_IN_GA(x1)

U7_GA(x1, x2, x3, x4)  =  U7_GA(x4)

U2_G(x1, x2)  =  U2_G(x2)

SELECT_IN_AGA(x1, x2, x3)  =  SELECT_IN_AGA(x2)

U8_AGA(x1, x2, x3, x4, x5)  =  U8_AGA(x5)

U3_G(x1, x2)  =  U3_G(x2)

VL_IN_AG(x1, x2)  =  VL_IN_AG(x2)

U5_AG(x1, x2)  =  U5_AG(x2)

EQ_IN_GG(x1, x2)  =  EQ_IN_GG(x1, x2)

U6_AG(x1, x2, x3, x4)  =  U6_AG(x3, x4)

P_IN_AA(x1, x2)  =  P_IN_AA

U7_AG(x1, x2, x3, x4)  =  U7_AG(x4)

U4_G(x1, x2)  =  U4_G(x2)

VLCND_IN_A(x1)  =  VLCND_IN_A

U1_A(x1, x2)  =  U1_A(x2)

VL_IN_AA(x1, x2)  =  VL_IN_AA

U5_AA(x1, x2)  =  U5_AA(x2)

U6_AA(x1, x2, x3, x4)  =  U6_AA(x4)

U7_AA(x1, x2, x3, x4)  =  U7_AA(x4)

U2_A(x1, x2)  =  U2_A(x2)

U3_A(x1, x2)  =  U3_A(x2)

U4_A(x1, x2)  =  U4_A(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(70) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 5 SCCs with 25 less nodes.
----------------------------------------

(71)
Complex Obligation (AND)

----------------------------------------

(72)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   VL_IN_AA(N, .(X2, Xs)) -> U6_AA(N, X2, Xs, p_in_aa(N, P))
   U6_AA(N, X2, Xs, p_out_aa(N, P)) -> VL_IN_AA(P, Xs)

The TRS R consists of the following rules:

   vlcnd_in_g(N) -> U1_g(N, vl_in_ga(N, Xs))
   vl_in_ga(0, L) -> U5_ga(L, eq_in_ag(L, []))
   eq_in_ag(X, X) -> eq_out_ag(X, X)
   U5_ga(L, eq_out_ag(L, [])) -> vl_out_ga(0, L)
   vl_in_ga(N, .(X2, Xs)) -> U6_ga(N, X2, Xs, p_in_ga(N, P))
   p_in_ga(0, 0) -> p_out_ga(0, 0)
   p_in_ga(s(X), X) -> p_out_ga(s(X), X)
   U6_ga(N, X2, Xs, p_out_ga(N, P)) -> U7_ga(N, X2, Xs, vl_in_ga(P, Xs))
   U7_ga(N, X2, Xs, vl_out_ga(P, Xs)) -> vl_out_ga(N, .(X2, Xs))
   U1_g(N, vl_out_ga(N, Xs)) -> U2_g(N, select_in_aga(X1, Xs, Ys))
   select_in_aga(X, .(Y, Xs), .(Y, Ys)) -> U8_aga(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   select_in_aga(X, .(X, Xs), Xs) -> select_out_aga(X, .(X, Xs), Xs)
   U8_aga(X, Y, Xs, Ys, select_out_aga(X, Xs, Ys)) -> select_out_aga(X, .(Y, Xs), .(Y, Ys))
   U2_g(N, select_out_aga(X1, Xs, Ys)) -> U3_g(N, vl_in_ag(M, Ys))
   vl_in_ag(0, L) -> U5_ag(L, eq_in_gg(L, []))
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(0, L)
   vl_in_ag(N, .(X2, Xs)) -> U6_ag(N, X2, Xs, p_in_aa(N, P))
   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)
   U6_ag(N, X2, Xs, p_out_aa(N, P)) -> U7_ag(N, X2, Xs, vl_in_ag(P, Xs))
   U7_ag(N, X2, Xs, vl_out_ag(P, Xs)) -> vl_out_ag(N, .(X2, Xs))
   U3_g(N, vl_out_ag(M, Ys)) -> U4_g(N, vlcnd_in_a(M))
   vlcnd_in_a(N) -> U1_a(N, vl_in_aa(N, Xs))
   vl_in_aa(0, L) -> U5_aa(L, eq_in_ag(L, []))
   U5_aa(L, eq_out_ag(L, [])) -> vl_out_aa(0, L)
   vl_in_aa(N, .(X2, Xs)) -> U6_aa(N, X2, Xs, p_in_aa(N, P))
   U6_aa(N, X2, Xs, p_out_aa(N, P)) -> U7_aa(N, X2, Xs, vl_in_aa(P, Xs))
   U7_aa(N, X2, Xs, vl_out_aa(P, Xs)) -> vl_out_aa(N, .(X2, Xs))
   U1_a(N, vl_out_aa(N, Xs)) -> U2_a(N, select_in_aga(X1, Xs, Ys))
   U2_a(N, select_out_aga(X1, Xs, Ys)) -> U3_a(N, vl_in_ag(M, Ys))
   U3_a(N, vl_out_ag(M, Ys)) -> U4_a(N, vlcnd_in_a(M))
   vlcnd_in_a(0) -> vlcnd_out_a(0)
   U4_a(N, vlcnd_out_a(M)) -> vlcnd_out_a(N)
   U4_g(N, vlcnd_out_a(M)) -> vlcnd_out_g(N)
   vlcnd_in_g(0) -> vlcnd_out_g(0)

The argument filtering Pi contains the following mapping:
vlcnd_in_g(x1)  =  vlcnd_in_g(x1)

U1_g(x1, x2)  =  U1_g(x2)

vl_in_ga(x1, x2)  =  vl_in_ga(x1)

0  =  0

U5_ga(x1, x2)  =  U5_ga(x2)

eq_in_ag(x1, x2)  =  eq_in_ag(x2)

eq_out_ag(x1, x2)  =  eq_out_ag(x1)

[]  =  []

vl_out_ga(x1, x2)  =  vl_out_ga(x2)

U6_ga(x1, x2, x3, x4)  =  U6_ga(x4)

p_in_ga(x1, x2)  =  p_in_ga(x1)

p_out_ga(x1, x2)  =  p_out_ga(x2)

s(x1)  =  s(x1)

U7_ga(x1, x2, x3, x4)  =  U7_ga(x4)

.(x1, x2)  =  .(x2)

U2_g(x1, x2)  =  U2_g(x2)

select_in_aga(x1, x2, x3)  =  select_in_aga(x2)

U8_aga(x1, x2, x3, x4, x5)  =  U8_aga(x5)

select_out_aga(x1, x2, x3)  =  select_out_aga(x3)

U3_g(x1, x2)  =  U3_g(x2)

vl_in_ag(x1, x2)  =  vl_in_ag(x2)

U5_ag(x1, x2)  =  U5_ag(x2)

eq_in_gg(x1, x2)  =  eq_in_gg(x1, x2)

eq_out_gg(x1, x2)  =  eq_out_gg

vl_out_ag(x1, x2)  =  vl_out_ag

U6_ag(x1, x2, x3, x4)  =  U6_ag(x3, x4)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

U7_ag(x1, x2, x3, x4)  =  U7_ag(x4)

U4_g(x1, x2)  =  U4_g(x2)

vlcnd_in_a(x1)  =  vlcnd_in_a

U1_a(x1, x2)  =  U1_a(x2)

vl_in_aa(x1, x2)  =  vl_in_aa

U5_aa(x1, x2)  =  U5_aa(x2)

vl_out_aa(x1, x2)  =  vl_out_aa(x2)

U6_aa(x1, x2, x3, x4)  =  U6_aa(x4)

U7_aa(x1, x2, x3, x4)  =  U7_aa(x4)

U2_a(x1, x2)  =  U2_a(x2)

U3_a(x1, x2)  =  U3_a(x2)

U4_a(x1, x2)  =  U4_a(x2)

vlcnd_out_a(x1)  =  vlcnd_out_a

vlcnd_out_g(x1)  =  vlcnd_out_g

VL_IN_AA(x1, x2)  =  VL_IN_AA

U6_AA(x1, x2, x3, x4)  =  U6_AA(x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(73) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(74)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   VL_IN_AA(N, .(X2, Xs)) -> U6_AA(N, X2, Xs, p_in_aa(N, P))
   U6_AA(N, X2, Xs, p_out_aa(N, P)) -> VL_IN_AA(P, Xs)

The TRS R consists of the following rules:

   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)

The argument filtering Pi contains the following mapping:
0  =  0

s(x1)  =  s(x1)

.(x1, x2)  =  .(x2)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

VL_IN_AA(x1, x2)  =  VL_IN_AA

U6_AA(x1, x2, x3, x4)  =  U6_AA(x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(75) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(76)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   VL_IN_AA -> U6_AA(p_in_aa)
   U6_AA(p_out_aa) -> VL_IN_AA

The TRS R consists of the following rules:

   p_in_aa -> p_out_aa

The set Q consists of the following terms:

   p_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(77) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule VL_IN_AA -> U6_AA(p_in_aa) at position [0] we obtained the following new rules [LPAR04]:

   (VL_IN_AA -> U6_AA(p_out_aa),VL_IN_AA -> U6_AA(p_out_aa))


----------------------------------------

(78)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U6_AA(p_out_aa) -> VL_IN_AA
   VL_IN_AA -> U6_AA(p_out_aa)

The TRS R consists of the following rules:

   p_in_aa -> p_out_aa

The set Q consists of the following terms:

   p_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(79) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(80)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U6_AA(p_out_aa) -> VL_IN_AA
   VL_IN_AA -> U6_AA(p_out_aa)

R is empty.
The set Q consists of the following terms:

   p_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(81) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   p_in_aa


----------------------------------------

(82)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U6_AA(p_out_aa) -> VL_IN_AA
   VL_IN_AA -> U6_AA(p_out_aa)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(83) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by narrowing to the left:

s = VL_IN_AA evaluates to  t =VL_IN_AA

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

VL_IN_AA -> U6_AA(p_out_aa)
with rule VL_IN_AA -> U6_AA(p_out_aa) at position [] and matcher [ ]

U6_AA(p_out_aa) -> VL_IN_AA
with rule U6_AA(p_out_aa) -> VL_IN_AA

Now applying the matcher to the start term leads to a term which is equal to the last term in the rewriting sequence


All these steps are and every following step will be a correct step w.r.t to Q.




----------------------------------------

(84)
NO

----------------------------------------

(85)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   VL_IN_AG(N, .(X2, Xs)) -> U6_AG(N, X2, Xs, p_in_aa(N, P))
   U6_AG(N, X2, Xs, p_out_aa(N, P)) -> VL_IN_AG(P, Xs)

The TRS R consists of the following rules:

   vlcnd_in_g(N) -> U1_g(N, vl_in_ga(N, Xs))
   vl_in_ga(0, L) -> U5_ga(L, eq_in_ag(L, []))
   eq_in_ag(X, X) -> eq_out_ag(X, X)
   U5_ga(L, eq_out_ag(L, [])) -> vl_out_ga(0, L)
   vl_in_ga(N, .(X2, Xs)) -> U6_ga(N, X2, Xs, p_in_ga(N, P))
   p_in_ga(0, 0) -> p_out_ga(0, 0)
   p_in_ga(s(X), X) -> p_out_ga(s(X), X)
   U6_ga(N, X2, Xs, p_out_ga(N, P)) -> U7_ga(N, X2, Xs, vl_in_ga(P, Xs))
   U7_ga(N, X2, Xs, vl_out_ga(P, Xs)) -> vl_out_ga(N, .(X2, Xs))
   U1_g(N, vl_out_ga(N, Xs)) -> U2_g(N, select_in_aga(X1, Xs, Ys))
   select_in_aga(X, .(Y, Xs), .(Y, Ys)) -> U8_aga(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   select_in_aga(X, .(X, Xs), Xs) -> select_out_aga(X, .(X, Xs), Xs)
   U8_aga(X, Y, Xs, Ys, select_out_aga(X, Xs, Ys)) -> select_out_aga(X, .(Y, Xs), .(Y, Ys))
   U2_g(N, select_out_aga(X1, Xs, Ys)) -> U3_g(N, vl_in_ag(M, Ys))
   vl_in_ag(0, L) -> U5_ag(L, eq_in_gg(L, []))
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(0, L)
   vl_in_ag(N, .(X2, Xs)) -> U6_ag(N, X2, Xs, p_in_aa(N, P))
   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)
   U6_ag(N, X2, Xs, p_out_aa(N, P)) -> U7_ag(N, X2, Xs, vl_in_ag(P, Xs))
   U7_ag(N, X2, Xs, vl_out_ag(P, Xs)) -> vl_out_ag(N, .(X2, Xs))
   U3_g(N, vl_out_ag(M, Ys)) -> U4_g(N, vlcnd_in_a(M))
   vlcnd_in_a(N) -> U1_a(N, vl_in_aa(N, Xs))
   vl_in_aa(0, L) -> U5_aa(L, eq_in_ag(L, []))
   U5_aa(L, eq_out_ag(L, [])) -> vl_out_aa(0, L)
   vl_in_aa(N, .(X2, Xs)) -> U6_aa(N, X2, Xs, p_in_aa(N, P))
   U6_aa(N, X2, Xs, p_out_aa(N, P)) -> U7_aa(N, X2, Xs, vl_in_aa(P, Xs))
   U7_aa(N, X2, Xs, vl_out_aa(P, Xs)) -> vl_out_aa(N, .(X2, Xs))
   U1_a(N, vl_out_aa(N, Xs)) -> U2_a(N, select_in_aga(X1, Xs, Ys))
   U2_a(N, select_out_aga(X1, Xs, Ys)) -> U3_a(N, vl_in_ag(M, Ys))
   U3_a(N, vl_out_ag(M, Ys)) -> U4_a(N, vlcnd_in_a(M))
   vlcnd_in_a(0) -> vlcnd_out_a(0)
   U4_a(N, vlcnd_out_a(M)) -> vlcnd_out_a(N)
   U4_g(N, vlcnd_out_a(M)) -> vlcnd_out_g(N)
   vlcnd_in_g(0) -> vlcnd_out_g(0)

The argument filtering Pi contains the following mapping:
vlcnd_in_g(x1)  =  vlcnd_in_g(x1)

U1_g(x1, x2)  =  U1_g(x2)

vl_in_ga(x1, x2)  =  vl_in_ga(x1)

0  =  0

U5_ga(x1, x2)  =  U5_ga(x2)

eq_in_ag(x1, x2)  =  eq_in_ag(x2)

eq_out_ag(x1, x2)  =  eq_out_ag(x1)

[]  =  []

vl_out_ga(x1, x2)  =  vl_out_ga(x2)

U6_ga(x1, x2, x3, x4)  =  U6_ga(x4)

p_in_ga(x1, x2)  =  p_in_ga(x1)

p_out_ga(x1, x2)  =  p_out_ga(x2)

s(x1)  =  s(x1)

U7_ga(x1, x2, x3, x4)  =  U7_ga(x4)

.(x1, x2)  =  .(x2)

U2_g(x1, x2)  =  U2_g(x2)

select_in_aga(x1, x2, x3)  =  select_in_aga(x2)

U8_aga(x1, x2, x3, x4, x5)  =  U8_aga(x5)

select_out_aga(x1, x2, x3)  =  select_out_aga(x3)

U3_g(x1, x2)  =  U3_g(x2)

vl_in_ag(x1, x2)  =  vl_in_ag(x2)

U5_ag(x1, x2)  =  U5_ag(x2)

eq_in_gg(x1, x2)  =  eq_in_gg(x1, x2)

eq_out_gg(x1, x2)  =  eq_out_gg

vl_out_ag(x1, x2)  =  vl_out_ag

U6_ag(x1, x2, x3, x4)  =  U6_ag(x3, x4)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

U7_ag(x1, x2, x3, x4)  =  U7_ag(x4)

U4_g(x1, x2)  =  U4_g(x2)

vlcnd_in_a(x1)  =  vlcnd_in_a

U1_a(x1, x2)  =  U1_a(x2)

vl_in_aa(x1, x2)  =  vl_in_aa

U5_aa(x1, x2)  =  U5_aa(x2)

vl_out_aa(x1, x2)  =  vl_out_aa(x2)

U6_aa(x1, x2, x3, x4)  =  U6_aa(x4)

U7_aa(x1, x2, x3, x4)  =  U7_aa(x4)

U2_a(x1, x2)  =  U2_a(x2)

U3_a(x1, x2)  =  U3_a(x2)

U4_a(x1, x2)  =  U4_a(x2)

vlcnd_out_a(x1)  =  vlcnd_out_a

vlcnd_out_g(x1)  =  vlcnd_out_g

VL_IN_AG(x1, x2)  =  VL_IN_AG(x2)

U6_AG(x1, x2, x3, x4)  =  U6_AG(x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(86) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(87)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   VL_IN_AG(N, .(X2, Xs)) -> U6_AG(N, X2, Xs, p_in_aa(N, P))
   U6_AG(N, X2, Xs, p_out_aa(N, P)) -> VL_IN_AG(P, Xs)

The TRS R consists of the following rules:

   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)

The argument filtering Pi contains the following mapping:
0  =  0

s(x1)  =  s(x1)

.(x1, x2)  =  .(x2)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

VL_IN_AG(x1, x2)  =  VL_IN_AG(x2)

U6_AG(x1, x2, x3, x4)  =  U6_AG(x3, x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(88) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(89)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   VL_IN_AG(.(Xs)) -> U6_AG(Xs, p_in_aa)
   U6_AG(Xs, p_out_aa) -> VL_IN_AG(Xs)

The TRS R consists of the following rules:

   p_in_aa -> p_out_aa

The set Q consists of the following terms:

   p_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(90) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*U6_AG(Xs, p_out_aa) -> VL_IN_AG(Xs)
The graph contains the following edges 1 >= 1


*VL_IN_AG(.(Xs)) -> U6_AG(Xs, p_in_aa)
The graph contains the following edges 1 > 1


----------------------------------------

(91)
YES

----------------------------------------

(92)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SELECT_IN_AGA(X, .(Y, Xs), .(Y, Ys)) -> SELECT_IN_AGA(X, Xs, Ys)

The TRS R consists of the following rules:

   vlcnd_in_g(N) -> U1_g(N, vl_in_ga(N, Xs))
   vl_in_ga(0, L) -> U5_ga(L, eq_in_ag(L, []))
   eq_in_ag(X, X) -> eq_out_ag(X, X)
   U5_ga(L, eq_out_ag(L, [])) -> vl_out_ga(0, L)
   vl_in_ga(N, .(X2, Xs)) -> U6_ga(N, X2, Xs, p_in_ga(N, P))
   p_in_ga(0, 0) -> p_out_ga(0, 0)
   p_in_ga(s(X), X) -> p_out_ga(s(X), X)
   U6_ga(N, X2, Xs, p_out_ga(N, P)) -> U7_ga(N, X2, Xs, vl_in_ga(P, Xs))
   U7_ga(N, X2, Xs, vl_out_ga(P, Xs)) -> vl_out_ga(N, .(X2, Xs))
   U1_g(N, vl_out_ga(N, Xs)) -> U2_g(N, select_in_aga(X1, Xs, Ys))
   select_in_aga(X, .(Y, Xs), .(Y, Ys)) -> U8_aga(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   select_in_aga(X, .(X, Xs), Xs) -> select_out_aga(X, .(X, Xs), Xs)
   U8_aga(X, Y, Xs, Ys, select_out_aga(X, Xs, Ys)) -> select_out_aga(X, .(Y, Xs), .(Y, Ys))
   U2_g(N, select_out_aga(X1, Xs, Ys)) -> U3_g(N, vl_in_ag(M, Ys))
   vl_in_ag(0, L) -> U5_ag(L, eq_in_gg(L, []))
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(0, L)
   vl_in_ag(N, .(X2, Xs)) -> U6_ag(N, X2, Xs, p_in_aa(N, P))
   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)
   U6_ag(N, X2, Xs, p_out_aa(N, P)) -> U7_ag(N, X2, Xs, vl_in_ag(P, Xs))
   U7_ag(N, X2, Xs, vl_out_ag(P, Xs)) -> vl_out_ag(N, .(X2, Xs))
   U3_g(N, vl_out_ag(M, Ys)) -> U4_g(N, vlcnd_in_a(M))
   vlcnd_in_a(N) -> U1_a(N, vl_in_aa(N, Xs))
   vl_in_aa(0, L) -> U5_aa(L, eq_in_ag(L, []))
   U5_aa(L, eq_out_ag(L, [])) -> vl_out_aa(0, L)
   vl_in_aa(N, .(X2, Xs)) -> U6_aa(N, X2, Xs, p_in_aa(N, P))
   U6_aa(N, X2, Xs, p_out_aa(N, P)) -> U7_aa(N, X2, Xs, vl_in_aa(P, Xs))
   U7_aa(N, X2, Xs, vl_out_aa(P, Xs)) -> vl_out_aa(N, .(X2, Xs))
   U1_a(N, vl_out_aa(N, Xs)) -> U2_a(N, select_in_aga(X1, Xs, Ys))
   U2_a(N, select_out_aga(X1, Xs, Ys)) -> U3_a(N, vl_in_ag(M, Ys))
   U3_a(N, vl_out_ag(M, Ys)) -> U4_a(N, vlcnd_in_a(M))
   vlcnd_in_a(0) -> vlcnd_out_a(0)
   U4_a(N, vlcnd_out_a(M)) -> vlcnd_out_a(N)
   U4_g(N, vlcnd_out_a(M)) -> vlcnd_out_g(N)
   vlcnd_in_g(0) -> vlcnd_out_g(0)

The argument filtering Pi contains the following mapping:
vlcnd_in_g(x1)  =  vlcnd_in_g(x1)

U1_g(x1, x2)  =  U1_g(x2)

vl_in_ga(x1, x2)  =  vl_in_ga(x1)

0  =  0

U5_ga(x1, x2)  =  U5_ga(x2)

eq_in_ag(x1, x2)  =  eq_in_ag(x2)

eq_out_ag(x1, x2)  =  eq_out_ag(x1)

[]  =  []

vl_out_ga(x1, x2)  =  vl_out_ga(x2)

U6_ga(x1, x2, x3, x4)  =  U6_ga(x4)

p_in_ga(x1, x2)  =  p_in_ga(x1)

p_out_ga(x1, x2)  =  p_out_ga(x2)

s(x1)  =  s(x1)

U7_ga(x1, x2, x3, x4)  =  U7_ga(x4)

.(x1, x2)  =  .(x2)

U2_g(x1, x2)  =  U2_g(x2)

select_in_aga(x1, x2, x3)  =  select_in_aga(x2)

U8_aga(x1, x2, x3, x4, x5)  =  U8_aga(x5)

select_out_aga(x1, x2, x3)  =  select_out_aga(x3)

U3_g(x1, x2)  =  U3_g(x2)

vl_in_ag(x1, x2)  =  vl_in_ag(x2)

U5_ag(x1, x2)  =  U5_ag(x2)

eq_in_gg(x1, x2)  =  eq_in_gg(x1, x2)

eq_out_gg(x1, x2)  =  eq_out_gg

vl_out_ag(x1, x2)  =  vl_out_ag

U6_ag(x1, x2, x3, x4)  =  U6_ag(x3, x4)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

U7_ag(x1, x2, x3, x4)  =  U7_ag(x4)

U4_g(x1, x2)  =  U4_g(x2)

vlcnd_in_a(x1)  =  vlcnd_in_a

U1_a(x1, x2)  =  U1_a(x2)

vl_in_aa(x1, x2)  =  vl_in_aa

U5_aa(x1, x2)  =  U5_aa(x2)

vl_out_aa(x1, x2)  =  vl_out_aa(x2)

U6_aa(x1, x2, x3, x4)  =  U6_aa(x4)

U7_aa(x1, x2, x3, x4)  =  U7_aa(x4)

U2_a(x1, x2)  =  U2_a(x2)

U3_a(x1, x2)  =  U3_a(x2)

U4_a(x1, x2)  =  U4_a(x2)

vlcnd_out_a(x1)  =  vlcnd_out_a

vlcnd_out_g(x1)  =  vlcnd_out_g

SELECT_IN_AGA(x1, x2, x3)  =  SELECT_IN_AGA(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(93) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(94)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SELECT_IN_AGA(X, .(Y, Xs), .(Y, Ys)) -> SELECT_IN_AGA(X, Xs, Ys)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x2)

SELECT_IN_AGA(x1, x2, x3)  =  SELECT_IN_AGA(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(95) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(96)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   SELECT_IN_AGA(.(Xs)) -> SELECT_IN_AGA(Xs)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(97) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*SELECT_IN_AGA(.(Xs)) -> SELECT_IN_AGA(Xs)
The graph contains the following edges 1 > 1


----------------------------------------

(98)
YES

----------------------------------------

(99)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U1_A(N, vl_out_aa(N, Xs)) -> U2_A(N, select_in_aga(X1, Xs, Ys))
   U2_A(N, select_out_aga(X1, Xs, Ys)) -> U3_A(N, vl_in_ag(M, Ys))
   U3_A(N, vl_out_ag(M, Ys)) -> VLCND_IN_A(M)
   VLCND_IN_A(N) -> U1_A(N, vl_in_aa(N, Xs))

The TRS R consists of the following rules:

   vlcnd_in_g(N) -> U1_g(N, vl_in_ga(N, Xs))
   vl_in_ga(0, L) -> U5_ga(L, eq_in_ag(L, []))
   eq_in_ag(X, X) -> eq_out_ag(X, X)
   U5_ga(L, eq_out_ag(L, [])) -> vl_out_ga(0, L)
   vl_in_ga(N, .(X2, Xs)) -> U6_ga(N, X2, Xs, p_in_ga(N, P))
   p_in_ga(0, 0) -> p_out_ga(0, 0)
   p_in_ga(s(X), X) -> p_out_ga(s(X), X)
   U6_ga(N, X2, Xs, p_out_ga(N, P)) -> U7_ga(N, X2, Xs, vl_in_ga(P, Xs))
   U7_ga(N, X2, Xs, vl_out_ga(P, Xs)) -> vl_out_ga(N, .(X2, Xs))
   U1_g(N, vl_out_ga(N, Xs)) -> U2_g(N, select_in_aga(X1, Xs, Ys))
   select_in_aga(X, .(Y, Xs), .(Y, Ys)) -> U8_aga(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   select_in_aga(X, .(X, Xs), Xs) -> select_out_aga(X, .(X, Xs), Xs)
   U8_aga(X, Y, Xs, Ys, select_out_aga(X, Xs, Ys)) -> select_out_aga(X, .(Y, Xs), .(Y, Ys))
   U2_g(N, select_out_aga(X1, Xs, Ys)) -> U3_g(N, vl_in_ag(M, Ys))
   vl_in_ag(0, L) -> U5_ag(L, eq_in_gg(L, []))
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(0, L)
   vl_in_ag(N, .(X2, Xs)) -> U6_ag(N, X2, Xs, p_in_aa(N, P))
   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)
   U6_ag(N, X2, Xs, p_out_aa(N, P)) -> U7_ag(N, X2, Xs, vl_in_ag(P, Xs))
   U7_ag(N, X2, Xs, vl_out_ag(P, Xs)) -> vl_out_ag(N, .(X2, Xs))
   U3_g(N, vl_out_ag(M, Ys)) -> U4_g(N, vlcnd_in_a(M))
   vlcnd_in_a(N) -> U1_a(N, vl_in_aa(N, Xs))
   vl_in_aa(0, L) -> U5_aa(L, eq_in_ag(L, []))
   U5_aa(L, eq_out_ag(L, [])) -> vl_out_aa(0, L)
   vl_in_aa(N, .(X2, Xs)) -> U6_aa(N, X2, Xs, p_in_aa(N, P))
   U6_aa(N, X2, Xs, p_out_aa(N, P)) -> U7_aa(N, X2, Xs, vl_in_aa(P, Xs))
   U7_aa(N, X2, Xs, vl_out_aa(P, Xs)) -> vl_out_aa(N, .(X2, Xs))
   U1_a(N, vl_out_aa(N, Xs)) -> U2_a(N, select_in_aga(X1, Xs, Ys))
   U2_a(N, select_out_aga(X1, Xs, Ys)) -> U3_a(N, vl_in_ag(M, Ys))
   U3_a(N, vl_out_ag(M, Ys)) -> U4_a(N, vlcnd_in_a(M))
   vlcnd_in_a(0) -> vlcnd_out_a(0)
   U4_a(N, vlcnd_out_a(M)) -> vlcnd_out_a(N)
   U4_g(N, vlcnd_out_a(M)) -> vlcnd_out_g(N)
   vlcnd_in_g(0) -> vlcnd_out_g(0)

The argument filtering Pi contains the following mapping:
vlcnd_in_g(x1)  =  vlcnd_in_g(x1)

U1_g(x1, x2)  =  U1_g(x2)

vl_in_ga(x1, x2)  =  vl_in_ga(x1)

0  =  0

U5_ga(x1, x2)  =  U5_ga(x2)

eq_in_ag(x1, x2)  =  eq_in_ag(x2)

eq_out_ag(x1, x2)  =  eq_out_ag(x1)

[]  =  []

vl_out_ga(x1, x2)  =  vl_out_ga(x2)

U6_ga(x1, x2, x3, x4)  =  U6_ga(x4)

p_in_ga(x1, x2)  =  p_in_ga(x1)

p_out_ga(x1, x2)  =  p_out_ga(x2)

s(x1)  =  s(x1)

U7_ga(x1, x2, x3, x4)  =  U7_ga(x4)

.(x1, x2)  =  .(x2)

U2_g(x1, x2)  =  U2_g(x2)

select_in_aga(x1, x2, x3)  =  select_in_aga(x2)

U8_aga(x1, x2, x3, x4, x5)  =  U8_aga(x5)

select_out_aga(x1, x2, x3)  =  select_out_aga(x3)

U3_g(x1, x2)  =  U3_g(x2)

vl_in_ag(x1, x2)  =  vl_in_ag(x2)

U5_ag(x1, x2)  =  U5_ag(x2)

eq_in_gg(x1, x2)  =  eq_in_gg(x1, x2)

eq_out_gg(x1, x2)  =  eq_out_gg

vl_out_ag(x1, x2)  =  vl_out_ag

U6_ag(x1, x2, x3, x4)  =  U6_ag(x3, x4)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

U7_ag(x1, x2, x3, x4)  =  U7_ag(x4)

U4_g(x1, x2)  =  U4_g(x2)

vlcnd_in_a(x1)  =  vlcnd_in_a

U1_a(x1, x2)  =  U1_a(x2)

vl_in_aa(x1, x2)  =  vl_in_aa

U5_aa(x1, x2)  =  U5_aa(x2)

vl_out_aa(x1, x2)  =  vl_out_aa(x2)

U6_aa(x1, x2, x3, x4)  =  U6_aa(x4)

U7_aa(x1, x2, x3, x4)  =  U7_aa(x4)

U2_a(x1, x2)  =  U2_a(x2)

U3_a(x1, x2)  =  U3_a(x2)

U4_a(x1, x2)  =  U4_a(x2)

vlcnd_out_a(x1)  =  vlcnd_out_a

vlcnd_out_g(x1)  =  vlcnd_out_g

VLCND_IN_A(x1)  =  VLCND_IN_A

U1_A(x1, x2)  =  U1_A(x2)

U2_A(x1, x2)  =  U2_A(x2)

U3_A(x1, x2)  =  U3_A(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(100) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(101)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U1_A(N, vl_out_aa(N, Xs)) -> U2_A(N, select_in_aga(X1, Xs, Ys))
   U2_A(N, select_out_aga(X1, Xs, Ys)) -> U3_A(N, vl_in_ag(M, Ys))
   U3_A(N, vl_out_ag(M, Ys)) -> VLCND_IN_A(M)
   VLCND_IN_A(N) -> U1_A(N, vl_in_aa(N, Xs))

The TRS R consists of the following rules:

   select_in_aga(X, .(Y, Xs), .(Y, Ys)) -> U8_aga(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   select_in_aga(X, .(X, Xs), Xs) -> select_out_aga(X, .(X, Xs), Xs)
   vl_in_ag(0, L) -> U5_ag(L, eq_in_gg(L, []))
   vl_in_ag(N, .(X2, Xs)) -> U6_ag(N, X2, Xs, p_in_aa(N, P))
   vl_in_aa(0, L) -> U5_aa(L, eq_in_ag(L, []))
   vl_in_aa(N, .(X2, Xs)) -> U6_aa(N, X2, Xs, p_in_aa(N, P))
   U8_aga(X, Y, Xs, Ys, select_out_aga(X, Xs, Ys)) -> select_out_aga(X, .(Y, Xs), .(Y, Ys))
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(0, L)
   U6_ag(N, X2, Xs, p_out_aa(N, P)) -> U7_ag(N, X2, Xs, vl_in_ag(P, Xs))
   U5_aa(L, eq_out_ag(L, [])) -> vl_out_aa(0, L)
   U6_aa(N, X2, Xs, p_out_aa(N, P)) -> U7_aa(N, X2, Xs, vl_in_aa(P, Xs))
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)
   U7_ag(N, X2, Xs, vl_out_ag(P, Xs)) -> vl_out_ag(N, .(X2, Xs))
   eq_in_ag(X, X) -> eq_out_ag(X, X)
   U7_aa(N, X2, Xs, vl_out_aa(P, Xs)) -> vl_out_aa(N, .(X2, Xs))

The argument filtering Pi contains the following mapping:
0  =  0

eq_in_ag(x1, x2)  =  eq_in_ag(x2)

eq_out_ag(x1, x2)  =  eq_out_ag(x1)

[]  =  []

s(x1)  =  s(x1)

.(x1, x2)  =  .(x2)

select_in_aga(x1, x2, x3)  =  select_in_aga(x2)

U8_aga(x1, x2, x3, x4, x5)  =  U8_aga(x5)

select_out_aga(x1, x2, x3)  =  select_out_aga(x3)

vl_in_ag(x1, x2)  =  vl_in_ag(x2)

U5_ag(x1, x2)  =  U5_ag(x2)

eq_in_gg(x1, x2)  =  eq_in_gg(x1, x2)

eq_out_gg(x1, x2)  =  eq_out_gg

vl_out_ag(x1, x2)  =  vl_out_ag

U6_ag(x1, x2, x3, x4)  =  U6_ag(x3, x4)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

U7_ag(x1, x2, x3, x4)  =  U7_ag(x4)

vl_in_aa(x1, x2)  =  vl_in_aa

U5_aa(x1, x2)  =  U5_aa(x2)

vl_out_aa(x1, x2)  =  vl_out_aa(x2)

U6_aa(x1, x2, x3, x4)  =  U6_aa(x4)

U7_aa(x1, x2, x3, x4)  =  U7_aa(x4)

VLCND_IN_A(x1)  =  VLCND_IN_A

U1_A(x1, x2)  =  U1_A(x2)

U2_A(x1, x2)  =  U2_A(x2)

U3_A(x1, x2)  =  U3_A(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(102) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(103)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U1_A(vl_out_aa(Xs)) -> U2_A(select_in_aga(Xs))
   U2_A(select_out_aga(Ys)) -> U3_A(vl_in_ag(Ys))
   U3_A(vl_out_ag) -> VLCND_IN_A
   VLCND_IN_A -> U1_A(vl_in_aa)

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(Xs)
   vl_in_ag(L) -> U5_ag(eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(select_out_aga(Ys)) -> select_out_aga(.(Ys))
   U5_ag(eq_out_gg) -> vl_out_ag
   U6_ag(Xs, p_out_aa) -> U7_ag(vl_in_ag(Xs))
   U5_aa(eq_out_ag(L)) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg
   p_in_aa -> p_out_aa
   U7_ag(vl_out_ag) -> vl_out_ag
   eq_in_ag(X) -> eq_out_ag(X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0)
   U5_ag(x0)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(104) TransformationProof (SOUND)
By narrowing [LPAR04] the rule U1_A(vl_out_aa(Xs)) -> U2_A(select_in_aga(Xs)) at position [0] we obtained the following new rules [LPAR04]:

   (U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(select_in_aga(x0))),U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(select_in_aga(x0))))
   (U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(x0)),U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(x0)))


----------------------------------------

(105)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U2_A(select_out_aga(Ys)) -> U3_A(vl_in_ag(Ys))
   U3_A(vl_out_ag) -> VLCND_IN_A
   VLCND_IN_A -> U1_A(vl_in_aa)
   U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(select_in_aga(x0)))
   U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(x0))

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(Xs)
   vl_in_ag(L) -> U5_ag(eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(select_out_aga(Ys)) -> select_out_aga(.(Ys))
   U5_ag(eq_out_gg) -> vl_out_ag
   U6_ag(Xs, p_out_aa) -> U7_ag(vl_in_ag(Xs))
   U5_aa(eq_out_ag(L)) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg
   p_in_aa -> p_out_aa
   U7_ag(vl_out_ag) -> vl_out_ag
   eq_in_ag(X) -> eq_out_ag(X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0)
   U5_ag(x0)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(106) TransformationProof (SOUND)
By narrowing [LPAR04] the rule U2_A(select_out_aga(Ys)) -> U3_A(vl_in_ag(Ys)) at position [0] we obtained the following new rules [LPAR04]:

   (U2_A(select_out_aga(x0)) -> U3_A(U5_ag(eq_in_gg(x0, []))),U2_A(select_out_aga(x0)) -> U3_A(U5_ag(eq_in_gg(x0, []))))
   (U2_A(select_out_aga(.(x0))) -> U3_A(U6_ag(x0, p_in_aa)),U2_A(select_out_aga(.(x0))) -> U3_A(U6_ag(x0, p_in_aa)))


----------------------------------------

(107)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U3_A(vl_out_ag) -> VLCND_IN_A
   VLCND_IN_A -> U1_A(vl_in_aa)
   U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(select_in_aga(x0)))
   U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(x0))
   U2_A(select_out_aga(x0)) -> U3_A(U5_ag(eq_in_gg(x0, [])))
   U2_A(select_out_aga(.(x0))) -> U3_A(U6_ag(x0, p_in_aa))

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(Xs)
   vl_in_ag(L) -> U5_ag(eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(select_out_aga(Ys)) -> select_out_aga(.(Ys))
   U5_ag(eq_out_gg) -> vl_out_ag
   U6_ag(Xs, p_out_aa) -> U7_ag(vl_in_ag(Xs))
   U5_aa(eq_out_ag(L)) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg
   p_in_aa -> p_out_aa
   U7_ag(vl_out_ag) -> vl_out_ag
   eq_in_ag(X) -> eq_out_ag(X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0)
   U5_ag(x0)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(108) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule U2_A(select_out_aga(.(x0))) -> U3_A(U6_ag(x0, p_in_aa)) at position [0,1] we obtained the following new rules [LPAR04]:

   (U2_A(select_out_aga(.(x0))) -> U3_A(U6_ag(x0, p_out_aa)),U2_A(select_out_aga(.(x0))) -> U3_A(U6_ag(x0, p_out_aa)))


----------------------------------------

(109)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U3_A(vl_out_ag) -> VLCND_IN_A
   VLCND_IN_A -> U1_A(vl_in_aa)
   U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(select_in_aga(x0)))
   U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(x0))
   U2_A(select_out_aga(x0)) -> U3_A(U5_ag(eq_in_gg(x0, [])))
   U2_A(select_out_aga(.(x0))) -> U3_A(U6_ag(x0, p_out_aa))

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(Xs)
   vl_in_ag(L) -> U5_ag(eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(select_out_aga(Ys)) -> select_out_aga(.(Ys))
   U5_ag(eq_out_gg) -> vl_out_ag
   U6_ag(Xs, p_out_aa) -> U7_ag(vl_in_ag(Xs))
   U5_aa(eq_out_ag(L)) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg
   p_in_aa -> p_out_aa
   U7_ag(vl_out_ag) -> vl_out_ag
   eq_in_ag(X) -> eq_out_ag(X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0)
   U5_ag(x0)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(110) TransformationProof (SOUND)
By narrowing [LPAR04] the rule VLCND_IN_A -> U1_A(vl_in_aa) at position [0] we obtained the following new rules [LPAR04]:

   (VLCND_IN_A -> U1_A(U5_aa(eq_in_ag([]))),VLCND_IN_A -> U1_A(U5_aa(eq_in_ag([]))))
   (VLCND_IN_A -> U1_A(U6_aa(p_in_aa)),VLCND_IN_A -> U1_A(U6_aa(p_in_aa)))


----------------------------------------

(111)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U3_A(vl_out_ag) -> VLCND_IN_A
   U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(select_in_aga(x0)))
   U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(x0))
   U2_A(select_out_aga(x0)) -> U3_A(U5_ag(eq_in_gg(x0, [])))
   U2_A(select_out_aga(.(x0))) -> U3_A(U6_ag(x0, p_out_aa))
   VLCND_IN_A -> U1_A(U5_aa(eq_in_ag([])))
   VLCND_IN_A -> U1_A(U6_aa(p_in_aa))

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(Xs)
   vl_in_ag(L) -> U5_ag(eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(select_out_aga(Ys)) -> select_out_aga(.(Ys))
   U5_ag(eq_out_gg) -> vl_out_ag
   U6_ag(Xs, p_out_aa) -> U7_ag(vl_in_ag(Xs))
   U5_aa(eq_out_ag(L)) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg
   p_in_aa -> p_out_aa
   U7_ag(vl_out_ag) -> vl_out_ag
   eq_in_ag(X) -> eq_out_ag(X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0)
   U5_ag(x0)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(112) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule VLCND_IN_A -> U1_A(U5_aa(eq_in_ag([]))) at position [0,0] we obtained the following new rules [LPAR04]:

   (VLCND_IN_A -> U1_A(U5_aa(eq_out_ag([]))),VLCND_IN_A -> U1_A(U5_aa(eq_out_ag([]))))


----------------------------------------

(113)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U3_A(vl_out_ag) -> VLCND_IN_A
   U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(select_in_aga(x0)))
   U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(x0))
   U2_A(select_out_aga(x0)) -> U3_A(U5_ag(eq_in_gg(x0, [])))
   U2_A(select_out_aga(.(x0))) -> U3_A(U6_ag(x0, p_out_aa))
   VLCND_IN_A -> U1_A(U6_aa(p_in_aa))
   VLCND_IN_A -> U1_A(U5_aa(eq_out_ag([])))

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(Xs)
   vl_in_ag(L) -> U5_ag(eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(select_out_aga(Ys)) -> select_out_aga(.(Ys))
   U5_ag(eq_out_gg) -> vl_out_ag
   U6_ag(Xs, p_out_aa) -> U7_ag(vl_in_ag(Xs))
   U5_aa(eq_out_ag(L)) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg
   p_in_aa -> p_out_aa
   U7_ag(vl_out_ag) -> vl_out_ag
   eq_in_ag(X) -> eq_out_ag(X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0)
   U5_ag(x0)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(114) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule VLCND_IN_A -> U1_A(U6_aa(p_in_aa)) at position [0,0] we obtained the following new rules [LPAR04]:

   (VLCND_IN_A -> U1_A(U6_aa(p_out_aa)),VLCND_IN_A -> U1_A(U6_aa(p_out_aa)))


----------------------------------------

(115)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U3_A(vl_out_ag) -> VLCND_IN_A
   U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(select_in_aga(x0)))
   U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(x0))
   U2_A(select_out_aga(x0)) -> U3_A(U5_ag(eq_in_gg(x0, [])))
   U2_A(select_out_aga(.(x0))) -> U3_A(U6_ag(x0, p_out_aa))
   VLCND_IN_A -> U1_A(U5_aa(eq_out_ag([])))
   VLCND_IN_A -> U1_A(U6_aa(p_out_aa))

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(Xs)
   vl_in_ag(L) -> U5_ag(eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(select_out_aga(Ys)) -> select_out_aga(.(Ys))
   U5_ag(eq_out_gg) -> vl_out_ag
   U6_ag(Xs, p_out_aa) -> U7_ag(vl_in_ag(Xs))
   U5_aa(eq_out_ag(L)) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg
   p_in_aa -> p_out_aa
   U7_ag(vl_out_ag) -> vl_out_ag
   eq_in_ag(X) -> eq_out_ag(X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0)
   U5_ag(x0)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(116) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule VLCND_IN_A -> U1_A(U5_aa(eq_out_ag([]))) at position [0] we obtained the following new rules [LPAR04]:

   (VLCND_IN_A -> U1_A(vl_out_aa([])),VLCND_IN_A -> U1_A(vl_out_aa([])))


----------------------------------------

(117)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U3_A(vl_out_ag) -> VLCND_IN_A
   U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(select_in_aga(x0)))
   U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(x0))
   U2_A(select_out_aga(x0)) -> U3_A(U5_ag(eq_in_gg(x0, [])))
   U2_A(select_out_aga(.(x0))) -> U3_A(U6_ag(x0, p_out_aa))
   VLCND_IN_A -> U1_A(U6_aa(p_out_aa))
   VLCND_IN_A -> U1_A(vl_out_aa([]))

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(Xs)
   vl_in_ag(L) -> U5_ag(eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(select_out_aga(Ys)) -> select_out_aga(.(Ys))
   U5_ag(eq_out_gg) -> vl_out_ag
   U6_ag(Xs, p_out_aa) -> U7_ag(vl_in_ag(Xs))
   U5_aa(eq_out_ag(L)) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg
   p_in_aa -> p_out_aa
   U7_ag(vl_out_ag) -> vl_out_ag
   eq_in_ag(X) -> eq_out_ag(X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0)
   U5_ag(x0)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(118) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 1 SCC with 1 less node.
----------------------------------------

(119)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   VLCND_IN_A -> U1_A(U6_aa(p_out_aa))
   U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(select_in_aga(x0)))
   U2_A(select_out_aga(x0)) -> U3_A(U5_ag(eq_in_gg(x0, [])))
   U3_A(vl_out_ag) -> VLCND_IN_A
   U2_A(select_out_aga(.(x0))) -> U3_A(U6_ag(x0, p_out_aa))
   U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(x0))

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(Xs)
   vl_in_ag(L) -> U5_ag(eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(select_out_aga(Ys)) -> select_out_aga(.(Ys))
   U5_ag(eq_out_gg) -> vl_out_ag
   U6_ag(Xs, p_out_aa) -> U7_ag(vl_in_ag(Xs))
   U5_aa(eq_out_ag(L)) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg
   p_in_aa -> p_out_aa
   U7_ag(vl_out_ag) -> vl_out_ag
   eq_in_ag(X) -> eq_out_ag(X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0)
   U5_ag(x0)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(120) TransformationProof (SOUND)
By narrowing [LPAR04] the rule U2_A(select_out_aga(x0)) -> U3_A(U5_ag(eq_in_gg(x0, []))) at position [0,0] we obtained the following new rules [LPAR04]:

   (U2_A(select_out_aga([])) -> U3_A(U5_ag(eq_out_gg)),U2_A(select_out_aga([])) -> U3_A(U5_ag(eq_out_gg)))


----------------------------------------

(121)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   VLCND_IN_A -> U1_A(U6_aa(p_out_aa))
   U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(select_in_aga(x0)))
   U3_A(vl_out_ag) -> VLCND_IN_A
   U2_A(select_out_aga(.(x0))) -> U3_A(U6_ag(x0, p_out_aa))
   U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(x0))
   U2_A(select_out_aga([])) -> U3_A(U5_ag(eq_out_gg))

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(Xs)
   vl_in_ag(L) -> U5_ag(eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(select_out_aga(Ys)) -> select_out_aga(.(Ys))
   U5_ag(eq_out_gg) -> vl_out_ag
   U6_ag(Xs, p_out_aa) -> U7_ag(vl_in_ag(Xs))
   U5_aa(eq_out_ag(L)) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg
   p_in_aa -> p_out_aa
   U7_ag(vl_out_ag) -> vl_out_ag
   eq_in_ag(X) -> eq_out_ag(X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0)
   U5_ag(x0)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(122) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule U2_A(select_out_aga([])) -> U3_A(U5_ag(eq_out_gg)) at position [0] we obtained the following new rules [LPAR04]:

   (U2_A(select_out_aga([])) -> U3_A(vl_out_ag),U2_A(select_out_aga([])) -> U3_A(vl_out_ag))


----------------------------------------

(123)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   VLCND_IN_A -> U1_A(U6_aa(p_out_aa))
   U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(select_in_aga(x0)))
   U3_A(vl_out_ag) -> VLCND_IN_A
   U2_A(select_out_aga(.(x0))) -> U3_A(U6_ag(x0, p_out_aa))
   U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(x0))
   U2_A(select_out_aga([])) -> U3_A(vl_out_ag)

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(Xs)
   vl_in_ag(L) -> U5_ag(eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(select_out_aga(Ys)) -> select_out_aga(.(Ys))
   U5_ag(eq_out_gg) -> vl_out_ag
   U6_ag(Xs, p_out_aa) -> U7_ag(vl_in_ag(Xs))
   U5_aa(eq_out_ag(L)) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg
   p_in_aa -> p_out_aa
   U7_ag(vl_out_ag) -> vl_out_ag
   eq_in_ag(X) -> eq_out_ag(X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0)
   U5_ag(x0)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(124) TransformationProof (EQUIVALENT)
By forward instantiating [JAR06] the rule U1_A(vl_out_aa(.(x0))) -> U2_A(select_out_aga(x0)) we obtained the following new rules [LPAR04]:

   (U1_A(vl_out_aa(.(.(y_0)))) -> U2_A(select_out_aga(.(y_0))),U1_A(vl_out_aa(.(.(y_0)))) -> U2_A(select_out_aga(.(y_0))))
   (U1_A(vl_out_aa(.([]))) -> U2_A(select_out_aga([])),U1_A(vl_out_aa(.([]))) -> U2_A(select_out_aga([])))


----------------------------------------

(125)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   VLCND_IN_A -> U1_A(U6_aa(p_out_aa))
   U1_A(vl_out_aa(.(x0))) -> U2_A(U8_aga(select_in_aga(x0)))
   U3_A(vl_out_ag) -> VLCND_IN_A
   U2_A(select_out_aga(.(x0))) -> U3_A(U6_ag(x0, p_out_aa))
   U2_A(select_out_aga([])) -> U3_A(vl_out_ag)
   U1_A(vl_out_aa(.(.(y_0)))) -> U2_A(select_out_aga(.(y_0)))
   U1_A(vl_out_aa(.([]))) -> U2_A(select_out_aga([]))

The TRS R consists of the following rules:

   select_in_aga(.(Xs)) -> U8_aga(select_in_aga(Xs))
   select_in_aga(.(Xs)) -> select_out_aga(Xs)
   vl_in_ag(L) -> U5_ag(eq_in_gg(L, []))
   vl_in_ag(.(Xs)) -> U6_ag(Xs, p_in_aa)
   vl_in_aa -> U5_aa(eq_in_ag([]))
   vl_in_aa -> U6_aa(p_in_aa)
   U8_aga(select_out_aga(Ys)) -> select_out_aga(.(Ys))
   U5_ag(eq_out_gg) -> vl_out_ag
   U6_ag(Xs, p_out_aa) -> U7_ag(vl_in_ag(Xs))
   U5_aa(eq_out_ag(L)) -> vl_out_aa(L)
   U6_aa(p_out_aa) -> U7_aa(vl_in_aa)
   eq_in_gg(X, X) -> eq_out_gg
   p_in_aa -> p_out_aa
   U7_ag(vl_out_ag) -> vl_out_ag
   eq_in_ag(X) -> eq_out_ag(X)
   U7_aa(vl_out_aa(Xs)) -> vl_out_aa(.(Xs))

The set Q consists of the following terms:

   select_in_aga(x0)
   vl_in_ag(x0)
   vl_in_aa
   U8_aga(x0)
   U5_ag(x0)
   U6_ag(x0, x1)
   U5_aa(x0)
   U6_aa(x0)
   eq_in_gg(x0, x1)
   p_in_aa
   U7_ag(x0)
   eq_in_ag(x0)
   U7_aa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(126)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   VL_IN_GA(N, .(X2, Xs)) -> U6_GA(N, X2, Xs, p_in_ga(N, P))
   U6_GA(N, X2, Xs, p_out_ga(N, P)) -> VL_IN_GA(P, Xs)

The TRS R consists of the following rules:

   vlcnd_in_g(N) -> U1_g(N, vl_in_ga(N, Xs))
   vl_in_ga(0, L) -> U5_ga(L, eq_in_ag(L, []))
   eq_in_ag(X, X) -> eq_out_ag(X, X)
   U5_ga(L, eq_out_ag(L, [])) -> vl_out_ga(0, L)
   vl_in_ga(N, .(X2, Xs)) -> U6_ga(N, X2, Xs, p_in_ga(N, P))
   p_in_ga(0, 0) -> p_out_ga(0, 0)
   p_in_ga(s(X), X) -> p_out_ga(s(X), X)
   U6_ga(N, X2, Xs, p_out_ga(N, P)) -> U7_ga(N, X2, Xs, vl_in_ga(P, Xs))
   U7_ga(N, X2, Xs, vl_out_ga(P, Xs)) -> vl_out_ga(N, .(X2, Xs))
   U1_g(N, vl_out_ga(N, Xs)) -> U2_g(N, select_in_aga(X1, Xs, Ys))
   select_in_aga(X, .(Y, Xs), .(Y, Ys)) -> U8_aga(X, Y, Xs, Ys, select_in_aga(X, Xs, Ys))
   select_in_aga(X, .(X, Xs), Xs) -> select_out_aga(X, .(X, Xs), Xs)
   U8_aga(X, Y, Xs, Ys, select_out_aga(X, Xs, Ys)) -> select_out_aga(X, .(Y, Xs), .(Y, Ys))
   U2_g(N, select_out_aga(X1, Xs, Ys)) -> U3_g(N, vl_in_ag(M, Ys))
   vl_in_ag(0, L) -> U5_ag(L, eq_in_gg(L, []))
   eq_in_gg(X, X) -> eq_out_gg(X, X)
   U5_ag(L, eq_out_gg(L, [])) -> vl_out_ag(0, L)
   vl_in_ag(N, .(X2, Xs)) -> U6_ag(N, X2, Xs, p_in_aa(N, P))
   p_in_aa(0, 0) -> p_out_aa(0, 0)
   p_in_aa(s(X), X) -> p_out_aa(s(X), X)
   U6_ag(N, X2, Xs, p_out_aa(N, P)) -> U7_ag(N, X2, Xs, vl_in_ag(P, Xs))
   U7_ag(N, X2, Xs, vl_out_ag(P, Xs)) -> vl_out_ag(N, .(X2, Xs))
   U3_g(N, vl_out_ag(M, Ys)) -> U4_g(N, vlcnd_in_a(M))
   vlcnd_in_a(N) -> U1_a(N, vl_in_aa(N, Xs))
   vl_in_aa(0, L) -> U5_aa(L, eq_in_ag(L, []))
   U5_aa(L, eq_out_ag(L, [])) -> vl_out_aa(0, L)
   vl_in_aa(N, .(X2, Xs)) -> U6_aa(N, X2, Xs, p_in_aa(N, P))
   U6_aa(N, X2, Xs, p_out_aa(N, P)) -> U7_aa(N, X2, Xs, vl_in_aa(P, Xs))
   U7_aa(N, X2, Xs, vl_out_aa(P, Xs)) -> vl_out_aa(N, .(X2, Xs))
   U1_a(N, vl_out_aa(N, Xs)) -> U2_a(N, select_in_aga(X1, Xs, Ys))
   U2_a(N, select_out_aga(X1, Xs, Ys)) -> U3_a(N, vl_in_ag(M, Ys))
   U3_a(N, vl_out_ag(M, Ys)) -> U4_a(N, vlcnd_in_a(M))
   vlcnd_in_a(0) -> vlcnd_out_a(0)
   U4_a(N, vlcnd_out_a(M)) -> vlcnd_out_a(N)
   U4_g(N, vlcnd_out_a(M)) -> vlcnd_out_g(N)
   vlcnd_in_g(0) -> vlcnd_out_g(0)

The argument filtering Pi contains the following mapping:
vlcnd_in_g(x1)  =  vlcnd_in_g(x1)

U1_g(x1, x2)  =  U1_g(x2)

vl_in_ga(x1, x2)  =  vl_in_ga(x1)

0  =  0

U5_ga(x1, x2)  =  U5_ga(x2)

eq_in_ag(x1, x2)  =  eq_in_ag(x2)

eq_out_ag(x1, x2)  =  eq_out_ag(x1)

[]  =  []

vl_out_ga(x1, x2)  =  vl_out_ga(x2)

U6_ga(x1, x2, x3, x4)  =  U6_ga(x4)

p_in_ga(x1, x2)  =  p_in_ga(x1)

p_out_ga(x1, x2)  =  p_out_ga(x2)

s(x1)  =  s(x1)

U7_ga(x1, x2, x3, x4)  =  U7_ga(x4)

.(x1, x2)  =  .(x2)

U2_g(x1, x2)  =  U2_g(x2)

select_in_aga(x1, x2, x3)  =  select_in_aga(x2)

U8_aga(x1, x2, x3, x4, x5)  =  U8_aga(x5)

select_out_aga(x1, x2, x3)  =  select_out_aga(x3)

U3_g(x1, x2)  =  U3_g(x2)

vl_in_ag(x1, x2)  =  vl_in_ag(x2)

U5_ag(x1, x2)  =  U5_ag(x2)

eq_in_gg(x1, x2)  =  eq_in_gg(x1, x2)

eq_out_gg(x1, x2)  =  eq_out_gg

vl_out_ag(x1, x2)  =  vl_out_ag

U6_ag(x1, x2, x3, x4)  =  U6_ag(x3, x4)

p_in_aa(x1, x2)  =  p_in_aa

p_out_aa(x1, x2)  =  p_out_aa

U7_ag(x1, x2, x3, x4)  =  U7_ag(x4)

U4_g(x1, x2)  =  U4_g(x2)

vlcnd_in_a(x1)  =  vlcnd_in_a

U1_a(x1, x2)  =  U1_a(x2)

vl_in_aa(x1, x2)  =  vl_in_aa

U5_aa(x1, x2)  =  U5_aa(x2)

vl_out_aa(x1, x2)  =  vl_out_aa(x2)

U6_aa(x1, x2, x3, x4)  =  U6_aa(x4)

U7_aa(x1, x2, x3, x4)  =  U7_aa(x4)

U2_a(x1, x2)  =  U2_a(x2)

U3_a(x1, x2)  =  U3_a(x2)

U4_a(x1, x2)  =  U4_a(x2)

vlcnd_out_a(x1)  =  vlcnd_out_a

vlcnd_out_g(x1)  =  vlcnd_out_g

VL_IN_GA(x1, x2)  =  VL_IN_GA(x1)

U6_GA(x1, x2, x3, x4)  =  U6_GA(x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(127) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(128)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   VL_IN_GA(N, .(X2, Xs)) -> U6_GA(N, X2, Xs, p_in_ga(N, P))
   U6_GA(N, X2, Xs, p_out_ga(N, P)) -> VL_IN_GA(P, Xs)

The TRS R consists of the following rules:

   p_in_ga(0, 0) -> p_out_ga(0, 0)
   p_in_ga(s(X), X) -> p_out_ga(s(X), X)

The argument filtering Pi contains the following mapping:
0  =  0

p_in_ga(x1, x2)  =  p_in_ga(x1)

p_out_ga(x1, x2)  =  p_out_ga(x2)

s(x1)  =  s(x1)

.(x1, x2)  =  .(x2)

VL_IN_GA(x1, x2)  =  VL_IN_GA(x1)

U6_GA(x1, x2, x3, x4)  =  U6_GA(x4)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(129) PrologToTRSTransformerProof (SOUND)
Transformed Prolog program to TRS.

{
    "root": 3,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(vlcnd N)",
                "(',' (vl N Xs) (',' (select X1 Xs Ys) (',' (vl M Ys) (vlcnd M))))"
            ],
            [
                "(vlcnd (0))",
                null
            ],
            [
                "(vl (0) L)",
                "(',' (!) (eq L ([])))"
            ],
            [
                "(vl N (. X2 Xs))",
                "(',' (p N P) (vl P Xs))"
            ],
            [
                "(select X (. Y Xs) (. Y Ys))",
                "(select X Xs Ys)"
            ],
            [
                "(select X (. X Xs) Xs)",
                null
            ],
            [
                "(p (0) (0))",
                null
            ],
            [
                "(p (s X) X)",
                null
            ],
            [
                "(eq X X)",
                null
            ]
        ]
    },
    "graph": {
        "nodes": {
            "709": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "594": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(select X106 T30 X107)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X106",
                        "X107"
                    ],
                    "exprvars": []
                }
            },
            "155": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vl T6 X20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": ["X20"],
                    "exprvars": []
                }
            },
            "595": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "157": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (select X21 T7 X22) (',' (vl X23 X22) (vlcnd X23)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X21",
                        "X22",
                        "X23"
                    ],
                    "exprvars": []
                }
            },
            "710": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "711": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "91": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (vl T6 X20) (',' (select X21 X20 X22) (',' (vl X23 X22) (vlcnd X23))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": [
                        "X20",
                        "X21",
                        "X22",
                        "X23"
                    ],
                    "exprvars": []
                }
            },
            "712": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 8,
                        "term": "(vlcnd T40)"
                    },
                    {
                        "clause": 1,
                        "scope": 8,
                        "term": "(vlcnd T40)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "713": {
                "goal": [{
                    "clause": 0,
                    "scope": 8,
                    "term": "(vlcnd T40)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "714": {
                "goal": [{
                    "clause": 1,
                    "scope": 8,
                    "term": "(vlcnd T40)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "715": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (vl T58 X153) (',' (select X154 X153 X155) (',' (vl X156 X155) (vlcnd X156))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X153",
                        "X154",
                        "X155",
                        "X156"
                    ],
                    "exprvars": []
                }
            },
            "716": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vl T58 X153)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X153"],
                    "exprvars": []
                }
            },
            "717": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (select X154 T59 X155) (',' (vl X156 X155) (vlcnd X156)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X154",
                        "X155",
                        "X156"
                    ],
                    "exprvars": []
                }
            },
            "718": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 9,
                        "term": "(vl T58 X153)"
                    },
                    {
                        "clause": 3,
                        "scope": 9,
                        "term": "(vl T58 X153)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X153"],
                    "exprvars": []
                }
            },
            "719": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_9) (eq X166 ([])))"
                    },
                    {
                        "clause": 3,
                        "scope": 9,
                        "term": "(vl T58 X153)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X153",
                        "X166"
                    ],
                    "exprvars": []
                }
            },
            "165": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(vl T6 X20)"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(vl T6 X20)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": ["X20"],
                    "exprvars": []
                }
            },
            "3": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vlcnd T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "720": {
                "goal": [{
                    "clause": 3,
                    "scope": 9,
                    "term": "(vl T58 X153)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(vl T58 X153)",
                        "(vl (0) X165)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X153",
                        "X165"
                    ],
                    "exprvars": []
                }
            },
            "6": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(vlcnd T1)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(vlcnd T1)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "369": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "600": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "721": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(eq X166 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X166"],
                    "exprvars": []
                }
            },
            "601": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "722": {
                "goal": [{
                    "clause": 8,
                    "scope": 10,
                    "term": "(eq X166 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X166"],
                    "exprvars": []
                }
            },
            "602": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "723": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "724": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "725": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (p T64 X189) (vl X189 X191))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X191",
                        "X189"
                    ],
                    "exprvars": []
                }
            },
            "605": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vl X23 T17)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X23"],
                    "exprvars": []
                }
            },
            "726": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 11,
                        "term": "(',' (p T64 X189) (vl X189 X191))"
                    },
                    {
                        "clause": 7,
                        "scope": 11,
                        "term": "(',' (p T64 X189) (vl X189 X191))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X191",
                        "X189"
                    ],
                    "exprvars": []
                }
            },
            "606": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vlcnd T40)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "727": {
                "goal": [{
                    "clause": 6,
                    "scope": 11,
                    "term": "(',' (p T64 X189) (vl X189 X191))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X191",
                        "X189"
                    ],
                    "exprvars": []
                }
            },
            "728": {
                "goal": [{
                    "clause": 7,
                    "scope": 11,
                    "term": "(',' (p T64 X189) (vl X189 X191))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X191",
                        "X189"
                    ],
                    "exprvars": []
                }
            },
            "729": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vl (0) X191)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X191"],
                    "exprvars": []
                }
            },
            "28": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(vlcnd T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "29": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(vlcnd T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "292": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_2) (eq X33 ([])))"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(vl (0) X20)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X20",
                        "X33"
                    ],
                    "exprvars": []
                }
            },
            "293": {
                "goal": [{
                    "clause": 3,
                    "scope": 2,
                    "term": "(vl T6 X20)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(vl T6 X20)",
                        "(vl (0) X32)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": [
                        "X20",
                        "X32"
                    ],
                    "exprvars": []
                }
            },
            "370": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "294": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(eq X33 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X33"],
                    "exprvars": []
                }
            },
            "371": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (p T10 X56) (vl X56 X58))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(vl T10 X20)",
                        "(vl (0) X32)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T10"],
                    "free": [
                        "X20",
                        "X32",
                        "X58",
                        "X56"
                    ],
                    "exprvars": []
                }
            },
            "295": {
                "goal": [{
                    "clause": 8,
                    "scope": 3,
                    "term": "(eq X33 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X33"],
                    "exprvars": []
                }
            },
            "372": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 4,
                        "term": "(',' (p T10 X56) (vl X56 X58))"
                    },
                    {
                        "clause": 7,
                        "scope": 4,
                        "term": "(',' (p T10 X56) (vl X56 X58))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(vl T10 X20)",
                        "(vl (0) X32)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T10"],
                    "free": [
                        "X20",
                        "X32",
                        "X58",
                        "X56"
                    ],
                    "exprvars": []
                }
            },
            "373": {
                "goal": [{
                    "clause": 7,
                    "scope": 4,
                    "term": "(',' (p T10 X56) (vl X56 X58))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(vl T10 X20)",
                        "(vl (0) X32)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T10"],
                    "free": [
                        "X20",
                        "X32",
                        "X58",
                        "X56"
                    ],
                    "exprvars": []
                }
            },
            "374": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vl T13 X58)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T13"],
                    "free": ["X58"],
                    "exprvars": []
                }
            },
            "375": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "376": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(select X21 T7 X22)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X21",
                        "X22"
                    ],
                    "exprvars": []
                }
            },
            "377": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (vl X23 T17) (vlcnd X23))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X23"],
                    "exprvars": []
                }
            },
            "378": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 5,
                        "term": "(select X21 T7 X22)"
                    },
                    {
                        "clause": 5,
                        "scope": 5,
                        "term": "(select X21 T7 X22)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X21",
                        "X22"
                    ],
                    "exprvars": []
                }
            },
            "730": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "379": {
                "goal": [{
                    "clause": 4,
                    "scope": 5,
                    "term": "(select X21 T7 X22)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X21",
                        "X22"
                    ],
                    "exprvars": []
                }
            },
            "610": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 6,
                        "term": "(vl X23 T17)"
                    },
                    {
                        "clause": 3,
                        "scope": 6,
                        "term": "(vl X23 T17)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X23"],
                    "exprvars": []
                }
            },
            "731": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vl T68 X191)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X191"],
                    "exprvars": []
                }
            },
            "732": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "612": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_6) (eq T46 ([])))"
                    },
                    {
                        "clause": 3,
                        "scope": 6,
                        "term": "(vl X23 T17)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X23"],
                    "exprvars": []
                }
            },
            "733": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "613": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(eq T46 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "734": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "614": {
                "goal": [{
                    "clause": 8,
                    "scope": 7,
                    "term": "(eq T46 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "735": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "736": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "737": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "738": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "380": {
                "goal": [{
                    "clause": 5,
                    "scope": 5,
                    "term": "(select X21 T7 X22)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X21",
                        "X22"
                    ],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 3,
                "to": 6,
                "label": "CASE"
            },
            {
                "from": 6,
                "to": 28,
                "label": "PARALLEL"
            },
            {
                "from": 6,
                "to": 29,
                "label": "PARALLEL"
            },
            {
                "from": 28,
                "to": 91,
                "label": "ONLY EVAL with clause\nvlcnd(X19) :- ','(vl(X19, X20), ','(select(X21, X20, X22), ','(vl(X23, X22), vlcnd(X23)))).\nand substitutionT1 -> T6,\nX19 -> T6"
            },
            {
                "from": 29,
                "to": 736,
                "label": "EVAL with clause\nvlcnd(0).\nand substitutionT1 -> 0"
            },
            {
                "from": 29,
                "to": 737,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 91,
                "to": 155,
                "label": "SPLIT 1"
            },
            {
                "from": 91,
                "to": 157,
                "label": "SPLIT 2\nnew knowledge:\nT6 is ground\nreplacements:X20 -> T7"
            },
            {
                "from": 155,
                "to": 165,
                "label": "CASE"
            },
            {
                "from": 157,
                "to": 376,
                "label": "SPLIT 1"
            },
            {
                "from": 157,
                "to": 377,
                "label": "SPLIT 2\nreplacements:X21 -> T16,\nX22 -> T17"
            },
            {
                "from": 165,
                "to": 292,
                "label": "EVAL with clause\nvl(0, X32) :- ','(!_2, eq(X32, [])).\nand substitutionT6 -> 0,\nX20 -> X33,\nX32 -> X33"
            },
            {
                "from": 165,
                "to": 293,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 292,
                "to": 294,
                "label": "CUT"
            },
            {
                "from": 293,
                "to": 371,
                "label": "ONLY EVAL with clause\nvl(X53, .(X54, X55)) :- ','(p(X53, X56), vl(X56, X55)).\nand substitutionT6 -> T10,\nX53 -> T10,\nX54 -> X57,\nX55 -> X58,\nX20 -> .(X57, X58)"
            },
            {
                "from": 294,
                "to": 295,
                "label": "CASE"
            },
            {
                "from": 295,
                "to": 369,
                "label": "ONLY EVAL with clause\neq(X38, X38).\nand substitutionX33 -> [],\nX38 -> [],\nX39 -> []"
            },
            {
                "from": 369,
                "to": 370,
                "label": "SUCCESS"
            },
            {
                "from": 371,
                "to": 372,
                "label": "CASE"
            },
            {
                "from": 372,
                "to": 373,
                "label": "BACKTRACK\nfor clause: p(0, 0)\nwith clash: (vl(T10, X20), vl(0, X32))"
            },
            {
                "from": 373,
                "to": 374,
                "label": "EVAL with clause\np(s(X63), X63).\nand substitutionX63 -> T13,\nT10 -> s(T13),\nX56 -> T13"
            },
            {
                "from": 373,
                "to": 375,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 374,
                "to": 155,
                "label": "INSTANCE with matching:\nT6 -> T13\nX20 -> X58"
            },
            {
                "from": 376,
                "to": 378,
                "label": "CASE"
            },
            {
                "from": 377,
                "to": 605,
                "label": "SPLIT 1"
            },
            {
                "from": 377,
                "to": 606,
                "label": "SPLIT 2\nreplacements:X23 -> T40"
            },
            {
                "from": 378,
                "to": 379,
                "label": "PARALLEL"
            },
            {
                "from": 378,
                "to": 380,
                "label": "PARALLEL"
            },
            {
                "from": 379,
                "to": 594,
                "label": "EVAL with clause\nselect(X102, .(X103, X104), .(X103, X105)) :- select(X102, X104, X105).\nand substitutionX21 -> X106,\nX102 -> X106,\nX103 -> T28,\nX104 -> T30,\nT7 -> .(T28, T30),\nX105 -> X107,\nX22 -> .(T28, X107),\nT29 -> T30"
            },
            {
                "from": 379,
                "to": 595,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 380,
                "to": 600,
                "label": "EVAL with clause\nselect(X120, .(X120, X121), X121).\nand substitutionX21 -> T37,\nX120 -> T37,\nX122 -> T37,\nX121 -> T38,\nT7 -> .(T37, T38),\nX22 -> T38"
            },
            {
                "from": 380,
                "to": 601,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 594,
                "to": 376,
                "label": "INSTANCE with matching:\nX21 -> X106\nT7 -> T30\nX22 -> X107"
            },
            {
                "from": 600,
                "to": 602,
                "label": "SUCCESS"
            },
            {
                "from": 605,
                "to": 610,
                "label": "CASE"
            },
            {
                "from": 606,
                "to": 712,
                "label": "CASE"
            },
            {
                "from": 610,
                "to": 612,
                "label": "ONLY EVAL with clause\nvl(0, X127) :- ','(!_6, eq(X127, [])).\nand substitutionX23 -> 0,\nT17 -> T46,\nX127 -> T46,\nT45 -> T46"
            },
            {
                "from": 612,
                "to": 613,
                "label": "CUT"
            },
            {
                "from": 613,
                "to": 614,
                "label": "CASE"
            },
            {
                "from": 614,
                "to": 709,
                "label": "EVAL with clause\neq(X130, X130).\nand substitutionT46 -> [],\nX130 -> [],\nT49 -> []"
            },
            {
                "from": 614,
                "to": 710,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 709,
                "to": 711,
                "label": "SUCCESS"
            },
            {
                "from": 712,
                "to": 713,
                "label": "PARALLEL"
            },
            {
                "from": 712,
                "to": 714,
                "label": "PARALLEL"
            },
            {
                "from": 713,
                "to": 715,
                "label": "ONLY EVAL with clause\nvlcnd(X152) :- ','(vl(X152, X153), ','(select(X154, X153, X155), ','(vl(X156, X155), vlcnd(X156)))).\nand substitutionT40 -> T58,\nX152 -> T58,\nT57 -> T58"
            },
            {
                "from": 714,
                "to": 733,
                "label": "EVAL with clause\nvlcnd(0).\nand substitutionT40 -> 0"
            },
            {
                "from": 714,
                "to": 734,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 715,
                "to": 716,
                "label": "SPLIT 1"
            },
            {
                "from": 715,
                "to": 717,
                "label": "SPLIT 2\nreplacements:X153 -> T59"
            },
            {
                "from": 716,
                "to": 718,
                "label": "CASE"
            },
            {
                "from": 717,
                "to": 157,
                "label": "INSTANCE with matching:\nX21 -> X154\nT7 -> T59\nX22 -> X155\nX23 -> X156"
            },
            {
                "from": 718,
                "to": 719,
                "label": "EVAL with clause\nvl(0, X165) :- ','(!_9, eq(X165, [])).\nand substitutionT58 -> 0,\nX153 -> X166,\nX165 -> X166"
            },
            {
                "from": 718,
                "to": 720,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 719,
                "to": 721,
                "label": "CUT"
            },
            {
                "from": 720,
                "to": 725,
                "label": "ONLY EVAL with clause\nvl(X186, .(X187, X188)) :- ','(p(X186, X189), vl(X189, X188)).\nand substitutionT58 -> T64,\nX186 -> T64,\nX187 -> X190,\nX188 -> X191,\nX153 -> .(X190, X191),\nT63 -> T64"
            },
            {
                "from": 721,
                "to": 722,
                "label": "CASE"
            },
            {
                "from": 722,
                "to": 723,
                "label": "ONLY EVAL with clause\neq(X171, X171).\nand substitutionX166 -> [],\nX171 -> [],\nX172 -> []"
            },
            {
                "from": 723,
                "to": 724,
                "label": "SUCCESS"
            },
            {
                "from": 725,
                "to": 726,
                "label": "CASE"
            },
            {
                "from": 726,
                "to": 727,
                "label": "PARALLEL"
            },
            {
                "from": 726,
                "to": 728,
                "label": "PARALLEL"
            },
            {
                "from": 727,
                "to": 729,
                "label": "EVAL with clause\np(0, 0).\nand substitutionT64 -> 0,\nX189 -> 0"
            },
            {
                "from": 727,
                "to": 730,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 728,
                "to": 731,
                "label": "EVAL with clause\np(s(X198), X198).\nand substitutionX198 -> T68,\nT64 -> s(T68),\nX189 -> T68,\nT67 -> T68"
            },
            {
                "from": 728,
                "to": 732,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 729,
                "to": 155,
                "label": "INSTANCE with matching:\nT6 -> 0\nX20 -> X191"
            },
            {
                "from": 731,
                "to": 716,
                "label": "INSTANCE with matching:\nT58 -> T68\nX153 -> X191"
            },
            {
                "from": 733,
                "to": 735,
                "label": "SUCCESS"
            },
            {
                "from": 736,
                "to": 738,
                "label": "SUCCESS"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(130)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f3_in(T6) -> U1(f91_in(T6), T6)
   U1(f91_out1, T6) -> f3_out1
   f3_in(0) -> f3_out1
   f155_in(0) -> f155_out1
   f155_in(s(T13)) -> U2(f155_in(T13), s(T13))
   U2(f155_out1, s(T13)) -> f155_out1
   f376_in -> U3(f376_in)
   U3(f376_out1) -> f376_out1
   f376_in -> f376_out1
   f716_in -> f716_out1
   f716_in -> U4(f155_in(0))
   U4(f155_out1) -> f716_out1
   f716_in -> U5(f716_in)
   U5(f716_out1) -> f716_out1
   f605_in -> f605_out1
   f606_in -> U6(f715_in)
   U6(f715_out1) -> f606_out1
   f606_in -> f606_out1
   f91_in(T6) -> U7(f155_in(T6), T6)
   U7(f155_out1, T6) -> U8(f157_in, T6)
   U8(f157_out1, T6) -> f91_out1
   f157_in -> U9(f376_in)
   U9(f376_out1) -> U10(f377_in)
   U10(f377_out1) -> f157_out1
   f377_in -> U11(f605_in)
   U11(f605_out1) -> U12(f606_in)
   U12(f606_out1) -> f377_out1
   f715_in -> U13(f716_in)
   U13(f716_out1) -> U14(f157_in)
   U14(f157_out1) -> f715_out1

Q is empty.

----------------------------------------

(131) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(132)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F3_IN(T6) -> U1^1(f91_in(T6), T6)
   F3_IN(T6) -> F91_IN(T6)
   F155_IN(s(T13)) -> U2^1(f155_in(T13), s(T13))
   F155_IN(s(T13)) -> F155_IN(T13)
   F376_IN -> U3^1(f376_in)
   F376_IN -> F376_IN
   F716_IN -> U4^1(f155_in(0))
   F716_IN -> F155_IN(0)
   F716_IN -> U5^1(f716_in)
   F716_IN -> F716_IN
   F606_IN -> U6^1(f715_in)
   F606_IN -> F715_IN
   F91_IN(T6) -> U7^1(f155_in(T6), T6)
   F91_IN(T6) -> F155_IN(T6)
   U7^1(f155_out1, T6) -> U8^1(f157_in, T6)
   U7^1(f155_out1, T6) -> F157_IN
   F157_IN -> U9^1(f376_in)
   F157_IN -> F376_IN
   U9^1(f376_out1) -> U10^1(f377_in)
   U9^1(f376_out1) -> F377_IN
   F377_IN -> U11^1(f605_in)
   F377_IN -> F605_IN
   U11^1(f605_out1) -> U12^1(f606_in)
   U11^1(f605_out1) -> F606_IN
   F715_IN -> U13^1(f716_in)
   F715_IN -> F716_IN
   U13^1(f716_out1) -> U14^1(f157_in)
   U13^1(f716_out1) -> F157_IN

The TRS R consists of the following rules:

   f3_in(T6) -> U1(f91_in(T6), T6)
   U1(f91_out1, T6) -> f3_out1
   f3_in(0) -> f3_out1
   f155_in(0) -> f155_out1
   f155_in(s(T13)) -> U2(f155_in(T13), s(T13))
   U2(f155_out1, s(T13)) -> f155_out1
   f376_in -> U3(f376_in)
   U3(f376_out1) -> f376_out1
   f376_in -> f376_out1
   f716_in -> f716_out1
   f716_in -> U4(f155_in(0))
   U4(f155_out1) -> f716_out1
   f716_in -> U5(f716_in)
   U5(f716_out1) -> f716_out1
   f605_in -> f605_out1
   f606_in -> U6(f715_in)
   U6(f715_out1) -> f606_out1
   f606_in -> f606_out1
   f91_in(T6) -> U7(f155_in(T6), T6)
   U7(f155_out1, T6) -> U8(f157_in, T6)
   U8(f157_out1, T6) -> f91_out1
   f157_in -> U9(f376_in)
   U9(f376_out1) -> U10(f377_in)
   U10(f377_out1) -> f157_out1
   f377_in -> U11(f605_in)
   U11(f605_out1) -> U12(f606_in)
   U12(f606_out1) -> f377_out1
   f715_in -> U13(f716_in)
   U13(f716_out1) -> U14(f157_in)
   U14(f157_out1) -> f715_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(133) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 4 SCCs with 18 less nodes.
----------------------------------------

(134)
Complex Obligation (AND)

----------------------------------------

(135)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F376_IN -> F376_IN

The TRS R consists of the following rules:

   f3_in(T6) -> U1(f91_in(T6), T6)
   U1(f91_out1, T6) -> f3_out1
   f3_in(0) -> f3_out1
   f155_in(0) -> f155_out1
   f155_in(s(T13)) -> U2(f155_in(T13), s(T13))
   U2(f155_out1, s(T13)) -> f155_out1
   f376_in -> U3(f376_in)
   U3(f376_out1) -> f376_out1
   f376_in -> f376_out1
   f716_in -> f716_out1
   f716_in -> U4(f155_in(0))
   U4(f155_out1) -> f716_out1
   f716_in -> U5(f716_in)
   U5(f716_out1) -> f716_out1
   f605_in -> f605_out1
   f606_in -> U6(f715_in)
   U6(f715_out1) -> f606_out1
   f606_in -> f606_out1
   f91_in(T6) -> U7(f155_in(T6), T6)
   U7(f155_out1, T6) -> U8(f157_in, T6)
   U8(f157_out1, T6) -> f91_out1
   f157_in -> U9(f376_in)
   U9(f376_out1) -> U10(f377_in)
   U10(f377_out1) -> f157_out1
   f377_in -> U11(f605_in)
   U11(f605_out1) -> U12(f606_in)
   U12(f606_out1) -> f377_out1
   f715_in -> U13(f716_in)
   U13(f716_out1) -> U14(f157_in)
   U14(f157_out1) -> f715_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(136) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(137)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F376_IN -> F376_IN

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(138) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = F376_IN evaluates to  t =F376_IN

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from F376_IN to F376_IN.




----------------------------------------

(139)
NO

----------------------------------------

(140)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F155_IN(s(T13)) -> F155_IN(T13)

The TRS R consists of the following rules:

   f3_in(T6) -> U1(f91_in(T6), T6)
   U1(f91_out1, T6) -> f3_out1
   f3_in(0) -> f3_out1
   f155_in(0) -> f155_out1
   f155_in(s(T13)) -> U2(f155_in(T13), s(T13))
   U2(f155_out1, s(T13)) -> f155_out1
   f376_in -> U3(f376_in)
   U3(f376_out1) -> f376_out1
   f376_in -> f376_out1
   f716_in -> f716_out1
   f716_in -> U4(f155_in(0))
   U4(f155_out1) -> f716_out1
   f716_in -> U5(f716_in)
   U5(f716_out1) -> f716_out1
   f605_in -> f605_out1
   f606_in -> U6(f715_in)
   U6(f715_out1) -> f606_out1
   f606_in -> f606_out1
   f91_in(T6) -> U7(f155_in(T6), T6)
   U7(f155_out1, T6) -> U8(f157_in, T6)
   U8(f157_out1, T6) -> f91_out1
   f157_in -> U9(f376_in)
   U9(f376_out1) -> U10(f377_in)
   U10(f377_out1) -> f157_out1
   f377_in -> U11(f605_in)
   U11(f605_out1) -> U12(f606_in)
   U12(f606_out1) -> f377_out1
   f715_in -> U13(f716_in)
   U13(f716_out1) -> U14(f157_in)
   U14(f157_out1) -> f715_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(141) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(142)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F155_IN(s(T13)) -> F155_IN(T13)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(143) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F155_IN(s(T13)) -> F155_IN(T13)
The graph contains the following edges 1 > 1


----------------------------------------

(144)
YES

----------------------------------------

(145)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F716_IN -> F716_IN

The TRS R consists of the following rules:

   f3_in(T6) -> U1(f91_in(T6), T6)
   U1(f91_out1, T6) -> f3_out1
   f3_in(0) -> f3_out1
   f155_in(0) -> f155_out1
   f155_in(s(T13)) -> U2(f155_in(T13), s(T13))
   U2(f155_out1, s(T13)) -> f155_out1
   f376_in -> U3(f376_in)
   U3(f376_out1) -> f376_out1
   f376_in -> f376_out1
   f716_in -> f716_out1
   f716_in -> U4(f155_in(0))
   U4(f155_out1) -> f716_out1
   f716_in -> U5(f716_in)
   U5(f716_out1) -> f716_out1
   f605_in -> f605_out1
   f606_in -> U6(f715_in)
   U6(f715_out1) -> f606_out1
   f606_in -> f606_out1
   f91_in(T6) -> U7(f155_in(T6), T6)
   U7(f155_out1, T6) -> U8(f157_in, T6)
   U8(f157_out1, T6) -> f91_out1
   f157_in -> U9(f376_in)
   U9(f376_out1) -> U10(f377_in)
   U10(f377_out1) -> f157_out1
   f377_in -> U11(f605_in)
   U11(f605_out1) -> U12(f606_in)
   U12(f606_out1) -> f377_out1
   f715_in -> U13(f716_in)
   U13(f716_out1) -> U14(f157_in)
   U14(f157_out1) -> f715_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(146) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(147)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F716_IN -> F716_IN

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(148) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = F716_IN evaluates to  t =F716_IN

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from F716_IN to F716_IN.




----------------------------------------

(149)
NO

----------------------------------------

(150)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F715_IN -> U13^1(f716_in)
   U13^1(f716_out1) -> F157_IN
   F157_IN -> U9^1(f376_in)
   U9^1(f376_out1) -> F377_IN
   F377_IN -> U11^1(f605_in)
   U11^1(f605_out1) -> F606_IN
   F606_IN -> F715_IN

The TRS R consists of the following rules:

   f3_in(T6) -> U1(f91_in(T6), T6)
   U1(f91_out1, T6) -> f3_out1
   f3_in(0) -> f3_out1
   f155_in(0) -> f155_out1
   f155_in(s(T13)) -> U2(f155_in(T13), s(T13))
   U2(f155_out1, s(T13)) -> f155_out1
   f376_in -> U3(f376_in)
   U3(f376_out1) -> f376_out1
   f376_in -> f376_out1
   f716_in -> f716_out1
   f716_in -> U4(f155_in(0))
   U4(f155_out1) -> f716_out1
   f716_in -> U5(f716_in)
   U5(f716_out1) -> f716_out1
   f605_in -> f605_out1
   f606_in -> U6(f715_in)
   U6(f715_out1) -> f606_out1
   f606_in -> f606_out1
   f91_in(T6) -> U7(f155_in(T6), T6)
   U7(f155_out1, T6) -> U8(f157_in, T6)
   U8(f157_out1, T6) -> f91_out1
   f157_in -> U9(f376_in)
   U9(f376_out1) -> U10(f377_in)
   U10(f377_out1) -> f157_out1
   f377_in -> U11(f605_in)
   U11(f605_out1) -> U12(f606_in)
   U12(f606_out1) -> f377_out1
   f715_in -> U13(f716_in)
   U13(f716_out1) -> U14(f157_in)
   U14(f157_out1) -> f715_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(151) NonLoopProof (COMPLETE)
By Theorem 8 [NONLOOP] we deduce infiniteness of the QDP.
We apply the theorem with m = 1, b = 0, 
?' = [ ], and ?' = [ ] on the rule
F606_IN[ ]^n[ ] -> F606_IN[ ]^n[ ]
This rule is correct for the QDP as the following derivation shows:

F606_IN[ ]^n[ ] -> F606_IN[ ]^n[ ]
    by Narrowing at position: []
    F606_IN[ ]^n[ ] -> F715_IN[ ]^n[ ]
        by Rule from TRS P

    F715_IN[ ]^n[ ] -> F606_IN[ ]^n[ ]
        by Narrowing at position: []
        F715_IN[ ]^n[ ] -> U11^1(f605_out1)[ ]^n[ ]
            by Narrowing at position: [0]
            F715_IN[ ]^n[ ] -> U11^1(f605_in)[ ]^n[ ]
                by Narrowing at position: []
                F715_IN[ ]^n[ ] -> F377_IN[ ]^n[ ]
                    by Narrowing at position: []
                    F715_IN[ ]^n[ ] -> U9^1(f376_out1)[ ]^n[ ]
                        by Narrowing at position: [0]
                        F715_IN[ ]^n[ ] -> U9^1(f376_in)[ ]^n[ ]
                            by Narrowing at position: []
                            F715_IN[ ]^n[ ] -> F157_IN[ ]^n[ ]
                                by Narrowing at position: []
                                F715_IN[ ]^n[ ] -> U13^1(f716_out1)[ ]^n[ ]
                                    by Narrowing at position: [0]
                                    F715_IN[ ]^n[ ] -> U13^1(f716_in)[ ]^n[ ]
                                        by Rule from TRS P

                                    f716_in[ ]^n[ ] -> f716_out1[ ]^n[ ]
                                        by Rule from TRS R

                                U13^1(f716_out1)[ ]^n[ ] -> F157_IN[ ]^n[ ]
                                    by Rule from TRS P

                            F157_IN[ ]^n[ ] -> U9^1(f376_in)[ ]^n[ ]
                                by Rule from TRS P

                        f376_in[ ]^n[ ] -> f376_out1[ ]^n[ ]
                            by Rule from TRS R

                    U9^1(f376_out1)[ ]^n[ ] -> F377_IN[ ]^n[ ]
                        by Rule from TRS P

                F377_IN[ ]^n[ ] -> U11^1(f605_in)[ ]^n[ ]
                    by Rule from TRS P

            f605_in[ ]^n[ ] -> f605_out1[ ]^n[ ]
                by Rule from TRS R

        U11^1(f605_out1)[ ]^n[ ] -> F606_IN[ ]^n[ ]
            by Rule from TRS P
----------------------------------------

(152)
NO

----------------------------------------

(153) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 2,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(vlcnd N)",
                "(',' (vl N Xs) (',' (select X1 Xs Ys) (',' (vl M Ys) (vlcnd M))))"
            ],
            [
                "(vlcnd (0))",
                null
            ],
            [
                "(vl (0) L)",
                "(',' (!) (eq L ([])))"
            ],
            [
                "(vl N (. X2 Xs))",
                "(',' (p N P) (vl P Xs))"
            ],
            [
                "(select X (. Y Xs) (. Y Ys))",
                "(select X Xs Ys)"
            ],
            [
                "(select X (. X Xs) Xs)",
                null
            ],
            [
                "(p (0) (0))",
                null
            ],
            [
                "(p (s X) X)",
                null
            ],
            [
                "(eq X X)",
                null
            ]
        ]
    },
    "graph": {
        "nodes": {
            "type": "Nodes",
            "590": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(eq X166 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X166"],
                    "exprvars": []
                }
            },
            "591": {
                "goal": [{
                    "clause": 8,
                    "scope": 10,
                    "term": "(eq X166 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X166"],
                    "exprvars": []
                }
            },
            "592": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "593": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "596": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (p T64 X189) (vl X189 X191))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X191",
                        "X189"
                    ],
                    "exprvars": []
                }
            },
            "597": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 11,
                        "term": "(',' (p T64 X189) (vl X189 X191))"
                    },
                    {
                        "clause": 7,
                        "scope": 11,
                        "term": "(',' (p T64 X189) (vl X189 X191))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X191",
                        "X189"
                    ],
                    "exprvars": []
                }
            },
            "598": {
                "goal": [{
                    "clause": 6,
                    "scope": 11,
                    "term": "(',' (p T64 X189) (vl X189 X191))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X191",
                        "X189"
                    ],
                    "exprvars": []
                }
            },
            "599": {
                "goal": [{
                    "clause": 7,
                    "scope": 11,
                    "term": "(',' (p T64 X189) (vl X189 X191))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X191",
                        "X189"
                    ],
                    "exprvars": []
                }
            },
            "50": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vl T6 X20)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": ["X20"],
                    "exprvars": []
                }
            },
            "51": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (select X21 T7 X22) (',' (vl X23 X22) (vlcnd X23)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X21",
                        "X22",
                        "X23"
                    ],
                    "exprvars": []
                }
            },
            "160": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_2) (eq X33 ([])))"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(vl (0) X20)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X20",
                        "X33"
                    ],
                    "exprvars": []
                }
            },
            "481": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (p T10 X56) (vl X56 X58))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(vl T10 X20)",
                        "(vl (0) X32)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T10"],
                    "free": [
                        "X20",
                        "X32",
                        "X58",
                        "X56"
                    ],
                    "exprvars": []
                }
            },
            "164": {
                "goal": [{
                    "clause": 3,
                    "scope": 2,
                    "term": "(vl T6 X20)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(vl T6 X20)",
                        "(vl (0) X32)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": [
                        "X20",
                        "X32"
                    ],
                    "exprvars": []
                }
            },
            "561": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(select X106 T30 X107)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X106",
                        "X107"
                    ],
                    "exprvars": []
                }
            },
            "562": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "2": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vlcnd T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "563": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "564": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "565": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "5": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(vlcnd T1)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(vlcnd T1)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "566": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vl X23 T17)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X23"],
                    "exprvars": []
                }
            },
            "567": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vlcnd T40)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "568": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 6,
                        "term": "(vl X23 T17)"
                    },
                    {
                        "clause": 3,
                        "scope": 6,
                        "term": "(vl X23 T17)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X23"],
                    "exprvars": []
                }
            },
            "569": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_6) (eq T46 ([])))"
                    },
                    {
                        "clause": 3,
                        "scope": 6,
                        "term": "(vl X23 T17)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X23"],
                    "exprvars": []
                }
            },
            "603": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vl (0) X191)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X191"],
                    "exprvars": []
                }
            },
            "604": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "609": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vl T68 X191)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X191"],
                    "exprvars": []
                }
            },
            "25": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(vlcnd T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "26": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(vlcnd T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "27": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (vl T6 X20) (',' (select X21 X20 X22) (',' (vl X23 X22) (vlcnd X23))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": [
                        "X20",
                        "X21",
                        "X22",
                        "X23"
                    ],
                    "exprvars": []
                }
            },
            "291": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(eq X33 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X33"],
                    "exprvars": []
                }
            },
            "490": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 4,
                        "term": "(',' (p T10 X56) (vl X56 X58))"
                    },
                    {
                        "clause": 7,
                        "scope": 4,
                        "term": "(',' (p T10 X56) (vl X56 X58))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(vl T10 X20)",
                        "(vl (0) X32)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T10"],
                    "free": [
                        "X20",
                        "X32",
                        "X58",
                        "X56"
                    ],
                    "exprvars": []
                }
            },
            "570": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(eq T46 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "296": {
                "goal": [{
                    "clause": 8,
                    "scope": 3,
                    "term": "(eq X33 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X33"],
                    "exprvars": []
                }
            },
            "571": {
                "goal": [{
                    "clause": 8,
                    "scope": 7,
                    "term": "(eq T46 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "572": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "298": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "496": {
                "goal": [{
                    "clause": 7,
                    "scope": 4,
                    "term": "(',' (p T10 X56) (vl X56 X58))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(vl T10 X20)",
                        "(vl (0) X32)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T10"],
                    "free": [
                        "X20",
                        "X32",
                        "X58",
                        "X56"
                    ],
                    "exprvars": []
                }
            },
            "573": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "299": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "575": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "578": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 8,
                        "term": "(vlcnd T40)"
                    },
                    {
                        "clause": 1,
                        "scope": 8,
                        "term": "(vlcnd T40)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "611": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "535": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(select X21 T7 X22)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X21",
                        "X22"
                    ],
                    "exprvars": []
                }
            },
            "536": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (vl X23 T17) (vlcnd X23))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X23"],
                    "exprvars": []
                }
            },
            "537": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 5,
                        "term": "(select X21 T7 X22)"
                    },
                    {
                        "clause": 5,
                        "scope": 5,
                        "term": "(select X21 T7 X22)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X21",
                        "X22"
                    ],
                    "exprvars": []
                }
            },
            "617": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "618": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "582": {
                "goal": [{
                    "clause": 0,
                    "scope": 8,
                    "term": "(vlcnd T40)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "583": {
                "goal": [{
                    "clause": 1,
                    "scope": 8,
                    "term": "(vlcnd T40)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "540": {
                "goal": [{
                    "clause": 4,
                    "scope": 5,
                    "term": "(select X21 T7 X22)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X21",
                        "X22"
                    ],
                    "exprvars": []
                }
            },
            "584": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (vl T58 X153) (',' (select X154 X153 X155) (',' (vl X156 X155) (vlcnd X156))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X153",
                        "X154",
                        "X155",
                        "X156"
                    ],
                    "exprvars": []
                }
            },
            "541": {
                "goal": [{
                    "clause": 5,
                    "scope": 5,
                    "term": "(select X21 T7 X22)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X21",
                        "X22"
                    ],
                    "exprvars": []
                }
            },
            "585": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vl T58 X153)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X153"],
                    "exprvars": []
                }
            },
            "102": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(vl T6 X20)"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(vl T6 X20)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": ["X20"],
                    "exprvars": []
                }
            },
            "586": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (select X154 T59 X155) (',' (vl X156 X155) (vlcnd X156)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X154",
                        "X155",
                        "X156"
                    ],
                    "exprvars": []
                }
            },
            "587": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 9,
                        "term": "(vl T58 X153)"
                    },
                    {
                        "clause": 3,
                        "scope": 9,
                        "term": "(vl T58 X153)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X153"],
                    "exprvars": []
                }
            },
            "620": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "588": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_9) (eq X166 ([])))"
                    },
                    {
                        "clause": 3,
                        "scope": 9,
                        "term": "(vl T58 X153)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X153",
                        "X166"
                    ],
                    "exprvars": []
                }
            },
            "621": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "589": {
                "goal": [{
                    "clause": 3,
                    "scope": 9,
                    "term": "(vl T58 X153)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(vl T58 X153)",
                        "(vl (0) X165)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X153",
                        "X165"
                    ],
                    "exprvars": []
                }
            },
            "622": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "623": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "505": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vl T13 X58)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T13"],
                    "free": ["X58"],
                    "exprvars": []
                }
            },
            "508": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 2,
                "to": 5,
                "label": "CASE"
            },
            {
                "from": 5,
                "to": 25,
                "label": "PARALLEL"
            },
            {
                "from": 5,
                "to": 26,
                "label": "PARALLEL"
            },
            {
                "from": 25,
                "to": 27,
                "label": "ONLY EVAL with clause\nvlcnd(X19) :- ','(vl(X19, X20), ','(select(X21, X20, X22), ','(vl(X23, X22), vlcnd(X23)))).\nand substitutionT1 -> T6,\nX19 -> T6"
            },
            {
                "from": 26,
                "to": 621,
                "label": "EVAL with clause\nvlcnd(0).\nand substitutionT1 -> 0"
            },
            {
                "from": 26,
                "to": 622,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 27,
                "to": 50,
                "label": "SPLIT 1"
            },
            {
                "from": 27,
                "to": 51,
                "label": "SPLIT 2\nnew knowledge:\nT6 is ground\nreplacements:X20 -> T7"
            },
            {
                "from": 50,
                "to": 102,
                "label": "CASE"
            },
            {
                "from": 51,
                "to": 535,
                "label": "SPLIT 1"
            },
            {
                "from": 51,
                "to": 536,
                "label": "SPLIT 2\nreplacements:X21 -> T16,\nX22 -> T17"
            },
            {
                "from": 102,
                "to": 160,
                "label": "EVAL with clause\nvl(0, X32) :- ','(!_2, eq(X32, [])).\nand substitutionT6 -> 0,\nX20 -> X33,\nX32 -> X33"
            },
            {
                "from": 102,
                "to": 164,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 160,
                "to": 291,
                "label": "CUT"
            },
            {
                "from": 164,
                "to": 481,
                "label": "ONLY EVAL with clause\nvl(X53, .(X54, X55)) :- ','(p(X53, X56), vl(X56, X55)).\nand substitutionT6 -> T10,\nX53 -> T10,\nX54 -> X57,\nX55 -> X58,\nX20 -> .(X57, X58)"
            },
            {
                "from": 291,
                "to": 296,
                "label": "CASE"
            },
            {
                "from": 296,
                "to": 298,
                "label": "ONLY EVAL with clause\neq(X38, X38).\nand substitutionX33 -> [],\nX38 -> [],\nX39 -> []"
            },
            {
                "from": 298,
                "to": 299,
                "label": "SUCCESS"
            },
            {
                "from": 481,
                "to": 490,
                "label": "CASE"
            },
            {
                "from": 490,
                "to": 496,
                "label": "BACKTRACK\nfor clause: p(0, 0)\nwith clash: (vl(T10, X20), vl(0, X32))"
            },
            {
                "from": 496,
                "to": 505,
                "label": "EVAL with clause\np(s(X63), X63).\nand substitutionX63 -> T13,\nT10 -> s(T13),\nX56 -> T13"
            },
            {
                "from": 496,
                "to": 508,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 505,
                "to": 50,
                "label": "INSTANCE with matching:\nT6 -> T13\nX20 -> X58"
            },
            {
                "from": 535,
                "to": 537,
                "label": "CASE"
            },
            {
                "from": 536,
                "to": 566,
                "label": "SPLIT 1"
            },
            {
                "from": 536,
                "to": 567,
                "label": "SPLIT 2\nreplacements:X23 -> T40"
            },
            {
                "from": 537,
                "to": 540,
                "label": "PARALLEL"
            },
            {
                "from": 537,
                "to": 541,
                "label": "PARALLEL"
            },
            {
                "from": 540,
                "to": 561,
                "label": "EVAL with clause\nselect(X102, .(X103, X104), .(X103, X105)) :- select(X102, X104, X105).\nand substitutionX21 -> X106,\nX102 -> X106,\nX103 -> T28,\nX104 -> T30,\nT7 -> .(T28, T30),\nX105 -> X107,\nX22 -> .(T28, X107),\nT29 -> T30"
            },
            {
                "from": 540,
                "to": 562,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 541,
                "to": 563,
                "label": "EVAL with clause\nselect(X120, .(X120, X121), X121).\nand substitutionX21 -> T37,\nX120 -> T37,\nX122 -> T37,\nX121 -> T38,\nT7 -> .(T37, T38),\nX22 -> T38"
            },
            {
                "from": 541,
                "to": 564,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 561,
                "to": 535,
                "label": "INSTANCE with matching:\nX21 -> X106\nT7 -> T30\nX22 -> X107"
            },
            {
                "from": 563,
                "to": 565,
                "label": "SUCCESS"
            },
            {
                "from": 566,
                "to": 568,
                "label": "CASE"
            },
            {
                "from": 567,
                "to": 578,
                "label": "CASE"
            },
            {
                "from": 568,
                "to": 569,
                "label": "ONLY EVAL with clause\nvl(0, X127) :- ','(!_6, eq(X127, [])).\nand substitutionX23 -> 0,\nT17 -> T46,\nX127 -> T46,\nT45 -> T46"
            },
            {
                "from": 569,
                "to": 570,
                "label": "CUT"
            },
            {
                "from": 570,
                "to": 571,
                "label": "CASE"
            },
            {
                "from": 571,
                "to": 572,
                "label": "EVAL with clause\neq(X130, X130).\nand substitutionT46 -> [],\nX130 -> [],\nT49 -> []"
            },
            {
                "from": 571,
                "to": 573,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 572,
                "to": 575,
                "label": "SUCCESS"
            },
            {
                "from": 578,
                "to": 582,
                "label": "PARALLEL"
            },
            {
                "from": 578,
                "to": 583,
                "label": "PARALLEL"
            },
            {
                "from": 582,
                "to": 584,
                "label": "ONLY EVAL with clause\nvlcnd(X152) :- ','(vl(X152, X153), ','(select(X154, X153, X155), ','(vl(X156, X155), vlcnd(X156)))).\nand substitutionT40 -> T58,\nX152 -> T58,\nT57 -> T58"
            },
            {
                "from": 583,
                "to": 617,
                "label": "EVAL with clause\nvlcnd(0).\nand substitutionT40 -> 0"
            },
            {
                "from": 583,
                "to": 618,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 584,
                "to": 585,
                "label": "SPLIT 1"
            },
            {
                "from": 584,
                "to": 586,
                "label": "SPLIT 2\nreplacements:X153 -> T59"
            },
            {
                "from": 585,
                "to": 587,
                "label": "CASE"
            },
            {
                "from": 586,
                "to": 51,
                "label": "INSTANCE with matching:\nX21 -> X154\nT7 -> T59\nX22 -> X155\nX23 -> X156"
            },
            {
                "from": 587,
                "to": 588,
                "label": "EVAL with clause\nvl(0, X165) :- ','(!_9, eq(X165, [])).\nand substitutionT58 -> 0,\nX153 -> X166,\nX165 -> X166"
            },
            {
                "from": 587,
                "to": 589,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 588,
                "to": 590,
                "label": "CUT"
            },
            {
                "from": 589,
                "to": 596,
                "label": "ONLY EVAL with clause\nvl(X186, .(X187, X188)) :- ','(p(X186, X189), vl(X189, X188)).\nand substitutionT58 -> T64,\nX186 -> T64,\nX187 -> X190,\nX188 -> X191,\nX153 -> .(X190, X191),\nT63 -> T64"
            },
            {
                "from": 590,
                "to": 591,
                "label": "CASE"
            },
            {
                "from": 591,
                "to": 592,
                "label": "ONLY EVAL with clause\neq(X171, X171).\nand substitutionX166 -> [],\nX171 -> [],\nX172 -> []"
            },
            {
                "from": 592,
                "to": 593,
                "label": "SUCCESS"
            },
            {
                "from": 596,
                "to": 597,
                "label": "CASE"
            },
            {
                "from": 597,
                "to": 598,
                "label": "PARALLEL"
            },
            {
                "from": 597,
                "to": 599,
                "label": "PARALLEL"
            },
            {
                "from": 598,
                "to": 603,
                "label": "EVAL with clause\np(0, 0).\nand substitutionT64 -> 0,\nX189 -> 0"
            },
            {
                "from": 598,
                "to": 604,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 599,
                "to": 609,
                "label": "EVAL with clause\np(s(X198), X198).\nand substitutionX198 -> T68,\nT64 -> s(T68),\nX189 -> T68,\nT67 -> T68"
            },
            {
                "from": 599,
                "to": 611,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 603,
                "to": 50,
                "label": "INSTANCE with matching:\nT6 -> 0\nX20 -> X191"
            },
            {
                "from": 609,
                "to": 585,
                "label": "INSTANCE with matching:\nT58 -> T68\nX153 -> X191"
            },
            {
                "from": 617,
                "to": 620,
                "label": "SUCCESS"
            },
            {
                "from": 621,
                "to": 623,
                "label": "SUCCESS"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(154)
Complex Obligation (AND)

----------------------------------------

(155)
Obligation:
Rules:
f535_out -> f561_out :|: TRUE
f561_in -> f535_in :|: TRUE
f541_out -> f537_out :|: TRUE
f537_in -> f540_in :|: TRUE
f537_in -> f541_in :|: TRUE
f540_out -> f537_out :|: TRUE
f535_in -> f537_in :|: TRUE
f537_out -> f535_out :|: TRUE
f540_in -> f561_in :|: TRUE
f561_out -> f540_out :|: TRUE
f540_in -> f562_in :|: TRUE
f562_out -> f540_out :|: TRUE
f5_out(T1) -> f2_out(T1) :|: TRUE
f2_in(x) -> f5_in(x) :|: TRUE
f5_in(x1) -> f25_in(x1) :|: TRUE
f26_out(x2) -> f5_out(x2) :|: TRUE
f5_in(x3) -> f26_in(x3) :|: TRUE
f25_out(x4) -> f5_out(x4) :|: TRUE
f27_out(T6) -> f25_out(T6) :|: TRUE
f25_in(x5) -> f27_in(x5) :|: TRUE
f51_out -> f27_out(x6) :|: TRUE
f50_out(x7) -> f51_in :|: TRUE
f27_in(x8) -> f50_in(x8) :|: TRUE
f51_in -> f535_in :|: TRUE
f535_out -> f536_in :|: TRUE
f536_out -> f51_out :|: TRUE
Start term: f2_in(T1)

----------------------------------------

(156) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(157)
TRUE

----------------------------------------

(158)
Obligation:
Rules:
f490_out(T10) -> f481_out(T10) :|: TRUE
f481_in(x) -> f490_in(x) :|: TRUE
f50_in(T6) -> f102_in(T6) :|: TRUE
f102_out(x1) -> f50_out(x1) :|: TRUE
f496_out(x2) -> f490_out(x2) :|: TRUE
f490_in(x3) -> f496_in(x3) :|: TRUE
f102_in(0) -> f160_in :|: TRUE
f164_out(x4) -> f102_out(x4) :|: TRUE
f102_in(x5) -> f164_in(x5) :|: TRUE
f160_out -> f102_out(0) :|: TRUE
f496_in(s(T13)) -> f505_in(T13) :|: TRUE
f505_out(x6) -> f496_out(s(x6)) :|: TRUE
f508_out -> f496_out(x7) :|: TRUE
f496_in(x8) -> f508_in :|: TRUE
f164_in(x9) -> f481_in(x9) :|: TRUE
f481_out(x10) -> f164_out(x10) :|: TRUE
f505_in(x11) -> f50_in(x11) :|: TRUE
f50_out(x12) -> f505_out(x12) :|: TRUE
f5_out(T1) -> f2_out(T1) :|: TRUE
f2_in(x13) -> f5_in(x13) :|: TRUE
f5_in(x14) -> f25_in(x14) :|: TRUE
f26_out(x15) -> f5_out(x15) :|: TRUE
f5_in(x16) -> f26_in(x16) :|: TRUE
f25_out(x17) -> f5_out(x17) :|: TRUE
f27_out(x18) -> f25_out(x18) :|: TRUE
f25_in(x19) -> f27_in(x19) :|: TRUE
f51_out -> f27_out(x20) :|: TRUE
f50_out(x21) -> f51_in :|: TRUE
f27_in(x22) -> f50_in(x22) :|: TRUE
f51_in -> f535_in :|: TRUE
f535_out -> f536_in :|: TRUE
f536_out -> f51_out :|: TRUE
f536_in -> f566_in :|: TRUE
f566_out -> f567_in :|: TRUE
f567_out -> f536_out :|: TRUE
f567_in -> f578_in :|: TRUE
f578_out -> f567_out :|: TRUE
f578_in -> f583_in :|: TRUE
f578_in -> f582_in :|: TRUE
f582_out -> f578_out :|: TRUE
f583_out -> f578_out :|: TRUE
f582_in -> f584_in :|: TRUE
f584_out -> f582_out :|: TRUE
f585_out -> f586_in :|: TRUE
f584_in -> f585_in :|: TRUE
f586_out -> f584_out :|: TRUE
f587_out -> f585_out :|: TRUE
f585_in -> f587_in :|: TRUE
f587_in -> f589_in :|: TRUE
f587_in -> f588_in :|: TRUE
f589_out -> f587_out :|: TRUE
f588_out -> f587_out :|: TRUE
f589_in -> f596_in :|: TRUE
f596_out -> f589_out :|: TRUE
f596_in -> f597_in :|: TRUE
f597_out -> f596_out :|: TRUE
f597_in -> f598_in :|: TRUE
f598_out -> f597_out :|: TRUE
f599_out -> f597_out :|: TRUE
f597_in -> f599_in :|: TRUE
f598_in -> f604_in :|: TRUE
f603_out -> f598_out :|: TRUE
f598_in -> f603_in :|: TRUE
f604_out -> f598_out :|: TRUE
f50_out(0) -> f603_out :|: TRUE
f603_in -> f50_in(0) :|: TRUE
Start term: f2_in(T1)

----------------------------------------

(159) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f481_in(x) -> f490_in(x) :|: TRUE
f50_in(T6) -> f102_in(T6) :|: TRUE
f490_in(x3) -> f496_in(x3) :|: TRUE
f102_in(x5) -> f164_in(x5) :|: TRUE
f496_in(s(T13)) -> f505_in(T13) :|: TRUE
f164_in(x9) -> f481_in(x9) :|: TRUE
f505_in(x11) -> f50_in(x11) :|: TRUE


----------------------------------------

(160)
Obligation:
Rules:
f481_in(x) -> f490_in(x) :|: TRUE
f50_in(T6) -> f102_in(T6) :|: TRUE
f490_in(x3) -> f496_in(x3) :|: TRUE
f102_in(x5) -> f164_in(x5) :|: TRUE
f496_in(s(T13)) -> f505_in(T13) :|: TRUE
f164_in(x9) -> f481_in(x9) :|: TRUE
f505_in(x11) -> f50_in(x11) :|: TRUE

----------------------------------------

(161) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(162)
Obligation:
Rules:
f50_in(s(T13:0)) -> f50_in(T13:0) :|: TRUE

----------------------------------------

(163) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(164)
Obligation:
Rules:
f50_in(s(T13:0)) -> f50_in(T13:0) :|: TRUE

----------------------------------------

(165) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f50_in(s(T13:0)) -> f50_in(T13:0) :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!
----------------------------------------

(166)
Obligation:

Termination digraph:
Nodes:
(1) f50_in(s(T13:0)) -> f50_in(T13:0) :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(167) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f50_in(VARIABLE)
s(VARIABLE)
Removed predefined arithmetic.
----------------------------------------

(168)
Obligation:
Rules:
f50_in(s(T13:0)) -> f50_in(T13:0)

----------------------------------------

(169) IRSwTToQDPProof (SOUND)
Removed the integers and created a QDP-Problem.
----------------------------------------

(170)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   f50_in(s(T13:0)) -> f50_in(T13:0)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(171) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*f50_in(s(T13:0)) -> f50_in(T13:0)
The graph contains the following edges 1 > 1


----------------------------------------

(172)
YES

----------------------------------------

(173)
Obligation:
Rules:
f587_in -> f589_in :|: TRUE
f587_in -> f588_in :|: TRUE
f589_out -> f587_out :|: TRUE
f588_out -> f587_out :|: TRUE
f599_in -> f609_in :|: TRUE
f609_out -> f599_out :|: TRUE
f611_out -> f599_out :|: TRUE
f599_in -> f611_in :|: TRUE
f609_in -> f585_in :|: TRUE
f585_out -> f609_out :|: TRUE
f587_out -> f585_out :|: TRUE
f585_in -> f587_in :|: TRUE
f589_in -> f596_in :|: TRUE
f596_out -> f589_out :|: TRUE
f597_in -> f598_in :|: TRUE
f598_out -> f597_out :|: TRUE
f599_out -> f597_out :|: TRUE
f597_in -> f599_in :|: TRUE
f596_in -> f597_in :|: TRUE
f597_out -> f596_out :|: TRUE
f5_out(T1) -> f2_out(T1) :|: TRUE
f2_in(x) -> f5_in(x) :|: TRUE
f5_in(x1) -> f25_in(x1) :|: TRUE
f26_out(x2) -> f5_out(x2) :|: TRUE
f5_in(x3) -> f26_in(x3) :|: TRUE
f25_out(x4) -> f5_out(x4) :|: TRUE
f27_out(T6) -> f25_out(T6) :|: TRUE
f25_in(x5) -> f27_in(x5) :|: TRUE
f51_out -> f27_out(x6) :|: TRUE
f50_out(x7) -> f51_in :|: TRUE
f27_in(x8) -> f50_in(x8) :|: TRUE
f51_in -> f535_in :|: TRUE
f535_out -> f536_in :|: TRUE
f536_out -> f51_out :|: TRUE
f536_in -> f566_in :|: TRUE
f566_out -> f567_in :|: TRUE
f567_out -> f536_out :|: TRUE
f567_in -> f578_in :|: TRUE
f578_out -> f567_out :|: TRUE
f578_in -> f583_in :|: TRUE
f578_in -> f582_in :|: TRUE
f582_out -> f578_out :|: TRUE
f583_out -> f578_out :|: TRUE
f582_in -> f584_in :|: TRUE
f584_out -> f582_out :|: TRUE
f585_out -> f586_in :|: TRUE
f584_in -> f585_in :|: TRUE
f586_out -> f584_out :|: TRUE
Start term: f2_in(T1)

----------------------------------------

(174) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(175)
TRUE

----------------------------------------

(176)
Obligation:
Rules:
f535_out -> f561_out :|: TRUE
f561_in -> f535_in :|: TRUE
f590_out -> f588_out :|: TRUE
f588_in -> f590_in :|: TRUE
f568_out -> f566_out :|: TRUE
f566_in -> f568_in :|: TRUE
f569_in -> f570_in :|: TRUE
f570_out -> f569_out :|: TRUE
f541_in -> f564_in :|: TRUE
f564_out -> f541_out :|: TRUE
f541_in -> f563_in :|: TRUE
f563_out -> f541_out :|: TRUE
f567_in -> f578_in :|: TRUE
f578_out -> f567_out :|: TRUE
f490_out(T10) -> f481_out(T10) :|: TRUE
f481_in(x) -> f490_in(x) :|: TRUE
f586_in -> f51_in :|: TRUE
f51_out -> f586_out :|: TRUE
f541_out -> f537_out :|: TRUE
f537_in -> f540_in :|: TRUE
f537_in -> f541_in :|: TRUE
f540_out -> f537_out :|: TRUE
f296_out -> f291_out :|: TRUE
f291_in -> f296_in :|: TRUE
f589_in -> f596_in :|: TRUE
f596_out -> f589_out :|: TRUE
f599_in -> f609_in :|: TRUE
f609_out -> f599_out :|: TRUE
f611_out -> f599_out :|: TRUE
f599_in -> f611_in :|: TRUE
f50_out(0) -> f603_out :|: TRUE
f603_in -> f50_in(0) :|: TRUE
f587_out -> f585_out :|: TRUE
f585_in -> f587_in :|: TRUE
f591_in -> f592_in :|: TRUE
f592_out -> f591_out :|: TRUE
f496_in(s(T13)) -> f505_in(T13) :|: TRUE
f505_out(x1) -> f496_out(s(x1)) :|: TRUE
f508_out -> f496_out(x2) :|: TRUE
f496_in(x3) -> f508_in :|: TRUE
f587_in -> f589_in :|: TRUE
f587_in -> f588_in :|: TRUE
f589_out -> f587_out :|: TRUE
f588_out -> f587_out :|: TRUE
f50_in(T6) -> f102_in(T6) :|: TRUE
f102_out(x4) -> f50_out(x4) :|: TRUE
f291_out -> f160_out :|: TRUE
f160_in -> f291_in :|: TRUE
f536_in -> f566_in :|: TRUE
f566_out -> f567_in :|: TRUE
f567_out -> f536_out :|: TRUE
f569_out -> f568_out :|: TRUE
f568_in -> f569_in :|: TRUE
f496_out(x5) -> f490_out(x5) :|: TRUE
f490_in(x6) -> f496_in(x6) :|: TRUE
f51_in -> f535_in :|: TRUE
f535_out -> f536_in :|: TRUE
f536_out -> f51_out :|: TRUE
f591_out -> f590_out :|: TRUE
f590_in -> f591_in :|: TRUE
f572_in -> f572_out :|: TRUE
f609_in -> f585_in :|: TRUE
f585_out -> f609_out :|: TRUE
f571_out -> f570_out :|: TRUE
f570_in -> f571_in :|: TRUE
f102_in(0) -> f160_in :|: TRUE
f164_out(x7) -> f102_out(x7) :|: TRUE
f102_in(x8) -> f164_in(x8) :|: TRUE
f160_out -> f102_out(0) :|: TRUE
f598_in -> f604_in :|: TRUE
f603_out -> f598_out :|: TRUE
f598_in -> f603_in :|: TRUE
f604_out -> f598_out :|: TRUE
f597_in -> f598_in :|: TRUE
f598_out -> f597_out :|: TRUE
f599_out -> f597_out :|: TRUE
f597_in -> f599_in :|: TRUE
f535_in -> f537_in :|: TRUE
f537_out -> f535_out :|: TRUE
f505_in(x9) -> f50_in(x9) :|: TRUE
f50_out(x10) -> f505_out(x10) :|: TRUE
f585_out -> f586_in :|: TRUE
f584_in -> f585_in :|: TRUE
f586_out -> f584_out :|: TRUE
f296_in -> f298_in :|: TRUE
f298_out -> f296_out :|: TRUE
f563_in -> f563_out :|: TRUE
f540_in -> f561_in :|: TRUE
f561_out -> f540_out :|: TRUE
f540_in -> f562_in :|: TRUE
f562_out -> f540_out :|: TRUE
f164_in(x11) -> f481_in(x11) :|: TRUE
f481_out(x12) -> f164_out(x12) :|: TRUE
f578_in -> f583_in :|: TRUE
f578_in -> f582_in :|: TRUE
f582_out -> f578_out :|: TRUE
f583_out -> f578_out :|: TRUE
f573_out -> f571_out :|: TRUE
f572_out -> f571_out :|: TRUE
f571_in -> f573_in :|: TRUE
f571_in -> f572_in :|: TRUE
f582_in -> f584_in :|: TRUE
f584_out -> f582_out :|: TRUE
f298_in -> f298_out :|: TRUE
f592_in -> f592_out :|: TRUE
f596_in -> f597_in :|: TRUE
f597_out -> f596_out :|: TRUE
f5_out(T1) -> f2_out(T1) :|: TRUE
f2_in(x13) -> f5_in(x13) :|: TRUE
f5_in(x14) -> f25_in(x14) :|: TRUE
f26_out(x15) -> f5_out(x15) :|: TRUE
f5_in(x16) -> f26_in(x16) :|: TRUE
f25_out(x17) -> f5_out(x17) :|: TRUE
f27_out(x18) -> f25_out(x18) :|: TRUE
f25_in(x19) -> f27_in(x19) :|: TRUE
f51_out -> f27_out(x20) :|: TRUE
f50_out(x21) -> f51_in :|: TRUE
f27_in(x22) -> f50_in(x22) :|: TRUE
Start term: f2_in(T1)

----------------------------------------

(177) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f535_out -> f561_out :|: TRUE
f561_in -> f535_in :|: TRUE
f590_out -> f588_out :|: TRUE
f588_in -> f590_in :|: TRUE
f568_out -> f566_out :|: TRUE
f566_in -> f568_in :|: TRUE
f569_in -> f570_in :|: TRUE
f570_out -> f569_out :|: TRUE
f541_in -> f563_in :|: TRUE
f563_out -> f541_out :|: TRUE
f567_in -> f578_in :|: TRUE
f490_out(T10) -> f481_out(T10) :|: TRUE
f481_in(x) -> f490_in(x) :|: TRUE
f586_in -> f51_in :|: TRUE
f541_out -> f537_out :|: TRUE
f537_in -> f540_in :|: TRUE
f537_in -> f541_in :|: TRUE
f540_out -> f537_out :|: TRUE
f296_out -> f291_out :|: TRUE
f291_in -> f296_in :|: TRUE
f589_in -> f596_in :|: TRUE
f596_out -> f589_out :|: TRUE
f599_in -> f609_in :|: TRUE
f609_out -> f599_out :|: TRUE
f50_out(0) -> f603_out :|: TRUE
f603_in -> f50_in(0) :|: TRUE
f587_out -> f585_out :|: TRUE
f585_in -> f587_in :|: TRUE
f591_in -> f592_in :|: TRUE
f592_out -> f591_out :|: TRUE
f496_in(s(T13)) -> f505_in(T13) :|: TRUE
f505_out(x1) -> f496_out(s(x1)) :|: TRUE
f587_in -> f589_in :|: TRUE
f587_in -> f588_in :|: TRUE
f589_out -> f587_out :|: TRUE
f588_out -> f587_out :|: TRUE
f50_in(T6) -> f102_in(T6) :|: TRUE
f102_out(x4) -> f50_out(x4) :|: TRUE
f291_out -> f160_out :|: TRUE
f160_in -> f291_in :|: TRUE
f536_in -> f566_in :|: TRUE
f566_out -> f567_in :|: TRUE
f569_out -> f568_out :|: TRUE
f568_in -> f569_in :|: TRUE
f496_out(x5) -> f490_out(x5) :|: TRUE
f490_in(x6) -> f496_in(x6) :|: TRUE
f51_in -> f535_in :|: TRUE
f535_out -> f536_in :|: TRUE
f591_out -> f590_out :|: TRUE
f590_in -> f591_in :|: TRUE
f572_in -> f572_out :|: TRUE
f609_in -> f585_in :|: TRUE
f585_out -> f609_out :|: TRUE
f571_out -> f570_out :|: TRUE
f570_in -> f571_in :|: TRUE
f102_in(0) -> f160_in :|: TRUE
f164_out(x7) -> f102_out(x7) :|: TRUE
f102_in(x8) -> f164_in(x8) :|: TRUE
f160_out -> f102_out(0) :|: TRUE
f603_out -> f598_out :|: TRUE
f598_in -> f603_in :|: TRUE
f597_in -> f598_in :|: TRUE
f598_out -> f597_out :|: TRUE
f599_out -> f597_out :|: TRUE
f597_in -> f599_in :|: TRUE
f535_in -> f537_in :|: TRUE
f537_out -> f535_out :|: TRUE
f505_in(x9) -> f50_in(x9) :|: TRUE
f50_out(x10) -> f505_out(x10) :|: TRUE
f585_out -> f586_in :|: TRUE
f584_in -> f585_in :|: TRUE
f296_in -> f298_in :|: TRUE
f298_out -> f296_out :|: TRUE
f563_in -> f563_out :|: TRUE
f540_in -> f561_in :|: TRUE
f561_out -> f540_out :|: TRUE
f164_in(x11) -> f481_in(x11) :|: TRUE
f481_out(x12) -> f164_out(x12) :|: TRUE
f578_in -> f582_in :|: TRUE
f572_out -> f571_out :|: TRUE
f571_in -> f572_in :|: TRUE
f582_in -> f584_in :|: TRUE
f298_in -> f298_out :|: TRUE
f592_in -> f592_out :|: TRUE
f596_in -> f597_in :|: TRUE
f597_out -> f596_out :|: TRUE
f50_out(x21) -> f51_in :|: TRUE


----------------------------------------

(178)
Obligation:
Rules:
f535_out -> f561_out :|: TRUE
f561_in -> f535_in :|: TRUE
f590_out -> f588_out :|: TRUE
f588_in -> f590_in :|: TRUE
f568_out -> f566_out :|: TRUE
f566_in -> f568_in :|: TRUE
f569_in -> f570_in :|: TRUE
f570_out -> f569_out :|: TRUE
f541_in -> f563_in :|: TRUE
f563_out -> f541_out :|: TRUE
f567_in -> f578_in :|: TRUE
f490_out(T10) -> f481_out(T10) :|: TRUE
f481_in(x) -> f490_in(x) :|: TRUE
f586_in -> f51_in :|: TRUE
f541_out -> f537_out :|: TRUE
f537_in -> f540_in :|: TRUE
f537_in -> f541_in :|: TRUE
f540_out -> f537_out :|: TRUE
f296_out -> f291_out :|: TRUE
f291_in -> f296_in :|: TRUE
f589_in -> f596_in :|: TRUE
f596_out -> f589_out :|: TRUE
f599_in -> f609_in :|: TRUE
f609_out -> f599_out :|: TRUE
f50_out(0) -> f603_out :|: TRUE
f603_in -> f50_in(0) :|: TRUE
f587_out -> f585_out :|: TRUE
f585_in -> f587_in :|: TRUE
f591_in -> f592_in :|: TRUE
f592_out -> f591_out :|: TRUE
f496_in(s(T13)) -> f505_in(T13) :|: TRUE
f505_out(x1) -> f496_out(s(x1)) :|: TRUE
f587_in -> f589_in :|: TRUE
f587_in -> f588_in :|: TRUE
f589_out -> f587_out :|: TRUE
f588_out -> f587_out :|: TRUE
f50_in(T6) -> f102_in(T6) :|: TRUE
f102_out(x4) -> f50_out(x4) :|: TRUE
f291_out -> f160_out :|: TRUE
f160_in -> f291_in :|: TRUE
f536_in -> f566_in :|: TRUE
f566_out -> f567_in :|: TRUE
f569_out -> f568_out :|: TRUE
f568_in -> f569_in :|: TRUE
f496_out(x5) -> f490_out(x5) :|: TRUE
f490_in(x6) -> f496_in(x6) :|: TRUE
f51_in -> f535_in :|: TRUE
f535_out -> f536_in :|: TRUE
f591_out -> f590_out :|: TRUE
f590_in -> f591_in :|: TRUE
f572_in -> f572_out :|: TRUE
f609_in -> f585_in :|: TRUE
f585_out -> f609_out :|: TRUE
f571_out -> f570_out :|: TRUE
f570_in -> f571_in :|: TRUE
f102_in(0) -> f160_in :|: TRUE
f164_out(x7) -> f102_out(x7) :|: TRUE
f102_in(x8) -> f164_in(x8) :|: TRUE
f160_out -> f102_out(0) :|: TRUE
f603_out -> f598_out :|: TRUE
f598_in -> f603_in :|: TRUE
f597_in -> f598_in :|: TRUE
f598_out -> f597_out :|: TRUE
f599_out -> f597_out :|: TRUE
f597_in -> f599_in :|: TRUE
f535_in -> f537_in :|: TRUE
f537_out -> f535_out :|: TRUE
f505_in(x9) -> f50_in(x9) :|: TRUE
f50_out(x10) -> f505_out(x10) :|: TRUE
f585_out -> f586_in :|: TRUE
f584_in -> f585_in :|: TRUE
f296_in -> f298_in :|: TRUE
f298_out -> f296_out :|: TRUE
f563_in -> f563_out :|: TRUE
f540_in -> f561_in :|: TRUE
f561_out -> f540_out :|: TRUE
f164_in(x11) -> f481_in(x11) :|: TRUE
f481_out(x12) -> f164_out(x12) :|: TRUE
f578_in -> f582_in :|: TRUE
f572_out -> f571_out :|: TRUE
f571_in -> f572_in :|: TRUE
f582_in -> f584_in :|: TRUE
f298_in -> f298_out :|: TRUE
f592_in -> f592_out :|: TRUE
f596_in -> f597_in :|: TRUE
f597_out -> f596_out :|: TRUE
f50_out(x21) -> f51_in :|: TRUE

----------------------------------------

(179) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(180)
Obligation:
Rules:
f102_out(x4:0) -> f537_in :|: TRUE
f102_in(cons_0) -> f102_out(0) :|: TRUE && cons_0 = 0
f587_out -> f537_in :|: TRUE
f102_out(x) -> f102_out(s(x)) :|: TRUE
f535_out -> f585_in :|: TRUE
f535_out -> f535_out :|: TRUE
f102_in(s(T13:0)) -> f102_in(T13:0) :|: TRUE
f585_in -> f102_in(0) :|: TRUE
f102_out(x1) -> f587_out :|: TRUE && x1 = 0
f587_out -> f587_out :|: TRUE
f537_in -> f535_out :|: TRUE
f585_in -> f585_in :|: TRUE
f537_in -> f537_in :|: TRUE
f585_in -> f587_out :|: TRUE

----------------------------------------

(181) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(182)
Obligation:
Rules:
f102_out(x4:0) -> f537_in :|: TRUE
f102_in(cons_0) -> f102_out(0) :|: TRUE && cons_0 = 0
f587_out -> f537_in :|: TRUE
f102_out(x) -> f102_out(s(x)) :|: TRUE
f535_out -> f585_in :|: TRUE
f535_out -> f535_out :|: TRUE
f102_in(s(T13:0)) -> f102_in(T13:0) :|: TRUE
f585_in -> f102_in(0) :|: TRUE
f102_out(x1) -> f587_out :|: TRUE && x1 = 0
f587_out -> f587_out :|: TRUE
f537_in -> f535_out :|: TRUE
f585_in -> f585_in :|: TRUE
f537_in -> f537_in :|: TRUE
f585_in -> f587_out :|: TRUE

----------------------------------------

(183) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f102_out(x4:0) -> f537_in :|: TRUE
(2) f102_in(cons_0) -> f102_out(0) :|: TRUE && cons_0 = 0
(3) f587_out -> f537_in :|: TRUE
(4) f102_out(x) -> f102_out(s(x)) :|: TRUE
(5) f535_out -> f585_in :|: TRUE
(6) f535_out -> f535_out :|: TRUE
(7) f102_in(s(T13:0)) -> f102_in(T13:0) :|: TRUE
(8) f585_in -> f102_in(0) :|: TRUE
(9) f102_out(x1) -> f587_out :|: TRUE && x1 = 0
(10) f587_out -> f587_out :|: TRUE
(11) f537_in -> f535_out :|: TRUE
(12) f585_in -> f585_in :|: TRUE
(13) f537_in -> f537_in :|: TRUE
(14) f585_in -> f587_out :|: TRUE

Arcs:
(1) -> (11), (13)
(2) -> (1), (4), (9)
(3) -> (11), (13)
(4) -> (1), (4)
(5) -> (8), (12), (14)
(6) -> (5), (6)
(7) -> (2), (7)
(8) -> (2)
(9) -> (3), (10)
(10) -> (3), (10)
(11) -> (5), (6)
(12) -> (8), (12), (14)
(13) -> (11), (13)
(14) -> (3), (10)

This digraph is fully evaluated!
----------------------------------------

(184)
Complex Obligation (AND)

----------------------------------------

(185)
Obligation:

Termination digraph:
Nodes:
(1) f102_in(s(T13:0)) -> f102_in(T13:0) :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(186) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f102_in(VARIABLE)
s(VARIABLE)
Removed predefined arithmetic.
----------------------------------------

(187)
Obligation:
Rules:
f102_in(s(T13:0)) -> f102_in(T13:0)

----------------------------------------

(188) IRSwTToQDPProof (SOUND)
Removed the integers and created a QDP-Problem.
----------------------------------------

(189)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   f102_in(s(T13:0)) -> f102_in(T13:0)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(190) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*f102_in(s(T13:0)) -> f102_in(T13:0)
The graph contains the following edges 1 > 1


----------------------------------------

(191)
YES

----------------------------------------

(192)
Obligation:

Termination digraph:
Nodes:
(1) f102_out(x4:0) -> f537_in :|: TRUE
(2) f102_out(x) -> f102_out(s(x)) :|: TRUE
(3) f102_in(cons_0) -> f102_out(0) :|: TRUE && cons_0 = 0
(4) f585_in -> f102_in(0) :|: TRUE
(5) f535_out -> f585_in :|: TRUE
(6) f535_out -> f535_out :|: TRUE
(7) f537_in -> f535_out :|: TRUE
(8) f537_in -> f537_in :|: TRUE
(9) f587_out -> f537_in :|: TRUE
(10) f587_out -> f587_out :|: TRUE
(11) f585_in -> f587_out :|: TRUE
(12) f585_in -> f585_in :|: TRUE
(13) f102_out(x1) -> f587_out :|: TRUE && x1 = 0

Arcs:
(1) -> (7), (8)
(2) -> (1), (2)
(3) -> (1), (2), (13)
(4) -> (3)
(5) -> (4), (11), (12)
(6) -> (5), (6)
(7) -> (5), (6)
(8) -> (7), (8)
(9) -> (7), (8)
(10) -> (9), (10)
(11) -> (9), (10)
(12) -> (4), (11), (12)
(13) -> (9), (10)

This digraph is fully evaluated!

----------------------------------------

(193) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(194)
Obligation:
Rules:
f537_in -> f535_out :|: TRUE
f102_out(x4:0:0) -> f537_in :|: TRUE
f585_in -> f587_out :|: TRUE
f587_out -> f587_out :|: TRUE
f537_in -> f537_in :|: TRUE
f585_in -> f102_out(0) :|: TRUE
f585_in -> f585_in :|: TRUE
f535_out -> f535_out :|: TRUE
f587_out -> f537_in :|: TRUE
f102_out(cons_0) -> f587_out :|: TRUE && cons_0 = 0
f102_out(x:0) -> f102_out(s(x:0)) :|: TRUE
f535_out -> f585_in :|: TRUE

----------------------------------------

(195) IRSwTToIntTRSProof (SOUND)
Applied path-length measure to transform intTRS with terms to intTRS.
----------------------------------------

(196)
Obligation:
Rules:
f537_in -> f535_out :|: TRUE
f102_out(x) -> f537_in :|: TRUE
f585_in -> f587_out :|: TRUE
f587_out -> f587_out :|: TRUE
f537_in -> f537_in :|: TRUE
f585_in -> f102_out(0) :|: TRUE
f585_in -> f585_in :|: TRUE
f535_out -> f535_out :|: TRUE
f587_out -> f537_in :|: TRUE
f102_out(cons_0) -> f587_out :|: TRUE && cons_0 = 0
f102_out(x2) -> f102_out(s(x2)) :|: TRUE
f535_out -> f585_in :|: TRUE

----------------------------------------

(197) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(198)
Obligation:
Rules:
f537_in -> f535_out :|: TRUE
f102_out(x:0) -> f537_in :|: TRUE
f585_in -> f587_out :|: TRUE
f587_out -> f587_out :|: TRUE
f537_in -> f537_in :|: TRUE
f585_in -> f102_out(0) :|: TRUE
f585_in -> f585_in :|: TRUE
f535_out -> f535_out :|: TRUE
f587_out -> f537_in :|: TRUE
f102_out(cons_0) -> f587_out :|: TRUE && cons_0 = 0
f102_out(x2:0) -> f102_out(s(x2:0)) :|: TRUE
f535_out -> f585_in :|: TRUE

----------------------------------------

(199) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 1,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(vlcnd N)",
                "(',' (vl N Xs) (',' (select X1 Xs Ys) (',' (vl M Ys) (vlcnd M))))"
            ],
            [
                "(vlcnd (0))",
                null
            ],
            [
                "(vl (0) L)",
                "(',' (!) (eq L ([])))"
            ],
            [
                "(vl N (. X2 Xs))",
                "(',' (p N P) (vl P Xs))"
            ],
            [
                "(select X (. Y Xs) (. Y Ys))",
                "(select X Xs Ys)"
            ],
            [
                "(select X (. X Xs) Xs)",
                null
            ],
            [
                "(p (0) (0))",
                null
            ],
            [
                "(p (s X) X)",
                null
            ],
            [
                "(eq X X)",
                null
            ]
        ]
    },
    "graph": {
        "nodes": {
            "48": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (vl T3 X5) (',' (select X6 X5 X7) (',' (vl X8 X7) (vlcnd X8))))"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(vlcnd T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [
                        "X5",
                        "X6",
                        "X7",
                        "X8"
                    ],
                    "exprvars": []
                }
            },
            "49": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(',' (vl T3 X5) (',' (select X6 X5 X7) (',' (vl X8 X7) (vlcnd X8))))"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(',' (vl T3 X5) (',' (select X6 X5 X7) (',' (vl X8 X7) (vlcnd X8))))"
                    },
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(vlcnd T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [
                        "X5",
                        "X6",
                        "X7",
                        "X8"
                    ],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "392": {
                "goal": [{
                    "clause": 5,
                    "scope": 4,
                    "term": "(select X6 ([]) X7)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X6",
                        "X7"
                    ],
                    "exprvars": []
                }
            },
            "395": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "550": {
                "goal": [{
                    "clause": 1,
                    "scope": 7,
                    "term": "(vlcnd T7)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "430": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_5) (eq T11 ([])))"
                    },
                    {
                        "clause": 3,
                        "scope": 5,
                        "term": "(vl X8 T11)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": ["X8"],
                    "exprvars": []
                }
            },
            "551": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (vl T23 X90) (',' (select X91 X90 X92) (',' (vl X93 X92) (vlcnd X93))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X90",
                        "X91",
                        "X92",
                        "X93"
                    ],
                    "exprvars": []
                }
            },
            "552": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vl T23 X90)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X90"],
                    "exprvars": []
                }
            },
            "432": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(eq T11 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [],
                    "exprvars": []
                }
            },
            "553": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (select X91 T24 X92) (',' (vl X93 X92) (vlcnd X93)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X91",
                        "X92",
                        "X93"
                    ],
                    "exprvars": []
                }
            },
            "630": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "554": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 8,
                        "term": "(vl T23 X90)"
                    },
                    {
                        "clause": 3,
                        "scope": 8,
                        "term": "(vl T23 X90)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X90"],
                    "exprvars": []
                }
            },
            "631": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vl X93 T37)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X93"],
                    "exprvars": []
                }
            },
            "434": {
                "goal": [{
                    "clause": 8,
                    "scope": 6,
                    "term": "(eq T11 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T11"],
                    "free": [],
                    "exprvars": []
                }
            },
            "555": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_8) (eq X103 ([])))"
                    },
                    {
                        "clause": 3,
                        "scope": 8,
                        "term": "(vl T23 X90)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X90",
                        "X103"
                    ],
                    "exprvars": []
                }
            },
            "632": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vlcnd T60)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "556": {
                "goal": [{
                    "clause": 3,
                    "scope": 8,
                    "term": "(vl T23 X90)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(vl T23 X90)",
                        "(vl (0) X102)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X90",
                        "X102"
                    ],
                    "exprvars": []
                }
            },
            "633": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 12,
                        "term": "(vl X93 T37)"
                    },
                    {
                        "clause": 3,
                        "scope": 12,
                        "term": "(vl X93 T37)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X93"],
                    "exprvars": []
                }
            },
            "557": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(eq X103 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X103"],
                    "exprvars": []
                }
            },
            "634": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_12) (eq T66 ([])))"
                    },
                    {
                        "clause": 3,
                        "scope": 12,
                        "term": "(vl X93 T37)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X93"],
                    "exprvars": []
                }
            },
            "558": {
                "goal": [{
                    "clause": 8,
                    "scope": 9,
                    "term": "(eq X103 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X103"],
                    "exprvars": []
                }
            },
            "635": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(eq T66 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "559": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "636": {
                "goal": [{
                    "clause": 8,
                    "scope": 13,
                    "term": "(eq T66 ([]))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "637": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "638": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "639": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "52": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (',' (!_2) (eq X14 ([]))) (',' (select X6 X14 X7) (',' (vl X8 X7) (vlcnd X8))))"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(',' (vl (0) X5) (',' (select X6 X5 X7) (',' (vl X8 X7) (vlcnd X8))))"
                    },
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(vlcnd (0))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X5",
                        "X6",
                        "X7",
                        "X8",
                        "X14"
                    ],
                    "exprvars": []
                }
            },
            "53": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(',' (vl T3 X5) (',' (select X6 X5 X7) (',' (vl X8 X7) (vlcnd X8))))"
                    },
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(vlcnd T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(vl T3 X5)",
                        "(vl (0) X13)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [
                        "X5",
                        "X6",
                        "X7",
                        "X8",
                        "X13"
                    ],
                    "exprvars": []
                }
            },
            "560": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vlcnd T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "640": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "366": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (select X6 ([]) X7) (',' (vl X8 X7) (vlcnd X8)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X6",
                        "X7",
                        "X8"
                    ],
                    "exprvars": []
                }
            },
            "443": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "641": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "4": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(vlcnd T1)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(vlcnd T1)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "367": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(select X6 ([]) X7)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X6",
                        "X7"
                    ],
                    "exprvars": []
                }
            },
            "642": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "368": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (vl X8 T5) (vlcnd X8))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": ["X8"],
                    "exprvars": []
                }
            },
            "643": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "446": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "644": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "645": {
                "goal": [{
                    "clause": 3,
                    "scope": 2,
                    "term": "(',' (vl T3 X5) (',' (select X6 X5 X7) (',' (vl X8 X7) (vlcnd X8))))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(vl T3 X5)",
                        "(vl (0) X13)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [
                        "X5",
                        "X6",
                        "X7",
                        "X8",
                        "X13"
                    ],
                    "exprvars": []
                }
            },
            "448": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "646": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": 2,
                        "term": null
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(vlcnd T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(vl T3 X5)",
                        "(vl (0) X13)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [
                        "X5",
                        "X13"
                    ],
                    "exprvars": []
                }
            },
            "647": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (',' (p T75 X237) (vl X237 X239)) (',' (select X6 (. X238 X239) X7) (',' (vl X8 X7) (vlcnd X8))))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(vl T75 X5)",
                        "(vl (0) X13)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T75"],
                    "free": [
                        "X5",
                        "X6",
                        "X7",
                        "X8",
                        "X13",
                        "X238",
                        "X239",
                        "X237"
                    ],
                    "exprvars": []
                }
            },
            "648": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 14,
                        "term": "(',' (',' (p T75 X237) (vl X237 X239)) (',' (select X6 (. X238 X239) X7) (',' (vl X8 X7) (vlcnd X8))))"
                    },
                    {
                        "clause": 7,
                        "scope": 14,
                        "term": "(',' (',' (p T75 X237) (vl X237 X239)) (',' (select X6 (. X238 X239) X7) (',' (vl X8 X7) (vlcnd X8))))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(vl T75 X5)",
                        "(vl (0) X13)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T75"],
                    "free": [
                        "X5",
                        "X6",
                        "X7",
                        "X8",
                        "X13",
                        "X238",
                        "X239",
                        "X237"
                    ],
                    "exprvars": []
                }
            },
            "649": {
                "goal": [{
                    "clause": 7,
                    "scope": 14,
                    "term": "(',' (',' (p T75 X237) (vl X237 X239)) (',' (select X6 (. X238 X239) X7) (',' (vl X8 X7) (vlcnd X8))))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(vl T75 X5)",
                        "(vl (0) X13)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T75"],
                    "free": [
                        "X5",
                        "X6",
                        "X7",
                        "X8",
                        "X13",
                        "X238",
                        "X239",
                        "X237"
                    ],
                    "exprvars": []
                }
            },
            "607": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vl T33 X128)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X128"],
                    "exprvars": []
                }
            },
            "608": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "297": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (eq X14 ([])) (',' (select X6 X14 X7) (',' (vl X8 X7) (vlcnd X8))))"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(vlcnd (0))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X6",
                        "X7",
                        "X8",
                        "X14"
                    ],
                    "exprvars": []
                }
            },
            "650": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (vl T78 X239) (',' (select X6 (. X238 X239) X7) (',' (vl X8 X7) (vlcnd X8))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T78"],
                    "free": [
                        "X6",
                        "X7",
                        "X8",
                        "X238",
                        "X239"
                    ],
                    "exprvars": []
                }
            },
            "574": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (p T29 X126) (vl X126 X128))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X128",
                        "X126"
                    ],
                    "exprvars": []
                }
            },
            "651": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "410": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vl X8 T5)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": ["X8"],
                    "exprvars": []
                }
            },
            "652": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vl T78 X239)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T78"],
                    "free": ["X239"],
                    "exprvars": []
                }
            },
            "411": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vlcnd T7)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "576": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 10,
                        "term": "(',' (p T29 X126) (vl X126 X128))"
                    },
                    {
                        "clause": 7,
                        "scope": 10,
                        "term": "(',' (p T29 X126) (vl X126 X128))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X128",
                        "X126"
                    ],
                    "exprvars": []
                }
            },
            "653": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (select X6 (. X238 T79) X7) (',' (vl X8 X7) (vlcnd X8)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X6",
                        "X7",
                        "X8",
                        "X238"
                    ],
                    "exprvars": []
                }
            },
            "577": {
                "goal": [{
                    "clause": 6,
                    "scope": 10,
                    "term": "(',' (p T29 X126) (vl X126 X128))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X128",
                        "X126"
                    ],
                    "exprvars": []
                }
            },
            "654": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(vlcnd T3)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(vl T3 X5)",
                        "(vl (0) X13)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": [
                        "X5",
                        "X13"
                    ],
                    "exprvars": []
                }
            },
            "655": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "579": {
                "goal": [{
                    "clause": 7,
                    "scope": 10,
                    "term": "(',' (p T29 X126) (vl X126 X128))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X128",
                        "X126"
                    ],
                    "exprvars": []
                }
            },
            "416": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(vl X8 T5)"
                    },
                    {
                        "clause": 3,
                        "scope": 5,
                        "term": "(vl X8 T5)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T5"],
                    "free": ["X8"],
                    "exprvars": []
                }
            },
            "615": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(select X91 T24 X92)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X91",
                        "X92"
                    ],
                    "exprvars": []
                }
            },
            "616": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (vl X93 T37) (vlcnd X93))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X93"],
                    "exprvars": []
                }
            },
            "619": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 11,
                        "term": "(select X91 T24 X92)"
                    },
                    {
                        "clause": 5,
                        "scope": 11,
                        "term": "(select X91 T24 X92)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X91",
                        "X92"
                    ],
                    "exprvars": []
                }
            },
            "580": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(vl (0) X128)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X128"],
                    "exprvars": []
                }
            },
            "460": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 7,
                        "term": "(vlcnd T7)"
                    },
                    {
                        "clause": 1,
                        "scope": 7,
                        "term": "(vlcnd T7)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "581": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "386": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 4,
                        "term": "(select X6 ([]) X7)"
                    },
                    {
                        "clause": 5,
                        "scope": 4,
                        "term": "(select X6 ([]) X7)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X6",
                        "X7"
                    ],
                    "exprvars": []
                }
            },
            "300": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (eq X14 ([])) (',' (select X6 X14 X7) (',' (vl X8 X7) (vlcnd X8))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X6",
                        "X7",
                        "X8",
                        "X14"
                    ],
                    "exprvars": []
                }
            },
            "301": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(vlcnd (0))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "302": {
                "goal": [{
                    "clause": 8,
                    "scope": 3,
                    "term": "(',' (eq X14 ([])) (',' (select X6 X14 X7) (',' (vl X8 X7) (vlcnd X8))))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X6",
                        "X7",
                        "X8",
                        "X14"
                    ],
                    "exprvars": []
                }
            },
            "624": {
                "goal": [{
                    "clause": 4,
                    "scope": 11,
                    "term": "(select X91 T24 X92)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X91",
                        "X92"
                    ],
                    "exprvars": []
                }
            },
            "625": {
                "goal": [{
                    "clause": 5,
                    "scope": 11,
                    "term": "(select X91 T24 X92)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X91",
                        "X92"
                    ],
                    "exprvars": []
                }
            },
            "549": {
                "goal": [{
                    "clause": 0,
                    "scope": 7,
                    "term": "(vlcnd T7)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "626": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(select X178 T50 X179)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X178",
                        "X179"
                    ],
                    "exprvars": []
                }
            },
            "627": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "628": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "629": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 1,
                "to": 4,
                "label": "CASE"
            },
            {
                "from": 4,
                "to": 48,
                "label": "ONLY EVAL with clause\nvlcnd(X4) :- ','(vl(X4, X5), ','(select(X6, X5, X7), ','(vl(X8, X7), vlcnd(X8)))).\nand substitutionT1 -> T3,\nX4 -> T3"
            },
            {
                "from": 48,
                "to": 49,
                "label": "CASE"
            },
            {
                "from": 49,
                "to": 52,
                "label": "EVAL with clause\nvl(0, X13) :- ','(!_2, eq(X13, [])).\nand substitutionT3 -> 0,\nX5 -> X14,\nX13 -> X14"
            },
            {
                "from": 49,
                "to": 53,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 52,
                "to": 297,
                "label": "CUT"
            },
            {
                "from": 53,
                "to": 645,
                "label": "PARALLEL"
            },
            {
                "from": 53,
                "to": 646,
                "label": "PARALLEL"
            },
            {
                "from": 297,
                "to": 300,
                "label": "PARALLEL"
            },
            {
                "from": 297,
                "to": 301,
                "label": "PARALLEL"
            },
            {
                "from": 300,
                "to": 302,
                "label": "CASE"
            },
            {
                "from": 301,
                "to": 643,
                "label": "ONLY EVAL with clause\nvlcnd(0).\nand substitution"
            },
            {
                "from": 302,
                "to": 366,
                "label": "ONLY EVAL with clause\neq(X40, X40).\nand substitutionX14 -> [],\nX40 -> [],\nX41 -> []"
            },
            {
                "from": 366,
                "to": 367,
                "label": "SPLIT 1"
            },
            {
                "from": 366,
                "to": 368,
                "label": "SPLIT 2\nnew knowledge:\nT4 is ground\nT5 is ground\nreplacements:X6 -> T4,\nX7 -> T5"
            },
            {
                "from": 367,
                "to": 386,
                "label": "CASE"
            },
            {
                "from": 368,
                "to": 410,
                "label": "SPLIT 1"
            },
            {
                "from": 368,
                "to": 411,
                "label": "SPLIT 2\nnew knowledge:\nT5 is ground\nreplacements:X8 -> T7"
            },
            {
                "from": 386,
                "to": 392,
                "label": "BACKTRACK\nfor clause: select(X, .(Y, Xs), .(Y, Ys)) :- select(X, Xs, Ys)because of non-unification"
            },
            {
                "from": 392,
                "to": 395,
                "label": "BACKTRACK\nfor clause: select(X, .(X, Xs), Xs)because of non-unification"
            },
            {
                "from": 410,
                "to": 416,
                "label": "CASE"
            },
            {
                "from": 411,
                "to": 460,
                "label": "CASE"
            },
            {
                "from": 416,
                "to": 430,
                "label": "ONLY EVAL with clause\nvl(0, X64) :- ','(!_5, eq(X64, [])).\nand substitutionX8 -> 0,\nT5 -> T11,\nX64 -> T11"
            },
            {
                "from": 430,
                "to": 432,
                "label": "CUT"
            },
            {
                "from": 432,
                "to": 434,
                "label": "CASE"
            },
            {
                "from": 434,
                "to": 443,
                "label": "EVAL with clause\neq(X67, X67).\nand substitutionT11 -> [],\nX67 -> [],\nT14 -> []"
            },
            {
                "from": 434,
                "to": 446,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 443,
                "to": 448,
                "label": "SUCCESS"
            },
            {
                "from": 460,
                "to": 549,
                "label": "PARALLEL"
            },
            {
                "from": 460,
                "to": 550,
                "label": "PARALLEL"
            },
            {
                "from": 549,
                "to": 551,
                "label": "ONLY EVAL with clause\nvlcnd(X89) :- ','(vl(X89, X90), ','(select(X91, X90, X92), ','(vl(X93, X92), vlcnd(X93)))).\nand substitutionT7 -> T23,\nX89 -> T23,\nT22 -> T23"
            },
            {
                "from": 550,
                "to": 640,
                "label": "EVAL with clause\nvlcnd(0).\nand substitutionT7 -> 0"
            },
            {
                "from": 550,
                "to": 641,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 551,
                "to": 552,
                "label": "SPLIT 1"
            },
            {
                "from": 551,
                "to": 553,
                "label": "SPLIT 2\nreplacements:X90 -> T24"
            },
            {
                "from": 552,
                "to": 554,
                "label": "CASE"
            },
            {
                "from": 553,
                "to": 615,
                "label": "SPLIT 1"
            },
            {
                "from": 553,
                "to": 616,
                "label": "SPLIT 2\nreplacements:X91 -> T36,\nX92 -> T37"
            },
            {
                "from": 554,
                "to": 555,
                "label": "EVAL with clause\nvl(0, X102) :- ','(!_8, eq(X102, [])).\nand substitutionT23 -> 0,\nX90 -> X103,\nX102 -> X103"
            },
            {
                "from": 554,
                "to": 556,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 555,
                "to": 557,
                "label": "CUT"
            },
            {
                "from": 556,
                "to": 574,
                "label": "ONLY EVAL with clause\nvl(X123, .(X124, X125)) :- ','(p(X123, X126), vl(X126, X125)).\nand substitutionT23 -> T29,\nX123 -> T29,\nX124 -> X127,\nX125 -> X128,\nX90 -> .(X127, X128),\nT28 -> T29"
            },
            {
                "from": 557,
                "to": 558,
                "label": "CASE"
            },
            {
                "from": 558,
                "to": 559,
                "label": "ONLY EVAL with clause\neq(X108, X108).\nand substitutionX103 -> [],\nX108 -> [],\nX109 -> []"
            },
            {
                "from": 559,
                "to": 560,
                "label": "SUCCESS"
            },
            {
                "from": 574,
                "to": 576,
                "label": "CASE"
            },
            {
                "from": 576,
                "to": 577,
                "label": "PARALLEL"
            },
            {
                "from": 576,
                "to": 579,
                "label": "PARALLEL"
            },
            {
                "from": 577,
                "to": 580,
                "label": "EVAL with clause\np(0, 0).\nand substitutionT29 -> 0,\nX126 -> 0"
            },
            {
                "from": 577,
                "to": 581,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 579,
                "to": 607,
                "label": "EVAL with clause\np(s(X135), X135).\nand substitutionX135 -> T33,\nT29 -> s(T33),\nX126 -> T33,\nT32 -> T33"
            },
            {
                "from": 579,
                "to": 608,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 580,
                "to": 552,
                "label": "INSTANCE with matching:\nT23 -> 0\nX90 -> X128"
            },
            {
                "from": 607,
                "to": 552,
                "label": "INSTANCE with matching:\nT23 -> T33\nX90 -> X128"
            },
            {
                "from": 615,
                "to": 619,
                "label": "CASE"
            },
            {
                "from": 616,
                "to": 631,
                "label": "SPLIT 1"
            },
            {
                "from": 616,
                "to": 632,
                "label": "SPLIT 2\nreplacements:X93 -> T60"
            },
            {
                "from": 619,
                "to": 624,
                "label": "PARALLEL"
            },
            {
                "from": 619,
                "to": 625,
                "label": "PARALLEL"
            },
            {
                "from": 624,
                "to": 626,
                "label": "EVAL with clause\nselect(X174, .(X175, X176), .(X175, X177)) :- select(X174, X176, X177).\nand substitutionX91 -> X178,\nX174 -> X178,\nX175 -> T48,\nX176 -> T50,\nT24 -> .(T48, T50),\nX177 -> X179,\nX92 -> .(T48, X179),\nT49 -> T50"
            },
            {
                "from": 624,
                "to": 627,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 625,
                "to": 628,
                "label": "EVAL with clause\nselect(X192, .(X192, X193), X193).\nand substitutionX91 -> T57,\nX192 -> T57,\nX194 -> T57,\nX193 -> T58,\nT24 -> .(T57, T58),\nX92 -> T58"
            },
            {
                "from": 625,
                "to": 629,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 626,
                "to": 615,
                "label": "INSTANCE with matching:\nX91 -> X178\nT24 -> T50\nX92 -> X179"
            },
            {
                "from": 628,
                "to": 630,
                "label": "SUCCESS"
            },
            {
                "from": 631,
                "to": 633,
                "label": "CASE"
            },
            {
                "from": 632,
                "to": 411,
                "label": "INSTANCE with matching:\nT7 -> T60"
            },
            {
                "from": 633,
                "to": 634,
                "label": "ONLY EVAL with clause\nvl(0, X199) :- ','(!_12, eq(X199, [])).\nand substitutionX93 -> 0,\nT37 -> T66,\nX199 -> T66,\nT65 -> T66"
            },
            {
                "from": 634,
                "to": 635,
                "label": "CUT"
            },
            {
                "from": 635,
                "to": 636,
                "label": "CASE"
            },
            {
                "from": 636,
                "to": 637,
                "label": "EVAL with clause\neq(X202, X202).\nand substitutionT66 -> [],\nX202 -> [],\nT69 -> []"
            },
            {
                "from": 636,
                "to": 638,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 637,
                "to": 639,
                "label": "SUCCESS"
            },
            {
                "from": 640,
                "to": 642,
                "label": "SUCCESS"
            },
            {
                "from": 643,
                "to": 644,
                "label": "SUCCESS"
            },
            {
                "from": 645,
                "to": 647,
                "label": "ONLY EVAL with clause\nvl(X234, .(X235, X236)) :- ','(p(X234, X237), vl(X237, X236)).\nand substitutionT3 -> T75,\nX234 -> T75,\nX235 -> X238,\nX236 -> X239,\nX5 -> .(X238, X239)"
            },
            {
                "from": 646,
                "to": 654,
                "label": "FAILURE"
            },
            {
                "from": 647,
                "to": 648,
                "label": "CASE"
            },
            {
                "from": 648,
                "to": 649,
                "label": "BACKTRACK\nfor clause: p(0, 0)\nwith clash: (vl(T75, X5), vl(0, X13))"
            },
            {
                "from": 649,
                "to": 650,
                "label": "EVAL with clause\np(s(X244), X244).\nand substitutionX244 -> T78,\nT75 -> s(T78),\nX237 -> T78"
            },
            {
                "from": 649,
                "to": 651,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 650,
                "to": 652,
                "label": "SPLIT 1"
            },
            {
                "from": 650,
                "to": 653,
                "label": "SPLIT 2\nnew knowledge:\nT78 is ground\nreplacements:X239 -> T79"
            },
            {
                "from": 652,
                "to": 552,
                "label": "INSTANCE with matching:\nT23 -> T78\nX90 -> X239"
            },
            {
                "from": 653,
                "to": 553,
                "label": "INSTANCE with matching:\nX91 -> X6\nT24 -> .(X238, T79)\nX92 -> X7\nX93 -> X8"
            },
            {
                "from": 654,
                "to": 655,
                "label": "BACKTRACK\nfor clause: vlcnd(0)\nwith clash: (vl(T3, X5), vl(0, X13))"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(200)
Obligation:
Triples:

vlA(0, .(X1, X2)) :- vlA(0, X2).
vlA(s(X1), .(X2, X3)) :- vlA(X1, X3).
selectB(X1, .(X2, X3), .(X2, X4)) :- selectB(X1, X3, X4).
vlcndC(X1) :- vlA(X1, X2).
vlcndC(X1) :- ','(vlcA(X1, X2), pD(X3, X2, X4, X5)).
pD(X1, X2, X3, X4) :- selectB(X1, X2, X3).
pD(X1, X2, X3, X4) :- ','(selectcB(X1, X2, X3), ','(vlcE(X4, X3), vlcndC(X4))).
vlcndG(0) :- ','(selectcH(X1, X2), ','(vlcF(X3, X2), vlcndC(X3))).
vlcndG(s(X1)) :- vlA(X1, X2).
vlcndG(s(X1)) :- ','(vlcA(X1, X2), pD(X3, .(X4, X2), X5, X6)).

Clauses:

vlcA(0, []).
vlcA(0, .(X1, X2)) :- vlcA(0, X2).
vlcA(s(X1), .(X2, X3)) :- vlcA(X1, X3).
selectcB(X1, .(X2, X3), .(X2, X4)) :- selectcB(X1, X3, X4).
selectcB(X1, .(X1, X2), X2).
vlcndcC(X1) :- ','(vlcA(X1, X2), qcD(X3, X2, X4, X5)).
vlcndcC(0).
qcD(X1, X2, X3, X4) :- ','(selectcB(X1, X2, X3), ','(vlcE(X4, X3), vlcndcC(X4))).
vlcF(0, []).
vlcE(0, []).

Afs:

vlcndG(x1)  =  vlcndG(x1)


----------------------------------------

(201) UndefinedPredicateInTriplesTransformerProof (SOUND)
Deleted triples and predicates having undefined goals [DT09].
----------------------------------------

(202)
Obligation:
Triples:

vlA(0, .(X1, X2)) :- vlA(0, X2).
vlA(s(X1), .(X2, X3)) :- vlA(X1, X3).
selectB(X1, .(X2, X3), .(X2, X4)) :- selectB(X1, X3, X4).
vlcndC(X1) :- vlA(X1, X2).
vlcndC(X1) :- ','(vlcA(X1, X2), pD(X3, X2, X4, X5)).
pD(X1, X2, X3, X4) :- selectB(X1, X2, X3).
pD(X1, X2, X3, X4) :- ','(selectcB(X1, X2, X3), ','(vlcE(X4, X3), vlcndC(X4))).
vlcndG(s(X1)) :- vlA(X1, X2).
vlcndG(s(X1)) :- ','(vlcA(X1, X2), pD(X3, .(X4, X2), X5, X6)).

Clauses:

vlcA(0, []).
vlcA(0, .(X1, X2)) :- vlcA(0, X2).
vlcA(s(X1), .(X2, X3)) :- vlcA(X1, X3).
selectcB(X1, .(X2, X3), .(X2, X4)) :- selectcB(X1, X3, X4).
selectcB(X1, .(X1, X2), X2).
vlcndcC(X1) :- ','(vlcA(X1, X2), qcD(X3, X2, X4, X5)).
vlcndcC(0).
qcD(X1, X2, X3, X4) :- ','(selectcB(X1, X2, X3), ','(vlcE(X4, X3), vlcndcC(X4))).
vlcF(0, []).
vlcE(0, []).

Afs:

vlcndG(x1)  =  vlcndG(x1)


----------------------------------------

(203) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

vlcndG_in_1: (b)

vlA_in_2: (b,f)

vlcA_in_2: (b,f)

pD_in_4: (f,b,f,f)

selectB_in_3: (f,b,f)

selectcB_in_3: (f,b,f)

vlcndC_in_1: (b)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   VLCNDG_IN_G(s(X1)) -> U11_G(X1, vlA_in_ga(X1, X2))
   VLCNDG_IN_G(s(X1)) -> VLA_IN_GA(X1, X2)
   VLA_IN_GA(0, .(X1, X2)) -> U1_GA(X1, X2, vlA_in_ga(0, X2))
   VLA_IN_GA(0, .(X1, X2)) -> VLA_IN_GA(0, X2)
   VLA_IN_GA(s(X1), .(X2, X3)) -> U2_GA(X1, X2, X3, vlA_in_ga(X1, X3))
   VLA_IN_GA(s(X1), .(X2, X3)) -> VLA_IN_GA(X1, X3)
   VLCNDG_IN_G(s(X1)) -> U12_G(X1, vlcA_in_ga(X1, X2))
   U12_G(X1, vlcA_out_ga(X1, X2)) -> U13_G(X1, pD_in_agaa(X3, .(X4, X2), X5, X6))
   U12_G(X1, vlcA_out_ga(X1, X2)) -> PD_IN_AGAA(X3, .(X4, X2), X5, X6)
   PD_IN_AGAA(X1, X2, X3, X4) -> U7_AGAA(X1, X2, X3, X4, selectB_in_aga(X1, X2, X3))
   PD_IN_AGAA(X1, X2, X3, X4) -> SELECTB_IN_AGA(X1, X2, X3)
   SELECTB_IN_AGA(X1, .(X2, X3), .(X2, X4)) -> U3_AGA(X1, X2, X3, X4, selectB_in_aga(X1, X3, X4))
   SELECTB_IN_AGA(X1, .(X2, X3), .(X2, X4)) -> SELECTB_IN_AGA(X1, X3, X4)
   PD_IN_AGAA(X1, X2, X3, X4) -> U8_AGAA(X1, X2, X3, X4, selectcB_in_aga(X1, X2, X3))
   U8_AGAA(X1, X2, X3, X4, selectcB_out_aga(X1, X2, X3)) -> U9_AGAA(X1, X2, X3, X4, vlcE_in_ag(X4, X3))
   U9_AGAA(X1, X2, X3, X4, vlcE_out_ag(X4, X3)) -> U10_AGAA(X1, X2, X3, X4, vlcndC_in_g(X4))
   U9_AGAA(X1, X2, X3, X4, vlcE_out_ag(X4, X3)) -> VLCNDC_IN_G(X4)
   VLCNDC_IN_G(X1) -> U4_G(X1, vlA_in_ga(X1, X2))
   VLCNDC_IN_G(X1) -> VLA_IN_GA(X1, X2)
   VLCNDC_IN_G(X1) -> U5_G(X1, vlcA_in_ga(X1, X2))
   U5_G(X1, vlcA_out_ga(X1, X2)) -> U6_G(X1, pD_in_agaa(X3, X2, X4, X5))
   U5_G(X1, vlcA_out_ga(X1, X2)) -> PD_IN_AGAA(X3, X2, X4, X5)

The TRS R consists of the following rules:

   vlcA_in_ga(0, []) -> vlcA_out_ga(0, [])
   vlcA_in_ga(0, .(X1, X2)) -> U15_ga(X1, X2, vlcA_in_ga(0, X2))
   vlcA_in_ga(s(X1), .(X2, X3)) -> U16_ga(X1, X2, X3, vlcA_in_ga(X1, X3))
   U16_ga(X1, X2, X3, vlcA_out_ga(X1, X3)) -> vlcA_out_ga(s(X1), .(X2, X3))
   U15_ga(X1, X2, vlcA_out_ga(0, X2)) -> vlcA_out_ga(0, .(X1, X2))
   selectcB_in_aga(X1, .(X2, X3), .(X2, X4)) -> U17_aga(X1, X2, X3, X4, selectcB_in_aga(X1, X3, X4))
   selectcB_in_aga(X1, .(X1, X2), X2) -> selectcB_out_aga(X1, .(X1, X2), X2)
   U17_aga(X1, X2, X3, X4, selectcB_out_aga(X1, X3, X4)) -> selectcB_out_aga(X1, .(X2, X3), .(X2, X4))
   vlcE_in_ag(0, []) -> vlcE_out_ag(0, [])

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

vlA_in_ga(x1, x2)  =  vlA_in_ga(x1)

0  =  0

.(x1, x2)  =  .(x2)

vlcA_in_ga(x1, x2)  =  vlcA_in_ga(x1)

vlcA_out_ga(x1, x2)  =  vlcA_out_ga(x1, x2)

U15_ga(x1, x2, x3)  =  U15_ga(x3)

U16_ga(x1, x2, x3, x4)  =  U16_ga(x1, x4)

pD_in_agaa(x1, x2, x3, x4)  =  pD_in_agaa(x2)

selectB_in_aga(x1, x2, x3)  =  selectB_in_aga(x2)

selectcB_in_aga(x1, x2, x3)  =  selectcB_in_aga(x2)

U17_aga(x1, x2, x3, x4, x5)  =  U17_aga(x3, x5)

selectcB_out_aga(x1, x2, x3)  =  selectcB_out_aga(x2, x3)

vlcE_in_ag(x1, x2)  =  vlcE_in_ag(x2)

[]  =  []

vlcE_out_ag(x1, x2)  =  vlcE_out_ag(x1, x2)

vlcndC_in_g(x1)  =  vlcndC_in_g(x1)

VLCNDG_IN_G(x1)  =  VLCNDG_IN_G(x1)

U11_G(x1, x2)  =  U11_G(x1, x2)

VLA_IN_GA(x1, x2)  =  VLA_IN_GA(x1)

U1_GA(x1, x2, x3)  =  U1_GA(x3)

U2_GA(x1, x2, x3, x4)  =  U2_GA(x1, x4)

U12_G(x1, x2)  =  U12_G(x1, x2)

U13_G(x1, x2)  =  U13_G(x1, x2)

PD_IN_AGAA(x1, x2, x3, x4)  =  PD_IN_AGAA(x2)

U7_AGAA(x1, x2, x3, x4, x5)  =  U7_AGAA(x2, x5)

SELECTB_IN_AGA(x1, x2, x3)  =  SELECTB_IN_AGA(x2)

U3_AGA(x1, x2, x3, x4, x5)  =  U3_AGA(x3, x5)

U8_AGAA(x1, x2, x3, x4, x5)  =  U8_AGAA(x2, x5)

U9_AGAA(x1, x2, x3, x4, x5)  =  U9_AGAA(x2, x3, x5)

U10_AGAA(x1, x2, x3, x4, x5)  =  U10_AGAA(x2, x3, x5)

VLCNDC_IN_G(x1)  =  VLCNDC_IN_G(x1)

U4_G(x1, x2)  =  U4_G(x1, x2)

U5_G(x1, x2)  =  U5_G(x1, x2)

U6_G(x1, x2)  =  U6_G(x1, x2)


We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(204)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   VLCNDG_IN_G(s(X1)) -> U11_G(X1, vlA_in_ga(X1, X2))
   VLCNDG_IN_G(s(X1)) -> VLA_IN_GA(X1, X2)
   VLA_IN_GA(0, .(X1, X2)) -> U1_GA(X1, X2, vlA_in_ga(0, X2))
   VLA_IN_GA(0, .(X1, X2)) -> VLA_IN_GA(0, X2)
   VLA_IN_GA(s(X1), .(X2, X3)) -> U2_GA(X1, X2, X3, vlA_in_ga(X1, X3))
   VLA_IN_GA(s(X1), .(X2, X3)) -> VLA_IN_GA(X1, X3)
   VLCNDG_IN_G(s(X1)) -> U12_G(X1, vlcA_in_ga(X1, X2))
   U12_G(X1, vlcA_out_ga(X1, X2)) -> U13_G(X1, pD_in_agaa(X3, .(X4, X2), X5, X6))
   U12_G(X1, vlcA_out_ga(X1, X2)) -> PD_IN_AGAA(X3, .(X4, X2), X5, X6)
   PD_IN_AGAA(X1, X2, X3, X4) -> U7_AGAA(X1, X2, X3, X4, selectB_in_aga(X1, X2, X3))
   PD_IN_AGAA(X1, X2, X3, X4) -> SELECTB_IN_AGA(X1, X2, X3)
   SELECTB_IN_AGA(X1, .(X2, X3), .(X2, X4)) -> U3_AGA(X1, X2, X3, X4, selectB_in_aga(X1, X3, X4))
   SELECTB_IN_AGA(X1, .(X2, X3), .(X2, X4)) -> SELECTB_IN_AGA(X1, X3, X4)
   PD_IN_AGAA(X1, X2, X3, X4) -> U8_AGAA(X1, X2, X3, X4, selectcB_in_aga(X1, X2, X3))
   U8_AGAA(X1, X2, X3, X4, selectcB_out_aga(X1, X2, X3)) -> U9_AGAA(X1, X2, X3, X4, vlcE_in_ag(X4, X3))
   U9_AGAA(X1, X2, X3, X4, vlcE_out_ag(X4, X3)) -> U10_AGAA(X1, X2, X3, X4, vlcndC_in_g(X4))
   U9_AGAA(X1, X2, X3, X4, vlcE_out_ag(X4, X3)) -> VLCNDC_IN_G(X4)
   VLCNDC_IN_G(X1) -> U4_G(X1, vlA_in_ga(X1, X2))
   VLCNDC_IN_G(X1) -> VLA_IN_GA(X1, X2)
   VLCNDC_IN_G(X1) -> U5_G(X1, vlcA_in_ga(X1, X2))
   U5_G(X1, vlcA_out_ga(X1, X2)) -> U6_G(X1, pD_in_agaa(X3, X2, X4, X5))
   U5_G(X1, vlcA_out_ga(X1, X2)) -> PD_IN_AGAA(X3, X2, X4, X5)

The TRS R consists of the following rules:

   vlcA_in_ga(0, []) -> vlcA_out_ga(0, [])
   vlcA_in_ga(0, .(X1, X2)) -> U15_ga(X1, X2, vlcA_in_ga(0, X2))
   vlcA_in_ga(s(X1), .(X2, X3)) -> U16_ga(X1, X2, X3, vlcA_in_ga(X1, X3))
   U16_ga(X1, X2, X3, vlcA_out_ga(X1, X3)) -> vlcA_out_ga(s(X1), .(X2, X3))
   U15_ga(X1, X2, vlcA_out_ga(0, X2)) -> vlcA_out_ga(0, .(X1, X2))
   selectcB_in_aga(X1, .(X2, X3), .(X2, X4)) -> U17_aga(X1, X2, X3, X4, selectcB_in_aga(X1, X3, X4))
   selectcB_in_aga(X1, .(X1, X2), X2) -> selectcB_out_aga(X1, .(X1, X2), X2)
   U17_aga(X1, X2, X3, X4, selectcB_out_aga(X1, X3, X4)) -> selectcB_out_aga(X1, .(X2, X3), .(X2, X4))
   vlcE_in_ag(0, []) -> vlcE_out_ag(0, [])

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

vlA_in_ga(x1, x2)  =  vlA_in_ga(x1)

0  =  0

.(x1, x2)  =  .(x2)

vlcA_in_ga(x1, x2)  =  vlcA_in_ga(x1)

vlcA_out_ga(x1, x2)  =  vlcA_out_ga(x1, x2)

U15_ga(x1, x2, x3)  =  U15_ga(x3)

U16_ga(x1, x2, x3, x4)  =  U16_ga(x1, x4)

pD_in_agaa(x1, x2, x3, x4)  =  pD_in_agaa(x2)

selectB_in_aga(x1, x2, x3)  =  selectB_in_aga(x2)

selectcB_in_aga(x1, x2, x3)  =  selectcB_in_aga(x2)

U17_aga(x1, x2, x3, x4, x5)  =  U17_aga(x3, x5)

selectcB_out_aga(x1, x2, x3)  =  selectcB_out_aga(x2, x3)

vlcE_in_ag(x1, x2)  =  vlcE_in_ag(x2)

[]  =  []

vlcE_out_ag(x1, x2)  =  vlcE_out_ag(x1, x2)

vlcndC_in_g(x1)  =  vlcndC_in_g(x1)

VLCNDG_IN_G(x1)  =  VLCNDG_IN_G(x1)

U11_G(x1, x2)  =  U11_G(x1, x2)

VLA_IN_GA(x1, x2)  =  VLA_IN_GA(x1)

U1_GA(x1, x2, x3)  =  U1_GA(x3)

U2_GA(x1, x2, x3, x4)  =  U2_GA(x1, x4)

U12_G(x1, x2)  =  U12_G(x1, x2)

U13_G(x1, x2)  =  U13_G(x1, x2)

PD_IN_AGAA(x1, x2, x3, x4)  =  PD_IN_AGAA(x2)

U7_AGAA(x1, x2, x3, x4, x5)  =  U7_AGAA(x2, x5)

SELECTB_IN_AGA(x1, x2, x3)  =  SELECTB_IN_AGA(x2)

U3_AGA(x1, x2, x3, x4, x5)  =  U3_AGA(x3, x5)

U8_AGAA(x1, x2, x3, x4, x5)  =  U8_AGAA(x2, x5)

U9_AGAA(x1, x2, x3, x4, x5)  =  U9_AGAA(x2, x3, x5)

U10_AGAA(x1, x2, x3, x4, x5)  =  U10_AGAA(x2, x3, x5)

VLCNDC_IN_G(x1)  =  VLCNDC_IN_G(x1)

U4_G(x1, x2)  =  U4_G(x1, x2)

U5_G(x1, x2)  =  U5_G(x1, x2)

U6_G(x1, x2)  =  U6_G(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(205) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 4 SCCs with 14 less nodes.
----------------------------------------

(206)
Complex Obligation (AND)

----------------------------------------

(207)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SELECTB_IN_AGA(X1, .(X2, X3), .(X2, X4)) -> SELECTB_IN_AGA(X1, X3, X4)

The TRS R consists of the following rules:

   vlcA_in_ga(0, []) -> vlcA_out_ga(0, [])
   vlcA_in_ga(0, .(X1, X2)) -> U15_ga(X1, X2, vlcA_in_ga(0, X2))
   vlcA_in_ga(s(X1), .(X2, X3)) -> U16_ga(X1, X2, X3, vlcA_in_ga(X1, X3))
   U16_ga(X1, X2, X3, vlcA_out_ga(X1, X3)) -> vlcA_out_ga(s(X1), .(X2, X3))
   U15_ga(X1, X2, vlcA_out_ga(0, X2)) -> vlcA_out_ga(0, .(X1, X2))
   selectcB_in_aga(X1, .(X2, X3), .(X2, X4)) -> U17_aga(X1, X2, X3, X4, selectcB_in_aga(X1, X3, X4))
   selectcB_in_aga(X1, .(X1, X2), X2) -> selectcB_out_aga(X1, .(X1, X2), X2)
   U17_aga(X1, X2, X3, X4, selectcB_out_aga(X1, X3, X4)) -> selectcB_out_aga(X1, .(X2, X3), .(X2, X4))
   vlcE_in_ag(0, []) -> vlcE_out_ag(0, [])

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

0  =  0

.(x1, x2)  =  .(x2)

vlcA_in_ga(x1, x2)  =  vlcA_in_ga(x1)

vlcA_out_ga(x1, x2)  =  vlcA_out_ga(x1, x2)

U15_ga(x1, x2, x3)  =  U15_ga(x3)

U16_ga(x1, x2, x3, x4)  =  U16_ga(x1, x4)

selectcB_in_aga(x1, x2, x3)  =  selectcB_in_aga(x2)

U17_aga(x1, x2, x3, x4, x5)  =  U17_aga(x3, x5)

selectcB_out_aga(x1, x2, x3)  =  selectcB_out_aga(x2, x3)

vlcE_in_ag(x1, x2)  =  vlcE_in_ag(x2)

[]  =  []

vlcE_out_ag(x1, x2)  =  vlcE_out_ag(x1, x2)

SELECTB_IN_AGA(x1, x2, x3)  =  SELECTB_IN_AGA(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(208) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(209)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   SELECTB_IN_AGA(X1, .(X2, X3), .(X2, X4)) -> SELECTB_IN_AGA(X1, X3, X4)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x2)

SELECTB_IN_AGA(x1, x2, x3)  =  SELECTB_IN_AGA(x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(210) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(211)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   SELECTB_IN_AGA(.(X3)) -> SELECTB_IN_AGA(X3)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(212) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*SELECTB_IN_AGA(.(X3)) -> SELECTB_IN_AGA(X3)
The graph contains the following edges 1 > 1


----------------------------------------

(213)
YES

----------------------------------------

(214)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   VLA_IN_GA(0, .(X1, X2)) -> VLA_IN_GA(0, X2)

The TRS R consists of the following rules:

   vlcA_in_ga(0, []) -> vlcA_out_ga(0, [])
   vlcA_in_ga(0, .(X1, X2)) -> U15_ga(X1, X2, vlcA_in_ga(0, X2))
   vlcA_in_ga(s(X1), .(X2, X3)) -> U16_ga(X1, X2, X3, vlcA_in_ga(X1, X3))
   U16_ga(X1, X2, X3, vlcA_out_ga(X1, X3)) -> vlcA_out_ga(s(X1), .(X2, X3))
   U15_ga(X1, X2, vlcA_out_ga(0, X2)) -> vlcA_out_ga(0, .(X1, X2))
   selectcB_in_aga(X1, .(X2, X3), .(X2, X4)) -> U17_aga(X1, X2, X3, X4, selectcB_in_aga(X1, X3, X4))
   selectcB_in_aga(X1, .(X1, X2), X2) -> selectcB_out_aga(X1, .(X1, X2), X2)
   U17_aga(X1, X2, X3, X4, selectcB_out_aga(X1, X3, X4)) -> selectcB_out_aga(X1, .(X2, X3), .(X2, X4))
   vlcE_in_ag(0, []) -> vlcE_out_ag(0, [])

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

0  =  0

.(x1, x2)  =  .(x2)

vlcA_in_ga(x1, x2)  =  vlcA_in_ga(x1)

vlcA_out_ga(x1, x2)  =  vlcA_out_ga(x1, x2)

U15_ga(x1, x2, x3)  =  U15_ga(x3)

U16_ga(x1, x2, x3, x4)  =  U16_ga(x1, x4)

selectcB_in_aga(x1, x2, x3)  =  selectcB_in_aga(x2)

U17_aga(x1, x2, x3, x4, x5)  =  U17_aga(x3, x5)

selectcB_out_aga(x1, x2, x3)  =  selectcB_out_aga(x2, x3)

vlcE_in_ag(x1, x2)  =  vlcE_in_ag(x2)

[]  =  []

vlcE_out_ag(x1, x2)  =  vlcE_out_ag(x1, x2)

VLA_IN_GA(x1, x2)  =  VLA_IN_GA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(215) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(216)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   VLA_IN_GA(0, .(X1, X2)) -> VLA_IN_GA(0, X2)

R is empty.
The argument filtering Pi contains the following mapping:
0  =  0

.(x1, x2)  =  .(x2)

VLA_IN_GA(x1, x2)  =  VLA_IN_GA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(217) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(218)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   VLA_IN_GA(0) -> VLA_IN_GA(0)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(219) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = VLA_IN_GA(0) evaluates to  t =VLA_IN_GA(0)

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from VLA_IN_GA(0) to VLA_IN_GA(0).




----------------------------------------

(220)
NO

----------------------------------------

(221)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   VLA_IN_GA(s(X1), .(X2, X3)) -> VLA_IN_GA(X1, X3)

The TRS R consists of the following rules:

   vlcA_in_ga(0, []) -> vlcA_out_ga(0, [])
   vlcA_in_ga(0, .(X1, X2)) -> U15_ga(X1, X2, vlcA_in_ga(0, X2))
   vlcA_in_ga(s(X1), .(X2, X3)) -> U16_ga(X1, X2, X3, vlcA_in_ga(X1, X3))
   U16_ga(X1, X2, X3, vlcA_out_ga(X1, X3)) -> vlcA_out_ga(s(X1), .(X2, X3))
   U15_ga(X1, X2, vlcA_out_ga(0, X2)) -> vlcA_out_ga(0, .(X1, X2))
   selectcB_in_aga(X1, .(X2, X3), .(X2, X4)) -> U17_aga(X1, X2, X3, X4, selectcB_in_aga(X1, X3, X4))
   selectcB_in_aga(X1, .(X1, X2), X2) -> selectcB_out_aga(X1, .(X1, X2), X2)
   U17_aga(X1, X2, X3, X4, selectcB_out_aga(X1, X3, X4)) -> selectcB_out_aga(X1, .(X2, X3), .(X2, X4))
   vlcE_in_ag(0, []) -> vlcE_out_ag(0, [])

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

0  =  0

.(x1, x2)  =  .(x2)

vlcA_in_ga(x1, x2)  =  vlcA_in_ga(x1)

vlcA_out_ga(x1, x2)  =  vlcA_out_ga(x1, x2)

U15_ga(x1, x2, x3)  =  U15_ga(x3)

U16_ga(x1, x2, x3, x4)  =  U16_ga(x1, x4)

selectcB_in_aga(x1, x2, x3)  =  selectcB_in_aga(x2)

U17_aga(x1, x2, x3, x4, x5)  =  U17_aga(x3, x5)

selectcB_out_aga(x1, x2, x3)  =  selectcB_out_aga(x2, x3)

vlcE_in_ag(x1, x2)  =  vlcE_in_ag(x2)

[]  =  []

vlcE_out_ag(x1, x2)  =  vlcE_out_ag(x1, x2)

VLA_IN_GA(x1, x2)  =  VLA_IN_GA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(222) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(223)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   VLA_IN_GA(s(X1), .(X2, X3)) -> VLA_IN_GA(X1, X3)

R is empty.
The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

.(x1, x2)  =  .(x2)

VLA_IN_GA(x1, x2)  =  VLA_IN_GA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(224) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(225)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   VLA_IN_GA(s(X1)) -> VLA_IN_GA(X1)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(226) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*VLA_IN_GA(s(X1)) -> VLA_IN_GA(X1)
The graph contains the following edges 1 > 1


----------------------------------------

(227)
YES

----------------------------------------

(228)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   VLCNDC_IN_G(X1) -> U5_G(X1, vlcA_in_ga(X1, X2))
   U5_G(X1, vlcA_out_ga(X1, X2)) -> PD_IN_AGAA(X3, X2, X4, X5)
   PD_IN_AGAA(X1, X2, X3, X4) -> U8_AGAA(X1, X2, X3, X4, selectcB_in_aga(X1, X2, X3))
   U8_AGAA(X1, X2, X3, X4, selectcB_out_aga(X1, X2, X3)) -> U9_AGAA(X1, X2, X3, X4, vlcE_in_ag(X4, X3))
   U9_AGAA(X1, X2, X3, X4, vlcE_out_ag(X4, X3)) -> VLCNDC_IN_G(X4)

The TRS R consists of the following rules:

   vlcA_in_ga(0, []) -> vlcA_out_ga(0, [])
   vlcA_in_ga(0, .(X1, X2)) -> U15_ga(X1, X2, vlcA_in_ga(0, X2))
   vlcA_in_ga(s(X1), .(X2, X3)) -> U16_ga(X1, X2, X3, vlcA_in_ga(X1, X3))
   U16_ga(X1, X2, X3, vlcA_out_ga(X1, X3)) -> vlcA_out_ga(s(X1), .(X2, X3))
   U15_ga(X1, X2, vlcA_out_ga(0, X2)) -> vlcA_out_ga(0, .(X1, X2))
   selectcB_in_aga(X1, .(X2, X3), .(X2, X4)) -> U17_aga(X1, X2, X3, X4, selectcB_in_aga(X1, X3, X4))
   selectcB_in_aga(X1, .(X1, X2), X2) -> selectcB_out_aga(X1, .(X1, X2), X2)
   U17_aga(X1, X2, X3, X4, selectcB_out_aga(X1, X3, X4)) -> selectcB_out_aga(X1, .(X2, X3), .(X2, X4))
   vlcE_in_ag(0, []) -> vlcE_out_ag(0, [])

The argument filtering Pi contains the following mapping:
s(x1)  =  s(x1)

0  =  0

.(x1, x2)  =  .(x2)

vlcA_in_ga(x1, x2)  =  vlcA_in_ga(x1)

vlcA_out_ga(x1, x2)  =  vlcA_out_ga(x1, x2)

U15_ga(x1, x2, x3)  =  U15_ga(x3)

U16_ga(x1, x2, x3, x4)  =  U16_ga(x1, x4)

selectcB_in_aga(x1, x2, x3)  =  selectcB_in_aga(x2)

U17_aga(x1, x2, x3, x4, x5)  =  U17_aga(x3, x5)

selectcB_out_aga(x1, x2, x3)  =  selectcB_out_aga(x2, x3)

vlcE_in_ag(x1, x2)  =  vlcE_in_ag(x2)

[]  =  []

vlcE_out_ag(x1, x2)  =  vlcE_out_ag(x1, x2)

PD_IN_AGAA(x1, x2, x3, x4)  =  PD_IN_AGAA(x2)

U8_AGAA(x1, x2, x3, x4, x5)  =  U8_AGAA(x2, x5)

U9_AGAA(x1, x2, x3, x4, x5)  =  U9_AGAA(x2, x3, x5)

VLCNDC_IN_G(x1)  =  VLCNDC_IN_G(x1)

U5_G(x1, x2)  =  U5_G(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(229) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(230)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   VLCNDC_IN_G(X1) -> U5_G(X1, vlcA_in_ga(X1))
   U5_G(X1, vlcA_out_ga(X1, X2)) -> PD_IN_AGAA(X2)
   PD_IN_AGAA(X2) -> U8_AGAA(X2, selectcB_in_aga(X2))
   U8_AGAA(X2, selectcB_out_aga(X2, X3)) -> U9_AGAA(X2, X3, vlcE_in_ag(X3))
   U9_AGAA(X2, X3, vlcE_out_ag(X4, X3)) -> VLCNDC_IN_G(X4)

The TRS R consists of the following rules:

   vlcA_in_ga(0) -> vlcA_out_ga(0, [])
   vlcA_in_ga(0) -> U15_ga(vlcA_in_ga(0))
   vlcA_in_ga(s(X1)) -> U16_ga(X1, vlcA_in_ga(X1))
   U16_ga(X1, vlcA_out_ga(X1, X3)) -> vlcA_out_ga(s(X1), .(X3))
   U15_ga(vlcA_out_ga(0, X2)) -> vlcA_out_ga(0, .(X2))
   selectcB_in_aga(.(X3)) -> U17_aga(X3, selectcB_in_aga(X3))
   selectcB_in_aga(.(X2)) -> selectcB_out_aga(.(X2), X2)
   U17_aga(X3, selectcB_out_aga(X3, X4)) -> selectcB_out_aga(.(X3), .(X4))
   vlcE_in_ag([]) -> vlcE_out_ag(0, [])

The set Q consists of the following terms:

   vlcA_in_ga(x0)
   U16_ga(x0, x1)
   U15_ga(x0)
   selectcB_in_aga(x0)
   U17_aga(x0, x1)
   vlcE_in_ag(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(231) TransformationProof (SOUND)
By narrowing [LPAR04] the rule U8_AGAA(X2, selectcB_out_aga(X2, X3)) -> U9_AGAA(X2, X3, vlcE_in_ag(X3)) at position [2] we obtained the following new rules [LPAR04]:

   (U8_AGAA(y0, selectcB_out_aga(y0, [])) -> U9_AGAA(y0, [], vlcE_out_ag(0, [])),U8_AGAA(y0, selectcB_out_aga(y0, [])) -> U9_AGAA(y0, [], vlcE_out_ag(0, [])))


----------------------------------------

(232)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   VLCNDC_IN_G(X1) -> U5_G(X1, vlcA_in_ga(X1))
   U5_G(X1, vlcA_out_ga(X1, X2)) -> PD_IN_AGAA(X2)
   PD_IN_AGAA(X2) -> U8_AGAA(X2, selectcB_in_aga(X2))
   U9_AGAA(X2, X3, vlcE_out_ag(X4, X3)) -> VLCNDC_IN_G(X4)
   U8_AGAA(y0, selectcB_out_aga(y0, [])) -> U9_AGAA(y0, [], vlcE_out_ag(0, []))

The TRS R consists of the following rules:

   vlcA_in_ga(0) -> vlcA_out_ga(0, [])
   vlcA_in_ga(0) -> U15_ga(vlcA_in_ga(0))
   vlcA_in_ga(s(X1)) -> U16_ga(X1, vlcA_in_ga(X1))
   U16_ga(X1, vlcA_out_ga(X1, X3)) -> vlcA_out_ga(s(X1), .(X3))
   U15_ga(vlcA_out_ga(0, X2)) -> vlcA_out_ga(0, .(X2))
   selectcB_in_aga(.(X3)) -> U17_aga(X3, selectcB_in_aga(X3))
   selectcB_in_aga(.(X2)) -> selectcB_out_aga(.(X2), X2)
   U17_aga(X3, selectcB_out_aga(X3, X4)) -> selectcB_out_aga(.(X3), .(X4))
   vlcE_in_ag([]) -> vlcE_out_ag(0, [])

The set Q consists of the following terms:

   vlcA_in_ga(x0)
   U16_ga(x0, x1)
   U15_ga(x0)
   selectcB_in_aga(x0)
   U17_aga(x0, x1)
   vlcE_in_ag(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(233) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(234)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   VLCNDC_IN_G(X1) -> U5_G(X1, vlcA_in_ga(X1))
   U5_G(X1, vlcA_out_ga(X1, X2)) -> PD_IN_AGAA(X2)
   PD_IN_AGAA(X2) -> U8_AGAA(X2, selectcB_in_aga(X2))
   U9_AGAA(X2, X3, vlcE_out_ag(X4, X3)) -> VLCNDC_IN_G(X4)
   U8_AGAA(y0, selectcB_out_aga(y0, [])) -> U9_AGAA(y0, [], vlcE_out_ag(0, []))

The TRS R consists of the following rules:

   selectcB_in_aga(.(X3)) -> U17_aga(X3, selectcB_in_aga(X3))
   selectcB_in_aga(.(X2)) -> selectcB_out_aga(.(X2), X2)
   U17_aga(X3, selectcB_out_aga(X3, X4)) -> selectcB_out_aga(.(X3), .(X4))
   vlcA_in_ga(0) -> vlcA_out_ga(0, [])
   vlcA_in_ga(0) -> U15_ga(vlcA_in_ga(0))
   vlcA_in_ga(s(X1)) -> U16_ga(X1, vlcA_in_ga(X1))
   U16_ga(X1, vlcA_out_ga(X1, X3)) -> vlcA_out_ga(s(X1), .(X3))
   U15_ga(vlcA_out_ga(0, X2)) -> vlcA_out_ga(0, .(X2))

The set Q consists of the following terms:

   vlcA_in_ga(x0)
   U16_ga(x0, x1)
   U15_ga(x0)
   selectcB_in_aga(x0)
   U17_aga(x0, x1)
   vlcE_in_ag(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(235) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   vlcE_in_ag(x0)


----------------------------------------

(236)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   VLCNDC_IN_G(X1) -> U5_G(X1, vlcA_in_ga(X1))
   U5_G(X1, vlcA_out_ga(X1, X2)) -> PD_IN_AGAA(X2)
   PD_IN_AGAA(X2) -> U8_AGAA(X2, selectcB_in_aga(X2))
   U9_AGAA(X2, X3, vlcE_out_ag(X4, X3)) -> VLCNDC_IN_G(X4)
   U8_AGAA(y0, selectcB_out_aga(y0, [])) -> U9_AGAA(y0, [], vlcE_out_ag(0, []))

The TRS R consists of the following rules:

   selectcB_in_aga(.(X3)) -> U17_aga(X3, selectcB_in_aga(X3))
   selectcB_in_aga(.(X2)) -> selectcB_out_aga(.(X2), X2)
   U17_aga(X3, selectcB_out_aga(X3, X4)) -> selectcB_out_aga(.(X3), .(X4))
   vlcA_in_ga(0) -> vlcA_out_ga(0, [])
   vlcA_in_ga(0) -> U15_ga(vlcA_in_ga(0))
   vlcA_in_ga(s(X1)) -> U16_ga(X1, vlcA_in_ga(X1))
   U16_ga(X1, vlcA_out_ga(X1, X3)) -> vlcA_out_ga(s(X1), .(X3))
   U15_ga(vlcA_out_ga(0, X2)) -> vlcA_out_ga(0, .(X2))

The set Q consists of the following terms:

   vlcA_in_ga(x0)
   U16_ga(x0, x1)
   U15_ga(x0)
   selectcB_in_aga(x0)
   U17_aga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(237) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U9_AGAA(X2, X3, vlcE_out_ag(X4, X3)) -> VLCNDC_IN_G(X4) we obtained the following new rules [LPAR04]:

   (U9_AGAA(z0, [], vlcE_out_ag(0, [])) -> VLCNDC_IN_G(0),U9_AGAA(z0, [], vlcE_out_ag(0, [])) -> VLCNDC_IN_G(0))


----------------------------------------

(238)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   VLCNDC_IN_G(X1) -> U5_G(X1, vlcA_in_ga(X1))
   U5_G(X1, vlcA_out_ga(X1, X2)) -> PD_IN_AGAA(X2)
   PD_IN_AGAA(X2) -> U8_AGAA(X2, selectcB_in_aga(X2))
   U8_AGAA(y0, selectcB_out_aga(y0, [])) -> U9_AGAA(y0, [], vlcE_out_ag(0, []))
   U9_AGAA(z0, [], vlcE_out_ag(0, [])) -> VLCNDC_IN_G(0)

The TRS R consists of the following rules:

   selectcB_in_aga(.(X3)) -> U17_aga(X3, selectcB_in_aga(X3))
   selectcB_in_aga(.(X2)) -> selectcB_out_aga(.(X2), X2)
   U17_aga(X3, selectcB_out_aga(X3, X4)) -> selectcB_out_aga(.(X3), .(X4))
   vlcA_in_ga(0) -> vlcA_out_ga(0, [])
   vlcA_in_ga(0) -> U15_ga(vlcA_in_ga(0))
   vlcA_in_ga(s(X1)) -> U16_ga(X1, vlcA_in_ga(X1))
   U16_ga(X1, vlcA_out_ga(X1, X3)) -> vlcA_out_ga(s(X1), .(X3))
   U15_ga(vlcA_out_ga(0, X2)) -> vlcA_out_ga(0, .(X2))

The set Q consists of the following terms:

   vlcA_in_ga(x0)
   U16_ga(x0, x1)
   U15_ga(x0)
   selectcB_in_aga(x0)
   U17_aga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(239) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule VLCNDC_IN_G(X1) -> U5_G(X1, vlcA_in_ga(X1)) we obtained the following new rules [LPAR04]:

   (VLCNDC_IN_G(0) -> U5_G(0, vlcA_in_ga(0)),VLCNDC_IN_G(0) -> U5_G(0, vlcA_in_ga(0)))


----------------------------------------

(240)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5_G(X1, vlcA_out_ga(X1, X2)) -> PD_IN_AGAA(X2)
   PD_IN_AGAA(X2) -> U8_AGAA(X2, selectcB_in_aga(X2))
   U8_AGAA(y0, selectcB_out_aga(y0, [])) -> U9_AGAA(y0, [], vlcE_out_ag(0, []))
   U9_AGAA(z0, [], vlcE_out_ag(0, [])) -> VLCNDC_IN_G(0)
   VLCNDC_IN_G(0) -> U5_G(0, vlcA_in_ga(0))

The TRS R consists of the following rules:

   selectcB_in_aga(.(X3)) -> U17_aga(X3, selectcB_in_aga(X3))
   selectcB_in_aga(.(X2)) -> selectcB_out_aga(.(X2), X2)
   U17_aga(X3, selectcB_out_aga(X3, X4)) -> selectcB_out_aga(.(X3), .(X4))
   vlcA_in_ga(0) -> vlcA_out_ga(0, [])
   vlcA_in_ga(0) -> U15_ga(vlcA_in_ga(0))
   vlcA_in_ga(s(X1)) -> U16_ga(X1, vlcA_in_ga(X1))
   U16_ga(X1, vlcA_out_ga(X1, X3)) -> vlcA_out_ga(s(X1), .(X3))
   U15_ga(vlcA_out_ga(0, X2)) -> vlcA_out_ga(0, .(X2))

The set Q consists of the following terms:

   vlcA_in_ga(x0)
   U16_ga(x0, x1)
   U15_ga(x0)
   selectcB_in_aga(x0)
   U17_aga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(241) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(242)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5_G(X1, vlcA_out_ga(X1, X2)) -> PD_IN_AGAA(X2)
   PD_IN_AGAA(X2) -> U8_AGAA(X2, selectcB_in_aga(X2))
   U8_AGAA(y0, selectcB_out_aga(y0, [])) -> U9_AGAA(y0, [], vlcE_out_ag(0, []))
   U9_AGAA(z0, [], vlcE_out_ag(0, [])) -> VLCNDC_IN_G(0)
   VLCNDC_IN_G(0) -> U5_G(0, vlcA_in_ga(0))

The TRS R consists of the following rules:

   vlcA_in_ga(0) -> vlcA_out_ga(0, [])
   vlcA_in_ga(0) -> U15_ga(vlcA_in_ga(0))
   U15_ga(vlcA_out_ga(0, X2)) -> vlcA_out_ga(0, .(X2))
   selectcB_in_aga(.(X3)) -> U17_aga(X3, selectcB_in_aga(X3))
   selectcB_in_aga(.(X2)) -> selectcB_out_aga(.(X2), X2)
   U17_aga(X3, selectcB_out_aga(X3, X4)) -> selectcB_out_aga(.(X3), .(X4))

The set Q consists of the following terms:

   vlcA_in_ga(x0)
   U16_ga(x0, x1)
   U15_ga(x0)
   selectcB_in_aga(x0)
   U17_aga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(243) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   U16_ga(x0, x1)


----------------------------------------

(244)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5_G(X1, vlcA_out_ga(X1, X2)) -> PD_IN_AGAA(X2)
   PD_IN_AGAA(X2) -> U8_AGAA(X2, selectcB_in_aga(X2))
   U8_AGAA(y0, selectcB_out_aga(y0, [])) -> U9_AGAA(y0, [], vlcE_out_ag(0, []))
   U9_AGAA(z0, [], vlcE_out_ag(0, [])) -> VLCNDC_IN_G(0)
   VLCNDC_IN_G(0) -> U5_G(0, vlcA_in_ga(0))

The TRS R consists of the following rules:

   vlcA_in_ga(0) -> vlcA_out_ga(0, [])
   vlcA_in_ga(0) -> U15_ga(vlcA_in_ga(0))
   U15_ga(vlcA_out_ga(0, X2)) -> vlcA_out_ga(0, .(X2))
   selectcB_in_aga(.(X3)) -> U17_aga(X3, selectcB_in_aga(X3))
   selectcB_in_aga(.(X2)) -> selectcB_out_aga(.(X2), X2)
   U17_aga(X3, selectcB_out_aga(X3, X4)) -> selectcB_out_aga(.(X3), .(X4))

The set Q consists of the following terms:

   vlcA_in_ga(x0)
   U15_ga(x0)
   selectcB_in_aga(x0)
   U17_aga(x0, x1)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(245) TransformationProof (EQUIVALENT)
By instantiating [LPAR04] the rule U5_G(X1, vlcA_out_ga(X1, X2)) -> PD_IN_AGAA(X2) we obtained the following new rules [LPAR04]:

   (U5_G(0, vlcA_out_ga(0, x1)) -> PD_IN_AGAA(x1),U5_G(0, vlcA_out_ga(0, x1)) -> PD_IN_AGAA(x1))


----------------------------------------

(246)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PD_IN_AGAA(X2) -> U8_AGAA(X2, selectcB_in_aga(X2))
   U8_AGAA(y0, selectcB_out_aga(y0, [])) -> U9_AGAA(y0, [], vlcE_out_ag(0, []))
   U9_AGAA(z0, [], vlcE_out_ag(0, [])) -> VLCNDC_IN_G(0)
   VLCNDC_IN_G(0) -> U5_G(0, vlcA_in_ga(0))
   U5_G(0, vlcA_out_ga(0, x1)) -> PD_IN_AGAA(x1)

The TRS R consists of the following rules:

   vlcA_in_ga(0) -> vlcA_out_ga(0, [])
   vlcA_in_ga(0) -> U15_ga(vlcA_in_ga(0))
   U15_ga(vlcA_out_ga(0, X2)) -> vlcA_out_ga(0, .(X2))
   selectcB_in_aga(.(X3)) -> U17_aga(X3, selectcB_in_aga(X3))
   selectcB_in_aga(.(X2)) -> selectcB_out_aga(.(X2), X2)
   U17_aga(X3, selectcB_out_aga(X3, X4)) -> selectcB_out_aga(.(X3), .(X4))

The set Q consists of the following terms:

   vlcA_in_ga(x0)
   U15_ga(x0)
   selectcB_in_aga(x0)
   U17_aga(x0, x1)

We have to consider all (P,Q,R)-chains.