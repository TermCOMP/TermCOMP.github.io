YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/RvPDi.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

app(g,a,a)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToDTProblemTransformerProof [SOUND, 0 ms]
(2) TRIPLES
(3) TriplesToPiDPProof [SOUND, 1 ms]
(4) PiDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) PiDP
(7) PiDPToQDPProof [SOUND, 0 ms]
(8) QDP
(9) QDPSizeChangeProof [EQUIVALENT, 0 ms]
(10) YES


----------------------------------------

(0)
Obligation:
Clauses:

app([], Y, Z) :- ','(!, eq(Y, Z)).
app(X, Y, .(H, Z)) :- ','(head(X, H), ','(tail(X, T), app(T, Y, Z))).
head([], X1).
head(.(X, X2), X).
tail([], []).
tail(.(X3, Xs), Xs).
eq(X, X).


Query: app(g,a,a)
----------------------------------------

(1) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 2,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(app ([]) Y Z)",
                "(',' (!) (eq Y Z))"
            ],
            [
                "(app X Y (. H Z))",
                "(',' (head X H) (',' (tail X T) (app T Y Z)))"
            ],
            [
                "(head ([]) X1)",
                null
            ],
            [
                "(head (. X X2) X)",
                null
            ],
            [
                "(tail ([]) ([]))",
                null
            ],
            [
                "(tail (. X3 Xs) Xs)",
                null
            ],
            [
                "(eq X X)",
                null
            ]
        ]
    },
    "graph": {
        "nodes": {
            "44": {
                "goal": [{
                    "clause": 6,
                    "scope": 2,
                    "term": "(eq T8 T9)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "45": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "48": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "49": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "133": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 3,
                        "term": "(',' (head T17 T21) (',' (tail T17 X19) (app X19 T22 T23)))"
                    },
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(',' (head T17 T21) (',' (tail T17 X19) (app X19 T22 T23)))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(app T17 T2 T3)",
                        "(app ([]) X6 X7)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T17"],
                    "free": [
                        "X6",
                        "X7",
                        "X19"
                    ],
                    "exprvars": []
                }
            },
            "265": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T42 T31 T32)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T42"],
                    "free": [],
                    "exprvars": []
                }
            },
            "2": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "245": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 4,
                        "term": "(',' (tail (. T29 T30) X19) (app X19 T31 T32))"
                    },
                    {
                        "clause": 5,
                        "scope": 4,
                        "term": "(',' (tail (. T29 T30) X19) (app X19 T31 T32))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T29",
                        "T30"
                    ],
                    "free": ["X19"],
                    "exprvars": []
                }
            },
            "246": {
                "goal": [{
                    "clause": 5,
                    "scope": 4,
                    "term": "(',' (tail (. T29 T30) X19) (app X19 T31 T32))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T29",
                        "T30"
                    ],
                    "free": ["X19"],
                    "exprvars": []
                }
            },
            "5": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(app T1 T2 T3)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(app T1 T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "126": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (head T17 T21) (',' (tail T17 X19) (app X19 T22 T23)))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T17 T2 T3)",
                        "(app ([]) X6 X7)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T17"],
                    "free": [
                        "X6",
                        "X7",
                        "X19"
                    ],
                    "exprvars": []
                }
            },
            "236": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (tail (. T29 T30) X19) (app X19 T31 T32))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T29",
                        "T30"
                    ],
                    "free": ["X19"],
                    "exprvars": []
                }
            },
            "139": {
                "goal": [{
                    "clause": 3,
                    "scope": 3,
                    "term": "(',' (head T17 T21) (',' (tail T17 X19) (app X19 T22 T23)))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T17 T2 T3)",
                        "(app ([]) X6 X7)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T17"],
                    "free": [
                        "X6",
                        "X7",
                        "X19"
                    ],
                    "exprvars": []
                }
            },
            "129": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "239": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "41": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_1) (eq T8 T9))"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(app ([]) T2 T3)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "42": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(app T1 T2 T3)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T1 T2 T3)",
                        "(app ([]) X6 X7)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [
                        "X6",
                        "X7"
                    ],
                    "exprvars": []
                }
            },
            "43": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(eq T8 T9)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 2,
                "to": 5,
                "label": "CASE"
            },
            {
                "from": 5,
                "to": 41,
                "label": "EVAL with clause\napp([], X6, X7) :- ','(!_1, eq(X6, X7)).\nand substitutionT1 -> [],\nT2 -> T8,\nX6 -> T8,\nT3 -> T9,\nX7 -> T9,\nT6 -> T8,\nT7 -> T9"
            },
            {
                "from": 5,
                "to": 42,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 41,
                "to": 43,
                "label": "CUT"
            },
            {
                "from": 42,
                "to": 126,
                "label": "EVAL with clause\napp(X15, X16, .(X17, X18)) :- ','(head(X15, X17), ','(tail(X15, X19), app(X19, X16, X18))).\nand substitutionT1 -> T17,\nX15 -> T17,\nT2 -> T22,\nX16 -> T22,\nX17 -> T21,\nX18 -> T23,\nT3 -> .(T21, T23),\nT19 -> T21,\nT18 -> T22,\nT20 -> T23"
            },
            {
                "from": 42,
                "to": 129,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 43,
                "to": 44,
                "label": "CASE"
            },
            {
                "from": 44,
                "to": 45,
                "label": "EVAL with clause\neq(X10, X10).\nand substitutionT8 -> T12,\nX10 -> T12,\nT9 -> T12"
            },
            {
                "from": 44,
                "to": 48,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 45,
                "to": 49,
                "label": "SUCCESS"
            },
            {
                "from": 126,
                "to": 133,
                "label": "CASE"
            },
            {
                "from": 133,
                "to": 139,
                "label": "BACKTRACK\nfor clause: head([], X1)\nwith clash: (app(T17, T2, T3), app([], X6, X7))"
            },
            {
                "from": 139,
                "to": 236,
                "label": "EVAL with clause\nhead(.(X25, X26), X25).\nand substitutionX25 -> T29,\nX26 -> T30,\nT17 -> .(T29, T30),\nT21 -> T29,\nT22 -> T31,\nT23 -> T32"
            },
            {
                "from": 139,
                "to": 239,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 236,
                "to": 245,
                "label": "CASE"
            },
            {
                "from": 245,
                "to": 246,
                "label": "BACKTRACK\nfor clause: tail([], [])because of non-unification"
            },
            {
                "from": 246,
                "to": 265,
                "label": "ONLY EVAL with clause\ntail(.(X35, X36), X36).\nand substitutionT29 -> T41,\nX35 -> T41,\nT30 -> T42,\nX36 -> T42,\nX19 -> T42"
            },
            {
                "from": 265,
                "to": 2,
                "label": "INSTANCE with matching:\nT1 -> T42\nT2 -> T31\nT3 -> T32"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Obligation:
Triples:

appA(.(X1, X2), X3, .(X1, X4)) :- appA(X2, X3, X4).

Clauses:

appcA([], X1, X1).
appcA(.(X1, X2), X3, .(X1, X4)) :- appcA(X2, X3, X4).

Afs:

appA(x1, x2, x3)  =  appA(x1)


----------------------------------------

(3) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

appA_in_3: (b,f,f)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   APPA_IN_GAA(.(X1, X2), X3, .(X1, X4)) -> U1_GAA(X1, X2, X3, X4, appA_in_gaa(X2, X3, X4))
   APPA_IN_GAA(.(X1, X2), X3, .(X1, X4)) -> APPA_IN_GAA(X2, X3, X4)

R is empty.
The argument filtering Pi contains the following mapping:
appA_in_gaa(x1, x2, x3)  =  appA_in_gaa(x1)

.(x1, x2)  =  .(x1, x2)

APPA_IN_GAA(x1, x2, x3)  =  APPA_IN_GAA(x1)

U1_GAA(x1, x2, x3, x4, x5)  =  U1_GAA(x1, x2, x5)


We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(4)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPA_IN_GAA(.(X1, X2), X3, .(X1, X4)) -> U1_GAA(X1, X2, X3, X4, appA_in_gaa(X2, X3, X4))
   APPA_IN_GAA(.(X1, X2), X3, .(X1, X4)) -> APPA_IN_GAA(X2, X3, X4)

R is empty.
The argument filtering Pi contains the following mapping:
appA_in_gaa(x1, x2, x3)  =  appA_in_gaa(x1)

.(x1, x2)  =  .(x1, x2)

APPA_IN_GAA(x1, x2, x3)  =  APPA_IN_GAA(x1)

U1_GAA(x1, x2, x3, x4, x5)  =  U1_GAA(x1, x2, x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 1 SCC with 1 less node.
----------------------------------------

(6)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPA_IN_GAA(.(X1, X2), X3, .(X1, X4)) -> APPA_IN_GAA(X2, X3, X4)

R is empty.
The argument filtering Pi contains the following mapping:
.(x1, x2)  =  .(x1, x2)

APPA_IN_GAA(x1, x2, x3)  =  APPA_IN_GAA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(7) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APPA_IN_GAA(.(X1, X2)) -> APPA_IN_GAA(X2)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(9) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*APPA_IN_GAA(.(X1, X2)) -> APPA_IN_GAA(X2)
The graph contains the following edges 1 > 1


----------------------------------------

(10)
YES
