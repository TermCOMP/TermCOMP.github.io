MAYBE
proof of /hpcwork/ff862203/termcomp25/benchmarks/ubkJt.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

lessleaves(g,g)

w.r.t. the given Prolog program could not be shown:

(0) Prolog
(1) CutEliminatorProof [SOUND, 0 ms]
(2) Prolog
    (3) PrologToPiTRSProof [SOUND, 0 ms]
    (4) PiTRS
        (5) DependencyPairsProof [EQUIVALENT, 10 ms]
        (6) PiDP
        (7) DependencyGraphProof [EQUIVALENT, 0 ms]
        (8) AND
            (9) PiDP
                (10) UsableRulesProof [EQUIVALENT, 0 ms]
                (11) PiDP
                (12) PiDPToQDPProof [SOUND, 0 ms]
                (13) QDP
                (14) TransformationProof [EQUIVALENT, 0 ms]
                (15) QDP
                (16) UsableRulesProof [EQUIVALENT, 0 ms]
                (17) QDP
                (18) QReductionProof [EQUIVALENT, 0 ms]
                (19) QDP
                (20) TransformationProof [EQUIVALENT, 0 ms]
                (21) QDP
                (22) UsableRulesProof [EQUIVALENT, 0 ms]
                (23) QDP
                (24) QReductionProof [EQUIVALENT, 0 ms]
                (25) QDP
                (26) NonTerminationLoopProof [COMPLETE, 0 ms]
                (27) NO
            (28) PiDP
                (29) UsableRulesProof [EQUIVALENT, 0 ms]
                (30) PiDP
                (31) PiDPToQDPProof [SOUND, 0 ms]
                (32) QDP
            (33) PiDP
                (34) UsableRulesProof [EQUIVALENT, 0 ms]
                (35) PiDP
    (36) PrologToPiTRSProof [SOUND, 0 ms]
    (37) PiTRS
        (38) DependencyPairsProof [EQUIVALENT, 14 ms]
        (39) PiDP
        (40) DependencyGraphProof [EQUIVALENT, 0 ms]
        (41) AND
            (42) PiDP
                (43) UsableRulesProof [EQUIVALENT, 0 ms]
                (44) PiDP
                (45) PiDPToQDPProof [SOUND, 0 ms]
                (46) QDP
                (47) TransformationProof [EQUIVALENT, 0 ms]
                (48) QDP
                (49) UsableRulesProof [EQUIVALENT, 0 ms]
                (50) QDP
                (51) QReductionProof [EQUIVALENT, 0 ms]
                (52) QDP
                (53) TransformationProof [EQUIVALENT, 0 ms]
                (54) QDP
                (55) UsableRulesProof [EQUIVALENT, 0 ms]
                (56) QDP
                (57) QReductionProof [EQUIVALENT, 0 ms]
                (58) QDP
                (59) NonTerminationLoopProof [COMPLETE, 0 ms]
                (60) NO
            (61) PiDP
                (62) UsableRulesProof [EQUIVALENT, 0 ms]
                (63) PiDP
                (64) PiDPToQDPProof [SOUND, 0 ms]
                (65) QDP
            (66) PiDP
                (67) UsableRulesProof [EQUIVALENT, 0 ms]
                (68) PiDP
(69) PrologToIRSwTTransformerProof [SOUND, 41 ms]
(70) AND
    (71) IRSwT
        (72) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (73) TRUE
    (74) IRSwT
        (75) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (76) TRUE
    (77) IRSwT
        (78) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (79) TRUE
    (80) IRSwT
        (81) IRSwTSimpleDependencyGraphProof [EQUIVALENT, 0 ms]
        (82) IRSwT
        (83) IntTRSCompressionProof [EQUIVALENT, 35 ms]
        (84) IRSwT
        (85) IRSFormatTransformerProof [EQUIVALENT, 0 ms]
        (86) IRSwT
        (87) IRSwTTerminationDigraphProof [EQUIVALENT, 7 ms]
        (88) AND
            (89) IRSwT
                (90) IntTRSUnneededArgumentFilterProof [EQUIVALENT, 0 ms]
                (91) IRSwT
                (92) TempFilterProof [SOUND, 1 ms]
                (93) IRSwT
                (94) IRSwTToQDPProof [SOUND, 0 ms]
                (95) QDP
                (96) QDPSizeChangeProof [EQUIVALENT, 0 ms]
                (97) YES
            (98) IRSwT
                (99) IRSwTToIntTRSProof [SOUND, 7 ms]
                (100) IRSwT
(101) PrologToTRSTransformerProof [SOUND, 28 ms]
(102) QTRS
    (103) DependencyPairsProof [EQUIVALENT, 0 ms]
    (104) QDP
    (105) DependencyGraphProof [EQUIVALENT, 0 ms]
    (106) AND
        (107) QDP
            (108) UsableRulesProof [EQUIVALENT, 0 ms]
            (109) QDP
            (110) NonTerminationLoopProof [COMPLETE, 0 ms]
            (111) NO
        (112) QDP
            (113) UsableRulesProof [EQUIVALENT, 0 ms]
            (114) QDP
            (115) NonTerminationLoopProof [COMPLETE, 0 ms]
            (116) NO
        (117) QDP
            (118) UsableRulesProof [EQUIVALENT, 0 ms]
            (119) QDP
            (120) MRRProof [EQUIVALENT, 5 ms]
            (121) QDP
            (122) MRRProof [EQUIVALENT, 2 ms]
            (123) QDP
            (124) MNOCProof [EQUIVALENT, 1 ms]
            (125) QDP
            (126) UsableRulesProof [EQUIVALENT, 0 ms]
            (127) QDP
            (128) QReductionProof [EQUIVALENT, 0 ms]
            (129) QDP
            (130) TransformationProof [EQUIVALENT, 0 ms]
            (131) QDP
            (132) TransformationProof [EQUIVALENT, 0 ms]
            (133) QDP
            (134) NonTerminationLoopProof [COMPLETE, 0 ms]
            (135) NO
        (136) QDP
            (137) UsableRulesProof [EQUIVALENT, 0 ms]
            (138) QDP
            (139) ATransformationProof [EQUIVALENT, 0 ms]
            (140) QDP
            (141) NonTerminationLoopProof [COMPLETE, 0 ms]
            (142) NO
        (143) QDP
            (144) UsableRulesProof [EQUIVALENT, 0 ms]
            (145) QDP
            (146) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (147) YES
(148) PrologToDTProblemTransformerProof [SOUND, 25 ms]
(149) TRIPLES
    (150) TriplesToPiDPProof [SOUND, 0 ms]
    (151) PiDP
    (152) DependencyGraphProof [EQUIVALENT, 0 ms]
    (153) AND
        (154) PiDP
            (155) UsableRulesProof [EQUIVALENT, 0 ms]
            (156) PiDP
            (157) PiDPToQDPProof [SOUND, 0 ms]
            (158) QDP
            (159) ATransformationProof [EQUIVALENT, 0 ms]
            (160) QDP
            (161) NonTerminationLoopProof [COMPLETE, 0 ms]
            (162) NO
        (163) PiDP
            (164) UsableRulesProof [EQUIVALENT, 0 ms]
            (165) PiDP
            (166) PiDPToQDPProof [SOUND, 0 ms]
            (167) QDP
            (168) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (169) YES
        (170) PiDP
            (171) UsableRulesProof [EQUIVALENT, 0 ms]
            (172) PiDP
            (173) PiDPToQDPProof [SOUND, 0 ms]
            (174) QDP
            (175) NonTerminationLoopProof [COMPLETE, 0 ms]
            (176) NO
        (177) PiDP
            (178) UsableRulesProof [EQUIVALENT, 0 ms]
            (179) PiDP
            (180) PiDPToQDPProof [SOUND, 0 ms]
            (181) QDP
            (182) QDPSizeChangeProof [EQUIVALENT, 0 ms]
            (183) YES
        (184) PiDP
            (185) UsableRulesProof [EQUIVALENT, 0 ms]
            (186) PiDP
            (187) PiDPToQDPProof [SOUND, 0 ms]
            (188) QDP
            (189) NonTerminationLoopProof [COMPLETE, 0 ms]
            (190) NO
        (191) PiDP
            (192) UsableRulesProof [EQUIVALENT, 0 ms]
            (193) PiDP
            (194) PiDPToQDPProof [SOUND, 0 ms]
            (195) QDP
            (196) MRRProof [EQUIVALENT, 0 ms]
            (197) QDP
            (198) MRRProof [EQUIVALENT, 2 ms]
            (199) QDP
            (200) MRRProof [EQUIVALENT, 0 ms]
            (201) QDP
            (202) UsableRulesProof [EQUIVALENT, 0 ms]
            (203) QDP
            (204) QReductionProof [EQUIVALENT, 0 ms]
            (205) QDP
        (206) PiDP
            (207) UsableRulesProof [EQUIVALENT, 0 ms]
            (208) PiDP
        (209) PiDP
            (210) UsableRulesProof [EQUIVALENT, 0 ms]
            (211) PiDP


----------------------------------------

(0)
Obligation:
Clauses:

lessleaves(nil, cons(X1, X2)).
lessleaves(cons(U, V), cons(W, Z)) :- ','(app(U, V, U1), ','(app(W, Z, W1), lessleaves(U1, W1))).
app(nil, Y, Z) :- ','(!, eq(Y, Z)).
app(X, Y, cons(U, Z)) :- ','(head(X, U), ','(tail(X, V), app(V, Y, Z))).
head([], X3).
head(.(X, X4), X).
tail([], []).
tail(.(X5, X), X).
eq(X, X).


Query: lessleaves(g,g)
----------------------------------------

(1) CutEliminatorProof (SOUND)
Eliminated all cuts by simply ignoring them[PROLOG].
----------------------------------------

(2)
Obligation:
Clauses:

lessleaves(nil, cons(X1, X2)).
lessleaves(cons(U, V), cons(W, Z)) :- ','(app(U, V, U1), ','(app(W, Z, W1), lessleaves(U1, W1))).
app(nil, Y, Z) :- eq(Y, Z).
app(X, Y, cons(U, Z)) :- ','(head(X, U), ','(tail(X, V), app(V, Y, Z))).
head([], X3).
head(.(X, X4), X).
tail([], []).
tail(.(X5, X), X).
eq(X, X).


Query: lessleaves(g,g)
----------------------------------------

(3) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

lessleaves_in_2: (b,b) (f,f)

app_in_3: (b,b,f) (f,f,f)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   lessleaves_in_gg(nil, cons(X1, X2)) -> lessleaves_out_gg(nil, cons(X1, X2))
   lessleaves_in_gg(cons(U, V), cons(W, Z)) -> U1_gg(U, V, W, Z, app_in_gga(U, V, U1))
   app_in_gga(nil, Y, Z) -> U4_gga(Y, Z, eq_in_ga(Y, Z))
   eq_in_ga(X, X) -> eq_out_ga(X, X)
   U4_gga(Y, Z, eq_out_ga(Y, Z)) -> app_out_gga(nil, Y, Z)
   app_in_gga(X, Y, cons(U, Z)) -> U5_gga(X, Y, U, Z, head_in_ga(X, U))
   head_in_ga([], X3) -> head_out_ga([], X3)
   head_in_ga(.(X, X4), X) -> head_out_ga(.(X, X4), X)
   U5_gga(X, Y, U, Z, head_out_ga(X, U)) -> U6_gga(X, Y, U, Z, tail_in_ga(X, V))
   tail_in_ga([], []) -> tail_out_ga([], [])
   tail_in_ga(.(X5, X), X) -> tail_out_ga(.(X5, X), X)
   U6_gga(X, Y, U, Z, tail_out_ga(X, V)) -> U7_gga(X, Y, U, Z, app_in_gga(V, Y, Z))
   U7_gga(X, Y, U, Z, app_out_gga(V, Y, Z)) -> app_out_gga(X, Y, cons(U, Z))
   U1_gg(U, V, W, Z, app_out_gga(U, V, U1)) -> U2_gg(U, V, W, Z, U1, app_in_gga(W, Z, W1))
   U2_gg(U, V, W, Z, U1, app_out_gga(W, Z, W1)) -> U3_gg(U, V, W, Z, lessleaves_in_aa(U1, W1))
   lessleaves_in_aa(nil, cons(X1, X2)) -> lessleaves_out_aa(nil, cons(X1, X2))
   lessleaves_in_aa(cons(U, V), cons(W, Z)) -> U1_aa(U, V, W, Z, app_in_aaa(U, V, U1))
   app_in_aaa(nil, Y, Z) -> U4_aaa(Y, Z, eq_in_aa(Y, Z))
   eq_in_aa(X, X) -> eq_out_aa(X, X)
   U4_aaa(Y, Z, eq_out_aa(Y, Z)) -> app_out_aaa(nil, Y, Z)
   app_in_aaa(X, Y, cons(U, Z)) -> U5_aaa(X, Y, U, Z, head_in_aa(X, U))
   head_in_aa([], X3) -> head_out_aa([], X3)
   head_in_aa(.(X, X4), X) -> head_out_aa(.(X, X4), X)
   U5_aaa(X, Y, U, Z, head_out_aa(X, U)) -> U6_aaa(X, Y, U, Z, tail_in_aa(X, V))
   tail_in_aa([], []) -> tail_out_aa([], [])
   tail_in_aa(.(X5, X), X) -> tail_out_aa(.(X5, X), X)
   U6_aaa(X, Y, U, Z, tail_out_aa(X, V)) -> U7_aaa(X, Y, U, Z, app_in_aaa(V, Y, Z))
   U7_aaa(X, Y, U, Z, app_out_aaa(V, Y, Z)) -> app_out_aaa(X, Y, cons(U, Z))
   U1_aa(U, V, W, Z, app_out_aaa(U, V, U1)) -> U2_aa(U, V, W, Z, U1, app_in_aaa(W, Z, W1))
   U2_aa(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> U3_aa(U, V, W, Z, lessleaves_in_aa(U1, W1))
   U3_aa(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_aa(cons(U, V), cons(W, Z))
   U3_gg(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_gg(cons(U, V), cons(W, Z))

The argument filtering Pi contains the following mapping:
lessleaves_in_gg(x1, x2)  =  lessleaves_in_gg(x1, x2)

nil  =  nil

cons(x1, x2)  =  cons(x1, x2)

lessleaves_out_gg(x1, x2)  =  lessleaves_out_gg

U1_gg(x1, x2, x3, x4, x5)  =  U1_gg(x3, x4, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

U4_gga(x1, x2, x3)  =  U4_gga(x3)

eq_in_ga(x1, x2)  =  eq_in_ga(x1)

eq_out_ga(x1, x2)  =  eq_out_ga(x2)

app_out_gga(x1, x2, x3)  =  app_out_gga

U5_gga(x1, x2, x3, x4, x5)  =  U5_gga(x1, x2, x5)

head_in_ga(x1, x2)  =  head_in_ga(x1)

[]  =  []

head_out_ga(x1, x2)  =  head_out_ga

.(x1, x2)  =  .(x1, x2)

U6_gga(x1, x2, x3, x4, x5)  =  U6_gga(x2, x5)

tail_in_ga(x1, x2)  =  tail_in_ga(x1)

tail_out_ga(x1, x2)  =  tail_out_ga(x2)

U7_gga(x1, x2, x3, x4, x5)  =  U7_gga(x5)

U2_gg(x1, x2, x3, x4, x5, x6)  =  U2_gg(x6)

U3_gg(x1, x2, x3, x4, x5)  =  U3_gg(x5)

lessleaves_in_aa(x1, x2)  =  lessleaves_in_aa

lessleaves_out_aa(x1, x2)  =  lessleaves_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

U4_aaa(x1, x2, x3)  =  U4_aaa(x3)

eq_in_aa(x1, x2)  =  eq_in_aa

eq_out_aa(x1, x2)  =  eq_out_aa

app_out_aaa(x1, x2, x3)  =  app_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

head_in_aa(x1, x2)  =  head_in_aa

head_out_aa(x1, x2)  =  head_out_aa

U6_aaa(x1, x2, x3, x4, x5)  =  U6_aaa(x5)

tail_in_aa(x1, x2)  =  tail_in_aa

tail_out_aa(x1, x2)  =  tail_out_aa

U7_aaa(x1, x2, x3, x4, x5)  =  U7_aaa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x5)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(4)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   lessleaves_in_gg(nil, cons(X1, X2)) -> lessleaves_out_gg(nil, cons(X1, X2))
   lessleaves_in_gg(cons(U, V), cons(W, Z)) -> U1_gg(U, V, W, Z, app_in_gga(U, V, U1))
   app_in_gga(nil, Y, Z) -> U4_gga(Y, Z, eq_in_ga(Y, Z))
   eq_in_ga(X, X) -> eq_out_ga(X, X)
   U4_gga(Y, Z, eq_out_ga(Y, Z)) -> app_out_gga(nil, Y, Z)
   app_in_gga(X, Y, cons(U, Z)) -> U5_gga(X, Y, U, Z, head_in_ga(X, U))
   head_in_ga([], X3) -> head_out_ga([], X3)
   head_in_ga(.(X, X4), X) -> head_out_ga(.(X, X4), X)
   U5_gga(X, Y, U, Z, head_out_ga(X, U)) -> U6_gga(X, Y, U, Z, tail_in_ga(X, V))
   tail_in_ga([], []) -> tail_out_ga([], [])
   tail_in_ga(.(X5, X), X) -> tail_out_ga(.(X5, X), X)
   U6_gga(X, Y, U, Z, tail_out_ga(X, V)) -> U7_gga(X, Y, U, Z, app_in_gga(V, Y, Z))
   U7_gga(X, Y, U, Z, app_out_gga(V, Y, Z)) -> app_out_gga(X, Y, cons(U, Z))
   U1_gg(U, V, W, Z, app_out_gga(U, V, U1)) -> U2_gg(U, V, W, Z, U1, app_in_gga(W, Z, W1))
   U2_gg(U, V, W, Z, U1, app_out_gga(W, Z, W1)) -> U3_gg(U, V, W, Z, lessleaves_in_aa(U1, W1))
   lessleaves_in_aa(nil, cons(X1, X2)) -> lessleaves_out_aa(nil, cons(X1, X2))
   lessleaves_in_aa(cons(U, V), cons(W, Z)) -> U1_aa(U, V, W, Z, app_in_aaa(U, V, U1))
   app_in_aaa(nil, Y, Z) -> U4_aaa(Y, Z, eq_in_aa(Y, Z))
   eq_in_aa(X, X) -> eq_out_aa(X, X)
   U4_aaa(Y, Z, eq_out_aa(Y, Z)) -> app_out_aaa(nil, Y, Z)
   app_in_aaa(X, Y, cons(U, Z)) -> U5_aaa(X, Y, U, Z, head_in_aa(X, U))
   head_in_aa([], X3) -> head_out_aa([], X3)
   head_in_aa(.(X, X4), X) -> head_out_aa(.(X, X4), X)
   U5_aaa(X, Y, U, Z, head_out_aa(X, U)) -> U6_aaa(X, Y, U, Z, tail_in_aa(X, V))
   tail_in_aa([], []) -> tail_out_aa([], [])
   tail_in_aa(.(X5, X), X) -> tail_out_aa(.(X5, X), X)
   U6_aaa(X, Y, U, Z, tail_out_aa(X, V)) -> U7_aaa(X, Y, U, Z, app_in_aaa(V, Y, Z))
   U7_aaa(X, Y, U, Z, app_out_aaa(V, Y, Z)) -> app_out_aaa(X, Y, cons(U, Z))
   U1_aa(U, V, W, Z, app_out_aaa(U, V, U1)) -> U2_aa(U, V, W, Z, U1, app_in_aaa(W, Z, W1))
   U2_aa(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> U3_aa(U, V, W, Z, lessleaves_in_aa(U1, W1))
   U3_aa(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_aa(cons(U, V), cons(W, Z))
   U3_gg(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_gg(cons(U, V), cons(W, Z))

The argument filtering Pi contains the following mapping:
lessleaves_in_gg(x1, x2)  =  lessleaves_in_gg(x1, x2)

nil  =  nil

cons(x1, x2)  =  cons(x1, x2)

lessleaves_out_gg(x1, x2)  =  lessleaves_out_gg

U1_gg(x1, x2, x3, x4, x5)  =  U1_gg(x3, x4, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

U4_gga(x1, x2, x3)  =  U4_gga(x3)

eq_in_ga(x1, x2)  =  eq_in_ga(x1)

eq_out_ga(x1, x2)  =  eq_out_ga(x2)

app_out_gga(x1, x2, x3)  =  app_out_gga

U5_gga(x1, x2, x3, x4, x5)  =  U5_gga(x1, x2, x5)

head_in_ga(x1, x2)  =  head_in_ga(x1)

[]  =  []

head_out_ga(x1, x2)  =  head_out_ga

.(x1, x2)  =  .(x1, x2)

U6_gga(x1, x2, x3, x4, x5)  =  U6_gga(x2, x5)

tail_in_ga(x1, x2)  =  tail_in_ga(x1)

tail_out_ga(x1, x2)  =  tail_out_ga(x2)

U7_gga(x1, x2, x3, x4, x5)  =  U7_gga(x5)

U2_gg(x1, x2, x3, x4, x5, x6)  =  U2_gg(x6)

U3_gg(x1, x2, x3, x4, x5)  =  U3_gg(x5)

lessleaves_in_aa(x1, x2)  =  lessleaves_in_aa

lessleaves_out_aa(x1, x2)  =  lessleaves_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

U4_aaa(x1, x2, x3)  =  U4_aaa(x3)

eq_in_aa(x1, x2)  =  eq_in_aa

eq_out_aa(x1, x2)  =  eq_out_aa

app_out_aaa(x1, x2, x3)  =  app_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

head_in_aa(x1, x2)  =  head_in_aa

head_out_aa(x1, x2)  =  head_out_aa

U6_aaa(x1, x2, x3, x4, x5)  =  U6_aaa(x5)

tail_in_aa(x1, x2)  =  tail_in_aa

tail_out_aa(x1, x2)  =  tail_out_aa

U7_aaa(x1, x2, x3, x4, x5)  =  U7_aaa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x5)



----------------------------------------

(5) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   LESSLEAVES_IN_GG(cons(U, V), cons(W, Z)) -> U1_GG(U, V, W, Z, app_in_gga(U, V, U1))
   LESSLEAVES_IN_GG(cons(U, V), cons(W, Z)) -> APP_IN_GGA(U, V, U1)
   APP_IN_GGA(nil, Y, Z) -> U4_GGA(Y, Z, eq_in_ga(Y, Z))
   APP_IN_GGA(nil, Y, Z) -> EQ_IN_GA(Y, Z)
   APP_IN_GGA(X, Y, cons(U, Z)) -> U5_GGA(X, Y, U, Z, head_in_ga(X, U))
   APP_IN_GGA(X, Y, cons(U, Z)) -> HEAD_IN_GA(X, U)
   U5_GGA(X, Y, U, Z, head_out_ga(X, U)) -> U6_GGA(X, Y, U, Z, tail_in_ga(X, V))
   U5_GGA(X, Y, U, Z, head_out_ga(X, U)) -> TAIL_IN_GA(X, V)
   U6_GGA(X, Y, U, Z, tail_out_ga(X, V)) -> U7_GGA(X, Y, U, Z, app_in_gga(V, Y, Z))
   U6_GGA(X, Y, U, Z, tail_out_ga(X, V)) -> APP_IN_GGA(V, Y, Z)
   U1_GG(U, V, W, Z, app_out_gga(U, V, U1)) -> U2_GG(U, V, W, Z, U1, app_in_gga(W, Z, W1))
   U1_GG(U, V, W, Z, app_out_gga(U, V, U1)) -> APP_IN_GGA(W, Z, W1)
   U2_GG(U, V, W, Z, U1, app_out_gga(W, Z, W1)) -> U3_GG(U, V, W, Z, lessleaves_in_aa(U1, W1))
   U2_GG(U, V, W, Z, U1, app_out_gga(W, Z, W1)) -> LESSLEAVES_IN_AA(U1, W1)
   LESSLEAVES_IN_AA(cons(U, V), cons(W, Z)) -> U1_AA(U, V, W, Z, app_in_aaa(U, V, U1))
   LESSLEAVES_IN_AA(cons(U, V), cons(W, Z)) -> APP_IN_AAA(U, V, U1)
   APP_IN_AAA(nil, Y, Z) -> U4_AAA(Y, Z, eq_in_aa(Y, Z))
   APP_IN_AAA(nil, Y, Z) -> EQ_IN_AA(Y, Z)
   APP_IN_AAA(X, Y, cons(U, Z)) -> U5_AAA(X, Y, U, Z, head_in_aa(X, U))
   APP_IN_AAA(X, Y, cons(U, Z)) -> HEAD_IN_AA(X, U)
   U5_AAA(X, Y, U, Z, head_out_aa(X, U)) -> U6_AAA(X, Y, U, Z, tail_in_aa(X, V))
   U5_AAA(X, Y, U, Z, head_out_aa(X, U)) -> TAIL_IN_AA(X, V)
   U6_AAA(X, Y, U, Z, tail_out_aa(X, V)) -> U7_AAA(X, Y, U, Z, app_in_aaa(V, Y, Z))
   U6_AAA(X, Y, U, Z, tail_out_aa(X, V)) -> APP_IN_AAA(V, Y, Z)
   U1_AA(U, V, W, Z, app_out_aaa(U, V, U1)) -> U2_AA(U, V, W, Z, U1, app_in_aaa(W, Z, W1))
   U1_AA(U, V, W, Z, app_out_aaa(U, V, U1)) -> APP_IN_AAA(W, Z, W1)
   U2_AA(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> U3_AA(U, V, W, Z, lessleaves_in_aa(U1, W1))
   U2_AA(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> LESSLEAVES_IN_AA(U1, W1)

The TRS R consists of the following rules:

   lessleaves_in_gg(nil, cons(X1, X2)) -> lessleaves_out_gg(nil, cons(X1, X2))
   lessleaves_in_gg(cons(U, V), cons(W, Z)) -> U1_gg(U, V, W, Z, app_in_gga(U, V, U1))
   app_in_gga(nil, Y, Z) -> U4_gga(Y, Z, eq_in_ga(Y, Z))
   eq_in_ga(X, X) -> eq_out_ga(X, X)
   U4_gga(Y, Z, eq_out_ga(Y, Z)) -> app_out_gga(nil, Y, Z)
   app_in_gga(X, Y, cons(U, Z)) -> U5_gga(X, Y, U, Z, head_in_ga(X, U))
   head_in_ga([], X3) -> head_out_ga([], X3)
   head_in_ga(.(X, X4), X) -> head_out_ga(.(X, X4), X)
   U5_gga(X, Y, U, Z, head_out_ga(X, U)) -> U6_gga(X, Y, U, Z, tail_in_ga(X, V))
   tail_in_ga([], []) -> tail_out_ga([], [])
   tail_in_ga(.(X5, X), X) -> tail_out_ga(.(X5, X), X)
   U6_gga(X, Y, U, Z, tail_out_ga(X, V)) -> U7_gga(X, Y, U, Z, app_in_gga(V, Y, Z))
   U7_gga(X, Y, U, Z, app_out_gga(V, Y, Z)) -> app_out_gga(X, Y, cons(U, Z))
   U1_gg(U, V, W, Z, app_out_gga(U, V, U1)) -> U2_gg(U, V, W, Z, U1, app_in_gga(W, Z, W1))
   U2_gg(U, V, W, Z, U1, app_out_gga(W, Z, W1)) -> U3_gg(U, V, W, Z, lessleaves_in_aa(U1, W1))
   lessleaves_in_aa(nil, cons(X1, X2)) -> lessleaves_out_aa(nil, cons(X1, X2))
   lessleaves_in_aa(cons(U, V), cons(W, Z)) -> U1_aa(U, V, W, Z, app_in_aaa(U, V, U1))
   app_in_aaa(nil, Y, Z) -> U4_aaa(Y, Z, eq_in_aa(Y, Z))
   eq_in_aa(X, X) -> eq_out_aa(X, X)
   U4_aaa(Y, Z, eq_out_aa(Y, Z)) -> app_out_aaa(nil, Y, Z)
   app_in_aaa(X, Y, cons(U, Z)) -> U5_aaa(X, Y, U, Z, head_in_aa(X, U))
   head_in_aa([], X3) -> head_out_aa([], X3)
   head_in_aa(.(X, X4), X) -> head_out_aa(.(X, X4), X)
   U5_aaa(X, Y, U, Z, head_out_aa(X, U)) -> U6_aaa(X, Y, U, Z, tail_in_aa(X, V))
   tail_in_aa([], []) -> tail_out_aa([], [])
   tail_in_aa(.(X5, X), X) -> tail_out_aa(.(X5, X), X)
   U6_aaa(X, Y, U, Z, tail_out_aa(X, V)) -> U7_aaa(X, Y, U, Z, app_in_aaa(V, Y, Z))
   U7_aaa(X, Y, U, Z, app_out_aaa(V, Y, Z)) -> app_out_aaa(X, Y, cons(U, Z))
   U1_aa(U, V, W, Z, app_out_aaa(U, V, U1)) -> U2_aa(U, V, W, Z, U1, app_in_aaa(W, Z, W1))
   U2_aa(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> U3_aa(U, V, W, Z, lessleaves_in_aa(U1, W1))
   U3_aa(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_aa(cons(U, V), cons(W, Z))
   U3_gg(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_gg(cons(U, V), cons(W, Z))

The argument filtering Pi contains the following mapping:
lessleaves_in_gg(x1, x2)  =  lessleaves_in_gg(x1, x2)

nil  =  nil

cons(x1, x2)  =  cons(x1, x2)

lessleaves_out_gg(x1, x2)  =  lessleaves_out_gg

U1_gg(x1, x2, x3, x4, x5)  =  U1_gg(x3, x4, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

U4_gga(x1, x2, x3)  =  U4_gga(x3)

eq_in_ga(x1, x2)  =  eq_in_ga(x1)

eq_out_ga(x1, x2)  =  eq_out_ga(x2)

app_out_gga(x1, x2, x3)  =  app_out_gga

U5_gga(x1, x2, x3, x4, x5)  =  U5_gga(x1, x2, x5)

head_in_ga(x1, x2)  =  head_in_ga(x1)

[]  =  []

head_out_ga(x1, x2)  =  head_out_ga

.(x1, x2)  =  .(x1, x2)

U6_gga(x1, x2, x3, x4, x5)  =  U6_gga(x2, x5)

tail_in_ga(x1, x2)  =  tail_in_ga(x1)

tail_out_ga(x1, x2)  =  tail_out_ga(x2)

U7_gga(x1, x2, x3, x4, x5)  =  U7_gga(x5)

U2_gg(x1, x2, x3, x4, x5, x6)  =  U2_gg(x6)

U3_gg(x1, x2, x3, x4, x5)  =  U3_gg(x5)

lessleaves_in_aa(x1, x2)  =  lessleaves_in_aa

lessleaves_out_aa(x1, x2)  =  lessleaves_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

U4_aaa(x1, x2, x3)  =  U4_aaa(x3)

eq_in_aa(x1, x2)  =  eq_in_aa

eq_out_aa(x1, x2)  =  eq_out_aa

app_out_aaa(x1, x2, x3)  =  app_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

head_in_aa(x1, x2)  =  head_in_aa

head_out_aa(x1, x2)  =  head_out_aa

U6_aaa(x1, x2, x3, x4, x5)  =  U6_aaa(x5)

tail_in_aa(x1, x2)  =  tail_in_aa

tail_out_aa(x1, x2)  =  tail_out_aa

U7_aaa(x1, x2, x3, x4, x5)  =  U7_aaa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x5)

LESSLEAVES_IN_GG(x1, x2)  =  LESSLEAVES_IN_GG(x1, x2)

U1_GG(x1, x2, x3, x4, x5)  =  U1_GG(x3, x4, x5)

APP_IN_GGA(x1, x2, x3)  =  APP_IN_GGA(x1, x2)

U4_GGA(x1, x2, x3)  =  U4_GGA(x3)

EQ_IN_GA(x1, x2)  =  EQ_IN_GA(x1)

U5_GGA(x1, x2, x3, x4, x5)  =  U5_GGA(x1, x2, x5)

HEAD_IN_GA(x1, x2)  =  HEAD_IN_GA(x1)

U6_GGA(x1, x2, x3, x4, x5)  =  U6_GGA(x2, x5)

TAIL_IN_GA(x1, x2)  =  TAIL_IN_GA(x1)

U7_GGA(x1, x2, x3, x4, x5)  =  U7_GGA(x5)

U2_GG(x1, x2, x3, x4, x5, x6)  =  U2_GG(x6)

U3_GG(x1, x2, x3, x4, x5)  =  U3_GG(x5)

LESSLEAVES_IN_AA(x1, x2)  =  LESSLEAVES_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)

APP_IN_AAA(x1, x2, x3)  =  APP_IN_AAA

U4_AAA(x1, x2, x3)  =  U4_AAA(x3)

EQ_IN_AA(x1, x2)  =  EQ_IN_AA

U5_AAA(x1, x2, x3, x4, x5)  =  U5_AAA(x5)

HEAD_IN_AA(x1, x2)  =  HEAD_IN_AA

U6_AAA(x1, x2, x3, x4, x5)  =  U6_AAA(x5)

TAIL_IN_AA(x1, x2)  =  TAIL_IN_AA

U7_AAA(x1, x2, x3, x4, x5)  =  U7_AAA(x5)

U2_AA(x1, x2, x3, x4, x5, x6)  =  U2_AA(x6)

U3_AA(x1, x2, x3, x4, x5)  =  U3_AA(x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(6)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   LESSLEAVES_IN_GG(cons(U, V), cons(W, Z)) -> U1_GG(U, V, W, Z, app_in_gga(U, V, U1))
   LESSLEAVES_IN_GG(cons(U, V), cons(W, Z)) -> APP_IN_GGA(U, V, U1)
   APP_IN_GGA(nil, Y, Z) -> U4_GGA(Y, Z, eq_in_ga(Y, Z))
   APP_IN_GGA(nil, Y, Z) -> EQ_IN_GA(Y, Z)
   APP_IN_GGA(X, Y, cons(U, Z)) -> U5_GGA(X, Y, U, Z, head_in_ga(X, U))
   APP_IN_GGA(X, Y, cons(U, Z)) -> HEAD_IN_GA(X, U)
   U5_GGA(X, Y, U, Z, head_out_ga(X, U)) -> U6_GGA(X, Y, U, Z, tail_in_ga(X, V))
   U5_GGA(X, Y, U, Z, head_out_ga(X, U)) -> TAIL_IN_GA(X, V)
   U6_GGA(X, Y, U, Z, tail_out_ga(X, V)) -> U7_GGA(X, Y, U, Z, app_in_gga(V, Y, Z))
   U6_GGA(X, Y, U, Z, tail_out_ga(X, V)) -> APP_IN_GGA(V, Y, Z)
   U1_GG(U, V, W, Z, app_out_gga(U, V, U1)) -> U2_GG(U, V, W, Z, U1, app_in_gga(W, Z, W1))
   U1_GG(U, V, W, Z, app_out_gga(U, V, U1)) -> APP_IN_GGA(W, Z, W1)
   U2_GG(U, V, W, Z, U1, app_out_gga(W, Z, W1)) -> U3_GG(U, V, W, Z, lessleaves_in_aa(U1, W1))
   U2_GG(U, V, W, Z, U1, app_out_gga(W, Z, W1)) -> LESSLEAVES_IN_AA(U1, W1)
   LESSLEAVES_IN_AA(cons(U, V), cons(W, Z)) -> U1_AA(U, V, W, Z, app_in_aaa(U, V, U1))
   LESSLEAVES_IN_AA(cons(U, V), cons(W, Z)) -> APP_IN_AAA(U, V, U1)
   APP_IN_AAA(nil, Y, Z) -> U4_AAA(Y, Z, eq_in_aa(Y, Z))
   APP_IN_AAA(nil, Y, Z) -> EQ_IN_AA(Y, Z)
   APP_IN_AAA(X, Y, cons(U, Z)) -> U5_AAA(X, Y, U, Z, head_in_aa(X, U))
   APP_IN_AAA(X, Y, cons(U, Z)) -> HEAD_IN_AA(X, U)
   U5_AAA(X, Y, U, Z, head_out_aa(X, U)) -> U6_AAA(X, Y, U, Z, tail_in_aa(X, V))
   U5_AAA(X, Y, U, Z, head_out_aa(X, U)) -> TAIL_IN_AA(X, V)
   U6_AAA(X, Y, U, Z, tail_out_aa(X, V)) -> U7_AAA(X, Y, U, Z, app_in_aaa(V, Y, Z))
   U6_AAA(X, Y, U, Z, tail_out_aa(X, V)) -> APP_IN_AAA(V, Y, Z)
   U1_AA(U, V, W, Z, app_out_aaa(U, V, U1)) -> U2_AA(U, V, W, Z, U1, app_in_aaa(W, Z, W1))
   U1_AA(U, V, W, Z, app_out_aaa(U, V, U1)) -> APP_IN_AAA(W, Z, W1)
   U2_AA(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> U3_AA(U, V, W, Z, lessleaves_in_aa(U1, W1))
   U2_AA(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> LESSLEAVES_IN_AA(U1, W1)

The TRS R consists of the following rules:

   lessleaves_in_gg(nil, cons(X1, X2)) -> lessleaves_out_gg(nil, cons(X1, X2))
   lessleaves_in_gg(cons(U, V), cons(W, Z)) -> U1_gg(U, V, W, Z, app_in_gga(U, V, U1))
   app_in_gga(nil, Y, Z) -> U4_gga(Y, Z, eq_in_ga(Y, Z))
   eq_in_ga(X, X) -> eq_out_ga(X, X)
   U4_gga(Y, Z, eq_out_ga(Y, Z)) -> app_out_gga(nil, Y, Z)
   app_in_gga(X, Y, cons(U, Z)) -> U5_gga(X, Y, U, Z, head_in_ga(X, U))
   head_in_ga([], X3) -> head_out_ga([], X3)
   head_in_ga(.(X, X4), X) -> head_out_ga(.(X, X4), X)
   U5_gga(X, Y, U, Z, head_out_ga(X, U)) -> U6_gga(X, Y, U, Z, tail_in_ga(X, V))
   tail_in_ga([], []) -> tail_out_ga([], [])
   tail_in_ga(.(X5, X), X) -> tail_out_ga(.(X5, X), X)
   U6_gga(X, Y, U, Z, tail_out_ga(X, V)) -> U7_gga(X, Y, U, Z, app_in_gga(V, Y, Z))
   U7_gga(X, Y, U, Z, app_out_gga(V, Y, Z)) -> app_out_gga(X, Y, cons(U, Z))
   U1_gg(U, V, W, Z, app_out_gga(U, V, U1)) -> U2_gg(U, V, W, Z, U1, app_in_gga(W, Z, W1))
   U2_gg(U, V, W, Z, U1, app_out_gga(W, Z, W1)) -> U3_gg(U, V, W, Z, lessleaves_in_aa(U1, W1))
   lessleaves_in_aa(nil, cons(X1, X2)) -> lessleaves_out_aa(nil, cons(X1, X2))
   lessleaves_in_aa(cons(U, V), cons(W, Z)) -> U1_aa(U, V, W, Z, app_in_aaa(U, V, U1))
   app_in_aaa(nil, Y, Z) -> U4_aaa(Y, Z, eq_in_aa(Y, Z))
   eq_in_aa(X, X) -> eq_out_aa(X, X)
   U4_aaa(Y, Z, eq_out_aa(Y, Z)) -> app_out_aaa(nil, Y, Z)
   app_in_aaa(X, Y, cons(U, Z)) -> U5_aaa(X, Y, U, Z, head_in_aa(X, U))
   head_in_aa([], X3) -> head_out_aa([], X3)
   head_in_aa(.(X, X4), X) -> head_out_aa(.(X, X4), X)
   U5_aaa(X, Y, U, Z, head_out_aa(X, U)) -> U6_aaa(X, Y, U, Z, tail_in_aa(X, V))
   tail_in_aa([], []) -> tail_out_aa([], [])
   tail_in_aa(.(X5, X), X) -> tail_out_aa(.(X5, X), X)
   U6_aaa(X, Y, U, Z, tail_out_aa(X, V)) -> U7_aaa(X, Y, U, Z, app_in_aaa(V, Y, Z))
   U7_aaa(X, Y, U, Z, app_out_aaa(V, Y, Z)) -> app_out_aaa(X, Y, cons(U, Z))
   U1_aa(U, V, W, Z, app_out_aaa(U, V, U1)) -> U2_aa(U, V, W, Z, U1, app_in_aaa(W, Z, W1))
   U2_aa(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> U3_aa(U, V, W, Z, lessleaves_in_aa(U1, W1))
   U3_aa(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_aa(cons(U, V), cons(W, Z))
   U3_gg(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_gg(cons(U, V), cons(W, Z))

The argument filtering Pi contains the following mapping:
lessleaves_in_gg(x1, x2)  =  lessleaves_in_gg(x1, x2)

nil  =  nil

cons(x1, x2)  =  cons(x1, x2)

lessleaves_out_gg(x1, x2)  =  lessleaves_out_gg

U1_gg(x1, x2, x3, x4, x5)  =  U1_gg(x3, x4, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

U4_gga(x1, x2, x3)  =  U4_gga(x3)

eq_in_ga(x1, x2)  =  eq_in_ga(x1)

eq_out_ga(x1, x2)  =  eq_out_ga(x2)

app_out_gga(x1, x2, x3)  =  app_out_gga

U5_gga(x1, x2, x3, x4, x5)  =  U5_gga(x1, x2, x5)

head_in_ga(x1, x2)  =  head_in_ga(x1)

[]  =  []

head_out_ga(x1, x2)  =  head_out_ga

.(x1, x2)  =  .(x1, x2)

U6_gga(x1, x2, x3, x4, x5)  =  U6_gga(x2, x5)

tail_in_ga(x1, x2)  =  tail_in_ga(x1)

tail_out_ga(x1, x2)  =  tail_out_ga(x2)

U7_gga(x1, x2, x3, x4, x5)  =  U7_gga(x5)

U2_gg(x1, x2, x3, x4, x5, x6)  =  U2_gg(x6)

U3_gg(x1, x2, x3, x4, x5)  =  U3_gg(x5)

lessleaves_in_aa(x1, x2)  =  lessleaves_in_aa

lessleaves_out_aa(x1, x2)  =  lessleaves_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

U4_aaa(x1, x2, x3)  =  U4_aaa(x3)

eq_in_aa(x1, x2)  =  eq_in_aa'

eq_out_aa(x1, x2)  =  eq_out_aa

app_out_aaa(x1, x2, x3)  =  app_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

head_in_aa(x1, x2)  =  head_in_aa

head_out_aa(x1, x2)  =  head_out_aa

U6_aaa(x1, x2, x3, x4, x5)  =  U6_aaa(x5)

tail_in_aa(x1, x2)  =  tail_in_aa

tail_out_aa(x1, x2)  =  tail_out_aa

U7_aaa(x1, x2, x3, x4, x5)  =  U7_aaa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x5)

LESSLEAVES_IN_GG(x1, x2)  =  LESSLEAVES_IN_GG(x1, x2)

U1_GG(x1, x2, x3, x4, x5)  =  U1_GG(x3, x4, x5)

APP_IN_GGA(x1, x2, x3)  =  APP_IN_GGA(x1, x2)

U4_GGA(x1, x2, x3)  =  U4_GGA(x3)

EQ_IN_GA(x1, x2)  =  EQ_IN_GA(x1)

U5_GGA(x1, x2, x3, x4, x5)  =  U5_GGA(x1, x2, x5)

HEAD_IN_GA(x1, x2)  =  HEAD_IN_GA(x1)

U6_GGA(x1, x2, x3, x4, x5)  =  U6_GGA(x2, x5)

TAIL_IN_GA(x1, x2)  =  TAIL_IN_GA(x1)

U7_GGA(x1, x2, x3, x4, x5)  =  U7_GGA(x5)

U2_GG(x1, x2, x3, x4, x5, x6)  =  U2_GG(x6)

U3_GG(x1, x2, x3, x4, x5)  =  U3_GG(x5)

LESSLEAVES_IN_AA(x1, x2)  =  LESSLEAVES_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)

APP_IN_AAA(x1, x2, x3)  =  APP_IN_AAA

U4_AAA(x1, x2, x3)  =  U4_AAA(x3)

EQ_IN_AA(x1, x2)  =  EQ_IN_AA

U5_AAA(x1, x2, x3, x4, x5)  =  U5_AAA(x5)

HEAD_IN_AA(x1, x2)  =  HEAD_IN_AA

U6_AAA(x1, x2, x3, x4, x5)  =  U6_AAA(x5)

TAIL_IN_AA(x1, x2)  =  TAIL_IN_AA

U7_AAA(x1, x2, x3, x4, x5)  =  U7_AAA(x5)

U2_AA(x1, x2, x3, x4, x5, x6)  =  U2_AA(x6)

U3_AA(x1, x2, x3, x4, x5)  =  U3_AA(x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(7) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 3 SCCs with 19 less nodes.
----------------------------------------

(8)
Complex Obligation (AND)

----------------------------------------

(9)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_AAA(X, Y, cons(U, Z)) -> U5_AAA(X, Y, U, Z, head_in_aa(X, U))
   U5_AAA(X, Y, U, Z, head_out_aa(X, U)) -> U6_AAA(X, Y, U, Z, tail_in_aa(X, V))
   U6_AAA(X, Y, U, Z, tail_out_aa(X, V)) -> APP_IN_AAA(V, Y, Z)

The TRS R consists of the following rules:

   lessleaves_in_gg(nil, cons(X1, X2)) -> lessleaves_out_gg(nil, cons(X1, X2))
   lessleaves_in_gg(cons(U, V), cons(W, Z)) -> U1_gg(U, V, W, Z, app_in_gga(U, V, U1))
   app_in_gga(nil, Y, Z) -> U4_gga(Y, Z, eq_in_ga(Y, Z))
   eq_in_ga(X, X) -> eq_out_ga(X, X)
   U4_gga(Y, Z, eq_out_ga(Y, Z)) -> app_out_gga(nil, Y, Z)
   app_in_gga(X, Y, cons(U, Z)) -> U5_gga(X, Y, U, Z, head_in_ga(X, U))
   head_in_ga([], X3) -> head_out_ga([], X3)
   head_in_ga(.(X, X4), X) -> head_out_ga(.(X, X4), X)
   U5_gga(X, Y, U, Z, head_out_ga(X, U)) -> U6_gga(X, Y, U, Z, tail_in_ga(X, V))
   tail_in_ga([], []) -> tail_out_ga([], [])
   tail_in_ga(.(X5, X), X) -> tail_out_ga(.(X5, X), X)
   U6_gga(X, Y, U, Z, tail_out_ga(X, V)) -> U7_gga(X, Y, U, Z, app_in_gga(V, Y, Z))
   U7_gga(X, Y, U, Z, app_out_gga(V, Y, Z)) -> app_out_gga(X, Y, cons(U, Z))
   U1_gg(U, V, W, Z, app_out_gga(U, V, U1)) -> U2_gg(U, V, W, Z, U1, app_in_gga(W, Z, W1))
   U2_gg(U, V, W, Z, U1, app_out_gga(W, Z, W1)) -> U3_gg(U, V, W, Z, lessleaves_in_aa(U1, W1))
   lessleaves_in_aa(nil, cons(X1, X2)) -> lessleaves_out_aa(nil, cons(X1, X2))
   lessleaves_in_aa(cons(U, V), cons(W, Z)) -> U1_aa(U, V, W, Z, app_in_aaa(U, V, U1))
   app_in_aaa(nil, Y, Z) -> U4_aaa(Y, Z, eq_in_aa(Y, Z))
   eq_in_aa(X, X) -> eq_out_aa(X, X)
   U4_aaa(Y, Z, eq_out_aa(Y, Z)) -> app_out_aaa(nil, Y, Z)
   app_in_aaa(X, Y, cons(U, Z)) -> U5_aaa(X, Y, U, Z, head_in_aa(X, U))
   head_in_aa([], X3) -> head_out_aa([], X3)
   head_in_aa(.(X, X4), X) -> head_out_aa(.(X, X4), X)
   U5_aaa(X, Y, U, Z, head_out_aa(X, U)) -> U6_aaa(X, Y, U, Z, tail_in_aa(X, V))
   tail_in_aa([], []) -> tail_out_aa([], [])
   tail_in_aa(.(X5, X), X) -> tail_out_aa(.(X5, X), X)
   U6_aaa(X, Y, U, Z, tail_out_aa(X, V)) -> U7_aaa(X, Y, U, Z, app_in_aaa(V, Y, Z))
   U7_aaa(X, Y, U, Z, app_out_aaa(V, Y, Z)) -> app_out_aaa(X, Y, cons(U, Z))
   U1_aa(U, V, W, Z, app_out_aaa(U, V, U1)) -> U2_aa(U, V, W, Z, U1, app_in_aaa(W, Z, W1))
   U2_aa(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> U3_aa(U, V, W, Z, lessleaves_in_aa(U1, W1))
   U3_aa(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_aa(cons(U, V), cons(W, Z))
   U3_gg(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_gg(cons(U, V), cons(W, Z))

The argument filtering Pi contains the following mapping:
lessleaves_in_gg(x1, x2)  =  lessleaves_in_gg(x1, x2)

nil  =  nil

cons(x1, x2)  =  cons(x1, x2)

lessleaves_out_gg(x1, x2)  =  lessleaves_out_gg

U1_gg(x1, x2, x3, x4, x5)  =  U1_gg(x3, x4, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

U4_gga(x1, x2, x3)  =  U4_gga(x3)

eq_in_ga(x1, x2)  =  eq_in_ga(x1)

eq_out_ga(x1, x2)  =  eq_out_ga(x2)

app_out_gga(x1, x2, x3)  =  app_out_gga

U5_gga(x1, x2, x3, x4, x5)  =  U5_gga(x1, x2, x5)

head_in_ga(x1, x2)  =  head_in_ga(x1)

[]  =  []

head_out_ga(x1, x2)  =  head_out_ga

.(x1, x2)  =  .(x1, x2)

U6_gga(x1, x2, x3, x4, x5)  =  U6_gga(x2, x5)

tail_in_ga(x1, x2)  =  tail_in_ga(x1)

tail_out_ga(x1, x2)  =  tail_out_ga(x2)

U7_gga(x1, x2, x3, x4, x5)  =  U7_gga(x5)

U2_gg(x1, x2, x3, x4, x5, x6)  =  U2_gg(x6)

U3_gg(x1, x2, x3, x4, x5)  =  U3_gg(x5)

lessleaves_in_aa(x1, x2)  =  lessleaves_in_aa

lessleaves_out_aa(x1, x2)  =  lessleaves_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

U4_aaa(x1, x2, x3)  =  U4_aaa(x3)

eq_in_aa(x1, x2)  =  eq_in_aa

eq_out_aa(x1, x2)  =  eq_out_aa

app_out_aaa(x1, x2, x3)  =  app_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

head_in_aa(x1, x2)  =  head_in_aa

head_out_aa(x1, x2)  =  head_out_aa

U6_aaa(x1, x2, x3, x4, x5)  =  U6_aaa(x5)

tail_in_aa(x1, x2)  =  tail_in_aa

tail_out_aa(x1, x2)  =  tail_out_aa

U7_aaa(x1, x2, x3, x4, x5)  =  U7_aaa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x5)

APP_IN_AAA(x1, x2, x3)  =  APP_IN_AAA

U5_AAA(x1, x2, x3, x4, x5)  =  U5_AAA(x5)

U6_AAA(x1, x2, x3, x4, x5)  =  U6_AAA(x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(10) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(11)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_AAA(X, Y, cons(U, Z)) -> U5_AAA(X, Y, U, Z, head_in_aa(X, U))
   U5_AAA(X, Y, U, Z, head_out_aa(X, U)) -> U6_AAA(X, Y, U, Z, tail_in_aa(X, V))
   U6_AAA(X, Y, U, Z, tail_out_aa(X, V)) -> APP_IN_AAA(V, Y, Z)

The TRS R consists of the following rules:

   head_in_aa([], X3) -> head_out_aa([], X3)
   head_in_aa(.(X, X4), X) -> head_out_aa(.(X, X4), X)
   tail_in_aa([], []) -> tail_out_aa([], [])
   tail_in_aa(.(X5, X), X) -> tail_out_aa(.(X5, X), X)

The argument filtering Pi contains the following mapping:
cons(x1, x2)  =  cons(x1, x2)

[]  =  []

.(x1, x2)  =  .(x1, x2)

head_in_aa(x1, x2)  =  head_in_aa

head_out_aa(x1, x2)  =  head_out_aa

tail_in_aa(x1, x2)  =  tail_in_aa

tail_out_aa(x1, x2)  =  tail_out_aa

APP_IN_AAA(x1, x2, x3)  =  APP_IN_AAA

U5_AAA(x1, x2, x3, x4, x5)  =  U5_AAA(x5)

U6_AAA(x1, x2, x3, x4, x5)  =  U6_AAA(x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(12) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(13)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APP_IN_AAA -> U5_AAA(head_in_aa)
   U5_AAA(head_out_aa) -> U6_AAA(tail_in_aa)
   U6_AAA(tail_out_aa) -> APP_IN_AAA

The TRS R consists of the following rules:

   head_in_aa -> head_out_aa
   tail_in_aa -> tail_out_aa

The set Q consists of the following terms:

   head_in_aa
   tail_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(14) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule APP_IN_AAA -> U5_AAA(head_in_aa) at position [0] we obtained the following new rules [LPAR04]:

   (APP_IN_AAA -> U5_AAA(head_out_aa),APP_IN_AAA -> U5_AAA(head_out_aa))


----------------------------------------

(15)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5_AAA(head_out_aa) -> U6_AAA(tail_in_aa)
   U6_AAA(tail_out_aa) -> APP_IN_AAA
   APP_IN_AAA -> U5_AAA(head_out_aa)

The TRS R consists of the following rules:

   head_in_aa -> head_out_aa
   tail_in_aa -> tail_out_aa

The set Q consists of the following terms:

   head_in_aa
   tail_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(16) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(17)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5_AAA(head_out_aa) -> U6_AAA(tail_in_aa)
   U6_AAA(tail_out_aa) -> APP_IN_AAA
   APP_IN_AAA -> U5_AAA(head_out_aa)

The TRS R consists of the following rules:

   tail_in_aa -> tail_out_aa

The set Q consists of the following terms:

   head_in_aa
   tail_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(18) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   head_in_aa


----------------------------------------

(19)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5_AAA(head_out_aa) -> U6_AAA(tail_in_aa)
   U6_AAA(tail_out_aa) -> APP_IN_AAA
   APP_IN_AAA -> U5_AAA(head_out_aa)

The TRS R consists of the following rules:

   tail_in_aa -> tail_out_aa

The set Q consists of the following terms:

   tail_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(20) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule U5_AAA(head_out_aa) -> U6_AAA(tail_in_aa) at position [0] we obtained the following new rules [LPAR04]:

   (U5_AAA(head_out_aa) -> U6_AAA(tail_out_aa),U5_AAA(head_out_aa) -> U6_AAA(tail_out_aa))


----------------------------------------

(21)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U6_AAA(tail_out_aa) -> APP_IN_AAA
   APP_IN_AAA -> U5_AAA(head_out_aa)
   U5_AAA(head_out_aa) -> U6_AAA(tail_out_aa)

The TRS R consists of the following rules:

   tail_in_aa -> tail_out_aa

The set Q consists of the following terms:

   tail_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(22) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(23)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U6_AAA(tail_out_aa) -> APP_IN_AAA
   APP_IN_AAA -> U5_AAA(head_out_aa)
   U5_AAA(head_out_aa) -> U6_AAA(tail_out_aa)

R is empty.
The set Q consists of the following terms:

   tail_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(24) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   tail_in_aa


----------------------------------------

(25)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U6_AAA(tail_out_aa) -> APP_IN_AAA
   APP_IN_AAA -> U5_AAA(head_out_aa)
   U5_AAA(head_out_aa) -> U6_AAA(tail_out_aa)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(26) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by narrowing to the left:

s = APP_IN_AAA evaluates to  t =APP_IN_AAA

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

APP_IN_AAA -> U5_AAA(head_out_aa)
with rule APP_IN_AAA -> U5_AAA(head_out_aa) at position [] and matcher [ ]

U5_AAA(head_out_aa) -> U6_AAA(tail_out_aa)
with rule U5_AAA(head_out_aa) -> U6_AAA(tail_out_aa) at position [] and matcher [ ]

U6_AAA(tail_out_aa) -> APP_IN_AAA
with rule U6_AAA(tail_out_aa) -> APP_IN_AAA

Now applying the matcher to the start term leads to a term which is equal to the last term in the rewriting sequence


All these steps are and every following step will be a correct step w.r.t to Q.




----------------------------------------

(27)
NO

----------------------------------------

(28)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U1_AA(U, V, W, Z, app_out_aaa(U, V, U1)) -> U2_AA(U, V, W, Z, U1, app_in_aaa(W, Z, W1))
   U2_AA(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> LESSLEAVES_IN_AA(U1, W1)
   LESSLEAVES_IN_AA(cons(U, V), cons(W, Z)) -> U1_AA(U, V, W, Z, app_in_aaa(U, V, U1))

The TRS R consists of the following rules:

   lessleaves_in_gg(nil, cons(X1, X2)) -> lessleaves_out_gg(nil, cons(X1, X2))
   lessleaves_in_gg(cons(U, V), cons(W, Z)) -> U1_gg(U, V, W, Z, app_in_gga(U, V, U1))
   app_in_gga(nil, Y, Z) -> U4_gga(Y, Z, eq_in_ga(Y, Z))
   eq_in_ga(X, X) -> eq_out_ga(X, X)
   U4_gga(Y, Z, eq_out_ga(Y, Z)) -> app_out_gga(nil, Y, Z)
   app_in_gga(X, Y, cons(U, Z)) -> U5_gga(X, Y, U, Z, head_in_ga(X, U))
   head_in_ga([], X3) -> head_out_ga([], X3)
   head_in_ga(.(X, X4), X) -> head_out_ga(.(X, X4), X)
   U5_gga(X, Y, U, Z, head_out_ga(X, U)) -> U6_gga(X, Y, U, Z, tail_in_ga(X, V))
   tail_in_ga([], []) -> tail_out_ga([], [])
   tail_in_ga(.(X5, X), X) -> tail_out_ga(.(X5, X), X)
   U6_gga(X, Y, U, Z, tail_out_ga(X, V)) -> U7_gga(X, Y, U, Z, app_in_gga(V, Y, Z))
   U7_gga(X, Y, U, Z, app_out_gga(V, Y, Z)) -> app_out_gga(X, Y, cons(U, Z))
   U1_gg(U, V, W, Z, app_out_gga(U, V, U1)) -> U2_gg(U, V, W, Z, U1, app_in_gga(W, Z, W1))
   U2_gg(U, V, W, Z, U1, app_out_gga(W, Z, W1)) -> U3_gg(U, V, W, Z, lessleaves_in_aa(U1, W1))
   lessleaves_in_aa(nil, cons(X1, X2)) -> lessleaves_out_aa(nil, cons(X1, X2))
   lessleaves_in_aa(cons(U, V), cons(W, Z)) -> U1_aa(U, V, W, Z, app_in_aaa(U, V, U1))
   app_in_aaa(nil, Y, Z) -> U4_aaa(Y, Z, eq_in_aa(Y, Z))
   eq_in_aa(X, X) -> eq_out_aa(X, X)
   U4_aaa(Y, Z, eq_out_aa(Y, Z)) -> app_out_aaa(nil, Y, Z)
   app_in_aaa(X, Y, cons(U, Z)) -> U5_aaa(X, Y, U, Z, head_in_aa(X, U))
   head_in_aa([], X3) -> head_out_aa([], X3)
   head_in_aa(.(X, X4), X) -> head_out_aa(.(X, X4), X)
   U5_aaa(X, Y, U, Z, head_out_aa(X, U)) -> U6_aaa(X, Y, U, Z, tail_in_aa(X, V))
   tail_in_aa([], []) -> tail_out_aa([], [])
   tail_in_aa(.(X5, X), X) -> tail_out_aa(.(X5, X), X)
   U6_aaa(X, Y, U, Z, tail_out_aa(X, V)) -> U7_aaa(X, Y, U, Z, app_in_aaa(V, Y, Z))
   U7_aaa(X, Y, U, Z, app_out_aaa(V, Y, Z)) -> app_out_aaa(X, Y, cons(U, Z))
   U1_aa(U, V, W, Z, app_out_aaa(U, V, U1)) -> U2_aa(U, V, W, Z, U1, app_in_aaa(W, Z, W1))
   U2_aa(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> U3_aa(U, V, W, Z, lessleaves_in_aa(U1, W1))
   U3_aa(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_aa(cons(U, V), cons(W, Z))
   U3_gg(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_gg(cons(U, V), cons(W, Z))

The argument filtering Pi contains the following mapping:
lessleaves_in_gg(x1, x2)  =  lessleaves_in_gg(x1, x2)

nil  =  nil

cons(x1, x2)  =  cons(x1, x2)

lessleaves_out_gg(x1, x2)  =  lessleaves_out_gg

U1_gg(x1, x2, x3, x4, x5)  =  U1_gg(x3, x4, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

U4_gga(x1, x2, x3)  =  U4_gga(x3)

eq_in_ga(x1, x2)  =  eq_in_ga(x1)

eq_out_ga(x1, x2)  =  eq_out_ga(x2)

app_out_gga(x1, x2, x3)  =  app_out_gga

U5_gga(x1, x2, x3, x4, x5)  =  U5_gga(x1, x2, x5)

head_in_ga(x1, x2)  =  head_in_ga(x1)

[]  =  []

head_out_ga(x1, x2)  =  head_out_ga

.(x1, x2)  =  .(x1, x2)

U6_gga(x1, x2, x3, x4, x5)  =  U6_gga(x2, x5)

tail_in_ga(x1, x2)  =  tail_in_ga(x1)

tail_out_ga(x1, x2)  =  tail_out_ga(x2)

U7_gga(x1, x2, x3, x4, x5)  =  U7_gga(x5)

U2_gg(x1, x2, x3, x4, x5, x6)  =  U2_gg(x6)

U3_gg(x1, x2, x3, x4, x5)  =  U3_gg(x5)

lessleaves_in_aa(x1, x2)  =  lessleaves_in_aa

lessleaves_out_aa(x1, x2)  =  lessleaves_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

U4_aaa(x1, x2, x3)  =  U4_aaa(x3)

eq_in_aa(x1, x2)  =  eq_in_aa

eq_out_aa(x1, x2)  =  eq_out_aa

app_out_aaa(x1, x2, x3)  =  app_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

head_in_aa(x1, x2)  =  head_in_aa

head_out_aa(x1, x2)  =  head_out_aa

U6_aaa(x1, x2, x3, x4, x5)  =  U6_aaa(x5)

tail_in_aa(x1, x2)  =  tail_in_aa

tail_out_aa(x1, x2)  =  tail_out_aa

U7_aaa(x1, x2, x3, x4, x5)  =  U7_aaa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x5)

LESSLEAVES_IN_AA(x1, x2)  =  LESSLEAVES_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)

U2_AA(x1, x2, x3, x4, x5, x6)  =  U2_AA(x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(29) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(30)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U1_AA(U, V, W, Z, app_out_aaa(U, V, U1)) -> U2_AA(U, V, W, Z, U1, app_in_aaa(W, Z, W1))
   U2_AA(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> LESSLEAVES_IN_AA(U1, W1)
   LESSLEAVES_IN_AA(cons(U, V), cons(W, Z)) -> U1_AA(U, V, W, Z, app_in_aaa(U, V, U1))

The TRS R consists of the following rules:

   app_in_aaa(nil, Y, Z) -> U4_aaa(Y, Z, eq_in_aa(Y, Z))
   app_in_aaa(X, Y, cons(U, Z)) -> U5_aaa(X, Y, U, Z, head_in_aa(X, U))
   U4_aaa(Y, Z, eq_out_aa(Y, Z)) -> app_out_aaa(nil, Y, Z)
   U5_aaa(X, Y, U, Z, head_out_aa(X, U)) -> U6_aaa(X, Y, U, Z, tail_in_aa(X, V))
   eq_in_aa(X, X) -> eq_out_aa(X, X)
   head_in_aa([], X3) -> head_out_aa([], X3)
   head_in_aa(.(X, X4), X) -> head_out_aa(.(X, X4), X)
   U6_aaa(X, Y, U, Z, tail_out_aa(X, V)) -> U7_aaa(X, Y, U, Z, app_in_aaa(V, Y, Z))
   tail_in_aa([], []) -> tail_out_aa([], [])
   tail_in_aa(.(X5, X), X) -> tail_out_aa(.(X5, X), X)
   U7_aaa(X, Y, U, Z, app_out_aaa(V, Y, Z)) -> app_out_aaa(X, Y, cons(U, Z))

The argument filtering Pi contains the following mapping:
nil  =  nil

cons(x1, x2)  =  cons(x1, x2)

[]  =  []

.(x1, x2)  =  .(x1, x2)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

U4_aaa(x1, x2, x3)  =  U4_aaa(x3)

eq_in_aa(x1, x2)  =  eq_in_aa

eq_out_aa(x1, x2)  =  eq_out_aa

app_out_aaa(x1, x2, x3)  =  app_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

head_in_aa(x1, x2)  =  head_in_aa

head_out_aa(x1, x2)  =  head_out_aa

U6_aaa(x1, x2, x3, x4, x5)  =  U6_aaa(x5)

tail_in_aa(x1, x2)  =  tail_in_aa

tail_out_aa(x1, x2)  =  tail_out_aa

U7_aaa(x1, x2, x3, x4, x5)  =  U7_aaa(x5)

LESSLEAVES_IN_AA(x1, x2)  =  LESSLEAVES_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)

U2_AA(x1, x2, x3, x4, x5, x6)  =  U2_AA(x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(31) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(32)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U1_AA(app_out_aaa) -> U2_AA(app_in_aaa)
   U2_AA(app_out_aaa) -> LESSLEAVES_IN_AA
   LESSLEAVES_IN_AA -> U1_AA(app_in_aaa)

The TRS R consists of the following rules:

   app_in_aaa -> U4_aaa(eq_in_aa)
   app_in_aaa -> U5_aaa(head_in_aa)
   U4_aaa(eq_out_aa) -> app_out_aaa
   U5_aaa(head_out_aa) -> U6_aaa(tail_in_aa)
   eq_in_aa -> eq_out_aa
   head_in_aa -> head_out_aa
   U6_aaa(tail_out_aa) -> U7_aaa(app_in_aaa)
   tail_in_aa -> tail_out_aa
   U7_aaa(app_out_aaa) -> app_out_aaa

The set Q consists of the following terms:

   app_in_aaa
   U4_aaa(x0)
   U5_aaa(x0)
   eq_in_aa
   head_in_aa
   U6_aaa(x0)
   tail_in_aa
   U7_aaa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(33)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_GGA(X, Y, cons(U, Z)) -> U5_GGA(X, Y, U, Z, head_in_ga(X, U))
   U5_GGA(X, Y, U, Z, head_out_ga(X, U)) -> U6_GGA(X, Y, U, Z, tail_in_ga(X, V))
   U6_GGA(X, Y, U, Z, tail_out_ga(X, V)) -> APP_IN_GGA(V, Y, Z)

The TRS R consists of the following rules:

   lessleaves_in_gg(nil, cons(X1, X2)) -> lessleaves_out_gg(nil, cons(X1, X2))
   lessleaves_in_gg(cons(U, V), cons(W, Z)) -> U1_gg(U, V, W, Z, app_in_gga(U, V, U1))
   app_in_gga(nil, Y, Z) -> U4_gga(Y, Z, eq_in_ga(Y, Z))
   eq_in_ga(X, X) -> eq_out_ga(X, X)
   U4_gga(Y, Z, eq_out_ga(Y, Z)) -> app_out_gga(nil, Y, Z)
   app_in_gga(X, Y, cons(U, Z)) -> U5_gga(X, Y, U, Z, head_in_ga(X, U))
   head_in_ga([], X3) -> head_out_ga([], X3)
   head_in_ga(.(X, X4), X) -> head_out_ga(.(X, X4), X)
   U5_gga(X, Y, U, Z, head_out_ga(X, U)) -> U6_gga(X, Y, U, Z, tail_in_ga(X, V))
   tail_in_ga([], []) -> tail_out_ga([], [])
   tail_in_ga(.(X5, X), X) -> tail_out_ga(.(X5, X), X)
   U6_gga(X, Y, U, Z, tail_out_ga(X, V)) -> U7_gga(X, Y, U, Z, app_in_gga(V, Y, Z))
   U7_gga(X, Y, U, Z, app_out_gga(V, Y, Z)) -> app_out_gga(X, Y, cons(U, Z))
   U1_gg(U, V, W, Z, app_out_gga(U, V, U1)) -> U2_gg(U, V, W, Z, U1, app_in_gga(W, Z, W1))
   U2_gg(U, V, W, Z, U1, app_out_gga(W, Z, W1)) -> U3_gg(U, V, W, Z, lessleaves_in_aa(U1, W1))
   lessleaves_in_aa(nil, cons(X1, X2)) -> lessleaves_out_aa(nil, cons(X1, X2))
   lessleaves_in_aa(cons(U, V), cons(W, Z)) -> U1_aa(U, V, W, Z, app_in_aaa(U, V, U1))
   app_in_aaa(nil, Y, Z) -> U4_aaa(Y, Z, eq_in_aa(Y, Z))
   eq_in_aa(X, X) -> eq_out_aa(X, X)
   U4_aaa(Y, Z, eq_out_aa(Y, Z)) -> app_out_aaa(nil, Y, Z)
   app_in_aaa(X, Y, cons(U, Z)) -> U5_aaa(X, Y, U, Z, head_in_aa(X, U))
   head_in_aa([], X3) -> head_out_aa([], X3)
   head_in_aa(.(X, X4), X) -> head_out_aa(.(X, X4), X)
   U5_aaa(X, Y, U, Z, head_out_aa(X, U)) -> U6_aaa(X, Y, U, Z, tail_in_aa(X, V))
   tail_in_aa([], []) -> tail_out_aa([], [])
   tail_in_aa(.(X5, X), X) -> tail_out_aa(.(X5, X), X)
   U6_aaa(X, Y, U, Z, tail_out_aa(X, V)) -> U7_aaa(X, Y, U, Z, app_in_aaa(V, Y, Z))
   U7_aaa(X, Y, U, Z, app_out_aaa(V, Y, Z)) -> app_out_aaa(X, Y, cons(U, Z))
   U1_aa(U, V, W, Z, app_out_aaa(U, V, U1)) -> U2_aa(U, V, W, Z, U1, app_in_aaa(W, Z, W1))
   U2_aa(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> U3_aa(U, V, W, Z, lessleaves_in_aa(U1, W1))
   U3_aa(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_aa(cons(U, V), cons(W, Z))
   U3_gg(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_gg(cons(U, V), cons(W, Z))

The argument filtering Pi contains the following mapping:
lessleaves_in_gg(x1, x2)  =  lessleaves_in_gg(x1, x2)

nil  =  nil

cons(x1, x2)  =  cons(x1, x2)

lessleaves_out_gg(x1, x2)  =  lessleaves_out_gg

U1_gg(x1, x2, x3, x4, x5)  =  U1_gg(x3, x4, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

U4_gga(x1, x2, x3)  =  U4_gga(x3)

eq_in_ga(x1, x2)  =  eq_in_ga(x1)

eq_out_ga(x1, x2)  =  eq_out_ga(x2)

app_out_gga(x1, x2, x3)  =  app_out_gga

U5_gga(x1, x2, x3, x4, x5)  =  U5_gga(x1, x2, x5)

head_in_ga(x1, x2)  =  head_in_ga(x1)

[]  =  []

head_out_ga(x1, x2)  =  head_out_ga

.(x1, x2)  =  .(x1, x2)

U6_gga(x1, x2, x3, x4, x5)  =  U6_gga(x2, x5)

tail_in_ga(x1, x2)  =  tail_in_ga(x1)

tail_out_ga(x1, x2)  =  tail_out_ga(x2)

U7_gga(x1, x2, x3, x4, x5)  =  U7_gga(x5)

U2_gg(x1, x2, x3, x4, x5, x6)  =  U2_gg(x6)

U3_gg(x1, x2, x3, x4, x5)  =  U3_gg(x5)

lessleaves_in_aa(x1, x2)  =  lessleaves_in_aa

lessleaves_out_aa(x1, x2)  =  lessleaves_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

U4_aaa(x1, x2, x3)  =  U4_aaa(x3)

eq_in_aa(x1, x2)  =  eq_in_aa

eq_out_aa(x1, x2)  =  eq_out_aa

app_out_aaa(x1, x2, x3)  =  app_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

head_in_aa(x1, x2)  =  head_in_aa

head_out_aa(x1, x2)  =  head_out_aa

U6_aaa(x1, x2, x3, x4, x5)  =  U6_aaa(x5)

tail_in_aa(x1, x2)  =  tail_in_aa

tail_out_aa(x1, x2)  =  tail_out_aa

U7_aaa(x1, x2, x3, x4, x5)  =  U7_aaa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x5)

APP_IN_GGA(x1, x2, x3)  =  APP_IN_GGA(x1, x2)

U5_GGA(x1, x2, x3, x4, x5)  =  U5_GGA(x1, x2, x5)

U6_GGA(x1, x2, x3, x4, x5)  =  U6_GGA(x2, x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(34) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(35)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_GGA(X, Y, cons(U, Z)) -> U5_GGA(X, Y, U, Z, head_in_ga(X, U))
   U5_GGA(X, Y, U, Z, head_out_ga(X, U)) -> U6_GGA(X, Y, U, Z, tail_in_ga(X, V))
   U6_GGA(X, Y, U, Z, tail_out_ga(X, V)) -> APP_IN_GGA(V, Y, Z)

The TRS R consists of the following rules:

   head_in_ga([], X3) -> head_out_ga([], X3)
   head_in_ga(.(X, X4), X) -> head_out_ga(.(X, X4), X)
   tail_in_ga([], []) -> tail_out_ga([], [])
   tail_in_ga(.(X5, X), X) -> tail_out_ga(.(X5, X), X)

The argument filtering Pi contains the following mapping:
cons(x1, x2)  =  cons(x1, x2)

head_in_ga(x1, x2)  =  head_in_ga(x1)

[]  =  []

head_out_ga(x1, x2)  =  head_out_ga

.(x1, x2)  =  .(x1, x2)

tail_in_ga(x1, x2)  =  tail_in_ga(x1)

tail_out_ga(x1, x2)  =  tail_out_ga(x2)

APP_IN_GGA(x1, x2, x3)  =  APP_IN_GGA(x1, x2)

U5_GGA(x1, x2, x3, x4, x5)  =  U5_GGA(x1, x2, x5)

U6_GGA(x1, x2, x3, x4, x5)  =  U6_GGA(x2, x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(36) PrologToPiTRSProof (SOUND)
We use the technique of [TOCL09]. With regard to the inferred argument filtering the predicates were used in the following modes:

lessleaves_in_2: (b,b) (f,f)

app_in_3: (b,b,f) (f,f,f)

Transforming Prolog into the following Term Rewriting System:

Pi-finite rewrite system:
The TRS R consists of the following rules:

   lessleaves_in_gg(nil, cons(X1, X2)) -> lessleaves_out_gg(nil, cons(X1, X2))
   lessleaves_in_gg(cons(U, V), cons(W, Z)) -> U1_gg(U, V, W, Z, app_in_gga(U, V, U1))
   app_in_gga(nil, Y, Z) -> U4_gga(Y, Z, eq_in_ga(Y, Z))
   eq_in_ga(X, X) -> eq_out_ga(X, X)
   U4_gga(Y, Z, eq_out_ga(Y, Z)) -> app_out_gga(nil, Y, Z)
   app_in_gga(X, Y, cons(U, Z)) -> U5_gga(X, Y, U, Z, head_in_ga(X, U))
   head_in_ga([], X3) -> head_out_ga([], X3)
   head_in_ga(.(X, X4), X) -> head_out_ga(.(X, X4), X)
   U5_gga(X, Y, U, Z, head_out_ga(X, U)) -> U6_gga(X, Y, U, Z, tail_in_ga(X, V))
   tail_in_ga([], []) -> tail_out_ga([], [])
   tail_in_ga(.(X5, X), X) -> tail_out_ga(.(X5, X), X)
   U6_gga(X, Y, U, Z, tail_out_ga(X, V)) -> U7_gga(X, Y, U, Z, app_in_gga(V, Y, Z))
   U7_gga(X, Y, U, Z, app_out_gga(V, Y, Z)) -> app_out_gga(X, Y, cons(U, Z))
   U1_gg(U, V, W, Z, app_out_gga(U, V, U1)) -> U2_gg(U, V, W, Z, U1, app_in_gga(W, Z, W1))
   U2_gg(U, V, W, Z, U1, app_out_gga(W, Z, W1)) -> U3_gg(U, V, W, Z, lessleaves_in_aa(U1, W1))
   lessleaves_in_aa(nil, cons(X1, X2)) -> lessleaves_out_aa(nil, cons(X1, X2))
   lessleaves_in_aa(cons(U, V), cons(W, Z)) -> U1_aa(U, V, W, Z, app_in_aaa(U, V, U1))
   app_in_aaa(nil, Y, Z) -> U4_aaa(Y, Z, eq_in_aa(Y, Z))
   eq_in_aa(X, X) -> eq_out_aa(X, X)
   U4_aaa(Y, Z, eq_out_aa(Y, Z)) -> app_out_aaa(nil, Y, Z)
   app_in_aaa(X, Y, cons(U, Z)) -> U5_aaa(X, Y, U, Z, head_in_aa(X, U))
   head_in_aa([], X3) -> head_out_aa([], X3)
   head_in_aa(.(X, X4), X) -> head_out_aa(.(X, X4), X)
   U5_aaa(X, Y, U, Z, head_out_aa(X, U)) -> U6_aaa(X, Y, U, Z, tail_in_aa(X, V))
   tail_in_aa([], []) -> tail_out_aa([], [])
   tail_in_aa(.(X5, X), X) -> tail_out_aa(.(X5, X), X)
   U6_aaa(X, Y, U, Z, tail_out_aa(X, V)) -> U7_aaa(X, Y, U, Z, app_in_aaa(V, Y, Z))
   U7_aaa(X, Y, U, Z, app_out_aaa(V, Y, Z)) -> app_out_aaa(X, Y, cons(U, Z))
   U1_aa(U, V, W, Z, app_out_aaa(U, V, U1)) -> U2_aa(U, V, W, Z, U1, app_in_aaa(W, Z, W1))
   U2_aa(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> U3_aa(U, V, W, Z, lessleaves_in_aa(U1, W1))
   U3_aa(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_aa(cons(U, V), cons(W, Z))
   U3_gg(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_gg(cons(U, V), cons(W, Z))

The argument filtering Pi contains the following mapping:
lessleaves_in_gg(x1, x2)  =  lessleaves_in_gg(x1, x2)

nil  =  nil

cons(x1, x2)  =  cons(x1, x2)

lessleaves_out_gg(x1, x2)  =  lessleaves_out_gg(x1, x2)

U1_gg(x1, x2, x3, x4, x5)  =  U1_gg(x1, x2, x3, x4, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

U4_gga(x1, x2, x3)  =  U4_gga(x1, x3)

eq_in_ga(x1, x2)  =  eq_in_ga(x1)

eq_out_ga(x1, x2)  =  eq_out_ga(x1, x2)

app_out_gga(x1, x2, x3)  =  app_out_gga(x1, x2)

U5_gga(x1, x2, x3, x4, x5)  =  U5_gga(x1, x2, x5)

head_in_ga(x1, x2)  =  head_in_ga(x1)

[]  =  []

head_out_ga(x1, x2)  =  head_out_ga(x1)

.(x1, x2)  =  .(x1, x2)

U6_gga(x1, x2, x3, x4, x5)  =  U6_gga(x1, x2, x5)

tail_in_ga(x1, x2)  =  tail_in_ga(x1)

tail_out_ga(x1, x2)  =  tail_out_ga(x1, x2)

U7_gga(x1, x2, x3, x4, x5)  =  U7_gga(x1, x2, x5)

U2_gg(x1, x2, x3, x4, x5, x6)  =  U2_gg(x1, x2, x3, x4, x6)

U3_gg(x1, x2, x3, x4, x5)  =  U3_gg(x1, x2, x3, x4, x5)

lessleaves_in_aa(x1, x2)  =  lessleaves_in_aa

lessleaves_out_aa(x1, x2)  =  lessleaves_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

U4_aaa(x1, x2, x3)  =  U4_aaa(x3)

eq_in_aa(x1, x2)  =  eq_in_aa

eq_out_aa(x1, x2)  =  eq_out_aa

app_out_aaa(x1, x2, x3)  =  app_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

head_in_aa(x1, x2)  =  head_in_aa

head_out_aa(x1, x2)  =  head_out_aa

U6_aaa(x1, x2, x3, x4, x5)  =  U6_aaa(x5)

tail_in_aa(x1, x2)  =  tail_in_aa

tail_out_aa(x1, x2)  =  tail_out_aa

U7_aaa(x1, x2, x3, x4, x5)  =  U7_aaa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x5)





Infinitary Constructor Rewriting Termination of PiTRS implies Termination of Prolog



----------------------------------------

(37)
Obligation:
Pi-finite rewrite system:
The TRS R consists of the following rules:

   lessleaves_in_gg(nil, cons(X1, X2)) -> lessleaves_out_gg(nil, cons(X1, X2))
   lessleaves_in_gg(cons(U, V), cons(W, Z)) -> U1_gg(U, V, W, Z, app_in_gga(U, V, U1))
   app_in_gga(nil, Y, Z) -> U4_gga(Y, Z, eq_in_ga(Y, Z))
   eq_in_ga(X, X) -> eq_out_ga(X, X)
   U4_gga(Y, Z, eq_out_ga(Y, Z)) -> app_out_gga(nil, Y, Z)
   app_in_gga(X, Y, cons(U, Z)) -> U5_gga(X, Y, U, Z, head_in_ga(X, U))
   head_in_ga([], X3) -> head_out_ga([], X3)
   head_in_ga(.(X, X4), X) -> head_out_ga(.(X, X4), X)
   U5_gga(X, Y, U, Z, head_out_ga(X, U)) -> U6_gga(X, Y, U, Z, tail_in_ga(X, V))
   tail_in_ga([], []) -> tail_out_ga([], [])
   tail_in_ga(.(X5, X), X) -> tail_out_ga(.(X5, X), X)
   U6_gga(X, Y, U, Z, tail_out_ga(X, V)) -> U7_gga(X, Y, U, Z, app_in_gga(V, Y, Z))
   U7_gga(X, Y, U, Z, app_out_gga(V, Y, Z)) -> app_out_gga(X, Y, cons(U, Z))
   U1_gg(U, V, W, Z, app_out_gga(U, V, U1)) -> U2_gg(U, V, W, Z, U1, app_in_gga(W, Z, W1))
   U2_gg(U, V, W, Z, U1, app_out_gga(W, Z, W1)) -> U3_gg(U, V, W, Z, lessleaves_in_aa(U1, W1))
   lessleaves_in_aa(nil, cons(X1, X2)) -> lessleaves_out_aa(nil, cons(X1, X2))
   lessleaves_in_aa(cons(U, V), cons(W, Z)) -> U1_aa(U, V, W, Z, app_in_aaa(U, V, U1))
   app_in_aaa(nil, Y, Z) -> U4_aaa(Y, Z, eq_in_aa(Y, Z))
   eq_in_aa(X, X) -> eq_out_aa(X, X)
   U4_aaa(Y, Z, eq_out_aa(Y, Z)) -> app_out_aaa(nil, Y, Z)
   app_in_aaa(X, Y, cons(U, Z)) -> U5_aaa(X, Y, U, Z, head_in_aa(X, U))
   head_in_aa([], X3) -> head_out_aa([], X3)
   head_in_aa(.(X, X4), X) -> head_out_aa(.(X, X4), X)
   U5_aaa(X, Y, U, Z, head_out_aa(X, U)) -> U6_aaa(X, Y, U, Z, tail_in_aa(X, V))
   tail_in_aa([], []) -> tail_out_aa([], [])
   tail_in_aa(.(X5, X), X) -> tail_out_aa(.(X5, X), X)
   U6_aaa(X, Y, U, Z, tail_out_aa(X, V)) -> U7_aaa(X, Y, U, Z, app_in_aaa(V, Y, Z))
   U7_aaa(X, Y, U, Z, app_out_aaa(V, Y, Z)) -> app_out_aaa(X, Y, cons(U, Z))
   U1_aa(U, V, W, Z, app_out_aaa(U, V, U1)) -> U2_aa(U, V, W, Z, U1, app_in_aaa(W, Z, W1))
   U2_aa(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> U3_aa(U, V, W, Z, lessleaves_in_aa(U1, W1))
   U3_aa(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_aa(cons(U, V), cons(W, Z))
   U3_gg(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_gg(cons(U, V), cons(W, Z))

The argument filtering Pi contains the following mapping:
lessleaves_in_gg(x1, x2)  =  lessleaves_in_gg(x1, x2)

nil  =  nil

cons(x1, x2)  =  cons(x1, x2)

lessleaves_out_gg(x1, x2)  =  lessleaves_out_gg(x1, x2)

U1_gg(x1, x2, x3, x4, x5)  =  U1_gg(x1, x2, x3, x4, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

U4_gga(x1, x2, x3)  =  U4_gga(x1, x3)

eq_in_ga(x1, x2)  =  eq_in_ga(x1)

eq_out_ga(x1, x2)  =  eq_out_ga(x1, x2)

app_out_gga(x1, x2, x3)  =  app_out_gga(x1, x2)

U5_gga(x1, x2, x3, x4, x5)  =  U5_gga(x1, x2, x5)

head_in_ga(x1, x2)  =  head_in_ga(x1)

[]  =  []

head_out_ga(x1, x2)  =  head_out_ga(x1)

.(x1, x2)  =  .(x1, x2)

U6_gga(x1, x2, x3, x4, x5)  =  U6_gga(x1, x2, x5)

tail_in_ga(x1, x2)  =  tail_in_ga(x1)

tail_out_ga(x1, x2)  =  tail_out_ga(x1, x2)

U7_gga(x1, x2, x3, x4, x5)  =  U7_gga(x1, x2, x5)

U2_gg(x1, x2, x3, x4, x5, x6)  =  U2_gg(x1, x2, x3, x4, x6)

U3_gg(x1, x2, x3, x4, x5)  =  U3_gg(x1, x2, x3, x4, x5)

lessleaves_in_aa(x1, x2)  =  lessleaves_in_aa

lessleaves_out_aa(x1, x2)  =  lessleaves_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

U4_aaa(x1, x2, x3)  =  U4_aaa(x3)

eq_in_aa(x1, x2)  =  eq_in_aa

eq_out_aa(x1, x2)  =  eq_out_aa

app_out_aaa(x1, x2, x3)  =  app_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

head_in_aa(x1, x2)  =  head_in_aa

head_out_aa(x1, x2)  =  head_out_aa

U6_aaa(x1, x2, x3, x4, x5)  =  U6_aaa(x5)

tail_in_aa(x1, x2)  =  tail_in_aa

tail_out_aa(x1, x2)  =  tail_out_aa

U7_aaa(x1, x2, x3, x4, x5)  =  U7_aaa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x5)



----------------------------------------

(38) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LOPSTR] we result in the following initial DP problem:
Pi DP problem:
The TRS P consists of the following rules:

   LESSLEAVES_IN_GG(cons(U, V), cons(W, Z)) -> U1_GG(U, V, W, Z, app_in_gga(U, V, U1))
   LESSLEAVES_IN_GG(cons(U, V), cons(W, Z)) -> APP_IN_GGA(U, V, U1)
   APP_IN_GGA(nil, Y, Z) -> U4_GGA(Y, Z, eq_in_ga(Y, Z))
   APP_IN_GGA(nil, Y, Z) -> EQ_IN_GA(Y, Z)
   APP_IN_GGA(X, Y, cons(U, Z)) -> U5_GGA(X, Y, U, Z, head_in_ga(X, U))
   APP_IN_GGA(X, Y, cons(U, Z)) -> HEAD_IN_GA(X, U)
   U5_GGA(X, Y, U, Z, head_out_ga(X, U)) -> U6_GGA(X, Y, U, Z, tail_in_ga(X, V))
   U5_GGA(X, Y, U, Z, head_out_ga(X, U)) -> TAIL_IN_GA(X, V)
   U6_GGA(X, Y, U, Z, tail_out_ga(X, V)) -> U7_GGA(X, Y, U, Z, app_in_gga(V, Y, Z))
   U6_GGA(X, Y, U, Z, tail_out_ga(X, V)) -> APP_IN_GGA(V, Y, Z)
   U1_GG(U, V, W, Z, app_out_gga(U, V, U1)) -> U2_GG(U, V, W, Z, U1, app_in_gga(W, Z, W1))
   U1_GG(U, V, W, Z, app_out_gga(U, V, U1)) -> APP_IN_GGA(W, Z, W1)
   U2_GG(U, V, W, Z, U1, app_out_gga(W, Z, W1)) -> U3_GG(U, V, W, Z, lessleaves_in_aa(U1, W1))
   U2_GG(U, V, W, Z, U1, app_out_gga(W, Z, W1)) -> LESSLEAVES_IN_AA(U1, W1)
   LESSLEAVES_IN_AA(cons(U, V), cons(W, Z)) -> U1_AA(U, V, W, Z, app_in_aaa(U, V, U1))
   LESSLEAVES_IN_AA(cons(U, V), cons(W, Z)) -> APP_IN_AAA(U, V, U1)
   APP_IN_AAA(nil, Y, Z) -> U4_AAA(Y, Z, eq_in_aa(Y, Z))
   APP_IN_AAA(nil, Y, Z) -> EQ_IN_AA(Y, Z)
   APP_IN_AAA(X, Y, cons(U, Z)) -> U5_AAA(X, Y, U, Z, head_in_aa(X, U))
   APP_IN_AAA(X, Y, cons(U, Z)) -> HEAD_IN_AA(X, U)
   U5_AAA(X, Y, U, Z, head_out_aa(X, U)) -> U6_AAA(X, Y, U, Z, tail_in_aa(X, V))
   U5_AAA(X, Y, U, Z, head_out_aa(X, U)) -> TAIL_IN_AA(X, V)
   U6_AAA(X, Y, U, Z, tail_out_aa(X, V)) -> U7_AAA(X, Y, U, Z, app_in_aaa(V, Y, Z))
   U6_AAA(X, Y, U, Z, tail_out_aa(X, V)) -> APP_IN_AAA(V, Y, Z)
   U1_AA(U, V, W, Z, app_out_aaa(U, V, U1)) -> U2_AA(U, V, W, Z, U1, app_in_aaa(W, Z, W1))
   U1_AA(U, V, W, Z, app_out_aaa(U, V, U1)) -> APP_IN_AAA(W, Z, W1)
   U2_AA(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> U3_AA(U, V, W, Z, lessleaves_in_aa(U1, W1))
   U2_AA(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> LESSLEAVES_IN_AA(U1, W1)

The TRS R consists of the following rules:

   lessleaves_in_gg(nil, cons(X1, X2)) -> lessleaves_out_gg(nil, cons(X1, X2))
   lessleaves_in_gg(cons(U, V), cons(W, Z)) -> U1_gg(U, V, W, Z, app_in_gga(U, V, U1))
   app_in_gga(nil, Y, Z) -> U4_gga(Y, Z, eq_in_ga(Y, Z))
   eq_in_ga(X, X) -> eq_out_ga(X, X)
   U4_gga(Y, Z, eq_out_ga(Y, Z)) -> app_out_gga(nil, Y, Z)
   app_in_gga(X, Y, cons(U, Z)) -> U5_gga(X, Y, U, Z, head_in_ga(X, U))
   head_in_ga([], X3) -> head_out_ga([], X3)
   head_in_ga(.(X, X4), X) -> head_out_ga(.(X, X4), X)
   U5_gga(X, Y, U, Z, head_out_ga(X, U)) -> U6_gga(X, Y, U, Z, tail_in_ga(X, V))
   tail_in_ga([], []) -> tail_out_ga([], [])
   tail_in_ga(.(X5, X), X) -> tail_out_ga(.(X5, X), X)
   U6_gga(X, Y, U, Z, tail_out_ga(X, V)) -> U7_gga(X, Y, U, Z, app_in_gga(V, Y, Z))
   U7_gga(X, Y, U, Z, app_out_gga(V, Y, Z)) -> app_out_gga(X, Y, cons(U, Z))
   U1_gg(U, V, W, Z, app_out_gga(U, V, U1)) -> U2_gg(U, V, W, Z, U1, app_in_gga(W, Z, W1))
   U2_gg(U, V, W, Z, U1, app_out_gga(W, Z, W1)) -> U3_gg(U, V, W, Z, lessleaves_in_aa(U1, W1))
   lessleaves_in_aa(nil, cons(X1, X2)) -> lessleaves_out_aa(nil, cons(X1, X2))
   lessleaves_in_aa(cons(U, V), cons(W, Z)) -> U1_aa(U, V, W, Z, app_in_aaa(U, V, U1))
   app_in_aaa(nil, Y, Z) -> U4_aaa(Y, Z, eq_in_aa(Y, Z))
   eq_in_aa(X, X) -> eq_out_aa(X, X)
   U4_aaa(Y, Z, eq_out_aa(Y, Z)) -> app_out_aaa(nil, Y, Z)
   app_in_aaa(X, Y, cons(U, Z)) -> U5_aaa(X, Y, U, Z, head_in_aa(X, U))
   head_in_aa([], X3) -> head_out_aa([], X3)
   head_in_aa(.(X, X4), X) -> head_out_aa(.(X, X4), X)
   U5_aaa(X, Y, U, Z, head_out_aa(X, U)) -> U6_aaa(X, Y, U, Z, tail_in_aa(X, V))
   tail_in_aa([], []) -> tail_out_aa([], [])
   tail_in_aa(.(X5, X), X) -> tail_out_aa(.(X5, X), X)
   U6_aaa(X, Y, U, Z, tail_out_aa(X, V)) -> U7_aaa(X, Y, U, Z, app_in_aaa(V, Y, Z))
   U7_aaa(X, Y, U, Z, app_out_aaa(V, Y, Z)) -> app_out_aaa(X, Y, cons(U, Z))
   U1_aa(U, V, W, Z, app_out_aaa(U, V, U1)) -> U2_aa(U, V, W, Z, U1, app_in_aaa(W, Z, W1))
   U2_aa(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> U3_aa(U, V, W, Z, lessleaves_in_aa(U1, W1))
   U3_aa(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_aa(cons(U, V), cons(W, Z))
   U3_gg(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_gg(cons(U, V), cons(W, Z))

The argument filtering Pi contains the following mapping:
lessleaves_in_gg(x1, x2)  =  lessleaves_in_gg(x1, x2)

nil  =  nil

cons(x1, x2)  =  cons(x1, x2)

lessleaves_out_gg(x1, x2)  =  lessleaves_out_gg(x1, x2)

U1_gg(x1, x2, x3, x4, x5)  =  U1_gg(x1, x2, x3, x4, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

U4_gga(x1, x2, x3)  =  U4_gga(x1, x3)

eq_in_ga(x1, x2)  =  eq_in_ga(x1)

eq_out_ga(x1, x2)  =  eq_out_ga(x1, x2)

app_out_gga(x1, x2, x3)  =  app_out_gga(x1, x2)

U5_gga(x1, x2, x3, x4, x5)  =  U5_gga(x1, x2, x5)

head_in_ga(x1, x2)  =  head_in_ga(x1)

[]  =  []

head_out_ga(x1, x2)  =  head_out_ga(x1)

.(x1, x2)  =  .(x1, x2)

U6_gga(x1, x2, x3, x4, x5)  =  U6_gga(x1, x2, x5)

tail_in_ga(x1, x2)  =  tail_in_ga(x1)

tail_out_ga(x1, x2)  =  tail_out_ga(x1, x2)

U7_gga(x1, x2, x3, x4, x5)  =  U7_gga(x1, x2, x5)

U2_gg(x1, x2, x3, x4, x5, x6)  =  U2_gg(x1, x2, x3, x4, x6)

U3_gg(x1, x2, x3, x4, x5)  =  U3_gg(x1, x2, x3, x4, x5)

lessleaves_in_aa(x1, x2)  =  lessleaves_in_aa

lessleaves_out_aa(x1, x2)  =  lessleaves_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

U4_aaa(x1, x2, x3)  =  U4_aaa(x3)

eq_in_aa(x1, x2)  =  eq_in_aa

eq_out_aa(x1, x2)  =  eq_out_aa

app_out_aaa(x1, x2, x3)  =  app_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

head_in_aa(x1, x2)  =  head_in_aa

head_out_aa(x1, x2)  =  head_out_aa

U6_aaa(x1, x2, x3, x4, x5)  =  U6_aaa(x5)

tail_in_aa(x1, x2)  =  tail_in_aa

tail_out_aa(x1, x2)  =  tail_out_aa

U7_aaa(x1, x2, x3, x4, x5)  =  U7_aaa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x5)

LESSLEAVES_IN_GG(x1, x2)  =  LESSLEAVES_IN_GG(x1, x2)

U1_GG(x1, x2, x3, x4, x5)  =  U1_GG(x1, x2, x3, x4, x5)

APP_IN_GGA(x1, x2, x3)  =  APP_IN_GGA(x1, x2)

U4_GGA(x1, x2, x3)  =  U4_GGA(x1, x3)

EQ_IN_GA(x1, x2)  =  EQ_IN_GA(x1)

U5_GGA(x1, x2, x3, x4, x5)  =  U5_GGA(x1, x2, x5)

HEAD_IN_GA(x1, x2)  =  HEAD_IN_GA(x1)

U6_GGA(x1, x2, x3, x4, x5)  =  U6_GGA(x1, x2, x5)

TAIL_IN_GA(x1, x2)  =  TAIL_IN_GA(x1)

U7_GGA(x1, x2, x3, x4, x5)  =  U7_GGA(x1, x2, x5)

U2_GG(x1, x2, x3, x4, x5, x6)  =  U2_GG(x1, x2, x3, x4, x6)

U3_GG(x1, x2, x3, x4, x5)  =  U3_GG(x1, x2, x3, x4, x5)

LESSLEAVES_IN_AA(x1, x2)  =  LESSLEAVES_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)

APP_IN_AAA(x1, x2, x3)  =  APP_IN_AAA

U4_AAA(x1, x2, x3)  =  U4_AAA(x3)

EQ_IN_AA(x1, x2)  =  EQ_IN_AA

U5_AAA(x1, x2, x3, x4, x5)  =  U5_AAA(x5)

HEAD_IN_AA(x1, x2)  =  HEAD_IN_AA

U6_AAA(x1, x2, x3, x4, x5)  =  U6_AAA(x5)

TAIL_IN_AA(x1, x2)  =  TAIL_IN_AA

U7_AAA(x1, x2, x3, x4, x5)  =  U7_AAA(x5)

U2_AA(x1, x2, x3, x4, x5, x6)  =  U2_AA(x6)

U3_AA(x1, x2, x3, x4, x5)  =  U3_AA(x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(39)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   LESSLEAVES_IN_GG(cons(U, V), cons(W, Z)) -> U1_GG(U, V, W, Z, app_in_gga(U, V, U1))
   LESSLEAVES_IN_GG(cons(U, V), cons(W, Z)) -> APP_IN_GGA(U, V, U1)
   APP_IN_GGA(nil, Y, Z) -> U4_GGA(Y, Z, eq_in_ga(Y, Z))
   APP_IN_GGA(nil, Y, Z) -> EQ_IN_GA(Y, Z)
   APP_IN_GGA(X, Y, cons(U, Z)) -> U5_GGA(X, Y, U, Z, head_in_ga(X, U))
   APP_IN_GGA(X, Y, cons(U, Z)) -> HEAD_IN_GA(X, U)
   U5_GGA(X, Y, U, Z, head_out_ga(X, U)) -> U6_GGA(X, Y, U, Z, tail_in_ga(X, V))
   U5_GGA(X, Y, U, Z, head_out_ga(X, U)) -> TAIL_IN_GA(X, V)
   U6_GGA(X, Y, U, Z, tail_out_ga(X, V)) -> U7_GGA(X, Y, U, Z, app_in_gga(V, Y, Z))
   U6_GGA(X, Y, U, Z, tail_out_ga(X, V)) -> APP_IN_GGA(V, Y, Z)
   U1_GG(U, V, W, Z, app_out_gga(U, V, U1)) -> U2_GG(U, V, W, Z, U1, app_in_gga(W, Z, W1))
   U1_GG(U, V, W, Z, app_out_gga(U, V, U1)) -> APP_IN_GGA(W, Z, W1)
   U2_GG(U, V, W, Z, U1, app_out_gga(W, Z, W1)) -> U3_GG(U, V, W, Z, lessleaves_in_aa(U1, W1))
   U2_GG(U, V, W, Z, U1, app_out_gga(W, Z, W1)) -> LESSLEAVES_IN_AA(U1, W1)
   LESSLEAVES_IN_AA(cons(U, V), cons(W, Z)) -> U1_AA(U, V, W, Z, app_in_aaa(U, V, U1))
   LESSLEAVES_IN_AA(cons(U, V), cons(W, Z)) -> APP_IN_AAA(U, V, U1)
   APP_IN_AAA(nil, Y, Z) -> U4_AAA(Y, Z, eq_in_aa(Y, Z))
   APP_IN_AAA(nil, Y, Z) -> EQ_IN_AA(Y, Z)
   APP_IN_AAA(X, Y, cons(U, Z)) -> U5_AAA(X, Y, U, Z, head_in_aa(X, U))
   APP_IN_AAA(X, Y, cons(U, Z)) -> HEAD_IN_AA(X, U)
   U5_AAA(X, Y, U, Z, head_out_aa(X, U)) -> U6_AAA(X, Y, U, Z, tail_in_aa(X, V))
   U5_AAA(X, Y, U, Z, head_out_aa(X, U)) -> TAIL_IN_AA(X, V)
   U6_AAA(X, Y, U, Z, tail_out_aa(X, V)) -> U7_AAA(X, Y, U, Z, app_in_aaa(V, Y, Z))
   U6_AAA(X, Y, U, Z, tail_out_aa(X, V)) -> APP_IN_AAA(V, Y, Z)
   U1_AA(U, V, W, Z, app_out_aaa(U, V, U1)) -> U2_AA(U, V, W, Z, U1, app_in_aaa(W, Z, W1))
   U1_AA(U, V, W, Z, app_out_aaa(U, V, U1)) -> APP_IN_AAA(W, Z, W1)
   U2_AA(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> U3_AA(U, V, W, Z, lessleaves_in_aa(U1, W1))
   U2_AA(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> LESSLEAVES_IN_AA(U1, W1)

The TRS R consists of the following rules:

   lessleaves_in_gg(nil, cons(X1, X2)) -> lessleaves_out_gg(nil, cons(X1, X2))
   lessleaves_in_gg(cons(U, V), cons(W, Z)) -> U1_gg(U, V, W, Z, app_in_gga(U, V, U1))
   app_in_gga(nil, Y, Z) -> U4_gga(Y, Z, eq_in_ga(Y, Z))
   eq_in_ga(X, X) -> eq_out_ga(X, X)
   U4_gga(Y, Z, eq_out_ga(Y, Z)) -> app_out_gga(nil, Y, Z)
   app_in_gga(X, Y, cons(U, Z)) -> U5_gga(X, Y, U, Z, head_in_ga(X, U))
   head_in_ga([], X3) -> head_out_ga([], X3)
   head_in_ga(.(X, X4), X) -> head_out_ga(.(X, X4), X)
   U5_gga(X, Y, U, Z, head_out_ga(X, U)) -> U6_gga(X, Y, U, Z, tail_in_ga(X, V))
   tail_in_ga([], []) -> tail_out_ga([], [])
   tail_in_ga(.(X5, X), X) -> tail_out_ga(.(X5, X), X)
   U6_gga(X, Y, U, Z, tail_out_ga(X, V)) -> U7_gga(X, Y, U, Z, app_in_gga(V, Y, Z))
   U7_gga(X, Y, U, Z, app_out_gga(V, Y, Z)) -> app_out_gga(X, Y, cons(U, Z))
   U1_gg(U, V, W, Z, app_out_gga(U, V, U1)) -> U2_gg(U, V, W, Z, U1, app_in_gga(W, Z, W1))
   U2_gg(U, V, W, Z, U1, app_out_gga(W, Z, W1)) -> U3_gg(U, V, W, Z, lessleaves_in_aa(U1, W1))
   lessleaves_in_aa(nil, cons(X1, X2)) -> lessleaves_out_aa(nil, cons(X1, X2))
   lessleaves_in_aa(cons(U, V), cons(W, Z)) -> U1_aa(U, V, W, Z, app_in_aaa(U, V, U1))
   app_in_aaa(nil, Y, Z) -> U4_aaa(Y, Z, eq_in_aa(Y, Z))
   eq_in_aa(X, X) -> eq_out_aa(X, X)
   U4_aaa(Y, Z, eq_out_aa(Y, Z)) -> app_out_aaa(nil, Y, Z)
   app_in_aaa(X, Y, cons(U, Z)) -> U5_aaa(X, Y, U, Z, head_in_aa(X, U))
   head_in_aa([], X3) -> head_out_aa([], X3)
   head_in_aa(.(X, X4), X) -> head_out_aa(.(X, X4), X)
   U5_aaa(X, Y, U, Z, head_out_aa(X, U)) -> U6_aaa(X, Y, U, Z, tail_in_aa(X, V))
   tail_in_aa([], []) -> tail_out_aa([], [])
   tail_in_aa(.(X5, X), X) -> tail_out_aa(.(X5, X), X)
   U6_aaa(X, Y, U, Z, tail_out_aa(X, V)) -> U7_aaa(X, Y, U, Z, app_in_aaa(V, Y, Z))
   U7_aaa(X, Y, U, Z, app_out_aaa(V, Y, Z)) -> app_out_aaa(X, Y, cons(U, Z))
   U1_aa(U, V, W, Z, app_out_aaa(U, V, U1)) -> U2_aa(U, V, W, Z, U1, app_in_aaa(W, Z, W1))
   U2_aa(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> U3_aa(U, V, W, Z, lessleaves_in_aa(U1, W1))
   U3_aa(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_aa(cons(U, V), cons(W, Z))
   U3_gg(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_gg(cons(U, V), cons(W, Z))

The argument filtering Pi contains the following mapping:
lessleaves_in_gg(x1, x2)  =  lessleaves_in_gg(x1, x2)

nil  =  nil

cons(x1, x2)  =  cons(x1, x2)

lessleaves_out_gg(x1, x2)  =  lessleaves_out_gg(x1, x2)

U1_gg(x1, x2, x3, x4, x5)  =  U1_gg(x1, x2, x3, x4, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

U4_gga(x1, x2, x3)  =  U4_gga(x1, x3)

eq_in_ga(x1, x2)  =  eq_in_ga(x1)

eq_out_ga(x1, x2)  =  eq_out_ga(x1, x2)

app_out_gga(x1, x2, x3)  =  app_out_gga(x1, x2)

U5_gga(x1, x2, x3, x4, x5)  =  U5_gga(x1, x2, x5)

head_in_ga(x1, x2)  =  head_in_ga(x1)

[]  =  []

head_out_ga(x1, x2)  =  head_out_ga(x1)

.(x1, x2)  =  .(x1, x2)

U6_gga(x1, x2, x3, x4, x5)  =  U6_gga(x1, x2, x5)

tail_in_ga(x1, x2)  =  tail_in_ga(x1)

tail_out_ga(x1, x2)  =  tail_out_ga(x1, x2)

U7_gga(x1, x2, x3, x4, x5)  =  U7_gga(x1, x2, x5)

U2_gg(x1, x2, x3, x4, x5, x6)  =  U2_gg(x1, x2, x3, x4, x6)

U3_gg(x1, x2, x3, x4, x5)  =  U3_gg(x1, x2, x3, x4, x5)

lessleaves_in_aa(x1, x2)  =  lessleaves_in_aa

lessleaves_out_aa(x1, x2)  =  lessleaves_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

U4_aaa(x1, x2, x3)  =  U4_aaa(x3)

eq_in_aa(x1, x2)  =  eq_in_aa

eq_out_aa(x1, x2)  =  eq_out_aa

app_out_aaa(x1, x2, x3)  =  app_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

head_in_aa(x1, x2)  =  head_in_aa

head_out_aa(x1, x2)  =  head_out_aa

U6_aaa(x1, x2, x3, x4, x5)  =  U6_aaa(x5)

tail_in_aa(x1, x2)  =  tail_in_aa

tail_out_aa(x1, x2)  =  tail_out_aa

U7_aaa(x1, x2, x3, x4, x5)  =  U7_aaa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x5)

LESSLEAVES_IN_GG(x1, x2)  =  LESSLEAVES_IN_GG(x1, x2)

U1_GG(x1, x2, x3, x4, x5)  =  U1_GG(x1, x2, x3, x4, x5)

APP_IN_GGA(x1, x2, x3)  =  APP_IN_GGA(x1, x2)

U4_GGA(x1, x2, x3)  =  U4_GGA(x1, x3)

EQ_IN_GA(x1, x2)  =  EQ_IN_GA(x1)

U5_GGA(x1, x2, x3, x4, x5)  =  U5_GGA(x1, x2, x5)

HEAD_IN_GA(x1, x2)  =  HEAD_IN_GA(x1)

U6_GGA(x1, x2, x3, x4, x5)  =  U6_GGA(x1, x2, x5)

TAIL_IN_GA(x1, x2)  =  TAIL_IN_GA(x1)

U7_GGA(x1, x2, x3, x4, x5)  =  U7_GGA(x1, x2, x5)

U2_GG(x1, x2, x3, x4, x5, x6)  =  U2_GG(x1, x2, x3, x4, x6)

U3_GG(x1, x2, x3, x4, x5)  =  U3_GG(x1, x2, x3, x4, x5)

LESSLEAVES_IN_AA(x1, x2)  =  LESSLEAVES_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)

APP_IN_AAA(x1, x2, x3)  =  APP_IN_AAA

U4_AAA(x1, x2, x3)  =  U4_AAA(x3)

EQ_IN_AA(x1, x2)  =  EQ_IN_AA

U5_AAA(x1, x2, x3, x4, x5)  =  U5_AAA(x5)

HEAD_IN_AA(x1, x2)  =  HEAD_IN_AA

U6_AAA(x1, x2, x3, x4, x5)  =  U6_AAA(x5)

TAIL_IN_AA(x1, x2)  =  TAIL_IN_AA

U7_AAA(x1, x2, x3, x4, x5)  =  U7_AAA(x5)

U2_AA(x1, x2, x3, x4, x5, x6)  =  U2_AA(x6)

U3_AA(x1, x2, x3, x4, x5)  =  U3_AA(x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(40) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 3 SCCs with 19 less nodes.
----------------------------------------

(41)
Complex Obligation (AND)

----------------------------------------

(42)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_AAA(X, Y, cons(U, Z)) -> U5_AAA(X, Y, U, Z, head_in_aa(X, U))
   U5_AAA(X, Y, U, Z, head_out_aa(X, U)) -> U6_AAA(X, Y, U, Z, tail_in_aa(X, V))
   U6_AAA(X, Y, U, Z, tail_out_aa(X, V)) -> APP_IN_AAA(V, Y, Z)

The TRS R consists of the following rules:

   lessleaves_in_gg(nil, cons(X1, X2)) -> lessleaves_out_gg(nil, cons(X1, X2))
   lessleaves_in_gg(cons(U, V), cons(W, Z)) -> U1_gg(U, V, W, Z, app_in_gga(U, V, U1))
   app_in_gga(nil, Y, Z) -> U4_gga(Y, Z, eq_in_ga(Y, Z))
   eq_in_ga(X, X) -> eq_out_ga(X, X)
   U4_gga(Y, Z, eq_out_ga(Y, Z)) -> app_out_gga(nil, Y, Z)
   app_in_gga(X, Y, cons(U, Z)) -> U5_gga(X, Y, U, Z, head_in_ga(X, U))
   head_in_ga([], X3) -> head_out_ga([], X3)
   head_in_ga(.(X, X4), X) -> head_out_ga(.(X, X4), X)
   U5_gga(X, Y, U, Z, head_out_ga(X, U)) -> U6_gga(X, Y, U, Z, tail_in_ga(X, V))
   tail_in_ga([], []) -> tail_out_ga([], [])
   tail_in_ga(.(X5, X), X) -> tail_out_ga(.(X5, X), X)
   U6_gga(X, Y, U, Z, tail_out_ga(X, V)) -> U7_gga(X, Y, U, Z, app_in_gga(V, Y, Z))
   U7_gga(X, Y, U, Z, app_out_gga(V, Y, Z)) -> app_out_gga(X, Y, cons(U, Z))
   U1_gg(U, V, W, Z, app_out_gga(U, V, U1)) -> U2_gg(U, V, W, Z, U1, app_in_gga(W, Z, W1))
   U2_gg(U, V, W, Z, U1, app_out_gga(W, Z, W1)) -> U3_gg(U, V, W, Z, lessleaves_in_aa(U1, W1))
   lessleaves_in_aa(nil, cons(X1, X2)) -> lessleaves_out_aa(nil, cons(X1, X2))
   lessleaves_in_aa(cons(U, V), cons(W, Z)) -> U1_aa(U, V, W, Z, app_in_aaa(U, V, U1))
   app_in_aaa(nil, Y, Z) -> U4_aaa(Y, Z, eq_in_aa(Y, Z))
   eq_in_aa(X, X) -> eq_out_aa(X, X)
   U4_aaa(Y, Z, eq_out_aa(Y, Z)) -> app_out_aaa(nil, Y, Z)
   app_in_aaa(X, Y, cons(U, Z)) -> U5_aaa(X, Y, U, Z, head_in_aa(X, U))
   head_in_aa([], X3) -> head_out_aa([], X3)
   head_in_aa(.(X, X4), X) -> head_out_aa(.(X, X4), X)
   U5_aaa(X, Y, U, Z, head_out_aa(X, U)) -> U6_aaa(X, Y, U, Z, tail_in_aa(X, V))
   tail_in_aa([], []) -> tail_out_aa([], [])
   tail_in_aa(.(X5, X), X) -> tail_out_aa(.(X5, X), X)
   U6_aaa(X, Y, U, Z, tail_out_aa(X, V)) -> U7_aaa(X, Y, U, Z, app_in_aaa(V, Y, Z))
   U7_aaa(X, Y, U, Z, app_out_aaa(V, Y, Z)) -> app_out_aaa(X, Y, cons(U, Z))
   U1_aa(U, V, W, Z, app_out_aaa(U, V, U1)) -> U2_aa(U, V, W, Z, U1, app_in_aaa(W, Z, W1))
   U2_aa(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> U3_aa(U, V, W, Z, lessleaves_in_aa(U1, W1))
   U3_aa(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_aa(cons(U, V), cons(W, Z))
   U3_gg(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_gg(cons(U, V), cons(W, Z))

The argument filtering Pi contains the following mapping:
lessleaves_in_gg(x1, x2)  =  lessleaves_in_gg(x1, x2)

nil  =  nil

cons(x1, x2)  =  cons(x1, x2)

lessleaves_out_gg(x1, x2)  =  lessleaves_out_gg(x1, x2)

U1_gg(x1, x2, x3, x4, x5)  =  U1_gg(x1, x2, x3, x4, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

U4_gga(x1, x2, x3)  =  U4_gga(x1, x3)

eq_in_ga(x1, x2)  =  eq_in_ga(x1)

eq_out_ga(x1, x2)  =  eq_out_ga(x1, x2)

app_out_gga(x1, x2, x3)  =  app_out_gga(x1, x2)

U5_gga(x1, x2, x3, x4, x5)  =  U5_gga(x1, x2, x5)

head_in_ga(x1, x2)  =  head_in_ga(x1)

[]  =  []

head_out_ga(x1, x2)  =  head_out_ga(x1)

.(x1, x2)  =  .(x1, x2)

U6_gga(x1, x2, x3, x4, x5)  =  U6_gga(x1, x2, x5)

tail_in_ga(x1, x2)  =  tail_in_ga(x1)

tail_out_ga(x1, x2)  =  tail_out_ga(x1, x2)

U7_gga(x1, x2, x3, x4, x5)  =  U7_gga(x1, x2, x5)

U2_gg(x1, x2, x3, x4, x5, x6)  =  U2_gg(x1, x2, x3, x4, x6)

U3_gg(x1, x2, x3, x4, x5)  =  U3_gg(x1, x2, x3, x4, x5)

lessleaves_in_aa(x1, x2)  =  lessleaves_in_aa

lessleaves_out_aa(x1, x2)  =  lessleaves_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

U4_aaa(x1, x2, x3)  =  U4_aaa(x3)

eq_in_aa(x1, x2)  =  eq_in_aa

eq_out_aa(x1, x2)  =  eq_out_aa

app_out_aaa(x1, x2, x3)  =  app_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

head_in_aa(x1, x2)  =  head_in_aa

head_out_aa(x1, x2)  =  head_out_aa

U6_aaa(x1, x2, x3, x4, x5)  =  U6_aaa(x5)

tail_in_aa(x1, x2)  =  tail_in_aa

tail_out_aa(x1, x2)  =  tail_out_aa

U7_aaa(x1, x2, x3, x4, x5)  =  U7_aaa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x5)

APP_IN_AAA(x1, x2, x3)  =  APP_IN_AAA

U5_AAA(x1, x2, x3, x4, x5)  =  U5_AAA(x5)

U6_AAA(x1, x2, x3, x4, x5)  =  U6_AAA(x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(43) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(44)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_AAA(X, Y, cons(U, Z)) -> U5_AAA(X, Y, U, Z, head_in_aa(X, U))
   U5_AAA(X, Y, U, Z, head_out_aa(X, U)) -> U6_AAA(X, Y, U, Z, tail_in_aa(X, V))
   U6_AAA(X, Y, U, Z, tail_out_aa(X, V)) -> APP_IN_AAA(V, Y, Z)

The TRS R consists of the following rules:

   head_in_aa([], X3) -> head_out_aa([], X3)
   head_in_aa(.(X, X4), X) -> head_out_aa(.(X, X4), X)
   tail_in_aa([], []) -> tail_out_aa([], [])
   tail_in_aa(.(X5, X), X) -> tail_out_aa(.(X5, X), X)

The argument filtering Pi contains the following mapping:
cons(x1, x2)  =  cons(x1, x2)

[]  =  []

.(x1, x2)  =  .(x1, x2)

head_in_aa(x1, x2)  =  head_in_aa

head_out_aa(x1, x2)  =  head_out_aa

tail_in_aa(x1, x2)  =  tail_in_aa

tail_out_aa(x1, x2)  =  tail_out_aa

APP_IN_AAA(x1, x2, x3)  =  APP_IN_AAA

U5_AAA(x1, x2, x3, x4, x5)  =  U5_AAA(x5)

U6_AAA(x1, x2, x3, x4, x5)  =  U6_AAA(x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(45) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(46)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APP_IN_AAA -> U5_AAA(head_in_aa)
   U5_AAA(head_out_aa) -> U6_AAA(tail_in_aa)
   U6_AAA(tail_out_aa) -> APP_IN_AAA

The TRS R consists of the following rules:

   head_in_aa -> head_out_aa
   tail_in_aa -> tail_out_aa

The set Q consists of the following terms:

   head_in_aa
   tail_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(47) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule APP_IN_AAA -> U5_AAA(head_in_aa) at position [0] we obtained the following new rules [LPAR04]:

   (APP_IN_AAA -> U5_AAA(head_out_aa),APP_IN_AAA -> U5_AAA(head_out_aa))


----------------------------------------

(48)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5_AAA(head_out_aa) -> U6_AAA(tail_in_aa)
   U6_AAA(tail_out_aa) -> APP_IN_AAA
   APP_IN_AAA -> U5_AAA(head_out_aa)

The TRS R consists of the following rules:

   head_in_aa -> head_out_aa
   tail_in_aa -> tail_out_aa

The set Q consists of the following terms:

   head_in_aa
   tail_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(49) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(50)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5_AAA(head_out_aa) -> U6_AAA(tail_in_aa)
   U6_AAA(tail_out_aa) -> APP_IN_AAA
   APP_IN_AAA -> U5_AAA(head_out_aa)

The TRS R consists of the following rules:

   tail_in_aa -> tail_out_aa

The set Q consists of the following terms:

   head_in_aa
   tail_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(51) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   head_in_aa


----------------------------------------

(52)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U5_AAA(head_out_aa) -> U6_AAA(tail_in_aa)
   U6_AAA(tail_out_aa) -> APP_IN_AAA
   APP_IN_AAA -> U5_AAA(head_out_aa)

The TRS R consists of the following rules:

   tail_in_aa -> tail_out_aa

The set Q consists of the following terms:

   tail_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(53) TransformationProof (EQUIVALENT)
By rewriting [LPAR04] the rule U5_AAA(head_out_aa) -> U6_AAA(tail_in_aa) at position [0] we obtained the following new rules [LPAR04]:

   (U5_AAA(head_out_aa) -> U6_AAA(tail_out_aa),U5_AAA(head_out_aa) -> U6_AAA(tail_out_aa))


----------------------------------------

(54)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U6_AAA(tail_out_aa) -> APP_IN_AAA
   APP_IN_AAA -> U5_AAA(head_out_aa)
   U5_AAA(head_out_aa) -> U6_AAA(tail_out_aa)

The TRS R consists of the following rules:

   tail_in_aa -> tail_out_aa

The set Q consists of the following terms:

   tail_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(55) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(56)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U6_AAA(tail_out_aa) -> APP_IN_AAA
   APP_IN_AAA -> U5_AAA(head_out_aa)
   U5_AAA(head_out_aa) -> U6_AAA(tail_out_aa)

R is empty.
The set Q consists of the following terms:

   tail_in_aa

We have to consider all (P,Q,R)-chains.
----------------------------------------

(57) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   tail_in_aa


----------------------------------------

(58)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U6_AAA(tail_out_aa) -> APP_IN_AAA
   APP_IN_AAA -> U5_AAA(head_out_aa)
   U5_AAA(head_out_aa) -> U6_AAA(tail_out_aa)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(59) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by narrowing to the left:

s = APP_IN_AAA evaluates to  t =APP_IN_AAA

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

APP_IN_AAA -> U5_AAA(head_out_aa)
with rule APP_IN_AAA -> U5_AAA(head_out_aa) at position [] and matcher [ ]

U5_AAA(head_out_aa) -> U6_AAA(tail_out_aa)
with rule U5_AAA(head_out_aa) -> U6_AAA(tail_out_aa) at position [] and matcher [ ]

U6_AAA(tail_out_aa) -> APP_IN_AAA
with rule U6_AAA(tail_out_aa) -> APP_IN_AAA

Now applying the matcher to the start term leads to a term which is equal to the last term in the rewriting sequence


All these steps are and every following step will be a correct step w.r.t to Q.




----------------------------------------

(60)
NO

----------------------------------------

(61)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U1_AA(U, V, W, Z, app_out_aaa(U, V, U1)) -> U2_AA(U, V, W, Z, U1, app_in_aaa(W, Z, W1))
   U2_AA(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> LESSLEAVES_IN_AA(U1, W1)
   LESSLEAVES_IN_AA(cons(U, V), cons(W, Z)) -> U1_AA(U, V, W, Z, app_in_aaa(U, V, U1))

The TRS R consists of the following rules:

   lessleaves_in_gg(nil, cons(X1, X2)) -> lessleaves_out_gg(nil, cons(X1, X2))
   lessleaves_in_gg(cons(U, V), cons(W, Z)) -> U1_gg(U, V, W, Z, app_in_gga(U, V, U1))
   app_in_gga(nil, Y, Z) -> U4_gga(Y, Z, eq_in_ga(Y, Z))
   eq_in_ga(X, X) -> eq_out_ga(X, X)
   U4_gga(Y, Z, eq_out_ga(Y, Z)) -> app_out_gga(nil, Y, Z)
   app_in_gga(X, Y, cons(U, Z)) -> U5_gga(X, Y, U, Z, head_in_ga(X, U))
   head_in_ga([], X3) -> head_out_ga([], X3)
   head_in_ga(.(X, X4), X) -> head_out_ga(.(X, X4), X)
   U5_gga(X, Y, U, Z, head_out_ga(X, U)) -> U6_gga(X, Y, U, Z, tail_in_ga(X, V))
   tail_in_ga([], []) -> tail_out_ga([], [])
   tail_in_ga(.(X5, X), X) -> tail_out_ga(.(X5, X), X)
   U6_gga(X, Y, U, Z, tail_out_ga(X, V)) -> U7_gga(X, Y, U, Z, app_in_gga(V, Y, Z))
   U7_gga(X, Y, U, Z, app_out_gga(V, Y, Z)) -> app_out_gga(X, Y, cons(U, Z))
   U1_gg(U, V, W, Z, app_out_gga(U, V, U1)) -> U2_gg(U, V, W, Z, U1, app_in_gga(W, Z, W1))
   U2_gg(U, V, W, Z, U1, app_out_gga(W, Z, W1)) -> U3_gg(U, V, W, Z, lessleaves_in_aa(U1, W1))
   lessleaves_in_aa(nil, cons(X1, X2)) -> lessleaves_out_aa(nil, cons(X1, X2))
   lessleaves_in_aa(cons(U, V), cons(W, Z)) -> U1_aa(U, V, W, Z, app_in_aaa(U, V, U1))
   app_in_aaa(nil, Y, Z) -> U4_aaa(Y, Z, eq_in_aa(Y, Z))
   eq_in_aa(X, X) -> eq_out_aa(X, X)
   U4_aaa(Y, Z, eq_out_aa(Y, Z)) -> app_out_aaa(nil, Y, Z)
   app_in_aaa(X, Y, cons(U, Z)) -> U5_aaa(X, Y, U, Z, head_in_aa(X, U))
   head_in_aa([], X3) -> head_out_aa([], X3)
   head_in_aa(.(X, X4), X) -> head_out_aa(.(X, X4), X)
   U5_aaa(X, Y, U, Z, head_out_aa(X, U)) -> U6_aaa(X, Y, U, Z, tail_in_aa(X, V))
   tail_in_aa([], []) -> tail_out_aa([], [])
   tail_in_aa(.(X5, X), X) -> tail_out_aa(.(X5, X), X)
   U6_aaa(X, Y, U, Z, tail_out_aa(X, V)) -> U7_aaa(X, Y, U, Z, app_in_aaa(V, Y, Z))
   U7_aaa(X, Y, U, Z, app_out_aaa(V, Y, Z)) -> app_out_aaa(X, Y, cons(U, Z))
   U1_aa(U, V, W, Z, app_out_aaa(U, V, U1)) -> U2_aa(U, V, W, Z, U1, app_in_aaa(W, Z, W1))
   U2_aa(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> U3_aa(U, V, W, Z, lessleaves_in_aa(U1, W1))
   U3_aa(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_aa(cons(U, V), cons(W, Z))
   U3_gg(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_gg(cons(U, V), cons(W, Z))

The argument filtering Pi contains the following mapping:
lessleaves_in_gg(x1, x2)  =  lessleaves_in_gg(x1, x2)

nil  =  nil

cons(x1, x2)  =  cons(x1, x2)

lessleaves_out_gg(x1, x2)  =  lessleaves_out_gg(x1, x2)

U1_gg(x1, x2, x3, x4, x5)  =  U1_gg(x1, x2, x3, x4, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

U4_gga(x1, x2, x3)  =  U4_gga(x1, x3)

eq_in_ga(x1, x2)  =  eq_in_ga(x1)

eq_out_ga(x1, x2)  =  eq_out_ga(x1, x2)

app_out_gga(x1, x2, x3)  =  app_out_gga(x1, x2)

U5_gga(x1, x2, x3, x4, x5)  =  U5_gga(x1, x2, x5)

head_in_ga(x1, x2)  =  head_in_ga(x1)

[]  =  []

head_out_ga(x1, x2)  =  head_out_ga(x1)

.(x1, x2)  =  .(x1, x2)

U6_gga(x1, x2, x3, x4, x5)  =  U6_gga(x1, x2, x5)

tail_in_ga(x1, x2)  =  tail_in_ga(x1)

tail_out_ga(x1, x2)  =  tail_out_ga(x1, x2)

U7_gga(x1, x2, x3, x4, x5)  =  U7_gga(x1, x2, x5)

U2_gg(x1, x2, x3, x4, x5, x6)  =  U2_gg(x1, x2, x3, x4, x6)

U3_gg(x1, x2, x3, x4, x5)  =  U3_gg(x1, x2, x3, x4, x5)

lessleaves_in_aa(x1, x2)  =  lessleaves_in_aa

lessleaves_out_aa(x1, x2)  =  lessleaves_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

U4_aaa(x1, x2, x3)  =  U4_aaa(x3)

eq_in_aa(x1, x2)  =  eq_in_aa

eq_out_aa(x1, x2)  =  eq_out_aa

app_out_aaa(x1, x2, x3)  =  app_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

head_in_aa(x1, x2)  =  head_in_aa

head_out_aa(x1, x2)  =  head_out_aa

U6_aaa(x1, x2, x3, x4, x5)  =  U6_aaa(x5)

tail_in_aa(x1, x2)  =  tail_in_aa

tail_out_aa(x1, x2)  =  tail_out_aa

U7_aaa(x1, x2, x3, x4, x5)  =  U7_aaa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x5)

LESSLEAVES_IN_AA(x1, x2)  =  LESSLEAVES_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)

U2_AA(x1, x2, x3, x4, x5, x6)  =  U2_AA(x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(62) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(63)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   U1_AA(U, V, W, Z, app_out_aaa(U, V, U1)) -> U2_AA(U, V, W, Z, U1, app_in_aaa(W, Z, W1))
   U2_AA(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> LESSLEAVES_IN_AA(U1, W1)
   LESSLEAVES_IN_AA(cons(U, V), cons(W, Z)) -> U1_AA(U, V, W, Z, app_in_aaa(U, V, U1))

The TRS R consists of the following rules:

   app_in_aaa(nil, Y, Z) -> U4_aaa(Y, Z, eq_in_aa(Y, Z))
   app_in_aaa(X, Y, cons(U, Z)) -> U5_aaa(X, Y, U, Z, head_in_aa(X, U))
   U4_aaa(Y, Z, eq_out_aa(Y, Z)) -> app_out_aaa(nil, Y, Z)
   U5_aaa(X, Y, U, Z, head_out_aa(X, U)) -> U6_aaa(X, Y, U, Z, tail_in_aa(X, V))
   eq_in_aa(X, X) -> eq_out_aa(X, X)
   head_in_aa([], X3) -> head_out_aa([], X3)
   head_in_aa(.(X, X4), X) -> head_out_aa(.(X, X4), X)
   U6_aaa(X, Y, U, Z, tail_out_aa(X, V)) -> U7_aaa(X, Y, U, Z, app_in_aaa(V, Y, Z))
   tail_in_aa([], []) -> tail_out_aa([], [])
   tail_in_aa(.(X5, X), X) -> tail_out_aa(.(X5, X), X)
   U7_aaa(X, Y, U, Z, app_out_aaa(V, Y, Z)) -> app_out_aaa(X, Y, cons(U, Z))

The argument filtering Pi contains the following mapping:
nil  =  nil

cons(x1, x2)  =  cons(x1, x2)

[]  =  []

.(x1, x2)  =  .(x1, x2)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

U4_aaa(x1, x2, x3)  =  U4_aaa(x3)

eq_in_aa(x1, x2)  =  eq_in_aa

eq_out_aa(x1, x2)  =  eq_out_aa

app_out_aaa(x1, x2, x3)  =  app_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

head_in_aa(x1, x2)  =  head_in_aa

head_out_aa(x1, x2)  =  head_out_aa

U6_aaa(x1, x2, x3, x4, x5)  =  U6_aaa(x5)

tail_in_aa(x1, x2)  =  tail_in_aa

tail_out_aa(x1, x2)  =  tail_out_aa

U7_aaa(x1, x2, x3, x4, x5)  =  U7_aaa(x5)

LESSLEAVES_IN_AA(x1, x2)  =  LESSLEAVES_IN_AA

U1_AA(x1, x2, x3, x4, x5)  =  U1_AA(x5)

U2_AA(x1, x2, x3, x4, x5, x6)  =  U2_AA(x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(64) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(65)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U1_AA(app_out_aaa) -> U2_AA(app_in_aaa)
   U2_AA(app_out_aaa) -> LESSLEAVES_IN_AA
   LESSLEAVES_IN_AA -> U1_AA(app_in_aaa)

The TRS R consists of the following rules:

   app_in_aaa -> U4_aaa(eq_in_aa)
   app_in_aaa -> U5_aaa(head_in_aa)
   U4_aaa(eq_out_aa) -> app_out_aaa
   U5_aaa(head_out_aa) -> U6_aaa(tail_in_aa)
   eq_in_aa -> eq_out_aa
   head_in_aa -> head_out_aa
   U6_aaa(tail_out_aa) -> U7_aaa(app_in_aaa)
   tail_in_aa -> tail_out_aa
   U7_aaa(app_out_aaa) -> app_out_aaa

The set Q consists of the following terms:

   app_in_aaa
   U4_aaa(x0)
   U5_aaa(x0)
   eq_in_aa
   head_in_aa
   U6_aaa(x0)
   tail_in_aa
   U7_aaa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(66)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_GGA(X, Y, cons(U, Z)) -> U5_GGA(X, Y, U, Z, head_in_ga(X, U))
   U5_GGA(X, Y, U, Z, head_out_ga(X, U)) -> U6_GGA(X, Y, U, Z, tail_in_ga(X, V))
   U6_GGA(X, Y, U, Z, tail_out_ga(X, V)) -> APP_IN_GGA(V, Y, Z)

The TRS R consists of the following rules:

   lessleaves_in_gg(nil, cons(X1, X2)) -> lessleaves_out_gg(nil, cons(X1, X2))
   lessleaves_in_gg(cons(U, V), cons(W, Z)) -> U1_gg(U, V, W, Z, app_in_gga(U, V, U1))
   app_in_gga(nil, Y, Z) -> U4_gga(Y, Z, eq_in_ga(Y, Z))
   eq_in_ga(X, X) -> eq_out_ga(X, X)
   U4_gga(Y, Z, eq_out_ga(Y, Z)) -> app_out_gga(nil, Y, Z)
   app_in_gga(X, Y, cons(U, Z)) -> U5_gga(X, Y, U, Z, head_in_ga(X, U))
   head_in_ga([], X3) -> head_out_ga([], X3)
   head_in_ga(.(X, X4), X) -> head_out_ga(.(X, X4), X)
   U5_gga(X, Y, U, Z, head_out_ga(X, U)) -> U6_gga(X, Y, U, Z, tail_in_ga(X, V))
   tail_in_ga([], []) -> tail_out_ga([], [])
   tail_in_ga(.(X5, X), X) -> tail_out_ga(.(X5, X), X)
   U6_gga(X, Y, U, Z, tail_out_ga(X, V)) -> U7_gga(X, Y, U, Z, app_in_gga(V, Y, Z))
   U7_gga(X, Y, U, Z, app_out_gga(V, Y, Z)) -> app_out_gga(X, Y, cons(U, Z))
   U1_gg(U, V, W, Z, app_out_gga(U, V, U1)) -> U2_gg(U, V, W, Z, U1, app_in_gga(W, Z, W1))
   U2_gg(U, V, W, Z, U1, app_out_gga(W, Z, W1)) -> U3_gg(U, V, W, Z, lessleaves_in_aa(U1, W1))
   lessleaves_in_aa(nil, cons(X1, X2)) -> lessleaves_out_aa(nil, cons(X1, X2))
   lessleaves_in_aa(cons(U, V), cons(W, Z)) -> U1_aa(U, V, W, Z, app_in_aaa(U, V, U1))
   app_in_aaa(nil, Y, Z) -> U4_aaa(Y, Z, eq_in_aa(Y, Z))
   eq_in_aa(X, X) -> eq_out_aa(X, X)
   U4_aaa(Y, Z, eq_out_aa(Y, Z)) -> app_out_aaa(nil, Y, Z)
   app_in_aaa(X, Y, cons(U, Z)) -> U5_aaa(X, Y, U, Z, head_in_aa(X, U))
   head_in_aa([], X3) -> head_out_aa([], X3)
   head_in_aa(.(X, X4), X) -> head_out_aa(.(X, X4), X)
   U5_aaa(X, Y, U, Z, head_out_aa(X, U)) -> U6_aaa(X, Y, U, Z, tail_in_aa(X, V))
   tail_in_aa([], []) -> tail_out_aa([], [])
   tail_in_aa(.(X5, X), X) -> tail_out_aa(.(X5, X), X)
   U6_aaa(X, Y, U, Z, tail_out_aa(X, V)) -> U7_aaa(X, Y, U, Z, app_in_aaa(V, Y, Z))
   U7_aaa(X, Y, U, Z, app_out_aaa(V, Y, Z)) -> app_out_aaa(X, Y, cons(U, Z))
   U1_aa(U, V, W, Z, app_out_aaa(U, V, U1)) -> U2_aa(U, V, W, Z, U1, app_in_aaa(W, Z, W1))
   U2_aa(U, V, W, Z, U1, app_out_aaa(W, Z, W1)) -> U3_aa(U, V, W, Z, lessleaves_in_aa(U1, W1))
   U3_aa(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_aa(cons(U, V), cons(W, Z))
   U3_gg(U, V, W, Z, lessleaves_out_aa(U1, W1)) -> lessleaves_out_gg(cons(U, V), cons(W, Z))

The argument filtering Pi contains the following mapping:
lessleaves_in_gg(x1, x2)  =  lessleaves_in_gg(x1, x2)

nil  =  nil

cons(x1, x2)  =  cons(x1, x2)

lessleaves_out_gg(x1, x2)  =  lessleaves_out_gg(x1, x2)

U1_gg(x1, x2, x3, x4, x5)  =  U1_gg(x1, x2, x3, x4, x5)

app_in_gga(x1, x2, x3)  =  app_in_gga(x1, x2)

U4_gga(x1, x2, x3)  =  U4_gga(x1, x3)

eq_in_ga(x1, x2)  =  eq_in_ga(x1)

eq_out_ga(x1, x2)  =  eq_out_ga(x1, x2)

app_out_gga(x1, x2, x3)  =  app_out_gga(x1, x2)

U5_gga(x1, x2, x3, x4, x5)  =  U5_gga(x1, x2, x5)

head_in_ga(x1, x2)  =  head_in_ga(x1)

[]  =  []

head_out_ga(x1, x2)  =  head_out_ga(x1)

.(x1, x2)  =  .(x1, x2)

U6_gga(x1, x2, x3, x4, x5)  =  U6_gga(x1, x2, x5)

tail_in_ga(x1, x2)  =  tail_in_ga(x1)

tail_out_ga(x1, x2)  =  tail_out_ga(x1, x2)

U7_gga(x1, x2, x3, x4, x5)  =  U7_gga(x1, x2, x5)

U2_gg(x1, x2, x3, x4, x5, x6)  =  U2_gg(x1, x2, x3, x4, x6)

U3_gg(x1, x2, x3, x4, x5)  =  U3_gg(x1, x2, x3, x4, x5)

lessleaves_in_aa(x1, x2)  =  lessleaves_in_aa

lessleaves_out_aa(x1, x2)  =  lessleaves_out_aa

U1_aa(x1, x2, x3, x4, x5)  =  U1_aa(x5)

app_in_aaa(x1, x2, x3)  =  app_in_aaa

U4_aaa(x1, x2, x3)  =  U4_aaa(x3)

eq_in_aa(x1, x2)  =  eq_in_aa

eq_out_aa(x1, x2)  =  eq_out_aa

app_out_aaa(x1, x2, x3)  =  app_out_aaa

U5_aaa(x1, x2, x3, x4, x5)  =  U5_aaa(x5)

head_in_aa(x1, x2)  =  head_in_aa

head_out_aa(x1, x2)  =  head_out_aa

U6_aaa(x1, x2, x3, x4, x5)  =  U6_aaa(x5)

tail_in_aa(x1, x2)  =  tail_in_aa

tail_out_aa(x1, x2)  =  tail_out_aa

U7_aaa(x1, x2, x3, x4, x5)  =  U7_aaa(x5)

U2_aa(x1, x2, x3, x4, x5, x6)  =  U2_aa(x6)

U3_aa(x1, x2, x3, x4, x5)  =  U3_aa(x5)

APP_IN_GGA(x1, x2, x3)  =  APP_IN_GGA(x1, x2)

U5_GGA(x1, x2, x3, x4, x5)  =  U5_GGA(x1, x2, x5)

U6_GGA(x1, x2, x3, x4, x5)  =  U6_GGA(x1, x2, x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(67) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(68)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APP_IN_GGA(X, Y, cons(U, Z)) -> U5_GGA(X, Y, U, Z, head_in_ga(X, U))
   U5_GGA(X, Y, U, Z, head_out_ga(X, U)) -> U6_GGA(X, Y, U, Z, tail_in_ga(X, V))
   U6_GGA(X, Y, U, Z, tail_out_ga(X, V)) -> APP_IN_GGA(V, Y, Z)

The TRS R consists of the following rules:

   head_in_ga([], X3) -> head_out_ga([], X3)
   head_in_ga(.(X, X4), X) -> head_out_ga(.(X, X4), X)
   tail_in_ga([], []) -> tail_out_ga([], [])
   tail_in_ga(.(X5, X), X) -> tail_out_ga(.(X5, X), X)

The argument filtering Pi contains the following mapping:
cons(x1, x2)  =  cons(x1, x2)

head_in_ga(x1, x2)  =  head_in_ga(x1)

[]  =  []

head_out_ga(x1, x2)  =  head_out_ga(x1)

.(x1, x2)  =  .(x1, x2)

tail_in_ga(x1, x2)  =  tail_in_ga(x1)

tail_out_ga(x1, x2)  =  tail_out_ga(x1, x2)

APP_IN_GGA(x1, x2, x3)  =  APP_IN_GGA(x1, x2)

U5_GGA(x1, x2, x3, x4, x5)  =  U5_GGA(x1, x2, x5)

U6_GGA(x1, x2, x3, x4, x5)  =  U6_GGA(x1, x2, x5)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(69) PrologToIRSwTTransformerProof (SOUND)
Transformed Prolog program to IRSwT according to method in Master Thesis of A. Weinert

{
    "root": 3,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(lessleaves (nil) (cons X1 X2))",
                null
            ],
            [
                "(lessleaves (cons U V) (cons W Z))",
                "(',' (app U V U1) (',' (app W Z W1) (lessleaves U1 W1)))"
            ],
            [
                "(app (nil) Y Z)",
                "(',' (!) (eq Y Z))"
            ],
            [
                "(app X Y (cons U Z))",
                "(',' (head X U) (',' (tail X V) (app V Y Z)))"
            ],
            [
                "(head ([]) X3)",
                null
            ],
            [
                "(head (. X X4) X)",
                null
            ],
            [
                "(tail ([]) ([]))",
                null
            ],
            [
                "(tail (. X5 X) X)",
                null
            ],
            [
                "(eq X X)",
                null
            ]
        ]
    },
    "graph": {
        "nodes": {
            "type": "Nodes",
            "350": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(app T21 T22 X30)"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(app T21 T22 X30)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T21",
                        "T22"
                    ],
                    "free": ["X30"],
                    "exprvars": []
                }
            },
            "790": {
                "goal": [{
                    "clause": 7,
                    "scope": 11,
                    "term": "(',' (tail ([]) X192) (app X192 T115 X194))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X194",
                        "X192"
                    ],
                    "exprvars": []
                }
            },
            "395": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (head T39 X71) (',' (tail T39 X70) (app X70 T40 X72)))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T39 T40 X30)",
                        "(app (nil) X44 X45)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T39",
                        "T40"
                    ],
                    "free": [
                        "X30",
                        "X44",
                        "X45",
                        "X71",
                        "X72",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "791": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app ([]) T115 X194)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X194"],
                    "exprvars": []
                }
            },
            "352": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_2) (eq T30 X46))"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(app (nil) T30 X30)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T30"],
                    "free": [
                        "X30",
                        "X46"
                    ],
                    "exprvars": []
                }
            },
            "792": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 12,
                        "term": "(app ([]) T115 X194)"
                    },
                    {
                        "clause": 3,
                        "scope": 12,
                        "term": "(app ([]) T115 X194)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X194"],
                    "exprvars": []
                }
            },
            "353": {
                "goal": [{
                    "clause": 3,
                    "scope": 2,
                    "term": "(app T21 T22 X30)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T21 T22 X30)",
                        "(app (nil) X44 X45)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T21",
                        "T22"
                    ],
                    "free": [
                        "X30",
                        "X44",
                        "X45"
                    ],
                    "exprvars": []
                }
            },
            "793": {
                "goal": [{
                    "clause": 3,
                    "scope": 12,
                    "term": "(app ([]) T115 X194)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X194"],
                    "exprvars": []
                }
            },
            "354": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(eq T30 X46)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T30"],
                    "free": ["X46"],
                    "exprvars": []
                }
            },
            "750": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(eq T99 X168)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X168"],
                    "exprvars": []
                }
            },
            "355": {
                "goal": [{
                    "clause": 8,
                    "scope": 3,
                    "term": "(eq T30 X46)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T30"],
                    "free": ["X46"],
                    "exprvars": []
                }
            },
            "751": {
                "goal": [{
                    "clause": 8,
                    "scope": 9,
                    "term": "(eq T99 X168)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X168"],
                    "exprvars": []
                }
            },
            "830": {
                "goal": [{
                    "clause": 7,
                    "scope": 14,
                    "term": "(',' (tail ([]) X239) (app X239 T122 X241))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X241",
                        "X239"
                    ],
                    "exprvars": []
                }
            },
            "831": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app ([]) T122 X241)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X241"],
                    "exprvars": []
                }
            },
            "436": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 5,
                        "term": "(',' (tail ([]) X70) (app X70 T40 X72))"
                    },
                    {
                        "clause": 7,
                        "scope": 5,
                        "term": "(',' (tail ([]) X70) (app X70 T40 X72))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T40"],
                    "free": [
                        "X72",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "832": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "833": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "834": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "835": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (tail (. T133 T134) X192) (app X192 T135 X194))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X194",
                        "X192"
                    ],
                    "exprvars": []
                }
            },
            "836": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "837": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 15,
                        "term": "(',' (tail (. T133 T134) X192) (app X192 T135 X194))"
                    },
                    {
                        "clause": 7,
                        "scope": 15,
                        "term": "(',' (tail (. T133 T134) X192) (app X192 T135 X194))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X194",
                        "X192"
                    ],
                    "exprvars": []
                }
            },
            "838": {
                "goal": [{
                    "clause": 7,
                    "scope": 15,
                    "term": "(',' (tail (. T133 T134) X192) (app X192 T135 X194))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X194",
                        "X192"
                    ],
                    "exprvars": []
                }
            },
            "839": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T146 T147 X194)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X194"],
                    "exprvars": []
                }
            },
            "10": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(lessleaves T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "13": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "14": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "15": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "363": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "365": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "442": {
                "goal": [{
                    "clause": 6,
                    "scope": 5,
                    "term": "(',' (tail ([]) X70) (app X70 T40 X72))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T40"],
                    "free": [
                        "X72",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "3": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(lessleaves T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "444": {
                "goal": [{
                    "clause": 7,
                    "scope": 5,
                    "term": "(',' (tail ([]) X70) (app X70 T40 X72))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T40"],
                    "free": [
                        "X72",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "840": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T93 T94 X153)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X153"],
                    "exprvars": []
                }
            },
            "841": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(lessleaves T151 T150)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "6": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(lessleaves T1 T2)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(lessleaves T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "689": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 7,
                        "term": "(lessleaves T26 T59)"
                    },
                    {
                        "clause": 1,
                        "scope": 7,
                        "term": "(lessleaves T26 T59)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "404": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 4,
                        "term": "(',' (head T39 X71) (',' (tail T39 X70) (app X70 T40 X72)))"
                    },
                    {
                        "clause": 5,
                        "scope": 4,
                        "term": "(',' (head T39 X71) (',' (tail T39 X70) (app X70 T40 X72)))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(app T39 T40 X30)",
                        "(app (nil) X44 X45)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T39",
                        "T40"
                    ],
                    "free": [
                        "X30",
                        "X44",
                        "X45",
                        "X71",
                        "X72",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "9": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(lessleaves T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "729": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "21": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app T21 T22 X30) (',' (app T23 T24 X31) (lessleaves X30 X31)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T21",
                        "T22",
                        "T23",
                        "T24"
                    ],
                    "free": [
                        "X30",
                        "X31"
                    ],
                    "exprvars": []
                }
            },
            "23": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "294": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T21 T22 X30)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T21",
                        "T22"
                    ],
                    "free": ["X30"],
                    "exprvars": []
                }
            },
            "295": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app T23 T24 X31) (lessleaves T26 X31))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T23",
                        "T24"
                    ],
                    "free": ["X31"],
                    "exprvars": []
                }
            },
            "451": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app ([]) T40 X72)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T40"],
                    "free": ["X72"],
                    "exprvars": []
                }
            },
            "730": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "412": {
                "goal": [{
                    "clause": 4,
                    "scope": 4,
                    "term": "(',' (head T39 X71) (',' (tail T39 X70) (app X70 T40 X72)))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T39 T40 X30)",
                        "(app (nil) X44 X45)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T39",
                        "T40"
                    ],
                    "free": [
                        "X30",
                        "X44",
                        "X45",
                        "X71",
                        "X72",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "731": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "699": {
                "goal": [{
                    "clause": 0,
                    "scope": 7,
                    "term": "(lessleaves T26 T59)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "732": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app T87 T88 X152) (',' (app T89 T90 X153) (lessleaves X152 X153)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X152",
                        "X153"
                    ],
                    "exprvars": []
                }
            },
            "733": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "734": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T87 T88 X152)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X152"],
                    "exprvars": []
                }
            },
            "416": {
                "goal": [{
                    "clause": 5,
                    "scope": 4,
                    "term": "(',' (head T39 X71) (',' (tail T39 X70) (app X70 T40 X72)))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T39 T40 X30)",
                        "(app (nil) X44 X45)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T39",
                        "T40"
                    ],
                    "free": [
                        "X30",
                        "X44",
                        "X45",
                        "X71",
                        "X72",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "614": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "735": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app T93 T94 X153) (lessleaves T92 X153))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X153"],
                    "exprvars": []
                }
            },
            "615": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (tail (. T47 T48) X70) (app X70 T40 X72))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T40",
                        "T47",
                        "T48"
                    ],
                    "free": [
                        "X72",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "736": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 8,
                        "term": "(app T87 T88 X152)"
                    },
                    {
                        "clause": 3,
                        "scope": 8,
                        "term": "(app T87 T88 X152)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X152"],
                    "exprvars": []
                }
            },
            "616": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "617": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 6,
                        "term": "(',' (tail (. T47 T48) X70) (app X70 T40 X72))"
                    },
                    {
                        "clause": 7,
                        "scope": 6,
                        "term": "(',' (tail (. T47 T48) X70) (app X70 T40 X72))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T40",
                        "T47",
                        "T48"
                    ],
                    "free": [
                        "X72",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "618": {
                "goal": [{
                    "clause": 7,
                    "scope": 6,
                    "term": "(',' (tail (. T47 T48) X70) (app X70 T40 X72))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T40",
                        "T47",
                        "T48"
                    ],
                    "free": [
                        "X72",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "780": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "660": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T23 T24 X31)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T23",
                        "T24"
                    ],
                    "free": ["X31"],
                    "exprvars": []
                }
            },
            "781": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "661": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(lessleaves T26 T59)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "782": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (head T112 X193) (',' (tail T112 X192) (app X192 T113 X194)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X193",
                        "X194",
                        "X192"
                    ],
                    "exprvars": []
                }
            },
            "783": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 10,
                        "term": "(',' (head T112 X193) (',' (tail T112 X192) (app X192 T113 X194)))"
                    },
                    {
                        "clause": 5,
                        "scope": 10,
                        "term": "(',' (head T112 X193) (',' (tail T112 X192) (app X192 T113 X194)))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X193",
                        "X194",
                        "X192"
                    ],
                    "exprvars": []
                }
            },
            "784": {
                "goal": [{
                    "clause": 4,
                    "scope": 10,
                    "term": "(',' (head T112 X193) (',' (tail T112 X192) (app X192 T113 X194)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X193",
                        "X194",
                        "X192"
                    ],
                    "exprvars": []
                }
            },
            "785": {
                "goal": [{
                    "clause": 5,
                    "scope": 10,
                    "term": "(',' (head T112 X193) (',' (tail T112 X192) (app X192 T113 X194)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X193",
                        "X194",
                        "X192"
                    ],
                    "exprvars": []
                }
            },
            "786": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (tail ([]) X192) (app X192 T115 X194))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X194",
                        "X192"
                    ],
                    "exprvars": []
                }
            },
            "622": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T56 T40 X72)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T40",
                        "T56"
                    ],
                    "free": ["X72"],
                    "exprvars": []
                }
            },
            "787": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "700": {
                "goal": [{
                    "clause": 1,
                    "scope": 7,
                    "term": "(lessleaves T26 T59)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "788": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 11,
                        "term": "(',' (tail ([]) X192) (app X192 T115 X194))"
                    },
                    {
                        "clause": 7,
                        "scope": 11,
                        "term": "(',' (tail ([]) X192) (app X192 T115 X194))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X194",
                        "X192"
                    ],
                    "exprvars": []
                }
            },
            "426": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (tail ([]) X70) (app X70 T40 X72))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T40"],
                    "free": [
                        "X72",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "789": {
                "goal": [{
                    "clause": 6,
                    "scope": 11,
                    "term": "(',' (tail ([]) X192) (app X192 T115 X194))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X194",
                        "X192"
                    ],
                    "exprvars": []
                }
            },
            "822": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (head ([]) X240) (',' (tail ([]) X239) (app X239 T122 X241)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X240",
                        "X241",
                        "X239"
                    ],
                    "exprvars": []
                }
            },
            "823": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 13,
                        "term": "(',' (head ([]) X240) (',' (tail ([]) X239) (app X239 T122 X241)))"
                    },
                    {
                        "clause": 5,
                        "scope": 13,
                        "term": "(',' (head ([]) X240) (',' (tail ([]) X239) (app X239 T122 X241)))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X240",
                        "X241",
                        "X239"
                    ],
                    "exprvars": []
                }
            },
            "428": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "748": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_8) (eq T99 X168))"
                    },
                    {
                        "clause": 3,
                        "scope": 8,
                        "term": "(app T87 T88 X152)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X152",
                        "X168"
                    ],
                    "exprvars": []
                }
            },
            "825": {
                "goal": [{
                    "clause": 4,
                    "scope": 13,
                    "term": "(',' (head ([]) X240) (',' (tail ([]) X239) (app X239 T122 X241)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X240",
                        "X241",
                        "X239"
                    ],
                    "exprvars": []
                }
            },
            "749": {
                "goal": [{
                    "clause": 3,
                    "scope": 8,
                    "term": "(app T87 T88 X152)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T87 T88 X152)",
                        "(app (nil) X166 X167)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X152",
                        "X166",
                        "X167"
                    ],
                    "exprvars": []
                }
            },
            "826": {
                "goal": [{
                    "clause": 5,
                    "scope": 13,
                    "term": "(',' (head ([]) X240) (',' (tail ([]) X239) (app X239 T122 X241)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X240",
                        "X241",
                        "X239"
                    ],
                    "exprvars": []
                }
            },
            "827": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (tail ([]) X239) (app X239 T122 X241))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X241",
                        "X239"
                    ],
                    "exprvars": []
                }
            },
            "828": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 14,
                        "term": "(',' (tail ([]) X239) (app X239 T122 X241))"
                    },
                    {
                        "clause": 7,
                        "scope": 14,
                        "term": "(',' (tail ([]) X239) (app X239 T122 X241))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X241",
                        "X239"
                    ],
                    "exprvars": []
                }
            },
            "829": {
                "goal": [{
                    "clause": 6,
                    "scope": 14,
                    "term": "(',' (tail ([]) X239) (app X239 T122 X241))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X241",
                        "X239"
                    ],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 3,
                "to": 6,
                "label": "CASE"
            },
            {
                "from": 6,
                "to": 9,
                "label": "PARALLEL"
            },
            {
                "from": 6,
                "to": 10,
                "label": "PARALLEL"
            },
            {
                "from": 9,
                "to": 13,
                "label": "EVAL with clause\nlessleaves(nil, cons(X14, X15)).\nand substitutionT1 -> nil,\nX14 -> T11,\nX15 -> T12,\nT2 -> cons(T11, T12)"
            },
            {
                "from": 9,
                "to": 14,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 10,
                "to": 21,
                "label": "EVAL with clause\nlessleaves(cons(X26, X27), cons(X28, X29)) :- ','(app(X26, X27, X30), ','(app(X28, X29, X31), lessleaves(X30, X31))).\nand substitutionX26 -> T21,\nX27 -> T22,\nT1 -> cons(T21, T22),\nX28 -> T23,\nX29 -> T24,\nT2 -> cons(T23, T24)"
            },
            {
                "from": 10,
                "to": 23,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 13,
                "to": 15,
                "label": "SUCCESS"
            },
            {
                "from": 21,
                "to": 294,
                "label": "SPLIT 1"
            },
            {
                "from": 21,
                "to": 295,
                "label": "SPLIT 2\nnew knowledge:\nT21 is ground\nT22 is ground\nreplacements:X30 -> T26"
            },
            {
                "from": 294,
                "to": 350,
                "label": "CASE"
            },
            {
                "from": 295,
                "to": 660,
                "label": "SPLIT 1"
            },
            {
                "from": 295,
                "to": 661,
                "label": "SPLIT 2\nnew knowledge:\nT23 is ground\nT24 is ground\nreplacements:X31 -> T59"
            },
            {
                "from": 350,
                "to": 352,
                "label": "EVAL with clause\napp(nil, X44, X45) :- ','(!_2, eq(X44, X45)).\nand substitutionT21 -> nil,\nT22 -> T30,\nX44 -> T30,\nX30 -> X46,\nX45 -> X46"
            },
            {
                "from": 350,
                "to": 353,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 352,
                "to": 354,
                "label": "CUT"
            },
            {
                "from": 353,
                "to": 395,
                "label": "ONLY EVAL with clause\napp(X66, X67, cons(X68, X69)) :- ','(head(X66, X68), ','(tail(X66, X70), app(X70, X67, X69))).\nand substitutionT21 -> T39,\nX66 -> T39,\nT22 -> T40,\nX67 -> T40,\nX68 -> X71,\nX69 -> X72,\nX30 -> cons(X71, X72)"
            },
            {
                "from": 354,
                "to": 355,
                "label": "CASE"
            },
            {
                "from": 355,
                "to": 363,
                "label": "ONLY EVAL with clause\neq(X49, X49).\nand substitutionT30 -> T33,\nX49 -> T33,\nX46 -> T33"
            },
            {
                "from": 363,
                "to": 365,
                "label": "SUCCESS"
            },
            {
                "from": 395,
                "to": 404,
                "label": "CASE"
            },
            {
                "from": 404,
                "to": 412,
                "label": "PARALLEL"
            },
            {
                "from": 404,
                "to": 416,
                "label": "PARALLEL"
            },
            {
                "from": 412,
                "to": 426,
                "label": "EVAL with clause\nhead([], X84).\nand substitutionT39 -> [],\nX71 -> X85,\nX84 -> X85"
            },
            {
                "from": 412,
                "to": 428,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 416,
                "to": 615,
                "label": "EVAL with clause\nhead(.(X101, X102), X101).\nand substitutionX101 -> T47,\nX102 -> T48,\nT39 -> .(T47, T48),\nX71 -> T47"
            },
            {
                "from": 416,
                "to": 616,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 426,
                "to": 436,
                "label": "CASE"
            },
            {
                "from": 436,
                "to": 442,
                "label": "PARALLEL"
            },
            {
                "from": 436,
                "to": 444,
                "label": "PARALLEL"
            },
            {
                "from": 442,
                "to": 451,
                "label": "ONLY EVAL with clause\ntail([], []).\nand substitutionX70 -> []"
            },
            {
                "from": 444,
                "to": 614,
                "label": "BACKTRACK\nfor clause: tail(.(X5, X), X)because of non-unification"
            },
            {
                "from": 451,
                "to": 294,
                "label": "INSTANCE with matching:\nT21 -> []\nT22 -> T40\nX30 -> X72"
            },
            {
                "from": 615,
                "to": 617,
                "label": "CASE"
            },
            {
                "from": 617,
                "to": 618,
                "label": "BACKTRACK\nfor clause: tail([], [])because of non-unification"
            },
            {
                "from": 618,
                "to": 622,
                "label": "ONLY EVAL with clause\ntail(.(X113, X114), X114).\nand substitutionT47 -> T55,\nX113 -> T55,\nT48 -> T56,\nX114 -> T56,\nX70 -> T56"
            },
            {
                "from": 622,
                "to": 294,
                "label": "INSTANCE with matching:\nT21 -> T56\nT22 -> T40\nX30 -> X72"
            },
            {
                "from": 660,
                "to": 294,
                "label": "INSTANCE with matching:\nT21 -> T23\nT22 -> T24\nX30 -> X31"
            },
            {
                "from": 661,
                "to": 689,
                "label": "CASE"
            },
            {
                "from": 689,
                "to": 699,
                "label": "PARALLEL"
            },
            {
                "from": 689,
                "to": 700,
                "label": "PARALLEL"
            },
            {
                "from": 699,
                "to": 729,
                "label": "EVAL with clause\nlessleaves(nil, cons(X136, X137)).\nand substitutionT26 -> nil,\nX136 -> T73,\nX137 -> T74,\nT59 -> cons(T73, T74)"
            },
            {
                "from": 699,
                "to": 730,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 700,
                "to": 732,
                "label": "EVAL with clause\nlessleaves(cons(X148, X149), cons(X150, X151)) :- ','(app(X148, X149, X152), ','(app(X150, X151, X153), lessleaves(X152, X153))).\nand substitutionX148 -> T87,\nX149 -> T88,\nT26 -> cons(T87, T88),\nX150 -> T89,\nX151 -> T90,\nT59 -> cons(T89, T90),\nT83 -> T87,\nT84 -> T88,\nT85 -> T89,\nT86 -> T90"
            },
            {
                "from": 700,
                "to": 733,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 729,
                "to": 731,
                "label": "SUCCESS"
            },
            {
                "from": 732,
                "to": 734,
                "label": "SPLIT 1"
            },
            {
                "from": 732,
                "to": 735,
                "label": "SPLIT 2\nreplacements:X152 -> T92,\nT89 -> T93,\nT90 -> T94"
            },
            {
                "from": 734,
                "to": 736,
                "label": "CASE"
            },
            {
                "from": 735,
                "to": 840,
                "label": "SPLIT 1"
            },
            {
                "from": 735,
                "to": 841,
                "label": "SPLIT 2\nreplacements:X153 -> T150,\nT92 -> T151"
            },
            {
                "from": 736,
                "to": 748,
                "label": "EVAL with clause\napp(nil, X166, X167) :- ','(!_8, eq(X166, X167)).\nand substitutionT87 -> nil,\nT88 -> T99,\nX166 -> T99,\nX152 -> X168,\nX167 -> X168,\nT98 -> T99"
            },
            {
                "from": 736,
                "to": 749,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 748,
                "to": 750,
                "label": "CUT"
            },
            {
                "from": 749,
                "to": 782,
                "label": "ONLY EVAL with clause\napp(X188, X189, cons(X190, X191)) :- ','(head(X188, X190), ','(tail(X188, X192), app(X192, X189, X191))).\nand substitutionT87 -> T112,\nX188 -> T112,\nT88 -> T113,\nX189 -> T113,\nX190 -> X193,\nX191 -> X194,\nX152 -> cons(X193, X194),\nT110 -> T112,\nT111 -> T113"
            },
            {
                "from": 750,
                "to": 751,
                "label": "CASE"
            },
            {
                "from": 751,
                "to": 780,
                "label": "ONLY EVAL with clause\neq(X171, X171).\nand substitutionT99 -> T102,\nX171 -> T102,\nX168 -> T102"
            },
            {
                "from": 780,
                "to": 781,
                "label": "SUCCESS"
            },
            {
                "from": 782,
                "to": 783,
                "label": "CASE"
            },
            {
                "from": 783,
                "to": 784,
                "label": "PARALLEL"
            },
            {
                "from": 783,
                "to": 785,
                "label": "PARALLEL"
            },
            {
                "from": 784,
                "to": 786,
                "label": "EVAL with clause\nhead([], X206).\nand substitutionT112 -> [],\nX193 -> X207,\nX206 -> X207,\nT113 -> T115"
            },
            {
                "from": 784,
                "to": 787,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 785,
                "to": 835,
                "label": "EVAL with clause\nhead(.(X280, X281), X280).\nand substitutionX280 -> T133,\nX281 -> T134,\nT112 -> .(T133, T134),\nX193 -> T133,\nT131 -> T133,\nT132 -> T134,\nT113 -> T135"
            },
            {
                "from": 785,
                "to": 836,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 786,
                "to": 788,
                "label": "CASE"
            },
            {
                "from": 788,
                "to": 789,
                "label": "PARALLEL"
            },
            {
                "from": 788,
                "to": 790,
                "label": "PARALLEL"
            },
            {
                "from": 789,
                "to": 791,
                "label": "ONLY EVAL with clause\ntail([], []).\nand substitutionX192 -> []"
            },
            {
                "from": 790,
                "to": 834,
                "label": "BACKTRACK\nfor clause: tail(.(X5, X), X)because of non-unification"
            },
            {
                "from": 791,
                "to": 792,
                "label": "CASE"
            },
            {
                "from": 792,
                "to": 793,
                "label": "BACKTRACK\nfor clause: app(nil, Y, Z) :- ','(!, eq(Y, Z))because of non-unification"
            },
            {
                "from": 793,
                "to": 822,
                "label": "ONLY EVAL with clause\napp(X235, X236, cons(X237, X238)) :- ','(head(X235, X237), ','(tail(X235, X239), app(X239, X236, X238))).\nand substitutionX235 -> [],\nT115 -> T122,\nX236 -> T122,\nX237 -> X240,\nX238 -> X241,\nX194 -> cons(X240, X241),\nT121 -> T122"
            },
            {
                "from": 822,
                "to": 823,
                "label": "CASE"
            },
            {
                "from": 823,
                "to": 825,
                "label": "PARALLEL"
            },
            {
                "from": 823,
                "to": 826,
                "label": "PARALLEL"
            },
            {
                "from": 825,
                "to": 827,
                "label": "ONLY EVAL with clause\nhead([], X259).\nand substitutionX240 -> X260,\nX259 -> X260"
            },
            {
                "from": 826,
                "to": 833,
                "label": "BACKTRACK\nfor clause: head(.(X, X4), X)because of non-unification"
            },
            {
                "from": 827,
                "to": 828,
                "label": "CASE"
            },
            {
                "from": 828,
                "to": 829,
                "label": "PARALLEL"
            },
            {
                "from": 828,
                "to": 830,
                "label": "PARALLEL"
            },
            {
                "from": 829,
                "to": 831,
                "label": "ONLY EVAL with clause\ntail([], []).\nand substitutionX239 -> []"
            },
            {
                "from": 830,
                "to": 832,
                "label": "BACKTRACK\nfor clause: tail(.(X5, X), X)because of non-unification"
            },
            {
                "from": 831,
                "to": 791,
                "label": "INSTANCE with matching:\nT115 -> T122\nX194 -> X241"
            },
            {
                "from": 835,
                "to": 837,
                "label": "CASE"
            },
            {
                "from": 837,
                "to": 838,
                "label": "BACKTRACK\nfor clause: tail([], [])because of non-unification"
            },
            {
                "from": 838,
                "to": 839,
                "label": "ONLY EVAL with clause\ntail(.(X292, X293), X293).\nand substitutionT133 -> T144,\nX292 -> T144,\nT134 -> T146,\nX293 -> T146,\nX192 -> T146,\nT145 -> T146,\nT135 -> T147"
            },
            {
                "from": 839,
                "to": 734,
                "label": "INSTANCE with matching:\nT87 -> T146\nT88 -> T147\nX152 -> X194"
            },
            {
                "from": 840,
                "to": 734,
                "label": "INSTANCE with matching:\nT87 -> T93\nT88 -> T94\nX152 -> X153"
            },
            {
                "from": 841,
                "to": 661,
                "label": "INSTANCE with matching:\nT26 -> T151\nT59 -> T150"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(70)
Complex Obligation (AND)

----------------------------------------

(71)
Obligation:
Rules:
f793_out -> f792_out :|: TRUE
f792_in -> f793_in :|: TRUE
f822_out -> f793_out :|: TRUE
f793_in -> f822_in :|: TRUE
f831_in -> f791_in :|: TRUE
f791_out -> f831_out :|: TRUE
f828_in -> f829_in :|: TRUE
f829_out -> f828_out :|: TRUE
f830_out -> f828_out :|: TRUE
f828_in -> f830_in :|: TRUE
f792_out -> f791_out :|: TRUE
f791_in -> f792_in :|: TRUE
f823_out -> f822_out :|: TRUE
f822_in -> f823_in :|: TRUE
f827_out -> f825_out :|: TRUE
f825_in -> f827_in :|: TRUE
f831_out -> f829_out :|: TRUE
f829_in -> f831_in :|: TRUE
f827_in -> f828_in :|: TRUE
f828_out -> f827_out :|: TRUE
f825_out -> f823_out :|: TRUE
f823_in -> f826_in :|: TRUE
f823_in -> f825_in :|: TRUE
f826_out -> f823_out :|: TRUE
f6_out(T1, T2) -> f3_out(T1, T2) :|: TRUE
f3_in(x, x1) -> f6_in(x, x1) :|: TRUE
f10_out(x2, x3) -> f6_out(x2, x3) :|: TRUE
f9_out(x4, x5) -> f6_out(x4, x5) :|: TRUE
f6_in(x6, x7) -> f9_in(x6, x7) :|: TRUE
f6_in(x8, x9) -> f10_in(x8, x9) :|: TRUE
f21_out(T21, T22, T23, T24) -> f10_out(cons(T21, T22), cons(T23, T24)) :|: TRUE
f10_in(cons(x10, x11), cons(x12, x13)) -> f21_in(x10, x11, x12, x13) :|: TRUE
f23_out -> f10_out(x14, x15) :|: TRUE
f10_in(x16, x17) -> f23_in :|: TRUE
f21_in(x18, x19, x20, x21) -> f294_in(x18, x19) :|: TRUE
f295_out(x22, x23) -> f21_out(x24, x25, x22, x23) :|: TRUE
f294_out(x26, x27) -> f295_in(x28, x29) :|: TRUE
f295_in(x30, x31) -> f660_in(x30, x31) :|: TRUE
f660_out(x32, x33) -> f661_in :|: TRUE
f661_out -> f295_out(x34, x35) :|: TRUE
f689_out -> f661_out :|: TRUE
f661_in -> f689_in :|: TRUE
f700_out -> f689_out :|: TRUE
f689_in -> f700_in :|: TRUE
f689_in -> f699_in :|: TRUE
f699_out -> f689_out :|: TRUE
f732_out -> f700_out :|: TRUE
f700_in -> f733_in :|: TRUE
f733_out -> f700_out :|: TRUE
f700_in -> f732_in :|: TRUE
f732_in -> f734_in :|: TRUE
f735_out -> f732_out :|: TRUE
f734_out -> f735_in :|: TRUE
f841_out -> f735_out :|: TRUE
f840_out -> f841_in :|: TRUE
f735_in -> f840_in :|: TRUE
f734_out -> f840_out :|: TRUE
f840_in -> f734_in :|: TRUE
f736_out -> f734_out :|: TRUE
f734_in -> f736_in :|: TRUE
f736_in -> f749_in :|: TRUE
f749_out -> f736_out :|: TRUE
f736_in -> f748_in :|: TRUE
f748_out -> f736_out :|: TRUE
f782_out -> f749_out :|: TRUE
f749_in -> f782_in :|: TRUE
f782_in -> f783_in :|: TRUE
f783_out -> f782_out :|: TRUE
f783_in -> f784_in :|: TRUE
f785_out -> f783_out :|: TRUE
f783_in -> f785_in :|: TRUE
f784_out -> f783_out :|: TRUE
f786_out -> f784_out :|: TRUE
f787_out -> f784_out :|: TRUE
f784_in -> f786_in :|: TRUE
f784_in -> f787_in :|: TRUE
f788_out -> f786_out :|: TRUE
f786_in -> f788_in :|: TRUE
f788_in -> f789_in :|: TRUE
f790_out -> f788_out :|: TRUE
f789_out -> f788_out :|: TRUE
f788_in -> f790_in :|: TRUE
f791_out -> f789_out :|: TRUE
f789_in -> f791_in :|: TRUE
Start term: f3_in(T1, T2)

----------------------------------------

(72) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(73)
TRUE

----------------------------------------

(74)
Obligation:
Rules:
f782_in -> f783_in :|: TRUE
f783_out -> f782_out :|: TRUE
f783_in -> f784_in :|: TRUE
f785_out -> f783_out :|: TRUE
f783_in -> f785_in :|: TRUE
f784_out -> f783_out :|: TRUE
f736_out -> f734_out :|: TRUE
f734_in -> f736_in :|: TRUE
f736_in -> f749_in :|: TRUE
f749_out -> f736_out :|: TRUE
f736_in -> f748_in :|: TRUE
f748_out -> f736_out :|: TRUE
f835_in -> f837_in :|: TRUE
f837_out -> f835_out :|: TRUE
f782_out -> f749_out :|: TRUE
f749_in -> f782_in :|: TRUE
f837_in -> f838_in :|: TRUE
f838_out -> f837_out :|: TRUE
f785_in -> f835_in :|: TRUE
f835_out -> f785_out :|: TRUE
f785_in -> f836_in :|: TRUE
f836_out -> f785_out :|: TRUE
f734_out -> f839_out :|: TRUE
f839_in -> f734_in :|: TRUE
f839_out -> f838_out :|: TRUE
f838_in -> f839_in :|: TRUE
f6_out(T1, T2) -> f3_out(T1, T2) :|: TRUE
f3_in(x, x1) -> f6_in(x, x1) :|: TRUE
f10_out(x2, x3) -> f6_out(x2, x3) :|: TRUE
f9_out(x4, x5) -> f6_out(x4, x5) :|: TRUE
f6_in(x6, x7) -> f9_in(x6, x7) :|: TRUE
f6_in(x8, x9) -> f10_in(x8, x9) :|: TRUE
f21_out(T21, T22, T23, T24) -> f10_out(cons(T21, T22), cons(T23, T24)) :|: TRUE
f10_in(cons(x10, x11), cons(x12, x13)) -> f21_in(x10, x11, x12, x13) :|: TRUE
f23_out -> f10_out(x14, x15) :|: TRUE
f10_in(x16, x17) -> f23_in :|: TRUE
f21_in(x18, x19, x20, x21) -> f294_in(x18, x19) :|: TRUE
f295_out(x22, x23) -> f21_out(x24, x25, x22, x23) :|: TRUE
f294_out(x26, x27) -> f295_in(x28, x29) :|: TRUE
f295_in(x30, x31) -> f660_in(x30, x31) :|: TRUE
f660_out(x32, x33) -> f661_in :|: TRUE
f661_out -> f295_out(x34, x35) :|: TRUE
f689_out -> f661_out :|: TRUE
f661_in -> f689_in :|: TRUE
f700_out -> f689_out :|: TRUE
f689_in -> f700_in :|: TRUE
f689_in -> f699_in :|: TRUE
f699_out -> f689_out :|: TRUE
f732_out -> f700_out :|: TRUE
f700_in -> f733_in :|: TRUE
f733_out -> f700_out :|: TRUE
f700_in -> f732_in :|: TRUE
f732_in -> f734_in :|: TRUE
f735_out -> f732_out :|: TRUE
f734_out -> f735_in :|: TRUE
f841_out -> f735_out :|: TRUE
f840_out -> f841_in :|: TRUE
f735_in -> f840_in :|: TRUE
f734_out -> f840_out :|: TRUE
f840_in -> f734_in :|: TRUE
Start term: f3_in(T1, T2)

----------------------------------------

(75) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(76)
TRUE

----------------------------------------

(77)
Obligation:
Rules:
f783_in -> f784_in :|: TRUE
f785_out -> f783_out :|: TRUE
f783_in -> f785_in :|: TRUE
f784_out -> f783_out :|: TRUE
f736_out -> f734_out :|: TRUE
f734_in -> f736_in :|: TRUE
f750_out -> f748_out :|: TRUE
f748_in -> f750_in :|: TRUE
f788_in -> f789_in :|: TRUE
f790_out -> f788_out :|: TRUE
f789_out -> f788_out :|: TRUE
f788_in -> f790_in :|: TRUE
f792_out -> f791_out :|: TRUE
f791_in -> f792_in :|: TRUE
f828_in -> f829_in :|: TRUE
f829_out -> f828_out :|: TRUE
f830_out -> f828_out :|: TRUE
f828_in -> f830_in :|: TRUE
f788_out -> f786_out :|: TRUE
f786_in -> f788_in :|: TRUE
f841_in -> f661_in :|: TRUE
f661_out -> f841_out :|: TRUE
f782_out -> f749_out :|: TRUE
f749_in -> f782_in :|: TRUE
f732_out -> f700_out :|: TRUE
f700_in -> f733_in :|: TRUE
f733_out -> f700_out :|: TRUE
f700_in -> f732_in :|: TRUE
f841_out -> f735_out :|: TRUE
f840_out -> f841_in :|: TRUE
f735_in -> f840_in :|: TRUE
f839_out -> f838_out :|: TRUE
f838_in -> f839_in :|: TRUE
f734_out -> f840_out :|: TRUE
f840_in -> f734_in :|: TRUE
f793_out -> f792_out :|: TRUE
f792_in -> f793_in :|: TRUE
f833_out -> f826_out :|: TRUE
f826_in -> f833_in :|: TRUE
f780_in -> f780_out :|: TRUE
f786_out -> f784_out :|: TRUE
f787_out -> f784_out :|: TRUE
f784_in -> f786_in :|: TRUE
f784_in -> f787_in :|: TRUE
f751_in -> f780_in :|: TRUE
f780_out -> f751_out :|: TRUE
f837_in -> f838_in :|: TRUE
f838_out -> f837_out :|: TRUE
f827_in -> f828_in :|: TRUE
f828_out -> f827_out :|: TRUE
f825_out -> f823_out :|: TRUE
f823_in -> f826_in :|: TRUE
f823_in -> f825_in :|: TRUE
f826_out -> f823_out :|: TRUE
f822_out -> f793_out :|: TRUE
f793_in -> f822_in :|: TRUE
f782_in -> f783_in :|: TRUE
f783_out -> f782_out :|: TRUE
f831_in -> f791_in :|: TRUE
f791_out -> f831_out :|: TRUE
f750_in -> f751_in :|: TRUE
f751_out -> f750_out :|: TRUE
f835_in -> f837_in :|: TRUE
f837_out -> f835_out :|: TRUE
f832_out -> f830_out :|: TRUE
f830_in -> f832_in :|: TRUE
f791_out -> f789_out :|: TRUE
f789_in -> f791_in :|: TRUE
f732_in -> f734_in :|: TRUE
f735_out -> f732_out :|: TRUE
f734_out -> f735_in :|: TRUE
f834_out -> f790_out :|: TRUE
f790_in -> f834_in :|: TRUE
f736_in -> f749_in :|: TRUE
f749_out -> f736_out :|: TRUE
f736_in -> f748_in :|: TRUE
f748_out -> f736_out :|: TRUE
f823_out -> f822_out :|: TRUE
f822_in -> f823_in :|: TRUE
f689_out -> f661_out :|: TRUE
f661_in -> f689_in :|: TRUE
f827_out -> f825_out :|: TRUE
f825_in -> f827_in :|: TRUE
f831_out -> f829_out :|: TRUE
f829_in -> f831_in :|: TRUE
f785_in -> f835_in :|: TRUE
f835_out -> f785_out :|: TRUE
f785_in -> f836_in :|: TRUE
f836_out -> f785_out :|: TRUE
f734_out -> f839_out :|: TRUE
f839_in -> f734_in :|: TRUE
f700_out -> f689_out :|: TRUE
f689_in -> f700_in :|: TRUE
f689_in -> f699_in :|: TRUE
f699_out -> f689_out :|: TRUE
f6_out(T1, T2) -> f3_out(T1, T2) :|: TRUE
f3_in(x, x1) -> f6_in(x, x1) :|: TRUE
f10_out(x2, x3) -> f6_out(x2, x3) :|: TRUE
f9_out(x4, x5) -> f6_out(x4, x5) :|: TRUE
f6_in(x6, x7) -> f9_in(x6, x7) :|: TRUE
f6_in(x8, x9) -> f10_in(x8, x9) :|: TRUE
f21_out(T21, T22, T23, T24) -> f10_out(cons(T21, T22), cons(T23, T24)) :|: TRUE
f10_in(cons(x10, x11), cons(x12, x13)) -> f21_in(x10, x11, x12, x13) :|: TRUE
f23_out -> f10_out(x14, x15) :|: TRUE
f10_in(x16, x17) -> f23_in :|: TRUE
f21_in(x18, x19, x20, x21) -> f294_in(x18, x19) :|: TRUE
f295_out(x22, x23) -> f21_out(x24, x25, x22, x23) :|: TRUE
f294_out(x26, x27) -> f295_in(x28, x29) :|: TRUE
f295_in(x30, x31) -> f660_in(x30, x31) :|: TRUE
f660_out(x32, x33) -> f661_in :|: TRUE
f661_out -> f295_out(x34, x35) :|: TRUE
Start term: f3_in(T1, T2)

----------------------------------------

(78) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:


----------------------------------------

(79)
TRUE

----------------------------------------

(80)
Obligation:
Rules:
f350_in(T21, T22) -> f353_in(T21, T22) :|: TRUE
f350_in(nil, T30) -> f352_in(T30) :|: TRUE
f353_out(x, x1) -> f350_out(x, x1) :|: TRUE
f352_out(x2) -> f350_out(nil, x2) :|: TRUE
f412_in([], T40) -> f426_in(T40) :|: TRUE
f426_out(x3) -> f412_out([], x3) :|: TRUE
f428_out -> f412_out(x4, x5) :|: TRUE
f412_in(x6, x7) -> f428_in :|: TRUE
f451_out(x8) -> f442_out(x8) :|: TRUE
f442_in(x9) -> f451_in(x9) :|: TRUE
f622_in(x10, x11) -> f294_in(x10, x11) :|: TRUE
f294_out(x12, x13) -> f622_out(x12, x13) :|: TRUE
f416_in(x14, x15) -> f616_in :|: TRUE
f416_in(.(x16, x17), x18) -> f615_in(x16, x17, x18) :|: TRUE
f616_out -> f416_out(x19, x20) :|: TRUE
f615_out(x21, x22, x23) -> f416_out(.(x21, x22), x23) :|: TRUE
f395_out(x24, x25) -> f353_out(x24, x25) :|: TRUE
f353_in(x26, x27) -> f395_in(x26, x27) :|: TRUE
f444_out(x28) -> f436_out(x28) :|: TRUE
f442_out(x29) -> f436_out(x29) :|: TRUE
f436_in(x30) -> f444_in(x30) :|: TRUE
f436_in(x31) -> f442_in(x31) :|: TRUE
f404_in(x32, x33) -> f412_in(x32, x33) :|: TRUE
f416_out(x34, x35) -> f404_out(x34, x35) :|: TRUE
f412_out(x36, x37) -> f404_out(x36, x37) :|: TRUE
f404_in(x38, x39) -> f416_in(x38, x39) :|: TRUE
f395_in(x40, x41) -> f404_in(x40, x41) :|: TRUE
f404_out(x42, x43) -> f395_out(x42, x43) :|: TRUE
f618_out(x44, x45, x46) -> f617_out(x44, x45, x46) :|: TRUE
f617_in(x47, x48, x49) -> f618_in(x47, x48, x49) :|: TRUE
f618_in(x50, x51, x52) -> f622_in(x51, x52) :|: TRUE
f622_out(x53, x54) -> f618_out(x55, x53, x54) :|: TRUE
f436_out(x56) -> f426_out(x56) :|: TRUE
f426_in(x57) -> f436_in(x57) :|: TRUE
f294_in(x58, x59) -> f350_in(x58, x59) :|: TRUE
f350_out(x60, x61) -> f294_out(x60, x61) :|: TRUE
f617_out(x62, x63, x64) -> f615_out(x62, x63, x64) :|: TRUE
f615_in(x65, x66, x67) -> f617_in(x65, x66, x67) :|: TRUE
f294_out([], x68) -> f451_out(x68) :|: TRUE
f451_in(x69) -> f294_in([], x69) :|: TRUE
f6_out(T1, T2) -> f3_out(T1, T2) :|: TRUE
f3_in(x70, x71) -> f6_in(x70, x71) :|: TRUE
f10_out(x72, x73) -> f6_out(x72, x73) :|: TRUE
f9_out(x74, x75) -> f6_out(x74, x75) :|: TRUE
f6_in(x76, x77) -> f9_in(x76, x77) :|: TRUE
f6_in(x78, x79) -> f10_in(x78, x79) :|: TRUE
f21_out(x80, x81, x82, x83) -> f10_out(cons(x80, x81), cons(x82, x83)) :|: TRUE
f10_in(cons(x84, x85), cons(x86, x87)) -> f21_in(x84, x85, x86, x87) :|: TRUE
f23_out -> f10_out(x88, x89) :|: TRUE
f10_in(x90, x91) -> f23_in :|: TRUE
f21_in(x92, x93, x94, x95) -> f294_in(x92, x93) :|: TRUE
f295_out(x96, x97) -> f21_out(x98, x99, x96, x97) :|: TRUE
f294_out(x100, x101) -> f295_in(x102, x103) :|: TRUE
f295_in(T23, T24) -> f660_in(T23, T24) :|: TRUE
f660_out(x104, x105) -> f661_in :|: TRUE
f661_out -> f295_out(x106, x107) :|: TRUE
f294_out(x108, x109) -> f660_out(x108, x109) :|: TRUE
f660_in(x110, x111) -> f294_in(x110, x111) :|: TRUE
Start term: f3_in(T1, T2)

----------------------------------------

(81) IRSwTSimpleDependencyGraphProof (EQUIVALENT)
Constructed simple dependency graph.

Simplified to the following IRSwTs:

intTRSProblem:
f350_in(T21, T22) -> f353_in(T21, T22) :|: TRUE
f412_in([], T40) -> f426_in(T40) :|: TRUE
f442_in(x9) -> f451_in(x9) :|: TRUE
f622_in(x10, x11) -> f294_in(x10, x11) :|: TRUE
f416_in(.(x16, x17), x18) -> f615_in(x16, x17, x18) :|: TRUE
f353_in(x26, x27) -> f395_in(x26, x27) :|: TRUE
f436_in(x31) -> f442_in(x31) :|: TRUE
f404_in(x32, x33) -> f412_in(x32, x33) :|: TRUE
f404_in(x38, x39) -> f416_in(x38, x39) :|: TRUE
f395_in(x40, x41) -> f404_in(x40, x41) :|: TRUE
f617_in(x47, x48, x49) -> f618_in(x47, x48, x49) :|: TRUE
f618_in(x50, x51, x52) -> f622_in(x51, x52) :|: TRUE
f426_in(x57) -> f436_in(x57) :|: TRUE
f294_in(x58, x59) -> f350_in(x58, x59) :|: TRUE
f615_in(x65, x66, x67) -> f617_in(x65, x66, x67) :|: TRUE
f451_in(x69) -> f294_in([], x69) :|: TRUE


----------------------------------------

(82)
Obligation:
Rules:
f350_in(T21, T22) -> f353_in(T21, T22) :|: TRUE
f412_in([], T40) -> f426_in(T40) :|: TRUE
f442_in(x9) -> f451_in(x9) :|: TRUE
f622_in(x10, x11) -> f294_in(x10, x11) :|: TRUE
f416_in(.(x16, x17), x18) -> f615_in(x16, x17, x18) :|: TRUE
f353_in(x26, x27) -> f395_in(x26, x27) :|: TRUE
f436_in(x31) -> f442_in(x31) :|: TRUE
f404_in(x32, x33) -> f412_in(x32, x33) :|: TRUE
f404_in(x38, x39) -> f416_in(x38, x39) :|: TRUE
f395_in(x40, x41) -> f404_in(x40, x41) :|: TRUE
f617_in(x47, x48, x49) -> f618_in(x47, x48, x49) :|: TRUE
f618_in(x50, x51, x52) -> f622_in(x51, x52) :|: TRUE
f426_in(x57) -> f436_in(x57) :|: TRUE
f294_in(x58, x59) -> f350_in(x58, x59) :|: TRUE
f615_in(x65, x66, x67) -> f617_in(x65, x66, x67) :|: TRUE
f451_in(x69) -> f294_in([], x69) :|: TRUE

----------------------------------------

(83) IntTRSCompressionProof (EQUIVALENT)
Compressed rules.
----------------------------------------

(84)
Obligation:
Rules:
f350_in([], T22:0) -> f350_in([], T22:0) :|: TRUE
f350_in(.(x, x1), x2) -> f350_in(x1, x2) :|: TRUE

----------------------------------------

(85) IRSFormatTransformerProof (EQUIVALENT)
Reformatted IRS to match normalized format (transformed away non-linear left-hand sides, !=, / and %).
----------------------------------------

(86)
Obligation:
Rules:
f350_in([], T22:0) -> f350_in([], T22:0) :|: TRUE
f350_in(.(x, x1), x2) -> f350_in(x1, x2) :|: TRUE

----------------------------------------

(87) IRSwTTerminationDigraphProof (EQUIVALENT)
Constructed termination digraph!
Nodes:
(1) f350_in([], T22:0) -> f350_in([], T22:0) :|: TRUE
(2) f350_in(.(x, x1), x2) -> f350_in(x1, x2) :|: TRUE

Arcs:
(1) -> (1)
(2) -> (1), (2)

This digraph is fully evaluated!
----------------------------------------

(88)
Complex Obligation (AND)

----------------------------------------

(89)
Obligation:

Termination digraph:
Nodes:
(1) f350_in(.(x, x1), x2) -> f350_in(x1, x2) :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(90) IntTRSUnneededArgumentFilterProof (EQUIVALENT)
Some arguments are removed because they cannot influence termination. We removed arguments according to the following replacements:

   f350_in(x1, x2) -> f350_in(x1)
   .(x1, x2) -> .(x2)

----------------------------------------

(91)
Obligation:
Rules:
f350_in(.(x1)) -> f350_in(x1) :|: TRUE

----------------------------------------

(92) TempFilterProof (SOUND)
Used the following sort dictionary for filtering: 
f350_in(VARIABLE)
.(VARIABLE)
Removed predefined arithmetic.
----------------------------------------

(93)
Obligation:
Rules:
f350_in(.(x1)) -> f350_in(x1)

----------------------------------------

(94) IRSwTToQDPProof (SOUND)
Removed the integers and created a QDP-Problem.
----------------------------------------

(95)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   f350_in(.(x1)) -> f350_in(x1)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(96) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*f350_in(.(x1)) -> f350_in(x1)
The graph contains the following edges 1 > 1


----------------------------------------

(97)
YES

----------------------------------------

(98)
Obligation:

Termination digraph:
Nodes:
(1) f350_in([], T22:0) -> f350_in([], T22:0) :|: TRUE

Arcs:
(1) -> (1)

This digraph is fully evaluated!

----------------------------------------

(99) IRSwTToIntTRSProof (SOUND)
Applied path-length measure to transform intTRS with terms to intTRS.
----------------------------------------

(100)
Obligation:
Rules:
f350_in([], x) -> f350_in([], x) :|: TRUE

----------------------------------------

(101) PrologToTRSTransformerProof (SOUND)
Transformed Prolog program to TRS.

{
    "root": 1,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(lessleaves (nil) (cons X1 X2))",
                null
            ],
            [
                "(lessleaves (cons U V) (cons W Z))",
                "(',' (app U V U1) (',' (app W Z W1) (lessleaves U1 W1)))"
            ],
            [
                "(app (nil) Y Z)",
                "(',' (!) (eq Y Z))"
            ],
            [
                "(app X Y (cons U Z))",
                "(',' (head X U) (',' (tail X V) (app V Y Z)))"
            ],
            [
                "(head ([]) X3)",
                null
            ],
            [
                "(head (. X X4) X)",
                null
            ],
            [
                "(tail ([]) ([]))",
                null
            ],
            [
                "(tail (. X5 X) X)",
                null
            ],
            [
                "(eq X X)",
                null
            ]
        ]
    },
    "graph": {
        "nodes": {
            "type": "Nodes",
            "351": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_2) (eq T30 X46))"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(app (nil) T30 X30)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T30"],
                    "free": [
                        "X30",
                        "X46"
                    ],
                    "exprvars": []
                }
            },
            "870": {
                "goal": [{
                    "clause": 5,
                    "scope": 10,
                    "term": "(',' (head T112 X193) (',' (tail T112 X192) (app X192 T113 X194)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X193",
                        "X194",
                        "X192"
                    ],
                    "exprvars": []
                }
            },
            "871": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (tail ([]) X192) (app X192 T115 X194))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X194",
                        "X192"
                    ],
                    "exprvars": []
                }
            },
            "872": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "873": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 11,
                        "term": "(',' (tail ([]) X192) (app X192 T115 X194))"
                    },
                    {
                        "clause": 7,
                        "scope": 11,
                        "term": "(',' (tail ([]) X192) (app X192 T115 X194))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X194",
                        "X192"
                    ],
                    "exprvars": []
                }
            },
            "874": {
                "goal": [{
                    "clause": 6,
                    "scope": 11,
                    "term": "(',' (tail ([]) X192) (app X192 T115 X194))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X194",
                        "X192"
                    ],
                    "exprvars": []
                }
            },
            "875": {
                "goal": [{
                    "clause": 7,
                    "scope": 11,
                    "term": "(',' (tail ([]) X192) (app X192 T115 X194))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X194",
                        "X192"
                    ],
                    "exprvars": []
                }
            },
            "876": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app ([]) T115 X194)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X194"],
                    "exprvars": []
                }
            },
            "877": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 12,
                        "term": "(app ([]) T115 X194)"
                    },
                    {
                        "clause": 3,
                        "scope": 12,
                        "term": "(app ([]) T115 X194)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X194"],
                    "exprvars": []
                }
            },
            "559": {
                "goal": [{
                    "clause": 3,
                    "scope": 2,
                    "term": "(app T21 T22 X30)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T21 T22 X30)",
                        "(app (nil) X44 X45)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T21",
                        "T22"
                    ],
                    "free": [
                        "X30",
                        "X44",
                        "X45"
                    ],
                    "exprvars": []
                }
            },
            "878": {
                "goal": [{
                    "clause": 3,
                    "scope": 12,
                    "term": "(app ([]) T115 X194)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X194"],
                    "exprvars": []
                }
            },
            "879": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (head ([]) X240) (',' (tail ([]) X239) (app X239 T122 X241)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X240",
                        "X241",
                        "X239"
                    ],
                    "exprvars": []
                }
            },
            "913": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T93 T94 X153)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X153"],
                    "exprvars": []
                }
            },
            "914": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(lessleaves T151 T150)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "17": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "18": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "19": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "284": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T21 T22 X30)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T21",
                        "T22"
                    ],
                    "free": ["X30"],
                    "exprvars": []
                }
            },
            "560": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(eq T30 X46)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T30"],
                    "free": ["X46"],
                    "exprvars": []
                }
            },
            "561": {
                "goal": [{
                    "clause": 8,
                    "scope": 3,
                    "term": "(eq T30 X46)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T30"],
                    "free": ["X46"],
                    "exprvars": []
                }
            },
            "880": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 13,
                        "term": "(',' (head ([]) X240) (',' (tail ([]) X239) (app X239 T122 X241)))"
                    },
                    {
                        "clause": 5,
                        "scope": 13,
                        "term": "(',' (head ([]) X240) (',' (tail ([]) X239) (app X239 T122 X241)))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X240",
                        "X241",
                        "X239"
                    ],
                    "exprvars": []
                }
            },
            "1": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(lessleaves T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "287": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app T23 T24 X31) (lessleaves T26 X31))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T23",
                        "T24"
                    ],
                    "free": ["X31"],
                    "exprvars": []
                }
            },
            "562": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "881": {
                "goal": [{
                    "clause": 4,
                    "scope": 13,
                    "term": "(',' (head ([]) X240) (',' (tail ([]) X239) (app X239 T122 X241)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X240",
                        "X241",
                        "X239"
                    ],
                    "exprvars": []
                }
            },
            "563": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "882": {
                "goal": [{
                    "clause": 5,
                    "scope": 13,
                    "term": "(',' (head ([]) X240) (',' (tail ([]) X239) (app X239 T122 X241)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X240",
                        "X241",
                        "X239"
                    ],
                    "exprvars": []
                }
            },
            "883": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (tail ([]) X239) (app X239 T122 X241))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X241",
                        "X239"
                    ],
                    "exprvars": []
                }
            },
            "4": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(lessleaves T1 T2)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(lessleaves T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "884": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 14,
                        "term": "(',' (tail ([]) X239) (app X239 T122 X241))"
                    },
                    {
                        "clause": 7,
                        "scope": 14,
                        "term": "(',' (tail ([]) X239) (app X239 T122 X241))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X241",
                        "X239"
                    ],
                    "exprvars": []
                }
            },
            "885": {
                "goal": [{
                    "clause": 6,
                    "scope": 14,
                    "term": "(',' (tail ([]) X239) (app X239 T122 X241))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X241",
                        "X239"
                    ],
                    "exprvars": []
                }
            },
            "567": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (head T39 X71) (',' (tail T39 X70) (app X70 T40 X72)))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T39 T40 X30)",
                        "(app (nil) X44 X45)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T39",
                        "T40"
                    ],
                    "free": [
                        "X30",
                        "X44",
                        "X45",
                        "X71",
                        "X72",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "842": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "886": {
                "goal": [{
                    "clause": 7,
                    "scope": 14,
                    "term": "(',' (tail ([]) X239) (app X239 T122 X241))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X241",
                        "X239"
                    ],
                    "exprvars": []
                }
            },
            "7": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(lessleaves T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "843": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (tail (. T47 T48) X70) (app X70 T40 X72))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T40",
                        "T47",
                        "T48"
                    ],
                    "free": [
                        "X72",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "887": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app ([]) T122 X241)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X241"],
                    "exprvars": []
                }
            },
            "8": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(lessleaves T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "844": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "888": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "845": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 6,
                        "term": "(',' (tail (. T47 T48) X70) (app X70 T40 X72))"
                    },
                    {
                        "clause": 7,
                        "scope": 6,
                        "term": "(',' (tail (. T47 T48) X70) (app X70 T40 X72))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T40",
                        "T47",
                        "T48"
                    ],
                    "free": [
                        "X72",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "889": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "846": {
                "goal": [{
                    "clause": 7,
                    "scope": 6,
                    "term": "(',' (tail (. T47 T48) X70) (app X70 T40 X72))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T40",
                        "T47",
                        "T48"
                    ],
                    "free": [
                        "X72",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "847": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T56 T40 X72)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T40",
                        "T56"
                    ],
                    "free": ["X72"],
                    "exprvars": []
                }
            },
            "848": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T23 T24 X31)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T23",
                        "T24"
                    ],
                    "free": ["X31"],
                    "exprvars": []
                }
            },
            "849": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(lessleaves T26 T59)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "20": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app T21 T22 X30) (',' (app T23 T24 X31) (lessleaves X30 X31)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T21",
                        "T22",
                        "T23",
                        "T24"
                    ],
                    "free": [
                        "X30",
                        "X31"
                    ],
                    "exprvars": []
                }
            },
            "22": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "293": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(app T21 T22 X30)"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(app T21 T22 X30)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T21",
                        "T22"
                    ],
                    "free": ["X30"],
                    "exprvars": []
                }
            },
            "890": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "891": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (tail (. T133 T134) X192) (app X192 T135 X194))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X194",
                        "X192"
                    ],
                    "exprvars": []
                }
            },
            "892": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "574": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 4,
                        "term": "(',' (head T39 X71) (',' (tail T39 X70) (app X70 T40 X72)))"
                    },
                    {
                        "clause": 5,
                        "scope": 4,
                        "term": "(',' (head T39 X71) (',' (tail T39 X70) (app X70 T40 X72)))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(app T39 T40 X30)",
                        "(app (nil) X44 X45)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T39",
                        "T40"
                    ],
                    "free": [
                        "X30",
                        "X44",
                        "X45",
                        "X71",
                        "X72",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "893": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 15,
                        "term": "(',' (tail (. T133 T134) X192) (app X192 T135 X194))"
                    },
                    {
                        "clause": 7,
                        "scope": 15,
                        "term": "(',' (tail (. T133 T134) X192) (app X192 T135 X194))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X194",
                        "X192"
                    ],
                    "exprvars": []
                }
            },
            "850": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 7,
                        "term": "(lessleaves T26 T59)"
                    },
                    {
                        "clause": 1,
                        "scope": 7,
                        "term": "(lessleaves T26 T59)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "894": {
                "goal": [{
                    "clause": 7,
                    "scope": 15,
                    "term": "(',' (tail (. T133 T134) X192) (app X192 T135 X194))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X194",
                        "X192"
                    ],
                    "exprvars": []
                }
            },
            "851": {
                "goal": [{
                    "clause": 0,
                    "scope": 7,
                    "term": "(lessleaves T26 T59)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "895": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T146 T147 X194)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X194"],
                    "exprvars": []
                }
            },
            "852": {
                "goal": [{
                    "clause": 1,
                    "scope": 7,
                    "term": "(lessleaves T26 T59)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "853": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "854": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "855": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "856": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app T87 T88 X152) (',' (app T89 T90 X153) (lessleaves X152 X153)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X152",
                        "X153"
                    ],
                    "exprvars": []
                }
            },
            "857": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "737": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (tail ([]) X70) (app X70 T40 X72))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T40"],
                    "free": [
                        "X72",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "858": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T87 T88 X152)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X152"],
                    "exprvars": []
                }
            },
            "738": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "859": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app T93 T94 X153) (lessleaves T92 X153))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X153"],
                    "exprvars": []
                }
            },
            "739": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 5,
                        "term": "(',' (tail ([]) X70) (app X70 T40 X72))"
                    },
                    {
                        "clause": 7,
                        "scope": 5,
                        "term": "(',' (tail ([]) X70) (app X70 T40 X72))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T40"],
                    "free": [
                        "X72",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "584": {
                "goal": [{
                    "clause": 4,
                    "scope": 4,
                    "term": "(',' (head T39 X71) (',' (tail T39 X70) (app X70 T40 X72)))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T39 T40 X30)",
                        "(app (nil) X44 X45)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T39",
                        "T40"
                    ],
                    "free": [
                        "X30",
                        "X44",
                        "X45",
                        "X71",
                        "X72",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "860": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 8,
                        "term": "(app T87 T88 X152)"
                    },
                    {
                        "clause": 3,
                        "scope": 8,
                        "term": "(app T87 T88 X152)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X152"],
                    "exprvars": []
                }
            },
            "861": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_8) (eq T99 X168))"
                    },
                    {
                        "clause": 3,
                        "scope": 8,
                        "term": "(app T87 T88 X152)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X152",
                        "X168"
                    ],
                    "exprvars": []
                }
            },
            "587": {
                "goal": [{
                    "clause": 5,
                    "scope": 4,
                    "term": "(',' (head T39 X71) (',' (tail T39 X70) (app X70 T40 X72)))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T39 T40 X30)",
                        "(app (nil) X44 X45)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T39",
                        "T40"
                    ],
                    "free": [
                        "X30",
                        "X44",
                        "X45",
                        "X71",
                        "X72",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "741": {
                "goal": [{
                    "clause": 6,
                    "scope": 5,
                    "term": "(',' (tail ([]) X70) (app X70 T40 X72))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T40"],
                    "free": [
                        "X72",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "862": {
                "goal": [{
                    "clause": 3,
                    "scope": 8,
                    "term": "(app T87 T88 X152)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T87 T88 X152)",
                        "(app (nil) X166 X167)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X152",
                        "X166",
                        "X167"
                    ],
                    "exprvars": []
                }
            },
            "742": {
                "goal": [{
                    "clause": 7,
                    "scope": 5,
                    "term": "(',' (tail ([]) X70) (app X70 T40 X72))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T40"],
                    "free": [
                        "X72",
                        "X70"
                    ],
                    "exprvars": []
                }
            },
            "863": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(eq T99 X168)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X168"],
                    "exprvars": []
                }
            },
            "864": {
                "goal": [{
                    "clause": 8,
                    "scope": 9,
                    "term": "(eq T99 X168)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X168"],
                    "exprvars": []
                }
            },
            "865": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "866": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "867": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (head T112 X193) (',' (tail T112 X192) (app X192 T113 X194)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X193",
                        "X194",
                        "X192"
                    ],
                    "exprvars": []
                }
            },
            "824": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app ([]) T40 X72)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T40"],
                    "free": ["X72"],
                    "exprvars": []
                }
            },
            "868": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 10,
                        "term": "(',' (head T112 X193) (',' (tail T112 X192) (app X192 T113 X194)))"
                    },
                    {
                        "clause": 5,
                        "scope": 10,
                        "term": "(',' (head T112 X193) (',' (tail T112 X192) (app X192 T113 X194)))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X193",
                        "X194",
                        "X192"
                    ],
                    "exprvars": []
                }
            },
            "869": {
                "goal": [{
                    "clause": 4,
                    "scope": 10,
                    "term": "(',' (head T112 X193) (',' (tail T112 X192) (app X192 T113 X194)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X193",
                        "X194",
                        "X192"
                    ],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 1,
                "to": 4,
                "label": "CASE"
            },
            {
                "from": 4,
                "to": 7,
                "label": "PARALLEL"
            },
            {
                "from": 4,
                "to": 8,
                "label": "PARALLEL"
            },
            {
                "from": 7,
                "to": 17,
                "label": "EVAL with clause\nlessleaves(nil, cons(X14, X15)).\nand substitutionT1 -> nil,\nX14 -> T11,\nX15 -> T12,\nT2 -> cons(T11, T12)"
            },
            {
                "from": 7,
                "to": 18,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 8,
                "to": 20,
                "label": "EVAL with clause\nlessleaves(cons(X26, X27), cons(X28, X29)) :- ','(app(X26, X27, X30), ','(app(X28, X29, X31), lessleaves(X30, X31))).\nand substitutionX26 -> T21,\nX27 -> T22,\nT1 -> cons(T21, T22),\nX28 -> T23,\nX29 -> T24,\nT2 -> cons(T23, T24)"
            },
            {
                "from": 8,
                "to": 22,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 17,
                "to": 19,
                "label": "SUCCESS"
            },
            {
                "from": 20,
                "to": 284,
                "label": "SPLIT 1"
            },
            {
                "from": 20,
                "to": 287,
                "label": "SPLIT 2\nnew knowledge:\nT21 is ground\nT22 is ground\nreplacements:X30 -> T26"
            },
            {
                "from": 284,
                "to": 293,
                "label": "CASE"
            },
            {
                "from": 287,
                "to": 848,
                "label": "SPLIT 1"
            },
            {
                "from": 287,
                "to": 849,
                "label": "SPLIT 2\nnew knowledge:\nT23 is ground\nT24 is ground\nreplacements:X31 -> T59"
            },
            {
                "from": 293,
                "to": 351,
                "label": "EVAL with clause\napp(nil, X44, X45) :- ','(!_2, eq(X44, X45)).\nand substitutionT21 -> nil,\nT22 -> T30,\nX44 -> T30,\nX30 -> X46,\nX45 -> X46"
            },
            {
                "from": 293,
                "to": 559,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 351,
                "to": 560,
                "label": "CUT"
            },
            {
                "from": 559,
                "to": 567,
                "label": "ONLY EVAL with clause\napp(X66, X67, cons(X68, X69)) :- ','(head(X66, X68), ','(tail(X66, X70), app(X70, X67, X69))).\nand substitutionT21 -> T39,\nX66 -> T39,\nT22 -> T40,\nX67 -> T40,\nX68 -> X71,\nX69 -> X72,\nX30 -> cons(X71, X72)"
            },
            {
                "from": 560,
                "to": 561,
                "label": "CASE"
            },
            {
                "from": 561,
                "to": 562,
                "label": "ONLY EVAL with clause\neq(X49, X49).\nand substitutionT30 -> T33,\nX49 -> T33,\nX46 -> T33"
            },
            {
                "from": 562,
                "to": 563,
                "label": "SUCCESS"
            },
            {
                "from": 567,
                "to": 574,
                "label": "CASE"
            },
            {
                "from": 574,
                "to": 584,
                "label": "PARALLEL"
            },
            {
                "from": 574,
                "to": 587,
                "label": "PARALLEL"
            },
            {
                "from": 584,
                "to": 737,
                "label": "EVAL with clause\nhead([], X84).\nand substitutionT39 -> [],\nX71 -> X85,\nX84 -> X85"
            },
            {
                "from": 584,
                "to": 738,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 587,
                "to": 843,
                "label": "EVAL with clause\nhead(.(X101, X102), X101).\nand substitutionX101 -> T47,\nX102 -> T48,\nT39 -> .(T47, T48),\nX71 -> T47"
            },
            {
                "from": 587,
                "to": 844,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 737,
                "to": 739,
                "label": "CASE"
            },
            {
                "from": 739,
                "to": 741,
                "label": "PARALLEL"
            },
            {
                "from": 739,
                "to": 742,
                "label": "PARALLEL"
            },
            {
                "from": 741,
                "to": 824,
                "label": "ONLY EVAL with clause\ntail([], []).\nand substitutionX70 -> []"
            },
            {
                "from": 742,
                "to": 842,
                "label": "BACKTRACK\nfor clause: tail(.(X5, X), X)because of non-unification"
            },
            {
                "from": 824,
                "to": 284,
                "label": "INSTANCE with matching:\nT21 -> []\nT22 -> T40\nX30 -> X72"
            },
            {
                "from": 843,
                "to": 845,
                "label": "CASE"
            },
            {
                "from": 845,
                "to": 846,
                "label": "BACKTRACK\nfor clause: tail([], [])because of non-unification"
            },
            {
                "from": 846,
                "to": 847,
                "label": "ONLY EVAL with clause\ntail(.(X113, X114), X114).\nand substitutionT47 -> T55,\nX113 -> T55,\nT48 -> T56,\nX114 -> T56,\nX70 -> T56"
            },
            {
                "from": 847,
                "to": 284,
                "label": "INSTANCE with matching:\nT21 -> T56\nT22 -> T40\nX30 -> X72"
            },
            {
                "from": 848,
                "to": 284,
                "label": "INSTANCE with matching:\nT21 -> T23\nT22 -> T24\nX30 -> X31"
            },
            {
                "from": 849,
                "to": 850,
                "label": "CASE"
            },
            {
                "from": 850,
                "to": 851,
                "label": "PARALLEL"
            },
            {
                "from": 850,
                "to": 852,
                "label": "PARALLEL"
            },
            {
                "from": 851,
                "to": 853,
                "label": "EVAL with clause\nlessleaves(nil, cons(X136, X137)).\nand substitutionT26 -> nil,\nX136 -> T73,\nX137 -> T74,\nT59 -> cons(T73, T74)"
            },
            {
                "from": 851,
                "to": 854,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 852,
                "to": 856,
                "label": "EVAL with clause\nlessleaves(cons(X148, X149), cons(X150, X151)) :- ','(app(X148, X149, X152), ','(app(X150, X151, X153), lessleaves(X152, X153))).\nand substitutionX148 -> T87,\nX149 -> T88,\nT26 -> cons(T87, T88),\nX150 -> T89,\nX151 -> T90,\nT59 -> cons(T89, T90),\nT83 -> T87,\nT84 -> T88,\nT85 -> T89,\nT86 -> T90"
            },
            {
                "from": 852,
                "to": 857,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 853,
                "to": 855,
                "label": "SUCCESS"
            },
            {
                "from": 856,
                "to": 858,
                "label": "SPLIT 1"
            },
            {
                "from": 856,
                "to": 859,
                "label": "SPLIT 2\nreplacements:X152 -> T92,\nT89 -> T93,\nT90 -> T94"
            },
            {
                "from": 858,
                "to": 860,
                "label": "CASE"
            },
            {
                "from": 859,
                "to": 913,
                "label": "SPLIT 1"
            },
            {
                "from": 859,
                "to": 914,
                "label": "SPLIT 2\nreplacements:X153 -> T150,\nT92 -> T151"
            },
            {
                "from": 860,
                "to": 861,
                "label": "EVAL with clause\napp(nil, X166, X167) :- ','(!_8, eq(X166, X167)).\nand substitutionT87 -> nil,\nT88 -> T99,\nX166 -> T99,\nX152 -> X168,\nX167 -> X168,\nT98 -> T99"
            },
            {
                "from": 860,
                "to": 862,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 861,
                "to": 863,
                "label": "CUT"
            },
            {
                "from": 862,
                "to": 867,
                "label": "ONLY EVAL with clause\napp(X188, X189, cons(X190, X191)) :- ','(head(X188, X190), ','(tail(X188, X192), app(X192, X189, X191))).\nand substitutionT87 -> T112,\nX188 -> T112,\nT88 -> T113,\nX189 -> T113,\nX190 -> X193,\nX191 -> X194,\nX152 -> cons(X193, X194),\nT110 -> T112,\nT111 -> T113"
            },
            {
                "from": 863,
                "to": 864,
                "label": "CASE"
            },
            {
                "from": 864,
                "to": 865,
                "label": "ONLY EVAL with clause\neq(X171, X171).\nand substitutionT99 -> T102,\nX171 -> T102,\nX168 -> T102"
            },
            {
                "from": 865,
                "to": 866,
                "label": "SUCCESS"
            },
            {
                "from": 867,
                "to": 868,
                "label": "CASE"
            },
            {
                "from": 868,
                "to": 869,
                "label": "PARALLEL"
            },
            {
                "from": 868,
                "to": 870,
                "label": "PARALLEL"
            },
            {
                "from": 869,
                "to": 871,
                "label": "EVAL with clause\nhead([], X206).\nand substitutionT112 -> [],\nX193 -> X207,\nX206 -> X207,\nT113 -> T115"
            },
            {
                "from": 869,
                "to": 872,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 870,
                "to": 891,
                "label": "EVAL with clause\nhead(.(X280, X281), X280).\nand substitutionX280 -> T133,\nX281 -> T134,\nT112 -> .(T133, T134),\nX193 -> T133,\nT131 -> T133,\nT132 -> T134,\nT113 -> T135"
            },
            {
                "from": 870,
                "to": 892,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 871,
                "to": 873,
                "label": "CASE"
            },
            {
                "from": 873,
                "to": 874,
                "label": "PARALLEL"
            },
            {
                "from": 873,
                "to": 875,
                "label": "PARALLEL"
            },
            {
                "from": 874,
                "to": 876,
                "label": "ONLY EVAL with clause\ntail([], []).\nand substitutionX192 -> []"
            },
            {
                "from": 875,
                "to": 890,
                "label": "BACKTRACK\nfor clause: tail(.(X5, X), X)because of non-unification"
            },
            {
                "from": 876,
                "to": 877,
                "label": "CASE"
            },
            {
                "from": 877,
                "to": 878,
                "label": "BACKTRACK\nfor clause: app(nil, Y, Z) :- ','(!, eq(Y, Z))because of non-unification"
            },
            {
                "from": 878,
                "to": 879,
                "label": "ONLY EVAL with clause\napp(X235, X236, cons(X237, X238)) :- ','(head(X235, X237), ','(tail(X235, X239), app(X239, X236, X238))).\nand substitutionX235 -> [],\nT115 -> T122,\nX236 -> T122,\nX237 -> X240,\nX238 -> X241,\nX194 -> cons(X240, X241),\nT121 -> T122"
            },
            {
                "from": 879,
                "to": 880,
                "label": "CASE"
            },
            {
                "from": 880,
                "to": 881,
                "label": "PARALLEL"
            },
            {
                "from": 880,
                "to": 882,
                "label": "PARALLEL"
            },
            {
                "from": 881,
                "to": 883,
                "label": "ONLY EVAL with clause\nhead([], X259).\nand substitutionX240 -> X260,\nX259 -> X260"
            },
            {
                "from": 882,
                "to": 889,
                "label": "BACKTRACK\nfor clause: head(.(X, X4), X)because of non-unification"
            },
            {
                "from": 883,
                "to": 884,
                "label": "CASE"
            },
            {
                "from": 884,
                "to": 885,
                "label": "PARALLEL"
            },
            {
                "from": 884,
                "to": 886,
                "label": "PARALLEL"
            },
            {
                "from": 885,
                "to": 887,
                "label": "ONLY EVAL with clause\ntail([], []).\nand substitutionX239 -> []"
            },
            {
                "from": 886,
                "to": 888,
                "label": "BACKTRACK\nfor clause: tail(.(X5, X), X)because of non-unification"
            },
            {
                "from": 887,
                "to": 876,
                "label": "INSTANCE with matching:\nT115 -> T122\nX194 -> X241"
            },
            {
                "from": 891,
                "to": 893,
                "label": "CASE"
            },
            {
                "from": 893,
                "to": 894,
                "label": "BACKTRACK\nfor clause: tail([], [])because of non-unification"
            },
            {
                "from": 894,
                "to": 895,
                "label": "ONLY EVAL with clause\ntail(.(X292, X293), X293).\nand substitutionT133 -> T144,\nX292 -> T144,\nT134 -> T146,\nX293 -> T146,\nX192 -> T146,\nT145 -> T146,\nT135 -> T147"
            },
            {
                "from": 895,
                "to": 858,
                "label": "INSTANCE with matching:\nT87 -> T146\nT88 -> T147\nX152 -> X194"
            },
            {
                "from": 913,
                "to": 858,
                "label": "INSTANCE with matching:\nT87 -> T93\nT88 -> T94\nX152 -> X153"
            },
            {
                "from": 914,
                "to": 849,
                "label": "INSTANCE with matching:\nT26 -> T151\nT59 -> T150"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(102)
Obligation:
Q restricted rewrite system:
The TRS R consists of the following rules:

   f1_in(nil, cons(T11, T12)) -> f1_out1
   f1_in(cons(T21, T22), cons(T23, T24)) -> U1(f20_in(T21, T22, T23, T24), cons(T21, T22), cons(T23, T24))
   U1(f20_out1, cons(T21, T22), cons(T23, T24)) -> f1_out1
   f284_in(nil, T33) -> f284_out1
   f284_in([], T40) -> U2(f284_in([], T40), [], T40)
   U2(f284_out1, [], T40) -> f284_out1
   f284_in(.(T55, T56), T40) -> U3(f284_in(T56, T40), .(T55, T56), T40)
   U3(f284_out1, .(T55, T56), T40) -> f284_out1
   f876_in -> U4(f876_in)
   U4(f876_out1) -> f876_out1
   f858_in -> f858_out1
   f858_in -> U5(f876_in)
   U5(f876_out1) -> f858_out1
   f858_in -> U6(f858_in)
   U6(f858_out1) -> f858_out1
   f849_in -> f849_out1
   f849_in -> U7(f856_in)
   U7(f856_out1) -> f849_out1
   f20_in(T21, T22, T23, T24) -> U8(f284_in(T21, T22), T21, T22, T23, T24)
   U8(f284_out1, T21, T22, T23, T24) -> U9(f287_in(T23, T24), T21, T22, T23, T24)
   U9(f287_out1, T21, T22, T23, T24) -> f20_out1
   f287_in(T23, T24) -> U10(f284_in(T23, T24), T23, T24)
   U10(f284_out1, T23, T24) -> U11(f849_in, T23, T24)
   U11(f849_out1, T23, T24) -> f287_out1
   f856_in -> U12(f858_in)
   U12(f858_out1) -> U13(f859_in)
   U13(f859_out1) -> f856_out1
   f859_in -> U14(f858_in)
   U14(f858_out1) -> U15(f849_in)
   U15(f849_out1) -> f859_out1

Q is empty.

----------------------------------------

(103) DependencyPairsProof (EQUIVALENT)
Using Dependency Pairs [AG00,LPAR04] we result in the following initial DP problem.
----------------------------------------

(104)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F1_IN(cons(T21, T22), cons(T23, T24)) -> U1^1(f20_in(T21, T22, T23, T24), cons(T21, T22), cons(T23, T24))
   F1_IN(cons(T21, T22), cons(T23, T24)) -> F20_IN(T21, T22, T23, T24)
   F284_IN([], T40) -> U2^1(f284_in([], T40), [], T40)
   F284_IN([], T40) -> F284_IN([], T40)
   F284_IN(.(T55, T56), T40) -> U3^1(f284_in(T56, T40), .(T55, T56), T40)
   F284_IN(.(T55, T56), T40) -> F284_IN(T56, T40)
   F876_IN -> U4^1(f876_in)
   F876_IN -> F876_IN
   F858_IN -> U5^1(f876_in)
   F858_IN -> F876_IN
   F858_IN -> U6^1(f858_in)
   F858_IN -> F858_IN
   F849_IN -> U7^1(f856_in)
   F849_IN -> F856_IN
   F20_IN(T21, T22, T23, T24) -> U8^1(f284_in(T21, T22), T21, T22, T23, T24)
   F20_IN(T21, T22, T23, T24) -> F284_IN(T21, T22)
   U8^1(f284_out1, T21, T22, T23, T24) -> U9^1(f287_in(T23, T24), T21, T22, T23, T24)
   U8^1(f284_out1, T21, T22, T23, T24) -> F287_IN(T23, T24)
   F287_IN(T23, T24) -> U10^1(f284_in(T23, T24), T23, T24)
   F287_IN(T23, T24) -> F284_IN(T23, T24)
   U10^1(f284_out1, T23, T24) -> U11^1(f849_in, T23, T24)
   U10^1(f284_out1, T23, T24) -> F849_IN
   F856_IN -> U12^1(f858_in)
   F856_IN -> F858_IN
   U12^1(f858_out1) -> U13^1(f859_in)
   U12^1(f858_out1) -> F859_IN
   F859_IN -> U14^1(f858_in)
   F859_IN -> F858_IN
   U14^1(f858_out1) -> U15^1(f849_in)
   U14^1(f858_out1) -> F849_IN

The TRS R consists of the following rules:

   f1_in(nil, cons(T11, T12)) -> f1_out1
   f1_in(cons(T21, T22), cons(T23, T24)) -> U1(f20_in(T21, T22, T23, T24), cons(T21, T22), cons(T23, T24))
   U1(f20_out1, cons(T21, T22), cons(T23, T24)) -> f1_out1
   f284_in(nil, T33) -> f284_out1
   f284_in([], T40) -> U2(f284_in([], T40), [], T40)
   U2(f284_out1, [], T40) -> f284_out1
   f284_in(.(T55, T56), T40) -> U3(f284_in(T56, T40), .(T55, T56), T40)
   U3(f284_out1, .(T55, T56), T40) -> f284_out1
   f876_in -> U4(f876_in)
   U4(f876_out1) -> f876_out1
   f858_in -> f858_out1
   f858_in -> U5(f876_in)
   U5(f876_out1) -> f858_out1
   f858_in -> U6(f858_in)
   U6(f858_out1) -> f858_out1
   f849_in -> f849_out1
   f849_in -> U7(f856_in)
   U7(f856_out1) -> f849_out1
   f20_in(T21, T22, T23, T24) -> U8(f284_in(T21, T22), T21, T22, T23, T24)
   U8(f284_out1, T21, T22, T23, T24) -> U9(f287_in(T23, T24), T21, T22, T23, T24)
   U9(f287_out1, T21, T22, T23, T24) -> f20_out1
   f287_in(T23, T24) -> U10(f284_in(T23, T24), T23, T24)
   U10(f284_out1, T23, T24) -> U11(f849_in, T23, T24)
   U11(f849_out1, T23, T24) -> f287_out1
   f856_in -> U12(f858_in)
   U12(f858_out1) -> U13(f859_in)
   U13(f859_out1) -> f856_out1
   f859_in -> U14(f858_in)
   U14(f858_out1) -> U15(f849_in)
   U15(f849_out1) -> f859_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(105) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LPAR04,FROCOS05,EDGSTAR] contains 5 SCCs with 21 less nodes.
----------------------------------------

(106)
Complex Obligation (AND)

----------------------------------------

(107)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F876_IN -> F876_IN

The TRS R consists of the following rules:

   f1_in(nil, cons(T11, T12)) -> f1_out1
   f1_in(cons(T21, T22), cons(T23, T24)) -> U1(f20_in(T21, T22, T23, T24), cons(T21, T22), cons(T23, T24))
   U1(f20_out1, cons(T21, T22), cons(T23, T24)) -> f1_out1
   f284_in(nil, T33) -> f284_out1
   f284_in([], T40) -> U2(f284_in([], T40), [], T40)
   U2(f284_out1, [], T40) -> f284_out1
   f284_in(.(T55, T56), T40) -> U3(f284_in(T56, T40), .(T55, T56), T40)
   U3(f284_out1, .(T55, T56), T40) -> f284_out1
   f876_in -> U4(f876_in)
   U4(f876_out1) -> f876_out1
   f858_in -> f858_out1
   f858_in -> U5(f876_in)
   U5(f876_out1) -> f858_out1
   f858_in -> U6(f858_in)
   U6(f858_out1) -> f858_out1
   f849_in -> f849_out1
   f849_in -> U7(f856_in)
   U7(f856_out1) -> f849_out1
   f20_in(T21, T22, T23, T24) -> U8(f284_in(T21, T22), T21, T22, T23, T24)
   U8(f284_out1, T21, T22, T23, T24) -> U9(f287_in(T23, T24), T21, T22, T23, T24)
   U9(f287_out1, T21, T22, T23, T24) -> f20_out1
   f287_in(T23, T24) -> U10(f284_in(T23, T24), T23, T24)
   U10(f284_out1, T23, T24) -> U11(f849_in, T23, T24)
   U11(f849_out1, T23, T24) -> f287_out1
   f856_in -> U12(f858_in)
   U12(f858_out1) -> U13(f859_in)
   U13(f859_out1) -> f856_out1
   f859_in -> U14(f858_in)
   U14(f858_out1) -> U15(f849_in)
   U15(f849_out1) -> f859_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(108) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(109)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F876_IN -> F876_IN

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(110) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = F876_IN evaluates to  t =F876_IN

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from F876_IN to F876_IN.




----------------------------------------

(111)
NO

----------------------------------------

(112)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F858_IN -> F858_IN

The TRS R consists of the following rules:

   f1_in(nil, cons(T11, T12)) -> f1_out1
   f1_in(cons(T21, T22), cons(T23, T24)) -> U1(f20_in(T21, T22, T23, T24), cons(T21, T22), cons(T23, T24))
   U1(f20_out1, cons(T21, T22), cons(T23, T24)) -> f1_out1
   f284_in(nil, T33) -> f284_out1
   f284_in([], T40) -> U2(f284_in([], T40), [], T40)
   U2(f284_out1, [], T40) -> f284_out1
   f284_in(.(T55, T56), T40) -> U3(f284_in(T56, T40), .(T55, T56), T40)
   U3(f284_out1, .(T55, T56), T40) -> f284_out1
   f876_in -> U4(f876_in)
   U4(f876_out1) -> f876_out1
   f858_in -> f858_out1
   f858_in -> U5(f876_in)
   U5(f876_out1) -> f858_out1
   f858_in -> U6(f858_in)
   U6(f858_out1) -> f858_out1
   f849_in -> f849_out1
   f849_in -> U7(f856_in)
   U7(f856_out1) -> f849_out1
   f20_in(T21, T22, T23, T24) -> U8(f284_in(T21, T22), T21, T22, T23, T24)
   U8(f284_out1, T21, T22, T23, T24) -> U9(f287_in(T23, T24), T21, T22, T23, T24)
   U9(f287_out1, T21, T22, T23, T24) -> f20_out1
   f287_in(T23, T24) -> U10(f284_in(T23, T24), T23, T24)
   U10(f284_out1, T23, T24) -> U11(f849_in, T23, T24)
   U11(f849_out1, T23, T24) -> f287_out1
   f856_in -> U12(f858_in)
   U12(f858_out1) -> U13(f859_in)
   U13(f859_out1) -> f856_out1
   f859_in -> U14(f858_in)
   U14(f858_out1) -> U15(f849_in)
   U15(f849_out1) -> f859_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(113) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(114)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F858_IN -> F858_IN

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(115) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = F858_IN evaluates to  t =F858_IN

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from F858_IN to F858_IN.




----------------------------------------

(116)
NO

----------------------------------------

(117)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F856_IN -> U12^1(f858_in)
   U12^1(f858_out1) -> F859_IN
   F859_IN -> U14^1(f858_in)
   U14^1(f858_out1) -> F849_IN
   F849_IN -> F856_IN

The TRS R consists of the following rules:

   f1_in(nil, cons(T11, T12)) -> f1_out1
   f1_in(cons(T21, T22), cons(T23, T24)) -> U1(f20_in(T21, T22, T23, T24), cons(T21, T22), cons(T23, T24))
   U1(f20_out1, cons(T21, T22), cons(T23, T24)) -> f1_out1
   f284_in(nil, T33) -> f284_out1
   f284_in([], T40) -> U2(f284_in([], T40), [], T40)
   U2(f284_out1, [], T40) -> f284_out1
   f284_in(.(T55, T56), T40) -> U3(f284_in(T56, T40), .(T55, T56), T40)
   U3(f284_out1, .(T55, T56), T40) -> f284_out1
   f876_in -> U4(f876_in)
   U4(f876_out1) -> f876_out1
   f858_in -> f858_out1
   f858_in -> U5(f876_in)
   U5(f876_out1) -> f858_out1
   f858_in -> U6(f858_in)
   U6(f858_out1) -> f858_out1
   f849_in -> f849_out1
   f849_in -> U7(f856_in)
   U7(f856_out1) -> f849_out1
   f20_in(T21, T22, T23, T24) -> U8(f284_in(T21, T22), T21, T22, T23, T24)
   U8(f284_out1, T21, T22, T23, T24) -> U9(f287_in(T23, T24), T21, T22, T23, T24)
   U9(f287_out1, T21, T22, T23, T24) -> f20_out1
   f287_in(T23, T24) -> U10(f284_in(T23, T24), T23, T24)
   U10(f284_out1, T23, T24) -> U11(f849_in, T23, T24)
   U11(f849_out1, T23, T24) -> f287_out1
   f856_in -> U12(f858_in)
   U12(f858_out1) -> U13(f859_in)
   U13(f859_out1) -> f856_out1
   f859_in -> U14(f858_in)
   U14(f858_out1) -> U15(f849_in)
   U15(f849_out1) -> f859_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(118) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(119)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F856_IN -> U12^1(f858_in)
   U12^1(f858_out1) -> F859_IN
   F859_IN -> U14^1(f858_in)
   U14^1(f858_out1) -> F849_IN
   F849_IN -> F856_IN

The TRS R consists of the following rules:

   f858_in -> f858_out1
   f858_in -> U5(f876_in)
   f858_in -> U6(f858_in)
   U6(f858_out1) -> f858_out1
   f876_in -> U4(f876_in)
   U5(f876_out1) -> f858_out1
   U4(f876_out1) -> f876_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(120) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.


Strictly oriented rules of the TRS R:

   U5(f876_out1) -> f858_out1
   U4(f876_out1) -> f876_out1

Used ordering: Polynomial interpretation [POLO]:

   POL(F849_IN) = 0
   POL(F856_IN) = 0
   POL(F859_IN) = 0
   POL(U12^1(x_1)) = 2*x_1
   POL(U14^1(x_1)) = 2*x_1
   POL(U4(x_1)) = 2*x_1
   POL(U5(x_1)) = 2*x_1
   POL(U6(x_1)) = x_1
   POL(f858_in) = 0
   POL(f858_out1) = 0
   POL(f876_in) = 0
   POL(f876_out1) = 1


----------------------------------------

(121)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F856_IN -> U12^1(f858_in)
   U12^1(f858_out1) -> F859_IN
   F859_IN -> U14^1(f858_in)
   U14^1(f858_out1) -> F849_IN
   F849_IN -> F856_IN

The TRS R consists of the following rules:

   f858_in -> f858_out1
   f858_in -> U5(f876_in)
   f858_in -> U6(f858_in)
   U6(f858_out1) -> f858_out1
   f876_in -> U4(f876_in)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(122) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.


Strictly oriented rules of the TRS R:

   f858_in -> U5(f876_in)

Used ordering: Polynomial interpretation [POLO]:

   POL(F849_IN) = 2
   POL(F856_IN) = 2
   POL(F859_IN) = 2
   POL(U12^1(x_1)) = x_1
   POL(U14^1(x_1)) = x_1
   POL(U4(x_1)) = 2*x_1
   POL(U5(x_1)) = 1 + 2*x_1
   POL(U6(x_1)) = x_1
   POL(f858_in) = 2
   POL(f858_out1) = 2
   POL(f876_in) = 0


----------------------------------------

(123)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F856_IN -> U12^1(f858_in)
   U12^1(f858_out1) -> F859_IN
   F859_IN -> U14^1(f858_in)
   U14^1(f858_out1) -> F849_IN
   F849_IN -> F856_IN

The TRS R consists of the following rules:

   f858_in -> f858_out1
   f858_in -> U6(f858_in)
   U6(f858_out1) -> f858_out1
   f876_in -> U4(f876_in)

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(124) MNOCProof (EQUIVALENT)
We use the modular non-overlap check [LPAR04] to enlarge Q to all left-hand sides of R.
----------------------------------------

(125)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F856_IN -> U12^1(f858_in)
   U12^1(f858_out1) -> F859_IN
   F859_IN -> U14^1(f858_in)
   U14^1(f858_out1) -> F849_IN
   F849_IN -> F856_IN

The TRS R consists of the following rules:

   f858_in -> f858_out1
   f858_in -> U6(f858_in)
   U6(f858_out1) -> f858_out1
   f876_in -> U4(f876_in)

The set Q consists of the following terms:

   f858_in
   U6(f858_out1)
   f876_in

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(126) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(127)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F856_IN -> U12^1(f858_in)
   U12^1(f858_out1) -> F859_IN
   F859_IN -> U14^1(f858_in)
   U14^1(f858_out1) -> F849_IN
   F849_IN -> F856_IN

The TRS R consists of the following rules:

   f858_in -> f858_out1
   f858_in -> U6(f858_in)
   U6(f858_out1) -> f858_out1

The set Q consists of the following terms:

   f858_in
   U6(f858_out1)
   f876_in

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(128) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   f876_in


----------------------------------------

(129)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F856_IN -> U12^1(f858_in)
   U12^1(f858_out1) -> F859_IN
   F859_IN -> U14^1(f858_in)
   U14^1(f858_out1) -> F849_IN
   F849_IN -> F856_IN

The TRS R consists of the following rules:

   f858_in -> f858_out1
   f858_in -> U6(f858_in)
   U6(f858_out1) -> f858_out1

The set Q consists of the following terms:

   f858_in
   U6(f858_out1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(130) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F856_IN -> U12^1(f858_in) at position [0] we obtained the following new rules [LPAR04]:

   (F856_IN -> U12^1(f858_out1),F856_IN -> U12^1(f858_out1))
   (F856_IN -> U12^1(U6(f858_in)),F856_IN -> U12^1(U6(f858_in)))


----------------------------------------

(131)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U12^1(f858_out1) -> F859_IN
   F859_IN -> U14^1(f858_in)
   U14^1(f858_out1) -> F849_IN
   F849_IN -> F856_IN
   F856_IN -> U12^1(f858_out1)
   F856_IN -> U12^1(U6(f858_in))

The TRS R consists of the following rules:

   f858_in -> f858_out1
   f858_in -> U6(f858_in)
   U6(f858_out1) -> f858_out1

The set Q consists of the following terms:

   f858_in
   U6(f858_out1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(132) TransformationProof (EQUIVALENT)
By narrowing [LPAR04] the rule F859_IN -> U14^1(f858_in) at position [0] we obtained the following new rules [LPAR04]:

   (F859_IN -> U14^1(f858_out1),F859_IN -> U14^1(f858_out1))
   (F859_IN -> U14^1(U6(f858_in)),F859_IN -> U14^1(U6(f858_in)))


----------------------------------------

(133)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   U12^1(f858_out1) -> F859_IN
   U14^1(f858_out1) -> F849_IN
   F849_IN -> F856_IN
   F856_IN -> U12^1(f858_out1)
   F856_IN -> U12^1(U6(f858_in))
   F859_IN -> U14^1(f858_out1)
   F859_IN -> U14^1(U6(f858_in))

The TRS R consists of the following rules:

   f858_in -> f858_out1
   f858_in -> U6(f858_in)
   U6(f858_out1) -> f858_out1

The set Q consists of the following terms:

   f858_in
   U6(f858_out1)

We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(134) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by narrowing to the left:

s = F859_IN evaluates to  t =F859_IN

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

F859_IN -> U14^1(f858_out1)
with rule F859_IN -> U14^1(f858_out1) at position [] and matcher [ ]

U14^1(f858_out1) -> F849_IN
with rule U14^1(f858_out1) -> F849_IN at position [] and matcher [ ]

F849_IN -> F856_IN
with rule F849_IN -> F856_IN at position [] and matcher [ ]

F856_IN -> U12^1(f858_out1)
with rule F856_IN -> U12^1(f858_out1) at position [] and matcher [ ]

U12^1(f858_out1) -> F859_IN
with rule U12^1(f858_out1) -> F859_IN

Now applying the matcher to the start term leads to a term which is equal to the last term in the rewriting sequence


All these steps are and every following step will be a correct step w.r.t to Q.




----------------------------------------

(135)
NO

----------------------------------------

(136)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F284_IN([], T40) -> F284_IN([], T40)

The TRS R consists of the following rules:

   f1_in(nil, cons(T11, T12)) -> f1_out1
   f1_in(cons(T21, T22), cons(T23, T24)) -> U1(f20_in(T21, T22, T23, T24), cons(T21, T22), cons(T23, T24))
   U1(f20_out1, cons(T21, T22), cons(T23, T24)) -> f1_out1
   f284_in(nil, T33) -> f284_out1
   f284_in([], T40) -> U2(f284_in([], T40), [], T40)
   U2(f284_out1, [], T40) -> f284_out1
   f284_in(.(T55, T56), T40) -> U3(f284_in(T56, T40), .(T55, T56), T40)
   U3(f284_out1, .(T55, T56), T40) -> f284_out1
   f876_in -> U4(f876_in)
   U4(f876_out1) -> f876_out1
   f858_in -> f858_out1
   f858_in -> U5(f876_in)
   U5(f876_out1) -> f858_out1
   f858_in -> U6(f858_in)
   U6(f858_out1) -> f858_out1
   f849_in -> f849_out1
   f849_in -> U7(f856_in)
   U7(f856_out1) -> f849_out1
   f20_in(T21, T22, T23, T24) -> U8(f284_in(T21, T22), T21, T22, T23, T24)
   U8(f284_out1, T21, T22, T23, T24) -> U9(f287_in(T23, T24), T21, T22, T23, T24)
   U9(f287_out1, T21, T22, T23, T24) -> f20_out1
   f287_in(T23, T24) -> U10(f284_in(T23, T24), T23, T24)
   U10(f284_out1, T23, T24) -> U11(f849_in, T23, T24)
   U11(f849_out1, T23, T24) -> f287_out1
   f856_in -> U12(f858_in)
   U12(f858_out1) -> U13(f859_in)
   U13(f859_out1) -> f856_out1
   f859_in -> U14(f858_in)
   U14(f858_out1) -> U15(f849_in)
   U15(f849_out1) -> f859_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(137) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(138)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F284_IN([], T40) -> F284_IN([], T40)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(139) ATransformationProof (EQUIVALENT)
We have applied the A-Transformation [FROCOS05] to get from an applicative problem to a standard problem. 
----------------------------------------

(140)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   [](T40) -> [](T40)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(141) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = [](T40) evaluates to  t =[](T40)

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from [](T40) to [](T40).




----------------------------------------

(142)
NO

----------------------------------------

(143)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F284_IN(.(T55, T56), T40) -> F284_IN(T56, T40)

The TRS R consists of the following rules:

   f1_in(nil, cons(T11, T12)) -> f1_out1
   f1_in(cons(T21, T22), cons(T23, T24)) -> U1(f20_in(T21, T22, T23, T24), cons(T21, T22), cons(T23, T24))
   U1(f20_out1, cons(T21, T22), cons(T23, T24)) -> f1_out1
   f284_in(nil, T33) -> f284_out1
   f284_in([], T40) -> U2(f284_in([], T40), [], T40)
   U2(f284_out1, [], T40) -> f284_out1
   f284_in(.(T55, T56), T40) -> U3(f284_in(T56, T40), .(T55, T56), T40)
   U3(f284_out1, .(T55, T56), T40) -> f284_out1
   f876_in -> U4(f876_in)
   U4(f876_out1) -> f876_out1
   f858_in -> f858_out1
   f858_in -> U5(f876_in)
   U5(f876_out1) -> f858_out1
   f858_in -> U6(f858_in)
   U6(f858_out1) -> f858_out1
   f849_in -> f849_out1
   f849_in -> U7(f856_in)
   U7(f856_out1) -> f849_out1
   f20_in(T21, T22, T23, T24) -> U8(f284_in(T21, T22), T21, T22, T23, T24)
   U8(f284_out1, T21, T22, T23, T24) -> U9(f287_in(T23, T24), T21, T22, T23, T24)
   U9(f287_out1, T21, T22, T23, T24) -> f20_out1
   f287_in(T23, T24) -> U10(f284_in(T23, T24), T23, T24)
   U10(f284_out1, T23, T24) -> U11(f849_in, T23, T24)
   U11(f849_out1, T23, T24) -> f287_out1
   f856_in -> U12(f858_in)
   U12(f858_out1) -> U13(f859_in)
   U13(f859_out1) -> f856_out1
   f859_in -> U14(f858_in)
   U14(f858_out1) -> U15(f849_in)
   U15(f849_out1) -> f859_out1

Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(144) UsableRulesProof (EQUIVALENT)
We can use the usable rules and reduction pair processor [LPAR04] with the Ce-compatible extension of the polynomial order that maps every function symbol to the sum of its arguments. Then, we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(145)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   F284_IN(.(T55, T56), T40) -> F284_IN(T56, T40)

R is empty.
Q is empty.
We have to consider all minimal (P,Q,R)-chains.
----------------------------------------

(146) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*F284_IN(.(T55, T56), T40) -> F284_IN(T56, T40)
The graph contains the following edges 1 > 1, 2 >= 2


----------------------------------------

(147)
YES

----------------------------------------

(148) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 2,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(lessleaves (nil) (cons X1 X2))",
                null
            ],
            [
                "(lessleaves (cons U V) (cons W Z))",
                "(',' (app U V U1) (',' (app W Z W1) (lessleaves U1 W1)))"
            ],
            [
                "(app (nil) Y Z)",
                "(',' (!) (eq Y Z))"
            ],
            [
                "(app X Y (cons U Z))",
                "(',' (head X U) (',' (tail X V) (app V Y Z)))"
            ],
            [
                "(head ([]) X3)",
                null
            ],
            [
                "(head (. X X4) X)",
                null
            ],
            [
                "(tail ([]) ([]))",
                null
            ],
            [
                "(tail (. X5 X) X)",
                null
            ],
            [
                "(eq X X)",
                null
            ]
        ]
    },
    "graph": {
        "nodes": {
            "907": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "908": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "909": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (head T107 X203) (',' (tail T107 X202) (app X202 T108 X204)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X203",
                        "X204",
                        "X202"
                    ],
                    "exprvars": []
                }
            },
            "1220": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (',' (head T175 X310) (',' (tail T175 X309) (app X309 T176 X311))) (',' (app T13 T14 X23) (lessleaves (cons X310 X311) X23)))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T175 T176 X22)",
                        "(app (nil) X30 X31)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T13",
                        "T14",
                        "T175",
                        "T176"
                    ],
                    "free": [
                        "X22",
                        "X23",
                        "X30",
                        "X31",
                        "X310",
                        "X311",
                        "X309"
                    ],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "475": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 4,
                        "term": "(app T13 T14 X23)"
                    },
                    {
                        "clause": 3,
                        "scope": 4,
                        "term": "(app T13 T14 X23)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T13",
                        "T14"
                    ],
                    "free": ["X23"],
                    "exprvars": []
                }
            },
            "910": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 12,
                        "term": "(',' (head T107 X203) (',' (tail T107 X202) (app X202 T108 X204)))"
                    },
                    {
                        "clause": 5,
                        "scope": 12,
                        "term": "(',' (head T107 X203) (',' (tail T107 X202) (app X202 T108 X204)))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X203",
                        "X204",
                        "X202"
                    ],
                    "exprvars": []
                }
            },
            "911": {
                "goal": [{
                    "clause": 4,
                    "scope": 12,
                    "term": "(',' (head T107 X203) (',' (tail T107 X202) (app X202 T108 X204)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X203",
                        "X204",
                        "X202"
                    ],
                    "exprvars": []
                }
            },
            "912": {
                "goal": [{
                    "clause": 5,
                    "scope": 12,
                    "term": "(',' (head T107 X203) (',' (tail T107 X202) (app X202 T108 X204)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X203",
                        "X204",
                        "X202"
                    ],
                    "exprvars": []
                }
            },
            "915": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (tail ([]) X202) (app X202 T110 X204))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X204",
                        "X202"
                    ],
                    "exprvars": []
                }
            },
            "916": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1219": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app T166 T167 X279) (lessleaves T165 X279))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X279"],
                    "exprvars": []
                }
            },
            "917": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 13,
                        "term": "(',' (tail ([]) X202) (app X202 T110 X204))"
                    },
                    {
                        "clause": 7,
                        "scope": 13,
                        "term": "(',' (tail ([]) X202) (app X202 T110 X204))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X204",
                        "X202"
                    ],
                    "exprvars": []
                }
            },
            "1218": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T160 T161 X278)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X278"],
                    "exprvars": []
                }
            },
            "11": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(true)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(lessleaves (nil) (cons T5 T6))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T5",
                        "T6"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "918": {
                "goal": [{
                    "clause": 6,
                    "scope": 13,
                    "term": "(',' (tail ([]) X202) (app X202 T110 X204))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X204",
                        "X202"
                    ],
                    "exprvars": []
                }
            },
            "12": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(lessleaves T1 T2)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(lessleaves T1 T2)",
                        "(lessleaves (nil) (cons X8 X9))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [
                        "X8",
                        "X9"
                    ],
                    "exprvars": []
                }
            },
            "919": {
                "goal": [{
                    "clause": 7,
                    "scope": 13,
                    "term": "(',' (tail ([]) X202) (app X202 T110 X204))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X204",
                        "X202"
                    ],
                    "exprvars": []
                }
            },
            "16": {
                "goal": [{
                    "clause": 1,
                    "scope": 1,
                    "term": "(lessleaves (nil) (cons T5 T6))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T5",
                        "T6"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1231": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app T13 T14 X23) (lessleaves (cons X324 T179) X23))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T13",
                        "T14"
                    ],
                    "free": [
                        "X23",
                        "X324"
                    ],
                    "exprvars": []
                }
            },
            "1230": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app ([]) T176 X311)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T176"],
                    "free": ["X311"],
                    "exprvars": []
                }
            },
            "1228": {
                "goal": [{
                    "clause": 7,
                    "scope": 17,
                    "term": "(',' (',' (tail ([]) X309) (app X309 T176 X311)) (',' (app T13 T14 X23) (lessleaves (cons X324 X311) X23)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T13",
                        "T14",
                        "T176"
                    ],
                    "free": [
                        "X23",
                        "X311",
                        "X309",
                        "X324"
                    ],
                    "exprvars": []
                }
            },
            "485": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_4) (eq T28 X56))"
                    },
                    {
                        "clause": 3,
                        "scope": 4,
                        "term": "(app (nil) T28 X23)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T28"],
                    "free": [
                        "X23",
                        "X56"
                    ],
                    "exprvars": []
                }
            },
            "1227": {
                "goal": [{
                    "clause": 6,
                    "scope": 17,
                    "term": "(',' (',' (tail ([]) X309) (app X309 T176 X311)) (',' (app T13 T14 X23) (lessleaves (cons X324 X311) X23)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T13",
                        "T14",
                        "T176"
                    ],
                    "free": [
                        "X23",
                        "X311",
                        "X309",
                        "X324"
                    ],
                    "exprvars": []
                }
            },
            "2": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(lessleaves T1 T2)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "1226": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 17,
                        "term": "(',' (',' (tail ([]) X309) (app X309 T176 X311)) (',' (app T13 T14 X23) (lessleaves (cons X324 X311) X23)))"
                    },
                    {
                        "clause": 7,
                        "scope": 17,
                        "term": "(',' (',' (tail ([]) X309) (app X309 T176 X311)) (',' (app T13 T14 X23) (lessleaves (cons X324 X311) X23)))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T13",
                        "T14",
                        "T176"
                    ],
                    "free": [
                        "X23",
                        "X311",
                        "X309",
                        "X324"
                    ],
                    "exprvars": []
                }
            },
            "1225": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1224": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (',' (tail ([]) X309) (app X309 T176 X311)) (',' (app T13 T14 X23) (lessleaves (cons X324 X311) X23)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T13",
                        "T14",
                        "T176"
                    ],
                    "free": [
                        "X23",
                        "X311",
                        "X309",
                        "X324"
                    ],
                    "exprvars": []
                }
            },
            "5": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 1,
                        "term": "(lessleaves T1 T2)"
                    },
                    {
                        "clause": 1,
                        "scope": 1,
                        "term": "(lessleaves T1 T2)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T1",
                        "T2"
                    ],
                    "free": [],
                    "exprvars": []
                }
            },
            "489": {
                "goal": [{
                    "clause": 3,
                    "scope": 4,
                    "term": "(app T13 T14 X23)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T13 T14 X23)",
                        "(app (nil) X54 X55)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T13",
                        "T14"
                    ],
                    "free": [
                        "X23",
                        "X54",
                        "X55"
                    ],
                    "exprvars": []
                }
            },
            "1223": {
                "goal": [{
                    "clause": 5,
                    "scope": 16,
                    "term": "(',' (',' (head T175 X310) (',' (tail T175 X309) (app X309 T176 X311))) (',' (app T13 T14 X23) (lessleaves (cons X310 X311) X23)))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T175 T176 X22)",
                        "(app (nil) X30 X31)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T13",
                        "T14",
                        "T175",
                        "T176"
                    ],
                    "free": [
                        "X22",
                        "X23",
                        "X30",
                        "X31",
                        "X310",
                        "X311",
                        "X309"
                    ],
                    "exprvars": []
                }
            },
            "1222": {
                "goal": [{
                    "clause": 4,
                    "scope": 16,
                    "term": "(',' (',' (head T175 X310) (',' (tail T175 X309) (app X309 T176 X311))) (',' (app T13 T14 X23) (lessleaves (cons X310 X311) X23)))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T175 T176 X22)",
                        "(app (nil) X30 X31)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T13",
                        "T14",
                        "T175",
                        "T176"
                    ],
                    "free": [
                        "X22",
                        "X23",
                        "X30",
                        "X31",
                        "X310",
                        "X311",
                        "X309"
                    ],
                    "exprvars": []
                }
            },
            "524": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (head T37 X81) (',' (tail T37 X80) (app X80 T38 X82)))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T37 T38 X23)",
                        "(app (nil) X54 X55)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T37",
                        "T38"
                    ],
                    "free": [
                        "X23",
                        "X54",
                        "X55",
                        "X81",
                        "X82",
                        "X80"
                    ],
                    "exprvars": []
                }
            },
            "920": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app ([]) T110 X204)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X204"],
                    "exprvars": []
                }
            },
            "1221": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 16,
                        "term": "(',' (',' (head T175 X310) (',' (tail T175 X309) (app X309 T176 X311))) (',' (app T13 T14 X23) (lessleaves (cons X310 X311) X23)))"
                    },
                    {
                        "clause": 5,
                        "scope": 16,
                        "term": "(',' (',' (head T175 X310) (',' (tail T175 X309) (app X309 T176 X311))) (',' (app T13 T14 X23) (lessleaves (cons X310 X311) X23)))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(app T175 T176 X22)",
                        "(app (nil) X30 X31)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T13",
                        "T14",
                        "T175",
                        "T176"
                    ],
                    "free": [
                        "X22",
                        "X23",
                        "X30",
                        "X31",
                        "X310",
                        "X311",
                        "X309"
                    ],
                    "exprvars": []
                }
            },
            "921": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "922": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (tail (. T118 T119) X202) (app X202 T120 X204))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X204",
                        "X202"
                    ],
                    "exprvars": []
                }
            },
            "923": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "924": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 14,
                        "term": "(',' (tail (. T118 T119) X202) (app X202 T120 X204))"
                    },
                    {
                        "clause": 7,
                        "scope": 14,
                        "term": "(',' (tail (. T118 T119) X202) (app X202 T120 X204))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X204",
                        "X202"
                    ],
                    "exprvars": []
                }
            },
            "925": {
                "goal": [{
                    "clause": 7,
                    "scope": 14,
                    "term": "(',' (tail (. T118 T119) X202) (app X202 T120 X204))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X204",
                        "X202"
                    ],
                    "exprvars": []
                }
            },
            "926": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T131 T132 X204)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X204"],
                    "exprvars": []
                }
            },
            "927": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 15,
                        "term": "(lessleaves T89 T88)"
                    },
                    {
                        "clause": 1,
                        "scope": 15,
                        "term": "(lessleaves T89 T88)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "928": {
                "goal": [{
                    "clause": 0,
                    "scope": 15,
                    "term": "(lessleaves T89 T88)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1229": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app ([]) T176 X311) (',' (app T13 T14 X23) (lessleaves (cons X324 X311) X23)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T13",
                        "T14",
                        "T176"
                    ],
                    "free": [
                        "X23",
                        "X311",
                        "X324"
                    ],
                    "exprvars": []
                }
            },
            "929": {
                "goal": [{
                    "clause": 1,
                    "scope": 15,
                    "term": "(lessleaves T89 T88)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "24": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "491": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(eq T28 X56)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T28"],
                    "free": ["X56"],
                    "exprvars": []
                }
            },
            "494": {
                "goal": [{
                    "clause": 8,
                    "scope": 5,
                    "term": "(eq T28 X56)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T28"],
                    "free": ["X56"],
                    "exprvars": []
                }
            },
            "1239": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app T13 T14 X23) (lessleaves (cons T193 T196) X23))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T13",
                        "T14",
                        "T193"
                    ],
                    "free": ["X23"],
                    "exprvars": []
                }
            },
            "1238": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T194 T176 X311)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T176",
                        "T194"
                    ],
                    "free": ["X311"],
                    "exprvars": []
                }
            },
            "1237": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app T194 T176 X311) (',' (app T13 T14 X23) (lessleaves (cons T193 X311) X23)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T13",
                        "T14",
                        "T176",
                        "T193",
                        "T194"
                    ],
                    "free": [
                        "X23",
                        "X311"
                    ],
                    "exprvars": []
                }
            },
            "1236": {
                "goal": [{
                    "clause": 7,
                    "scope": 18,
                    "term": "(',' (',' (tail (. T185 T186) X309) (app X309 T176 X311)) (',' (app T13 T14 X23) (lessleaves (cons T185 X311) X23)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T13",
                        "T14",
                        "T176",
                        "T185",
                        "T186"
                    ],
                    "free": [
                        "X23",
                        "X311",
                        "X309"
                    ],
                    "exprvars": []
                }
            },
            "1235": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 18,
                        "term": "(',' (',' (tail (. T185 T186) X309) (app X309 T176 X311)) (',' (app T13 T14 X23) (lessleaves (cons T185 X311) X23)))"
                    },
                    {
                        "clause": 7,
                        "scope": 18,
                        "term": "(',' (',' (tail (. T185 T186) X309) (app X309 T176 X311)) (',' (app T13 T14 X23) (lessleaves (cons T185 X311) X23)))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T13",
                        "T14",
                        "T176",
                        "T185",
                        "T186"
                    ],
                    "free": [
                        "X23",
                        "X311",
                        "X309"
                    ],
                    "exprvars": []
                }
            },
            "533": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 6,
                        "term": "(',' (head T37 X81) (',' (tail T37 X80) (app X80 T38 X82)))"
                    },
                    {
                        "clause": 5,
                        "scope": 6,
                        "term": "(',' (head T37 X81) (',' (tail T37 X80) (app X80 T38 X82)))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(app T37 T38 X23)",
                        "(app (nil) X54 X55)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T37",
                        "T38"
                    ],
                    "free": [
                        "X23",
                        "X54",
                        "X55",
                        "X81",
                        "X82",
                        "X80"
                    ],
                    "exprvars": []
                }
            },
            "896": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app T78 T79 X156) (',' (app T82 T83 X157) (lessleaves X156 X157)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T78",
                        "T79"
                    ],
                    "free": [
                        "X156",
                        "X157"
                    ],
                    "exprvars": []
                }
            },
            "1234": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "897": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "930": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1233": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (',' (tail (. T185 T186) X309) (app X309 T176 X311)) (',' (app T13 T14 X23) (lessleaves (cons T185 X311) X23)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T13",
                        "T14",
                        "T176",
                        "T185",
                        "T186"
                    ],
                    "free": [
                        "X23",
                        "X311",
                        "X309"
                    ],
                    "exprvars": []
                }
            },
            "898": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T78 T79 X156)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T78",
                        "T79"
                    ],
                    "free": ["X156"],
                    "exprvars": []
                }
            },
            "931": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "1232": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "899": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app T82 T83 X157) (lessleaves T85 X157))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X157"],
                    "exprvars": []
                }
            },
            "932": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "933": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app T160 T161 X278) (',' (app T162 T163 X279) (lessleaves X278 X279)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X278",
                        "X279"
                    ],
                    "exprvars": []
                }
            },
            "934": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "543": {
                "goal": [{
                    "clause": 4,
                    "scope": 6,
                    "term": "(',' (head T37 X81) (',' (tail T37 X80) (app X80 T38 X82)))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T37 T38 X23)",
                        "(app (nil) X54 X55)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T37",
                        "T38"
                    ],
                    "free": [
                        "X23",
                        "X54",
                        "X55",
                        "X81",
                        "X82",
                        "X80"
                    ],
                    "exprvars": []
                }
            },
            "546": {
                "goal": [{
                    "clause": 5,
                    "scope": 6,
                    "term": "(',' (head T37 X81) (',' (tail T37 X80) (app X80 T38 X82)))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T37 T38 X23)",
                        "(app (nil) X54 X55)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T37",
                        "T38"
                    ],
                    "free": [
                        "X23",
                        "X54",
                        "X55",
                        "X81",
                        "X82",
                        "X80"
                    ],
                    "exprvars": []
                }
            },
            "42": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app T11 T12 X22) (',' (app T13 T14 X23) (lessleaves X22 X23)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T11",
                        "T12",
                        "T13",
                        "T14"
                    ],
                    "free": [
                        "X22",
                        "X23"
                    ],
                    "exprvars": []
                }
            },
            "43": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "44": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 2,
                        "term": "(',' (app T11 T12 X22) (',' (app T13 T14 X23) (lessleaves X22 X23)))"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(',' (app T11 T12 X22) (',' (app T13 T14 X23) (lessleaves X22 X23)))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T11",
                        "T12",
                        "T13",
                        "T14"
                    ],
                    "free": [
                        "X22",
                        "X23"
                    ],
                    "exprvars": []
                }
            },
            "276": {
                "goal": [{
                    "clause": 8,
                    "scope": 3,
                    "term": "(',' (eq T17 X32) (',' (app T13 T14 X23) (lessleaves X32 X23)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T13",
                        "T14",
                        "T17"
                    ],
                    "free": [
                        "X23",
                        "X32"
                    ],
                    "exprvars": []
                }
            },
            "277": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (app T13 T14 X23) (lessleaves T22 X23))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T13",
                        "T14",
                        "T22"
                    ],
                    "free": ["X23"],
                    "exprvars": []
                }
            },
            "553": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (tail ([]) X80) (app X80 T38 X82))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T38"],
                    "free": [
                        "X82",
                        "X80"
                    ],
                    "exprvars": []
                }
            },
            "554": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "555": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 7,
                        "term": "(',' (tail ([]) X80) (app X80 T38 X82))"
                    },
                    {
                        "clause": 7,
                        "scope": 7,
                        "term": "(',' (tail ([]) X80) (app X80 T38 X82))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T38"],
                    "free": [
                        "X82",
                        "X80"
                    ],
                    "exprvars": []
                }
            },
            "556": {
                "goal": [{
                    "clause": 6,
                    "scope": 7,
                    "term": "(',' (tail ([]) X80) (app X80 T38 X82))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T38"],
                    "free": [
                        "X82",
                        "X80"
                    ],
                    "exprvars": []
                }
            },
            "557": {
                "goal": [{
                    "clause": 7,
                    "scope": 7,
                    "term": "(',' (tail ([]) X80) (app X80 T38 X82))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T38"],
                    "free": [
                        "X82",
                        "X80"
                    ],
                    "exprvars": []
                }
            },
            "558": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app ([]) T38 X82)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T38"],
                    "free": ["X82"],
                    "exprvars": []
                }
            },
            "564": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "565": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (tail (. T45 T46) X80) (app X80 T38 X82))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T38",
                        "T45",
                        "T46"
                    ],
                    "free": [
                        "X82",
                        "X80"
                    ],
                    "exprvars": []
                }
            },
            "566": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "62": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (',' (!_2) (eq T17 X32)) (',' (app T13 T14 X23) (lessleaves X32 X23)))"
                    },
                    {
                        "clause": 3,
                        "scope": 2,
                        "term": "(',' (app (nil) T17 X22) (',' (app T13 T14 X23) (lessleaves X22 X23)))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T13",
                        "T14",
                        "T17"
                    ],
                    "free": [
                        "X22",
                        "X23",
                        "X32"
                    ],
                    "exprvars": []
                }
            },
            "63": {
                "goal": [{
                    "clause": 3,
                    "scope": 2,
                    "term": "(',' (app T11 T12 X22) (',' (app T13 T14 X23) (lessleaves X22 X23)))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T11 T12 X22)",
                        "(app (nil) X30 X31)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T11",
                        "T12",
                        "T13",
                        "T14"
                    ],
                    "free": [
                        "X22",
                        "X23",
                        "X30",
                        "X31"
                    ],
                    "exprvars": []
                }
            },
            "64": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (eq T17 X32) (',' (app T13 T14 X23) (lessleaves X32 X23)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T13",
                        "T14",
                        "T17"
                    ],
                    "free": [
                        "X23",
                        "X32"
                    ],
                    "exprvars": []
                }
            },
            "570": {
                "goal": [
                    {
                        "clause": 6,
                        "scope": 8,
                        "term": "(',' (tail (. T45 T46) X80) (app X80 T38 X82))"
                    },
                    {
                        "clause": 7,
                        "scope": 8,
                        "term": "(',' (tail (. T45 T46) X80) (app X80 T38 X82))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T38",
                        "T45",
                        "T46"
                    ],
                    "free": [
                        "X82",
                        "X80"
                    ],
                    "exprvars": []
                }
            },
            "572": {
                "goal": [{
                    "clause": 7,
                    "scope": 8,
                    "term": "(',' (tail (. T45 T46) X80) (app X80 T38 X82))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T38",
                        "T45",
                        "T46"
                    ],
                    "free": [
                        "X82",
                        "X80"
                    ],
                    "exprvars": []
                }
            },
            "619": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T54 T38 X82)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T38",
                        "T54"
                    ],
                    "free": ["X82"],
                    "exprvars": []
                }
            },
            "464": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T13 T14 X23)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [
                        "T13",
                        "T14"
                    ],
                    "free": ["X23"],
                    "exprvars": []
                }
            },
            "740": {
                "goal": [
                    {
                        "clause": 0,
                        "scope": 9,
                        "term": "(lessleaves T22 T24)"
                    },
                    {
                        "clause": 1,
                        "scope": 9,
                        "term": "(lessleaves T22 T24)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T22"],
                    "free": [],
                    "exprvars": []
                }
            },
            "466": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(lessleaves T22 T24)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T22"],
                    "free": [],
                    "exprvars": []
                }
            },
            "500": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "743": {
                "goal": [{
                    "clause": 0,
                    "scope": 9,
                    "term": "(lessleaves T22 T24)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T22"],
                    "free": [],
                    "exprvars": []
                }
            },
            "502": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "744": {
                "goal": [{
                    "clause": 1,
                    "scope": 9,
                    "term": "(lessleaves T22 T24)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T22"],
                    "free": [],
                    "exprvars": []
                }
            },
            "745": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(true)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "746": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "900": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(app T82 T83 X157)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X157"],
                    "exprvars": []
                }
            },
            "747": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "901": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(lessleaves T89 T88)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "902": {
                "goal": [
                    {
                        "clause": 2,
                        "scope": 10,
                        "term": "(app T82 T83 X157)"
                    },
                    {
                        "clause": 3,
                        "scope": 10,
                        "term": "(app T82 T83 X157)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X157"],
                    "exprvars": []
                }
            },
            "903": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (!_10) (eq T94 X178))"
                    },
                    {
                        "clause": 3,
                        "scope": 10,
                        "term": "(app T82 T83 X157)"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X157",
                        "X178"
                    ],
                    "exprvars": []
                }
            },
            "904": {
                "goal": [{
                    "clause": 3,
                    "scope": 10,
                    "term": "(app T82 T83 X157)"
                }],
                "kb": {
                    "nonunifying": [[
                        "(app T82 T83 X157)",
                        "(app (nil) X176 X177)"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [
                        "X157",
                        "X176",
                        "X177"
                    ],
                    "exprvars": []
                }
            },
            "905": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(eq T94 X178)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X178"],
                    "exprvars": []
                }
            },
            "906": {
                "goal": [{
                    "clause": 8,
                    "scope": 11,
                    "term": "(eq T94 X178)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X178"],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 2,
                "to": 5,
                "label": "CASE"
            },
            {
                "from": 5,
                "to": 11,
                "label": "EVAL with clause\nlessleaves(nil, cons(X8, X9)).\nand substitutionT1 -> nil,\nX8 -> T5,\nX9 -> T6,\nT2 -> cons(T5, T6)"
            },
            {
                "from": 5,
                "to": 12,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 11,
                "to": 16,
                "label": "SUCCESS"
            },
            {
                "from": 12,
                "to": 42,
                "label": "EVAL with clause\nlessleaves(cons(X18, X19), cons(X20, X21)) :- ','(app(X18, X19, X22), ','(app(X20, X21, X23), lessleaves(X22, X23))).\nand substitutionX18 -> T11,\nX19 -> T12,\nT1 -> cons(T11, T12),\nX20 -> T13,\nX21 -> T14,\nT2 -> cons(T13, T14)"
            },
            {
                "from": 12,
                "to": 43,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 16,
                "to": 24,
                "label": "BACKTRACK\nfor clause: lessleaves(cons(U, V), cons(W, Z)) :- ','(app(U, V, U1), ','(app(W, Z, W1), lessleaves(U1, W1)))because of non-unification"
            },
            {
                "from": 42,
                "to": 44,
                "label": "CASE"
            },
            {
                "from": 44,
                "to": 62,
                "label": "EVAL with clause\napp(nil, X30, X31) :- ','(!_2, eq(X30, X31)).\nand substitutionT11 -> nil,\nT12 -> T17,\nX30 -> T17,\nX22 -> X32,\nX31 -> X32"
            },
            {
                "from": 44,
                "to": 63,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 62,
                "to": 64,
                "label": "CUT"
            },
            {
                "from": 63,
                "to": 1220,
                "label": "ONLY EVAL with clause\napp(X305, X306, cons(X307, X308)) :- ','(head(X305, X307), ','(tail(X305, X309), app(X309, X306, X308))).\nand substitutionT11 -> T175,\nX305 -> T175,\nT12 -> T176,\nX306 -> T176,\nX307 -> X310,\nX308 -> X311,\nX22 -> cons(X310, X311)"
            },
            {
                "from": 64,
                "to": 276,
                "label": "CASE"
            },
            {
                "from": 276,
                "to": 277,
                "label": "ONLY EVAL with clause\neq(X41, X41).\nand substitutionT17 -> T22,\nX41 -> T22,\nX32 -> T22"
            },
            {
                "from": 277,
                "to": 464,
                "label": "SPLIT 1"
            },
            {
                "from": 277,
                "to": 466,
                "label": "SPLIT 2\nnew knowledge:\nT13 is ground\nT14 is ground\nreplacements:X23 -> T24"
            },
            {
                "from": 464,
                "to": 475,
                "label": "CASE"
            },
            {
                "from": 466,
                "to": 740,
                "label": "CASE"
            },
            {
                "from": 475,
                "to": 485,
                "label": "EVAL with clause\napp(nil, X54, X55) :- ','(!_4, eq(X54, X55)).\nand substitutionT13 -> nil,\nT14 -> T28,\nX54 -> T28,\nX23 -> X56,\nX55 -> X56"
            },
            {
                "from": 475,
                "to": 489,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 485,
                "to": 491,
                "label": "CUT"
            },
            {
                "from": 489,
                "to": 524,
                "label": "ONLY EVAL with clause\napp(X76, X77, cons(X78, X79)) :- ','(head(X76, X78), ','(tail(X76, X80), app(X80, X77, X79))).\nand substitutionT13 -> T37,\nX76 -> T37,\nT14 -> T38,\nX77 -> T38,\nX78 -> X81,\nX79 -> X82,\nX23 -> cons(X81, X82)"
            },
            {
                "from": 491,
                "to": 494,
                "label": "CASE"
            },
            {
                "from": 494,
                "to": 500,
                "label": "ONLY EVAL with clause\neq(X59, X59).\nand substitutionT28 -> T31,\nX59 -> T31,\nX56 -> T31"
            },
            {
                "from": 500,
                "to": 502,
                "label": "SUCCESS"
            },
            {
                "from": 524,
                "to": 533,
                "label": "CASE"
            },
            {
                "from": 533,
                "to": 543,
                "label": "PARALLEL"
            },
            {
                "from": 533,
                "to": 546,
                "label": "PARALLEL"
            },
            {
                "from": 543,
                "to": 553,
                "label": "EVAL with clause\nhead([], X94).\nand substitutionT37 -> [],\nX81 -> X95,\nX94 -> X95"
            },
            {
                "from": 543,
                "to": 554,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 546,
                "to": 565,
                "label": "EVAL with clause\nhead(.(X111, X112), X111).\nand substitutionX111 -> T45,\nX112 -> T46,\nT37 -> .(T45, T46),\nX81 -> T45"
            },
            {
                "from": 546,
                "to": 566,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 553,
                "to": 555,
                "label": "CASE"
            },
            {
                "from": 555,
                "to": 556,
                "label": "PARALLEL"
            },
            {
                "from": 555,
                "to": 557,
                "label": "PARALLEL"
            },
            {
                "from": 556,
                "to": 558,
                "label": "ONLY EVAL with clause\ntail([], []).\nand substitutionX80 -> []"
            },
            {
                "from": 557,
                "to": 564,
                "label": "BACKTRACK\nfor clause: tail(.(X5, X), X)because of non-unification"
            },
            {
                "from": 558,
                "to": 464,
                "label": "INSTANCE with matching:\nT13 -> []\nT14 -> T38\nX23 -> X82"
            },
            {
                "from": 565,
                "to": 570,
                "label": "CASE"
            },
            {
                "from": 570,
                "to": 572,
                "label": "BACKTRACK\nfor clause: tail([], [])because of non-unification"
            },
            {
                "from": 572,
                "to": 619,
                "label": "ONLY EVAL with clause\ntail(.(X123, X124), X124).\nand substitutionT45 -> T53,\nX123 -> T53,\nT46 -> T54,\nX124 -> T54,\nX80 -> T54"
            },
            {
                "from": 619,
                "to": 464,
                "label": "INSTANCE with matching:\nT13 -> T54\nT14 -> T38\nX23 -> X82"
            },
            {
                "from": 740,
                "to": 743,
                "label": "PARALLEL"
            },
            {
                "from": 740,
                "to": 744,
                "label": "PARALLEL"
            },
            {
                "from": 743,
                "to": 745,
                "label": "EVAL with clause\nlessleaves(nil, cons(X140, X141)).\nand substitutionT22 -> nil,\nX140 -> T68,\nX141 -> T69,\nT24 -> cons(T68, T69)"
            },
            {
                "from": 743,
                "to": 746,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 744,
                "to": 896,
                "label": "EVAL with clause\nlessleaves(cons(X152, X153), cons(X154, X155)) :- ','(app(X152, X153, X156), ','(app(X154, X155, X157), lessleaves(X156, X157))).\nand substitutionX152 -> T78,\nX153 -> T79,\nT22 -> cons(T78, T79),\nX154 -> T82,\nX155 -> T83,\nT24 -> cons(T82, T83),\nT80 -> T82,\nT81 -> T83"
            },
            {
                "from": 744,
                "to": 897,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 745,
                "to": 747,
                "label": "SUCCESS"
            },
            {
                "from": 896,
                "to": 898,
                "label": "SPLIT 1"
            },
            {
                "from": 896,
                "to": 899,
                "label": "SPLIT 2\nnew knowledge:\nT78 is ground\nT79 is ground\nreplacements:X156 -> T85"
            },
            {
                "from": 898,
                "to": 464,
                "label": "INSTANCE with matching:\nT13 -> T78\nT14 -> T79\nX23 -> X156"
            },
            {
                "from": 899,
                "to": 900,
                "label": "SPLIT 1"
            },
            {
                "from": 899,
                "to": 901,
                "label": "SPLIT 2\nreplacements:X157 -> T88,\nT85 -> T89"
            },
            {
                "from": 900,
                "to": 902,
                "label": "CASE"
            },
            {
                "from": 901,
                "to": 927,
                "label": "CASE"
            },
            {
                "from": 902,
                "to": 903,
                "label": "EVAL with clause\napp(nil, X176, X177) :- ','(!_10, eq(X176, X177)).\nand substitutionT82 -> nil,\nT83 -> T94,\nX176 -> T94,\nX157 -> X178,\nX177 -> X178,\nT93 -> T94"
            },
            {
                "from": 902,
                "to": 904,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 903,
                "to": 905,
                "label": "CUT"
            },
            {
                "from": 904,
                "to": 909,
                "label": "ONLY EVAL with clause\napp(X198, X199, cons(X200, X201)) :- ','(head(X198, X200), ','(tail(X198, X202), app(X202, X199, X201))).\nand substitutionT82 -> T107,\nX198 -> T107,\nT83 -> T108,\nX199 -> T108,\nX200 -> X203,\nX201 -> X204,\nX157 -> cons(X203, X204),\nT105 -> T107,\nT106 -> T108"
            },
            {
                "from": 905,
                "to": 906,
                "label": "CASE"
            },
            {
                "from": 906,
                "to": 907,
                "label": "ONLY EVAL with clause\neq(X181, X181).\nand substitutionT94 -> T97,\nX181 -> T97,\nX178 -> T97"
            },
            {
                "from": 907,
                "to": 908,
                "label": "SUCCESS"
            },
            {
                "from": 909,
                "to": 910,
                "label": "CASE"
            },
            {
                "from": 910,
                "to": 911,
                "label": "PARALLEL"
            },
            {
                "from": 910,
                "to": 912,
                "label": "PARALLEL"
            },
            {
                "from": 911,
                "to": 915,
                "label": "EVAL with clause\nhead([], X216).\nand substitutionT107 -> [],\nX203 -> X217,\nX216 -> X217,\nT108 -> T110"
            },
            {
                "from": 911,
                "to": 916,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 912,
                "to": 922,
                "label": "EVAL with clause\nhead(.(X233, X234), X233).\nand substitutionX233 -> T118,\nX234 -> T119,\nT107 -> .(T118, T119),\nX203 -> T118,\nT116 -> T118,\nT117 -> T119,\nT108 -> T120"
            },
            {
                "from": 912,
                "to": 923,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 915,
                "to": 917,
                "label": "CASE"
            },
            {
                "from": 917,
                "to": 918,
                "label": "PARALLEL"
            },
            {
                "from": 917,
                "to": 919,
                "label": "PARALLEL"
            },
            {
                "from": 918,
                "to": 920,
                "label": "ONLY EVAL with clause\ntail([], []).\nand substitutionX202 -> []"
            },
            {
                "from": 919,
                "to": 921,
                "label": "BACKTRACK\nfor clause: tail(.(X5, X), X)because of non-unification"
            },
            {
                "from": 920,
                "to": 900,
                "label": "INSTANCE with matching:\nT82 -> []\nT83 -> T110\nX157 -> X204"
            },
            {
                "from": 922,
                "to": 924,
                "label": "CASE"
            },
            {
                "from": 924,
                "to": 925,
                "label": "BACKTRACK\nfor clause: tail([], [])because of non-unification"
            },
            {
                "from": 925,
                "to": 926,
                "label": "ONLY EVAL with clause\ntail(.(X245, X246), X246).\nand substitutionT118 -> T129,\nX245 -> T129,\nT119 -> T131,\nX246 -> T131,\nX202 -> T131,\nT130 -> T131,\nT120 -> T132"
            },
            {
                "from": 926,
                "to": 900,
                "label": "INSTANCE with matching:\nT82 -> T131\nT83 -> T132\nX157 -> X204"
            },
            {
                "from": 927,
                "to": 928,
                "label": "PARALLEL"
            },
            {
                "from": 927,
                "to": 929,
                "label": "PARALLEL"
            },
            {
                "from": 928,
                "to": 930,
                "label": "EVAL with clause\nlessleaves(nil, cons(X262, X263)).\nand substitutionT89 -> nil,\nX262 -> T146,\nX263 -> T147,\nT88 -> cons(T146, T147)"
            },
            {
                "from": 928,
                "to": 931,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 929,
                "to": 933,
                "label": "EVAL with clause\nlessleaves(cons(X274, X275), cons(X276, X277)) :- ','(app(X274, X275, X278), ','(app(X276, X277, X279), lessleaves(X278, X279))).\nand substitutionX274 -> T160,\nX275 -> T161,\nT89 -> cons(T160, T161),\nX276 -> T162,\nX277 -> T163,\nT88 -> cons(T162, T163),\nT156 -> T160,\nT157 -> T161,\nT158 -> T162,\nT159 -> T163"
            },
            {
                "from": 929,
                "to": 934,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 930,
                "to": 932,
                "label": "SUCCESS"
            },
            {
                "from": 933,
                "to": 1218,
                "label": "SPLIT 1"
            },
            {
                "from": 933,
                "to": 1219,
                "label": "SPLIT 2\nreplacements:X278 -> T165,\nT162 -> T166,\nT163 -> T167"
            },
            {
                "from": 1218,
                "to": 900,
                "label": "INSTANCE with matching:\nT82 -> T160\nT83 -> T161\nX157 -> X278"
            },
            {
                "from": 1219,
                "to": 899,
                "label": "INSTANCE with matching:\nT82 -> T166\nT83 -> T167\nX157 -> X279\nT85 -> T165"
            },
            {
                "from": 1220,
                "to": 1221,
                "label": "CASE"
            },
            {
                "from": 1221,
                "to": 1222,
                "label": "PARALLEL"
            },
            {
                "from": 1221,
                "to": 1223,
                "label": "PARALLEL"
            },
            {
                "from": 1222,
                "to": 1224,
                "label": "EVAL with clause\nhead([], X323).\nand substitutionT175 -> [],\nX310 -> X324,\nX323 -> X324"
            },
            {
                "from": 1222,
                "to": 1225,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1223,
                "to": 1233,
                "label": "EVAL with clause\nhead(.(X345, X346), X345).\nand substitutionX345 -> T185,\nX346 -> T186,\nT175 -> .(T185, T186),\nX310 -> T185"
            },
            {
                "from": 1223,
                "to": 1234,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 1224,
                "to": 1226,
                "label": "CASE"
            },
            {
                "from": 1226,
                "to": 1227,
                "label": "PARALLEL"
            },
            {
                "from": 1226,
                "to": 1228,
                "label": "PARALLEL"
            },
            {
                "from": 1227,
                "to": 1229,
                "label": "ONLY EVAL with clause\ntail([], []).\nand substitutionX309 -> []"
            },
            {
                "from": 1228,
                "to": 1232,
                "label": "BACKTRACK\nfor clause: tail(.(X5, X), X)because of non-unification"
            },
            {
                "from": 1229,
                "to": 1230,
                "label": "SPLIT 1"
            },
            {
                "from": 1229,
                "to": 1231,
                "label": "SPLIT 2\nnew knowledge:\nT176 is ground\nreplacements:X311 -> T179"
            },
            {
                "from": 1230,
                "to": 464,
                "label": "INSTANCE with matching:\nT13 -> []\nT14 -> T176\nX23 -> X311"
            },
            {
                "from": 1231,
                "to": 899,
                "label": "INSTANCE with matching:\nT82 -> T13\nT83 -> T14\nX157 -> X23\nT85 -> cons(X324, T179)"
            },
            {
                "from": 1233,
                "to": 1235,
                "label": "CASE"
            },
            {
                "from": 1235,
                "to": 1236,
                "label": "BACKTRACK\nfor clause: tail([], [])because of non-unification"
            },
            {
                "from": 1236,
                "to": 1237,
                "label": "ONLY EVAL with clause\ntail(.(X357, X358), X358).\nand substitutionT185 -> T193,\nX357 -> T193,\nT186 -> T194,\nX358 -> T194,\nX309 -> T194"
            },
            {
                "from": 1237,
                "to": 1238,
                "label": "SPLIT 1"
            },
            {
                "from": 1237,
                "to": 1239,
                "label": "SPLIT 2\nnew knowledge:\nT194 is ground\nT176 is ground\nreplacements:X311 -> T196"
            },
            {
                "from": 1238,
                "to": 464,
                "label": "INSTANCE with matching:\nT13 -> T194\nT14 -> T176\nX23 -> X311"
            },
            {
                "from": 1239,
                "to": 899,
                "label": "INSTANCE with matching:\nT82 -> T13\nT83 -> T14\nX157 -> X23\nT85 -> cons(T193, T196)"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(149)
Obligation:
Triples:

appA([], X1, cons(X2, X3)) :- appA([], X1, X3).
appA(.(X1, X2), X3, cons(X1, X4)) :- appA(X2, X3, X4).
appB([], X1, cons(X2, X3)) :- appB([], X1, X3).
appB(.(X1, X2), X3, cons(X1, X4)) :- appB(X2, X3, X4).
pC(X1, X2, X3, X4) :- appB(X1, X2, X3).
pC(X1, X2, cons(X3, X4), cons(X5, X6)) :- ','(appcB(X1, X2, cons(X3, X4)), appB(X5, X6, X7)).
pC(X1, X2, cons(X3, X4), cons(X5, X6)) :- ','(appcB(X1, X2, cons(X3, X4)), ','(appcB(X5, X6, X7), pC(X3, X4, X8, X7))).
lessleavesD(cons(nil, X1), cons(X2, X3)) :- appA(X2, X3, X4).
lessleavesD(cons(nil, cons(X1, X2)), cons(X3, X4)) :- ','(appcA(X3, X4, cons(X5, X6)), appA(X1, X2, X7)).
lessleavesD(cons(nil, cons(X1, X2)), cons(X3, X4)) :- ','(appcA(X3, X4, cons(X5, X6)), ','(appcA(X1, X2, X7), pC(X5, X6, X8, X7))).
lessleavesD(cons([], X1), cons(X2, X3)) :- appA([], X1, X4).
lessleavesD(cons([], X1), cons(X2, X3)) :- ','(appcA([], X1, X4), pC(X2, X3, X5, cons(X6, X4))).
lessleavesD(cons(.(X1, X2), X3), cons(X4, X5)) :- appA(X2, X3, X6).
lessleavesD(cons(.(X1, X2), X3), cons(X4, X5)) :- ','(appcA(X2, X3, X6), pC(X4, X5, X7, cons(X1, X6))).

Clauses:

appcA(nil, X1, X1).
appcA([], X1, cons(X2, X3)) :- appcA([], X1, X3).
appcA(.(X1, X2), X3, cons(X1, X4)) :- appcA(X2, X3, X4).
appcB(nil, X1, X1).
appcB([], X1, cons(X2, X3)) :- appcB([], X1, X3).
appcB(.(X1, X2), X3, cons(X1, X4)) :- appcB(X2, X3, X4).
qcC(X1, X2, cons(X3, X4), nil) :- appcB(X1, X2, cons(X3, X4)).
qcC(X1, X2, cons(X3, X4), cons(X5, X6)) :- ','(appcB(X1, X2, cons(X3, X4)), ','(appcB(X5, X6, X7), qcC(X3, X4, X8, X7))).

Afs:

lessleavesD(x1, x2)  =  lessleavesD(x1, x2)


----------------------------------------

(150) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

lessleavesD_in_2: (b,b)

appA_in_3: (b,b,f)

appcA_in_3: (b,b,f)

pC_in_4: (f,f,f,f) (b,b,f,f)

appB_in_3: (f,f,f) (b,f,f) (b,b,f)

appcB_in_3: (f,f,f) (b,f,f) (b,b,f)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   LESSLEAVESD_IN_GG(cons(nil, X1), cons(X2, X3)) -> U10_GG(X1, X2, X3, appA_in_gga(X2, X3, X4))
   LESSLEAVESD_IN_GG(cons(nil, X1), cons(X2, X3)) -> APPA_IN_GGA(X2, X3, X4)
   APPA_IN_GGA([], X1, cons(X2, X3)) -> U1_GGA(X1, X2, X3, appA_in_gga([], X1, X3))
   APPA_IN_GGA([], X1, cons(X2, X3)) -> APPA_IN_GGA([], X1, X3)
   APPA_IN_GGA(.(X1, X2), X3, cons(X1, X4)) -> U2_GGA(X1, X2, X3, X4, appA_in_gga(X2, X3, X4))
   APPA_IN_GGA(.(X1, X2), X3, cons(X1, X4)) -> APPA_IN_GGA(X2, X3, X4)
   LESSLEAVESD_IN_GG(cons(nil, cons(X1, X2)), cons(X3, X4)) -> U11_GG(X1, X2, X3, X4, appcA_in_gga(X3, X4, cons(X5, X6)))
   U11_GG(X1, X2, X3, X4, appcA_out_gga(X3, X4, cons(X5, X6))) -> U12_GG(X1, X2, X3, X4, appA_in_gga(X1, X2, X7))
   U11_GG(X1, X2, X3, X4, appcA_out_gga(X3, X4, cons(X5, X6))) -> APPA_IN_GGA(X1, X2, X7)
   U11_GG(X1, X2, X3, X4, appcA_out_gga(X3, X4, cons(X5, X6))) -> U13_GG(X1, X2, X3, X4, X5, X6, appcA_in_gga(X1, X2, X7))
   U13_GG(X1, X2, X3, X4, X5, X6, appcA_out_gga(X1, X2, X7)) -> U14_GG(X1, X2, X3, X4, pC_in_aaaa(X5, X6, X8, X7))
   U13_GG(X1, X2, X3, X4, X5, X6, appcA_out_gga(X1, X2, X7)) -> PC_IN_AAAA(X5, X6, X8, X7)
   PC_IN_AAAA(X1, X2, X3, X4) -> U5_AAAA(X1, X2, X3, X4, appB_in_aaa(X1, X2, X3))
   PC_IN_AAAA(X1, X2, X3, X4) -> APPB_IN_AAA(X1, X2, X3)
   APPB_IN_AAA([], X1, cons(X2, X3)) -> U3_AAA(X1, X2, X3, appB_in_gaa([], X1, X3))
   APPB_IN_AAA([], X1, cons(X2, X3)) -> APPB_IN_GAA([], X1, X3)
   APPB_IN_GAA([], X1, cons(X2, X3)) -> U3_GAA(X1, X2, X3, appB_in_gaa([], X1, X3))
   APPB_IN_GAA([], X1, cons(X2, X3)) -> APPB_IN_GAA([], X1, X3)
   APPB_IN_GAA(.(X1, X2), X3, cons(X1, X4)) -> U4_GAA(X1, X2, X3, X4, appB_in_gaa(X2, X3, X4))
   APPB_IN_GAA(.(X1, X2), X3, cons(X1, X4)) -> APPB_IN_GAA(X2, X3, X4)
   APPB_IN_AAA(.(X1, X2), X3, cons(X1, X4)) -> U4_AAA(X1, X2, X3, X4, appB_in_aaa(X2, X3, X4))
   APPB_IN_AAA(.(X1, X2), X3, cons(X1, X4)) -> APPB_IN_AAA(X2, X3, X4)
   PC_IN_AAAA(X1, X2, cons(X3, X4), cons(X5, X6)) -> U6_AAAA(X1, X2, X3, X4, X5, X6, appcB_in_aaa(X1, X2, cons(X3, X4)))
   U6_AAAA(X1, X2, X3, X4, X5, X6, appcB_out_aaa(X1, X2, cons(X3, X4))) -> U7_AAAA(X1, X2, X3, X4, X5, X6, appB_in_aaa(X5, X6, X7))
   U6_AAAA(X1, X2, X3, X4, X5, X6, appcB_out_aaa(X1, X2, cons(X3, X4))) -> APPB_IN_AAA(X5, X6, X7)
   U6_AAAA(X1, X2, X3, X4, X5, X6, appcB_out_aaa(X1, X2, cons(X3, X4))) -> U8_AAAA(X1, X2, X3, X4, X5, X6, appcB_in_aaa(X5, X6, X7))
   U8_AAAA(X1, X2, X3, X4, X5, X6, appcB_out_aaa(X5, X6, X7)) -> U9_AAAA(X1, X2, X3, X4, X5, X6, pC_in_aaaa(X3, X4, X8, X7))
   U8_AAAA(X1, X2, X3, X4, X5, X6, appcB_out_aaa(X5, X6, X7)) -> PC_IN_AAAA(X3, X4, X8, X7)
   LESSLEAVESD_IN_GG(cons([], X1), cons(X2, X3)) -> U15_GG(X1, X2, X3, appA_in_gga([], X1, X4))
   LESSLEAVESD_IN_GG(cons([], X1), cons(X2, X3)) -> APPA_IN_GGA([], X1, X4)
   LESSLEAVESD_IN_GG(cons([], X1), cons(X2, X3)) -> U16_GG(X1, X2, X3, appcA_in_gga([], X1, X4))
   U16_GG(X1, X2, X3, appcA_out_gga([], X1, X4)) -> U17_GG(X1, X2, X3, pC_in_ggaa(X2, X3, X5, cons(X6, X4)))
   U16_GG(X1, X2, X3, appcA_out_gga([], X1, X4)) -> PC_IN_GGAA(X2, X3, X5, cons(X6, X4))
   PC_IN_GGAA(X1, X2, X3, X4) -> U5_GGAA(X1, X2, X3, X4, appB_in_gga(X1, X2, X3))
   PC_IN_GGAA(X1, X2, X3, X4) -> APPB_IN_GGA(X1, X2, X3)
   APPB_IN_GGA([], X1, cons(X2, X3)) -> U3_GGA(X1, X2, X3, appB_in_gga([], X1, X3))
   APPB_IN_GGA([], X1, cons(X2, X3)) -> APPB_IN_GGA([], X1, X3)
   APPB_IN_GGA(.(X1, X2), X3, cons(X1, X4)) -> U4_GGA(X1, X2, X3, X4, appB_in_gga(X2, X3, X4))
   APPB_IN_GGA(.(X1, X2), X3, cons(X1, X4)) -> APPB_IN_GGA(X2, X3, X4)
   PC_IN_GGAA(X1, X2, cons(X3, X4), cons(X5, X6)) -> U6_GGAA(X1, X2, X3, X4, X5, X6, appcB_in_gga(X1, X2, cons(X3, X4)))
   U6_GGAA(X1, X2, X3, X4, X5, X6, appcB_out_gga(X1, X2, cons(X3, X4))) -> U7_GGAA(X1, X2, X3, X4, X5, X6, appB_in_aaa(X5, X6, X7))
   U6_GGAA(X1, X2, X3, X4, X5, X6, appcB_out_gga(X1, X2, cons(X3, X4))) -> APPB_IN_AAA(X5, X6, X7)
   U6_GGAA(X1, X2, X3, X4, X5, X6, appcB_out_gga(X1, X2, cons(X3, X4))) -> U8_GGAA(X1, X2, X3, X4, X5, X6, appcB_in_aaa(X5, X6, X7))
   U8_GGAA(X1, X2, X3, X4, X5, X6, appcB_out_aaa(X5, X6, X7)) -> U9_GGAA(X1, X2, X3, X4, X5, X6, pC_in_aaaa(X3, X4, X8, X7))
   U8_GGAA(X1, X2, X3, X4, X5, X6, appcB_out_aaa(X5, X6, X7)) -> PC_IN_AAAA(X3, X4, X8, X7)
   LESSLEAVESD_IN_GG(cons(.(X1, X2), X3), cons(X4, X5)) -> U18_GG(X1, X2, X3, X4, X5, appA_in_gga(X2, X3, X6))
   LESSLEAVESD_IN_GG(cons(.(X1, X2), X3), cons(X4, X5)) -> APPA_IN_GGA(X2, X3, X6)
   LESSLEAVESD_IN_GG(cons(.(X1, X2), X3), cons(X4, X5)) -> U19_GG(X1, X2, X3, X4, X5, appcA_in_gga(X2, X3, X6))
   U19_GG(X1, X2, X3, X4, X5, appcA_out_gga(X2, X3, X6)) -> U20_GG(X1, X2, X3, X4, X5, pC_in_ggaa(X4, X5, X7, cons(X1, X6)))
   U19_GG(X1, X2, X3, X4, X5, appcA_out_gga(X2, X3, X6)) -> PC_IN_GGAA(X4, X5, X7, cons(X1, X6))

The TRS R consists of the following rules:

   appcA_in_gga(nil, X1, X1) -> appcA_out_gga(nil, X1, X1)
   appcA_in_gga([], X1, cons(X2, X3)) -> U22_gga(X1, X2, X3, appcA_in_gga([], X1, X3))
   appcA_in_gga(.(X1, X2), X3, cons(X1, X4)) -> U23_gga(X1, X2, X3, X4, appcA_in_gga(X2, X3, X4))
   U23_gga(X1, X2, X3, X4, appcA_out_gga(X2, X3, X4)) -> appcA_out_gga(.(X1, X2), X3, cons(X1, X4))
   U22_gga(X1, X2, X3, appcA_out_gga([], X1, X3)) -> appcA_out_gga([], X1, cons(X2, X3))
   appcB_in_aaa(nil, X1, X1) -> appcB_out_aaa(nil, X1, X1)
   appcB_in_aaa([], X1, cons(X2, X3)) -> U24_aaa(X1, X2, X3, appcB_in_gaa([], X1, X3))
   appcB_in_gaa(nil, X1, X1) -> appcB_out_gaa(nil, X1, X1)
   appcB_in_gaa([], X1, cons(X2, X3)) -> U24_gaa(X1, X2, X3, appcB_in_gaa([], X1, X3))
   appcB_in_gaa(.(X1, X2), X3, cons(X1, X4)) -> U25_gaa(X1, X2, X3, X4, appcB_in_gaa(X2, X3, X4))
   U25_gaa(X1, X2, X3, X4, appcB_out_gaa(X2, X3, X4)) -> appcB_out_gaa(.(X1, X2), X3, cons(X1, X4))
   U24_gaa(X1, X2, X3, appcB_out_gaa([], X1, X3)) -> appcB_out_gaa([], X1, cons(X2, X3))
   U24_aaa(X1, X2, X3, appcB_out_gaa([], X1, X3)) -> appcB_out_aaa([], X1, cons(X2, X3))
   appcB_in_aaa(.(X1, X2), X3, cons(X1, X4)) -> U25_aaa(X1, X2, X3, X4, appcB_in_aaa(X2, X3, X4))
   U25_aaa(X1, X2, X3, X4, appcB_out_aaa(X2, X3, X4)) -> appcB_out_aaa(.(X1, X2), X3, cons(X1, X4))
   appcB_in_gga(nil, X1, X1) -> appcB_out_gga(nil, X1, X1)
   appcB_in_gga([], X1, cons(X2, X3)) -> U24_gga(X1, X2, X3, appcB_in_gga([], X1, X3))
   appcB_in_gga(.(X1, X2), X3, cons(X1, X4)) -> U25_gga(X1, X2, X3, X4, appcB_in_gga(X2, X3, X4))
   U25_gga(X1, X2, X3, X4, appcB_out_gga(X2, X3, X4)) -> appcB_out_gga(.(X1, X2), X3, cons(X1, X4))
   U24_gga(X1, X2, X3, appcB_out_gga([], X1, X3)) -> appcB_out_gga([], X1, cons(X2, X3))

The argument filtering Pi contains the following mapping:
cons(x1, x2)  =  cons(x1, x2)

nil  =  nil

appA_in_gga(x1, x2, x3)  =  appA_in_gga(x1, x2)

[]  =  []

.(x1, x2)  =  .(x1, x2)

appcA_in_gga(x1, x2, x3)  =  appcA_in_gga(x1, x2)

appcA_out_gga(x1, x2, x3)  =  appcA_out_gga(x1, x2)

U22_gga(x1, x2, x3, x4)  =  U22_gga(x1, x4)

U23_gga(x1, x2, x3, x4, x5)  =  U23_gga(x1, x2, x3, x5)

pC_in_aaaa(x1, x2, x3, x4)  =  pC_in_aaaa

appB_in_aaa(x1, x2, x3)  =  appB_in_aaa

appB_in_gaa(x1, x2, x3)  =  appB_in_gaa(x1)

appcB_in_aaa(x1, x2, x3)  =  appcB_in_aaa

appcB_out_aaa(x1, x2, x3)  =  appcB_out_aaa

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

appcB_in_gaa(x1, x2, x3)  =  appcB_in_gaa(x1)

appcB_out_gaa(x1, x2, x3)  =  appcB_out_gaa(x1)

U24_gaa(x1, x2, x3, x4)  =  U24_gaa(x4)

U25_gaa(x1, x2, x3, x4, x5)  =  U25_gaa(x1, x2, x5)

U25_aaa(x1, x2, x3, x4, x5)  =  U25_aaa(x5)

pC_in_ggaa(x1, x2, x3, x4)  =  pC_in_ggaa(x1, x2)

appB_in_gga(x1, x2, x3)  =  appB_in_gga(x1, x2)

appcB_in_gga(x1, x2, x3)  =  appcB_in_gga(x1, x2)

appcB_out_gga(x1, x2, x3)  =  appcB_out_gga(x1, x2)

U24_gga(x1, x2, x3, x4)  =  U24_gga(x1, x4)

U25_gga(x1, x2, x3, x4, x5)  =  U25_gga(x1, x2, x3, x5)

LESSLEAVESD_IN_GG(x1, x2)  =  LESSLEAVESD_IN_GG(x1, x2)

U10_GG(x1, x2, x3, x4)  =  U10_GG(x1, x2, x3, x4)

APPA_IN_GGA(x1, x2, x3)  =  APPA_IN_GGA(x1, x2)

U1_GGA(x1, x2, x3, x4)  =  U1_GGA(x1, x4)

U2_GGA(x1, x2, x3, x4, x5)  =  U2_GGA(x1, x2, x3, x5)

U11_GG(x1, x2, x3, x4, x5)  =  U11_GG(x1, x2, x3, x4, x5)

U12_GG(x1, x2, x3, x4, x5)  =  U12_GG(x1, x2, x3, x4, x5)

U13_GG(x1, x2, x3, x4, x5, x6, x7)  =  U13_GG(x1, x2, x3, x4, x7)

U14_GG(x1, x2, x3, x4, x5)  =  U14_GG(x1, x2, x3, x4, x5)

PC_IN_AAAA(x1, x2, x3, x4)  =  PC_IN_AAAA

U5_AAAA(x1, x2, x3, x4, x5)  =  U5_AAAA(x5)

APPB_IN_AAA(x1, x2, x3)  =  APPB_IN_AAA

U3_AAA(x1, x2, x3, x4)  =  U3_AAA(x4)

APPB_IN_GAA(x1, x2, x3)  =  APPB_IN_GAA(x1)

U3_GAA(x1, x2, x3, x4)  =  U3_GAA(x4)

U4_GAA(x1, x2, x3, x4, x5)  =  U4_GAA(x1, x2, x5)

U4_AAA(x1, x2, x3, x4, x5)  =  U4_AAA(x5)

U6_AAAA(x1, x2, x3, x4, x5, x6, x7)  =  U6_AAAA(x7)

U7_AAAA(x1, x2, x3, x4, x5, x6, x7)  =  U7_AAAA(x7)

U8_AAAA(x1, x2, x3, x4, x5, x6, x7)  =  U8_AAAA(x7)

U9_AAAA(x1, x2, x3, x4, x5, x6, x7)  =  U9_AAAA(x7)

U15_GG(x1, x2, x3, x4)  =  U15_GG(x1, x2, x3, x4)

U16_GG(x1, x2, x3, x4)  =  U16_GG(x1, x2, x3, x4)

U17_GG(x1, x2, x3, x4)  =  U17_GG(x1, x2, x3, x4)

PC_IN_GGAA(x1, x2, x3, x4)  =  PC_IN_GGAA(x1, x2)

U5_GGAA(x1, x2, x3, x4, x5)  =  U5_GGAA(x1, x2, x5)

APPB_IN_GGA(x1, x2, x3)  =  APPB_IN_GGA(x1, x2)

U3_GGA(x1, x2, x3, x4)  =  U3_GGA(x1, x4)

U4_GGA(x1, x2, x3, x4, x5)  =  U4_GGA(x1, x2, x3, x5)

U6_GGAA(x1, x2, x3, x4, x5, x6, x7)  =  U6_GGAA(x1, x2, x7)

U7_GGAA(x1, x2, x3, x4, x5, x6, x7)  =  U7_GGAA(x1, x2, x7)

U8_GGAA(x1, x2, x3, x4, x5, x6, x7)  =  U8_GGAA(x1, x2, x7)

U9_GGAA(x1, x2, x3, x4, x5, x6, x7)  =  U9_GGAA(x1, x2, x7)

U18_GG(x1, x2, x3, x4, x5, x6)  =  U18_GG(x1, x2, x3, x4, x5, x6)

U19_GG(x1, x2, x3, x4, x5, x6)  =  U19_GG(x1, x2, x3, x4, x5, x6)

U20_GG(x1, x2, x3, x4, x5, x6)  =  U20_GG(x1, x2, x3, x4, x5, x6)


We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(151)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   LESSLEAVESD_IN_GG(cons(nil, X1), cons(X2, X3)) -> U10_GG(X1, X2, X3, appA_in_gga(X2, X3, X4))
   LESSLEAVESD_IN_GG(cons(nil, X1), cons(X2, X3)) -> APPA_IN_GGA(X2, X3, X4)
   APPA_IN_GGA([], X1, cons(X2, X3)) -> U1_GGA(X1, X2, X3, appA_in_gga([], X1, X3))
   APPA_IN_GGA([], X1, cons(X2, X3)) -> APPA_IN_GGA([], X1, X3)
   APPA_IN_GGA(.(X1, X2), X3, cons(X1, X4)) -> U2_GGA(X1, X2, X3, X4, appA_in_gga(X2, X3, X4))
   APPA_IN_GGA(.(X1, X2), X3, cons(X1, X4)) -> APPA_IN_GGA(X2, X3, X4)
   LESSLEAVESD_IN_GG(cons(nil, cons(X1, X2)), cons(X3, X4)) -> U11_GG(X1, X2, X3, X4, appcA_in_gga(X3, X4, cons(X5, X6)))
   U11_GG(X1, X2, X3, X4, appcA_out_gga(X3, X4, cons(X5, X6))) -> U12_GG(X1, X2, X3, X4, appA_in_gga(X1, X2, X7))
   U11_GG(X1, X2, X3, X4, appcA_out_gga(X3, X4, cons(X5, X6))) -> APPA_IN_GGA(X1, X2, X7)
   U11_GG(X1, X2, X3, X4, appcA_out_gga(X3, X4, cons(X5, X6))) -> U13_GG(X1, X2, X3, X4, X5, X6, appcA_in_gga(X1, X2, X7))
   U13_GG(X1, X2, X3, X4, X5, X6, appcA_out_gga(X1, X2, X7)) -> U14_GG(X1, X2, X3, X4, pC_in_aaaa(X5, X6, X8, X7))
   U13_GG(X1, X2, X3, X4, X5, X6, appcA_out_gga(X1, X2, X7)) -> PC_IN_AAAA(X5, X6, X8, X7)
   PC_IN_AAAA(X1, X2, X3, X4) -> U5_AAAA(X1, X2, X3, X4, appB_in_aaa(X1, X2, X3))
   PC_IN_AAAA(X1, X2, X3, X4) -> APPB_IN_AAA(X1, X2, X3)
   APPB_IN_AAA([], X1, cons(X2, X3)) -> U3_AAA(X1, X2, X3, appB_in_gaa([], X1, X3))
   APPB_IN_AAA([], X1, cons(X2, X3)) -> APPB_IN_GAA([], X1, X3)
   APPB_IN_GAA([], X1, cons(X2, X3)) -> U3_GAA(X1, X2, X3, appB_in_gaa([], X1, X3))
   APPB_IN_GAA([], X1, cons(X2, X3)) -> APPB_IN_GAA([], X1, X3)
   APPB_IN_GAA(.(X1, X2), X3, cons(X1, X4)) -> U4_GAA(X1, X2, X3, X4, appB_in_gaa(X2, X3, X4))
   APPB_IN_GAA(.(X1, X2), X3, cons(X1, X4)) -> APPB_IN_GAA(X2, X3, X4)
   APPB_IN_AAA(.(X1, X2), X3, cons(X1, X4)) -> U4_AAA(X1, X2, X3, X4, appB_in_aaa(X2, X3, X4))
   APPB_IN_AAA(.(X1, X2), X3, cons(X1, X4)) -> APPB_IN_AAA(X2, X3, X4)
   PC_IN_AAAA(X1, X2, cons(X3, X4), cons(X5, X6)) -> U6_AAAA(X1, X2, X3, X4, X5, X6, appcB_in_aaa(X1, X2, cons(X3, X4)))
   U6_AAAA(X1, X2, X3, X4, X5, X6, appcB_out_aaa(X1, X2, cons(X3, X4))) -> U7_AAAA(X1, X2, X3, X4, X5, X6, appB_in_aaa(X5, X6, X7))
   U6_AAAA(X1, X2, X3, X4, X5, X6, appcB_out_aaa(X1, X2, cons(X3, X4))) -> APPB_IN_AAA(X5, X6, X7)
   U6_AAAA(X1, X2, X3, X4, X5, X6, appcB_out_aaa(X1, X2, cons(X3, X4))) -> U8_AAAA(X1, X2, X3, X4, X5, X6, appcB_in_aaa(X5, X6, X7))
   U8_AAAA(X1, X2, X3, X4, X5, X6, appcB_out_aaa(X5, X6, X7)) -> U9_AAAA(X1, X2, X3, X4, X5, X6, pC_in_aaaa(X3, X4, X8, X7))
   U8_AAAA(X1, X2, X3, X4, X5, X6, appcB_out_aaa(X5, X6, X7)) -> PC_IN_AAAA(X3, X4, X8, X7)
   LESSLEAVESD_IN_GG(cons([], X1), cons(X2, X3)) -> U15_GG(X1, X2, X3, appA_in_gga([], X1, X4))
   LESSLEAVESD_IN_GG(cons([], X1), cons(X2, X3)) -> APPA_IN_GGA([], X1, X4)
   LESSLEAVESD_IN_GG(cons([], X1), cons(X2, X3)) -> U16_GG(X1, X2, X3, appcA_in_gga([], X1, X4))
   U16_GG(X1, X2, X3, appcA_out_gga([], X1, X4)) -> U17_GG(X1, X2, X3, pC_in_ggaa(X2, X3, X5, cons(X6, X4)))
   U16_GG(X1, X2, X3, appcA_out_gga([], X1, X4)) -> PC_IN_GGAA(X2, X3, X5, cons(X6, X4))
   PC_IN_GGAA(X1, X2, X3, X4) -> U5_GGAA(X1, X2, X3, X4, appB_in_gga(X1, X2, X3))
   PC_IN_GGAA(X1, X2, X3, X4) -> APPB_IN_GGA(X1, X2, X3)
   APPB_IN_GGA([], X1, cons(X2, X3)) -> U3_GGA(X1, X2, X3, appB_in_gga([], X1, X3))
   APPB_IN_GGA([], X1, cons(X2, X3)) -> APPB_IN_GGA([], X1, X3)
   APPB_IN_GGA(.(X1, X2), X3, cons(X1, X4)) -> U4_GGA(X1, X2, X3, X4, appB_in_gga(X2, X3, X4))
   APPB_IN_GGA(.(X1, X2), X3, cons(X1, X4)) -> APPB_IN_GGA(X2, X3, X4)
   PC_IN_GGAA(X1, X2, cons(X3, X4), cons(X5, X6)) -> U6_GGAA(X1, X2, X3, X4, X5, X6, appcB_in_gga(X1, X2, cons(X3, X4)))
   U6_GGAA(X1, X2, X3, X4, X5, X6, appcB_out_gga(X1, X2, cons(X3, X4))) -> U7_GGAA(X1, X2, X3, X4, X5, X6, appB_in_aaa(X5, X6, X7))
   U6_GGAA(X1, X2, X3, X4, X5, X6, appcB_out_gga(X1, X2, cons(X3, X4))) -> APPB_IN_AAA(X5, X6, X7)
   U6_GGAA(X1, X2, X3, X4, X5, X6, appcB_out_gga(X1, X2, cons(X3, X4))) -> U8_GGAA(X1, X2, X3, X4, X5, X6, appcB_in_aaa(X5, X6, X7))
   U8_GGAA(X1, X2, X3, X4, X5, X6, appcB_out_aaa(X5, X6, X7)) -> U9_GGAA(X1, X2, X3, X4, X5, X6, pC_in_aaaa(X3, X4, X8, X7))
   U8_GGAA(X1, X2, X3, X4, X5, X6, appcB_out_aaa(X5, X6, X7)) -> PC_IN_AAAA(X3, X4, X8, X7)
   LESSLEAVESD_IN_GG(cons(.(X1, X2), X3), cons(X4, X5)) -> U18_GG(X1, X2, X3, X4, X5, appA_in_gga(X2, X3, X6))
   LESSLEAVESD_IN_GG(cons(.(X1, X2), X3), cons(X4, X5)) -> APPA_IN_GGA(X2, X3, X6)
   LESSLEAVESD_IN_GG(cons(.(X1, X2), X3), cons(X4, X5)) -> U19_GG(X1, X2, X3, X4, X5, appcA_in_gga(X2, X3, X6))
   U19_GG(X1, X2, X3, X4, X5, appcA_out_gga(X2, X3, X6)) -> U20_GG(X1, X2, X3, X4, X5, pC_in_ggaa(X4, X5, X7, cons(X1, X6)))
   U19_GG(X1, X2, X3, X4, X5, appcA_out_gga(X2, X3, X6)) -> PC_IN_GGAA(X4, X5, X7, cons(X1, X6))

The TRS R consists of the following rules:

   appcA_in_gga(nil, X1, X1) -> appcA_out_gga(nil, X1, X1)
   appcA_in_gga([], X1, cons(X2, X3)) -> U22_gga(X1, X2, X3, appcA_in_gga([], X1, X3))
   appcA_in_gga(.(X1, X2), X3, cons(X1, X4)) -> U23_gga(X1, X2, X3, X4, appcA_in_gga(X2, X3, X4))
   U23_gga(X1, X2, X3, X4, appcA_out_gga(X2, X3, X4)) -> appcA_out_gga(.(X1, X2), X3, cons(X1, X4))
   U22_gga(X1, X2, X3, appcA_out_gga([], X1, X3)) -> appcA_out_gga([], X1, cons(X2, X3))
   appcB_in_aaa(nil, X1, X1) -> appcB_out_aaa(nil, X1, X1)
   appcB_in_aaa([], X1, cons(X2, X3)) -> U24_aaa(X1, X2, X3, appcB_in_gaa([], X1, X3))
   appcB_in_gaa(nil, X1, X1) -> appcB_out_gaa(nil, X1, X1)
   appcB_in_gaa([], X1, cons(X2, X3)) -> U24_gaa(X1, X2, X3, appcB_in_gaa([], X1, X3))
   appcB_in_gaa(.(X1, X2), X3, cons(X1, X4)) -> U25_gaa(X1, X2, X3, X4, appcB_in_gaa(X2, X3, X4))
   U25_gaa(X1, X2, X3, X4, appcB_out_gaa(X2, X3, X4)) -> appcB_out_gaa(.(X1, X2), X3, cons(X1, X4))
   U24_gaa(X1, X2, X3, appcB_out_gaa([], X1, X3)) -> appcB_out_gaa([], X1, cons(X2, X3))
   U24_aaa(X1, X2, X3, appcB_out_gaa([], X1, X3)) -> appcB_out_aaa([], X1, cons(X2, X3))
   appcB_in_aaa(.(X1, X2), X3, cons(X1, X4)) -> U25_aaa(X1, X2, X3, X4, appcB_in_aaa(X2, X3, X4))
   U25_aaa(X1, X2, X3, X4, appcB_out_aaa(X2, X3, X4)) -> appcB_out_aaa(.(X1, X2), X3, cons(X1, X4))
   appcB_in_gga(nil, X1, X1) -> appcB_out_gga(nil, X1, X1)
   appcB_in_gga([], X1, cons(X2, X3)) -> U24_gga(X1, X2, X3, appcB_in_gga([], X1, X3))
   appcB_in_gga(.(X1, X2), X3, cons(X1, X4)) -> U25_gga(X1, X2, X3, X4, appcB_in_gga(X2, X3, X4))
   U25_gga(X1, X2, X3, X4, appcB_out_gga(X2, X3, X4)) -> appcB_out_gga(.(X1, X2), X3, cons(X1, X4))
   U24_gga(X1, X2, X3, appcB_out_gga([], X1, X3)) -> appcB_out_gga([], X1, cons(X2, X3))

The argument filtering Pi contains the following mapping:
cons(x1, x2)  =  cons(x1, x2)

nil  =  nil

appA_in_gga(x1, x2, x3)  =  appA_in_gga(x1, x2)

[]  =  []

.(x1, x2)  =  .(x1, x2)

appcA_in_gga(x1, x2, x3)  =  appcA_in_gga(x1, x2)

appcA_out_gga(x1, x2, x3)  =  appcA_out_gga(x1, x2)

U22_gga(x1, x2, x3, x4)  =  U22_gga(x1, x4)

U23_gga(x1, x2, x3, x4, x5)  =  U23_gga(x1, x2, x3, x5)

pC_in_aaaa(x1, x2, x3, x4)  =  pC_in_aaaa

appB_in_aaa(x1, x2, x3)  =  appB_in_aaa

appB_in_gaa(x1, x2, x3)  =  appB_in_gaa(x1)

appcB_in_aaa(x1, x2, x3)  =  appcB_in_aaa

appcB_out_aaa(x1, x2, x3)  =  appcB_out_aaa

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

appcB_in_gaa(x1, x2, x3)  =  appcB_in_gaa(x1)

appcB_out_gaa(x1, x2, x3)  =  appcB_out_gaa(x1)

U24_gaa(x1, x2, x3, x4)  =  U24_gaa(x4)

U25_gaa(x1, x2, x3, x4, x5)  =  U25_gaa(x1, x2, x5)

U25_aaa(x1, x2, x3, x4, x5)  =  U25_aaa(x5)

pC_in_ggaa(x1, x2, x3, x4)  =  pC_in_ggaa(x1, x2)

appB_in_gga(x1, x2, x3)  =  appB_in_gga(x1, x2)

appcB_in_gga(x1, x2, x3)  =  appcB_in_gga(x1, x2)

appcB_out_gga(x1, x2, x3)  =  appcB_out_gga(x1, x2)

U24_gga(x1, x2, x3, x4)  =  U24_gga(x1, x4)

U25_gga(x1, x2, x3, x4, x5)  =  U25_gga(x1, x2, x3, x5)

LESSLEAVESD_IN_GG(x1, x2)  =  LESSLEAVESD_IN_GG(x1, x2)

U10_GG(x1, x2, x3, x4)  =  U10_GG(x1, x2, x3, x4)

APPA_IN_GGA(x1, x2, x3)  =  APPA_IN_GGA(x1, x2)

U1_GGA(x1, x2, x3, x4)  =  U1_GGA(x1, x4)

U2_GGA(x1, x2, x3, x4, x5)  =  U2_GGA(x1, x2, x3, x5)

U11_GG(x1, x2, x3, x4, x5)  =  U11_GG(x1, x2, x3, x4, x5)

U12_GG(x1, x2, x3, x4, x5)  =  U12_GG(x1, x2, x3, x4, x5)

U13_GG(x1, x2, x3, x4, x5, x6, x7)  =  U13_GG(x1, x2, x3, x4, x7)

U14_GG(x1, x2, x3, x4, x5)  =  U14_GG(x1, x2, x3, x4, x5)

PC_IN_AAAA(x1, x2, x3, x4)  =  PC_IN_AAAA

U5_AAAA(x1, x2, x3, x4, x5)  =  U5_AAAA(x5)

APPB_IN_AAA(x1, x2, x3)  =  APPB_IN_AAA

U3_AAA(x1, x2, x3, x4)  =  U3_AAA(x4)

APPB_IN_GAA(x1, x2, x3)  =  APPB_IN_GAA(x1)

U3_GAA(x1, x2, x3, x4)  =  U3_GAA(x4)

U4_GAA(x1, x2, x3, x4, x5)  =  U4_GAA(x1, x2, x5)

U4_AAA(x1, x2, x3, x4, x5)  =  U4_AAA(x5)

U6_AAAA(x1, x2, x3, x4, x5, x6, x7)  =  U6_AAAA(x7)

U7_AAAA(x1, x2, x3, x4, x5, x6, x7)  =  U7_AAAA(x7)

U8_AAAA(x1, x2, x3, x4, x5, x6, x7)  =  U8_AAAA(x7)

U9_AAAA(x1, x2, x3, x4, x5, x6, x7)  =  U9_AAAA(x7)

U15_GG(x1, x2, x3, x4)  =  U15_GG(x1, x2, x3, x4)

U16_GG(x1, x2, x3, x4)  =  U16_GG(x1, x2, x3, x4)

U17_GG(x1, x2, x3, x4)  =  U17_GG(x1, x2, x3, x4)

PC_IN_GGAA(x1, x2, x3, x4)  =  PC_IN_GGAA(x1, x2)

U5_GGAA(x1, x2, x3, x4, x5)  =  U5_GGAA(x1, x2, x5)

APPB_IN_GGA(x1, x2, x3)  =  APPB_IN_GGA(x1, x2)

U3_GGA(x1, x2, x3, x4)  =  U3_GGA(x1, x4)

U4_GGA(x1, x2, x3, x4, x5)  =  U4_GGA(x1, x2, x3, x5)

U6_GGAA(x1, x2, x3, x4, x5, x6, x7)  =  U6_GGAA(x1, x2, x7)

U7_GGAA(x1, x2, x3, x4, x5, x6, x7)  =  U7_GGAA(x1, x2, x7)

U8_GGAA(x1, x2, x3, x4, x5, x6, x7)  =  U8_GGAA(x1, x2, x7)

U9_GGAA(x1, x2, x3, x4, x5, x6, x7)  =  U9_GGAA(x1, x2, x7)

U18_GG(x1, x2, x3, x4, x5, x6)  =  U18_GG(x1, x2, x3, x4, x5, x6)

U19_GG(x1, x2, x3, x4, x5, x6)  =  U19_GG(x1, x2, x3, x4, x5, x6)

U20_GG(x1, x2, x3, x4, x5, x6)  =  U20_GG(x1, x2, x3, x4, x5, x6)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(152) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 8 SCCs with 40 less nodes.
----------------------------------------

(153)
Complex Obligation (AND)

----------------------------------------

(154)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPB_IN_GGA([], X1, cons(X2, X3)) -> APPB_IN_GGA([], X1, X3)

The TRS R consists of the following rules:

   appcA_in_gga(nil, X1, X1) -> appcA_out_gga(nil, X1, X1)
   appcA_in_gga([], X1, cons(X2, X3)) -> U22_gga(X1, X2, X3, appcA_in_gga([], X1, X3))
   appcA_in_gga(.(X1, X2), X3, cons(X1, X4)) -> U23_gga(X1, X2, X3, X4, appcA_in_gga(X2, X3, X4))
   U23_gga(X1, X2, X3, X4, appcA_out_gga(X2, X3, X4)) -> appcA_out_gga(.(X1, X2), X3, cons(X1, X4))
   U22_gga(X1, X2, X3, appcA_out_gga([], X1, X3)) -> appcA_out_gga([], X1, cons(X2, X3))
   appcB_in_aaa(nil, X1, X1) -> appcB_out_aaa(nil, X1, X1)
   appcB_in_aaa([], X1, cons(X2, X3)) -> U24_aaa(X1, X2, X3, appcB_in_gaa([], X1, X3))
   appcB_in_gaa(nil, X1, X1) -> appcB_out_gaa(nil, X1, X1)
   appcB_in_gaa([], X1, cons(X2, X3)) -> U24_gaa(X1, X2, X3, appcB_in_gaa([], X1, X3))
   appcB_in_gaa(.(X1, X2), X3, cons(X1, X4)) -> U25_gaa(X1, X2, X3, X4, appcB_in_gaa(X2, X3, X4))
   U25_gaa(X1, X2, X3, X4, appcB_out_gaa(X2, X3, X4)) -> appcB_out_gaa(.(X1, X2), X3, cons(X1, X4))
   U24_gaa(X1, X2, X3, appcB_out_gaa([], X1, X3)) -> appcB_out_gaa([], X1, cons(X2, X3))
   U24_aaa(X1, X2, X3, appcB_out_gaa([], X1, X3)) -> appcB_out_aaa([], X1, cons(X2, X3))
   appcB_in_aaa(.(X1, X2), X3, cons(X1, X4)) -> U25_aaa(X1, X2, X3, X4, appcB_in_aaa(X2, X3, X4))
   U25_aaa(X1, X2, X3, X4, appcB_out_aaa(X2, X3, X4)) -> appcB_out_aaa(.(X1, X2), X3, cons(X1, X4))
   appcB_in_gga(nil, X1, X1) -> appcB_out_gga(nil, X1, X1)
   appcB_in_gga([], X1, cons(X2, X3)) -> U24_gga(X1, X2, X3, appcB_in_gga([], X1, X3))
   appcB_in_gga(.(X1, X2), X3, cons(X1, X4)) -> U25_gga(X1, X2, X3, X4, appcB_in_gga(X2, X3, X4))
   U25_gga(X1, X2, X3, X4, appcB_out_gga(X2, X3, X4)) -> appcB_out_gga(.(X1, X2), X3, cons(X1, X4))
   U24_gga(X1, X2, X3, appcB_out_gga([], X1, X3)) -> appcB_out_gga([], X1, cons(X2, X3))

The argument filtering Pi contains the following mapping:
cons(x1, x2)  =  cons(x1, x2)

nil  =  nil

[]  =  []

.(x1, x2)  =  .(x1, x2)

appcA_in_gga(x1, x2, x3)  =  appcA_in_gga(x1, x2)

appcA_out_gga(x1, x2, x3)  =  appcA_out_gga(x1, x2)

U22_gga(x1, x2, x3, x4)  =  U22_gga(x1, x4)

U23_gga(x1, x2, x3, x4, x5)  =  U23_gga(x1, x2, x3, x5)

appcB_in_aaa(x1, x2, x3)  =  appcB_in_aaa

appcB_out_aaa(x1, x2, x3)  =  appcB_out_aaa

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

appcB_in_gaa(x1, x2, x3)  =  appcB_in_gaa(x1)

appcB_out_gaa(x1, x2, x3)  =  appcB_out_gaa(x1)

U24_gaa(x1, x2, x3, x4)  =  U24_gaa(x4)

U25_gaa(x1, x2, x3, x4, x5)  =  U25_gaa(x1, x2, x5)

U25_aaa(x1, x2, x3, x4, x5)  =  U25_aaa(x5)

appcB_in_gga(x1, x2, x3)  =  appcB_in_gga(x1, x2)

appcB_out_gga(x1, x2, x3)  =  appcB_out_gga(x1, x2)

U24_gga(x1, x2, x3, x4)  =  U24_gga(x1, x4)

U25_gga(x1, x2, x3, x4, x5)  =  U25_gga(x1, x2, x3, x5)

APPB_IN_GGA(x1, x2, x3)  =  APPB_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(155) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(156)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPB_IN_GGA([], X1, cons(X2, X3)) -> APPB_IN_GGA([], X1, X3)

R is empty.
The argument filtering Pi contains the following mapping:
cons(x1, x2)  =  cons(x1, x2)

[]  =  []

APPB_IN_GGA(x1, x2, x3)  =  APPB_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(157) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(158)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APPB_IN_GGA([], X1) -> APPB_IN_GGA([], X1)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(159) ATransformationProof (EQUIVALENT)
We have applied the A-Transformation [FROCOS05] to get from an applicative problem to a standard problem. 
----------------------------------------

(160)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   [](X1) -> [](X1)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(161) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = [](X1) evaluates to  t =[](X1)

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from [](X1) to [](X1).




----------------------------------------

(162)
NO

----------------------------------------

(163)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPB_IN_GGA(.(X1, X2), X3, cons(X1, X4)) -> APPB_IN_GGA(X2, X3, X4)

The TRS R consists of the following rules:

   appcA_in_gga(nil, X1, X1) -> appcA_out_gga(nil, X1, X1)
   appcA_in_gga([], X1, cons(X2, X3)) -> U22_gga(X1, X2, X3, appcA_in_gga([], X1, X3))
   appcA_in_gga(.(X1, X2), X3, cons(X1, X4)) -> U23_gga(X1, X2, X3, X4, appcA_in_gga(X2, X3, X4))
   U23_gga(X1, X2, X3, X4, appcA_out_gga(X2, X3, X4)) -> appcA_out_gga(.(X1, X2), X3, cons(X1, X4))
   U22_gga(X1, X2, X3, appcA_out_gga([], X1, X3)) -> appcA_out_gga([], X1, cons(X2, X3))
   appcB_in_aaa(nil, X1, X1) -> appcB_out_aaa(nil, X1, X1)
   appcB_in_aaa([], X1, cons(X2, X3)) -> U24_aaa(X1, X2, X3, appcB_in_gaa([], X1, X3))
   appcB_in_gaa(nil, X1, X1) -> appcB_out_gaa(nil, X1, X1)
   appcB_in_gaa([], X1, cons(X2, X3)) -> U24_gaa(X1, X2, X3, appcB_in_gaa([], X1, X3))
   appcB_in_gaa(.(X1, X2), X3, cons(X1, X4)) -> U25_gaa(X1, X2, X3, X4, appcB_in_gaa(X2, X3, X4))
   U25_gaa(X1, X2, X3, X4, appcB_out_gaa(X2, X3, X4)) -> appcB_out_gaa(.(X1, X2), X3, cons(X1, X4))
   U24_gaa(X1, X2, X3, appcB_out_gaa([], X1, X3)) -> appcB_out_gaa([], X1, cons(X2, X3))
   U24_aaa(X1, X2, X3, appcB_out_gaa([], X1, X3)) -> appcB_out_aaa([], X1, cons(X2, X3))
   appcB_in_aaa(.(X1, X2), X3, cons(X1, X4)) -> U25_aaa(X1, X2, X3, X4, appcB_in_aaa(X2, X3, X4))
   U25_aaa(X1, X2, X3, X4, appcB_out_aaa(X2, X3, X4)) -> appcB_out_aaa(.(X1, X2), X3, cons(X1, X4))
   appcB_in_gga(nil, X1, X1) -> appcB_out_gga(nil, X1, X1)
   appcB_in_gga([], X1, cons(X2, X3)) -> U24_gga(X1, X2, X3, appcB_in_gga([], X1, X3))
   appcB_in_gga(.(X1, X2), X3, cons(X1, X4)) -> U25_gga(X1, X2, X3, X4, appcB_in_gga(X2, X3, X4))
   U25_gga(X1, X2, X3, X4, appcB_out_gga(X2, X3, X4)) -> appcB_out_gga(.(X1, X2), X3, cons(X1, X4))
   U24_gga(X1, X2, X3, appcB_out_gga([], X1, X3)) -> appcB_out_gga([], X1, cons(X2, X3))

The argument filtering Pi contains the following mapping:
cons(x1, x2)  =  cons(x1, x2)

nil  =  nil

[]  =  []

.(x1, x2)  =  .(x1, x2)

appcA_in_gga(x1, x2, x3)  =  appcA_in_gga(x1, x2)

appcA_out_gga(x1, x2, x3)  =  appcA_out_gga(x1, x2)

U22_gga(x1, x2, x3, x4)  =  U22_gga(x1, x4)

U23_gga(x1, x2, x3, x4, x5)  =  U23_gga(x1, x2, x3, x5)

appcB_in_aaa(x1, x2, x3)  =  appcB_in_aaa

appcB_out_aaa(x1, x2, x3)  =  appcB_out_aaa

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

appcB_in_gaa(x1, x2, x3)  =  appcB_in_gaa(x1)

appcB_out_gaa(x1, x2, x3)  =  appcB_out_gaa(x1)

U24_gaa(x1, x2, x3, x4)  =  U24_gaa(x4)

U25_gaa(x1, x2, x3, x4, x5)  =  U25_gaa(x1, x2, x5)

U25_aaa(x1, x2, x3, x4, x5)  =  U25_aaa(x5)

appcB_in_gga(x1, x2, x3)  =  appcB_in_gga(x1, x2)

appcB_out_gga(x1, x2, x3)  =  appcB_out_gga(x1, x2)

U24_gga(x1, x2, x3, x4)  =  U24_gga(x1, x4)

U25_gga(x1, x2, x3, x4, x5)  =  U25_gga(x1, x2, x3, x5)

APPB_IN_GGA(x1, x2, x3)  =  APPB_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(164) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(165)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPB_IN_GGA(.(X1, X2), X3, cons(X1, X4)) -> APPB_IN_GGA(X2, X3, X4)

R is empty.
The argument filtering Pi contains the following mapping:
cons(x1, x2)  =  cons(x1, x2)

.(x1, x2)  =  .(x1, x2)

APPB_IN_GGA(x1, x2, x3)  =  APPB_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(166) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(167)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APPB_IN_GGA(.(X1, X2), X3) -> APPB_IN_GGA(X2, X3)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(168) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*APPB_IN_GGA(.(X1, X2), X3) -> APPB_IN_GGA(X2, X3)
The graph contains the following edges 1 > 1, 2 >= 2


----------------------------------------

(169)
YES

----------------------------------------

(170)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPB_IN_GAA([], X1, cons(X2, X3)) -> APPB_IN_GAA([], X1, X3)

The TRS R consists of the following rules:

   appcA_in_gga(nil, X1, X1) -> appcA_out_gga(nil, X1, X1)
   appcA_in_gga([], X1, cons(X2, X3)) -> U22_gga(X1, X2, X3, appcA_in_gga([], X1, X3))
   appcA_in_gga(.(X1, X2), X3, cons(X1, X4)) -> U23_gga(X1, X2, X3, X4, appcA_in_gga(X2, X3, X4))
   U23_gga(X1, X2, X3, X4, appcA_out_gga(X2, X3, X4)) -> appcA_out_gga(.(X1, X2), X3, cons(X1, X4))
   U22_gga(X1, X2, X3, appcA_out_gga([], X1, X3)) -> appcA_out_gga([], X1, cons(X2, X3))
   appcB_in_aaa(nil, X1, X1) -> appcB_out_aaa(nil, X1, X1)
   appcB_in_aaa([], X1, cons(X2, X3)) -> U24_aaa(X1, X2, X3, appcB_in_gaa([], X1, X3))
   appcB_in_gaa(nil, X1, X1) -> appcB_out_gaa(nil, X1, X1)
   appcB_in_gaa([], X1, cons(X2, X3)) -> U24_gaa(X1, X2, X3, appcB_in_gaa([], X1, X3))
   appcB_in_gaa(.(X1, X2), X3, cons(X1, X4)) -> U25_gaa(X1, X2, X3, X4, appcB_in_gaa(X2, X3, X4))
   U25_gaa(X1, X2, X3, X4, appcB_out_gaa(X2, X3, X4)) -> appcB_out_gaa(.(X1, X2), X3, cons(X1, X4))
   U24_gaa(X1, X2, X3, appcB_out_gaa([], X1, X3)) -> appcB_out_gaa([], X1, cons(X2, X3))
   U24_aaa(X1, X2, X3, appcB_out_gaa([], X1, X3)) -> appcB_out_aaa([], X1, cons(X2, X3))
   appcB_in_aaa(.(X1, X2), X3, cons(X1, X4)) -> U25_aaa(X1, X2, X3, X4, appcB_in_aaa(X2, X3, X4))
   U25_aaa(X1, X2, X3, X4, appcB_out_aaa(X2, X3, X4)) -> appcB_out_aaa(.(X1, X2), X3, cons(X1, X4))
   appcB_in_gga(nil, X1, X1) -> appcB_out_gga(nil, X1, X1)
   appcB_in_gga([], X1, cons(X2, X3)) -> U24_gga(X1, X2, X3, appcB_in_gga([], X1, X3))
   appcB_in_gga(.(X1, X2), X3, cons(X1, X4)) -> U25_gga(X1, X2, X3, X4, appcB_in_gga(X2, X3, X4))
   U25_gga(X1, X2, X3, X4, appcB_out_gga(X2, X3, X4)) -> appcB_out_gga(.(X1, X2), X3, cons(X1, X4))
   U24_gga(X1, X2, X3, appcB_out_gga([], X1, X3)) -> appcB_out_gga([], X1, cons(X2, X3))

The argument filtering Pi contains the following mapping:
cons(x1, x2)  =  cons(x1, x2)

nil  =  nil

[]  =  []

.(x1, x2)  =  .(x1, x2)

appcA_in_gga(x1, x2, x3)  =  appcA_in_gga(x1, x2)

appcA_out_gga(x1, x2, x3)  =  appcA_out_gga(x1, x2)

U22_gga(x1, x2, x3, x4)  =  U22_gga(x1, x4)

U23_gga(x1, x2, x3, x4, x5)  =  U23_gga(x1, x2, x3, x5)

appcB_in_aaa(x1, x2, x3)  =  appcB_in_aaa

appcB_out_aaa(x1, x2, x3)  =  appcB_out_aaa

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

appcB_in_gaa(x1, x2, x3)  =  appcB_in_gaa(x1)

appcB_out_gaa(x1, x2, x3)  =  appcB_out_gaa(x1)

U24_gaa(x1, x2, x3, x4)  =  U24_gaa(x4)

U25_gaa(x1, x2, x3, x4, x5)  =  U25_gaa(x1, x2, x5)

U25_aaa(x1, x2, x3, x4, x5)  =  U25_aaa(x5)

appcB_in_gga(x1, x2, x3)  =  appcB_in_gga(x1, x2)

appcB_out_gga(x1, x2, x3)  =  appcB_out_gga(x1, x2)

U24_gga(x1, x2, x3, x4)  =  U24_gga(x1, x4)

U25_gga(x1, x2, x3, x4, x5)  =  U25_gga(x1, x2, x3, x5)

APPB_IN_GAA(x1, x2, x3)  =  APPB_IN_GAA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(171) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(172)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPB_IN_GAA([], X1, cons(X2, X3)) -> APPB_IN_GAA([], X1, X3)

R is empty.
The argument filtering Pi contains the following mapping:
cons(x1, x2)  =  cons(x1, x2)

[]  =  []

APPB_IN_GAA(x1, x2, x3)  =  APPB_IN_GAA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(173) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(174)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APPB_IN_GAA([]) -> APPB_IN_GAA([])

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(175) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = APPB_IN_GAA([]) evaluates to  t =APPB_IN_GAA([])

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from APPB_IN_GAA([]) to APPB_IN_GAA([]).




----------------------------------------

(176)
NO

----------------------------------------

(177)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPB_IN_GAA(.(X1, X2), X3, cons(X1, X4)) -> APPB_IN_GAA(X2, X3, X4)

The TRS R consists of the following rules:

   appcA_in_gga(nil, X1, X1) -> appcA_out_gga(nil, X1, X1)
   appcA_in_gga([], X1, cons(X2, X3)) -> U22_gga(X1, X2, X3, appcA_in_gga([], X1, X3))
   appcA_in_gga(.(X1, X2), X3, cons(X1, X4)) -> U23_gga(X1, X2, X3, X4, appcA_in_gga(X2, X3, X4))
   U23_gga(X1, X2, X3, X4, appcA_out_gga(X2, X3, X4)) -> appcA_out_gga(.(X1, X2), X3, cons(X1, X4))
   U22_gga(X1, X2, X3, appcA_out_gga([], X1, X3)) -> appcA_out_gga([], X1, cons(X2, X3))
   appcB_in_aaa(nil, X1, X1) -> appcB_out_aaa(nil, X1, X1)
   appcB_in_aaa([], X1, cons(X2, X3)) -> U24_aaa(X1, X2, X3, appcB_in_gaa([], X1, X3))
   appcB_in_gaa(nil, X1, X1) -> appcB_out_gaa(nil, X1, X1)
   appcB_in_gaa([], X1, cons(X2, X3)) -> U24_gaa(X1, X2, X3, appcB_in_gaa([], X1, X3))
   appcB_in_gaa(.(X1, X2), X3, cons(X1, X4)) -> U25_gaa(X1, X2, X3, X4, appcB_in_gaa(X2, X3, X4))
   U25_gaa(X1, X2, X3, X4, appcB_out_gaa(X2, X3, X4)) -> appcB_out_gaa(.(X1, X2), X3, cons(X1, X4))
   U24_gaa(X1, X2, X3, appcB_out_gaa([], X1, X3)) -> appcB_out_gaa([], X1, cons(X2, X3))
   U24_aaa(X1, X2, X3, appcB_out_gaa([], X1, X3)) -> appcB_out_aaa([], X1, cons(X2, X3))
   appcB_in_aaa(.(X1, X2), X3, cons(X1, X4)) -> U25_aaa(X1, X2, X3, X4, appcB_in_aaa(X2, X3, X4))
   U25_aaa(X1, X2, X3, X4, appcB_out_aaa(X2, X3, X4)) -> appcB_out_aaa(.(X1, X2), X3, cons(X1, X4))
   appcB_in_gga(nil, X1, X1) -> appcB_out_gga(nil, X1, X1)
   appcB_in_gga([], X1, cons(X2, X3)) -> U24_gga(X1, X2, X3, appcB_in_gga([], X1, X3))
   appcB_in_gga(.(X1, X2), X3, cons(X1, X4)) -> U25_gga(X1, X2, X3, X4, appcB_in_gga(X2, X3, X4))
   U25_gga(X1, X2, X3, X4, appcB_out_gga(X2, X3, X4)) -> appcB_out_gga(.(X1, X2), X3, cons(X1, X4))
   U24_gga(X1, X2, X3, appcB_out_gga([], X1, X3)) -> appcB_out_gga([], X1, cons(X2, X3))

The argument filtering Pi contains the following mapping:
cons(x1, x2)  =  cons(x1, x2)

nil  =  nil

[]  =  []

.(x1, x2)  =  .(x1, x2)

appcA_in_gga(x1, x2, x3)  =  appcA_in_gga(x1, x2)

appcA_out_gga(x1, x2, x3)  =  appcA_out_gga(x1, x2)

U22_gga(x1, x2, x3, x4)  =  U22_gga(x1, x4)

U23_gga(x1, x2, x3, x4, x5)  =  U23_gga(x1, x2, x3, x5)

appcB_in_aaa(x1, x2, x3)  =  appcB_in_aaa

appcB_out_aaa(x1, x2, x3)  =  appcB_out_aaa

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

appcB_in_gaa(x1, x2, x3)  =  appcB_in_gaa(x1)

appcB_out_gaa(x1, x2, x3)  =  appcB_out_gaa(x1)

U24_gaa(x1, x2, x3, x4)  =  U24_gaa(x4)

U25_gaa(x1, x2, x3, x4, x5)  =  U25_gaa(x1, x2, x5)

U25_aaa(x1, x2, x3, x4, x5)  =  U25_aaa(x5)

appcB_in_gga(x1, x2, x3)  =  appcB_in_gga(x1, x2)

appcB_out_gga(x1, x2, x3)  =  appcB_out_gga(x1, x2)

U24_gga(x1, x2, x3, x4)  =  U24_gga(x1, x4)

U25_gga(x1, x2, x3, x4, x5)  =  U25_gga(x1, x2, x3, x5)

APPB_IN_GAA(x1, x2, x3)  =  APPB_IN_GAA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(178) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(179)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPB_IN_GAA(.(X1, X2), X3, cons(X1, X4)) -> APPB_IN_GAA(X2, X3, X4)

R is empty.
The argument filtering Pi contains the following mapping:
cons(x1, x2)  =  cons(x1, x2)

.(x1, x2)  =  .(x1, x2)

APPB_IN_GAA(x1, x2, x3)  =  APPB_IN_GAA(x1)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(180) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(181)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APPB_IN_GAA(.(X1, X2)) -> APPB_IN_GAA(X2)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(182) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*APPB_IN_GAA(.(X1, X2)) -> APPB_IN_GAA(X2)
The graph contains the following edges 1 > 1


----------------------------------------

(183)
YES

----------------------------------------

(184)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPB_IN_AAA(.(X1, X2), X3, cons(X1, X4)) -> APPB_IN_AAA(X2, X3, X4)

The TRS R consists of the following rules:

   appcA_in_gga(nil, X1, X1) -> appcA_out_gga(nil, X1, X1)
   appcA_in_gga([], X1, cons(X2, X3)) -> U22_gga(X1, X2, X3, appcA_in_gga([], X1, X3))
   appcA_in_gga(.(X1, X2), X3, cons(X1, X4)) -> U23_gga(X1, X2, X3, X4, appcA_in_gga(X2, X3, X4))
   U23_gga(X1, X2, X3, X4, appcA_out_gga(X2, X3, X4)) -> appcA_out_gga(.(X1, X2), X3, cons(X1, X4))
   U22_gga(X1, X2, X3, appcA_out_gga([], X1, X3)) -> appcA_out_gga([], X1, cons(X2, X3))
   appcB_in_aaa(nil, X1, X1) -> appcB_out_aaa(nil, X1, X1)
   appcB_in_aaa([], X1, cons(X2, X3)) -> U24_aaa(X1, X2, X3, appcB_in_gaa([], X1, X3))
   appcB_in_gaa(nil, X1, X1) -> appcB_out_gaa(nil, X1, X1)
   appcB_in_gaa([], X1, cons(X2, X3)) -> U24_gaa(X1, X2, X3, appcB_in_gaa([], X1, X3))
   appcB_in_gaa(.(X1, X2), X3, cons(X1, X4)) -> U25_gaa(X1, X2, X3, X4, appcB_in_gaa(X2, X3, X4))
   U25_gaa(X1, X2, X3, X4, appcB_out_gaa(X2, X3, X4)) -> appcB_out_gaa(.(X1, X2), X3, cons(X1, X4))
   U24_gaa(X1, X2, X3, appcB_out_gaa([], X1, X3)) -> appcB_out_gaa([], X1, cons(X2, X3))
   U24_aaa(X1, X2, X3, appcB_out_gaa([], X1, X3)) -> appcB_out_aaa([], X1, cons(X2, X3))
   appcB_in_aaa(.(X1, X2), X3, cons(X1, X4)) -> U25_aaa(X1, X2, X3, X4, appcB_in_aaa(X2, X3, X4))
   U25_aaa(X1, X2, X3, X4, appcB_out_aaa(X2, X3, X4)) -> appcB_out_aaa(.(X1, X2), X3, cons(X1, X4))
   appcB_in_gga(nil, X1, X1) -> appcB_out_gga(nil, X1, X1)
   appcB_in_gga([], X1, cons(X2, X3)) -> U24_gga(X1, X2, X3, appcB_in_gga([], X1, X3))
   appcB_in_gga(.(X1, X2), X3, cons(X1, X4)) -> U25_gga(X1, X2, X3, X4, appcB_in_gga(X2, X3, X4))
   U25_gga(X1, X2, X3, X4, appcB_out_gga(X2, X3, X4)) -> appcB_out_gga(.(X1, X2), X3, cons(X1, X4))
   U24_gga(X1, X2, X3, appcB_out_gga([], X1, X3)) -> appcB_out_gga([], X1, cons(X2, X3))

The argument filtering Pi contains the following mapping:
cons(x1, x2)  =  cons(x1, x2)

nil  =  nil

[]  =  []

.(x1, x2)  =  .(x1, x2)

appcA_in_gga(x1, x2, x3)  =  appcA_in_gga(x1, x2)

appcA_out_gga(x1, x2, x3)  =  appcA_out_gga(x1, x2)

U22_gga(x1, x2, x3, x4)  =  U22_gga(x1, x4)

U23_gga(x1, x2, x3, x4, x5)  =  U23_gga(x1, x2, x3, x5)

appcB_in_aaa(x1, x2, x3)  =  appcB_in_aaa

appcB_out_aaa(x1, x2, x3)  =  appcB_out_aaa

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

appcB_in_gaa(x1, x2, x3)  =  appcB_in_gaa(x1)

appcB_out_gaa(x1, x2, x3)  =  appcB_out_gaa(x1)

U24_gaa(x1, x2, x3, x4)  =  U24_gaa(x4)

U25_gaa(x1, x2, x3, x4, x5)  =  U25_gaa(x1, x2, x5)

U25_aaa(x1, x2, x3, x4, x5)  =  U25_aaa(x5)

appcB_in_gga(x1, x2, x3)  =  appcB_in_gga(x1, x2)

appcB_out_gga(x1, x2, x3)  =  appcB_out_gga(x1, x2)

U24_gga(x1, x2, x3, x4)  =  U24_gga(x1, x4)

U25_gga(x1, x2, x3, x4, x5)  =  U25_gga(x1, x2, x3, x5)

APPB_IN_AAA(x1, x2, x3)  =  APPB_IN_AAA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(185) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(186)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPB_IN_AAA(.(X1, X2), X3, cons(X1, X4)) -> APPB_IN_AAA(X2, X3, X4)

R is empty.
The argument filtering Pi contains the following mapping:
cons(x1, x2)  =  cons(x1, x2)

.(x1, x2)  =  .(x1, x2)

APPB_IN_AAA(x1, x2, x3)  =  APPB_IN_AAA


We have to consider all (P,R,Pi)-chains
----------------------------------------

(187) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(188)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   APPB_IN_AAA -> APPB_IN_AAA

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(189) NonTerminationLoopProof (COMPLETE)
We used the non-termination processor [FROCOS05] to show that the DP problem is infinite.
Found a loop by semiunifying a rule from P directly.

s = APPB_IN_AAA evaluates to  t =APPB_IN_AAA

Thus s starts an infinite chain as s semiunifies with t with the following substitutions:
* Matcher: [ ]
* Semiunifier: [ ]

--------------------------------------------------------------------------------
Rewriting sequence

The DP semiunifies directly so there is only one rewrite step from APPB_IN_AAA to APPB_IN_AAA.




----------------------------------------

(190)
NO

----------------------------------------

(191)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PC_IN_AAAA(X1, X2, cons(X3, X4), cons(X5, X6)) -> U6_AAAA(X1, X2, X3, X4, X5, X6, appcB_in_aaa(X1, X2, cons(X3, X4)))
   U6_AAAA(X1, X2, X3, X4, X5, X6, appcB_out_aaa(X1, X2, cons(X3, X4))) -> U8_AAAA(X1, X2, X3, X4, X5, X6, appcB_in_aaa(X5, X6, X7))
   U8_AAAA(X1, X2, X3, X4, X5, X6, appcB_out_aaa(X5, X6, X7)) -> PC_IN_AAAA(X3, X4, X8, X7)

The TRS R consists of the following rules:

   appcA_in_gga(nil, X1, X1) -> appcA_out_gga(nil, X1, X1)
   appcA_in_gga([], X1, cons(X2, X3)) -> U22_gga(X1, X2, X3, appcA_in_gga([], X1, X3))
   appcA_in_gga(.(X1, X2), X3, cons(X1, X4)) -> U23_gga(X1, X2, X3, X4, appcA_in_gga(X2, X3, X4))
   U23_gga(X1, X2, X3, X4, appcA_out_gga(X2, X3, X4)) -> appcA_out_gga(.(X1, X2), X3, cons(X1, X4))
   U22_gga(X1, X2, X3, appcA_out_gga([], X1, X3)) -> appcA_out_gga([], X1, cons(X2, X3))
   appcB_in_aaa(nil, X1, X1) -> appcB_out_aaa(nil, X1, X1)
   appcB_in_aaa([], X1, cons(X2, X3)) -> U24_aaa(X1, X2, X3, appcB_in_gaa([], X1, X3))
   appcB_in_gaa(nil, X1, X1) -> appcB_out_gaa(nil, X1, X1)
   appcB_in_gaa([], X1, cons(X2, X3)) -> U24_gaa(X1, X2, X3, appcB_in_gaa([], X1, X3))
   appcB_in_gaa(.(X1, X2), X3, cons(X1, X4)) -> U25_gaa(X1, X2, X3, X4, appcB_in_gaa(X2, X3, X4))
   U25_gaa(X1, X2, X3, X4, appcB_out_gaa(X2, X3, X4)) -> appcB_out_gaa(.(X1, X2), X3, cons(X1, X4))
   U24_gaa(X1, X2, X3, appcB_out_gaa([], X1, X3)) -> appcB_out_gaa([], X1, cons(X2, X3))
   U24_aaa(X1, X2, X3, appcB_out_gaa([], X1, X3)) -> appcB_out_aaa([], X1, cons(X2, X3))
   appcB_in_aaa(.(X1, X2), X3, cons(X1, X4)) -> U25_aaa(X1, X2, X3, X4, appcB_in_aaa(X2, X3, X4))
   U25_aaa(X1, X2, X3, X4, appcB_out_aaa(X2, X3, X4)) -> appcB_out_aaa(.(X1, X2), X3, cons(X1, X4))
   appcB_in_gga(nil, X1, X1) -> appcB_out_gga(nil, X1, X1)
   appcB_in_gga([], X1, cons(X2, X3)) -> U24_gga(X1, X2, X3, appcB_in_gga([], X1, X3))
   appcB_in_gga(.(X1, X2), X3, cons(X1, X4)) -> U25_gga(X1, X2, X3, X4, appcB_in_gga(X2, X3, X4))
   U25_gga(X1, X2, X3, X4, appcB_out_gga(X2, X3, X4)) -> appcB_out_gga(.(X1, X2), X3, cons(X1, X4))
   U24_gga(X1, X2, X3, appcB_out_gga([], X1, X3)) -> appcB_out_gga([], X1, cons(X2, X3))

The argument filtering Pi contains the following mapping:
cons(x1, x2)  =  cons(x1, x2)

nil  =  nil

[]  =  []

.(x1, x2)  =  .(x1, x2)

appcA_in_gga(x1, x2, x3)  =  appcA_in_gga(x1, x2)

appcA_out_gga(x1, x2, x3)  =  appcA_out_gga(x1, x2)

U22_gga(x1, x2, x3, x4)  =  U22_gga(x1, x4)

U23_gga(x1, x2, x3, x4, x5)  =  U23_gga(x1, x2, x3, x5)

appcB_in_aaa(x1, x2, x3)  =  appcB_in_aaa

appcB_out_aaa(x1, x2, x3)  =  appcB_out_aaa

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

appcB_in_gaa(x1, x2, x3)  =  appcB_in_gaa(x1)

appcB_out_gaa(x1, x2, x3)  =  appcB_out_gaa(x1)

U24_gaa(x1, x2, x3, x4)  =  U24_gaa(x4)

U25_gaa(x1, x2, x3, x4, x5)  =  U25_gaa(x1, x2, x5)

U25_aaa(x1, x2, x3, x4, x5)  =  U25_aaa(x5)

appcB_in_gga(x1, x2, x3)  =  appcB_in_gga(x1, x2)

appcB_out_gga(x1, x2, x3)  =  appcB_out_gga(x1, x2)

U24_gga(x1, x2, x3, x4)  =  U24_gga(x1, x4)

U25_gga(x1, x2, x3, x4, x5)  =  U25_gga(x1, x2, x3, x5)

PC_IN_AAAA(x1, x2, x3, x4)  =  PC_IN_AAAA

U6_AAAA(x1, x2, x3, x4, x5, x6, x7)  =  U6_AAAA(x7)

U8_AAAA(x1, x2, x3, x4, x5, x6, x7)  =  U8_AAAA(x7)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(192) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(193)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   PC_IN_AAAA(X1, X2, cons(X3, X4), cons(X5, X6)) -> U6_AAAA(X1, X2, X3, X4, X5, X6, appcB_in_aaa(X1, X2, cons(X3, X4)))
   U6_AAAA(X1, X2, X3, X4, X5, X6, appcB_out_aaa(X1, X2, cons(X3, X4))) -> U8_AAAA(X1, X2, X3, X4, X5, X6, appcB_in_aaa(X5, X6, X7))
   U8_AAAA(X1, X2, X3, X4, X5, X6, appcB_out_aaa(X5, X6, X7)) -> PC_IN_AAAA(X3, X4, X8, X7)

The TRS R consists of the following rules:

   appcB_in_aaa(nil, X1, X1) -> appcB_out_aaa(nil, X1, X1)
   appcB_in_aaa([], X1, cons(X2, X3)) -> U24_aaa(X1, X2, X3, appcB_in_gaa([], X1, X3))
   appcB_in_aaa(.(X1, X2), X3, cons(X1, X4)) -> U25_aaa(X1, X2, X3, X4, appcB_in_aaa(X2, X3, X4))
   U24_aaa(X1, X2, X3, appcB_out_gaa([], X1, X3)) -> appcB_out_aaa([], X1, cons(X2, X3))
   U25_aaa(X1, X2, X3, X4, appcB_out_aaa(X2, X3, X4)) -> appcB_out_aaa(.(X1, X2), X3, cons(X1, X4))
   appcB_in_gaa([], X1, cons(X2, X3)) -> U24_gaa(X1, X2, X3, appcB_in_gaa([], X1, X3))
   U24_gaa(X1, X2, X3, appcB_out_gaa([], X1, X3)) -> appcB_out_gaa([], X1, cons(X2, X3))

The argument filtering Pi contains the following mapping:
cons(x1, x2)  =  cons(x1, x2)

nil  =  nil

[]  =  []

.(x1, x2)  =  .(x1, x2)

appcB_in_aaa(x1, x2, x3)  =  appcB_in_aaa

appcB_out_aaa(x1, x2, x3)  =  appcB_out_aaa

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

appcB_in_gaa(x1, x2, x3)  =  appcB_in_gaa(x1)

appcB_out_gaa(x1, x2, x3)  =  appcB_out_gaa(x1)

U24_gaa(x1, x2, x3, x4)  =  U24_gaa(x4)

U25_aaa(x1, x2, x3, x4, x5)  =  U25_aaa(x5)

PC_IN_AAAA(x1, x2, x3, x4)  =  PC_IN_AAAA

U6_AAAA(x1, x2, x3, x4, x5, x6, x7)  =  U6_AAAA(x7)

U8_AAAA(x1, x2, x3, x4, x5, x6, x7)  =  U8_AAAA(x7)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(194) PiDPToQDPProof (SOUND)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(195)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PC_IN_AAAA -> U6_AAAA(appcB_in_aaa)
   U6_AAAA(appcB_out_aaa) -> U8_AAAA(appcB_in_aaa)
   U8_AAAA(appcB_out_aaa) -> PC_IN_AAAA

The TRS R consists of the following rules:

   appcB_in_aaa -> appcB_out_aaa
   appcB_in_aaa -> U24_aaa(appcB_in_gaa([]))
   appcB_in_aaa -> U25_aaa(appcB_in_aaa)
   U24_aaa(appcB_out_gaa([])) -> appcB_out_aaa
   U25_aaa(appcB_out_aaa) -> appcB_out_aaa
   appcB_in_gaa([]) -> U24_gaa(appcB_in_gaa([]))
   U24_gaa(appcB_out_gaa([])) -> appcB_out_gaa([])

The set Q consists of the following terms:

   appcB_in_aaa
   U24_aaa(x0)
   U25_aaa(x0)
   appcB_in_gaa(x0)
   U24_gaa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(196) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.


Strictly oriented rules of the TRS R:

   U24_aaa(appcB_out_gaa([])) -> appcB_out_aaa

Used ordering: Polynomial interpretation [POLO]:

   POL(PC_IN_AAAA) = 0
   POL(U24_aaa(x_1)) = 2*x_1
   POL(U24_gaa(x_1)) = x_1
   POL(U25_aaa(x_1)) = 2*x_1
   POL(U6_AAAA(x_1)) = x_1
   POL(U8_AAAA(x_1)) = 2*x_1
   POL([]) = 0
   POL(appcB_in_aaa) = 0
   POL(appcB_in_gaa(x_1)) = 2*x_1
   POL(appcB_out_aaa) = 0
   POL(appcB_out_gaa(x_1)) = 1 + x_1


----------------------------------------

(197)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PC_IN_AAAA -> U6_AAAA(appcB_in_aaa)
   U6_AAAA(appcB_out_aaa) -> U8_AAAA(appcB_in_aaa)
   U8_AAAA(appcB_out_aaa) -> PC_IN_AAAA

The TRS R consists of the following rules:

   appcB_in_aaa -> appcB_out_aaa
   appcB_in_aaa -> U24_aaa(appcB_in_gaa([]))
   appcB_in_aaa -> U25_aaa(appcB_in_aaa)
   U25_aaa(appcB_out_aaa) -> appcB_out_aaa
   appcB_in_gaa([]) -> U24_gaa(appcB_in_gaa([]))
   U24_gaa(appcB_out_gaa([])) -> appcB_out_gaa([])

The set Q consists of the following terms:

   appcB_in_aaa
   U24_aaa(x0)
   U25_aaa(x0)
   appcB_in_gaa(x0)
   U24_gaa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(198) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.


Strictly oriented rules of the TRS R:

   U24_gaa(appcB_out_gaa([])) -> appcB_out_gaa([])

Used ordering: Polynomial interpretation [POLO]:

   POL(PC_IN_AAAA) = 0
   POL(U24_aaa(x_1)) = x_1
   POL(U24_gaa(x_1)) = 2*x_1
   POL(U25_aaa(x_1)) = 2*x_1
   POL(U6_AAAA(x_1)) = 2*x_1
   POL(U8_AAAA(x_1)) = 2*x_1
   POL([]) = 0
   POL(appcB_in_aaa) = 0
   POL(appcB_in_gaa(x_1)) = 2*x_1
   POL(appcB_out_aaa) = 0
   POL(appcB_out_gaa(x_1)) = 1 + 2*x_1


----------------------------------------

(199)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PC_IN_AAAA -> U6_AAAA(appcB_in_aaa)
   U6_AAAA(appcB_out_aaa) -> U8_AAAA(appcB_in_aaa)
   U8_AAAA(appcB_out_aaa) -> PC_IN_AAAA

The TRS R consists of the following rules:

   appcB_in_aaa -> appcB_out_aaa
   appcB_in_aaa -> U24_aaa(appcB_in_gaa([]))
   appcB_in_aaa -> U25_aaa(appcB_in_aaa)
   U25_aaa(appcB_out_aaa) -> appcB_out_aaa
   appcB_in_gaa([]) -> U24_gaa(appcB_in_gaa([]))

The set Q consists of the following terms:

   appcB_in_aaa
   U24_aaa(x0)
   U25_aaa(x0)
   appcB_in_gaa(x0)
   U24_gaa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(200) MRRProof (EQUIVALENT)
By using the rule removal processor [LPAR04] with the following ordering, at least one Dependency Pair or term rewrite system rule of this QDP problem can be strictly oriented.


Strictly oriented rules of the TRS R:

   appcB_in_aaa -> U24_aaa(appcB_in_gaa([]))

Used ordering: Polynomial interpretation [POLO]:

   POL(PC_IN_AAAA) = 1
   POL(U24_aaa(x_1)) = x_1
   POL(U24_gaa(x_1)) = 2*x_1
   POL(U25_aaa(x_1)) = x_1
   POL(U6_AAAA(x_1)) = x_1
   POL(U8_AAAA(x_1)) = x_1
   POL([]) = 0
   POL(appcB_in_aaa) = 1
   POL(appcB_in_gaa(x_1)) = 2*x_1
   POL(appcB_out_aaa) = 1


----------------------------------------

(201)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PC_IN_AAAA -> U6_AAAA(appcB_in_aaa)
   U6_AAAA(appcB_out_aaa) -> U8_AAAA(appcB_in_aaa)
   U8_AAAA(appcB_out_aaa) -> PC_IN_AAAA

The TRS R consists of the following rules:

   appcB_in_aaa -> appcB_out_aaa
   appcB_in_aaa -> U25_aaa(appcB_in_aaa)
   U25_aaa(appcB_out_aaa) -> appcB_out_aaa
   appcB_in_gaa([]) -> U24_gaa(appcB_in_gaa([]))

The set Q consists of the following terms:

   appcB_in_aaa
   U24_aaa(x0)
   U25_aaa(x0)
   appcB_in_gaa(x0)
   U24_gaa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(202) UsableRulesProof (EQUIVALENT)
As all Q-normal forms are R-normal forms we are in the innermost case. Hence, by the usable rules processor [LPAR04] we can delete all non-usable rules [FROCOS05] from R.
----------------------------------------

(203)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PC_IN_AAAA -> U6_AAAA(appcB_in_aaa)
   U6_AAAA(appcB_out_aaa) -> U8_AAAA(appcB_in_aaa)
   U8_AAAA(appcB_out_aaa) -> PC_IN_AAAA

The TRS R consists of the following rules:

   appcB_in_aaa -> appcB_out_aaa
   appcB_in_aaa -> U25_aaa(appcB_in_aaa)
   U25_aaa(appcB_out_aaa) -> appcB_out_aaa

The set Q consists of the following terms:

   appcB_in_aaa
   U24_aaa(x0)
   U25_aaa(x0)
   appcB_in_gaa(x0)
   U24_gaa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(204) QReductionProof (EQUIVALENT)
We deleted the following terms from Q as each root-symbol of these terms does neither occur in P nor in R.[THIEMANN].

   U24_aaa(x0)
   appcB_in_gaa(x0)
   U24_gaa(x0)


----------------------------------------

(205)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   PC_IN_AAAA -> U6_AAAA(appcB_in_aaa)
   U6_AAAA(appcB_out_aaa) -> U8_AAAA(appcB_in_aaa)
   U8_AAAA(appcB_out_aaa) -> PC_IN_AAAA

The TRS R consists of the following rules:

   appcB_in_aaa -> appcB_out_aaa
   appcB_in_aaa -> U25_aaa(appcB_in_aaa)
   U25_aaa(appcB_out_aaa) -> appcB_out_aaa

The set Q consists of the following terms:

   appcB_in_aaa
   U25_aaa(x0)

We have to consider all (P,Q,R)-chains.
----------------------------------------

(206)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPA_IN_GGA([], X1, cons(X2, X3)) -> APPA_IN_GGA([], X1, X3)

The TRS R consists of the following rules:

   appcA_in_gga(nil, X1, X1) -> appcA_out_gga(nil, X1, X1)
   appcA_in_gga([], X1, cons(X2, X3)) -> U22_gga(X1, X2, X3, appcA_in_gga([], X1, X3))
   appcA_in_gga(.(X1, X2), X3, cons(X1, X4)) -> U23_gga(X1, X2, X3, X4, appcA_in_gga(X2, X3, X4))
   U23_gga(X1, X2, X3, X4, appcA_out_gga(X2, X3, X4)) -> appcA_out_gga(.(X1, X2), X3, cons(X1, X4))
   U22_gga(X1, X2, X3, appcA_out_gga([], X1, X3)) -> appcA_out_gga([], X1, cons(X2, X3))
   appcB_in_aaa(nil, X1, X1) -> appcB_out_aaa(nil, X1, X1)
   appcB_in_aaa([], X1, cons(X2, X3)) -> U24_aaa(X1, X2, X3, appcB_in_gaa([], X1, X3))
   appcB_in_gaa(nil, X1, X1) -> appcB_out_gaa(nil, X1, X1)
   appcB_in_gaa([], X1, cons(X2, X3)) -> U24_gaa(X1, X2, X3, appcB_in_gaa([], X1, X3))
   appcB_in_gaa(.(X1, X2), X3, cons(X1, X4)) -> U25_gaa(X1, X2, X3, X4, appcB_in_gaa(X2, X3, X4))
   U25_gaa(X1, X2, X3, X4, appcB_out_gaa(X2, X3, X4)) -> appcB_out_gaa(.(X1, X2), X3, cons(X1, X4))
   U24_gaa(X1, X2, X3, appcB_out_gaa([], X1, X3)) -> appcB_out_gaa([], X1, cons(X2, X3))
   U24_aaa(X1, X2, X3, appcB_out_gaa([], X1, X3)) -> appcB_out_aaa([], X1, cons(X2, X3))
   appcB_in_aaa(.(X1, X2), X3, cons(X1, X4)) -> U25_aaa(X1, X2, X3, X4, appcB_in_aaa(X2, X3, X4))
   U25_aaa(X1, X2, X3, X4, appcB_out_aaa(X2, X3, X4)) -> appcB_out_aaa(.(X1, X2), X3, cons(X1, X4))
   appcB_in_gga(nil, X1, X1) -> appcB_out_gga(nil, X1, X1)
   appcB_in_gga([], X1, cons(X2, X3)) -> U24_gga(X1, X2, X3, appcB_in_gga([], X1, X3))
   appcB_in_gga(.(X1, X2), X3, cons(X1, X4)) -> U25_gga(X1, X2, X3, X4, appcB_in_gga(X2, X3, X4))
   U25_gga(X1, X2, X3, X4, appcB_out_gga(X2, X3, X4)) -> appcB_out_gga(.(X1, X2), X3, cons(X1, X4))
   U24_gga(X1, X2, X3, appcB_out_gga([], X1, X3)) -> appcB_out_gga([], X1, cons(X2, X3))

The argument filtering Pi contains the following mapping:
cons(x1, x2)  =  cons(x1, x2)

nil  =  nil

[]  =  []

.(x1, x2)  =  .(x1, x2)

appcA_in_gga(x1, x2, x3)  =  appcA_in_gga(x1, x2)

appcA_out_gga(x1, x2, x3)  =  appcA_out_gga(x1, x2)

U22_gga(x1, x2, x3, x4)  =  U22_gga(x1, x4)

U23_gga(x1, x2, x3, x4, x5)  =  U23_gga(x1, x2, x3, x5)

appcB_in_aaa(x1, x2, x3)  =  appcB_in_aaa

appcB_out_aaa(x1, x2, x3)  =  appcB_out_aaa

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

appcB_in_gaa(x1, x2, x3)  =  appcB_in_gaa(x1)

appcB_out_gaa(x1, x2, x3)  =  appcB_out_gaa(x1)

U24_gaa(x1, x2, x3, x4)  =  U24_gaa(x4)

U25_gaa(x1, x2, x3, x4, x5)  =  U25_gaa(x1, x2, x5)

U25_aaa(x1, x2, x3, x4, x5)  =  U25_aaa(x5)

appcB_in_gga(x1, x2, x3)  =  appcB_in_gga(x1, x2)

appcB_out_gga(x1, x2, x3)  =  appcB_out_gga(x1, x2)

U24_gga(x1, x2, x3, x4)  =  U24_gga(x1, x4)

U25_gga(x1, x2, x3, x4, x5)  =  U25_gga(x1, x2, x3, x5)

APPA_IN_GGA(x1, x2, x3)  =  APPA_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(207) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(208)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPA_IN_GGA([], X1, cons(X2, X3)) -> APPA_IN_GGA([], X1, X3)

R is empty.
The argument filtering Pi contains the following mapping:
cons(x1, x2)  =  cons(x1, x2)

[]  =  []

APPA_IN_GGA(x1, x2, x3)  =  APPA_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(209)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPA_IN_GGA(.(X1, X2), X3, cons(X1, X4)) -> APPA_IN_GGA(X2, X3, X4)

The TRS R consists of the following rules:

   appcA_in_gga(nil, X1, X1) -> appcA_out_gga(nil, X1, X1)
   appcA_in_gga([], X1, cons(X2, X3)) -> U22_gga(X1, X2, X3, appcA_in_gga([], X1, X3))
   appcA_in_gga(.(X1, X2), X3, cons(X1, X4)) -> U23_gga(X1, X2, X3, X4, appcA_in_gga(X2, X3, X4))
   U23_gga(X1, X2, X3, X4, appcA_out_gga(X2, X3, X4)) -> appcA_out_gga(.(X1, X2), X3, cons(X1, X4))
   U22_gga(X1, X2, X3, appcA_out_gga([], X1, X3)) -> appcA_out_gga([], X1, cons(X2, X3))
   appcB_in_aaa(nil, X1, X1) -> appcB_out_aaa(nil, X1, X1)
   appcB_in_aaa([], X1, cons(X2, X3)) -> U24_aaa(X1, X2, X3, appcB_in_gaa([], X1, X3))
   appcB_in_gaa(nil, X1, X1) -> appcB_out_gaa(nil, X1, X1)
   appcB_in_gaa([], X1, cons(X2, X3)) -> U24_gaa(X1, X2, X3, appcB_in_gaa([], X1, X3))
   appcB_in_gaa(.(X1, X2), X3, cons(X1, X4)) -> U25_gaa(X1, X2, X3, X4, appcB_in_gaa(X2, X3, X4))
   U25_gaa(X1, X2, X3, X4, appcB_out_gaa(X2, X3, X4)) -> appcB_out_gaa(.(X1, X2), X3, cons(X1, X4))
   U24_gaa(X1, X2, X3, appcB_out_gaa([], X1, X3)) -> appcB_out_gaa([], X1, cons(X2, X3))
   U24_aaa(X1, X2, X3, appcB_out_gaa([], X1, X3)) -> appcB_out_aaa([], X1, cons(X2, X3))
   appcB_in_aaa(.(X1, X2), X3, cons(X1, X4)) -> U25_aaa(X1, X2, X3, X4, appcB_in_aaa(X2, X3, X4))
   U25_aaa(X1, X2, X3, X4, appcB_out_aaa(X2, X3, X4)) -> appcB_out_aaa(.(X1, X2), X3, cons(X1, X4))
   appcB_in_gga(nil, X1, X1) -> appcB_out_gga(nil, X1, X1)
   appcB_in_gga([], X1, cons(X2, X3)) -> U24_gga(X1, X2, X3, appcB_in_gga([], X1, X3))
   appcB_in_gga(.(X1, X2), X3, cons(X1, X4)) -> U25_gga(X1, X2, X3, X4, appcB_in_gga(X2, X3, X4))
   U25_gga(X1, X2, X3, X4, appcB_out_gga(X2, X3, X4)) -> appcB_out_gga(.(X1, X2), X3, cons(X1, X4))
   U24_gga(X1, X2, X3, appcB_out_gga([], X1, X3)) -> appcB_out_gga([], X1, cons(X2, X3))

The argument filtering Pi contains the following mapping:
cons(x1, x2)  =  cons(x1, x2)

nil  =  nil

[]  =  []

.(x1, x2)  =  .(x1, x2)

appcA_in_gga(x1, x2, x3)  =  appcA_in_gga(x1, x2)

appcA_out_gga(x1, x2, x3)  =  appcA_out_gga(x1, x2)

U22_gga(x1, x2, x3, x4)  =  U22_gga(x1, x4)

U23_gga(x1, x2, x3, x4, x5)  =  U23_gga(x1, x2, x3, x5)

appcB_in_aaa(x1, x2, x3)  =  appcB_in_aaa

appcB_out_aaa(x1, x2, x3)  =  appcB_out_aaa

U24_aaa(x1, x2, x3, x4)  =  U24_aaa(x4)

appcB_in_gaa(x1, x2, x3)  =  appcB_in_gaa(x1)

appcB_out_gaa(x1, x2, x3)  =  appcB_out_gaa(x1)

U24_gaa(x1, x2, x3, x4)  =  U24_gaa(x4)

U25_gaa(x1, x2, x3, x4, x5)  =  U25_gaa(x1, x2, x5)

U25_aaa(x1, x2, x3, x4, x5)  =  U25_aaa(x5)

appcB_in_gga(x1, x2, x3)  =  appcB_in_gga(x1, x2)

appcB_out_gga(x1, x2, x3)  =  appcB_out_gga(x1, x2)

U24_gga(x1, x2, x3, x4)  =  U24_gga(x1, x4)

U25_gga(x1, x2, x3, x4, x5)  =  U25_gga(x1, x2, x3, x5)

APPA_IN_GGA(x1, x2, x3)  =  APPA_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains
----------------------------------------

(210) UsableRulesProof (EQUIVALENT)
For (infinitary) constructor rewriting [LOPSTR] we can delete all non-usable rules from R.
----------------------------------------

(211)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   APPA_IN_GGA(.(X1, X2), X3, cons(X1, X4)) -> APPA_IN_GGA(X2, X3, X4)

R is empty.
The argument filtering Pi contains the following mapping:
cons(x1, x2)  =  cons(x1, x2)

.(x1, x2)  =  .(x1, x2)

APPA_IN_GGA(x1, x2, x3)  =  APPA_IN_GGA(x1, x2)


We have to consider all (P,R,Pi)-chains