YES
proof of /hpcwork/ff862203/termcomp25/benchmarks/SX9GF.pl
# AProVE Commit ID: 6a57d5d12fc64508e0a03bd649c96e4df8acddf2 jan-christoph 20250809 unpublished dirty


Left Termination of the query pattern

q(g)

w.r.t. the given Prolog program could successfully be proven:

(0) Prolog
(1) PrologToDTProblemTransformerProof [SOUND, 0 ms]
(2) TRIPLES
(3) TriplesToPiDPProof [SOUND, 0 ms]
(4) PiDP
(5) DependencyGraphProof [EQUIVALENT, 0 ms]
(6) PiDP
(7) PiDPToQDPProof [EQUIVALENT, 0 ms]
(8) QDP
(9) QDPSizeChangeProof [EQUIVALENT, 0 ms]
(10) YES


----------------------------------------

(0)
Obligation:
Clauses:

q(X) :- ','(not_zero(X), ','(p(X, Y), q(Y))).
p(0, 0).
p(s(X), X).
zero(0).
not_zero(X) :- ','(zero(X), ','(!, failure(a))).
not_zero(X1).
failure(b).


Query: q(g)
----------------------------------------

(1) PrologToDTProblemTransformerProof (SOUND)
Built DT problem from termination graph DT10.

{
    "root": 2,
    "program": {
        "directives": [],
        "clauses": [
            [
                "(q X)",
                "(',' (not_zero X) (',' (p X Y) (q Y)))"
            ],
            [
                "(p (0) (0))",
                null
            ],
            [
                "(p (s X) X)",
                null
            ],
            [
                "(zero (0))",
                null
            ],
            [
                "(not_zero X)",
                "(',' (zero X) (',' (!) (failure (a))))"
            ],
            [
                "(not_zero X1)",
                null
            ],
            [
                "(failure (b))",
                null
            ]
        ]
    },
    "graph": {
        "nodes": {
            "44": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (',' (zero T6) (',' (!_2) (failure (a)))) (',' (p T6 X4) (q X4)))"
                    },
                    {
                        "clause": 5,
                        "scope": 2,
                        "term": "(',' (not_zero T6) (',' (p T6 X4) (q X4)))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": ["X4"],
                    "exprvars": []
                }
            },
            "45": {
                "goal": [
                    {
                        "clause": 3,
                        "scope": 3,
                        "term": "(',' (',' (zero T6) (',' (!_2) (failure (a)))) (',' (p T6 X4) (q X4)))"
                    },
                    {
                        "clause": -1,
                        "scope": 3,
                        "term": null
                    },
                    {
                        "clause": 5,
                        "scope": 2,
                        "term": "(',' (not_zero T6) (',' (p T6 X4) (q X4)))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": ["X4"],
                    "exprvars": []
                }
            },
            "46": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": -1,
                        "term": "(',' (',' (!_2) (failure (a))) (',' (p (0) X4) (q X4)))"
                    },
                    {
                        "clause": -1,
                        "scope": 3,
                        "term": null
                    },
                    {
                        "clause": 5,
                        "scope": 2,
                        "term": "(',' (not_zero (0)) (',' (p (0) X4) (q X4)))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X4"],
                    "exprvars": []
                }
            },
            "57": {
                "goal": [{
                    "clause": 6,
                    "scope": 4,
                    "term": "(',' (failure (a)) (',' (p (0) X4) (q X4)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X4"],
                    "exprvars": []
                }
            },
            "47": {
                "goal": [
                    {
                        "clause": -1,
                        "scope": 3,
                        "term": null
                    },
                    {
                        "clause": 5,
                        "scope": 2,
                        "term": "(',' (not_zero T6) (',' (p T6 X4) (q X4)))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(zero T6)",
                        "(zero (0))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": ["X4"],
                    "exprvars": []
                }
            },
            "48": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (failure (a)) (',' (p (0) X4) (q X4)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": ["X4"],
                    "exprvars": []
                }
            },
            "59": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "19": {
                "goal": [{
                    "clause": 0,
                    "scope": 1,
                    "term": "(q T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "type": "Nodes",
            "2": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(q T1)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T1"],
                    "free": [],
                    "exprvars": []
                }
            },
            "70": {
                "goal": [
                    {
                        "clause": 1,
                        "scope": 5,
                        "term": "(',' (p T9 X4) (q X4))"
                    },
                    {
                        "clause": 2,
                        "scope": 5,
                        "term": "(',' (p T9 X4) (q X4))"
                    }
                ],
                "kb": {
                    "nonunifying": [[
                        "(zero T9)",
                        "(zero (0))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": ["X4"],
                    "exprvars": []
                }
            },
            "71": {
                "goal": [{
                    "clause": 2,
                    "scope": 5,
                    "term": "(',' (p T9 X4) (q X4))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(zero T9)",
                        "(zero (0))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": ["X4"],
                    "exprvars": []
                }
            },
            "61": {
                "goal": [{
                    "clause": 5,
                    "scope": 2,
                    "term": "(',' (not_zero T6) (',' (p T6 X4) (q X4)))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(zero T6)",
                        "(zero (0))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T6"],
                    "free": ["X4"],
                    "exprvars": []
                }
            },
            "72": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(q T12)"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T12"],
                    "free": [],
                    "exprvars": []
                }
            },
            "73": {
                "goal": [],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": [],
                    "free": [],
                    "exprvars": []
                }
            },
            "41": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (not_zero T3) (',' (p T3 X4) (q X4)))"
                }],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": ["X4"],
                    "exprvars": []
                }
            },
            "63": {
                "goal": [{
                    "clause": -1,
                    "scope": -1,
                    "term": "(',' (p T9 X4) (q X4))"
                }],
                "kb": {
                    "nonunifying": [[
                        "(zero T9)",
                        "(zero (0))"
                    ]],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T9"],
                    "free": ["X4"],
                    "exprvars": []
                }
            },
            "42": {
                "goal": [
                    {
                        "clause": 4,
                        "scope": 2,
                        "term": "(',' (not_zero T3) (',' (p T3 X4) (q X4)))"
                    },
                    {
                        "clause": 5,
                        "scope": 2,
                        "term": "(',' (not_zero T3) (',' (p T3 X4) (q X4)))"
                    }
                ],
                "kb": {
                    "nonunifying": [],
                    "intvars": {},
                    "arithmetic": {
                        "type": "PlainIntegerRelationState",
                        "relations": []
                    },
                    "ground": ["T3"],
                    "free": ["X4"],
                    "exprvars": []
                }
            }
        },
        "edges": [
            {
                "from": 2,
                "to": 19,
                "label": "CASE"
            },
            {
                "from": 19,
                "to": 41,
                "label": "ONLY EVAL with clause\nq(X3) :- ','(not_zero(X3), ','(p(X3, X4), q(X4))).\nand substitutionT1 -> T3,\nX3 -> T3"
            },
            {
                "from": 41,
                "to": 42,
                "label": "CASE"
            },
            {
                "from": 42,
                "to": 44,
                "label": "ONLY EVAL with clause\nnot_zero(X7) :- ','(zero(X7), ','(!_2, failure(a))).\nand substitutionT3 -> T6,\nX7 -> T6"
            },
            {
                "from": 44,
                "to": 45,
                "label": "CASE"
            },
            {
                "from": 45,
                "to": 46,
                "label": "EVAL with clause\nzero(0).\nand substitutionT6 -> 0"
            },
            {
                "from": 45,
                "to": 47,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 46,
                "to": 48,
                "label": "CUT"
            },
            {
                "from": 47,
                "to": 61,
                "label": "FAILURE"
            },
            {
                "from": 48,
                "to": 57,
                "label": "CASE"
            },
            {
                "from": 57,
                "to": 59,
                "label": "BACKTRACK\nfor clause: failure(b)because of non-unification"
            },
            {
                "from": 61,
                "to": 63,
                "label": "ONLY EVAL with clause\nnot_zero(X16).\nand substitutionT6 -> T9,\nX16 -> T9"
            },
            {
                "from": 63,
                "to": 70,
                "label": "CASE"
            },
            {
                "from": 70,
                "to": 71,
                "label": "BACKTRACK\nfor clause: p(0, 0)\nwith clash: (zero(T9), zero(0))"
            },
            {
                "from": 71,
                "to": 72,
                "label": "EVAL with clause\np(s(X22), X22).\nand substitutionX22 -> T12,\nT9 -> s(T12),\nX4 -> T12"
            },
            {
                "from": 71,
                "to": 73,
                "label": "EVAL-BACKTRACK"
            },
            {
                "from": 72,
                "to": 2,
                "label": "INSTANCE with matching:\nT1 -> T12"
            }
        ],
        "type": "Graph"
    }
}

----------------------------------------

(2)
Obligation:
Triples:

qA(s(X1)) :- qA(X1).

Clauses:

qcA(s(X1)) :- qcA(X1).

Afs:

qA(x1)  =  qA(x1)


----------------------------------------

(3) TriplesToPiDPProof (SOUND)
We use the technique of [DT09]. With regard to the inferred argument filtering the predicates were used in the following modes:

qA_in_1: (b)

Transforming TRIPLES into the following Term Rewriting System:

Pi DP problem:
The TRS P consists of the following rules:

   QA_IN_G(s(X1)) -> U1_G(X1, qA_in_g(X1))
   QA_IN_G(s(X1)) -> QA_IN_G(X1)

R is empty.
Pi is empty.
We have to consider all (P,R,Pi)-chains


Infinitary Constructor Rewriting Termination of PiDP implies Termination of TRIPLES



----------------------------------------

(4)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   QA_IN_G(s(X1)) -> U1_G(X1, qA_in_g(X1))
   QA_IN_G(s(X1)) -> QA_IN_G(X1)

R is empty.
Pi is empty.
We have to consider all (P,R,Pi)-chains
----------------------------------------

(5) DependencyGraphProof (EQUIVALENT)
The approximation of the Dependency Graph [LOPSTR] contains 1 SCC with 1 less node.
----------------------------------------

(6)
Obligation:
Pi DP problem:
The TRS P consists of the following rules:

   QA_IN_G(s(X1)) -> QA_IN_G(X1)

R is empty.
Pi is empty.
We have to consider all (P,R,Pi)-chains
----------------------------------------

(7) PiDPToQDPProof (EQUIVALENT)
Transforming (infinitary) constructor rewriting Pi-DP problem [LOPSTR] into ordinary QDP problem [LPAR04] by application of Pi.
----------------------------------------

(8)
Obligation:
Q DP problem:
The TRS P consists of the following rules:

   QA_IN_G(s(X1)) -> QA_IN_G(X1)

R is empty.
Q is empty.
We have to consider all (P,Q,R)-chains.
----------------------------------------

(9) QDPSizeChangeProof (EQUIVALENT)
By using the subterm criterion [SUBTERM_CRITERION] together with the size-change analysis [AAECC05] we have proven that there are no infinite chains for this DP problem. 

From the DPs we obtained the following set of size-change graphs:
*QA_IN_G(s(X1)) -> QA_IN_G(X1)
The graph contains the following edges 1 > 1


----------------------------------------

(10)
YES
